// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_mail.server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_only/cmd_mail.server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class AddRedisMailReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddRedisMailReq>
     _instance;
} _AddRedisMailReq_default_instance_;
class AddRedisMailRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddRedisMailRsp>
     _instance;
} _AddRedisMailRsp_default_instance_;
class DelRedisMailReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelRedisMailReq>
     _instance;
} _DelRedisMailReq_default_instance_;
class DelRedisMailRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DelRedisMailRsp>
     _instance;
} _DelRedisMailRsp_default_instance_;
class GetRedisMailReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetRedisMailReq>
     _instance;
} _GetRedisMailReq_default_instance_;
class GetRedisMailRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetRedisMailRsp>
     _instance;
} _GetRedisMailRsp_default_instance_;
class RedisMailChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RedisMailChangeNotify>
     _instance;
} _RedisMailChangeNotify_default_instance_;
class SendOfflineMsgReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SendOfflineMsgReq>
     _instance;
} _SendOfflineMsgReq_default_instance_;
class SendOfflineMsgRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SendOfflineMsgRsp>
     _instance;
} _SendOfflineMsgRsp_default_instance_;
class NewOfflineMsgNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NewOfflineMsgNotify>
     _instance;
} _NewOfflineMsgNotify_default_instance_;
class GetOfflineMsgReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetOfflineMsgReq>
     _instance;
} _GetOfflineMsgReq_default_instance_;
class GetOfflineMsgRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetOfflineMsgRsp>
     _instance;
} _GetOfflineMsgRsp_default_instance_;
class RemoveOfflineMsgNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RemoveOfflineMsgNotify>
     _instance;
} _RemoveOfflineMsgNotify_default_instance_;
class ClearOfflineMsgNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClearOfflineMsgNotify>
     _instance;
} _ClearOfflineMsgNotify_default_instance_;
class UpdateRedisMailReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateRedisMailReq>
     _instance;
} _UpdateRedisMailReq_default_instance_;
class UpdateRedisMailRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateRedisMailRsp>
     _instance;
} _UpdateRedisMailRsp_default_instance_;
class GetRedisMailTransactionStatusReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetRedisMailTransactionStatusReq>
     _instance;
} _GetRedisMailTransactionStatusReq_default_instance_;
class GetRedisMailTransactionStatusRsp_TransactionStatusMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetRedisMailTransactionStatusRsp::GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry>
     _instance;
} _GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry_default_instance_;
class GetRedisMailTransactionStatusRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetRedisMailTransactionStatusRsp>
     _instance;
} _GetRedisMailTransactionStatusRsp_default_instance_;
class ClearUpRedisMailNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClearUpRedisMailNotify>
     _instance;
} _ClearUpRedisMailNotify_default_instance_;
class CleanRedisMailNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CleanRedisMailNotify>
     _instance;
} _CleanRedisMailNotify_default_instance_;
class ResendRedisMailReq_MailBinMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResendRedisMailReq::ResendRedisMailReq_MailBinMapEntry>
     _instance;
} _ResendRedisMailReq_MailBinMapEntry_default_instance_;
class ResendRedisMailReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResendRedisMailReq>
     _instance;
} _ResendRedisMailReq_default_instance_;
class ResendRedisMailRsp_ResendStatusMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResendRedisMailRsp::ResendRedisMailRsp_ResendStatusMapEntry>
     _instance;
} _ResendRedisMailRsp_ResendStatusMapEntry_default_instance_;
class ResendRedisMailRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ResendRedisMailRsp>
     _instance;
} _ResendRedisMailRsp_default_instance_;

namespace protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[25];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRedisMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRedisMailReq, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRedisMailReq, mail_bin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRedisMailReq, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRedisMailReq, transaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRedisMailRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRedisMailRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRedisMailRsp, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRedisMailRsp, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddRedisMailRsp, transaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelRedisMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelRedisMailReq, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelRedisMailReq, mail_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelRedisMailReq, ticket_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelRedisMailRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelRedisMailRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelRedisMailRsp, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelRedisMailRsp, mail_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailReq, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailReq, get_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailReq, mail_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailReq, is_collectible_mail_transfered_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailRsp, mail_str_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailRsp, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailRsp, is_truncated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailRsp, get_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailRsp, is_collectible_mail_transfered_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailRsp, transaction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailRsp, page_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailRsp, total_page_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedisMailChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedisMailChangeNotify, update_mail_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RedisMailChangeNotify, del_mail_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendOfflineMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendOfflineMsgReq, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendOfflineMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendOfflineMsgRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendOfflineMsgRsp, ticket_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewOfflineMsgNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOfflineMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOfflineMsgReq, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOfflineMsgReq, is_login_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOfflineMsgRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOfflineMsgRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOfflineMsgRsp, last_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOfflineMsgRsp, offline_msg_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetOfflineMsgRsp, is_login_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveOfflineMsgNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveOfflineMsgNotify, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearOfflineMsgNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRedisMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRedisMailReq, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRedisMailReq, mail_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRedisMailRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRedisMailRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRedisMailRsp, op_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRedisMailRsp, mail_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailTransactionStatusReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailTransactionStatusReq, transaction_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailTransactionStatusRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailTransactionStatusRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRedisMailTransactionStatusRsp, transaction_status_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClearUpRedisMailNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CleanRedisMailNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResendRedisMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResendRedisMailReq, mail_bin_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResendRedisMailRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResendRedisMailRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResendRedisMailRsp, resend_status_map_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(AddRedisMailReq)},
  { 9, -1, sizeof(AddRedisMailRsp)},
  { 18, -1, sizeof(DelRedisMailReq)},
  { 26, -1, sizeof(DelRedisMailRsp)},
  { 34, -1, sizeof(GetRedisMailReq)},
  { 43, -1, sizeof(GetRedisMailRsp)},
  { 57, -1, sizeof(RedisMailChangeNotify)},
  { 64, -1, sizeof(SendOfflineMsgReq)},
  { 70, -1, sizeof(SendOfflineMsgRsp)},
  { 77, -1, sizeof(NewOfflineMsgNotify)},
  { 82, -1, sizeof(GetOfflineMsgReq)},
  { 89, -1, sizeof(GetOfflineMsgRsp)},
  { 98, -1, sizeof(RemoveOfflineMsgNotify)},
  { 104, -1, sizeof(ClearOfflineMsgNotify)},
  { 109, -1, sizeof(UpdateRedisMailReq)},
  { 116, -1, sizeof(UpdateRedisMailRsp)},
  { 124, -1, sizeof(GetRedisMailTransactionStatusReq)},
  { 130, -1, sizeof(GetRedisMailTransactionStatusRsp)},
  { 137, -1, sizeof(ClearUpRedisMailNotify)},
  { 142, -1, sizeof(CleanRedisMailNotify)},
  { 147, -1, sizeof(ResendRedisMailReq)},
  { 153, -1, sizeof(ResendRedisMailRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddRedisMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddRedisMailRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelRedisMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelRedisMailRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRedisMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRedisMailRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RedisMailChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendOfflineMsgReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendOfflineMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewOfflineMsgNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOfflineMsgReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetOfflineMsgRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoveOfflineMsgNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClearOfflineMsgNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateRedisMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateRedisMailRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRedisMailTransactionStatusReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRedisMailTransactionStatusRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClearUpRedisMailNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CleanRedisMailNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResendRedisMailReq_MailBinMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResendRedisMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResendRedisMailRsp_ResendStatusMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResendRedisMailRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "server_only/cmd_mail.server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[17].reflection = GetRedisMailTransactionStatusRsp::GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry::CreateReflection(file_level_metadata[17].descriptor, _GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[21].reflection = ResendRedisMailReq::ResendRedisMailReq_MailBinMapEntry::CreateReflection(file_level_metadata[21].descriptor, _ResendRedisMailReq_MailBinMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[23].reflection = ResendRedisMailRsp::ResendRedisMailRsp_ResendStatusMapEntry::CreateReflection(file_level_metadata[23].descriptor, _ResendRedisMailRsp_ResendStatusMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 25);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  ::proto::protobuf_server_5fonly_2fredis_5fdata_2eproto::InitDefaults();
  ::proto::protobuf_server_5fonly_2fenum_2eserver_2eproto::InitDefaults();
  _AddRedisMailReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddRedisMailReq_default_instance_);_AddRedisMailRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddRedisMailRsp_default_instance_);_DelRedisMailReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelRedisMailReq_default_instance_);_DelRedisMailRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DelRedisMailRsp_default_instance_);_GetRedisMailReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetRedisMailReq_default_instance_);_GetRedisMailRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetRedisMailRsp_default_instance_);_RedisMailChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RedisMailChangeNotify_default_instance_);_SendOfflineMsgReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SendOfflineMsgReq_default_instance_);_SendOfflineMsgRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SendOfflineMsgRsp_default_instance_);_NewOfflineMsgNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NewOfflineMsgNotify_default_instance_);_GetOfflineMsgReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetOfflineMsgReq_default_instance_);_GetOfflineMsgRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetOfflineMsgRsp_default_instance_);_RemoveOfflineMsgNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RemoveOfflineMsgNotify_default_instance_);_ClearOfflineMsgNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClearOfflineMsgNotify_default_instance_);_UpdateRedisMailReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateRedisMailReq_default_instance_);_UpdateRedisMailRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateRedisMailRsp_default_instance_);_GetRedisMailTransactionStatusReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetRedisMailTransactionStatusReq_default_instance_);_GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry_default_instance_);_GetRedisMailTransactionStatusRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetRedisMailTransactionStatusRsp_default_instance_);_ClearUpRedisMailNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClearUpRedisMailNotify_default_instance_);_CleanRedisMailNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CleanRedisMailNotify_default_instance_);_ResendRedisMailReq_MailBinMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResendRedisMailReq_MailBinMapEntry_default_instance_);_ResendRedisMailReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResendRedisMailReq_default_instance_);_ResendRedisMailRsp_ResendStatusMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResendRedisMailRsp_ResendStatusMapEntry_default_instance_);_ResendRedisMailRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ResendRedisMailRsp_default_instance_);_AddRedisMailReq_default_instance_._instance.get_mutable()->mail_bin_ = const_cast< ::proto::MailBin*>(
      ::proto::MailBin::internal_default_instance());
  _SendOfflineMsgReq_default_instance_._instance.get_mutable()->msg_ = const_cast< ::proto::OfflineMsgBin*>(
      ::proto::OfflineMsgBin::internal_default_instance());
  _GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry_default_instance_._instance.get_mutable());
  _GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ResendRedisMailReq_MailBinMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ResendRedisMailReq_MailBinMapEntry_default_instance_._instance.get_mutable());
  _ResendRedisMailReq_MailBinMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ResendRedisMailRsp_ResendStatusMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ResendRedisMailRsp_ResendStatusMapEntry_default_instance_._instance.get_mutable());
  _ResendRedisMailRsp_ResendStatusMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!server_only/cmd_mail.server.proto\022\005pro"
      "to\032#server_only/bin_common.server.proto\032"
      "\034server_only/redis_data.proto\032\035server_on"
      "ly/enum.server.proto\"\177\n\017AddRedisMailReq\022"
      "%\n\007op_type\030\001 \001(\0162\024.proto.MailAddOpType\022 "
      "\n\010mail_bin\030\002 \001(\0132\016.proto.MailBin\022\016\n\006tick"
      "et\030\003 \001(\t\022\023\n\013transaction\030\004 \001(\t\"n\n\017AddRedi"
      "sMailRsp\022\017\n\007retcode\030\001 \001(\005\022%\n\007op_type\030\002 \001"
      "(\0162\024.proto.MailAddOpType\022\016\n\006ticket\030\003 \001(\t"
      "\022\023\n\013transaction\030\004 \001(\t\"c\n\017DelRedisMailReq"
      "\022%\n\007op_type\030\001 \001(\0162\024.proto.MailDelOpType\022"
      "\024\n\014mail_id_list\030\002 \003(\r\022\023\n\013ticket_list\030\003 \003"
      "(\t\"_\n\017DelRedisMailRsp\022\017\n\007retcode\030\001 \001(\005\022%"
      "\n\007op_type\030\002 \001(\0162\024.proto.MailDelOpType\022\024\n"
      "\014mail_id_list\030\003 \003(\r\"\234\001\n\017GetRedisMailReq\022"
      "%\n\007op_type\030\001 \001(\0162\024.proto.MailGetOPType\022$"
      "\n\010get_type\030\002 \001(\0162\022.proto.MailGetType\022\024\n\014"
      "mail_id_list\030\003 \003(\r\022&\n\036is_collectible_mai"
      "l_transfered\030\004 \001(\010\"\207\002\n\017GetRedisMailRsp\022\017"
      "\n\007retcode\030\001 \001(\005\022\025\n\rmail_str_list\030\002 \003(\014\022%"
      "\n\007op_type\030\003 \001(\0162\024.proto.MailGetOPType\022\024\n"
      "\014is_truncated\030\004 \001(\010\022$\n\010get_type\030\005 \001(\0162\022."
      "proto.MailGetType\022&\n\036is_collectible_mail"
      "_transfered\030\006 \001(\010\022\023\n\013transaction\030\007 \001(\t\022\022"
      "\n\npage_index\030\010 \001(\r\022\030\n\020total_page_count\030\t"
      " \001(\r\"a\n\025RedisMailChangeNotify\022.\n\020update_"
      "mail_list\030\001 \003(\0132\024.proto.MailRedisData\022\030\n"
      "\020del_mail_id_list\030\002 \003(\r\"6\n\021SendOfflineMs"
      "gReq\022!\n\003msg\030\001 \001(\0132\024.proto.OfflineMsgBin\""
      "4\n\021SendOfflineMsgRsp\022\017\n\007retcode\030\001 \001(\005\022\016\n"
      "\006ticket\030\002 \001(\t\"\025\n\023NewOfflineMsgNotify\"3\n\020"
      "GetOfflineMsgReq\022\r\n\005index\030\001 \001(\r\022\020\n\010is_lo"
      "gin\030\002 \001(\010\"y\n\020GetOfflineMsgRsp\022\017\n\007retcode"
      "\030\001 \001(\005\022\022\n\nlast_index\030\002 \001(\r\022.\n\020offline_ms"
      "g_list\030\003 \003(\0132\024.proto.OfflineMsgBin\022\020\n\010is"
      "_login\030\004 \001(\010\"\'\n\026RemoveOfflineMsgNotify\022\r"
      "\n\005index\030\001 \001(\r\"\027\n\025ClearOfflineMsgNotify\"T"
      "\n\022UpdateRedisMailReq\022(\n\007op_type\030\001 \001(\0162\027."
      "proto.MailUpdateOpType\022\024\n\014mail_id_list\030\002"
      " \003(\r\"e\n\022UpdateRedisMailRsp\022\017\n\007retcode\030\001 "
      "\001(\005\022(\n\007op_type\030\002 \001(\0162\027.proto.MailUpdateO"
      "pType\022\024\n\014mail_id_list\030\003 \003(\r\"<\n GetRedisM"
      "ailTransactionStatusReq\022\030\n\020transaction_l"
      "ist\030\002 \003(\t\"\323\001\n GetRedisMailTransactionSta"
      "tusRsp\022\017\n\007retcode\030\001 \001(\005\022a\n\026transaction_s"
      "tatus_map\030\002 \003(\0132A.proto.GetRedisMailTran"
      "sactionStatusRsp.TransactionStatusMapEnt"
      "ry\032;\n\031TransactionStatusMapEntry\022\013\n\003key\030\001"
      " \001(\t\022\r\n\005value\030\002 \001(\010:\0028\001\"\030\n\026ClearUpRedisM"
      "ailNotify\"\026\n\024CleanRedisMailNotify\"\230\001\n\022Re"
      "sendRedisMailReq\022\?\n\014mail_bin_map\030\001 \003(\0132)"
      ".proto.ResendRedisMailReq.MailBinMapEntr"
      "y\032A\n\017MailBinMapEntry\022\013\n\003key\030\001 \001(\t\022\035\n\005val"
      "ue\030\002 \001(\0132\016.proto.MailBin:\0028\001\"\250\001\n\022ResendR"
      "edisMailRsp\022\017\n\007retcode\030\001 \001(\005\022I\n\021resend_s"
      "tatus_map\030\002 \003(\0132..proto.ResendRedisMailR"
      "sp.ResendStatusMapEntry\0326\n\024ResendStatusM"
      "apEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\010:\0028\001B"
      "(Z&github.com/teyvat-helper/hk4e-proto/p"
      "bb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2369);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_only/cmd_mail.server.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::AddDescriptors();
  ::proto::protobuf_server_5fonly_2fredis_5fdata_2eproto::AddDescriptors();
  ::proto::protobuf_server_5fonly_2fenum_2eserver_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddRedisMailReq::kOpTypeFieldNumber;
const int AddRedisMailReq::kMailBinFieldNumber;
const int AddRedisMailReq::kTicketFieldNumber;
const int AddRedisMailReq::kTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddRedisMailReq::AddRedisMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddRedisMailReq)
}
AddRedisMailReq::AddRedisMailReq(const AddRedisMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ticket().size() > 0) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transaction().size() > 0) {
    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  if (from.has_mail_bin()) {
    mail_bin_ = new ::proto::MailBin(*from.mail_bin_);
  } else {
    mail_bin_ = NULL;
  }
  op_type_ = from.op_type_;
  // @@protoc_insertion_point(copy_constructor:proto.AddRedisMailReq)
}

void AddRedisMailReq::SharedCtor() {
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mail_bin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&mail_bin_)) + sizeof(op_type_));
  _cached_size_ = 0;
}

AddRedisMailReq::~AddRedisMailReq() {
  // @@protoc_insertion_point(destructor:proto.AddRedisMailReq)
  SharedDtor();
}

void AddRedisMailReq::SharedDtor() {
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete mail_bin_;
}

void AddRedisMailReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddRedisMailReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddRedisMailReq& AddRedisMailReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddRedisMailReq* AddRedisMailReq::New(::google::protobuf::Arena* arena) const {
  AddRedisMailReq* n = new AddRedisMailReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddRedisMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && mail_bin_ != NULL) {
    delete mail_bin_;
  }
  mail_bin_ = NULL;
  op_type_ = 0;
  _internal_metadata_.Clear();
}

bool AddRedisMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddRedisMailReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MailAddOpType op_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::MailAddOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MailBin mail_bin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mail_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ticket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ticket().data(), static_cast<int>(this->ticket().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AddRedisMailReq.ticket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transaction = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transaction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transaction().data(), static_cast<int>(this->transaction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AddRedisMailReq.transaction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddRedisMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddRedisMailReq)
  return false;
#undef DO_
}

void AddRedisMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MailAddOpType op_type = 1;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op_type(), output);
  }

  // .proto.MailBin mail_bin = 2;
  if (this->has_mail_bin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->mail_bin_, output);
  }

  // string ticket = 3;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AddRedisMailReq.ticket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ticket(), output);
  }

  // string transaction = 4;
  if (this->transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transaction().data(), static_cast<int>(this->transaction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AddRedisMailReq.transaction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->transaction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddRedisMailReq)
}

::google::protobuf::uint8* AddRedisMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MailAddOpType op_type = 1;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op_type(), target);
  }

  // .proto.MailBin mail_bin = 2;
  if (this->has_mail_bin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->mail_bin_, deterministic, target);
  }

  // string ticket = 3;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AddRedisMailReq.ticket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ticket(), target);
  }

  // string transaction = 4;
  if (this->transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transaction().data(), static_cast<int>(this->transaction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AddRedisMailReq.transaction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->transaction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddRedisMailReq)
  return target;
}

size_t AddRedisMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddRedisMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ticket = 3;
  if (this->ticket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticket());
  }

  // string transaction = 4;
  if (this->transaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transaction());
  }

  // .proto.MailBin mail_bin = 2;
  if (this->has_mail_bin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mail_bin_);
  }

  // .proto.MailAddOpType op_type = 1;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddRedisMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddRedisMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRedisMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddRedisMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddRedisMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddRedisMailReq)
    MergeFrom(*source);
  }
}

void AddRedisMailReq::MergeFrom(const AddRedisMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddRedisMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticket().size() > 0) {

    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  if (from.transaction().size() > 0) {

    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  if (from.has_mail_bin()) {
    mutable_mail_bin()->::proto::MailBin::MergeFrom(from.mail_bin());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void AddRedisMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddRedisMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRedisMailReq::CopyFrom(const AddRedisMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddRedisMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRedisMailReq::IsInitialized() const {
  return true;
}

void AddRedisMailReq::Swap(AddRedisMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddRedisMailReq::InternalSwap(AddRedisMailReq* other) {
  using std::swap;
  ticket_.Swap(&other->ticket_);
  transaction_.Swap(&other->transaction_);
  swap(mail_bin_, other->mail_bin_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddRedisMailReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddRedisMailReq

// .proto.MailAddOpType op_type = 1;
void AddRedisMailReq::clear_op_type() {
  op_type_ = 0;
}
::proto::MailAddOpType AddRedisMailReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailReq.op_type)
  return static_cast< ::proto::MailAddOpType >(op_type_);
}
void AddRedisMailReq::set_op_type(::proto::MailAddOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRedisMailReq.op_type)
}

// .proto.MailBin mail_bin = 2;
bool AddRedisMailReq::has_mail_bin() const {
  return this != internal_default_instance() && mail_bin_ != NULL;
}
void AddRedisMailReq::clear_mail_bin() {
  if (GetArenaNoVirtual() == NULL && mail_bin_ != NULL) delete mail_bin_;
  mail_bin_ = NULL;
}
const ::proto::MailBin& AddRedisMailReq::mail_bin() const {
  const ::proto::MailBin* p = mail_bin_;
  // @@protoc_insertion_point(field_get:proto.AddRedisMailReq.mail_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MailBin*>(
      &::proto::_MailBin_default_instance_);
}
::proto::MailBin* AddRedisMailReq::mutable_mail_bin() {
  
  if (mail_bin_ == NULL) {
    mail_bin_ = new ::proto::MailBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddRedisMailReq.mail_bin)
  return mail_bin_;
}
::proto::MailBin* AddRedisMailReq::release_mail_bin() {
  // @@protoc_insertion_point(field_release:proto.AddRedisMailReq.mail_bin)
  
  ::proto::MailBin* temp = mail_bin_;
  mail_bin_ = NULL;
  return temp;
}
void AddRedisMailReq::set_allocated_mail_bin(::proto::MailBin* mail_bin) {
  delete mail_bin_;
  mail_bin_ = mail_bin;
  if (mail_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddRedisMailReq.mail_bin)
}

// string ticket = 3;
void AddRedisMailReq::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddRedisMailReq::ticket() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailReq.ticket)
  return ticket_.GetNoArena();
}
void AddRedisMailReq::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AddRedisMailReq.ticket)
}
#if LANG_CXX11
void AddRedisMailReq::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AddRedisMailReq.ticket)
}
#endif
void AddRedisMailReq::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AddRedisMailReq.ticket)
}
void AddRedisMailReq::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AddRedisMailReq.ticket)
}
::std::string* AddRedisMailReq::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.AddRedisMailReq.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddRedisMailReq::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.AddRedisMailReq.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddRedisMailReq::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.AddRedisMailReq.ticket)
}

// string transaction = 4;
void AddRedisMailReq::clear_transaction() {
  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddRedisMailReq::transaction() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailReq.transaction)
  return transaction_.GetNoArena();
}
void AddRedisMailReq::set_transaction(const ::std::string& value) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AddRedisMailReq.transaction)
}
#if LANG_CXX11
void AddRedisMailReq::set_transaction(::std::string&& value) {
  
  transaction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AddRedisMailReq.transaction)
}
#endif
void AddRedisMailReq::set_transaction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AddRedisMailReq.transaction)
}
void AddRedisMailReq::set_transaction(const char* value, size_t size) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AddRedisMailReq.transaction)
}
::std::string* AddRedisMailReq::mutable_transaction() {
  
  // @@protoc_insertion_point(field_mutable:proto.AddRedisMailReq.transaction)
  return transaction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddRedisMailReq::release_transaction() {
  // @@protoc_insertion_point(field_release:proto.AddRedisMailReq.transaction)
  
  return transaction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddRedisMailReq::set_allocated_transaction(::std::string* transaction) {
  if (transaction != NULL) {
    
  } else {
    
  }
  transaction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transaction);
  // @@protoc_insertion_point(field_set_allocated:proto.AddRedisMailReq.transaction)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddRedisMailRsp::kRetcodeFieldNumber;
const int AddRedisMailRsp::kOpTypeFieldNumber;
const int AddRedisMailRsp::kTicketFieldNumber;
const int AddRedisMailRsp::kTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddRedisMailRsp::AddRedisMailRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddRedisMailRsp)
}
AddRedisMailRsp::AddRedisMailRsp(const AddRedisMailRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ticket().size() > 0) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transaction().size() > 0) {
    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(op_type_));
  // @@protoc_insertion_point(copy_constructor:proto.AddRedisMailRsp)
}

void AddRedisMailRsp::SharedCtor() {
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(op_type_));
  _cached_size_ = 0;
}

AddRedisMailRsp::~AddRedisMailRsp() {
  // @@protoc_insertion_point(destructor:proto.AddRedisMailRsp)
  SharedDtor();
}

void AddRedisMailRsp::SharedDtor() {
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddRedisMailRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddRedisMailRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddRedisMailRsp& AddRedisMailRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddRedisMailRsp* AddRedisMailRsp::New(::google::protobuf::Arena* arena) const {
  AddRedisMailRsp* n = new AddRedisMailRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddRedisMailRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(op_type_));
  _internal_metadata_.Clear();
}

bool AddRedisMailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddRedisMailRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MailAddOpType op_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::MailAddOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ticket = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ticket().data(), static_cast<int>(this->ticket().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AddRedisMailRsp.ticket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transaction = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transaction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transaction().data(), static_cast<int>(this->transaction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AddRedisMailRsp.transaction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddRedisMailRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddRedisMailRsp)
  return false;
#undef DO_
}

void AddRedisMailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.MailAddOpType op_type = 2;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->op_type(), output);
  }

  // string ticket = 3;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AddRedisMailRsp.ticket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ticket(), output);
  }

  // string transaction = 4;
  if (this->transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transaction().data(), static_cast<int>(this->transaction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AddRedisMailRsp.transaction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->transaction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddRedisMailRsp)
}

::google::protobuf::uint8* AddRedisMailRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.MailAddOpType op_type = 2;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->op_type(), target);
  }

  // string ticket = 3;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AddRedisMailRsp.ticket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ticket(), target);
  }

  // string transaction = 4;
  if (this->transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transaction().data(), static_cast<int>(this->transaction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AddRedisMailRsp.transaction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->transaction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddRedisMailRsp)
  return target;
}

size_t AddRedisMailRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddRedisMailRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ticket = 3;
  if (this->ticket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticket());
  }

  // string transaction = 4;
  if (this->transaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transaction());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.MailAddOpType op_type = 2;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddRedisMailRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddRedisMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRedisMailRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddRedisMailRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddRedisMailRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddRedisMailRsp)
    MergeFrom(*source);
  }
}

void AddRedisMailRsp::MergeFrom(const AddRedisMailRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddRedisMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticket().size() > 0) {

    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  if (from.transaction().size() > 0) {

    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void AddRedisMailRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddRedisMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRedisMailRsp::CopyFrom(const AddRedisMailRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddRedisMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRedisMailRsp::IsInitialized() const {
  return true;
}

void AddRedisMailRsp::Swap(AddRedisMailRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddRedisMailRsp::InternalSwap(AddRedisMailRsp* other) {
  using std::swap;
  ticket_.Swap(&other->ticket_);
  transaction_.Swap(&other->transaction_);
  swap(retcode_, other->retcode_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddRedisMailRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddRedisMailRsp

// int32 retcode = 1;
void AddRedisMailRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AddRedisMailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailRsp.retcode)
  return retcode_;
}
void AddRedisMailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRedisMailRsp.retcode)
}

// .proto.MailAddOpType op_type = 2;
void AddRedisMailRsp::clear_op_type() {
  op_type_ = 0;
}
::proto::MailAddOpType AddRedisMailRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailRsp.op_type)
  return static_cast< ::proto::MailAddOpType >(op_type_);
}
void AddRedisMailRsp::set_op_type(::proto::MailAddOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRedisMailRsp.op_type)
}

// string ticket = 3;
void AddRedisMailRsp::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddRedisMailRsp::ticket() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailRsp.ticket)
  return ticket_.GetNoArena();
}
void AddRedisMailRsp::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AddRedisMailRsp.ticket)
}
#if LANG_CXX11
void AddRedisMailRsp::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AddRedisMailRsp.ticket)
}
#endif
void AddRedisMailRsp::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AddRedisMailRsp.ticket)
}
void AddRedisMailRsp::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AddRedisMailRsp.ticket)
}
::std::string* AddRedisMailRsp::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.AddRedisMailRsp.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddRedisMailRsp::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.AddRedisMailRsp.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddRedisMailRsp::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.AddRedisMailRsp.ticket)
}

// string transaction = 4;
void AddRedisMailRsp::clear_transaction() {
  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddRedisMailRsp::transaction() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailRsp.transaction)
  return transaction_.GetNoArena();
}
void AddRedisMailRsp::set_transaction(const ::std::string& value) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AddRedisMailRsp.transaction)
}
#if LANG_CXX11
void AddRedisMailRsp::set_transaction(::std::string&& value) {
  
  transaction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AddRedisMailRsp.transaction)
}
#endif
void AddRedisMailRsp::set_transaction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AddRedisMailRsp.transaction)
}
void AddRedisMailRsp::set_transaction(const char* value, size_t size) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AddRedisMailRsp.transaction)
}
::std::string* AddRedisMailRsp::mutable_transaction() {
  
  // @@protoc_insertion_point(field_mutable:proto.AddRedisMailRsp.transaction)
  return transaction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddRedisMailRsp::release_transaction() {
  // @@protoc_insertion_point(field_release:proto.AddRedisMailRsp.transaction)
  
  return transaction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddRedisMailRsp::set_allocated_transaction(::std::string* transaction) {
  if (transaction != NULL) {
    
  } else {
    
  }
  transaction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transaction);
  // @@protoc_insertion_point(field_set_allocated:proto.AddRedisMailRsp.transaction)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelRedisMailReq::kOpTypeFieldNumber;
const int DelRedisMailReq::kMailIdListFieldNumber;
const int DelRedisMailReq::kTicketListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelRedisMailReq::DelRedisMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelRedisMailReq)
}
DelRedisMailReq::DelRedisMailReq(const DelRedisMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mail_id_list_(from.mail_id_list_),
      ticket_list_(from.ticket_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_type_ = from.op_type_;
  // @@protoc_insertion_point(copy_constructor:proto.DelRedisMailReq)
}

void DelRedisMailReq::SharedCtor() {
  op_type_ = 0;
  _cached_size_ = 0;
}

DelRedisMailReq::~DelRedisMailReq() {
  // @@protoc_insertion_point(destructor:proto.DelRedisMailReq)
  SharedDtor();
}

void DelRedisMailReq::SharedDtor() {
}

void DelRedisMailReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelRedisMailReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelRedisMailReq& DelRedisMailReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelRedisMailReq* DelRedisMailReq::New(::google::protobuf::Arena* arena) const {
  DelRedisMailReq* n = new DelRedisMailReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelRedisMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_id_list_.Clear();
  ticket_list_.Clear();
  op_type_ = 0;
  _internal_metadata_.Clear();
}

bool DelRedisMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelRedisMailReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MailDelOpType op_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::MailDelOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 mail_id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_mail_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_mail_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string ticket_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_ticket_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ticket_list(this->ticket_list_size() - 1).data(),
            static_cast<int>(this->ticket_list(this->ticket_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.DelRedisMailReq.ticket_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelRedisMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelRedisMailReq)
  return false;
#undef DO_
}

void DelRedisMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MailDelOpType op_type = 1;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op_type(), output);
  }

  // repeated uint32 mail_id_list = 2;
  if (this->mail_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mail_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->mail_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->mail_id_list(i), output);
  }

  // repeated string ticket_list = 3;
  for (int i = 0, n = this->ticket_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket_list(i).data(), static_cast<int>(this->ticket_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DelRedisMailReq.ticket_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->ticket_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelRedisMailReq)
}

::google::protobuf::uint8* DelRedisMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MailDelOpType op_type = 1;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op_type(), target);
  }

  // repeated uint32 mail_id_list = 2;
  if (this->mail_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _mail_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->mail_id_list_, target);
  }

  // repeated string ticket_list = 3;
  for (int i = 0, n = this->ticket_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket_list(i).data(), static_cast<int>(this->ticket_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.DelRedisMailReq.ticket_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->ticket_list(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelRedisMailReq)
  return target;
}

size_t DelRedisMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelRedisMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 mail_id_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->mail_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mail_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string ticket_list = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ticket_list_size());
  for (int i = 0, n = this->ticket_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->ticket_list(i));
  }

  // .proto.MailDelOpType op_type = 1;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelRedisMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelRedisMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DelRedisMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelRedisMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelRedisMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelRedisMailReq)
    MergeFrom(*source);
  }
}

void DelRedisMailReq::MergeFrom(const DelRedisMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelRedisMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mail_id_list_.MergeFrom(from.mail_id_list_);
  ticket_list_.MergeFrom(from.ticket_list_);
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void DelRedisMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelRedisMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelRedisMailReq::CopyFrom(const DelRedisMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelRedisMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelRedisMailReq::IsInitialized() const {
  return true;
}

void DelRedisMailReq::Swap(DelRedisMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelRedisMailReq::InternalSwap(DelRedisMailReq* other) {
  using std::swap;
  mail_id_list_.InternalSwap(&other->mail_id_list_);
  ticket_list_.InternalSwap(&other->ticket_list_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelRedisMailReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelRedisMailReq

// .proto.MailDelOpType op_type = 1;
void DelRedisMailReq::clear_op_type() {
  op_type_ = 0;
}
::proto::MailDelOpType DelRedisMailReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.DelRedisMailReq.op_type)
  return static_cast< ::proto::MailDelOpType >(op_type_);
}
void DelRedisMailReq::set_op_type(::proto::MailDelOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.DelRedisMailReq.op_type)
}

// repeated uint32 mail_id_list = 2;
int DelRedisMailReq::mail_id_list_size() const {
  return mail_id_list_.size();
}
void DelRedisMailReq::clear_mail_id_list() {
  mail_id_list_.Clear();
}
::google::protobuf::uint32 DelRedisMailReq::mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DelRedisMailReq.mail_id_list)
  return mail_id_list_.Get(index);
}
void DelRedisMailReq::set_mail_id_list(int index, ::google::protobuf::uint32 value) {
  mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.DelRedisMailReq.mail_id_list)
}
void DelRedisMailReq::add_mail_id_list(::google::protobuf::uint32 value) {
  mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.DelRedisMailReq.mail_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DelRedisMailReq::mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.DelRedisMailReq.mail_id_list)
  return mail_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DelRedisMailReq::mutable_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DelRedisMailReq.mail_id_list)
  return &mail_id_list_;
}

// repeated string ticket_list = 3;
int DelRedisMailReq::ticket_list_size() const {
  return ticket_list_.size();
}
void DelRedisMailReq::clear_ticket_list() {
  ticket_list_.Clear();
}
const ::std::string& DelRedisMailReq::ticket_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DelRedisMailReq.ticket_list)
  return ticket_list_.Get(index);
}
::std::string* DelRedisMailReq::mutable_ticket_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DelRedisMailReq.ticket_list)
  return ticket_list_.Mutable(index);
}
void DelRedisMailReq::set_ticket_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.DelRedisMailReq.ticket_list)
  ticket_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void DelRedisMailReq::set_ticket_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.DelRedisMailReq.ticket_list)
  ticket_list_.Mutable(index)->assign(std::move(value));
}
#endif
void DelRedisMailReq::set_ticket_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ticket_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.DelRedisMailReq.ticket_list)
}
void DelRedisMailReq::set_ticket_list(int index, const char* value, size_t size) {
  ticket_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.DelRedisMailReq.ticket_list)
}
::std::string* DelRedisMailReq::add_ticket_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.DelRedisMailReq.ticket_list)
  return ticket_list_.Add();
}
void DelRedisMailReq::add_ticket_list(const ::std::string& value) {
  ticket_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.DelRedisMailReq.ticket_list)
}
#if LANG_CXX11
void DelRedisMailReq::add_ticket_list(::std::string&& value) {
  ticket_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.DelRedisMailReq.ticket_list)
}
#endif
void DelRedisMailReq::add_ticket_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ticket_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.DelRedisMailReq.ticket_list)
}
void DelRedisMailReq::add_ticket_list(const char* value, size_t size) {
  ticket_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.DelRedisMailReq.ticket_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelRedisMailReq::ticket_list() const {
  // @@protoc_insertion_point(field_list:proto.DelRedisMailReq.ticket_list)
  return ticket_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
DelRedisMailReq::mutable_ticket_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DelRedisMailReq.ticket_list)
  return &ticket_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelRedisMailRsp::kRetcodeFieldNumber;
const int DelRedisMailRsp::kOpTypeFieldNumber;
const int DelRedisMailRsp::kMailIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelRedisMailRsp::DelRedisMailRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.DelRedisMailRsp)
}
DelRedisMailRsp::DelRedisMailRsp(const DelRedisMailRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mail_id_list_(from.mail_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(op_type_));
  // @@protoc_insertion_point(copy_constructor:proto.DelRedisMailRsp)
}

void DelRedisMailRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(op_type_));
  _cached_size_ = 0;
}

DelRedisMailRsp::~DelRedisMailRsp() {
  // @@protoc_insertion_point(destructor:proto.DelRedisMailRsp)
  SharedDtor();
}

void DelRedisMailRsp::SharedDtor() {
}

void DelRedisMailRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelRedisMailRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DelRedisMailRsp& DelRedisMailRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelRedisMailRsp* DelRedisMailRsp::New(::google::protobuf::Arena* arena) const {
  DelRedisMailRsp* n = new DelRedisMailRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelRedisMailRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DelRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_id_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(op_type_));
  _internal_metadata_.Clear();
}

bool DelRedisMailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.DelRedisMailRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MailDelOpType op_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::MailDelOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 mail_id_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_mail_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_mail_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.DelRedisMailRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.DelRedisMailRsp)
  return false;
#undef DO_
}

void DelRedisMailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.DelRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.MailDelOpType op_type = 2;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->op_type(), output);
  }

  // repeated uint32 mail_id_list = 3;
  if (this->mail_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mail_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->mail_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->mail_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.DelRedisMailRsp)
}

::google::protobuf::uint8* DelRedisMailRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.DelRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.MailDelOpType op_type = 2;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->op_type(), target);
  }

  // repeated uint32 mail_id_list = 3;
  if (this->mail_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _mail_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->mail_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DelRedisMailRsp)
  return target;
}

size_t DelRedisMailRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DelRedisMailRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 mail_id_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->mail_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mail_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.MailDelOpType op_type = 2;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelRedisMailRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.DelRedisMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const DelRedisMailRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelRedisMailRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.DelRedisMailRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.DelRedisMailRsp)
    MergeFrom(*source);
  }
}

void DelRedisMailRsp::MergeFrom(const DelRedisMailRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.DelRedisMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mail_id_list_.MergeFrom(from.mail_id_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void DelRedisMailRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.DelRedisMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelRedisMailRsp::CopyFrom(const DelRedisMailRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DelRedisMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelRedisMailRsp::IsInitialized() const {
  return true;
}

void DelRedisMailRsp::Swap(DelRedisMailRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelRedisMailRsp::InternalSwap(DelRedisMailRsp* other) {
  using std::swap;
  mail_id_list_.InternalSwap(&other->mail_id_list_);
  swap(retcode_, other->retcode_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelRedisMailRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelRedisMailRsp

// int32 retcode = 1;
void DelRedisMailRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 DelRedisMailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DelRedisMailRsp.retcode)
  return retcode_;
}
void DelRedisMailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DelRedisMailRsp.retcode)
}

// .proto.MailDelOpType op_type = 2;
void DelRedisMailRsp::clear_op_type() {
  op_type_ = 0;
}
::proto::MailDelOpType DelRedisMailRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.DelRedisMailRsp.op_type)
  return static_cast< ::proto::MailDelOpType >(op_type_);
}
void DelRedisMailRsp::set_op_type(::proto::MailDelOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.DelRedisMailRsp.op_type)
}

// repeated uint32 mail_id_list = 3;
int DelRedisMailRsp::mail_id_list_size() const {
  return mail_id_list_.size();
}
void DelRedisMailRsp::clear_mail_id_list() {
  mail_id_list_.Clear();
}
::google::protobuf::uint32 DelRedisMailRsp::mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DelRedisMailRsp.mail_id_list)
  return mail_id_list_.Get(index);
}
void DelRedisMailRsp::set_mail_id_list(int index, ::google::protobuf::uint32 value) {
  mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.DelRedisMailRsp.mail_id_list)
}
void DelRedisMailRsp::add_mail_id_list(::google::protobuf::uint32 value) {
  mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.DelRedisMailRsp.mail_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DelRedisMailRsp::mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.DelRedisMailRsp.mail_id_list)
  return mail_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DelRedisMailRsp::mutable_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DelRedisMailRsp.mail_id_list)
  return &mail_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRedisMailReq::kOpTypeFieldNumber;
const int GetRedisMailReq::kGetTypeFieldNumber;
const int GetRedisMailReq::kMailIdListFieldNumber;
const int GetRedisMailReq::kIsCollectibleMailTransferedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRedisMailReq::GetRedisMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetRedisMailReq)
}
GetRedisMailReq::GetRedisMailReq(const GetRedisMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mail_id_list_(from.mail_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&op_type_, &from.op_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_collectible_mail_transfered_) -
    reinterpret_cast<char*>(&op_type_)) + sizeof(is_collectible_mail_transfered_));
  // @@protoc_insertion_point(copy_constructor:proto.GetRedisMailReq)
}

void GetRedisMailReq::SharedCtor() {
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_collectible_mail_transfered_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(is_collectible_mail_transfered_));
  _cached_size_ = 0;
}

GetRedisMailReq::~GetRedisMailReq() {
  // @@protoc_insertion_point(destructor:proto.GetRedisMailReq)
  SharedDtor();
}

void GetRedisMailReq::SharedDtor() {
}

void GetRedisMailReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRedisMailReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRedisMailReq& GetRedisMailReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRedisMailReq* GetRedisMailReq::New(::google::protobuf::Arena* arena) const {
  GetRedisMailReq* n = new GetRedisMailReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRedisMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_id_list_.Clear();
  ::memset(&op_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_collectible_mail_transfered_) -
      reinterpret_cast<char*>(&op_type_)) + sizeof(is_collectible_mail_transfered_));
  _internal_metadata_.Clear();
}

bool GetRedisMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetRedisMailReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MailGetOPType op_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::MailGetOPType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MailGetType get_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_get_type(static_cast< ::proto::MailGetType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 mail_id_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_mail_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_mail_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_collectible_mail_transfered = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_collectible_mail_transfered_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetRedisMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetRedisMailReq)
  return false;
#undef DO_
}

void GetRedisMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MailGetOPType op_type = 1;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op_type(), output);
  }

  // .proto.MailGetType get_type = 2;
  if (this->get_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->get_type(), output);
  }

  // repeated uint32 mail_id_list = 3;
  if (this->mail_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mail_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->mail_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->mail_id_list(i), output);
  }

  // bool is_collectible_mail_transfered = 4;
  if (this->is_collectible_mail_transfered() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_collectible_mail_transfered(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetRedisMailReq)
}

::google::protobuf::uint8* GetRedisMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MailGetOPType op_type = 1;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op_type(), target);
  }

  // .proto.MailGetType get_type = 2;
  if (this->get_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->get_type(), target);
  }

  // repeated uint32 mail_id_list = 3;
  if (this->mail_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _mail_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->mail_id_list_, target);
  }

  // bool is_collectible_mail_transfered = 4;
  if (this->is_collectible_mail_transfered() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_collectible_mail_transfered(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetRedisMailReq)
  return target;
}

size_t GetRedisMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetRedisMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 mail_id_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->mail_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mail_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.MailGetOPType op_type = 1;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // .proto.MailGetType get_type = 2;
  if (this->get_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->get_type());
  }

  // bool is_collectible_mail_transfered = 4;
  if (this->is_collectible_mail_transfered() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRedisMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetRedisMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRedisMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRedisMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetRedisMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetRedisMailReq)
    MergeFrom(*source);
  }
}

void GetRedisMailReq::MergeFrom(const GetRedisMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetRedisMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mail_id_list_.MergeFrom(from.mail_id_list_);
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.get_type() != 0) {
    set_get_type(from.get_type());
  }
  if (from.is_collectible_mail_transfered() != 0) {
    set_is_collectible_mail_transfered(from.is_collectible_mail_transfered());
  }
}

void GetRedisMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetRedisMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRedisMailReq::CopyFrom(const GetRedisMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetRedisMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRedisMailReq::IsInitialized() const {
  return true;
}

void GetRedisMailReq::Swap(GetRedisMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRedisMailReq::InternalSwap(GetRedisMailReq* other) {
  using std::swap;
  mail_id_list_.InternalSwap(&other->mail_id_list_);
  swap(op_type_, other->op_type_);
  swap(get_type_, other->get_type_);
  swap(is_collectible_mail_transfered_, other->is_collectible_mail_transfered_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRedisMailReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRedisMailReq

// .proto.MailGetOPType op_type = 1;
void GetRedisMailReq::clear_op_type() {
  op_type_ = 0;
}
::proto::MailGetOPType GetRedisMailReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailReq.op_type)
  return static_cast< ::proto::MailGetOPType >(op_type_);
}
void GetRedisMailReq::set_op_type(::proto::MailGetOPType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailReq.op_type)
}

// .proto.MailGetType get_type = 2;
void GetRedisMailReq::clear_get_type() {
  get_type_ = 0;
}
::proto::MailGetType GetRedisMailReq::get_type() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailReq.get_type)
  return static_cast< ::proto::MailGetType >(get_type_);
}
void GetRedisMailReq::set_get_type(::proto::MailGetType value) {
  
  get_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailReq.get_type)
}

// repeated uint32 mail_id_list = 3;
int GetRedisMailReq::mail_id_list_size() const {
  return mail_id_list_.size();
}
void GetRedisMailReq::clear_mail_id_list() {
  mail_id_list_.Clear();
}
::google::protobuf::uint32 GetRedisMailReq::mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailReq.mail_id_list)
  return mail_id_list_.Get(index);
}
void GetRedisMailReq::set_mail_id_list(int index, ::google::protobuf::uint32 value) {
  mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetRedisMailReq.mail_id_list)
}
void GetRedisMailReq::add_mail_id_list(::google::protobuf::uint32 value) {
  mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetRedisMailReq.mail_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetRedisMailReq::mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetRedisMailReq.mail_id_list)
  return mail_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetRedisMailReq::mutable_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetRedisMailReq.mail_id_list)
  return &mail_id_list_;
}

// bool is_collectible_mail_transfered = 4;
void GetRedisMailReq::clear_is_collectible_mail_transfered() {
  is_collectible_mail_transfered_ = false;
}
bool GetRedisMailReq::is_collectible_mail_transfered() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailReq.is_collectible_mail_transfered)
  return is_collectible_mail_transfered_;
}
void GetRedisMailReq::set_is_collectible_mail_transfered(bool value) {
  
  is_collectible_mail_transfered_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailReq.is_collectible_mail_transfered)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRedisMailRsp::kRetcodeFieldNumber;
const int GetRedisMailRsp::kMailStrListFieldNumber;
const int GetRedisMailRsp::kOpTypeFieldNumber;
const int GetRedisMailRsp::kIsTruncatedFieldNumber;
const int GetRedisMailRsp::kGetTypeFieldNumber;
const int GetRedisMailRsp::kIsCollectibleMailTransferedFieldNumber;
const int GetRedisMailRsp::kTransactionFieldNumber;
const int GetRedisMailRsp::kPageIndexFieldNumber;
const int GetRedisMailRsp::kTotalPageCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRedisMailRsp::GetRedisMailRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetRedisMailRsp)
}
GetRedisMailRsp::GetRedisMailRsp(const GetRedisMailRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mail_str_list_(from.mail_str_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.transaction().size() > 0) {
    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_page_count_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(total_page_count_));
  // @@protoc_insertion_point(copy_constructor:proto.GetRedisMailRsp)
}

void GetRedisMailRsp::SharedCtor() {
  transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_page_count_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(total_page_count_));
  _cached_size_ = 0;
}

GetRedisMailRsp::~GetRedisMailRsp() {
  // @@protoc_insertion_point(destructor:proto.GetRedisMailRsp)
  SharedDtor();
}

void GetRedisMailRsp::SharedDtor() {
  transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRedisMailRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRedisMailRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRedisMailRsp& GetRedisMailRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRedisMailRsp* GetRedisMailRsp::New(::google::protobuf::Arena* arena) const {
  GetRedisMailRsp* n = new GetRedisMailRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRedisMailRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_str_list_.Clear();
  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_page_count_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(total_page_count_));
  _internal_metadata_.Clear();
}

bool GetRedisMailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetRedisMailRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes mail_str_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_mail_str_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MailGetOPType op_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::MailGetOPType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_truncated = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_truncated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MailGetType get_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_get_type(static_cast< ::proto::MailGetType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_collectible_mail_transfered = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_collectible_mail_transfered_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string transaction = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_transaction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transaction().data(), static_cast<int>(this->transaction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetRedisMailRsp.transaction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 page_index = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_page_count = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_page_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetRedisMailRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetRedisMailRsp)
  return false;
#undef DO_
}

void GetRedisMailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated bytes mail_str_list = 2;
  for (int i = 0, n = this->mail_str_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->mail_str_list(i), output);
  }

  // .proto.MailGetOPType op_type = 3;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->op_type(), output);
  }

  // bool is_truncated = 4;
  if (this->is_truncated() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_truncated(), output);
  }

  // .proto.MailGetType get_type = 5;
  if (this->get_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->get_type(), output);
  }

  // bool is_collectible_mail_transfered = 6;
  if (this->is_collectible_mail_transfered() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_collectible_mail_transfered(), output);
  }

  // string transaction = 7;
  if (this->transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transaction().data(), static_cast<int>(this->transaction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetRedisMailRsp.transaction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->transaction(), output);
  }

  // uint32 page_index = 8;
  if (this->page_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->page_index(), output);
  }

  // uint32 total_page_count = 9;
  if (this->total_page_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->total_page_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetRedisMailRsp)
}

::google::protobuf::uint8* GetRedisMailRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated bytes mail_str_list = 2;
  for (int i = 0, n = this->mail_str_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->mail_str_list(i), target);
  }

  // .proto.MailGetOPType op_type = 3;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->op_type(), target);
  }

  // bool is_truncated = 4;
  if (this->is_truncated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_truncated(), target);
  }

  // .proto.MailGetType get_type = 5;
  if (this->get_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->get_type(), target);
  }

  // bool is_collectible_mail_transfered = 6;
  if (this->is_collectible_mail_transfered() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_collectible_mail_transfered(), target);
  }

  // string transaction = 7;
  if (this->transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transaction().data(), static_cast<int>(this->transaction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetRedisMailRsp.transaction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->transaction(), target);
  }

  // uint32 page_index = 8;
  if (this->page_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->page_index(), target);
  }

  // uint32 total_page_count = 9;
  if (this->total_page_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->total_page_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetRedisMailRsp)
  return target;
}

size_t GetRedisMailRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetRedisMailRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes mail_str_list = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mail_str_list_size());
  for (int i = 0, n = this->mail_str_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->mail_str_list(i));
  }

  // string transaction = 7;
  if (this->transaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->transaction());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.MailGetOPType op_type = 3;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  // .proto.MailGetType get_type = 5;
  if (this->get_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->get_type());
  }

  // bool is_truncated = 4;
  if (this->is_truncated() != 0) {
    total_size += 1 + 1;
  }

  // bool is_collectible_mail_transfered = 6;
  if (this->is_collectible_mail_transfered() != 0) {
    total_size += 1 + 1;
  }

  // uint32 page_index = 8;
  if (this->page_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page_index());
  }

  // uint32 total_page_count = 9;
  if (this->total_page_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_page_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRedisMailRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetRedisMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRedisMailRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRedisMailRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetRedisMailRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetRedisMailRsp)
    MergeFrom(*source);
  }
}

void GetRedisMailRsp::MergeFrom(const GetRedisMailRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetRedisMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mail_str_list_.MergeFrom(from.mail_str_list_);
  if (from.transaction().size() > 0) {

    transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.transaction_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
  if (from.get_type() != 0) {
    set_get_type(from.get_type());
  }
  if (from.is_truncated() != 0) {
    set_is_truncated(from.is_truncated());
  }
  if (from.is_collectible_mail_transfered() != 0) {
    set_is_collectible_mail_transfered(from.is_collectible_mail_transfered());
  }
  if (from.page_index() != 0) {
    set_page_index(from.page_index());
  }
  if (from.total_page_count() != 0) {
    set_total_page_count(from.total_page_count());
  }
}

void GetRedisMailRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetRedisMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRedisMailRsp::CopyFrom(const GetRedisMailRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetRedisMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRedisMailRsp::IsInitialized() const {
  return true;
}

void GetRedisMailRsp::Swap(GetRedisMailRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRedisMailRsp::InternalSwap(GetRedisMailRsp* other) {
  using std::swap;
  mail_str_list_.InternalSwap(&other->mail_str_list_);
  transaction_.Swap(&other->transaction_);
  swap(retcode_, other->retcode_);
  swap(op_type_, other->op_type_);
  swap(get_type_, other->get_type_);
  swap(is_truncated_, other->is_truncated_);
  swap(is_collectible_mail_transfered_, other->is_collectible_mail_transfered_);
  swap(page_index_, other->page_index_);
  swap(total_page_count_, other->total_page_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRedisMailRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRedisMailRsp

// int32 retcode = 1;
void GetRedisMailRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetRedisMailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.retcode)
  return retcode_;
}
void GetRedisMailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.retcode)
}

// repeated bytes mail_str_list = 2;
int GetRedisMailRsp::mail_str_list_size() const {
  return mail_str_list_.size();
}
void GetRedisMailRsp::clear_mail_str_list() {
  mail_str_list_.Clear();
}
const ::std::string& GetRedisMailRsp::mail_str_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.mail_str_list)
  return mail_str_list_.Get(index);
}
::std::string* GetRedisMailRsp::mutable_mail_str_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetRedisMailRsp.mail_str_list)
  return mail_str_list_.Mutable(index);
}
void GetRedisMailRsp::set_mail_str_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.mail_str_list)
  mail_str_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void GetRedisMailRsp::set_mail_str_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.mail_str_list)
  mail_str_list_.Mutable(index)->assign(std::move(value));
}
#endif
void GetRedisMailRsp::set_mail_str_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  mail_str_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.GetRedisMailRsp.mail_str_list)
}
void GetRedisMailRsp::set_mail_str_list(int index, const void* value, size_t size) {
  mail_str_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.GetRedisMailRsp.mail_str_list)
}
::std::string* GetRedisMailRsp::add_mail_str_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.GetRedisMailRsp.mail_str_list)
  return mail_str_list_.Add();
}
void GetRedisMailRsp::add_mail_str_list(const ::std::string& value) {
  mail_str_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.GetRedisMailRsp.mail_str_list)
}
#if LANG_CXX11
void GetRedisMailRsp::add_mail_str_list(::std::string&& value) {
  mail_str_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.GetRedisMailRsp.mail_str_list)
}
#endif
void GetRedisMailRsp::add_mail_str_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  mail_str_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.GetRedisMailRsp.mail_str_list)
}
void GetRedisMailRsp::add_mail_str_list(const void* value, size_t size) {
  mail_str_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.GetRedisMailRsp.mail_str_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetRedisMailRsp::mail_str_list() const {
  // @@protoc_insertion_point(field_list:proto.GetRedisMailRsp.mail_str_list)
  return mail_str_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GetRedisMailRsp::mutable_mail_str_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetRedisMailRsp.mail_str_list)
  return &mail_str_list_;
}

// .proto.MailGetOPType op_type = 3;
void GetRedisMailRsp::clear_op_type() {
  op_type_ = 0;
}
::proto::MailGetOPType GetRedisMailRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.op_type)
  return static_cast< ::proto::MailGetOPType >(op_type_);
}
void GetRedisMailRsp::set_op_type(::proto::MailGetOPType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.op_type)
}

// bool is_truncated = 4;
void GetRedisMailRsp::clear_is_truncated() {
  is_truncated_ = false;
}
bool GetRedisMailRsp::is_truncated() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.is_truncated)
  return is_truncated_;
}
void GetRedisMailRsp::set_is_truncated(bool value) {
  
  is_truncated_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.is_truncated)
}

// .proto.MailGetType get_type = 5;
void GetRedisMailRsp::clear_get_type() {
  get_type_ = 0;
}
::proto::MailGetType GetRedisMailRsp::get_type() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.get_type)
  return static_cast< ::proto::MailGetType >(get_type_);
}
void GetRedisMailRsp::set_get_type(::proto::MailGetType value) {
  
  get_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.get_type)
}

// bool is_collectible_mail_transfered = 6;
void GetRedisMailRsp::clear_is_collectible_mail_transfered() {
  is_collectible_mail_transfered_ = false;
}
bool GetRedisMailRsp::is_collectible_mail_transfered() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.is_collectible_mail_transfered)
  return is_collectible_mail_transfered_;
}
void GetRedisMailRsp::set_is_collectible_mail_transfered(bool value) {
  
  is_collectible_mail_transfered_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.is_collectible_mail_transfered)
}

// string transaction = 7;
void GetRedisMailRsp::clear_transaction() {
  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetRedisMailRsp::transaction() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.transaction)
  return transaction_.GetNoArena();
}
void GetRedisMailRsp::set_transaction(const ::std::string& value) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.transaction)
}
#if LANG_CXX11
void GetRedisMailRsp::set_transaction(::std::string&& value) {
  
  transaction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetRedisMailRsp.transaction)
}
#endif
void GetRedisMailRsp::set_transaction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetRedisMailRsp.transaction)
}
void GetRedisMailRsp::set_transaction(const char* value, size_t size) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetRedisMailRsp.transaction)
}
::std::string* GetRedisMailRsp::mutable_transaction() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetRedisMailRsp.transaction)
  return transaction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetRedisMailRsp::release_transaction() {
  // @@protoc_insertion_point(field_release:proto.GetRedisMailRsp.transaction)
  
  return transaction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetRedisMailRsp::set_allocated_transaction(::std::string* transaction) {
  if (transaction != NULL) {
    
  } else {
    
  }
  transaction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transaction);
  // @@protoc_insertion_point(field_set_allocated:proto.GetRedisMailRsp.transaction)
}

// uint32 page_index = 8;
void GetRedisMailRsp::clear_page_index() {
  page_index_ = 0u;
}
::google::protobuf::uint32 GetRedisMailRsp::page_index() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.page_index)
  return page_index_;
}
void GetRedisMailRsp::set_page_index(::google::protobuf::uint32 value) {
  
  page_index_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.page_index)
}

// uint32 total_page_count = 9;
void GetRedisMailRsp::clear_total_page_count() {
  total_page_count_ = 0u;
}
::google::protobuf::uint32 GetRedisMailRsp::total_page_count() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.total_page_count)
  return total_page_count_;
}
void GetRedisMailRsp::set_total_page_count(::google::protobuf::uint32 value) {
  
  total_page_count_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.total_page_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RedisMailChangeNotify::kUpdateMailListFieldNumber;
const int RedisMailChangeNotify::kDelMailIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RedisMailChangeNotify::RedisMailChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RedisMailChangeNotify)
}
RedisMailChangeNotify::RedisMailChangeNotify(const RedisMailChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      update_mail_list_(from.update_mail_list_),
      del_mail_id_list_(from.del_mail_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.RedisMailChangeNotify)
}

void RedisMailChangeNotify::SharedCtor() {
  _cached_size_ = 0;
}

RedisMailChangeNotify::~RedisMailChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.RedisMailChangeNotify)
  SharedDtor();
}

void RedisMailChangeNotify::SharedDtor() {
}

void RedisMailChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RedisMailChangeNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RedisMailChangeNotify& RedisMailChangeNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RedisMailChangeNotify* RedisMailChangeNotify::New(::google::protobuf::Arena* arena) const {
  RedisMailChangeNotify* n = new RedisMailChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RedisMailChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RedisMailChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  update_mail_list_.Clear();
  del_mail_id_list_.Clear();
  _internal_metadata_.Clear();
}

bool RedisMailChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RedisMailChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.MailRedisData update_mail_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_update_mail_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 del_mail_id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_del_mail_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_del_mail_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RedisMailChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RedisMailChangeNotify)
  return false;
#undef DO_
}

void RedisMailChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RedisMailChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.MailRedisData update_mail_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->update_mail_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->update_mail_list(static_cast<int>(i)), output);
  }

  // repeated uint32 del_mail_id_list = 2;
  if (this->del_mail_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _del_mail_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->del_mail_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->del_mail_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RedisMailChangeNotify)
}

::google::protobuf::uint8* RedisMailChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RedisMailChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.MailRedisData update_mail_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->update_mail_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->update_mail_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated uint32 del_mail_id_list = 2;
  if (this->del_mail_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _del_mail_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->del_mail_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RedisMailChangeNotify)
  return target;
}

size_t RedisMailChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RedisMailChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.MailRedisData update_mail_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->update_mail_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->update_mail_list(static_cast<int>(i)));
    }
  }

  // repeated uint32 del_mail_id_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->del_mail_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _del_mail_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RedisMailChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RedisMailChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RedisMailChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RedisMailChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RedisMailChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RedisMailChangeNotify)
    MergeFrom(*source);
  }
}

void RedisMailChangeNotify::MergeFrom(const RedisMailChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RedisMailChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  update_mail_list_.MergeFrom(from.update_mail_list_);
  del_mail_id_list_.MergeFrom(from.del_mail_id_list_);
}

void RedisMailChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RedisMailChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RedisMailChangeNotify::CopyFrom(const RedisMailChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RedisMailChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RedisMailChangeNotify::IsInitialized() const {
  return true;
}

void RedisMailChangeNotify::Swap(RedisMailChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RedisMailChangeNotify::InternalSwap(RedisMailChangeNotify* other) {
  using std::swap;
  update_mail_list_.InternalSwap(&other->update_mail_list_);
  del_mail_id_list_.InternalSwap(&other->del_mail_id_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RedisMailChangeNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RedisMailChangeNotify

// repeated .proto.MailRedisData update_mail_list = 1;
int RedisMailChangeNotify::update_mail_list_size() const {
  return update_mail_list_.size();
}
void RedisMailChangeNotify::clear_update_mail_list() {
  update_mail_list_.Clear();
}
const ::proto::MailRedisData& RedisMailChangeNotify::update_mail_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RedisMailChangeNotify.update_mail_list)
  return update_mail_list_.Get(index);
}
::proto::MailRedisData* RedisMailChangeNotify::mutable_update_mail_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.RedisMailChangeNotify.update_mail_list)
  return update_mail_list_.Mutable(index);
}
::proto::MailRedisData* RedisMailChangeNotify::add_update_mail_list() {
  // @@protoc_insertion_point(field_add:proto.RedisMailChangeNotify.update_mail_list)
  return update_mail_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::MailRedisData >*
RedisMailChangeNotify::mutable_update_mail_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RedisMailChangeNotify.update_mail_list)
  return &update_mail_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::MailRedisData >&
RedisMailChangeNotify::update_mail_list() const {
  // @@protoc_insertion_point(field_list:proto.RedisMailChangeNotify.update_mail_list)
  return update_mail_list_;
}

// repeated uint32 del_mail_id_list = 2;
int RedisMailChangeNotify::del_mail_id_list_size() const {
  return del_mail_id_list_.size();
}
void RedisMailChangeNotify::clear_del_mail_id_list() {
  del_mail_id_list_.Clear();
}
::google::protobuf::uint32 RedisMailChangeNotify::del_mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RedisMailChangeNotify.del_mail_id_list)
  return del_mail_id_list_.Get(index);
}
void RedisMailChangeNotify::set_del_mail_id_list(int index, ::google::protobuf::uint32 value) {
  del_mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.RedisMailChangeNotify.del_mail_id_list)
}
void RedisMailChangeNotify::add_del_mail_id_list(::google::protobuf::uint32 value) {
  del_mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.RedisMailChangeNotify.del_mail_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RedisMailChangeNotify::del_mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.RedisMailChangeNotify.del_mail_id_list)
  return del_mail_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RedisMailChangeNotify::mutable_del_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RedisMailChangeNotify.del_mail_id_list)
  return &del_mail_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendOfflineMsgReq::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendOfflineMsgReq::SendOfflineMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SendOfflineMsgReq)
}
SendOfflineMsgReq::SendOfflineMsgReq(const SendOfflineMsgReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg()) {
    msg_ = new ::proto::OfflineMsgBin(*from.msg_);
  } else {
    msg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SendOfflineMsgReq)
}

void SendOfflineMsgReq::SharedCtor() {
  msg_ = NULL;
  _cached_size_ = 0;
}

SendOfflineMsgReq::~SendOfflineMsgReq() {
  // @@protoc_insertion_point(destructor:proto.SendOfflineMsgReq)
  SharedDtor();
}

void SendOfflineMsgReq::SharedDtor() {
  if (this != internal_default_instance()) delete msg_;
}

void SendOfflineMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendOfflineMsgReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendOfflineMsgReq& SendOfflineMsgReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendOfflineMsgReq* SendOfflineMsgReq::New(::google::protobuf::Arena* arena) const {
  SendOfflineMsgReq* n = new SendOfflineMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendOfflineMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SendOfflineMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
  _internal_metadata_.Clear();
}

bool SendOfflineMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SendOfflineMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.OfflineMsgBin msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SendOfflineMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SendOfflineMsgReq)
  return false;
#undef DO_
}

void SendOfflineMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SendOfflineMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.OfflineMsgBin msg = 1;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SendOfflineMsgReq)
}

::google::protobuf::uint8* SendOfflineMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SendOfflineMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.OfflineMsgBin msg = 1;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SendOfflineMsgReq)
  return target;
}

size_t SendOfflineMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SendOfflineMsgReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.OfflineMsgBin msg = 1;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendOfflineMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SendOfflineMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SendOfflineMsgReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendOfflineMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SendOfflineMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SendOfflineMsgReq)
    MergeFrom(*source);
  }
}

void SendOfflineMsgReq::MergeFrom(const SendOfflineMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SendOfflineMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg()) {
    mutable_msg()->::proto::OfflineMsgBin::MergeFrom(from.msg());
  }
}

void SendOfflineMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SendOfflineMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendOfflineMsgReq::CopyFrom(const SendOfflineMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SendOfflineMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendOfflineMsgReq::IsInitialized() const {
  return true;
}

void SendOfflineMsgReq::Swap(SendOfflineMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendOfflineMsgReq::InternalSwap(SendOfflineMsgReq* other) {
  using std::swap;
  swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendOfflineMsgReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendOfflineMsgReq

// .proto.OfflineMsgBin msg = 1;
bool SendOfflineMsgReq::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
void SendOfflineMsgReq::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::proto::OfflineMsgBin& SendOfflineMsgReq::msg() const {
  const ::proto::OfflineMsgBin* p = msg_;
  // @@protoc_insertion_point(field_get:proto.SendOfflineMsgReq.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OfflineMsgBin*>(
      &::proto::_OfflineMsgBin_default_instance_);
}
::proto::OfflineMsgBin* SendOfflineMsgReq::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::OfflineMsgBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SendOfflineMsgReq.msg)
  return msg_;
}
::proto::OfflineMsgBin* SendOfflineMsgReq::release_msg() {
  // @@protoc_insertion_point(field_release:proto.SendOfflineMsgReq.msg)
  
  ::proto::OfflineMsgBin* temp = msg_;
  msg_ = NULL;
  return temp;
}
void SendOfflineMsgReq::set_allocated_msg(::proto::OfflineMsgBin* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SendOfflineMsgReq.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendOfflineMsgRsp::kRetcodeFieldNumber;
const int SendOfflineMsgRsp::kTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendOfflineMsgRsp::SendOfflineMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SendOfflineMsgRsp)
}
SendOfflineMsgRsp::SendOfflineMsgRsp(const SendOfflineMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ticket().size() > 0) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SendOfflineMsgRsp)
}

void SendOfflineMsgRsp::SharedCtor() {
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _cached_size_ = 0;
}

SendOfflineMsgRsp::~SendOfflineMsgRsp() {
  // @@protoc_insertion_point(destructor:proto.SendOfflineMsgRsp)
  SharedDtor();
}

void SendOfflineMsgRsp::SharedDtor() {
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendOfflineMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendOfflineMsgRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendOfflineMsgRsp& SendOfflineMsgRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendOfflineMsgRsp* SendOfflineMsgRsp::New(::google::protobuf::Arena* arena) const {
  SendOfflineMsgRsp* n = new SendOfflineMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendOfflineMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SendOfflineMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SendOfflineMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SendOfflineMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ticket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ticket().data(), static_cast<int>(this->ticket().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SendOfflineMsgRsp.ticket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SendOfflineMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SendOfflineMsgRsp)
  return false;
#undef DO_
}

void SendOfflineMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SendOfflineMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // string ticket = 2;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendOfflineMsgRsp.ticket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ticket(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SendOfflineMsgRsp)
}

::google::protobuf::uint8* SendOfflineMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SendOfflineMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // string ticket = 2;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendOfflineMsgRsp.ticket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ticket(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SendOfflineMsgRsp)
  return target;
}

size_t SendOfflineMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SendOfflineMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ticket = 2;
  if (this->ticket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticket());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendOfflineMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SendOfflineMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SendOfflineMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendOfflineMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SendOfflineMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SendOfflineMsgRsp)
    MergeFrom(*source);
  }
}

void SendOfflineMsgRsp::MergeFrom(const SendOfflineMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SendOfflineMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticket().size() > 0) {

    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SendOfflineMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SendOfflineMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendOfflineMsgRsp::CopyFrom(const SendOfflineMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SendOfflineMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendOfflineMsgRsp::IsInitialized() const {
  return true;
}

void SendOfflineMsgRsp::Swap(SendOfflineMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendOfflineMsgRsp::InternalSwap(SendOfflineMsgRsp* other) {
  using std::swap;
  ticket_.Swap(&other->ticket_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendOfflineMsgRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendOfflineMsgRsp

// int32 retcode = 1;
void SendOfflineMsgRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SendOfflineMsgRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SendOfflineMsgRsp.retcode)
  return retcode_;
}
void SendOfflineMsgRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SendOfflineMsgRsp.retcode)
}

// string ticket = 2;
void SendOfflineMsgRsp::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SendOfflineMsgRsp::ticket() const {
  // @@protoc_insertion_point(field_get:proto.SendOfflineMsgRsp.ticket)
  return ticket_.GetNoArena();
}
void SendOfflineMsgRsp::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SendOfflineMsgRsp.ticket)
}
#if LANG_CXX11
void SendOfflineMsgRsp::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SendOfflineMsgRsp.ticket)
}
#endif
void SendOfflineMsgRsp::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SendOfflineMsgRsp.ticket)
}
void SendOfflineMsgRsp::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SendOfflineMsgRsp.ticket)
}
::std::string* SendOfflineMsgRsp::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.SendOfflineMsgRsp.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendOfflineMsgRsp::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.SendOfflineMsgRsp.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendOfflineMsgRsp::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.SendOfflineMsgRsp.ticket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewOfflineMsgNotify::NewOfflineMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.NewOfflineMsgNotify)
}
NewOfflineMsgNotify::NewOfflineMsgNotify(const NewOfflineMsgNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.NewOfflineMsgNotify)
}

void NewOfflineMsgNotify::SharedCtor() {
  _cached_size_ = 0;
}

NewOfflineMsgNotify::~NewOfflineMsgNotify() {
  // @@protoc_insertion_point(destructor:proto.NewOfflineMsgNotify)
  SharedDtor();
}

void NewOfflineMsgNotify::SharedDtor() {
}

void NewOfflineMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewOfflineMsgNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewOfflineMsgNotify& NewOfflineMsgNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewOfflineMsgNotify* NewOfflineMsgNotify::New(::google::protobuf::Arena* arena) const {
  NewOfflineMsgNotify* n = new NewOfflineMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewOfflineMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.NewOfflineMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool NewOfflineMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.NewOfflineMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.NewOfflineMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.NewOfflineMsgNotify)
  return false;
#undef DO_
}

void NewOfflineMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.NewOfflineMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.NewOfflineMsgNotify)
}

::google::protobuf::uint8* NewOfflineMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.NewOfflineMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.NewOfflineMsgNotify)
  return target;
}

size_t NewOfflineMsgNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.NewOfflineMsgNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewOfflineMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.NewOfflineMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const NewOfflineMsgNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewOfflineMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.NewOfflineMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.NewOfflineMsgNotify)
    MergeFrom(*source);
  }
}

void NewOfflineMsgNotify::MergeFrom(const NewOfflineMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.NewOfflineMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void NewOfflineMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.NewOfflineMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewOfflineMsgNotify::CopyFrom(const NewOfflineMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.NewOfflineMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewOfflineMsgNotify::IsInitialized() const {
  return true;
}

void NewOfflineMsgNotify::Swap(NewOfflineMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewOfflineMsgNotify::InternalSwap(NewOfflineMsgNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewOfflineMsgNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewOfflineMsgNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOfflineMsgReq::kIndexFieldNumber;
const int GetOfflineMsgReq::kIsLoginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOfflineMsgReq::GetOfflineMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetOfflineMsgReq)
}
GetOfflineMsgReq::GetOfflineMsgReq(const GetOfflineMsgReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_login_) -
    reinterpret_cast<char*>(&index_)) + sizeof(is_login_));
  // @@protoc_insertion_point(copy_constructor:proto.GetOfflineMsgReq)
}

void GetOfflineMsgReq::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_login_) -
      reinterpret_cast<char*>(&index_)) + sizeof(is_login_));
  _cached_size_ = 0;
}

GetOfflineMsgReq::~GetOfflineMsgReq() {
  // @@protoc_insertion_point(destructor:proto.GetOfflineMsgReq)
  SharedDtor();
}

void GetOfflineMsgReq::SharedDtor() {
}

void GetOfflineMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOfflineMsgReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOfflineMsgReq& GetOfflineMsgReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOfflineMsgReq* GetOfflineMsgReq::New(::google::protobuf::Arena* arena) const {
  GetOfflineMsgReq* n = new GetOfflineMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOfflineMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetOfflineMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_login_) -
      reinterpret_cast<char*>(&index_)) + sizeof(is_login_));
  _internal_metadata_.Clear();
}

bool GetOfflineMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetOfflineMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_login = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_login_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetOfflineMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetOfflineMsgReq)
  return false;
#undef DO_
}

void GetOfflineMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetOfflineMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // bool is_login = 2;
  if (this->is_login() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_login(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetOfflineMsgReq)
}

::google::protobuf::uint8* GetOfflineMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetOfflineMsgReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // bool is_login = 2;
  if (this->is_login() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_login(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetOfflineMsgReq)
  return target;
}

size_t GetOfflineMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetOfflineMsgReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // bool is_login = 2;
  if (this->is_login() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOfflineMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetOfflineMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOfflineMsgReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOfflineMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetOfflineMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetOfflineMsgReq)
    MergeFrom(*source);
  }
}

void GetOfflineMsgReq::MergeFrom(const GetOfflineMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetOfflineMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.is_login() != 0) {
    set_is_login(from.is_login());
  }
}

void GetOfflineMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetOfflineMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOfflineMsgReq::CopyFrom(const GetOfflineMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetOfflineMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOfflineMsgReq::IsInitialized() const {
  return true;
}

void GetOfflineMsgReq::Swap(GetOfflineMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOfflineMsgReq::InternalSwap(GetOfflineMsgReq* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(is_login_, other->is_login_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOfflineMsgReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOfflineMsgReq

// uint32 index = 1;
void GetOfflineMsgReq::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 GetOfflineMsgReq::index() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineMsgReq.index)
  return index_;
}
void GetOfflineMsgReq::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineMsgReq.index)
}

// bool is_login = 2;
void GetOfflineMsgReq::clear_is_login() {
  is_login_ = false;
}
bool GetOfflineMsgReq::is_login() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineMsgReq.is_login)
  return is_login_;
}
void GetOfflineMsgReq::set_is_login(bool value) {
  
  is_login_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineMsgReq.is_login)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOfflineMsgRsp::kRetcodeFieldNumber;
const int GetOfflineMsgRsp::kLastIndexFieldNumber;
const int GetOfflineMsgRsp::kOfflineMsgListFieldNumber;
const int GetOfflineMsgRsp::kIsLoginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOfflineMsgRsp::GetOfflineMsgRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetOfflineMsgRsp)
}
GetOfflineMsgRsp::GetOfflineMsgRsp(const GetOfflineMsgRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      offline_msg_list_(from.offline_msg_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_login_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(is_login_));
  // @@protoc_insertion_point(copy_constructor:proto.GetOfflineMsgRsp)
}

void GetOfflineMsgRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_login_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_login_));
  _cached_size_ = 0;
}

GetOfflineMsgRsp::~GetOfflineMsgRsp() {
  // @@protoc_insertion_point(destructor:proto.GetOfflineMsgRsp)
  SharedDtor();
}

void GetOfflineMsgRsp::SharedDtor() {
}

void GetOfflineMsgRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOfflineMsgRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOfflineMsgRsp& GetOfflineMsgRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetOfflineMsgRsp* GetOfflineMsgRsp::New(::google::protobuf::Arena* arena) const {
  GetOfflineMsgRsp* n = new GetOfflineMsgRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOfflineMsgRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetOfflineMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  offline_msg_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_login_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_login_));
  _internal_metadata_.Clear();
}

bool GetOfflineMsgRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetOfflineMsgRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.OfflineMsgBin offline_msg_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_offline_msg_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_login = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_login_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetOfflineMsgRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetOfflineMsgRsp)
  return false;
#undef DO_
}

void GetOfflineMsgRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetOfflineMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 last_index = 2;
  if (this->last_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_index(), output);
  }

  // repeated .proto.OfflineMsgBin offline_msg_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->offline_msg_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->offline_msg_list(static_cast<int>(i)), output);
  }

  // bool is_login = 4;
  if (this->is_login() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_login(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetOfflineMsgRsp)
}

::google::protobuf::uint8* GetOfflineMsgRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetOfflineMsgRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 last_index = 2;
  if (this->last_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_index(), target);
  }

  // repeated .proto.OfflineMsgBin offline_msg_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->offline_msg_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->offline_msg_list(static_cast<int>(i)), deterministic, target);
  }

  // bool is_login = 4;
  if (this->is_login() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_login(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetOfflineMsgRsp)
  return target;
}

size_t GetOfflineMsgRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetOfflineMsgRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.OfflineMsgBin offline_msg_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->offline_msg_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->offline_msg_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 last_index = 2;
  if (this->last_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_index());
  }

  // bool is_login = 4;
  if (this->is_login() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOfflineMsgRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetOfflineMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOfflineMsgRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOfflineMsgRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetOfflineMsgRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetOfflineMsgRsp)
    MergeFrom(*source);
  }
}

void GetOfflineMsgRsp::MergeFrom(const GetOfflineMsgRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetOfflineMsgRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  offline_msg_list_.MergeFrom(from.offline_msg_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.last_index() != 0) {
    set_last_index(from.last_index());
  }
  if (from.is_login() != 0) {
    set_is_login(from.is_login());
  }
}

void GetOfflineMsgRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetOfflineMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOfflineMsgRsp::CopyFrom(const GetOfflineMsgRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetOfflineMsgRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOfflineMsgRsp::IsInitialized() const {
  return true;
}

void GetOfflineMsgRsp::Swap(GetOfflineMsgRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOfflineMsgRsp::InternalSwap(GetOfflineMsgRsp* other) {
  using std::swap;
  offline_msg_list_.InternalSwap(&other->offline_msg_list_);
  swap(retcode_, other->retcode_);
  swap(last_index_, other->last_index_);
  swap(is_login_, other->is_login_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOfflineMsgRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetOfflineMsgRsp

// int32 retcode = 1;
void GetOfflineMsgRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetOfflineMsgRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineMsgRsp.retcode)
  return retcode_;
}
void GetOfflineMsgRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineMsgRsp.retcode)
}

// uint32 last_index = 2;
void GetOfflineMsgRsp::clear_last_index() {
  last_index_ = 0u;
}
::google::protobuf::uint32 GetOfflineMsgRsp::last_index() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineMsgRsp.last_index)
  return last_index_;
}
void GetOfflineMsgRsp::set_last_index(::google::protobuf::uint32 value) {
  
  last_index_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineMsgRsp.last_index)
}

// repeated .proto.OfflineMsgBin offline_msg_list = 3;
int GetOfflineMsgRsp::offline_msg_list_size() const {
  return offline_msg_list_.size();
}
void GetOfflineMsgRsp::clear_offline_msg_list() {
  offline_msg_list_.Clear();
}
const ::proto::OfflineMsgBin& GetOfflineMsgRsp::offline_msg_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineMsgRsp.offline_msg_list)
  return offline_msg_list_.Get(index);
}
::proto::OfflineMsgBin* GetOfflineMsgRsp::mutable_offline_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetOfflineMsgRsp.offline_msg_list)
  return offline_msg_list_.Mutable(index);
}
::proto::OfflineMsgBin* GetOfflineMsgRsp::add_offline_msg_list() {
  // @@protoc_insertion_point(field_add:proto.GetOfflineMsgRsp.offline_msg_list)
  return offline_msg_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::OfflineMsgBin >*
GetOfflineMsgRsp::mutable_offline_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetOfflineMsgRsp.offline_msg_list)
  return &offline_msg_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::OfflineMsgBin >&
GetOfflineMsgRsp::offline_msg_list() const {
  // @@protoc_insertion_point(field_list:proto.GetOfflineMsgRsp.offline_msg_list)
  return offline_msg_list_;
}

// bool is_login = 4;
void GetOfflineMsgRsp::clear_is_login() {
  is_login_ = false;
}
bool GetOfflineMsgRsp::is_login() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineMsgRsp.is_login)
  return is_login_;
}
void GetOfflineMsgRsp::set_is_login(bool value) {
  
  is_login_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineMsgRsp.is_login)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveOfflineMsgNotify::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveOfflineMsgNotify::RemoveOfflineMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RemoveOfflineMsgNotify)
}
RemoveOfflineMsgNotify::RemoveOfflineMsgNotify(const RemoveOfflineMsgNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:proto.RemoveOfflineMsgNotify)
}

void RemoveOfflineMsgNotify::SharedCtor() {
  index_ = 0u;
  _cached_size_ = 0;
}

RemoveOfflineMsgNotify::~RemoveOfflineMsgNotify() {
  // @@protoc_insertion_point(destructor:proto.RemoveOfflineMsgNotify)
  SharedDtor();
}

void RemoveOfflineMsgNotify::SharedDtor() {
}

void RemoveOfflineMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveOfflineMsgNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveOfflineMsgNotify& RemoveOfflineMsgNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoveOfflineMsgNotify* RemoveOfflineMsgNotify::New(::google::protobuf::Arena* arena) const {
  RemoveOfflineMsgNotify* n = new RemoveOfflineMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveOfflineMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RemoveOfflineMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = 0u;
  _internal_metadata_.Clear();
}

bool RemoveOfflineMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RemoveOfflineMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RemoveOfflineMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RemoveOfflineMsgNotify)
  return false;
#undef DO_
}

void RemoveOfflineMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RemoveOfflineMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RemoveOfflineMsgNotify)
}

::google::protobuf::uint8* RemoveOfflineMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RemoveOfflineMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RemoveOfflineMsgNotify)
  return target;
}

size_t RemoveOfflineMsgNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RemoveOfflineMsgNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveOfflineMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RemoveOfflineMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOfflineMsgNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveOfflineMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RemoveOfflineMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RemoveOfflineMsgNotify)
    MergeFrom(*source);
  }
}

void RemoveOfflineMsgNotify::MergeFrom(const RemoveOfflineMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RemoveOfflineMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
}

void RemoveOfflineMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RemoveOfflineMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOfflineMsgNotify::CopyFrom(const RemoveOfflineMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RemoveOfflineMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOfflineMsgNotify::IsInitialized() const {
  return true;
}

void RemoveOfflineMsgNotify::Swap(RemoveOfflineMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveOfflineMsgNotify::InternalSwap(RemoveOfflineMsgNotify* other) {
  using std::swap;
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveOfflineMsgNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveOfflineMsgNotify

// uint32 index = 1;
void RemoveOfflineMsgNotify::clear_index() {
  index_ = 0u;
}
::google::protobuf::uint32 RemoveOfflineMsgNotify::index() const {
  // @@protoc_insertion_point(field_get:proto.RemoveOfflineMsgNotify.index)
  return index_;
}
void RemoveOfflineMsgNotify::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveOfflineMsgNotify.index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearOfflineMsgNotify::ClearOfflineMsgNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClearOfflineMsgNotify)
}
ClearOfflineMsgNotify::ClearOfflineMsgNotify(const ClearOfflineMsgNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ClearOfflineMsgNotify)
}

void ClearOfflineMsgNotify::SharedCtor() {
  _cached_size_ = 0;
}

ClearOfflineMsgNotify::~ClearOfflineMsgNotify() {
  // @@protoc_insertion_point(destructor:proto.ClearOfflineMsgNotify)
  SharedDtor();
}

void ClearOfflineMsgNotify::SharedDtor() {
}

void ClearOfflineMsgNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClearOfflineMsgNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClearOfflineMsgNotify& ClearOfflineMsgNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClearOfflineMsgNotify* ClearOfflineMsgNotify::New(::google::protobuf::Arena* arena) const {
  ClearOfflineMsgNotify* n = new ClearOfflineMsgNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClearOfflineMsgNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClearOfflineMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ClearOfflineMsgNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClearOfflineMsgNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClearOfflineMsgNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClearOfflineMsgNotify)
  return false;
#undef DO_
}

void ClearOfflineMsgNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClearOfflineMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClearOfflineMsgNotify)
}

::google::protobuf::uint8* ClearOfflineMsgNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClearOfflineMsgNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClearOfflineMsgNotify)
  return target;
}

size_t ClearOfflineMsgNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClearOfflineMsgNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClearOfflineMsgNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClearOfflineMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearOfflineMsgNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClearOfflineMsgNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClearOfflineMsgNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClearOfflineMsgNotify)
    MergeFrom(*source);
  }
}

void ClearOfflineMsgNotify::MergeFrom(const ClearOfflineMsgNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClearOfflineMsgNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClearOfflineMsgNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClearOfflineMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearOfflineMsgNotify::CopyFrom(const ClearOfflineMsgNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClearOfflineMsgNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearOfflineMsgNotify::IsInitialized() const {
  return true;
}

void ClearOfflineMsgNotify::Swap(ClearOfflineMsgNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearOfflineMsgNotify::InternalSwap(ClearOfflineMsgNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClearOfflineMsgNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClearOfflineMsgNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRedisMailReq::kOpTypeFieldNumber;
const int UpdateRedisMailReq::kMailIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRedisMailReq::UpdateRedisMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdateRedisMailReq)
}
UpdateRedisMailReq::UpdateRedisMailReq(const UpdateRedisMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mail_id_list_(from.mail_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_type_ = from.op_type_;
  // @@protoc_insertion_point(copy_constructor:proto.UpdateRedisMailReq)
}

void UpdateRedisMailReq::SharedCtor() {
  op_type_ = 0;
  _cached_size_ = 0;
}

UpdateRedisMailReq::~UpdateRedisMailReq() {
  // @@protoc_insertion_point(destructor:proto.UpdateRedisMailReq)
  SharedDtor();
}

void UpdateRedisMailReq::SharedDtor() {
}

void UpdateRedisMailReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRedisMailReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateRedisMailReq& UpdateRedisMailReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateRedisMailReq* UpdateRedisMailReq::New(::google::protobuf::Arena* arena) const {
  UpdateRedisMailReq* n = new UpdateRedisMailReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateRedisMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_id_list_.Clear();
  op_type_ = 0;
  _internal_metadata_.Clear();
}

bool UpdateRedisMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdateRedisMailReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MailUpdateOpType op_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::MailUpdateOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 mail_id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_mail_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_mail_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdateRedisMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdateRedisMailReq)
  return false;
#undef DO_
}

void UpdateRedisMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdateRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MailUpdateOpType op_type = 1;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->op_type(), output);
  }

  // repeated uint32 mail_id_list = 2;
  if (this->mail_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mail_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->mail_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->mail_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdateRedisMailReq)
}

::google::protobuf::uint8* UpdateRedisMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MailUpdateOpType op_type = 1;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->op_type(), target);
  }

  // repeated uint32 mail_id_list = 2;
  if (this->mail_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _mail_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->mail_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateRedisMailReq)
  return target;
}

size_t UpdateRedisMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateRedisMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 mail_id_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->mail_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mail_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.MailUpdateOpType op_type = 1;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRedisMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdateRedisMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRedisMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRedisMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdateRedisMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdateRedisMailReq)
    MergeFrom(*source);
  }
}

void UpdateRedisMailReq::MergeFrom(const UpdateRedisMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateRedisMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mail_id_list_.MergeFrom(from.mail_id_list_);
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void UpdateRedisMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdateRedisMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRedisMailReq::CopyFrom(const UpdateRedisMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateRedisMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRedisMailReq::IsInitialized() const {
  return true;
}

void UpdateRedisMailReq::Swap(UpdateRedisMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRedisMailReq::InternalSwap(UpdateRedisMailReq* other) {
  using std::swap;
  mail_id_list_.InternalSwap(&other->mail_id_list_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateRedisMailReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateRedisMailReq

// .proto.MailUpdateOpType op_type = 1;
void UpdateRedisMailReq::clear_op_type() {
  op_type_ = 0;
}
::proto::MailUpdateOpType UpdateRedisMailReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedisMailReq.op_type)
  return static_cast< ::proto::MailUpdateOpType >(op_type_);
}
void UpdateRedisMailReq::set_op_type(::proto::MailUpdateOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdateRedisMailReq.op_type)
}

// repeated uint32 mail_id_list = 2;
int UpdateRedisMailReq::mail_id_list_size() const {
  return mail_id_list_.size();
}
void UpdateRedisMailReq::clear_mail_id_list() {
  mail_id_list_.Clear();
}
::google::protobuf::uint32 UpdateRedisMailReq::mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedisMailReq.mail_id_list)
  return mail_id_list_.Get(index);
}
void UpdateRedisMailReq::set_mail_id_list(int index, ::google::protobuf::uint32 value) {
  mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UpdateRedisMailReq.mail_id_list)
}
void UpdateRedisMailReq::add_mail_id_list(::google::protobuf::uint32 value) {
  mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UpdateRedisMailReq.mail_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdateRedisMailReq::mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdateRedisMailReq.mail_id_list)
  return mail_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdateRedisMailReq::mutable_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdateRedisMailReq.mail_id_list)
  return &mail_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRedisMailRsp::kRetcodeFieldNumber;
const int UpdateRedisMailRsp::kOpTypeFieldNumber;
const int UpdateRedisMailRsp::kMailIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRedisMailRsp::UpdateRedisMailRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdateRedisMailRsp)
}
UpdateRedisMailRsp::UpdateRedisMailRsp(const UpdateRedisMailRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mail_id_list_(from.mail_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(op_type_));
  // @@protoc_insertion_point(copy_constructor:proto.UpdateRedisMailRsp)
}

void UpdateRedisMailRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(op_type_));
  _cached_size_ = 0;
}

UpdateRedisMailRsp::~UpdateRedisMailRsp() {
  // @@protoc_insertion_point(destructor:proto.UpdateRedisMailRsp)
  SharedDtor();
}

void UpdateRedisMailRsp::SharedDtor() {
}

void UpdateRedisMailRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRedisMailRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateRedisMailRsp& UpdateRedisMailRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateRedisMailRsp* UpdateRedisMailRsp::New(::google::protobuf::Arena* arena) const {
  UpdateRedisMailRsp* n = new UpdateRedisMailRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateRedisMailRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_id_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(op_type_));
  _internal_metadata_.Clear();
}

bool UpdateRedisMailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdateRedisMailRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MailUpdateOpType op_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::MailUpdateOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 mail_id_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_mail_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_mail_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdateRedisMailRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdateRedisMailRsp)
  return false;
#undef DO_
}

void UpdateRedisMailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdateRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.MailUpdateOpType op_type = 2;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->op_type(), output);
  }

  // repeated uint32 mail_id_list = 3;
  if (this->mail_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mail_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->mail_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->mail_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdateRedisMailRsp)
}

::google::protobuf::uint8* UpdateRedisMailRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.MailUpdateOpType op_type = 2;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->op_type(), target);
  }

  // repeated uint32 mail_id_list = 3;
  if (this->mail_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _mail_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->mail_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateRedisMailRsp)
  return target;
}

size_t UpdateRedisMailRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateRedisMailRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 mail_id_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->mail_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mail_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.MailUpdateOpType op_type = 2;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRedisMailRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdateRedisMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRedisMailRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRedisMailRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdateRedisMailRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdateRedisMailRsp)
    MergeFrom(*source);
  }
}

void UpdateRedisMailRsp::MergeFrom(const UpdateRedisMailRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateRedisMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mail_id_list_.MergeFrom(from.mail_id_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void UpdateRedisMailRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdateRedisMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRedisMailRsp::CopyFrom(const UpdateRedisMailRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateRedisMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRedisMailRsp::IsInitialized() const {
  return true;
}

void UpdateRedisMailRsp::Swap(UpdateRedisMailRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRedisMailRsp::InternalSwap(UpdateRedisMailRsp* other) {
  using std::swap;
  mail_id_list_.InternalSwap(&other->mail_id_list_);
  swap(retcode_, other->retcode_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateRedisMailRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateRedisMailRsp

// int32 retcode = 1;
void UpdateRedisMailRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 UpdateRedisMailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedisMailRsp.retcode)
  return retcode_;
}
void UpdateRedisMailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdateRedisMailRsp.retcode)
}

// .proto.MailUpdateOpType op_type = 2;
void UpdateRedisMailRsp::clear_op_type() {
  op_type_ = 0;
}
::proto::MailUpdateOpType UpdateRedisMailRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedisMailRsp.op_type)
  return static_cast< ::proto::MailUpdateOpType >(op_type_);
}
void UpdateRedisMailRsp::set_op_type(::proto::MailUpdateOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdateRedisMailRsp.op_type)
}

// repeated uint32 mail_id_list = 3;
int UpdateRedisMailRsp::mail_id_list_size() const {
  return mail_id_list_.size();
}
void UpdateRedisMailRsp::clear_mail_id_list() {
  mail_id_list_.Clear();
}
::google::protobuf::uint32 UpdateRedisMailRsp::mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedisMailRsp.mail_id_list)
  return mail_id_list_.Get(index);
}
void UpdateRedisMailRsp::set_mail_id_list(int index, ::google::protobuf::uint32 value) {
  mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UpdateRedisMailRsp.mail_id_list)
}
void UpdateRedisMailRsp::add_mail_id_list(::google::protobuf::uint32 value) {
  mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UpdateRedisMailRsp.mail_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdateRedisMailRsp::mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdateRedisMailRsp.mail_id_list)
  return mail_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdateRedisMailRsp::mutable_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdateRedisMailRsp.mail_id_list)
  return &mail_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRedisMailTransactionStatusReq::kTransactionListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRedisMailTransactionStatusReq::GetRedisMailTransactionStatusReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetRedisMailTransactionStatusReq)
}
GetRedisMailTransactionStatusReq::GetRedisMailTransactionStatusReq(const GetRedisMailTransactionStatusReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transaction_list_(from.transaction_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetRedisMailTransactionStatusReq)
}

void GetRedisMailTransactionStatusReq::SharedCtor() {
  _cached_size_ = 0;
}

GetRedisMailTransactionStatusReq::~GetRedisMailTransactionStatusReq() {
  // @@protoc_insertion_point(destructor:proto.GetRedisMailTransactionStatusReq)
  SharedDtor();
}

void GetRedisMailTransactionStatusReq::SharedDtor() {
}

void GetRedisMailTransactionStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRedisMailTransactionStatusReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRedisMailTransactionStatusReq& GetRedisMailTransactionStatusReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRedisMailTransactionStatusReq* GetRedisMailTransactionStatusReq::New(::google::protobuf::Arena* arena) const {
  GetRedisMailTransactionStatusReq* n = new GetRedisMailTransactionStatusReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRedisMailTransactionStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetRedisMailTransactionStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_list_.Clear();
  _internal_metadata_.Clear();
}

bool GetRedisMailTransactionStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetRedisMailTransactionStatusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string transaction_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_transaction_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->transaction_list(this->transaction_list_size() - 1).data(),
            static_cast<int>(this->transaction_list(this->transaction_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetRedisMailTransactionStatusReq.transaction_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetRedisMailTransactionStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetRedisMailTransactionStatusReq)
  return false;
#undef DO_
}

void GetRedisMailTransactionStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetRedisMailTransactionStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string transaction_list = 2;
  for (int i = 0, n = this->transaction_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transaction_list(i).data(), static_cast<int>(this->transaction_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetRedisMailTransactionStatusReq.transaction_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->transaction_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetRedisMailTransactionStatusReq)
}

::google::protobuf::uint8* GetRedisMailTransactionStatusReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetRedisMailTransactionStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string transaction_list = 2;
  for (int i = 0, n = this->transaction_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->transaction_list(i).data(), static_cast<int>(this->transaction_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.GetRedisMailTransactionStatusReq.transaction_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->transaction_list(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetRedisMailTransactionStatusReq)
  return target;
}

size_t GetRedisMailTransactionStatusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetRedisMailTransactionStatusReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string transaction_list = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->transaction_list_size());
  for (int i = 0, n = this->transaction_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->transaction_list(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRedisMailTransactionStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetRedisMailTransactionStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRedisMailTransactionStatusReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRedisMailTransactionStatusReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetRedisMailTransactionStatusReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetRedisMailTransactionStatusReq)
    MergeFrom(*source);
  }
}

void GetRedisMailTransactionStatusReq::MergeFrom(const GetRedisMailTransactionStatusReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetRedisMailTransactionStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transaction_list_.MergeFrom(from.transaction_list_);
}

void GetRedisMailTransactionStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetRedisMailTransactionStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRedisMailTransactionStatusReq::CopyFrom(const GetRedisMailTransactionStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetRedisMailTransactionStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRedisMailTransactionStatusReq::IsInitialized() const {
  return true;
}

void GetRedisMailTransactionStatusReq::Swap(GetRedisMailTransactionStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRedisMailTransactionStatusReq::InternalSwap(GetRedisMailTransactionStatusReq* other) {
  using std::swap;
  transaction_list_.InternalSwap(&other->transaction_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRedisMailTransactionStatusReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRedisMailTransactionStatusReq

// repeated string transaction_list = 2;
int GetRedisMailTransactionStatusReq::transaction_list_size() const {
  return transaction_list_.size();
}
void GetRedisMailTransactionStatusReq::clear_transaction_list() {
  transaction_list_.Clear();
}
const ::std::string& GetRedisMailTransactionStatusReq::transaction_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailTransactionStatusReq.transaction_list)
  return transaction_list_.Get(index);
}
::std::string* GetRedisMailTransactionStatusReq::mutable_transaction_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetRedisMailTransactionStatusReq.transaction_list)
  return transaction_list_.Mutable(index);
}
void GetRedisMailTransactionStatusReq::set_transaction_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.GetRedisMailTransactionStatusReq.transaction_list)
  transaction_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void GetRedisMailTransactionStatusReq::set_transaction_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.GetRedisMailTransactionStatusReq.transaction_list)
  transaction_list_.Mutable(index)->assign(std::move(value));
}
#endif
void GetRedisMailTransactionStatusReq::set_transaction_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  transaction_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.GetRedisMailTransactionStatusReq.transaction_list)
}
void GetRedisMailTransactionStatusReq::set_transaction_list(int index, const char* value, size_t size) {
  transaction_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.GetRedisMailTransactionStatusReq.transaction_list)
}
::std::string* GetRedisMailTransactionStatusReq::add_transaction_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.GetRedisMailTransactionStatusReq.transaction_list)
  return transaction_list_.Add();
}
void GetRedisMailTransactionStatusReq::add_transaction_list(const ::std::string& value) {
  transaction_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.GetRedisMailTransactionStatusReq.transaction_list)
}
#if LANG_CXX11
void GetRedisMailTransactionStatusReq::add_transaction_list(::std::string&& value) {
  transaction_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.GetRedisMailTransactionStatusReq.transaction_list)
}
#endif
void GetRedisMailTransactionStatusReq::add_transaction_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  transaction_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.GetRedisMailTransactionStatusReq.transaction_list)
}
void GetRedisMailTransactionStatusReq::add_transaction_list(const char* value, size_t size) {
  transaction_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.GetRedisMailTransactionStatusReq.transaction_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetRedisMailTransactionStatusReq::transaction_list() const {
  // @@protoc_insertion_point(field_list:proto.GetRedisMailTransactionStatusReq.transaction_list)
  return transaction_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GetRedisMailTransactionStatusReq::mutable_transaction_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetRedisMailTransactionStatusReq.transaction_list)
  return &transaction_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GetRedisMailTransactionStatusRsp::GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry::GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry() {}
GetRedisMailTransactionStatusRsp::GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry::GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GetRedisMailTransactionStatusRsp::GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[17];
}
void GetRedisMailTransactionStatusRsp::GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GetRedisMailTransactionStatusRsp::GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry::MergeFrom(const GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRedisMailTransactionStatusRsp::kRetcodeFieldNumber;
const int GetRedisMailTransactionStatusRsp::kTransactionStatusMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRedisMailTransactionStatusRsp::GetRedisMailTransactionStatusRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetRedisMailTransactionStatusRsp)
}
GetRedisMailTransactionStatusRsp::GetRedisMailTransactionStatusRsp(const GetRedisMailTransactionStatusRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  transaction_status_map_.MergeFrom(from.transaction_status_map_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetRedisMailTransactionStatusRsp)
}

void GetRedisMailTransactionStatusRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetRedisMailTransactionStatusRsp::~GetRedisMailTransactionStatusRsp() {
  // @@protoc_insertion_point(destructor:proto.GetRedisMailTransactionStatusRsp)
  SharedDtor();
}

void GetRedisMailTransactionStatusRsp::SharedDtor() {
}

void GetRedisMailTransactionStatusRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRedisMailTransactionStatusRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRedisMailTransactionStatusRsp& GetRedisMailTransactionStatusRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRedisMailTransactionStatusRsp* GetRedisMailTransactionStatusRsp::New(::google::protobuf::Arena* arena) const {
  GetRedisMailTransactionStatusRsp* n = new GetRedisMailTransactionStatusRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRedisMailTransactionStatusRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetRedisMailTransactionStatusRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transaction_status_map_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetRedisMailTransactionStatusRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetRedisMailTransactionStatusRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bool> transaction_status_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry::Parser< ::google::protobuf::internal::MapField<
              GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry,
              ::std::string, bool,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              0 >,
            ::google::protobuf::Map< ::std::string, bool > > parser(&transaction_status_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GetRedisMailTransactionStatusRsp.TransactionStatusMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetRedisMailTransactionStatusRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetRedisMailTransactionStatusRsp)
  return false;
#undef DO_
}

void GetRedisMailTransactionStatusRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetRedisMailTransactionStatusRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // map<string, bool> transaction_status_map = 2;
  if (!this->transaction_status_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, bool >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.GetRedisMailTransactionStatusRsp.TransactionStatusMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->transaction_status_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->transaction_status_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->transaction_status_map().begin();
          it != this->transaction_status_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(transaction_status_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->transaction_status_map().begin();
          it != this->transaction_status_map().end(); ++it) {
        entry.reset(transaction_status_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetRedisMailTransactionStatusRsp)
}

::google::protobuf::uint8* GetRedisMailTransactionStatusRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetRedisMailTransactionStatusRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // map<string, bool> transaction_status_map = 2;
  if (!this->transaction_status_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, bool >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.GetRedisMailTransactionStatusRsp.TransactionStatusMapEntry.key");
      }
    };

    if (deterministic &&
        this->transaction_status_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->transaction_status_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->transaction_status_map().begin();
          it != this->transaction_status_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(transaction_status_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->transaction_status_map().begin();
          it != this->transaction_status_map().end(); ++it) {
        entry.reset(transaction_status_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetRedisMailTransactionStatusRsp)
  return target;
}

size_t GetRedisMailTransactionStatusRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetRedisMailTransactionStatusRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bool> transaction_status_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->transaction_status_map_size());
  {
    ::google::protobuf::scoped_ptr<GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry> entry;
    for (::google::protobuf::Map< ::std::string, bool >::const_iterator
        it = this->transaction_status_map().begin();
        it != this->transaction_status_map().end(); ++it) {
      entry.reset(transaction_status_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRedisMailTransactionStatusRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetRedisMailTransactionStatusRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRedisMailTransactionStatusRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRedisMailTransactionStatusRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetRedisMailTransactionStatusRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetRedisMailTransactionStatusRsp)
    MergeFrom(*source);
  }
}

void GetRedisMailTransactionStatusRsp::MergeFrom(const GetRedisMailTransactionStatusRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetRedisMailTransactionStatusRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transaction_status_map_.MergeFrom(from.transaction_status_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetRedisMailTransactionStatusRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetRedisMailTransactionStatusRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRedisMailTransactionStatusRsp::CopyFrom(const GetRedisMailTransactionStatusRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetRedisMailTransactionStatusRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRedisMailTransactionStatusRsp::IsInitialized() const {
  return true;
}

void GetRedisMailTransactionStatusRsp::Swap(GetRedisMailTransactionStatusRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRedisMailTransactionStatusRsp::InternalSwap(GetRedisMailTransactionStatusRsp* other) {
  using std::swap;
  transaction_status_map_.Swap(&other->transaction_status_map_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRedisMailTransactionStatusRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRedisMailTransactionStatusRsp

// int32 retcode = 1;
void GetRedisMailTransactionStatusRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetRedisMailTransactionStatusRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailTransactionStatusRsp.retcode)
  return retcode_;
}
void GetRedisMailTransactionStatusRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailTransactionStatusRsp.retcode)
}

// map<string, bool> transaction_status_map = 2;
int GetRedisMailTransactionStatusRsp::transaction_status_map_size() const {
  return transaction_status_map_.size();
}
void GetRedisMailTransactionStatusRsp::clear_transaction_status_map() {
  transaction_status_map_.Clear();
}
 const ::google::protobuf::Map< ::std::string, bool >&
GetRedisMailTransactionStatusRsp::transaction_status_map() const {
  // @@protoc_insertion_point(field_map:proto.GetRedisMailTransactionStatusRsp.transaction_status_map)
  return transaction_status_map_.GetMap();
}
 ::google::protobuf::Map< ::std::string, bool >*
GetRedisMailTransactionStatusRsp::mutable_transaction_status_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GetRedisMailTransactionStatusRsp.transaction_status_map)
  return transaction_status_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClearUpRedisMailNotify::ClearUpRedisMailNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClearUpRedisMailNotify)
}
ClearUpRedisMailNotify::ClearUpRedisMailNotify(const ClearUpRedisMailNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ClearUpRedisMailNotify)
}

void ClearUpRedisMailNotify::SharedCtor() {
  _cached_size_ = 0;
}

ClearUpRedisMailNotify::~ClearUpRedisMailNotify() {
  // @@protoc_insertion_point(destructor:proto.ClearUpRedisMailNotify)
  SharedDtor();
}

void ClearUpRedisMailNotify::SharedDtor() {
}

void ClearUpRedisMailNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClearUpRedisMailNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClearUpRedisMailNotify& ClearUpRedisMailNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClearUpRedisMailNotify* ClearUpRedisMailNotify::New(::google::protobuf::Arena* arena) const {
  ClearUpRedisMailNotify* n = new ClearUpRedisMailNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClearUpRedisMailNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClearUpRedisMailNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ClearUpRedisMailNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClearUpRedisMailNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClearUpRedisMailNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClearUpRedisMailNotify)
  return false;
#undef DO_
}

void ClearUpRedisMailNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClearUpRedisMailNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClearUpRedisMailNotify)
}

::google::protobuf::uint8* ClearUpRedisMailNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClearUpRedisMailNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClearUpRedisMailNotify)
  return target;
}

size_t ClearUpRedisMailNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClearUpRedisMailNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClearUpRedisMailNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClearUpRedisMailNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClearUpRedisMailNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClearUpRedisMailNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClearUpRedisMailNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClearUpRedisMailNotify)
    MergeFrom(*source);
  }
}

void ClearUpRedisMailNotify::MergeFrom(const ClearUpRedisMailNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClearUpRedisMailNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ClearUpRedisMailNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClearUpRedisMailNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClearUpRedisMailNotify::CopyFrom(const ClearUpRedisMailNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClearUpRedisMailNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClearUpRedisMailNotify::IsInitialized() const {
  return true;
}

void ClearUpRedisMailNotify::Swap(ClearUpRedisMailNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClearUpRedisMailNotify::InternalSwap(ClearUpRedisMailNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClearUpRedisMailNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClearUpRedisMailNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CleanRedisMailNotify::CleanRedisMailNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CleanRedisMailNotify)
}
CleanRedisMailNotify::CleanRedisMailNotify(const CleanRedisMailNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.CleanRedisMailNotify)
}

void CleanRedisMailNotify::SharedCtor() {
  _cached_size_ = 0;
}

CleanRedisMailNotify::~CleanRedisMailNotify() {
  // @@protoc_insertion_point(destructor:proto.CleanRedisMailNotify)
  SharedDtor();
}

void CleanRedisMailNotify::SharedDtor() {
}

void CleanRedisMailNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CleanRedisMailNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CleanRedisMailNotify& CleanRedisMailNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CleanRedisMailNotify* CleanRedisMailNotify::New(::google::protobuf::Arena* arena) const {
  CleanRedisMailNotify* n = new CleanRedisMailNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CleanRedisMailNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CleanRedisMailNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CleanRedisMailNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CleanRedisMailNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CleanRedisMailNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CleanRedisMailNotify)
  return false;
#undef DO_
}

void CleanRedisMailNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CleanRedisMailNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CleanRedisMailNotify)
}

::google::protobuf::uint8* CleanRedisMailNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CleanRedisMailNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CleanRedisMailNotify)
  return target;
}

size_t CleanRedisMailNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CleanRedisMailNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CleanRedisMailNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CleanRedisMailNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const CleanRedisMailNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CleanRedisMailNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CleanRedisMailNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CleanRedisMailNotify)
    MergeFrom(*source);
  }
}

void CleanRedisMailNotify::MergeFrom(const CleanRedisMailNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CleanRedisMailNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CleanRedisMailNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CleanRedisMailNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CleanRedisMailNotify::CopyFrom(const CleanRedisMailNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CleanRedisMailNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CleanRedisMailNotify::IsInitialized() const {
  return true;
}

void CleanRedisMailNotify::Swap(CleanRedisMailNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CleanRedisMailNotify::InternalSwap(CleanRedisMailNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CleanRedisMailNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CleanRedisMailNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ResendRedisMailReq::ResendRedisMailReq_MailBinMapEntry::ResendRedisMailReq_MailBinMapEntry() {}
ResendRedisMailReq::ResendRedisMailReq_MailBinMapEntry::ResendRedisMailReq_MailBinMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ResendRedisMailReq::ResendRedisMailReq_MailBinMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[21];
}
void ResendRedisMailReq::ResendRedisMailReq_MailBinMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ResendRedisMailReq::ResendRedisMailReq_MailBinMapEntry::MergeFrom(const ResendRedisMailReq_MailBinMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResendRedisMailReq::kMailBinMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResendRedisMailReq::ResendRedisMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResendRedisMailReq)
}
ResendRedisMailReq::ResendRedisMailReq(const ResendRedisMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mail_bin_map_.MergeFrom(from.mail_bin_map_);
  // @@protoc_insertion_point(copy_constructor:proto.ResendRedisMailReq)
}

void ResendRedisMailReq::SharedCtor() {
  _cached_size_ = 0;
}

ResendRedisMailReq::~ResendRedisMailReq() {
  // @@protoc_insertion_point(destructor:proto.ResendRedisMailReq)
  SharedDtor();
}

void ResendRedisMailReq::SharedDtor() {
}

void ResendRedisMailReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResendRedisMailReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResendRedisMailReq& ResendRedisMailReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResendRedisMailReq* ResendRedisMailReq::New(::google::protobuf::Arena* arena) const {
  ResendRedisMailReq* n = new ResendRedisMailReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResendRedisMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ResendRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_bin_map_.Clear();
  _internal_metadata_.Clear();
}

bool ResendRedisMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResendRedisMailReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .proto.MailBin> mail_bin_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ResendRedisMailReq_MailBinMapEntry::Parser< ::google::protobuf::internal::MapField<
              ResendRedisMailReq_MailBinMapEntry,
              ::std::string, ::proto::MailBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::proto::MailBin > > parser(&mail_bin_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ResendRedisMailReq.MailBinMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResendRedisMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResendRedisMailReq)
  return false;
#undef DO_
}

void ResendRedisMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResendRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .proto.MailBin> mail_bin_map = 1;
  if (!this->mail_bin_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::proto::MailBin >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.ResendRedisMailReq.MailBinMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->mail_bin_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->mail_bin_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::proto::MailBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::proto::MailBin >::const_iterator
          it = this->mail_bin_map().begin();
          it != this->mail_bin_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ResendRedisMailReq_MailBinMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(mail_bin_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ResendRedisMailReq_MailBinMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::proto::MailBin >::const_iterator
          it = this->mail_bin_map().begin();
          it != this->mail_bin_map().end(); ++it) {
        entry.reset(mail_bin_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResendRedisMailReq)
}

::google::protobuf::uint8* ResendRedisMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResendRedisMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .proto.MailBin> mail_bin_map = 1;
  if (!this->mail_bin_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::proto::MailBin >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.ResendRedisMailReq.MailBinMapEntry.key");
      }
    };

    if (deterministic &&
        this->mail_bin_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->mail_bin_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::proto::MailBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::proto::MailBin >::const_iterator
          it = this->mail_bin_map().begin();
          it != this->mail_bin_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ResendRedisMailReq_MailBinMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(mail_bin_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ResendRedisMailReq_MailBinMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::proto::MailBin >::const_iterator
          it = this->mail_bin_map().begin();
          it != this->mail_bin_map().end(); ++it) {
        entry.reset(mail_bin_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResendRedisMailReq)
  return target;
}

size_t ResendRedisMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ResendRedisMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .proto.MailBin> mail_bin_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mail_bin_map_size());
  {
    ::google::protobuf::scoped_ptr<ResendRedisMailReq_MailBinMapEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::proto::MailBin >::const_iterator
        it = this->mail_bin_map().begin();
        it != this->mail_bin_map().end(); ++it) {
      entry.reset(mail_bin_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResendRedisMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ResendRedisMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ResendRedisMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResendRedisMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResendRedisMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResendRedisMailReq)
    MergeFrom(*source);
  }
}

void ResendRedisMailReq::MergeFrom(const ResendRedisMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ResendRedisMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mail_bin_map_.MergeFrom(from.mail_bin_map_);
}

void ResendRedisMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ResendRedisMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResendRedisMailReq::CopyFrom(const ResendRedisMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ResendRedisMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResendRedisMailReq::IsInitialized() const {
  return true;
}

void ResendRedisMailReq::Swap(ResendRedisMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResendRedisMailReq::InternalSwap(ResendRedisMailReq* other) {
  using std::swap;
  mail_bin_map_.Swap(&other->mail_bin_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResendRedisMailReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResendRedisMailReq

// map<string, .proto.MailBin> mail_bin_map = 1;
int ResendRedisMailReq::mail_bin_map_size() const {
  return mail_bin_map_.size();
}
void ResendRedisMailReq::clear_mail_bin_map() {
  mail_bin_map_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::proto::MailBin >&
ResendRedisMailReq::mail_bin_map() const {
  // @@protoc_insertion_point(field_map:proto.ResendRedisMailReq.mail_bin_map)
  return mail_bin_map_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::proto::MailBin >*
ResendRedisMailReq::mutable_mail_bin_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ResendRedisMailReq.mail_bin_map)
  return mail_bin_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ResendRedisMailRsp::ResendRedisMailRsp_ResendStatusMapEntry::ResendRedisMailRsp_ResendStatusMapEntry() {}
ResendRedisMailRsp::ResendRedisMailRsp_ResendStatusMapEntry::ResendRedisMailRsp_ResendStatusMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ResendRedisMailRsp::ResendRedisMailRsp_ResendStatusMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[23];
}
void ResendRedisMailRsp::ResendRedisMailRsp_ResendStatusMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ResendRedisMailRsp::ResendRedisMailRsp_ResendStatusMapEntry::MergeFrom(const ResendRedisMailRsp_ResendStatusMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResendRedisMailRsp::kRetcodeFieldNumber;
const int ResendRedisMailRsp::kResendStatusMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResendRedisMailRsp::ResendRedisMailRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ResendRedisMailRsp)
}
ResendRedisMailRsp::ResendRedisMailRsp(const ResendRedisMailRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resend_status_map_.MergeFrom(from.resend_status_map_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ResendRedisMailRsp)
}

void ResendRedisMailRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ResendRedisMailRsp::~ResendRedisMailRsp() {
  // @@protoc_insertion_point(destructor:proto.ResendRedisMailRsp)
  SharedDtor();
}

void ResendRedisMailRsp::SharedDtor() {
}

void ResendRedisMailRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResendRedisMailRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResendRedisMailRsp& ResendRedisMailRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResendRedisMailRsp* ResendRedisMailRsp::New(::google::protobuf::Arena* arena) const {
  ResendRedisMailRsp* n = new ResendRedisMailRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResendRedisMailRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ResendRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resend_status_map_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ResendRedisMailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ResendRedisMailRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bool> resend_status_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ResendRedisMailRsp_ResendStatusMapEntry::Parser< ::google::protobuf::internal::MapField<
              ResendRedisMailRsp_ResendStatusMapEntry,
              ::std::string, bool,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              0 >,
            ::google::protobuf::Map< ::std::string, bool > > parser(&resend_status_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ResendRedisMailRsp.ResendStatusMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ResendRedisMailRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ResendRedisMailRsp)
  return false;
#undef DO_
}

void ResendRedisMailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ResendRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // map<string, bool> resend_status_map = 2;
  if (!this->resend_status_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, bool >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.ResendRedisMailRsp.ResendStatusMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->resend_status_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->resend_status_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->resend_status_map().begin();
          it != this->resend_status_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ResendRedisMailRsp_ResendStatusMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(resend_status_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ResendRedisMailRsp_ResendStatusMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->resend_status_map().begin();
          it != this->resend_status_map().end(); ++it) {
        entry.reset(resend_status_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ResendRedisMailRsp)
}

::google::protobuf::uint8* ResendRedisMailRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResendRedisMailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // map<string, bool> resend_status_map = 2;
  if (!this->resend_status_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, bool >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.ResendRedisMailRsp.ResendStatusMapEntry.key");
      }
    };

    if (deterministic &&
        this->resend_status_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->resend_status_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->resend_status_map().begin();
          it != this->resend_status_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ResendRedisMailRsp_ResendStatusMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(resend_status_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<ResendRedisMailRsp_ResendStatusMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, bool >::const_iterator
          it = this->resend_status_map().begin();
          it != this->resend_status_map().end(); ++it) {
        entry.reset(resend_status_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResendRedisMailRsp)
  return target;
}

size_t ResendRedisMailRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ResendRedisMailRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bool> resend_status_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->resend_status_map_size());
  {
    ::google::protobuf::scoped_ptr<ResendRedisMailRsp_ResendStatusMapEntry> entry;
    for (::google::protobuf::Map< ::std::string, bool >::const_iterator
        it = this->resend_status_map().begin();
        it != this->resend_status_map().end(); ++it) {
      entry.reset(resend_status_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResendRedisMailRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ResendRedisMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ResendRedisMailRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResendRedisMailRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ResendRedisMailRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ResendRedisMailRsp)
    MergeFrom(*source);
  }
}

void ResendRedisMailRsp::MergeFrom(const ResendRedisMailRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ResendRedisMailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resend_status_map_.MergeFrom(from.resend_status_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ResendRedisMailRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ResendRedisMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResendRedisMailRsp::CopyFrom(const ResendRedisMailRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ResendRedisMailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResendRedisMailRsp::IsInitialized() const {
  return true;
}

void ResendRedisMailRsp::Swap(ResendRedisMailRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResendRedisMailRsp::InternalSwap(ResendRedisMailRsp* other) {
  using std::swap;
  resend_status_map_.Swap(&other->resend_status_map_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResendRedisMailRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResendRedisMailRsp

// int32 retcode = 1;
void ResendRedisMailRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ResendRedisMailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ResendRedisMailRsp.retcode)
  return retcode_;
}
void ResendRedisMailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ResendRedisMailRsp.retcode)
}

// map<string, bool> resend_status_map = 2;
int ResendRedisMailRsp::resend_status_map_size() const {
  return resend_status_map_.size();
}
void ResendRedisMailRsp::clear_resend_status_map() {
  resend_status_map_.Clear();
}
 const ::google::protobuf::Map< ::std::string, bool >&
ResendRedisMailRsp::resend_status_map() const {
  // @@protoc_insertion_point(field_map:proto.ResendRedisMailRsp.resend_status_map)
  return resend_status_map_.GetMap();
}
 ::google::protobuf::Map< ::std::string, bool >*
ResendRedisMailRsp::mutable_resend_status_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ResendRedisMailRsp.resend_status_map)
  return resend_status_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
