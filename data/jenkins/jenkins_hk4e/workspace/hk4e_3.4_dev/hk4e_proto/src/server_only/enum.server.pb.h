// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/enum.server.proto

#ifndef PROTOBUF_server_5fonly_2fenum_2eserver_2eproto__INCLUDED
#define PROTOBUF_server_5fonly_2fenum_2eserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)
namespace proto {
}  // namespace proto

namespace proto {

namespace protobuf_server_5fonly_2fenum_2eserver_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_5fonly_2fenum_2eserver_2eproto

enum MysqlIndex {
  MYSQL_INDEX_NONE = 0,
  MYSQL_INDEX_PLAYER_UID = 1,
  MYSQL_INDEX_PLAYER_ONLINE_ID_DATA = 2,
  MYSQL_INDEX_PLAYER_PSN_ONLINE_ID_DATA = 3,
  MYSQL_INDEX_PLAYER_DATA_0 = 101,
  MYSQL_INDEX_PLAYER_DATA_1 = 102,
  MYSQL_INDEX_PLAYER_DATA_2 = 103,
  MYSQL_INDEX_PLAYER_DATA_3 = 104,
  MYSQL_INDEX_PLAYER_DATA_4 = 105,
  MYSQL_INDEX_PLAYER_DATA_5 = 106,
  MYSQL_INDEX_PLAYER_DATA_6 = 107,
  MYSQL_INDEX_PLAYER_DATA_7 = 108,
  MYSQL_INDEX_PLAYER_DATA_8 = 109,
  MYSQL_INDEX_PLAYER_DATA_9 = 110,
  MYSQL_INDEX_PLAYER_DATA_10 = 111,
  MYSQL_INDEX_PLAYER_DATA_11 = 112,
  MYSQL_INDEX_PLAYER_DATA_12 = 113,
  MYSQL_INDEX_PLAYER_DATA_13 = 114,
  MYSQL_INDEX_PLAYER_DATA_14 = 115,
  MYSQL_INDEX_PLAYER_DATA_15 = 116,
  MYSQL_INDEX_PLAYER_DATA_16 = 117,
  MYSQL_INDEX_PLAYER_DATA_17 = 118,
  MYSQL_INDEX_PLAYER_DATA_18 = 119,
  MYSQL_INDEX_PLAYER_DATA_19 = 120,
  MYSQL_INDEX_PLAYER_DATA_20 = 121,
  MYSQL_INDEX_PLAYER_DATA_21 = 122,
  MYSQL_INDEX_PLAYER_DATA_22 = 123,
  MYSQL_INDEX_PLAYER_DATA_23 = 124,
  MYSQL_INDEX_PLAYER_DATA_24 = 125,
  MYSQL_INDEX_PLAYER_DATA_25 = 126,
  MYSQL_INDEX_PLAYER_DATA_26 = 127,
  MYSQL_INDEX_PLAYER_DATA_27 = 128,
  MYSQL_INDEX_PLAYER_DATA_28 = 129,
  MYSQL_INDEX_PLAYER_DATA_29 = 130,
  MYSQL_INDEX_PLAYER_DATA_30 = 131,
  MYSQL_INDEX_PLAYER_DATA_31 = 132,
  MYSQL_INDEX_PLAYER_DATA_32 = 133,
  MYSQL_INDEX_PLAYER_DATA_33 = 134,
  MYSQL_INDEX_PLAYER_DATA_34 = 135,
  MYSQL_INDEX_PLAYER_DATA_35 = 136,
  MYSQL_INDEX_PLAYER_DATA_36 = 137,
  MYSQL_INDEX_PLAYER_DATA_37 = 138,
  MYSQL_INDEX_PLAYER_DATA_38 = 139,
  MYSQL_INDEX_PLAYER_DATA_39 = 140,
  MYSQL_INDEX_PLAYER_DATA_40 = 141,
  MYSQL_INDEX_PLAYER_DATA_41 = 142,
  MYSQL_INDEX_PLAYER_DATA_42 = 143,
  MYSQL_INDEX_PLAYER_DATA_43 = 144,
  MYSQL_INDEX_PLAYER_DATA_44 = 145,
  MYSQL_INDEX_PLAYER_DATA_45 = 146,
  MYSQL_INDEX_PLAYER_DATA_46 = 147,
  MYSQL_INDEX_PLAYER_DATA_47 = 148,
  MYSQL_INDEX_PLAYER_DATA_48 = 149,
  MYSQL_INDEX_PLAYER_DATA_49 = 150,
  MYSQL_INDEX_PLAYER_DATA_50 = 151,
  MYSQL_INDEX_PLAYER_DATA_51 = 152,
  MYSQL_INDEX_PLAYER_DATA_52 = 153,
  MYSQL_INDEX_PLAYER_DATA_53 = 154,
  MYSQL_INDEX_PLAYER_DATA_54 = 155,
  MYSQL_INDEX_PLAYER_DATA_55 = 156,
  MYSQL_INDEX_PLAYER_DATA_56 = 157,
  MYSQL_INDEX_PLAYER_DATA_57 = 158,
  MYSQL_INDEX_PLAYER_DATA_58 = 159,
  MYSQL_INDEX_PLAYER_DATA_59 = 160,
  MYSQL_INDEX_PLAYER_DATA_60 = 161,
  MYSQL_INDEX_PLAYER_DATA_61 = 162,
  MYSQL_INDEX_PLAYER_DATA_62 = 163,
  MYSQL_INDEX_PLAYER_DATA_63 = 164,
  MYSQL_INDEX_PLAYER_DATA_64 = 165,
  MYSQL_INDEX_PLAYER_DATA_65 = 166,
  MYSQL_INDEX_PLAYER_DATA_66 = 167,
  MYSQL_INDEX_PLAYER_DATA_67 = 168,
  MYSQL_INDEX_PLAYER_DATA_68 = 169,
  MYSQL_INDEX_PLAYER_DATA_69 = 170,
  MYSQL_INDEX_PLAYER_DATA_70 = 171,
  MYSQL_INDEX_PLAYER_DATA_71 = 172,
  MYSQL_INDEX_PLAYER_DATA_72 = 173,
  MYSQL_INDEX_PLAYER_DATA_73 = 174,
  MYSQL_INDEX_PLAYER_DATA_74 = 175,
  MYSQL_INDEX_PLAYER_DATA_75 = 176,
  MYSQL_INDEX_PLAYER_DATA_76 = 177,
  MYSQL_INDEX_PLAYER_DATA_77 = 178,
  MYSQL_INDEX_PLAYER_DATA_78 = 179,
  MYSQL_INDEX_PLAYER_DATA_79 = 180,
  MYSQL_INDEX_ORDER_DATA = 2001,
  MYSQL_INDEX_CONFIG_LOCAL = 1001,
  MYSQL_INDEX_CONFIG_GLOBAL = 1002,
  MYSQL_INDEX_BLOCK_DATA_0 = 3001,
  MYSQL_INDEX_BLOCK_DATA_1 = 3002,
  MYSQL_INDEX_BLOCK_DATA_2 = 3003,
  MYSQL_INDEX_BLOCK_DATA_3 = 3004,
  MYSQL_INDEX_BLOCK_DATA_4 = 3005,
  MYSQL_INDEX_BLOCK_DATA_5 = 3006,
  MYSQL_INDEX_BLOCK_DATA_6 = 3007,
  MYSQL_INDEX_BLOCK_DATA_7 = 3008,
  MYSQL_INDEX_BLOCK_DATA_8 = 3009,
  MYSQL_INDEX_BLOCK_DATA_9 = 3010,
  MYSQL_INDEX_BLOCK_DATA_10 = 3011,
  MYSQL_INDEX_BLOCK_DATA_11 = 3012,
  MYSQL_INDEX_BLOCK_DATA_12 = 3013,
  MYSQL_INDEX_BLOCK_DATA_13 = 3014,
  MYSQL_INDEX_BLOCK_DATA_14 = 3015,
  MYSQL_INDEX_BLOCK_DATA_15 = 3016,
  MYSQL_INDEX_BLOCK_DATA_16 = 3017,
  MYSQL_INDEX_BLOCK_DATA_17 = 3018,
  MYSQL_INDEX_BLOCK_DATA_18 = 3019,
  MYSQL_INDEX_BLOCK_DATA_19 = 3020,
  MYSQL_INDEX_BLOCK_DATA_20 = 3021,
  MYSQL_INDEX_BLOCK_DATA_21 = 3022,
  MYSQL_INDEX_BLOCK_DATA_22 = 3023,
  MYSQL_INDEX_BLOCK_DATA_23 = 3024,
  MYSQL_INDEX_BLOCK_DATA_24 = 3025,
  MYSQL_INDEX_BLOCK_DATA_25 = 3026,
  MYSQL_INDEX_BLOCK_DATA_26 = 3027,
  MYSQL_INDEX_BLOCK_DATA_27 = 3028,
  MYSQL_INDEX_BLOCK_DATA_28 = 3029,
  MYSQL_INDEX_BLOCK_DATA_29 = 3030,
  MYSQL_INDEX_BLOCK_DATA_30 = 3031,
  MYSQL_INDEX_BLOCK_DATA_31 = 3032,
  MYSQL_INDEX_BLOCK_DATA_32 = 3033,
  MYSQL_INDEX_BLOCK_DATA_33 = 3034,
  MYSQL_INDEX_BLOCK_DATA_34 = 3035,
  MYSQL_INDEX_BLOCK_DATA_35 = 3036,
  MYSQL_INDEX_BLOCK_DATA_36 = 3037,
  MYSQL_INDEX_BLOCK_DATA_37 = 3038,
  MYSQL_INDEX_BLOCK_DATA_38 = 3039,
  MYSQL_INDEX_BLOCK_DATA_39 = 3040,
  MYSQL_INDEX_HOME_DATA_0 = 4001,
  MYSQL_INDEX_HOME_DATA_1 = 4002,
  MYSQL_INDEX_HOME_DATA_2 = 4003,
  MYSQL_INDEX_HOME_DATA_3 = 4004,
  MYSQL_INDEX_HOME_DATA_4 = 4005,
  MYSQL_INDEX_HOME_DATA_5 = 4006,
  MYSQL_INDEX_HOME_DATA_6 = 4007,
  MYSQL_INDEX_HOME_DATA_7 = 4008,
  MYSQL_INDEX_HOME_DATA_8 = 4009,
  MYSQL_INDEX_HOME_DATA_9 = 4010,
  MYSQL_INDEX_HOME_DATA_10 = 4011,
  MYSQL_INDEX_HOME_DATA_11 = 4012,
  MYSQL_INDEX_HOME_DATA_12 = 4013,
  MYSQL_INDEX_HOME_DATA_13 = 4014,
  MYSQL_INDEX_HOME_DATA_14 = 4015,
  MYSQL_INDEX_HOME_DATA_15 = 4016,
  MYSQL_INDEX_HOME_DATA_16 = 4017,
  MYSQL_INDEX_HOME_DATA_17 = 4018,
  MYSQL_INDEX_HOME_DATA_18 = 4019,
  MYSQL_INDEX_HOME_DATA_19 = 4020,
  MYSQL_INDEX_HOME_DATA_20 = 4021,
  MYSQL_INDEX_HOME_DATA_21 = 4022,
  MYSQL_INDEX_HOME_DATA_22 = 4023,
  MYSQL_INDEX_HOME_DATA_23 = 4024,
  MYSQL_INDEX_HOME_DATA_24 = 4025,
  MYSQL_INDEX_HOME_DATA_25 = 4026,
  MYSQL_INDEX_HOME_DATA_26 = 4027,
  MYSQL_INDEX_HOME_DATA_27 = 4028,
  MYSQL_INDEX_HOME_DATA_28 = 4029,
  MYSQL_INDEX_HOME_DATA_29 = 4030,
  MYSQL_INDEX_HOME_DATA_30 = 4031,
  MYSQL_INDEX_HOME_DATA_31 = 4032,
  MYSQL_INDEX_HOME_DATA_32 = 4033,
  MYSQL_INDEX_HOME_DATA_33 = 4034,
  MYSQL_INDEX_HOME_DATA_34 = 4035,
  MYSQL_INDEX_HOME_DATA_35 = 4036,
  MYSQL_INDEX_HOME_DATA_36 = 4037,
  MYSQL_INDEX_HOME_DATA_37 = 4038,
  MYSQL_INDEX_HOME_DATA_38 = 4039,
  MYSQL_INDEX_HOME_DATA_39 = 4040,
  MYSQL_INDEX_HOME_DATA_40 = 4041,
  MYSQL_INDEX_HOME_DATA_41 = 4042,
  MYSQL_INDEX_HOME_DATA_42 = 4043,
  MYSQL_INDEX_HOME_DATA_43 = 4044,
  MYSQL_INDEX_HOME_DATA_44 = 4045,
  MYSQL_INDEX_HOME_DATA_45 = 4046,
  MYSQL_INDEX_HOME_DATA_46 = 4047,
  MYSQL_INDEX_HOME_DATA_47 = 4048,
  MYSQL_INDEX_HOME_DATA_48 = 4049,
  MYSQL_INDEX_HOME_DATA_49 = 4050,
  MYSQL_INDEX_HOME_DATA_50 = 4051,
  MYSQL_INDEX_HOME_DATA_51 = 4052,
  MYSQL_INDEX_HOME_DATA_52 = 4053,
  MYSQL_INDEX_HOME_DATA_53 = 4054,
  MYSQL_INDEX_HOME_DATA_54 = 4055,
  MYSQL_INDEX_HOME_DATA_55 = 4056,
  MYSQL_INDEX_HOME_DATA_56 = 4057,
  MYSQL_INDEX_HOME_DATA_57 = 4058,
  MYSQL_INDEX_HOME_DATA_58 = 4059,
  MYSQL_INDEX_HOME_DATA_59 = 4060,
  MYSQL_INDEX_HOME_DATA_60 = 4061,
  MYSQL_INDEX_HOME_DATA_61 = 4062,
  MYSQL_INDEX_HOME_DATA_62 = 4063,
  MYSQL_INDEX_HOME_DATA_63 = 4064,
  MYSQL_INDEX_HOME_DATA_64 = 4065,
  MYSQL_INDEX_HOME_DATA_65 = 4066,
  MYSQL_INDEX_HOME_DATA_66 = 4067,
  MYSQL_INDEX_HOME_DATA_67 = 4068,
  MYSQL_INDEX_HOME_DATA_68 = 4069,
  MYSQL_INDEX_HOME_DATA_69 = 4070,
  MYSQL_INDEX_HOME_DATA_70 = 4071,
  MYSQL_INDEX_HOME_DATA_71 = 4072,
  MYSQL_INDEX_HOME_DATA_72 = 4073,
  MYSQL_INDEX_HOME_DATA_73 = 4074,
  MYSQL_INDEX_HOME_DATA_74 = 4075,
  MYSQL_INDEX_HOME_DATA_75 = 4076,
  MYSQL_INDEX_HOME_DATA_76 = 4077,
  MYSQL_INDEX_HOME_DATA_77 = 4078,
  MYSQL_INDEX_HOME_DATA_78 = 4079,
  MYSQL_INDEX_HOME_DATA_79 = 4080,
  MysqlIndex_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MysqlIndex_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MysqlIndex_IsValid(int value);
const MysqlIndex MysqlIndex_MIN = MYSQL_INDEX_NONE;
const MysqlIndex MysqlIndex_MAX = MYSQL_INDEX_HOME_DATA_79;
const int MysqlIndex_ARRAYSIZE = MysqlIndex_MAX + 1;

const ::google::protobuf::EnumDescriptor* MysqlIndex_descriptor();
inline const ::std::string& MysqlIndex_Name(MysqlIndex value) {
  return ::google::protobuf::internal::NameOfEnum(
    MysqlIndex_descriptor(), value);
}
inline bool MysqlIndex_Parse(
    const ::std::string& name, MysqlIndex* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MysqlIndex>(
    MysqlIndex_descriptor(), name, value);
}
enum RedisIndex {
  REDIS_INDEX_NONE = 0,
  REDIS_INDEX_PLAYER_STATUS = 1,
  REDIS_INDEX_MAIL = 2,
  REDIS_INDEX_OFFLINE_MSG = 3,
  REDIS_INDEX_PLAYER_FRIEND_SET = 4,
  REDIS_INDEX_PLAYER_ASK_FRIEND_SET = 5,
  REDIS_INDEX_PLAYER_BRIEF_DATA = 6,
  REDIS_INDEX_PLAYER_BLACKLIST = 7,
  REDIS_INDEX_PLAYER_PRIVATE_CHAT = 8,
  REDIS_INDEX_PLAYER_RECENT_CHAT = 9,
  REDIS_INDEX_PLAYER_PRIVATE_CHAT_UNREAD = 10,
  REDIS_INDEX_PLAYER_ACTIVITY_SOCIAL = 11,
  REDIS_INDEX_HOME_STATUS = 12,
  REDIS_INDEX_HOME_BRIEF_DATA = 13,
  REDIS_INDEX_HOME_OFFLINE_MSG = 14,
  REDIS_INDEX_OFFLINE_OP = 15,
  REDIS_INDEX_CUSTOM_DUNGEON = 16,
  REDIS_INDEX_PLAYER_PSN_FRIEND_SET = 17,
  REDIS_INDEX_PLAYER_PSN_BLACKLIST = 18,
  REDIS_INDEX_HOME_BLUEPRINT = 19,
  RedisIndex_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RedisIndex_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RedisIndex_IsValid(int value);
const RedisIndex RedisIndex_MIN = REDIS_INDEX_NONE;
const RedisIndex RedisIndex_MAX = REDIS_INDEX_HOME_BLUEPRINT;
const int RedisIndex_ARRAYSIZE = RedisIndex_MAX + 1;

const ::google::protobuf::EnumDescriptor* RedisIndex_descriptor();
inline const ::std::string& RedisIndex_Name(RedisIndex value) {
  return ::google::protobuf::internal::NameOfEnum(
    RedisIndex_descriptor(), value);
}
inline bool RedisIndex_Parse(
    const ::std::string& name, RedisIndex* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RedisIndex>(
    RedisIndex_descriptor(), name, value);
}
enum EntityCompType {
  ENTITY_COMP_NONE = 0,
  ENTITY_COMP_ENV_ANIMAL = 1,
  ENTITY_COMP_ANIMATOR = 2,
  EntityCompType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EntityCompType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EntityCompType_IsValid(int value);
const EntityCompType EntityCompType_MIN = ENTITY_COMP_NONE;
const EntityCompType EntityCompType_MAX = ENTITY_COMP_ANIMATOR;
const int EntityCompType_ARRAYSIZE = EntityCompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EntityCompType_descriptor();
inline const ::std::string& EntityCompType_Name(EntityCompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EntityCompType_descriptor(), value);
}
inline bool EntityCompType_Parse(
    const ::std::string& name, EntityCompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EntityCompType>(
    EntityCompType_descriptor(), name, value);
}
enum GadgetCompType {
  GADGET_COMP_NONE = 0,
  GADGET_COMP_INTERACT = 4,
  GADGET_COMP_GEAR = 5,
  GADGET_COMP_CRYSTAL = 6,
  GADGET_COMP_PLATFORM = 7,
  GADGET_COMP_WEAPON = 8,
  GADGET_COMP_WORKTOP = 10,
  GADGET_COMP_SEAL = 11,
  GADGET_COMP_CLIENT = 12,
  GADGET_COMP_ABILITY = 13,
  GADGET_COMP_PLAY = 16,
  GADGET_COMP_OFFERING = 17,
  GADGET_COMP_MIRACLE_RING = 18,
  GADGET_COMP_FOUNDATION = 19,
  GADGET_COMP_VEHICLE = 20,
  GADGET_COMP_SCREEN = 21,
  GADGET_COMP_FISH_POOL = 22,
  GADGET_COMP_CUSTOM_GADGET = 23,
  GADGET_COMP_ROGUELIKE_OPERATOR_GADGET = 24,
  GADGET_COMP_WIDGET_GADGET = 25,
  GADGET_COMP_NIGHT_CROW = 26,
  GADGET_COMP_COIN_COLLECT_OPERATOR = 27,
  GadgetCompType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GadgetCompType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GadgetCompType_IsValid(int value);
const GadgetCompType GadgetCompType_MIN = GADGET_COMP_NONE;
const GadgetCompType GadgetCompType_MAX = GADGET_COMP_COIN_COLLECT_OPERATOR;
const int GadgetCompType_ARRAYSIZE = GadgetCompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GadgetCompType_descriptor();
inline const ::std::string& GadgetCompType_Name(GadgetCompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GadgetCompType_descriptor(), value);
}
inline bool GadgetCompType_Parse(
    const ::std::string& name, GadgetCompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GadgetCompType>(
    GadgetCompType_descriptor(), name, value);
}
enum MonsterCompType {
  MONSTER_COMP_NONE = 0,
  MONSTER_COMP_ENV_ANIMAL = 1,
  MONSTER_COMP_FISH = 2,
  MONSTER_COMP_FISHTANK = 3,
  MonsterCompType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MonsterCompType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MonsterCompType_IsValid(int value);
const MonsterCompType MonsterCompType_MIN = MONSTER_COMP_NONE;
const MonsterCompType MonsterCompType_MAX = MONSTER_COMP_FISHTANK;
const int MonsterCompType_ARRAYSIZE = MonsterCompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MonsterCompType_descriptor();
inline const ::std::string& MonsterCompType_Name(MonsterCompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MonsterCompType_descriptor(), value);
}
inline bool MonsterCompType_Parse(
    const ::std::string& name, MonsterCompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MonsterCompType>(
    MonsterCompType_descriptor(), name, value);
}
enum SceneCompType {
  SCENE_COMP_NONE = 0,
  SCENE_COMP_ENV_ANIMAL = 1,
  SCENE_COMP_GRID = 2,
  SCENE_COMP_AREA = 3,
  SCENE_COMP_BLOCK_GROUP = 4,
  SCENE_COMP_MISC = 5,
  SCENE_COMP_TEAM = 6,
  SCENE_COMP_ENCOUNTER = 7,
  SCENE_COMP_MULTISTAGE_PLAY = 8,
  SCENE_COMP_GALLERY = 9,
  SCENE_COMP_HOME = 10,
  SCENE_COMP_TRANSFER_GUARD = 11,
  SceneCompType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneCompType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneCompType_IsValid(int value);
const SceneCompType SceneCompType_MIN = SCENE_COMP_NONE;
const SceneCompType SceneCompType_MAX = SCENE_COMP_TRANSFER_GUARD;
const int SceneCompType_ARRAYSIZE = SceneCompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneCompType_descriptor();
inline const ::std::string& SceneCompType_Name(SceneCompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneCompType_descriptor(), value);
}
inline bool SceneCompType_Parse(
    const ::std::string& name, SceneCompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneCompType>(
    SceneCompType_descriptor(), name, value);
}
enum PlayerCompType {
  PLAYER_COMP_NONE = 0,
  PLAYER_COMP_BASIC = 1,
  PLAYER_COMP_AVATAR = 2,
  PLAYER_COMP_GM = 3,
  PLAYER_COMP_QUEST = 4,
  PLAYER_COMP_TALK = 5,
  PLAYER_COMP_SHOP = 6,
  PLAYER_COMP_ITEM = 7,
  PLAYER_COMP_DUNGEON = 8,
  PLAYER_COMP_SCENE = 9,
  PLAYER_COMP_EVENT = 10,
  PLAYER_COMP_BORED = 11,
  PLAYER_COMP_MP = 12,
  PLAYER_COMP_COOK = 13,
  PLAYER_COMP_COMPOUND = 14,
  PLAYER_COMP_MAIL = 15,
  PLAYER_COMP_LOGIN = 16,
  PLAYER_COMP_OFFLINE_MSG = 17,
  PLAYER_COMP_DAILY_TASK = 18,
  PLAYER_COMP_RAND_TASK = 19,
  PLAYER_COMP_GACHA = 20,
  PLAYER_COMP_GIVING = 21,
  PLAYER_COMP_FORGE = 22,
  PLAYER_COMP_INVESTIGATION = 23,
  PLAYER_COMP_ACTIVITY = 24,
  PLAYER_COMP_WATCHER = 25,
  PLAYER_COMP_SOCIAL = 26,
  PLAYER_COMP_TOWER = 27,
  PLAYER_COMP_SIGN_IN = 28,
  PLAYER_COMP_BATTLE_PASS = 29,
  PLAYER_COMP_BLOSSOM = 30,
  PLAYER_COMP_RECHARGE = 31,
  PLAYER_COMP_MATCH = 32,
  PLAYER_COMP_MP_PLAY = 33,
  PLAYER_COMP_tRIAL_AVATAR = 34,
  PLAYER_COMP_CODEX = 35,
  PLAYER_COMP_ACHIEVEMENT = 36,
  PLAYER_COMP_PERSONAL_LINE = 37,
  PLAYER_COMP_ABILITY_GROUP = 38,
  PLAYER_COMP_REPUTATION = 39,
  PLAYER_COMP_WIDGET = 40,
  PLAYER_COMP_HUNTING = 41,
  PLAYER_COMP_COOP = 42,
  PLAYER_COMP_SCENE_PLAY = 43,
  PLAYER_COMP_COMBINE = 44,
  PLAYER_COMP_OFFERING = 45,
  PLAYER_COMP_ROUTINE = 46,
  PLAYER_COMP_REUNION = 47,
  PLAYER_COMP_MIRACLE_RING = 48,
  PLAYER_COMP_MECHANICUS = 49,
  PLAYER_COMP_OP_ACTIVITY = 50,
  PLAYER_COMP_DRAFT = 51,
  PLAYER_COMP_GALLERY = 52,
  PLAYER_COMP_REGION_SEARCH = 53,
  PLAYER_COMP_HOME = 54,
  PLAYER_COMP_OFFLINE_OP = 55,
  PLAYER_COMP_H5_ACTIVITY = 56,
  PLAYER_COMP_EXHIBITION = 57,
  PLAYER_COMP_VEHICLE = 58,
  PLAYER_COMP_LIVE = 59,
  PLAYER_COMP_GROUP_LINK = 60,
  PLAYER_COMP_FISHING = 61,
  PLAYER_COMP_FIREWORKS = 62,
  PLAYER_COMP_CITY = 63,
  PLAYER_COMP_CUSTOM_DUNGEON = 64,
  PLAYER_COMP_REGIONAL_PLAY = 65,
  PLAYER_COMP_SHARE_CD = 66,
  PLAYER_COMP_UGC = 67,
  PLAYER_COMP_POLYGON = 68,
  PLAYER_COMP_ARANARA_COLLECTION = 69,
  PLAYER_COMP_GCG = 70,
  PlayerCompType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerCompType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerCompType_IsValid(int value);
const PlayerCompType PlayerCompType_MIN = PLAYER_COMP_NONE;
const PlayerCompType PlayerCompType_MAX = PLAYER_COMP_GCG;
const int PlayerCompType_ARRAYSIZE = PlayerCompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerCompType_descriptor();
inline const ::std::string& PlayerCompType_Name(PlayerCompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerCompType_descriptor(), value);
}
inline bool PlayerCompType_Parse(
    const ::std::string& name, PlayerCompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerCompType>(
    PlayerCompType_descriptor(), name, value);
}
enum AvatarCompType {
  AVATAR_COMP_NONE = 0,
  AVATAR_COMP_EQUIP = 1,
  AVATAR_COMP_SKILL = 2,
  AVATAR_COMP_BUFF = 3,
  AVATAR_COMP_TALENT = 4,
  AVATAR_COMP_FASHION = 5,
  AVATAR_COMP_EXTRA_PROP = 6,
  AvatarCompType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarCompType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarCompType_IsValid(int value);
const AvatarCompType AvatarCompType_MIN = AVATAR_COMP_NONE;
const AvatarCompType AvatarCompType_MAX = AVATAR_COMP_EXTRA_PROP;
const int AvatarCompType_ARRAYSIZE = AvatarCompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarCompType_descriptor();
inline const ::std::string& AvatarCompType_Name(AvatarCompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarCompType_descriptor(), value);
}
inline bool AvatarCompType_Parse(
    const ::std::string& name, AvatarCompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarCompType>(
    AvatarCompType_descriptor(), name, value);
}
enum AvatarSnapshotType {
  AVATAR_SNAPSHOT_TYPE_NONE = 0,
  AVATAR_SNAPSHOT_TYPE_ROGUE_ACTIVITY = 1,
  AVATAR_SNAPSHOT_TYPE_MIST_TRIAL_ACTIVITY = 2,
  AVATAR_SNAPSHOT_TYPE_TEAM_CHAIN_ACTIVITY = 3,
  AvatarSnapshotType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AvatarSnapshotType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AvatarSnapshotType_IsValid(int value);
const AvatarSnapshotType AvatarSnapshotType_MIN = AVATAR_SNAPSHOT_TYPE_NONE;
const AvatarSnapshotType AvatarSnapshotType_MAX = AVATAR_SNAPSHOT_TYPE_TEAM_CHAIN_ACTIVITY;
const int AvatarSnapshotType_ARRAYSIZE = AvatarSnapshotType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AvatarSnapshotType_descriptor();
inline const ::std::string& AvatarSnapshotType_Name(AvatarSnapshotType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AvatarSnapshotType_descriptor(), value);
}
inline bool AvatarSnapshotType_Parse(
    const ::std::string& name, AvatarSnapshotType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AvatarSnapshotType>(
    AvatarSnapshotType_descriptor(), name, value);
}
enum FormalAvatarCompType {
  FORMAL_AVATAR_COMP_NONE = 0,
  FORMAL_AVATAR_COMP_FETTER = 1,
  FORMAL_AVATAR_COMP_EXPEDITION = 2,
  FormalAvatarCompType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FormalAvatarCompType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FormalAvatarCompType_IsValid(int value);
const FormalAvatarCompType FormalAvatarCompType_MIN = FORMAL_AVATAR_COMP_NONE;
const FormalAvatarCompType FormalAvatarCompType_MAX = FORMAL_AVATAR_COMP_EXPEDITION;
const int FormalAvatarCompType_ARRAYSIZE = FormalAvatarCompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FormalAvatarCompType_descriptor();
inline const ::std::string& FormalAvatarCompType_Name(FormalAvatarCompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FormalAvatarCompType_descriptor(), value);
}
inline bool FormalAvatarCompType_Parse(
    const ::std::string& name, FormalAvatarCompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FormalAvatarCompType>(
    FormalAvatarCompType_descriptor(), name, value);
}
enum PacketHeadExtKeyType {
  PACKET_HEAD_EXT_KEY_HTTP_SESSION_ID = 0,
  PACKET_HEAD_EXT_KEY_PLAYER_RTT = 1,
  PACKET_HEAD_EXT_KEY_IS_CALLBACK = 2,
  PACKET_HEAD_EXT_KEY_WORD_FILTER_ACTION_TYPE = 3,
  PACKET_HEAD_EXT_KEY_GATE_RECV_MS_TIMESTAMP = 10001,
  PACKET_HEAD_EXT_KEY_GAME_RECV_MS_TIMESTAMP = 10002,
  PACKET_HEAD_EXT_KEY_GAME_SEND_MS_TIMESTAMP = 10003,
  PacketHeadExtKeyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PacketHeadExtKeyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PacketHeadExtKeyType_IsValid(int value);
const PacketHeadExtKeyType PacketHeadExtKeyType_MIN = PACKET_HEAD_EXT_KEY_HTTP_SESSION_ID;
const PacketHeadExtKeyType PacketHeadExtKeyType_MAX = PACKET_HEAD_EXT_KEY_GAME_SEND_MS_TIMESTAMP;
const int PacketHeadExtKeyType_ARRAYSIZE = PacketHeadExtKeyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PacketHeadExtKeyType_descriptor();
inline const ::std::string& PacketHeadExtKeyType_Name(PacketHeadExtKeyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PacketHeadExtKeyType_descriptor(), value);
}
inline bool PacketHeadExtKeyType_Parse(
    const ::std::string& name, PacketHeadExtKeyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PacketHeadExtKeyType>(
    PacketHeadExtKeyType_descriptor(), name, value);
}
enum MailAddOpType {
  MAIL_ADD_OP_NONE = 0,
  MAIL_ADD_OP_GAME = 1,
  MAIL_ADD_OP_MUIP = 2,
  MailAddOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MailAddOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MailAddOpType_IsValid(int value);
const MailAddOpType MailAddOpType_MIN = MAIL_ADD_OP_NONE;
const MailAddOpType MailAddOpType_MAX = MAIL_ADD_OP_MUIP;
const int MailAddOpType_ARRAYSIZE = MailAddOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailAddOpType_descriptor();
inline const ::std::string& MailAddOpType_Name(MailAddOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailAddOpType_descriptor(), value);
}
inline bool MailAddOpType_Parse(
    const ::std::string& name, MailAddOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailAddOpType>(
    MailAddOpType_descriptor(), name, value);
}
enum MailDelOpType {
  MAIL_DEL_OP_NONE = 0,
  MAIL_DEL_OP_CLIENT = 1,
  MAIL_DEL_OP_GAME = 2,
  MAIL_DEL_OP_MUIP = 3,
  MAIL_DEL_OP_MUIP_BY_TICKET = 4,
  MailDelOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MailDelOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MailDelOpType_IsValid(int value);
const MailDelOpType MailDelOpType_MIN = MAIL_DEL_OP_NONE;
const MailDelOpType MailDelOpType_MAX = MAIL_DEL_OP_MUIP_BY_TICKET;
const int MailDelOpType_ARRAYSIZE = MailDelOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailDelOpType_descriptor();
inline const ::std::string& MailDelOpType_Name(MailDelOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailDelOpType_descriptor(), value);
}
inline bool MailDelOpType_Parse(
    const ::std::string& name, MailDelOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailDelOpType>(
    MailDelOpType_descriptor(), name, value);
}
enum MailGetOPType {
  MAIL_GET_OP_NONE = 0,
  MAIL_GET_OP_CLIENT = 1,
  MAIL_GET_OP_TAKE_ATTACHMENT = 2,
  MAIL_GET_OP_MUIP = 3,
  MAIL_GET_OP_UNTREATED = 4,
  MAIL_GET_OP_CLIENT_MULTI_BATCH = 5,
  MailGetOPType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MailGetOPType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MailGetOPType_IsValid(int value);
const MailGetOPType MailGetOPType_MIN = MAIL_GET_OP_NONE;
const MailGetOPType MailGetOPType_MAX = MAIL_GET_OP_CLIENT_MULTI_BATCH;
const int MailGetOPType_ARRAYSIZE = MailGetOPType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailGetOPType_descriptor();
inline const ::std::string& MailGetOPType_Name(MailGetOPType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailGetOPType_descriptor(), value);
}
inline bool MailGetOPType_Parse(
    const ::std::string& name, MailGetOPType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailGetOPType>(
    MailGetOPType_descriptor(), name, value);
}
enum MailGetType {
  MAIL_GET_NONE = 0,
  MAIL_GET_BY_ID = 1,
  MAIL_GET_ALL = 2,
  MAIL_GET_ALL_COLLECTED = 3,
  MailGetType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MailGetType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MailGetType_IsValid(int value);
const MailGetType MailGetType_MIN = MAIL_GET_NONE;
const MailGetType MailGetType_MAX = MAIL_GET_ALL_COLLECTED;
const int MailGetType_ARRAYSIZE = MailGetType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailGetType_descriptor();
inline const ::std::string& MailGetType_Name(MailGetType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailGetType_descriptor(), value);
}
inline bool MailGetType_Parse(
    const ::std::string& name, MailGetType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailGetType>(
    MailGetType_descriptor(), name, value);
}
enum MailUpdateOpType {
  MAIL_UPDATE_OP_NONE = 0,
  MAIL_UPDATE_OP_MARK_READ = 1,
  MAIL_UPDATE_OP_TAKE_ATTACHMENT = 2,
  MAIL_UPDATE_OP_STAR_MAIL = 3,
  MAIL_UPDATE_OP_UNSTAR_MAIL = 4,
  MailUpdateOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MailUpdateOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MailUpdateOpType_IsValid(int value);
const MailUpdateOpType MailUpdateOpType_MIN = MAIL_UPDATE_OP_NONE;
const MailUpdateOpType MailUpdateOpType_MAX = MAIL_UPDATE_OP_UNSTAR_MAIL;
const int MailUpdateOpType_ARRAYSIZE = MailUpdateOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MailUpdateOpType_descriptor();
inline const ::std::string& MailUpdateOpType_Name(MailUpdateOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MailUpdateOpType_descriptor(), value);
}
inline bool MailUpdateOpType_Parse(
    const ::std::string& name, MailUpdateOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MailUpdateOpType>(
    MailUpdateOpType_descriptor(), name, value);
}
enum MatchUnitRemoveOpType {
  MATCH_UNIT_REMOVE_OP_NONE = 0,
  MATCH_UNIT_REMOVE_OP_PLAYER_CANCEL = 1,
  MATCH_UNIT_REMOVE_OP_PLAYER_LOGOUT = 2,
  MATCH_UNIT_REMOVE_OP_INTERRUPTED = 3,
  MATCH_UNIT_REMOVE_OP_MP_UNAVAILABLE = 4,
  MatchUnitRemoveOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MatchUnitRemoveOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MatchUnitRemoveOpType_IsValid(int value);
const MatchUnitRemoveOpType MatchUnitRemoveOpType_MIN = MATCH_UNIT_REMOVE_OP_NONE;
const MatchUnitRemoveOpType MatchUnitRemoveOpType_MAX = MATCH_UNIT_REMOVE_OP_MP_UNAVAILABLE;
const int MatchUnitRemoveOpType_ARRAYSIZE = MatchUnitRemoveOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatchUnitRemoveOpType_descriptor();
inline const ::std::string& MatchUnitRemoveOpType_Name(MatchUnitRemoveOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatchUnitRemoveOpType_descriptor(), value);
}
inline bool MatchUnitRemoveOpType_Parse(
    const ::std::string& name, MatchUnitRemoveOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatchUnitRemoveOpType>(
    MatchUnitRemoveOpType_descriptor(), name, value);
}
enum MatchIdentity {
  MATCH_IDENTITY_NONE = 0,
  MATCH_IDENTITY_HOST = 1,
  MATCH_IDENTITY_GUEST = 2,
  MatchIdentity_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MatchIdentity_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MatchIdentity_IsValid(int value);
const MatchIdentity MatchIdentity_MIN = MATCH_IDENTITY_NONE;
const MatchIdentity MatchIdentity_MAX = MATCH_IDENTITY_GUEST;
const int MatchIdentity_ARRAYSIZE = MatchIdentity_MAX + 1;

const ::google::protobuf::EnumDescriptor* MatchIdentity_descriptor();
inline const ::std::string& MatchIdentity_Name(MatchIdentity value) {
  return ::google::protobuf::internal::NameOfEnum(
    MatchIdentity_descriptor(), value);
}
inline bool MatchIdentity_Parse(
    const ::std::string& name, MatchIdentity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MatchIdentity>(
    MatchIdentity_descriptor(), name, value);
}
enum ServiceMaxLoad {
  SERVICE_MAX_LOAD_NONE = 0,
  SERVICE_MAX_LOAD_GAME = 10000,
  SERVICE_MAX_LOAD_GATE = 10000,
  ServiceMaxLoad_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ServiceMaxLoad_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ServiceMaxLoad_IsValid(int value);
const ServiceMaxLoad ServiceMaxLoad_MIN = SERVICE_MAX_LOAD_NONE;
const ServiceMaxLoad ServiceMaxLoad_MAX = SERVICE_MAX_LOAD_GAME;
const int ServiceMaxLoad_ARRAYSIZE = ServiceMaxLoad_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServiceMaxLoad_descriptor();
inline const ::std::string& ServiceMaxLoad_Name(ServiceMaxLoad value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServiceMaxLoad_descriptor(), value);
}
inline bool ServiceMaxLoad_Parse(
    const ::std::string& name, ServiceMaxLoad* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServiceMaxLoad>(
    ServiceMaxLoad_descriptor(), name, value);
}
enum AsyncHttpType {
  ASYNC_HTTP_DEFAULT = 0,
  ASYNC_HTTP_FIRST_LOGIN_NICKNAME = 1,
  ASYNC_HTTP_SAFE_SERVER = 2,
  ASYNC_HTTP_HOME_VERIFY = 3,
  ASYNC_HTTP_OUTPUT_CONTROL_MONITOR = 4,
  ASYNC_HTTP_NICKNAME_SIGNATURE_AUDIT = 5,
  ASYNC_HTTP_AVATAR_RENAME_AUDIT = 6,
  ASYNC_HTTP_QUERY_IP_REGION = 7,
  AsyncHttpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AsyncHttpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AsyncHttpType_IsValid(int value);
const AsyncHttpType AsyncHttpType_MIN = ASYNC_HTTP_DEFAULT;
const AsyncHttpType AsyncHttpType_MAX = ASYNC_HTTP_QUERY_IP_REGION;
const int AsyncHttpType_ARRAYSIZE = AsyncHttpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AsyncHttpType_descriptor();
inline const ::std::string& AsyncHttpType_Name(AsyncHttpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AsyncHttpType_descriptor(), value);
}
inline bool AsyncHttpType_Parse(
    const ::std::string& name, AsyncHttpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AsyncHttpType>(
    AsyncHttpType_descriptor(), name, value);
}
enum HomeCompType {
  HOME_COMP_NONE = 0,
  HOME_COMP_BASIC = 1,
  HOME_COMP_SCENE = 2,
  HOME_COMP_OFFLINE_MSG = 3,
  HOME_COMP_FURNITURE_MAKE = 4,
  HOME_COMP_LIMITED_SHOP = 5,
  HOME_COMP_PLANT = 6,
  HOME_COMP_FISH_FARMING = 7,
  HOME_COMP_CUSTOM_FURNITURE = 8,
  HOME_PICTURE_FRAME = 9,
  HOME_COMP_GROUP_RECORD = 10,
  HOME_COMP_BLUEPRINT = 11,
  HomeCompType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  HomeCompType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool HomeCompType_IsValid(int value);
const HomeCompType HomeCompType_MIN = HOME_COMP_NONE;
const HomeCompType HomeCompType_MAX = HOME_COMP_BLUEPRINT;
const int HomeCompType_ARRAYSIZE = HomeCompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* HomeCompType_descriptor();
inline const ::std::string& HomeCompType_Name(HomeCompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    HomeCompType_descriptor(), value);
}
inline bool HomeCompType_Parse(
    const ::std::string& name, HomeCompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HomeCompType>(
    HomeCompType_descriptor(), name, value);
}
enum SceneMultistagePlayCompType {
  SCENE_MULTISTAGE_PLAY_COMP_NONE = 0,
  SCENE_MULTISTAGE_PLAY_COMP_TOWER_DEFENSE = 1,
  SceneMultistagePlayCompType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneMultistagePlayCompType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneMultistagePlayCompType_IsValid(int value);
const SceneMultistagePlayCompType SceneMultistagePlayCompType_MIN = SCENE_MULTISTAGE_PLAY_COMP_NONE;
const SceneMultistagePlayCompType SceneMultistagePlayCompType_MAX = SCENE_MULTISTAGE_PLAY_COMP_TOWER_DEFENSE;
const int SceneMultistagePlayCompType_ARRAYSIZE = SceneMultistagePlayCompType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneMultistagePlayCompType_descriptor();
inline const ::std::string& SceneMultistagePlayCompType_Name(SceneMultistagePlayCompType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneMultistagePlayCompType_descriptor(), value);
}
inline bool SceneMultistagePlayCompType_Parse(
    const ::std::string& name, SceneMultistagePlayCompType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneMultistagePlayCompType>(
    SceneMultistagePlayCompType_descriptor(), name, value);
}
enum FeatureSwitchType {
  FEATURE_SWITCH_NONE = 0,
  FEATURE_SWITCH_FRIEND = 1,
  FEATURE_SWITCH_ASKFRINED = 2,
  FEATURE_SWITCH_TOWER_FLOOR = 3,
  FEATURE_SWITCH_MP = 4,
  FEATURE_SWITCH_BLOSSOM = 5,
  FEATURE_SWITCH_BATTLE_PASS = 6,
  FEATURE_SWITCH_DUNGEON = 7,
  FEATURE_SWITCH_PUSH_PLATFORM = 8,
  FEATURE_SWITCH_RECHARGE = 9,
  FEATURE_SWITCH_SHOP = 10,
  FEATURE_SWITCH_DAILY_TASK = 11,
  FEATURE_SWITCH_RAND_TASK = 12,
  FEATURE_SWITCH_REWARD_ID = 13,
  FEATURE_SWITCH_DROP_ID = 14,
  FEATURE_SWITCH_GATHER = 15,
  FEATURE_SWITCH_GAME_TIME = 16,
  FEATURE_SWITCH_FORGE = 17,
  FEATURE_SWITCH_COOK = 18,
  FEATURE_SWITCH_COMBINE = 19,
  FEATURE_SWITCH_WEAPON = 20,
  FEATURE_SWITCH_RELIQUARY = 21,
  FEATURE_SWITCH_ITEM = 22,
  FEATURE_SWITCH_AVATAR = 23,
  FEATURE_SWITCH_CITY_REPUTATION = 24,
  FEATURE_SWITCH_MP_PLAY = 25,
  FEATURE_SWITCH_SIGHT_GROUP = 26,
  FEATURE_SWITCH_NOTIFY_EYE_POINT = 27,
  FEATURE_SWITCH_EYE_POINT_AS_EYE = 28,
  FEATURE_SWITCH_GROUP_VISION_TYPE = 29,
  FEATURE_SWITCH_OFFERING = 30,
  FEATURE_SWITCH_ROUTINE = 31,
  FEATURE_SWITCH_ANCHOR_POINT = 32,
  FEATURE_SWITCH_ACTIVITY_SALE = 33,
  FEATURE_SWITCH_MECHANICUS = 34,
  FEATURE_SWITCH_MECHANICUS_PUNISH = 35,
  FEATURE_SWITCH_WORLD_LEVEL_ADJUST = 36,
  FEATURE_SWITCH_ENTER_HOME_WORLD = 37,
  FEATURE_SWITCH_HOME_MP = 38,
  FEATURE_SWITCH_HOME_EDIT_MODE = 40,
  FEATURE_SWITCH_HOME_MODULE = 41,
  FEATURE_SWITCH_HOME_FURNITURE_MAKE = 42,
  FEATURE_SWITCH_HOME_LIMITED_SHOP = 43,
  FEATURE_SWITCH_GADGET_INTERACT = 44,
  FEATURE_SWITCH_REUNION_CLOSE_WITH_MARK = 45,
  FEATURE_SWITCH_RANDOM_QUEST_TEMPLATE = 46,
  FEATURE_SWITCH_MINORS_RECHARGE_HINT = 47,
  FEATURE_SWITCH_MINORS_GACHA_RESTRICT = 48,
  FEATURE_SWITCH_CUSTOM_DUNGEON = 49,
  FEATURE_SWITCH_MINORS_REGISTER = 50,
  FEATURE_SWITCH_MATCH_LIMIT = 51,
  FEATURE_SWITCH_CUSTOM_DUNGEON_ID = 52,
  FEATURE_SWITCH_NICKNAME_AUDIT = 53,
  FEATURE_SWITCH_SIGNATURE_AUDIT = 54,
  FEATURE_SWITCH_MATCH_RULE_OPTIMIZE = 55,
  FEATURE_SWITCH_RELIQUARY_GUARANTEE = 56,
  FEATURE_SWITCH_SECURITY_LIBRARY_MD5_CHECK = 57,
  FEATURE_SWITCH_UGC = 58,
  FEATURE_SWITCH_UGC_PUBLISH = 59,
  FEATURE_SWITCH_HOME_AUDIT_BEFORE_RELEASE = 60,
  FEATURE_SWITCH_SAFE_SERVER_NOTIFY = 2801,
  FEATURE_SWITCH_GENERAL_GACHA_RESTRICT = 3101,
  FEATURE_SWITCH_HOME_BLUEPRINT = 3201,
  FEATURE_SWITCH_ANTI_OFFLINE_KICK = 3202,
  FEATURE_SWITCH_ENVIRONMENT_ERROR_KICK = 3203,
  FEATURE_SWITCH_QUEST_AVATAR_RENAME_AUDIT = 3301,
  FEATURE_SWITCH_ITEM_AVATAR_RENAME_AUDIT = 3302,
  FEATURE_SWITCH_GCG_PREVIEW = 3303,
  FEATURE_SWITCH_GCG_MATCH = 3304,
  FEATURE_SWITCH_GCG_PVP = 3305,
  FEATURE_SWITCH_GCG_PVE = 3306,
  FEATURE_SWITCH_GCG_BAN_CARD = 3307,
  FEATURE_SWITCH_IP_REGION = 3308,
  FeatureSwitchType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FeatureSwitchType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FeatureSwitchType_IsValid(int value);
const FeatureSwitchType FeatureSwitchType_MIN = FEATURE_SWITCH_NONE;
const FeatureSwitchType FeatureSwitchType_MAX = FEATURE_SWITCH_IP_REGION;
const int FeatureSwitchType_ARRAYSIZE = FeatureSwitchType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FeatureSwitchType_descriptor();
inline const ::std::string& FeatureSwitchType_Name(FeatureSwitchType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FeatureSwitchType_descriptor(), value);
}
inline bool FeatureSwitchType_Parse(
    const ::std::string& name, FeatureSwitchType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FeatureSwitchType>(
    FeatureSwitchType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::MysqlIndex> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MysqlIndex>() {
  return ::proto::MysqlIndex_descriptor();
}
template <> struct is_proto_enum< ::proto::RedisIndex> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::RedisIndex>() {
  return ::proto::RedisIndex_descriptor();
}
template <> struct is_proto_enum< ::proto::EntityCompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EntityCompType>() {
  return ::proto::EntityCompType_descriptor();
}
template <> struct is_proto_enum< ::proto::GadgetCompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GadgetCompType>() {
  return ::proto::GadgetCompType_descriptor();
}
template <> struct is_proto_enum< ::proto::MonsterCompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MonsterCompType>() {
  return ::proto::MonsterCompType_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneCompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneCompType>() {
  return ::proto::SceneCompType_descriptor();
}
template <> struct is_proto_enum< ::proto::PlayerCompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerCompType>() {
  return ::proto::PlayerCompType_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarCompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarCompType>() {
  return ::proto::AvatarCompType_descriptor();
}
template <> struct is_proto_enum< ::proto::AvatarSnapshotType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AvatarSnapshotType>() {
  return ::proto::AvatarSnapshotType_descriptor();
}
template <> struct is_proto_enum< ::proto::FormalAvatarCompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FormalAvatarCompType>() {
  return ::proto::FormalAvatarCompType_descriptor();
}
template <> struct is_proto_enum< ::proto::PacketHeadExtKeyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PacketHeadExtKeyType>() {
  return ::proto::PacketHeadExtKeyType_descriptor();
}
template <> struct is_proto_enum< ::proto::MailAddOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MailAddOpType>() {
  return ::proto::MailAddOpType_descriptor();
}
template <> struct is_proto_enum< ::proto::MailDelOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MailDelOpType>() {
  return ::proto::MailDelOpType_descriptor();
}
template <> struct is_proto_enum< ::proto::MailGetOPType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MailGetOPType>() {
  return ::proto::MailGetOPType_descriptor();
}
template <> struct is_proto_enum< ::proto::MailGetType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MailGetType>() {
  return ::proto::MailGetType_descriptor();
}
template <> struct is_proto_enum< ::proto::MailUpdateOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MailUpdateOpType>() {
  return ::proto::MailUpdateOpType_descriptor();
}
template <> struct is_proto_enum< ::proto::MatchUnitRemoveOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MatchUnitRemoveOpType>() {
  return ::proto::MatchUnitRemoveOpType_descriptor();
}
template <> struct is_proto_enum< ::proto::MatchIdentity> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::MatchIdentity>() {
  return ::proto::MatchIdentity_descriptor();
}
template <> struct is_proto_enum< ::proto::ServiceMaxLoad> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::ServiceMaxLoad>() {
  return ::proto::ServiceMaxLoad_descriptor();
}
template <> struct is_proto_enum< ::proto::AsyncHttpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::AsyncHttpType>() {
  return ::proto::AsyncHttpType_descriptor();
}
template <> struct is_proto_enum< ::proto::HomeCompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::HomeCompType>() {
  return ::proto::HomeCompType_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneMultistagePlayCompType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneMultistagePlayCompType>() {
  return ::proto::SceneMultistagePlayCompType_descriptor();
}
template <> struct is_proto_enum< ::proto::FeatureSwitchType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::FeatureSwitchType>() {
  return ::proto::FeatureSwitchType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fonly_2fenum_2eserver_2eproto__INCLUDED
