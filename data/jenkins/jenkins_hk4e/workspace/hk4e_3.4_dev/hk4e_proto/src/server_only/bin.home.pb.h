// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/bin.home.proto

#ifndef PROTOBUF_server_5fonly_2fbin_2ehome_2eproto__INCLUDED
#define PROTOBUF_server_5fonly_2fbin_2ehome_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "server_only/bin_common.server.pb.h"
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class HomeAnimalBin;
class HomeAnimalBinDefaultTypeInternal;
extern HomeAnimalBinDefaultTypeInternal _HomeAnimalBin_default_instance_;
class HomeBalloonGalleryRecordBin;
class HomeBalloonGalleryRecordBinDefaultTypeInternal;
extern HomeBalloonGalleryRecordBinDefaultTypeInternal _HomeBalloonGalleryRecordBin_default_instance_;
class HomeBalloonRecordBin;
class HomeBalloonRecordBinDefaultTypeInternal;
extern HomeBalloonRecordBinDefaultTypeInternal _HomeBalloonRecordBin_default_instance_;
class HomeBasicCompBin;
class HomeBasicCompBinDefaultTypeInternal;
extern HomeBasicCompBinDefaultTypeInternal _HomeBasicCompBin_default_instance_;
class HomeBlockBin;
class HomeBlockBinDefaultTypeInternal;
extern HomeBlockBinDefaultTypeInternal _HomeBlockBin_default_instance_;
class HomeBlockFieldBin;
class HomeBlockFieldBinDefaultTypeInternal;
extern HomeBlockFieldBinDefaultTypeInternal _HomeBlockFieldBin_default_instance_;
class HomeBlockSubFieldBin;
class HomeBlockSubFieldBinDefaultTypeInternal;
extern HomeBlockSubFieldBinDefaultTypeInternal _HomeBlockSubFieldBin_default_instance_;
class HomeBlueprintCompBin;
class HomeBlueprintCompBinDefaultTypeInternal;
extern HomeBlueprintCompBinDefaultTypeInternal _HomeBlueprintCompBin_default_instance_;
class HomeCustomFurnitureBin;
class HomeCustomFurnitureBinDefaultTypeInternal;
extern HomeCustomFurnitureBinDefaultTypeInternal _HomeCustomFurnitureBin_default_instance_;
class HomeCustomFurnitureNodeInfoBin;
class HomeCustomFurnitureNodeInfoBinDefaultTypeInternal;
extern HomeCustomFurnitureNodeInfoBinDefaultTypeInternal _HomeCustomFurnitureNodeInfoBin_default_instance_;
class HomeData;
class HomeDataDefaultTypeInternal;
extern HomeDataDefaultTypeInternal _HomeData_default_instance_;
class HomeDataBin;
class HomeDataBinDefaultTypeInternal;
extern HomeDataBinDefaultTypeInternal _HomeDataBin_default_instance_;
class HomeFishFarmingBin;
class HomeFishFarmingBinDefaultTypeInternal;
extern HomeFishFarmingBinDefaultTypeInternal _HomeFishFarmingBin_default_instance_;
class HomeFishpondFarmingBin;
class HomeFishpondFarmingBinDefaultTypeInternal;
extern HomeFishpondFarmingBinDefaultTypeInternal _HomeFishpondFarmingBin_default_instance_;
class HomeFurnitureBin;
class HomeFurnitureBinDefaultTypeInternal;
extern HomeFurnitureBinDefaultTypeInternal _HomeFurnitureBin_default_instance_;
class HomeFurnitureCustomSuiteBin;
class HomeFurnitureCustomSuiteBinDefaultTypeInternal;
extern HomeFurnitureCustomSuiteBinDefaultTypeInternal _HomeFurnitureCustomSuiteBin_default_instance_;
class HomeFurnitureGroupBin;
class HomeFurnitureGroupBinDefaultTypeInternal;
extern HomeFurnitureGroupBinDefaultTypeInternal _HomeFurnitureGroupBin_default_instance_;
class HomeFurnitureMakeBin;
class HomeFurnitureMakeBinDefaultTypeInternal;
extern HomeFurnitureMakeBinDefaultTypeInternal _HomeFurnitureMakeBin_default_instance_;
class HomeFurnitureSuiteBin;
class HomeFurnitureSuiteBinDefaultTypeInternal;
extern HomeFurnitureSuiteBinDefaultTypeInternal _HomeFurnitureSuiteBin_default_instance_;
class HomeGroupPlayerInfoBin;
class HomeGroupPlayerInfoBinDefaultTypeInternal;
extern HomeGroupPlayerInfoBinDefaultTypeInternal _HomeGroupPlayerInfoBin_default_instance_;
class HomeGroupRecordBin;
class HomeGroupRecordBinDefaultTypeInternal;
extern HomeGroupRecordBinDefaultTypeInternal _HomeGroupRecordBin_default_instance_;
class HomeGroupRecordCompBin;
class HomeGroupRecordCompBinDefaultTypeInternal;
extern HomeGroupRecordCompBinDefaultTypeInternal _HomeGroupRecordCompBin_default_instance_;
class HomeGroupRecordCompBin_GroupRecordMapBinEntry;
class HomeGroupRecordCompBin_GroupRecordMapBinEntryDefaultTypeInternal;
extern HomeGroupRecordCompBin_GroupRecordMapBinEntryDefaultTypeInternal _HomeGroupRecordCompBin_GroupRecordMapBinEntry_default_instance_;
class HomeLimitedShopBin;
class HomeLimitedShopBinDefaultTypeInternal;
extern HomeLimitedShopBinDefaultTypeInternal _HomeLimitedShopBin_default_instance_;
class HomeLimitedShopGoodsInfoBin;
class HomeLimitedShopGoodsInfoBinDefaultTypeInternal;
extern HomeLimitedShopGoodsInfoBinDefaultTypeInternal _HomeLimitedShopGoodsInfoBin_default_instance_;
class HomeLimitedShopNPCPosBin;
class HomeLimitedShopNPCPosBinDefaultTypeInternal;
extern HomeLimitedShopNPCPosBinDefaultTypeInternal _HomeLimitedShopNPCPosBin_default_instance_;
class HomeLimitedShopPoolRecordBin;
class HomeLimitedShopPoolRecordBinDefaultTypeInternal;
extern HomeLimitedShopPoolRecordBinDefaultTypeInternal _HomeLimitedShopPoolRecordBin_default_instance_;
class HomeModuleBin;
class HomeModuleBinDefaultTypeInternal;
extern HomeModuleBinDefaultTypeInternal _HomeModuleBin_default_instance_;
class HomeModuleCustomFurnitureBin;
class HomeModuleCustomFurnitureBinDefaultTypeInternal;
extern HomeModuleCustomFurnitureBinDefaultTypeInternal _HomeModuleCustomFurnitureBin_default_instance_;
class HomeModuleFishFarmingBin;
class HomeModuleFishFarmingBinDefaultTypeInternal;
extern HomeModuleFishFarmingBinDefaultTypeInternal _HomeModuleFishFarmingBin_default_instance_;
class HomeModulePictureFrameBin;
class HomeModulePictureFrameBinDefaultTypeInternal;
extern HomeModulePictureFrameBinDefaultTypeInternal _HomeModulePictureFrameBin_default_instance_;
class HomeNpcBin;
class HomeNpcBinDefaultTypeInternal;
extern HomeNpcBinDefaultTypeInternal _HomeNpcBin_default_instance_;
class HomeOfflineMsgCompBin;
class HomeOfflineMsgCompBinDefaultTypeInternal;
extern HomeOfflineMsgCompBinDefaultTypeInternal _HomeOfflineMsgCompBin_default_instance_;
class HomeOfflineMsgExeBin;
class HomeOfflineMsgExeBinDefaultTypeInternal;
extern HomeOfflineMsgExeBinDefaultTypeInternal _HomeOfflineMsgExeBin_default_instance_;
class HomeOneCustomFurnitureBin;
class HomeOneCustomFurnitureBinDefaultTypeInternal;
extern HomeOneCustomFurnitureBinDefaultTypeInternal _HomeOneCustomFurnitureBin_default_instance_;
class HomeOnePictureFrameBin;
class HomeOnePictureFrameBinDefaultTypeInternal;
extern HomeOnePictureFrameBinDefaultTypeInternal _HomeOnePictureFrameBin_default_instance_;
class HomePictureFrameBin;
class HomePictureFrameBinDefaultTypeInternal;
extern HomePictureFrameBinDefaultTypeInternal _HomePictureFrameBin_default_instance_;
class HomePlantBin;
class HomePlantBinDefaultTypeInternal;
extern HomePlantBinDefaultTypeInternal _HomePlantBin_default_instance_;
class HomePlantFieldBin;
class HomePlantFieldBinDefaultTypeInternal;
extern HomePlantFieldBinDefaultTypeInternal _HomePlantFieldBin_default_instance_;
class HomePlantSubFieldBin;
class HomePlantSubFieldBinDefaultTypeInternal;
extern HomePlantSubFieldBinDefaultTypeInternal _HomePlantSubFieldBin_default_instance_;
class HomeRacingGalleryRecordBin;
class HomeRacingGalleryRecordBinDefaultTypeInternal;
extern HomeRacingGalleryRecordBinDefaultTypeInternal _HomeRacingGalleryRecordBin_default_instance_;
class HomeRacingRecordBin;
class HomeRacingRecordBinDefaultTypeInternal;
extern HomeRacingRecordBinDefaultTypeInternal _HomeRacingRecordBin_default_instance_;
class HomeSceneBin;
class HomeSceneBinDefaultTypeInternal;
extern HomeSceneBinDefaultTypeInternal _HomeSceneBin_default_instance_;
class HomeSceneCompBin;
class HomeSceneCompBinDefaultTypeInternal;
extern HomeSceneCompBinDefaultTypeInternal _HomeSceneCompBin_default_instance_;
class HomeScenePointFishFarmingBin;
class HomeScenePointFishFarmingBinDefaultTypeInternal;
extern HomeScenePointFishFarmingBinDefaultTypeInternal _HomeScenePointFishFarmingBin_default_instance_;
class HomeSeekFurnitureAllRecordBin;
class HomeSeekFurnitureAllRecordBinDefaultTypeInternal;
extern HomeSeekFurnitureAllRecordBinDefaultTypeInternal _HomeSeekFurnitureAllRecordBin_default_instance_;
class HomeSeekFurnitureOneRecordBin;
class HomeSeekFurnitureOneRecordBinDefaultTypeInternal;
extern HomeSeekFurnitureOneRecordBinDefaultTypeInternal _HomeSeekFurnitureOneRecordBin_default_instance_;
class HomeSeekFurniturePlayerScoreBin;
class HomeSeekFurniturePlayerScoreBinDefaultTypeInternal;
extern HomeSeekFurniturePlayerScoreBinDefaultTypeInternal _HomeSeekFurniturePlayerScoreBin_default_instance_;
class HomeStakePlayRecordBin;
class HomeStakePlayRecordBinDefaultTypeInternal;
extern HomeStakePlayRecordBinDefaultTypeInternal _HomeStakePlayRecordBin_default_instance_;
class HomeStakeRecordBin;
class HomeStakeRecordBinDefaultTypeInternal;
extern HomeStakeRecordBinDefaultTypeInternal _HomeStakeRecordBin_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_server_5fonly_2fbin_2ehome_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_5fonly_2fbin_2ehome_2eproto

// ===================================================================

class HomeBasicCompBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeBasicCompBin) */ {
 public:
  HomeBasicCompBin();
  virtual ~HomeBasicCompBin();

  HomeBasicCompBin(const HomeBasicCompBin& from);

  inline HomeBasicCompBin& operator=(const HomeBasicCompBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeBasicCompBin(HomeBasicCompBin&& from) noexcept
    : HomeBasicCompBin() {
    *this = ::std::move(from);
  }

  inline HomeBasicCompBin& operator=(HomeBasicCompBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeBasicCompBin& default_instance();

  static inline const HomeBasicCompBin* internal_default_instance() {
    return reinterpret_cast<const HomeBasicCompBin*>(
               &_HomeBasicCompBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(HomeBasicCompBin* other);
  friend void swap(HomeBasicCompBin& a, HomeBasicCompBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeBasicCompBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeBasicCompBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeBasicCompBin& from);
  void MergeFrom(const HomeBasicCompBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeBasicCompBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string owner_nick_name = 6;
  void clear_owner_nick_name();
  static const int kOwnerNickNameFieldNumber = 6;
  const ::std::string& owner_nick_name() const;
  void set_owner_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_owner_nick_name(::std::string&& value);
  #endif
  void set_owner_nick_name(const char* value);
  void set_owner_nick_name(const char* value, size_t size);
  ::std::string* mutable_owner_nick_name();
  ::std::string* release_owner_nick_name();
  void set_allocated_owner_nick_name(::std::string* owner_nick_name);

  // uint64 trans_no_count = 1;
  void clear_trans_no_count();
  static const int kTransNoCountFieldNumber = 1;
  ::google::protobuf::uint64 trans_no_count() const;
  void set_trans_no_count(::google::protobuf::uint64 value);

  // uint64 exp = 4;
  void clear_exp();
  static const int kExpFieldNumber = 4;
  ::google::protobuf::uint64 exp() const;
  void set_exp(::google::protobuf::uint64 value);

  // uint32 level = 5;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 total_home_time = 7;
  void clear_total_home_time();
  static const int kTotalHomeTimeFieldNumber = 7;
  ::google::protobuf::uint32 total_home_time() const;
  void set_total_home_time(::google::protobuf::uint32 value);

  // uint64 home_time_ms = 8;
  void clear_home_time_ms();
  static const int kHomeTimeMsFieldNumber = 8;
  ::google::protobuf::uint64 home_time_ms() const;
  void set_home_time_ms(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.HomeBasicCompBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr owner_nick_name_;
  ::google::protobuf::uint64 trans_no_count_;
  ::google::protobuf::uint64 exp_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 total_home_time_;
  ::google::protobuf::uint64 home_time_ms_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeFurnitureBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeFurnitureBin) */ {
 public:
  HomeFurnitureBin();
  virtual ~HomeFurnitureBin();

  HomeFurnitureBin(const HomeFurnitureBin& from);

  inline HomeFurnitureBin& operator=(const HomeFurnitureBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeFurnitureBin(HomeFurnitureBin&& from) noexcept
    : HomeFurnitureBin() {
    *this = ::std::move(from);
  }

  inline HomeFurnitureBin& operator=(HomeFurnitureBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeFurnitureBin& default_instance();

  static inline const HomeFurnitureBin* internal_default_instance() {
    return reinterpret_cast<const HomeFurnitureBin*>(
               &_HomeFurnitureBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(HomeFurnitureBin* other);
  friend void swap(HomeFurnitureBin& a, HomeFurnitureBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeFurnitureBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeFurnitureBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeFurnitureBin& from);
  void MergeFrom(const HomeFurnitureBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeFurnitureBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.VectorBin spawn_pos = 3;
  bool has_spawn_pos() const;
  void clear_spawn_pos();
  static const int kSpawnPosFieldNumber = 3;
  const ::proto::VectorBin& spawn_pos() const;
  ::proto::VectorBin* mutable_spawn_pos();
  ::proto::VectorBin* release_spawn_pos();
  void set_allocated_spawn_pos(::proto::VectorBin* spawn_pos);

  // .proto.VectorBin spawn_rot = 4;
  bool has_spawn_rot() const;
  void clear_spawn_rot();
  static const int kSpawnRotFieldNumber = 4;
  const ::proto::VectorBin& spawn_rot() const;
  ::proto::VectorBin* mutable_spawn_rot();
  ::proto::VectorBin* release_spawn_rot();
  void set_allocated_spawn_rot(::proto::VectorBin* spawn_rot);

  // uint32 furniture_id = 1;
  void clear_furniture_id();
  static const int kFurnitureIdFieldNumber = 1;
  ::google::protobuf::uint32 furniture_id() const;
  void set_furniture_id(::google::protobuf::uint32 value);

  // int32 parent_furniture_index = 7;
  void clear_parent_furniture_index();
  static const int kParentFurnitureIndexFieldNumber = 7;
  ::google::protobuf::int32 parent_furniture_index() const;
  void set_parent_furniture_index(::google::protobuf::int32 value);

  // uint32 guid = 8;
  void clear_guid();
  static const int kGuidFieldNumber = 8;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // uint32 version = 9;
  void clear_version();
  static const int kVersionFieldNumber = 9;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeFurnitureBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::VectorBin* spawn_pos_;
  ::proto::VectorBin* spawn_rot_;
  ::google::protobuf::uint32 furniture_id_;
  ::google::protobuf::int32 parent_furniture_index_;
  ::google::protobuf::uint32 guid_;
  ::google::protobuf::uint32 version_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeFurnitureSuiteBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeFurnitureSuiteBin) */ {
 public:
  HomeFurnitureSuiteBin();
  virtual ~HomeFurnitureSuiteBin();

  HomeFurnitureSuiteBin(const HomeFurnitureSuiteBin& from);

  inline HomeFurnitureSuiteBin& operator=(const HomeFurnitureSuiteBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeFurnitureSuiteBin(HomeFurnitureSuiteBin&& from) noexcept
    : HomeFurnitureSuiteBin() {
    *this = ::std::move(from);
  }

  inline HomeFurnitureSuiteBin& operator=(HomeFurnitureSuiteBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeFurnitureSuiteBin& default_instance();

  static inline const HomeFurnitureSuiteBin* internal_default_instance() {
    return reinterpret_cast<const HomeFurnitureSuiteBin*>(
               &_HomeFurnitureSuiteBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(HomeFurnitureSuiteBin* other);
  friend void swap(HomeFurnitureSuiteBin& a, HomeFurnitureSuiteBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeFurnitureSuiteBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeFurnitureSuiteBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeFurnitureSuiteBin& from);
  void MergeFrom(const HomeFurnitureSuiteBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeFurnitureSuiteBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 included_furniture_index_list = 3;
  int included_furniture_index_list_size() const;
  void clear_included_furniture_index_list();
  static const int kIncludedFurnitureIndexListFieldNumber = 3;
  ::google::protobuf::int32 included_furniture_index_list(int index) const;
  void set_included_furniture_index_list(int index, ::google::protobuf::int32 value);
  void add_included_furniture_index_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      included_furniture_index_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_included_furniture_index_list();

  // .proto.VectorBin spawn_pos = 2;
  bool has_spawn_pos() const;
  void clear_spawn_pos();
  static const int kSpawnPosFieldNumber = 2;
  const ::proto::VectorBin& spawn_pos() const;
  ::proto::VectorBin* mutable_spawn_pos();
  ::proto::VectorBin* release_spawn_pos();
  void set_allocated_spawn_pos(::proto::VectorBin* spawn_pos);

  // uint32 suite_id = 1;
  void clear_suite_id();
  static const int kSuiteIdFieldNumber = 1;
  ::google::protobuf::uint32 suite_id() const;
  void set_suite_id(::google::protobuf::uint32 value);

  // uint32 guid = 4;
  void clear_guid();
  static const int kGuidFieldNumber = 4;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // bool is_allow_summon = 5;
  void clear_is_allow_summon();
  static const int kIsAllowSummonFieldNumber = 5;
  bool is_allow_summon() const;
  void set_is_allow_summon(bool value);

  // @@protoc_insertion_point(class_scope:proto.HomeFurnitureSuiteBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > included_furniture_index_list_;
  mutable int _included_furniture_index_list_cached_byte_size_;
  ::proto::VectorBin* spawn_pos_;
  ::google::protobuf::uint32 suite_id_;
  ::google::protobuf::uint32 guid_;
  bool is_allow_summon_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeNpcBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeNpcBin) */ {
 public:
  HomeNpcBin();
  virtual ~HomeNpcBin();

  HomeNpcBin(const HomeNpcBin& from);

  inline HomeNpcBin& operator=(const HomeNpcBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeNpcBin(HomeNpcBin&& from) noexcept
    : HomeNpcBin() {
    *this = ::std::move(from);
  }

  inline HomeNpcBin& operator=(HomeNpcBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeNpcBin& default_instance();

  static inline const HomeNpcBin* internal_default_instance() {
    return reinterpret_cast<const HomeNpcBin*>(
               &_HomeNpcBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(HomeNpcBin* other);
  friend void swap(HomeNpcBin& a, HomeNpcBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeNpcBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeNpcBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeNpcBin& from);
  void MergeFrom(const HomeNpcBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeNpcBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.VectorBin spawn_pos = 2;
  bool has_spawn_pos() const;
  void clear_spawn_pos();
  static const int kSpawnPosFieldNumber = 2;
  const ::proto::VectorBin& spawn_pos() const;
  ::proto::VectorBin* mutable_spawn_pos();
  ::proto::VectorBin* release_spawn_pos();
  void set_allocated_spawn_pos(::proto::VectorBin* spawn_pos);

  // .proto.VectorBin spawn_rot = 3;
  bool has_spawn_rot() const;
  void clear_spawn_rot();
  static const int kSpawnRotFieldNumber = 3;
  const ::proto::VectorBin& spawn_rot() const;
  ::proto::VectorBin* mutable_spawn_rot();
  ::proto::VectorBin* release_spawn_rot();
  void set_allocated_spawn_rot(::proto::VectorBin* spawn_rot);

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 costume_id = 4;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 4;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeNpcBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::VectorBin* spawn_pos_;
  ::proto::VectorBin* spawn_rot_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 costume_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeAnimalBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeAnimalBin) */ {
 public:
  HomeAnimalBin();
  virtual ~HomeAnimalBin();

  HomeAnimalBin(const HomeAnimalBin& from);

  inline HomeAnimalBin& operator=(const HomeAnimalBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeAnimalBin(HomeAnimalBin&& from) noexcept
    : HomeAnimalBin() {
    *this = ::std::move(from);
  }

  inline HomeAnimalBin& operator=(HomeAnimalBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeAnimalBin& default_instance();

  static inline const HomeAnimalBin* internal_default_instance() {
    return reinterpret_cast<const HomeAnimalBin*>(
               &_HomeAnimalBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(HomeAnimalBin* other);
  friend void swap(HomeAnimalBin& a, HomeAnimalBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeAnimalBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeAnimalBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeAnimalBin& from);
  void MergeFrom(const HomeAnimalBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeAnimalBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.VectorBin spawn_pos = 2;
  bool has_spawn_pos() const;
  void clear_spawn_pos();
  static const int kSpawnPosFieldNumber = 2;
  const ::proto::VectorBin& spawn_pos() const;
  ::proto::VectorBin* mutable_spawn_pos();
  ::proto::VectorBin* release_spawn_pos();
  void set_allocated_spawn_pos(::proto::VectorBin* spawn_pos);

  // .proto.VectorBin spawn_rot = 3;
  bool has_spawn_rot() const;
  void clear_spawn_rot();
  static const int kSpawnRotFieldNumber = 3;
  const ::proto::VectorBin& spawn_rot() const;
  ::proto::VectorBin* mutable_spawn_rot();
  ::proto::VectorBin* release_spawn_rot();
  void set_allocated_spawn_rot(::proto::VectorBin* spawn_rot);

  // uint32 furniture_id = 1;
  void clear_furniture_id();
  static const int kFurnitureIdFieldNumber = 1;
  ::google::protobuf::uint32 furniture_id() const;
  void set_furniture_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeAnimalBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::VectorBin* spawn_pos_;
  ::proto::VectorBin* spawn_rot_;
  ::google::protobuf::uint32 furniture_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeBlockSubFieldBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeBlockSubFieldBin) */ {
 public:
  HomeBlockSubFieldBin();
  virtual ~HomeBlockSubFieldBin();

  HomeBlockSubFieldBin(const HomeBlockSubFieldBin& from);

  inline HomeBlockSubFieldBin& operator=(const HomeBlockSubFieldBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeBlockSubFieldBin(HomeBlockSubFieldBin&& from) noexcept
    : HomeBlockSubFieldBin() {
    *this = ::std::move(from);
  }

  inline HomeBlockSubFieldBin& operator=(HomeBlockSubFieldBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeBlockSubFieldBin& default_instance();

  static inline const HomeBlockSubFieldBin* internal_default_instance() {
    return reinterpret_cast<const HomeBlockSubFieldBin*>(
               &_HomeBlockSubFieldBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(HomeBlockSubFieldBin* other);
  friend void swap(HomeBlockSubFieldBin& a, HomeBlockSubFieldBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeBlockSubFieldBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeBlockSubFieldBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeBlockSubFieldBin& from);
  void MergeFrom(const HomeBlockSubFieldBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeBlockSubFieldBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.VectorBin spawn_pos = 1;
  bool has_spawn_pos() const;
  void clear_spawn_pos();
  static const int kSpawnPosFieldNumber = 1;
  const ::proto::VectorBin& spawn_pos() const;
  ::proto::VectorBin* mutable_spawn_pos();
  ::proto::VectorBin* release_spawn_pos();
  void set_allocated_spawn_pos(::proto::VectorBin* spawn_pos);

  // .proto.VectorBin spawn_rot = 2;
  bool has_spawn_rot() const;
  void clear_spawn_rot();
  static const int kSpawnRotFieldNumber = 2;
  const ::proto::VectorBin& spawn_rot() const;
  ::proto::VectorBin* mutable_spawn_rot();
  ::proto::VectorBin* release_spawn_rot();
  void set_allocated_spawn_rot(::proto::VectorBin* spawn_rot);

  // @@protoc_insertion_point(class_scope:proto.HomeBlockSubFieldBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::VectorBin* spawn_pos_;
  ::proto::VectorBin* spawn_rot_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeBlockFieldBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeBlockFieldBin) */ {
 public:
  HomeBlockFieldBin();
  virtual ~HomeBlockFieldBin();

  HomeBlockFieldBin(const HomeBlockFieldBin& from);

  inline HomeBlockFieldBin& operator=(const HomeBlockFieldBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeBlockFieldBin(HomeBlockFieldBin&& from) noexcept
    : HomeBlockFieldBin() {
    *this = ::std::move(from);
  }

  inline HomeBlockFieldBin& operator=(HomeBlockFieldBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeBlockFieldBin& default_instance();

  static inline const HomeBlockFieldBin* internal_default_instance() {
    return reinterpret_cast<const HomeBlockFieldBin*>(
               &_HomeBlockFieldBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(HomeBlockFieldBin* other);
  friend void swap(HomeBlockFieldBin& a, HomeBlockFieldBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeBlockFieldBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeBlockFieldBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeBlockFieldBin& from);
  void MergeFrom(const HomeBlockFieldBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeBlockFieldBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeBlockSubFieldBin sub_field_list = 5;
  int sub_field_list_size() const;
  void clear_sub_field_list();
  static const int kSubFieldListFieldNumber = 5;
  const ::proto::HomeBlockSubFieldBin& sub_field_list(int index) const;
  ::proto::HomeBlockSubFieldBin* mutable_sub_field_list(int index);
  ::proto::HomeBlockSubFieldBin* add_sub_field_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockSubFieldBin >*
      mutable_sub_field_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockSubFieldBin >&
      sub_field_list() const;

  // .proto.VectorBin spawn_pos = 3;
  bool has_spawn_pos() const;
  void clear_spawn_pos();
  static const int kSpawnPosFieldNumber = 3;
  const ::proto::VectorBin& spawn_pos() const;
  ::proto::VectorBin* mutable_spawn_pos();
  ::proto::VectorBin* release_spawn_pos();
  void set_allocated_spawn_pos(::proto::VectorBin* spawn_pos);

  // .proto.VectorBin spawn_rot = 4;
  bool has_spawn_rot() const;
  void clear_spawn_rot();
  static const int kSpawnRotFieldNumber = 4;
  const ::proto::VectorBin& spawn_rot() const;
  ::proto::VectorBin* mutable_spawn_rot();
  ::proto::VectorBin* release_spawn_rot();
  void set_allocated_spawn_rot(::proto::VectorBin* spawn_rot);

  // uint32 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // uint32 furniture_id = 2;
  void clear_furniture_id();
  static const int kFurnitureIdFieldNumber = 2;
  ::google::protobuf::uint32 furniture_id() const;
  void set_furniture_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeBlockFieldBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockSubFieldBin > sub_field_list_;
  ::proto::VectorBin* spawn_pos_;
  ::proto::VectorBin* spawn_rot_;
  ::google::protobuf::uint32 guid_;
  ::google::protobuf::uint32 furniture_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeFurnitureGroupBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeFurnitureGroupBin) */ {
 public:
  HomeFurnitureGroupBin();
  virtual ~HomeFurnitureGroupBin();

  HomeFurnitureGroupBin(const HomeFurnitureGroupBin& from);

  inline HomeFurnitureGroupBin& operator=(const HomeFurnitureGroupBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeFurnitureGroupBin(HomeFurnitureGroupBin&& from) noexcept
    : HomeFurnitureGroupBin() {
    *this = ::std::move(from);
  }

  inline HomeFurnitureGroupBin& operator=(HomeFurnitureGroupBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeFurnitureGroupBin& default_instance();

  static inline const HomeFurnitureGroupBin* internal_default_instance() {
    return reinterpret_cast<const HomeFurnitureGroupBin*>(
               &_HomeFurnitureGroupBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(HomeFurnitureGroupBin* other);
  friend void swap(HomeFurnitureGroupBin& a, HomeFurnitureGroupBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeFurnitureGroupBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeFurnitureGroupBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeFurnitureGroupBin& from);
  void MergeFrom(const HomeFurnitureGroupBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeFurnitureGroupBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeFurnitureBin virtual_furniure_list = 2;
  int virtual_furniure_list_size() const;
  void clear_virtual_furniure_list();
  static const int kVirtualFurniureListFieldNumber = 2;
  const ::proto::HomeFurnitureBin& virtual_furniure_list(int index) const;
  ::proto::HomeFurnitureBin* mutable_virtual_furniure_list(int index);
  ::proto::HomeFurnitureBin* add_virtual_furniure_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
      mutable_virtual_furniure_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
      virtual_furniure_list() const;

  // uint32 group_furniture_index = 1;
  void clear_group_furniture_index();
  static const int kGroupFurnitureIndexFieldNumber = 1;
  ::google::protobuf::uint32 group_furniture_index() const;
  void set_group_furniture_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeFurnitureGroupBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin > virtual_furniure_list_;
  ::google::protobuf::uint32 group_furniture_index_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeFurnitureCustomSuiteBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeFurnitureCustomSuiteBin) */ {
 public:
  HomeFurnitureCustomSuiteBin();
  virtual ~HomeFurnitureCustomSuiteBin();

  HomeFurnitureCustomSuiteBin(const HomeFurnitureCustomSuiteBin& from);

  inline HomeFurnitureCustomSuiteBin& operator=(const HomeFurnitureCustomSuiteBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeFurnitureCustomSuiteBin(HomeFurnitureCustomSuiteBin&& from) noexcept
    : HomeFurnitureCustomSuiteBin() {
    *this = ::std::move(from);
  }

  inline HomeFurnitureCustomSuiteBin& operator=(HomeFurnitureCustomSuiteBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeFurnitureCustomSuiteBin& default_instance();

  static inline const HomeFurnitureCustomSuiteBin* internal_default_instance() {
    return reinterpret_cast<const HomeFurnitureCustomSuiteBin*>(
               &_HomeFurnitureCustomSuiteBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(HomeFurnitureCustomSuiteBin* other);
  friend void swap(HomeFurnitureCustomSuiteBin& a, HomeFurnitureCustomSuiteBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeFurnitureCustomSuiteBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeFurnitureCustomSuiteBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeFurnitureCustomSuiteBin& from);
  void MergeFrom(const HomeFurnitureCustomSuiteBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeFurnitureCustomSuiteBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 included_furniture_index_list = 2;
  int included_furniture_index_list_size() const;
  void clear_included_furniture_index_list();
  static const int kIncludedFurnitureIndexListFieldNumber = 2;
  ::google::protobuf::int32 included_furniture_index_list(int index) const;
  void set_included_furniture_index_list(int index, ::google::protobuf::int32 value);
  void add_included_furniture_index_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      included_furniture_index_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_included_furniture_index_list();

  // .proto.VectorBin spawn_pos = 1;
  bool has_spawn_pos() const;
  void clear_spawn_pos();
  static const int kSpawnPosFieldNumber = 1;
  const ::proto::VectorBin& spawn_pos() const;
  ::proto::VectorBin* mutable_spawn_pos();
  ::proto::VectorBin* release_spawn_pos();
  void set_allocated_spawn_pos(::proto::VectorBin* spawn_pos);

  // uint32 guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeFurnitureCustomSuiteBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > included_furniture_index_list_;
  mutable int _included_furniture_index_list_cached_byte_size_;
  ::proto::VectorBin* spawn_pos_;
  ::google::protobuf::uint32 guid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeBlockBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeBlockBin) */ {
 public:
  HomeBlockBin();
  virtual ~HomeBlockBin();

  HomeBlockBin(const HomeBlockBin& from);

  inline HomeBlockBin& operator=(const HomeBlockBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeBlockBin(HomeBlockBin&& from) noexcept
    : HomeBlockBin() {
    *this = ::std::move(from);
  }

  inline HomeBlockBin& operator=(HomeBlockBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeBlockBin& default_instance();

  static inline const HomeBlockBin* internal_default_instance() {
    return reinterpret_cast<const HomeBlockBin*>(
               &_HomeBlockBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(HomeBlockBin* other);
  friend void swap(HomeBlockBin& a, HomeBlockBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeBlockBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeBlockBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeBlockBin& from);
  void MergeFrom(const HomeBlockBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeBlockBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeFurnitureBin persistent_furniture_list = 2;
  int persistent_furniture_list_size() const;
  void clear_persistent_furniture_list();
  static const int kPersistentFurnitureListFieldNumber = 2;
  const ::proto::HomeFurnitureBin& persistent_furniture_list(int index) const;
  ::proto::HomeFurnitureBin* mutable_persistent_furniture_list(int index);
  ::proto::HomeFurnitureBin* add_persistent_furniture_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
      mutable_persistent_furniture_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
      persistent_furniture_list() const;

  // repeated .proto.HomeFurnitureBin deploy_furniure_list = 3;
  int deploy_furniure_list_size() const;
  void clear_deploy_furniure_list();
  static const int kDeployFurniureListFieldNumber = 3;
  const ::proto::HomeFurnitureBin& deploy_furniure_list(int index) const;
  ::proto::HomeFurnitureBin* mutable_deploy_furniure_list(int index);
  ::proto::HomeFurnitureBin* add_deploy_furniure_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
      mutable_deploy_furniure_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
      deploy_furniure_list() const;

  // repeated .proto.HomeNpcBin deploy_npc_list = 4;
  int deploy_npc_list_size() const;
  void clear_deploy_npc_list();
  static const int kDeployNpcListFieldNumber = 4;
  const ::proto::HomeNpcBin& deploy_npc_list(int index) const;
  ::proto::HomeNpcBin* mutable_deploy_npc_list(int index);
  ::proto::HomeNpcBin* add_deploy_npc_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeNpcBin >*
      mutable_deploy_npc_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeNpcBin >&
      deploy_npc_list() const;

  // repeated .proto.HomeFurnitureSuiteBin furniture_suite_list = 5;
  int furniture_suite_list_size() const;
  void clear_furniture_suite_list();
  static const int kFurnitureSuiteListFieldNumber = 5;
  const ::proto::HomeFurnitureSuiteBin& furniture_suite_list(int index) const;
  ::proto::HomeFurnitureSuiteBin* mutable_furniture_suite_list(int index);
  ::proto::HomeFurnitureSuiteBin* add_furniture_suite_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureSuiteBin >*
      mutable_furniture_suite_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureSuiteBin >&
      furniture_suite_list() const;

  // repeated .proto.HomeAnimalBin deploy_animal_list = 6;
  int deploy_animal_list_size() const;
  void clear_deploy_animal_list();
  static const int kDeployAnimalListFieldNumber = 6;
  const ::proto::HomeAnimalBin& deploy_animal_list(int index) const;
  ::proto::HomeAnimalBin* mutable_deploy_animal_list(int index);
  ::proto::HomeAnimalBin* add_deploy_animal_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeAnimalBin >*
      mutable_deploy_animal_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeAnimalBin >&
      deploy_animal_list() const;

  // repeated .proto.HomeBlockFieldBin deploy_field_list = 8;
  int deploy_field_list_size() const;
  void clear_deploy_field_list();
  static const int kDeployFieldListFieldNumber = 8;
  const ::proto::HomeBlockFieldBin& deploy_field_list(int index) const;
  ::proto::HomeBlockFieldBin* mutable_deploy_field_list(int index);
  ::proto::HomeBlockFieldBin* add_deploy_field_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockFieldBin >*
      mutable_deploy_field_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockFieldBin >&
      deploy_field_list() const;

  // repeated .proto.HomeFurnitureGroupBin deploy_furniture_group_list = 9;
  int deploy_furniture_group_list_size() const;
  void clear_deploy_furniture_group_list();
  static const int kDeployFurnitureGroupListFieldNumber = 9;
  const ::proto::HomeFurnitureGroupBin& deploy_furniture_group_list(int index) const;
  ::proto::HomeFurnitureGroupBin* mutable_deploy_furniture_group_list(int index);
  ::proto::HomeFurnitureGroupBin* add_deploy_furniture_group_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureGroupBin >*
      mutable_deploy_furniture_group_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureGroupBin >&
      deploy_furniture_group_list() const;

  // repeated .proto.HomeFurnitureCustomSuiteBin furniture_custom_suite_list = 10;
  int furniture_custom_suite_list_size() const;
  void clear_furniture_custom_suite_list();
  static const int kFurnitureCustomSuiteListFieldNumber = 10;
  const ::proto::HomeFurnitureCustomSuiteBin& furniture_custom_suite_list(int index) const;
  ::proto::HomeFurnitureCustomSuiteBin* mutable_furniture_custom_suite_list(int index);
  ::proto::HomeFurnitureCustomSuiteBin* add_furniture_custom_suite_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureCustomSuiteBin >*
      mutable_furniture_custom_suite_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureCustomSuiteBin >&
      furniture_custom_suite_list() const;

  // uint32 block_id = 1;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 1;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // bool is_unlocked = 7;
  void clear_is_unlocked();
  static const int kIsUnlockedFieldNumber = 7;
  bool is_unlocked() const;
  void set_is_unlocked(bool value);

  // @@protoc_insertion_point(class_scope:proto.HomeBlockBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin > persistent_furniture_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin > deploy_furniure_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeNpcBin > deploy_npc_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureSuiteBin > furniture_suite_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeAnimalBin > deploy_animal_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockFieldBin > deploy_field_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureGroupBin > deploy_furniture_group_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureCustomSuiteBin > furniture_custom_suite_list_;
  ::google::protobuf::uint32 block_id_;
  bool is_unlocked_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeSceneBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeSceneBin) */ {
 public:
  HomeSceneBin();
  virtual ~HomeSceneBin();

  HomeSceneBin(const HomeSceneBin& from);

  inline HomeSceneBin& operator=(const HomeSceneBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeSceneBin(HomeSceneBin&& from) noexcept
    : HomeSceneBin() {
    *this = ::std::move(from);
  }

  inline HomeSceneBin& operator=(HomeSceneBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeSceneBin& default_instance();

  static inline const HomeSceneBin* internal_default_instance() {
    return reinterpret_cast<const HomeSceneBin*>(
               &_HomeSceneBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(HomeSceneBin* other);
  friend void swap(HomeSceneBin& a, HomeSceneBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeSceneBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeSceneBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeSceneBin& from);
  void MergeFrom(const HomeSceneBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeSceneBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeBlockBin block_bin_list = 3;
  int block_bin_list_size() const;
  void clear_block_bin_list();
  static const int kBlockBinListFieldNumber = 3;
  const ::proto::HomeBlockBin& block_bin_list(int index) const;
  ::proto::HomeBlockBin* mutable_block_bin_list(int index);
  ::proto::HomeBlockBin* add_block_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockBin >*
      mutable_block_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockBin >&
      block_bin_list() const;

  // repeated .proto.HomeFurnitureBin door_list = 7;
  int door_list_size() const;
  void clear_door_list();
  static const int kDoorListFieldNumber = 7;
  const ::proto::HomeFurnitureBin& door_list(int index) const;
  ::proto::HomeFurnitureBin* mutable_door_list(int index);
  ::proto::HomeFurnitureBin* add_door_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
      mutable_door_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
      door_list() const;

  // repeated .proto.HomeFurnitureBin stair_list = 8;
  int stair_list_size() const;
  void clear_stair_list();
  static const int kStairListFieldNumber = 8;
  const ::proto::HomeFurnitureBin& stair_list(int index) const;
  ::proto::HomeFurnitureBin* mutable_stair_list(int index);
  ::proto::HomeFurnitureBin* add_stair_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
      mutable_stair_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
      stair_list() const;

  // .proto.SceneBin scene_bin = 2;
  bool has_scene_bin() const;
  void clear_scene_bin();
  static const int kSceneBinFieldNumber = 2;
  const ::proto::SceneBin& scene_bin() const;
  ::proto::SceneBin* mutable_scene_bin();
  ::proto::SceneBin* release_scene_bin();
  void set_allocated_scene_bin(::proto::SceneBin* scene_bin);

  // .proto.VectorBin born_pos = 5;
  bool has_born_pos() const;
  void clear_born_pos();
  static const int kBornPosFieldNumber = 5;
  const ::proto::VectorBin& born_pos() const;
  ::proto::VectorBin* mutable_born_pos();
  ::proto::VectorBin* release_born_pos();
  void set_allocated_born_pos(::proto::VectorBin* born_pos);

  // .proto.VectorBin born_rot = 6;
  bool has_born_rot() const;
  void clear_born_rot();
  static const int kBornRotFieldNumber = 6;
  const ::proto::VectorBin& born_rot() const;
  ::proto::VectorBin* mutable_born_rot();
  ::proto::VectorBin* release_born_rot();
  void set_allocated_born_rot(::proto::VectorBin* born_rot);

  // .proto.HomeFurnitureBin main_house = 9;
  bool has_main_house() const;
  void clear_main_house();
  static const int kMainHouseFieldNumber = 9;
  const ::proto::HomeFurnitureBin& main_house() const;
  ::proto::HomeFurnitureBin* mutable_main_house();
  ::proto::HomeFurnitureBin* release_main_house();
  void set_allocated_main_house(::proto::HomeFurnitureBin* main_house);

  // .proto.VectorBin djinn_pos = 10;
  bool has_djinn_pos() const;
  void clear_djinn_pos();
  static const int kDjinnPosFieldNumber = 10;
  const ::proto::VectorBin& djinn_pos() const;
  ::proto::VectorBin* mutable_djinn_pos();
  ::proto::VectorBin* release_djinn_pos();
  void set_allocated_djinn_pos(::proto::VectorBin* djinn_pos);

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // bool is_set_born_pos = 4;
  void clear_is_set_born_pos();
  static const int kIsSetBornPosFieldNumber = 4;
  bool is_set_born_pos() const;
  void set_is_set_born_pos(bool value);

  // uint32 tmp_version = 12;
  void clear_tmp_version();
  static const int kTmpVersionFieldNumber = 12;
  ::google::protobuf::uint32 tmp_version() const;
  void set_tmp_version(::google::protobuf::uint32 value);

  // fixed32 save_time = 13;
  void clear_save_time();
  static const int kSaveTimeFieldNumber = 13;
  ::google::protobuf::uint32 save_time() const;
  void set_save_time(::google::protobuf::uint32 value);

  // uint32 bgm_id = 14;
  void clear_bgm_id();
  static const int kBgmIdFieldNumber = 14;
  ::google::protobuf::uint32 bgm_id() const;
  void set_bgm_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeSceneBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockBin > block_bin_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin > door_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin > stair_list_;
  ::proto::SceneBin* scene_bin_;
  ::proto::VectorBin* born_pos_;
  ::proto::VectorBin* born_rot_;
  ::proto::HomeFurnitureBin* main_house_;
  ::proto::VectorBin* djinn_pos_;
  ::google::protobuf::uint32 scene_id_;
  bool is_set_born_pos_;
  ::google::protobuf::uint32 tmp_version_;
  ::google::protobuf::uint32 save_time_;
  ::google::protobuf::uint32 bgm_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeModuleBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeModuleBin) */ {
 public:
  HomeModuleBin();
  virtual ~HomeModuleBin();

  HomeModuleBin(const HomeModuleBin& from);

  inline HomeModuleBin& operator=(const HomeModuleBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeModuleBin(HomeModuleBin&& from) noexcept
    : HomeModuleBin() {
    *this = ::std::move(from);
  }

  inline HomeModuleBin& operator=(HomeModuleBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeModuleBin& default_instance();

  static inline const HomeModuleBin* internal_default_instance() {
    return reinterpret_cast<const HomeModuleBin*>(
               &_HomeModuleBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(HomeModuleBin* other);
  friend void swap(HomeModuleBin& a, HomeModuleBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeModuleBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeModuleBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeModuleBin& from);
  void MergeFrom(const HomeModuleBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeModuleBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeSceneBin scene_bin_list = 3;
  int scene_bin_list_size() const;
  void clear_scene_bin_list();
  static const int kSceneBinListFieldNumber = 3;
  const ::proto::HomeSceneBin& scene_bin_list(int index) const;
  ::proto::HomeSceneBin* mutable_scene_bin_list(int index);
  ::proto::HomeSceneBin* add_scene_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeSceneBin >*
      mutable_scene_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeSceneBin >&
      scene_bin_list() const;

  // uint32 module_id = 1;
  void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  ::google::protobuf::uint32 module_id() const;
  void set_module_id(::google::protobuf::uint32 value);

  // uint32 cur_room_scene_id = 2;
  void clear_cur_room_scene_id();
  static const int kCurRoomSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 cur_room_scene_id() const;
  void set_cur_room_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeModuleBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeSceneBin > scene_bin_list_;
  ::google::protobuf::uint32 module_id_;
  ::google::protobuf::uint32 cur_room_scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeSceneCompBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeSceneCompBin) */ {
 public:
  HomeSceneCompBin();
  virtual ~HomeSceneCompBin();

  HomeSceneCompBin(const HomeSceneCompBin& from);

  inline HomeSceneCompBin& operator=(const HomeSceneCompBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeSceneCompBin(HomeSceneCompBin&& from) noexcept
    : HomeSceneCompBin() {
    *this = ::std::move(from);
  }

  inline HomeSceneCompBin& operator=(HomeSceneCompBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeSceneCompBin& default_instance();

  static inline const HomeSceneCompBin* internal_default_instance() {
    return reinterpret_cast<const HomeSceneCompBin*>(
               &_HomeSceneCompBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(HomeSceneCompBin* other);
  friend void swap(HomeSceneCompBin& a, HomeSceneCompBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeSceneCompBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeSceneCompBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeSceneCompBin& from);
  void MergeFrom(const HomeSceneCompBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeSceneCompBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeModuleBin module_bin_list = 2;
  int module_bin_list_size() const;
  void clear_module_bin_list();
  static const int kModuleBinListFieldNumber = 2;
  const ::proto::HomeModuleBin& module_bin_list(int index) const;
  ::proto::HomeModuleBin* mutable_module_bin_list(int index);
  ::proto::HomeModuleBin* add_module_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleBin >*
      mutable_module_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleBin >&
      module_bin_list() const;

  // uint32 cur_module_id = 1;
  void clear_cur_module_id();
  static const int kCurModuleIdFieldNumber = 1;
  ::google::protobuf::uint32 cur_module_id() const;
  void set_cur_module_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeSceneCompBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleBin > module_bin_list_;
  ::google::protobuf::uint32 cur_module_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeOfflineMsgExeBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeOfflineMsgExeBin) */ {
 public:
  HomeOfflineMsgExeBin();
  virtual ~HomeOfflineMsgExeBin();

  HomeOfflineMsgExeBin(const HomeOfflineMsgExeBin& from);

  inline HomeOfflineMsgExeBin& operator=(const HomeOfflineMsgExeBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeOfflineMsgExeBin(HomeOfflineMsgExeBin&& from) noexcept
    : HomeOfflineMsgExeBin() {
    *this = ::std::move(from);
  }

  inline HomeOfflineMsgExeBin& operator=(HomeOfflineMsgExeBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeOfflineMsgExeBin& default_instance();

  static inline const HomeOfflineMsgExeBin* internal_default_instance() {
    return reinterpret_cast<const HomeOfflineMsgExeBin*>(
               &_HomeOfflineMsgExeBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(HomeOfflineMsgExeBin* other);
  friend void swap(HomeOfflineMsgExeBin& a, HomeOfflineMsgExeBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeOfflineMsgExeBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeOfflineMsgExeBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeOfflineMsgExeBin& from);
  void MergeFrom(const HomeOfflineMsgExeBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeOfflineMsgExeBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.HomeOfflineMsgBin msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::proto::HomeOfflineMsgBin& msg() const;
  ::proto::HomeOfflineMsgBin* mutable_msg();
  ::proto::HomeOfflineMsgBin* release_msg();
  void set_allocated_msg(::proto::HomeOfflineMsgBin* msg);

  // uint32 exe_times = 2;
  void clear_exe_times();
  static const int kExeTimesFieldNumber = 2;
  ::google::protobuf::uint32 exe_times() const;
  void set_exe_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeOfflineMsgExeBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::HomeOfflineMsgBin* msg_;
  ::google::protobuf::uint32 exe_times_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeOfflineMsgCompBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeOfflineMsgCompBin) */ {
 public:
  HomeOfflineMsgCompBin();
  virtual ~HomeOfflineMsgCompBin();

  HomeOfflineMsgCompBin(const HomeOfflineMsgCompBin& from);

  inline HomeOfflineMsgCompBin& operator=(const HomeOfflineMsgCompBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeOfflineMsgCompBin(HomeOfflineMsgCompBin&& from) noexcept
    : HomeOfflineMsgCompBin() {
    *this = ::std::move(from);
  }

  inline HomeOfflineMsgCompBin& operator=(HomeOfflineMsgCompBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeOfflineMsgCompBin& default_instance();

  static inline const HomeOfflineMsgCompBin* internal_default_instance() {
    return reinterpret_cast<const HomeOfflineMsgCompBin*>(
               &_HomeOfflineMsgCompBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(HomeOfflineMsgCompBin* other);
  friend void swap(HomeOfflineMsgCompBin& a, HomeOfflineMsgCompBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeOfflineMsgCompBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeOfflineMsgCompBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeOfflineMsgCompBin& from);
  void MergeFrom(const HomeOfflineMsgCompBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeOfflineMsgCompBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeOfflineMsgExeBin next_offline_msg_list = 2;
  int next_offline_msg_list_size() const;
  void clear_next_offline_msg_list();
  static const int kNextOfflineMsgListFieldNumber = 2;
  const ::proto::HomeOfflineMsgExeBin& next_offline_msg_list(int index) const;
  ::proto::HomeOfflineMsgExeBin* mutable_next_offline_msg_list(int index);
  ::proto::HomeOfflineMsgExeBin* add_next_offline_msg_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeOfflineMsgExeBin >*
      mutable_next_offline_msg_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeOfflineMsgExeBin >&
      next_offline_msg_list() const;

  // uint32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeOfflineMsgCompBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeOfflineMsgExeBin > next_offline_msg_list_;
  ::google::protobuf::uint32 index_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeFurnitureMakeBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeFurnitureMakeBin) */ {
 public:
  HomeFurnitureMakeBin();
  virtual ~HomeFurnitureMakeBin();

  HomeFurnitureMakeBin(const HomeFurnitureMakeBin& from);

  inline HomeFurnitureMakeBin& operator=(const HomeFurnitureMakeBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeFurnitureMakeBin(HomeFurnitureMakeBin&& from) noexcept
    : HomeFurnitureMakeBin() {
    *this = ::std::move(from);
  }

  inline HomeFurnitureMakeBin& operator=(HomeFurnitureMakeBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeFurnitureMakeBin& default_instance();

  static inline const HomeFurnitureMakeBin* internal_default_instance() {
    return reinterpret_cast<const HomeFurnitureMakeBin*>(
               &_HomeFurnitureMakeBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(HomeFurnitureMakeBin* other);
  friend void swap(HomeFurnitureMakeBin& a, HomeFurnitureMakeBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeFurnitureMakeBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeFurnitureMakeBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeFurnitureMakeBin& from);
  void MergeFrom(const HomeFurnitureMakeBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeFurnitureMakeBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.FurnitureMakeSlotsBin furniture_make_slots_bin_list = 1;
  int furniture_make_slots_bin_list_size() const;
  void clear_furniture_make_slots_bin_list();
  static const int kFurnitureMakeSlotsBinListFieldNumber = 1;
  const ::proto::FurnitureMakeSlotsBin& furniture_make_slots_bin_list(int index) const;
  ::proto::FurnitureMakeSlotsBin* mutable_furniture_make_slots_bin_list(int index);
  ::proto::FurnitureMakeSlotsBin* add_furniture_make_slots_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::FurnitureMakeSlotsBin >*
      mutable_furniture_make_slots_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::FurnitureMakeSlotsBin >&
      furniture_make_slots_bin_list() const;

  // @@protoc_insertion_point(class_scope:proto.HomeFurnitureMakeBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::FurnitureMakeSlotsBin > furniture_make_slots_bin_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeLimitedShopPoolRecordBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeLimitedShopPoolRecordBin) */ {
 public:
  HomeLimitedShopPoolRecordBin();
  virtual ~HomeLimitedShopPoolRecordBin();

  HomeLimitedShopPoolRecordBin(const HomeLimitedShopPoolRecordBin& from);

  inline HomeLimitedShopPoolRecordBin& operator=(const HomeLimitedShopPoolRecordBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeLimitedShopPoolRecordBin(HomeLimitedShopPoolRecordBin&& from) noexcept
    : HomeLimitedShopPoolRecordBin() {
    *this = ::std::move(from);
  }

  inline HomeLimitedShopPoolRecordBin& operator=(HomeLimitedShopPoolRecordBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeLimitedShopPoolRecordBin& default_instance();

  static inline const HomeLimitedShopPoolRecordBin* internal_default_instance() {
    return reinterpret_cast<const HomeLimitedShopPoolRecordBin*>(
               &_HomeLimitedShopPoolRecordBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(HomeLimitedShopPoolRecordBin* other);
  friend void swap(HomeLimitedShopPoolRecordBin& a, HomeLimitedShopPoolRecordBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeLimitedShopPoolRecordBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeLimitedShopPoolRecordBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeLimitedShopPoolRecordBin& from);
  void MergeFrom(const HomeLimitedShopPoolRecordBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeLimitedShopPoolRecordBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 goods_id_list = 2;
  int goods_id_list_size() const;
  void clear_goods_id_list();
  static const int kGoodsIdListFieldNumber = 2;
  ::google::protobuf::uint32 goods_id_list(int index) const;
  void set_goods_id_list(int index, ::google::protobuf::uint32 value);
  void add_goods_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      goods_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_goods_id_list();

  // uint32 pool_id = 1;
  void clear_pool_id();
  static const int kPoolIdFieldNumber = 1;
  ::google::protobuf::uint32 pool_id() const;
  void set_pool_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeLimitedShopPoolRecordBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > goods_id_list_;
  mutable int _goods_id_list_cached_byte_size_;
  ::google::protobuf::uint32 pool_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeLimitedShopGoodsInfoBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeLimitedShopGoodsInfoBin) */ {
 public:
  HomeLimitedShopGoodsInfoBin();
  virtual ~HomeLimitedShopGoodsInfoBin();

  HomeLimitedShopGoodsInfoBin(const HomeLimitedShopGoodsInfoBin& from);

  inline HomeLimitedShopGoodsInfoBin& operator=(const HomeLimitedShopGoodsInfoBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeLimitedShopGoodsInfoBin(HomeLimitedShopGoodsInfoBin&& from) noexcept
    : HomeLimitedShopGoodsInfoBin() {
    *this = ::std::move(from);
  }

  inline HomeLimitedShopGoodsInfoBin& operator=(HomeLimitedShopGoodsInfoBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeLimitedShopGoodsInfoBin& default_instance();

  static inline const HomeLimitedShopGoodsInfoBin* internal_default_instance() {
    return reinterpret_cast<const HomeLimitedShopGoodsInfoBin*>(
               &_HomeLimitedShopGoodsInfoBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(HomeLimitedShopGoodsInfoBin* other);
  friend void swap(HomeLimitedShopGoodsInfoBin& a, HomeLimitedShopGoodsInfoBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeLimitedShopGoodsInfoBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeLimitedShopGoodsInfoBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeLimitedShopGoodsInfoBin& from);
  void MergeFrom(const HomeLimitedShopGoodsInfoBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeLimitedShopGoodsInfoBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 goods_id = 1;
  void clear_goods_id();
  static const int kGoodsIdFieldNumber = 1;
  ::google::protobuf::uint32 goods_id() const;
  void set_goods_id(::google::protobuf::uint32 value);

  // uint32 buy_num = 2;
  void clear_buy_num();
  static const int kBuyNumFieldNumber = 2;
  ::google::protobuf::uint32 buy_num() const;
  void set_buy_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeLimitedShopGoodsInfoBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 goods_id_;
  ::google::protobuf::uint32 buy_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeLimitedShopNPCPosBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeLimitedShopNPCPosBin) */ {
 public:
  HomeLimitedShopNPCPosBin();
  virtual ~HomeLimitedShopNPCPosBin();

  HomeLimitedShopNPCPosBin(const HomeLimitedShopNPCPosBin& from);

  inline HomeLimitedShopNPCPosBin& operator=(const HomeLimitedShopNPCPosBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeLimitedShopNPCPosBin(HomeLimitedShopNPCPosBin&& from) noexcept
    : HomeLimitedShopNPCPosBin() {
    *this = ::std::move(from);
  }

  inline HomeLimitedShopNPCPosBin& operator=(HomeLimitedShopNPCPosBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeLimitedShopNPCPosBin& default_instance();

  static inline const HomeLimitedShopNPCPosBin* internal_default_instance() {
    return reinterpret_cast<const HomeLimitedShopNPCPosBin*>(
               &_HomeLimitedShopNPCPosBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(HomeLimitedShopNPCPosBin* other);
  friend void swap(HomeLimitedShopNPCPosBin& a, HomeLimitedShopNPCPosBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeLimitedShopNPCPosBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeLimitedShopNPCPosBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeLimitedShopNPCPosBin& from);
  void MergeFrom(const HomeLimitedShopNPCPosBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeLimitedShopNPCPosBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 module_id = 1;
  void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  ::google::protobuf::uint32 module_id() const;
  void set_module_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 4;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 block_id = 5;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 5;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // uint32 index = 6;
  void clear_index();
  static const int kIndexFieldNumber = 6;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeLimitedShopNPCPosBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 module_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 block_id_;
  ::google::protobuf::uint32 index_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeLimitedShopBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeLimitedShopBin) */ {
 public:
  HomeLimitedShopBin();
  virtual ~HomeLimitedShopBin();

  HomeLimitedShopBin(const HomeLimitedShopBin& from);

  inline HomeLimitedShopBin& operator=(const HomeLimitedShopBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeLimitedShopBin(HomeLimitedShopBin&& from) noexcept
    : HomeLimitedShopBin() {
    *this = ::std::move(from);
  }

  inline HomeLimitedShopBin& operator=(HomeLimitedShopBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeLimitedShopBin& default_instance();

  static inline const HomeLimitedShopBin* internal_default_instance() {
    return reinterpret_cast<const HomeLimitedShopBin*>(
               &_HomeLimitedShopBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(HomeLimitedShopBin* other);
  friend void swap(HomeLimitedShopBin& a, HomeLimitedShopBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeLimitedShopBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeLimitedShopBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeLimitedShopBin& from);
  void MergeFrom(const HomeLimitedShopBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeLimitedShopBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeLimitedShopPoolRecordBin pool_record_bin_list = 3;
  int pool_record_bin_list_size() const;
  void clear_pool_record_bin_list();
  static const int kPoolRecordBinListFieldNumber = 3;
  const ::proto::HomeLimitedShopPoolRecordBin& pool_record_bin_list(int index) const;
  ::proto::HomeLimitedShopPoolRecordBin* mutable_pool_record_bin_list(int index);
  ::proto::HomeLimitedShopPoolRecordBin* add_pool_record_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopPoolRecordBin >*
      mutable_pool_record_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopPoolRecordBin >&
      pool_record_bin_list() const;

  // repeated .proto.HomeLimitedShopGoodsInfoBin goods_info_bin_list = 4;
  int goods_info_bin_list_size() const;
  void clear_goods_info_bin_list();
  static const int kGoodsInfoBinListFieldNumber = 4;
  const ::proto::HomeLimitedShopGoodsInfoBin& goods_info_bin_list(int index) const;
  ::proto::HomeLimitedShopGoodsInfoBin* mutable_goods_info_bin_list(int index);
  ::proto::HomeLimitedShopGoodsInfoBin* add_goods_info_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopGoodsInfoBin >*
      mutable_goods_info_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopGoodsInfoBin >&
      goods_info_bin_list() const;

  // repeated .proto.HomeLimitedShopNPCPosBin npc_pos_bin_list = 5;
  int npc_pos_bin_list_size() const;
  void clear_npc_pos_bin_list();
  static const int kNpcPosBinListFieldNumber = 5;
  const ::proto::HomeLimitedShopNPCPosBin& npc_pos_bin_list(int index) const;
  ::proto::HomeLimitedShopNPCPosBin* mutable_npc_pos_bin_list(int index);
  ::proto::HomeLimitedShopNPCPosBin* add_npc_pos_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopNPCPosBin >*
      mutable_npc_pos_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopNPCPosBin >&
      npc_pos_bin_list() const;

  // uint32 last_refresh_time = 1;
  void clear_last_refresh_time();
  static const int kLastRefreshTimeFieldNumber = 1;
  ::google::protobuf::uint32 last_refresh_time() const;
  void set_last_refresh_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeLimitedShopBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopPoolRecordBin > pool_record_bin_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopGoodsInfoBin > goods_info_bin_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopNPCPosBin > npc_pos_bin_list_;
  ::google::protobuf::uint32 last_refresh_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomePlantSubFieldBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomePlantSubFieldBin) */ {
 public:
  HomePlantSubFieldBin();
  virtual ~HomePlantSubFieldBin();

  HomePlantSubFieldBin(const HomePlantSubFieldBin& from);

  inline HomePlantSubFieldBin& operator=(const HomePlantSubFieldBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomePlantSubFieldBin(HomePlantSubFieldBin&& from) noexcept
    : HomePlantSubFieldBin() {
    *this = ::std::move(from);
  }

  inline HomePlantSubFieldBin& operator=(HomePlantSubFieldBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomePlantSubFieldBin& default_instance();

  static inline const HomePlantSubFieldBin* internal_default_instance() {
    return reinterpret_cast<const HomePlantSubFieldBin*>(
               &_HomePlantSubFieldBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(HomePlantSubFieldBin* other);
  friend void swap(HomePlantSubFieldBin& a, HomePlantSubFieldBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomePlantSubFieldBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomePlantSubFieldBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomePlantSubFieldBin& from);
  void MergeFrom(const HomePlantSubFieldBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomePlantSubFieldBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 gather_index_list = 5;
  int gather_index_list_size() const;
  void clear_gather_index_list();
  static const int kGatherIndexListFieldNumber = 5;
  ::google::protobuf::uint32 gather_index_list(int index) const;
  void set_gather_index_list(int index, ::google::protobuf::uint32 value);
  void add_gather_index_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gather_index_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gather_index_list();

  // uint32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // uint32 seed_id = 2;
  void clear_seed_id();
  static const int kSeedIdFieldNumber = 2;
  ::google::protobuf::uint32 seed_id() const;
  void set_seed_id(::google::protobuf::uint32 value);

  // uint32 grow_time = 3;
  void clear_grow_time();
  static const int kGrowTimeFieldNumber = 3;
  ::google::protobuf::uint32 grow_time() const;
  void set_grow_time(::google::protobuf::uint32 value);

  // uint32 last_update_time = 4;
  void clear_last_update_time();
  static const int kLastUpdateTimeFieldNumber = 4;
  ::google::protobuf::uint32 last_update_time() const;
  void set_last_update_time(::google::protobuf::uint32 value);

  // uint32 home_gather_id = 6;
  void clear_home_gather_id();
  static const int kHomeGatherIdFieldNumber = 6;
  ::google::protobuf::uint32 home_gather_id() const;
  void set_home_gather_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomePlantSubFieldBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gather_index_list_;
  mutable int _gather_index_list_cached_byte_size_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 seed_id_;
  ::google::protobuf::uint32 grow_time_;
  ::google::protobuf::uint32 last_update_time_;
  ::google::protobuf::uint32 home_gather_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomePlantFieldBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomePlantFieldBin) */ {
 public:
  HomePlantFieldBin();
  virtual ~HomePlantFieldBin();

  HomePlantFieldBin(const HomePlantFieldBin& from);

  inline HomePlantFieldBin& operator=(const HomePlantFieldBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomePlantFieldBin(HomePlantFieldBin&& from) noexcept
    : HomePlantFieldBin() {
    *this = ::std::move(from);
  }

  inline HomePlantFieldBin& operator=(HomePlantFieldBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomePlantFieldBin& default_instance();

  static inline const HomePlantFieldBin* internal_default_instance() {
    return reinterpret_cast<const HomePlantFieldBin*>(
               &_HomePlantFieldBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(HomePlantFieldBin* other);
  friend void swap(HomePlantFieldBin& a, HomePlantFieldBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomePlantFieldBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomePlantFieldBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomePlantFieldBin& from);
  void MergeFrom(const HomePlantFieldBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomePlantFieldBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomePlantSubFieldBin sub_field_bin_list = 5;
  int sub_field_bin_list_size() const;
  void clear_sub_field_bin_list();
  static const int kSubFieldBinListFieldNumber = 5;
  const ::proto::HomePlantSubFieldBin& sub_field_bin_list(int index) const;
  ::proto::HomePlantSubFieldBin* mutable_sub_field_bin_list(int index);
  ::proto::HomePlantSubFieldBin* add_sub_field_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomePlantSubFieldBin >*
      mutable_sub_field_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomePlantSubFieldBin >&
      sub_field_bin_list() const;

  // uint32 module_id = 1;
  void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  ::google::protobuf::uint32 module_id() const;
  void set_module_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 guid = 3;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // uint32 furniture_id = 4;
  void clear_furniture_id();
  static const int kFurnitureIdFieldNumber = 4;
  ::google::protobuf::uint32 furniture_id() const;
  void set_furniture_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomePlantFieldBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomePlantSubFieldBin > sub_field_bin_list_;
  ::google::protobuf::uint32 module_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 guid_;
  ::google::protobuf::uint32 furniture_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomePlantBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomePlantBin) */ {
 public:
  HomePlantBin();
  virtual ~HomePlantBin();

  HomePlantBin(const HomePlantBin& from);

  inline HomePlantBin& operator=(const HomePlantBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomePlantBin(HomePlantBin&& from) noexcept
    : HomePlantBin() {
    *this = ::std::move(from);
  }

  inline HomePlantBin& operator=(HomePlantBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomePlantBin& default_instance();

  static inline const HomePlantBin* internal_default_instance() {
    return reinterpret_cast<const HomePlantBin*>(
               &_HomePlantBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(HomePlantBin* other);
  friend void swap(HomePlantBin& a, HomePlantBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomePlantBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomePlantBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomePlantBin& from);
  void MergeFrom(const HomePlantBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomePlantBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomePlantFieldBin field_bin_list = 1;
  int field_bin_list_size() const;
  void clear_field_bin_list();
  static const int kFieldBinListFieldNumber = 1;
  const ::proto::HomePlantFieldBin& field_bin_list(int index) const;
  ::proto::HomePlantFieldBin* mutable_field_bin_list(int index);
  ::proto::HomePlantFieldBin* add_field_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomePlantFieldBin >*
      mutable_field_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomePlantFieldBin >&
      field_bin_list() const;

  // @@protoc_insertion_point(class_scope:proto.HomePlantBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomePlantFieldBin > field_bin_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeFishpondFarmingBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeFishpondFarmingBin) */ {
 public:
  HomeFishpondFarmingBin();
  virtual ~HomeFishpondFarmingBin();

  HomeFishpondFarmingBin(const HomeFishpondFarmingBin& from);

  inline HomeFishpondFarmingBin& operator=(const HomeFishpondFarmingBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeFishpondFarmingBin(HomeFishpondFarmingBin&& from) noexcept
    : HomeFishpondFarmingBin() {
    *this = ::std::move(from);
  }

  inline HomeFishpondFarmingBin& operator=(HomeFishpondFarmingBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeFishpondFarmingBin& default_instance();

  static inline const HomeFishpondFarmingBin* internal_default_instance() {
    return reinterpret_cast<const HomeFishpondFarmingBin*>(
               &_HomeFishpondFarmingBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(HomeFishpondFarmingBin* other);
  friend void swap(HomeFishpondFarmingBin& a, HomeFishpondFarmingBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeFishpondFarmingBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeFishpondFarmingBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeFishpondFarmingBin& from);
  void MergeFrom(const HomeFishpondFarmingBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeFishpondFarmingBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 fish_id_list = 4;
  int fish_id_list_size() const;
  void clear_fish_id_list();
  static const int kFishIdListFieldNumber = 4;
  ::google::protobuf::uint32 fish_id_list(int index) const;
  void set_fish_id_list(int index, ::google::protobuf::uint32 value);
  void add_fish_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fish_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fish_id_list();

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 fishpond_guid = 2;
  void clear_fishpond_guid();
  static const int kFishpondGuidFieldNumber = 2;
  ::google::protobuf::uint32 fishpond_guid() const;
  void set_fishpond_guid(::google::protobuf::uint32 value);

  // uint32 furniture_id = 3;
  void clear_furniture_id();
  static const int kFurnitureIdFieldNumber = 3;
  ::google::protobuf::uint32 furniture_id() const;
  void set_furniture_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeFishpondFarmingBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fish_id_list_;
  mutable int _fish_id_list_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 fishpond_guid_;
  ::google::protobuf::uint32 furniture_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeScenePointFishFarmingBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeScenePointFishFarmingBin) */ {
 public:
  HomeScenePointFishFarmingBin();
  virtual ~HomeScenePointFishFarmingBin();

  HomeScenePointFishFarmingBin(const HomeScenePointFishFarmingBin& from);

  inline HomeScenePointFishFarmingBin& operator=(const HomeScenePointFishFarmingBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeScenePointFishFarmingBin(HomeScenePointFishFarmingBin&& from) noexcept
    : HomeScenePointFishFarmingBin() {
    *this = ::std::move(from);
  }

  inline HomeScenePointFishFarmingBin& operator=(HomeScenePointFishFarmingBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeScenePointFishFarmingBin& default_instance();

  static inline const HomeScenePointFishFarmingBin* internal_default_instance() {
    return reinterpret_cast<const HomeScenePointFishFarmingBin*>(
               &_HomeScenePointFishFarmingBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(HomeScenePointFishFarmingBin* other);
  friend void swap(HomeScenePointFishFarmingBin& a, HomeScenePointFishFarmingBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeScenePointFishFarmingBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeScenePointFishFarmingBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeScenePointFishFarmingBin& from);
  void MergeFrom(const HomeScenePointFishFarmingBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeScenePointFishFarmingBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 fish_id_list = 4;
  int fish_id_list_size() const;
  void clear_fish_id_list();
  static const int kFishIdListFieldNumber = 4;
  ::google::protobuf::uint32 fish_id_list(int index) const;
  void set_fish_id_list(int index, ::google::protobuf::uint32 value);
  void add_fish_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      fish_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_fish_id_list();

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 local_entity_id = 2;
  void clear_local_entity_id();
  static const int kLocalEntityIdFieldNumber = 2;
  ::google::protobuf::uint32 local_entity_id() const;
  void set_local_entity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeScenePointFishFarmingBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > fish_id_list_;
  mutable int _fish_id_list_cached_byte_size_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 local_entity_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeModuleFishFarmingBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeModuleFishFarmingBin) */ {
 public:
  HomeModuleFishFarmingBin();
  virtual ~HomeModuleFishFarmingBin();

  HomeModuleFishFarmingBin(const HomeModuleFishFarmingBin& from);

  inline HomeModuleFishFarmingBin& operator=(const HomeModuleFishFarmingBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeModuleFishFarmingBin(HomeModuleFishFarmingBin&& from) noexcept
    : HomeModuleFishFarmingBin() {
    *this = ::std::move(from);
  }

  inline HomeModuleFishFarmingBin& operator=(HomeModuleFishFarmingBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeModuleFishFarmingBin& default_instance();

  static inline const HomeModuleFishFarmingBin* internal_default_instance() {
    return reinterpret_cast<const HomeModuleFishFarmingBin*>(
               &_HomeModuleFishFarmingBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(HomeModuleFishFarmingBin* other);
  friend void swap(HomeModuleFishFarmingBin& a, HomeModuleFishFarmingBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeModuleFishFarmingBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeModuleFishFarmingBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeModuleFishFarmingBin& from);
  void MergeFrom(const HomeModuleFishFarmingBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeModuleFishFarmingBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeFishpondFarmingBin fishpond_farming_bin_list = 2;
  int fishpond_farming_bin_list_size() const;
  void clear_fishpond_farming_bin_list();
  static const int kFishpondFarmingBinListFieldNumber = 2;
  const ::proto::HomeFishpondFarmingBin& fishpond_farming_bin_list(int index) const;
  ::proto::HomeFishpondFarmingBin* mutable_fishpond_farming_bin_list(int index);
  ::proto::HomeFishpondFarmingBin* add_fishpond_farming_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFishpondFarmingBin >*
      mutable_fishpond_farming_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeFishpondFarmingBin >&
      fishpond_farming_bin_list() const;

  // repeated .proto.HomeScenePointFishFarmingBin scene_point_fish_farming_bin_list = 3;
  int scene_point_fish_farming_bin_list_size() const;
  void clear_scene_point_fish_farming_bin_list();
  static const int kScenePointFishFarmingBinListFieldNumber = 3;
  const ::proto::HomeScenePointFishFarmingBin& scene_point_fish_farming_bin_list(int index) const;
  ::proto::HomeScenePointFishFarmingBin* mutable_scene_point_fish_farming_bin_list(int index);
  ::proto::HomeScenePointFishFarmingBin* add_scene_point_fish_farming_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeScenePointFishFarmingBin >*
      mutable_scene_point_fish_farming_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeScenePointFishFarmingBin >&
      scene_point_fish_farming_bin_list() const;

  // uint32 module_id = 1;
  void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  ::google::protobuf::uint32 module_id() const;
  void set_module_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeModuleFishFarmingBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeFishpondFarmingBin > fishpond_farming_bin_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeScenePointFishFarmingBin > scene_point_fish_farming_bin_list_;
  ::google::protobuf::uint32 module_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeFishFarmingBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeFishFarmingBin) */ {
 public:
  HomeFishFarmingBin();
  virtual ~HomeFishFarmingBin();

  HomeFishFarmingBin(const HomeFishFarmingBin& from);

  inline HomeFishFarmingBin& operator=(const HomeFishFarmingBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeFishFarmingBin(HomeFishFarmingBin&& from) noexcept
    : HomeFishFarmingBin() {
    *this = ::std::move(from);
  }

  inline HomeFishFarmingBin& operator=(HomeFishFarmingBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeFishFarmingBin& default_instance();

  static inline const HomeFishFarmingBin* internal_default_instance() {
    return reinterpret_cast<const HomeFishFarmingBin*>(
               &_HomeFishFarmingBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(HomeFishFarmingBin* other);
  friend void swap(HomeFishFarmingBin& a, HomeFishFarmingBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeFishFarmingBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeFishFarmingBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeFishFarmingBin& from);
  void MergeFrom(const HomeFishFarmingBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeFishFarmingBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeModuleFishFarmingBin module_fish_farming_bin_list = 1;
  int module_fish_farming_bin_list_size() const;
  void clear_module_fish_farming_bin_list();
  static const int kModuleFishFarmingBinListFieldNumber = 1;
  const ::proto::HomeModuleFishFarmingBin& module_fish_farming_bin_list(int index) const;
  ::proto::HomeModuleFishFarmingBin* mutable_module_fish_farming_bin_list(int index);
  ::proto::HomeModuleFishFarmingBin* add_module_fish_farming_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleFishFarmingBin >*
      mutable_module_fish_farming_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleFishFarmingBin >&
      module_fish_farming_bin_list() const;

  // @@protoc_insertion_point(class_scope:proto.HomeFishFarmingBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleFishFarmingBin > module_fish_farming_bin_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeCustomFurnitureNodeInfoBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeCustomFurnitureNodeInfoBin) */ {
 public:
  HomeCustomFurnitureNodeInfoBin();
  virtual ~HomeCustomFurnitureNodeInfoBin();

  HomeCustomFurnitureNodeInfoBin(const HomeCustomFurnitureNodeInfoBin& from);

  inline HomeCustomFurnitureNodeInfoBin& operator=(const HomeCustomFurnitureNodeInfoBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeCustomFurnitureNodeInfoBin(HomeCustomFurnitureNodeInfoBin&& from) noexcept
    : HomeCustomFurnitureNodeInfoBin() {
    *this = ::std::move(from);
  }

  inline HomeCustomFurnitureNodeInfoBin& operator=(HomeCustomFurnitureNodeInfoBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeCustomFurnitureNodeInfoBin& default_instance();

  static inline const HomeCustomFurnitureNodeInfoBin* internal_default_instance() {
    return reinterpret_cast<const HomeCustomFurnitureNodeInfoBin*>(
               &_HomeCustomFurnitureNodeInfoBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(HomeCustomFurnitureNodeInfoBin* other);
  friend void swap(HomeCustomFurnitureNodeInfoBin& a, HomeCustomFurnitureNodeInfoBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeCustomFurnitureNodeInfoBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeCustomFurnitureNodeInfoBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeCustomFurnitureNodeInfoBin& from);
  void MergeFrom(const HomeCustomFurnitureNodeInfoBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeCustomFurnitureNodeInfoBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string slot_identifier = 3;
  void clear_slot_identifier();
  static const int kSlotIdentifierFieldNumber = 3;
  const ::std::string& slot_identifier() const;
  void set_slot_identifier(const ::std::string& value);
  #if LANG_CXX11
  void set_slot_identifier(::std::string&& value);
  #endif
  void set_slot_identifier(const char* value);
  void set_slot_identifier(const char* value, size_t size);
  ::std::string* mutable_slot_identifier();
  ::std::string* release_slot_identifier();
  void set_allocated_slot_identifier(::std::string* slot_identifier);

  // int32 parent_index = 1;
  void clear_parent_index();
  static const int kParentIndexFieldNumber = 1;
  ::google::protobuf::int32 parent_index() const;
  void set_parent_index(::google::protobuf::int32 value);

  // uint32 furniture_id = 2;
  void clear_furniture_id();
  static const int kFurnitureIdFieldNumber = 2;
  ::google::protobuf::uint32 furniture_id() const;
  void set_furniture_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeCustomFurnitureNodeInfoBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr slot_identifier_;
  ::google::protobuf::int32 parent_index_;
  ::google::protobuf::uint32 furniture_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeOneCustomFurnitureBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeOneCustomFurnitureBin) */ {
 public:
  HomeOneCustomFurnitureBin();
  virtual ~HomeOneCustomFurnitureBin();

  HomeOneCustomFurnitureBin(const HomeOneCustomFurnitureBin& from);

  inline HomeOneCustomFurnitureBin& operator=(const HomeOneCustomFurnitureBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeOneCustomFurnitureBin(HomeOneCustomFurnitureBin&& from) noexcept
    : HomeOneCustomFurnitureBin() {
    *this = ::std::move(from);
  }

  inline HomeOneCustomFurnitureBin& operator=(HomeOneCustomFurnitureBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeOneCustomFurnitureBin& default_instance();

  static inline const HomeOneCustomFurnitureBin* internal_default_instance() {
    return reinterpret_cast<const HomeOneCustomFurnitureBin*>(
               &_HomeOneCustomFurnitureBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(HomeOneCustomFurnitureBin* other);
  friend void swap(HomeOneCustomFurnitureBin& a, HomeOneCustomFurnitureBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeOneCustomFurnitureBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeOneCustomFurnitureBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeOneCustomFurnitureBin& from);
  void MergeFrom(const HomeOneCustomFurnitureBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeOneCustomFurnitureBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeCustomFurnitureNodeInfoBin sub_furniture_list = 4;
  int sub_furniture_list_size() const;
  void clear_sub_furniture_list();
  static const int kSubFurnitureListFieldNumber = 4;
  const ::proto::HomeCustomFurnitureNodeInfoBin& sub_furniture_list(int index) const;
  ::proto::HomeCustomFurnitureNodeInfoBin* mutable_sub_furniture_list(int index);
  ::proto::HomeCustomFurnitureNodeInfoBin* add_sub_furniture_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeCustomFurnitureNodeInfoBin >*
      mutable_sub_furniture_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeCustomFurnitureNodeInfoBin >&
      sub_furniture_list() const;

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // uint32 furniture_id = 3;
  void clear_furniture_id();
  static const int kFurnitureIdFieldNumber = 3;
  ::google::protobuf::uint32 furniture_id() const;
  void set_furniture_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeOneCustomFurnitureBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeCustomFurnitureNodeInfoBin > sub_furniture_list_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 guid_;
  ::google::protobuf::uint32 furniture_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeModuleCustomFurnitureBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeModuleCustomFurnitureBin) */ {
 public:
  HomeModuleCustomFurnitureBin();
  virtual ~HomeModuleCustomFurnitureBin();

  HomeModuleCustomFurnitureBin(const HomeModuleCustomFurnitureBin& from);

  inline HomeModuleCustomFurnitureBin& operator=(const HomeModuleCustomFurnitureBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeModuleCustomFurnitureBin(HomeModuleCustomFurnitureBin&& from) noexcept
    : HomeModuleCustomFurnitureBin() {
    *this = ::std::move(from);
  }

  inline HomeModuleCustomFurnitureBin& operator=(HomeModuleCustomFurnitureBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeModuleCustomFurnitureBin& default_instance();

  static inline const HomeModuleCustomFurnitureBin* internal_default_instance() {
    return reinterpret_cast<const HomeModuleCustomFurnitureBin*>(
               &_HomeModuleCustomFurnitureBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(HomeModuleCustomFurnitureBin* other);
  friend void swap(HomeModuleCustomFurnitureBin& a, HomeModuleCustomFurnitureBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeModuleCustomFurnitureBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeModuleCustomFurnitureBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeModuleCustomFurnitureBin& from);
  void MergeFrom(const HomeModuleCustomFurnitureBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeModuleCustomFurnitureBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeOneCustomFurnitureBin custom_furniture_bin_list = 2;
  int custom_furniture_bin_list_size() const;
  void clear_custom_furniture_bin_list();
  static const int kCustomFurnitureBinListFieldNumber = 2;
  const ::proto::HomeOneCustomFurnitureBin& custom_furniture_bin_list(int index) const;
  ::proto::HomeOneCustomFurnitureBin* mutable_custom_furniture_bin_list(int index);
  ::proto::HomeOneCustomFurnitureBin* add_custom_furniture_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeOneCustomFurnitureBin >*
      mutable_custom_furniture_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeOneCustomFurnitureBin >&
      custom_furniture_bin_list() const;

  // uint32 module_id = 1;
  void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  ::google::protobuf::uint32 module_id() const;
  void set_module_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeModuleCustomFurnitureBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeOneCustomFurnitureBin > custom_furniture_bin_list_;
  ::google::protobuf::uint32 module_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeCustomFurnitureBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeCustomFurnitureBin) */ {
 public:
  HomeCustomFurnitureBin();
  virtual ~HomeCustomFurnitureBin();

  HomeCustomFurnitureBin(const HomeCustomFurnitureBin& from);

  inline HomeCustomFurnitureBin& operator=(const HomeCustomFurnitureBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeCustomFurnitureBin(HomeCustomFurnitureBin&& from) noexcept
    : HomeCustomFurnitureBin() {
    *this = ::std::move(from);
  }

  inline HomeCustomFurnitureBin& operator=(HomeCustomFurnitureBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeCustomFurnitureBin& default_instance();

  static inline const HomeCustomFurnitureBin* internal_default_instance() {
    return reinterpret_cast<const HomeCustomFurnitureBin*>(
               &_HomeCustomFurnitureBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(HomeCustomFurnitureBin* other);
  friend void swap(HomeCustomFurnitureBin& a, HomeCustomFurnitureBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeCustomFurnitureBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeCustomFurnitureBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeCustomFurnitureBin& from);
  void MergeFrom(const HomeCustomFurnitureBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeCustomFurnitureBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeModuleCustomFurnitureBin module_custom_furniture_bin_list = 1;
  int module_custom_furniture_bin_list_size() const;
  void clear_module_custom_furniture_bin_list();
  static const int kModuleCustomFurnitureBinListFieldNumber = 1;
  const ::proto::HomeModuleCustomFurnitureBin& module_custom_furniture_bin_list(int index) const;
  ::proto::HomeModuleCustomFurnitureBin* mutable_module_custom_furniture_bin_list(int index);
  ::proto::HomeModuleCustomFurnitureBin* add_module_custom_furniture_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleCustomFurnitureBin >*
      mutable_module_custom_furniture_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleCustomFurnitureBin >&
      module_custom_furniture_bin_list() const;

  // @@protoc_insertion_point(class_scope:proto.HomeCustomFurnitureBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleCustomFurnitureBin > module_custom_furniture_bin_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeOnePictureFrameBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeOnePictureFrameBin) */ {
 public:
  HomeOnePictureFrameBin();
  virtual ~HomeOnePictureFrameBin();

  HomeOnePictureFrameBin(const HomeOnePictureFrameBin& from);

  inline HomeOnePictureFrameBin& operator=(const HomeOnePictureFrameBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeOnePictureFrameBin(HomeOnePictureFrameBin&& from) noexcept
    : HomeOnePictureFrameBin() {
    *this = ::std::move(from);
  }

  inline HomeOnePictureFrameBin& operator=(HomeOnePictureFrameBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeOnePictureFrameBin& default_instance();

  static inline const HomeOnePictureFrameBin* internal_default_instance() {
    return reinterpret_cast<const HomeOnePictureFrameBin*>(
               &_HomeOnePictureFrameBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(HomeOnePictureFrameBin* other);
  friend void swap(HomeOnePictureFrameBin& a, HomeOnePictureFrameBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeOnePictureFrameBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeOnePictureFrameBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeOnePictureFrameBin& from);
  void MergeFrom(const HomeOnePictureFrameBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeOnePictureFrameBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 guid = 2;
  void clear_guid();
  static const int kGuidFieldNumber = 2;
  ::google::protobuf::uint32 guid() const;
  void set_guid(::google::protobuf::uint32 value);

  // uint32 furniture_id = 3;
  void clear_furniture_id();
  static const int kFurnitureIdFieldNumber = 3;
  ::google::protobuf::uint32 furniture_id() const;
  void set_furniture_id(::google::protobuf::uint32 value);

  // uint32 picture_id = 4;
  void clear_picture_id();
  static const int kPictureIdFieldNumber = 4;
  ::google::protobuf::uint32 picture_id() const;
  void set_picture_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeOnePictureFrameBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 guid_;
  ::google::protobuf::uint32 furniture_id_;
  ::google::protobuf::uint32 picture_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeModulePictureFrameBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeModulePictureFrameBin) */ {
 public:
  HomeModulePictureFrameBin();
  virtual ~HomeModulePictureFrameBin();

  HomeModulePictureFrameBin(const HomeModulePictureFrameBin& from);

  inline HomeModulePictureFrameBin& operator=(const HomeModulePictureFrameBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeModulePictureFrameBin(HomeModulePictureFrameBin&& from) noexcept
    : HomeModulePictureFrameBin() {
    *this = ::std::move(from);
  }

  inline HomeModulePictureFrameBin& operator=(HomeModulePictureFrameBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeModulePictureFrameBin& default_instance();

  static inline const HomeModulePictureFrameBin* internal_default_instance() {
    return reinterpret_cast<const HomeModulePictureFrameBin*>(
               &_HomeModulePictureFrameBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(HomeModulePictureFrameBin* other);
  friend void swap(HomeModulePictureFrameBin& a, HomeModulePictureFrameBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeModulePictureFrameBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeModulePictureFrameBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeModulePictureFrameBin& from);
  void MergeFrom(const HomeModulePictureFrameBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeModulePictureFrameBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeOnePictureFrameBin picture_frame_bin_list = 2;
  int picture_frame_bin_list_size() const;
  void clear_picture_frame_bin_list();
  static const int kPictureFrameBinListFieldNumber = 2;
  const ::proto::HomeOnePictureFrameBin& picture_frame_bin_list(int index) const;
  ::proto::HomeOnePictureFrameBin* mutable_picture_frame_bin_list(int index);
  ::proto::HomeOnePictureFrameBin* add_picture_frame_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeOnePictureFrameBin >*
      mutable_picture_frame_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeOnePictureFrameBin >&
      picture_frame_bin_list() const;

  // uint32 module_id = 1;
  void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  ::google::protobuf::uint32 module_id() const;
  void set_module_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeModulePictureFrameBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeOnePictureFrameBin > picture_frame_bin_list_;
  ::google::protobuf::uint32 module_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomePictureFrameBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomePictureFrameBin) */ {
 public:
  HomePictureFrameBin();
  virtual ~HomePictureFrameBin();

  HomePictureFrameBin(const HomePictureFrameBin& from);

  inline HomePictureFrameBin& operator=(const HomePictureFrameBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomePictureFrameBin(HomePictureFrameBin&& from) noexcept
    : HomePictureFrameBin() {
    *this = ::std::move(from);
  }

  inline HomePictureFrameBin& operator=(HomePictureFrameBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomePictureFrameBin& default_instance();

  static inline const HomePictureFrameBin* internal_default_instance() {
    return reinterpret_cast<const HomePictureFrameBin*>(
               &_HomePictureFrameBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(HomePictureFrameBin* other);
  friend void swap(HomePictureFrameBin& a, HomePictureFrameBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomePictureFrameBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomePictureFrameBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomePictureFrameBin& from);
  void MergeFrom(const HomePictureFrameBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomePictureFrameBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeModulePictureFrameBin module_picture_frame_bin_list = 1;
  int module_picture_frame_bin_list_size() const;
  void clear_module_picture_frame_bin_list();
  static const int kModulePictureFrameBinListFieldNumber = 1;
  const ::proto::HomeModulePictureFrameBin& module_picture_frame_bin_list(int index) const;
  ::proto::HomeModulePictureFrameBin* mutable_module_picture_frame_bin_list(int index);
  ::proto::HomeModulePictureFrameBin* add_module_picture_frame_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeModulePictureFrameBin >*
      mutable_module_picture_frame_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeModulePictureFrameBin >&
      module_picture_frame_bin_list() const;

  // @@protoc_insertion_point(class_scope:proto.HomePictureFrameBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeModulePictureFrameBin > module_picture_frame_bin_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeGroupPlayerInfoBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeGroupPlayerInfoBin) */ {
 public:
  HomeGroupPlayerInfoBin();
  virtual ~HomeGroupPlayerInfoBin();

  HomeGroupPlayerInfoBin(const HomeGroupPlayerInfoBin& from);

  inline HomeGroupPlayerInfoBin& operator=(const HomeGroupPlayerInfoBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeGroupPlayerInfoBin(HomeGroupPlayerInfoBin&& from) noexcept
    : HomeGroupPlayerInfoBin() {
    *this = ::std::move(from);
  }

  inline HomeGroupPlayerInfoBin& operator=(HomeGroupPlayerInfoBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeGroupPlayerInfoBin& default_instance();

  static inline const HomeGroupPlayerInfoBin* internal_default_instance() {
    return reinterpret_cast<const HomeGroupPlayerInfoBin*>(
               &_HomeGroupPlayerInfoBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(HomeGroupPlayerInfoBin* other);
  friend void swap(HomeGroupPlayerInfoBin& a, HomeGroupPlayerInfoBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeGroupPlayerInfoBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeGroupPlayerInfoBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeGroupPlayerInfoBin& from);
  void MergeFrom(const HomeGroupPlayerInfoBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeGroupPlayerInfoBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // string online_id = 5;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 5;
  const ::std::string& online_id() const;
  void set_online_id(const ::std::string& value);
  #if LANG_CXX11
  void set_online_id(::std::string&& value);
  #endif
  void set_online_id(const char* value);
  void set_online_id(const char* value, size_t size);
  ::std::string* mutable_online_id();
  ::std::string* release_online_id();
  void set_allocated_online_id(::std::string* online_id);

  // string psn_id = 6;
  void clear_psn_id();
  static const int kPsnIdFieldNumber = 6;
  const ::std::string& psn_id() const;
  void set_psn_id(const ::std::string& value);
  #if LANG_CXX11
  void set_psn_id(::std::string&& value);
  #endif
  void set_psn_id(const char* value);
  void set_psn_id(const char* value, size_t size);
  ::std::string* mutable_psn_id();
  ::std::string* release_psn_id();
  void set_allocated_psn_id(::std::string* psn_id);

  // .proto.ProfilePictureBin profile_picture = 4;
  bool has_profile_picture() const;
  void clear_profile_picture();
  static const int kProfilePictureFieldNumber = 4;
  const ::proto::ProfilePictureBin& profile_picture() const;
  ::proto::ProfilePictureBin* mutable_profile_picture();
  ::proto::ProfilePictureBin* release_profile_picture();
  void set_allocated_profile_picture(::proto::ProfilePictureBin* profile_picture);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 player_level = 3;
  void clear_player_level();
  static const int kPlayerLevelFieldNumber = 3;
  ::google::protobuf::uint32 player_level() const;
  void set_player_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeGroupPlayerInfoBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::google::protobuf::internal::ArenaStringPtr psn_id_;
  ::proto::ProfilePictureBin* profile_picture_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 player_level_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeRacingGalleryRecordBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeRacingGalleryRecordBin) */ {
 public:
  HomeRacingGalleryRecordBin();
  virtual ~HomeRacingGalleryRecordBin();

  HomeRacingGalleryRecordBin(const HomeRacingGalleryRecordBin& from);

  inline HomeRacingGalleryRecordBin& operator=(const HomeRacingGalleryRecordBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeRacingGalleryRecordBin(HomeRacingGalleryRecordBin&& from) noexcept
    : HomeRacingGalleryRecordBin() {
    *this = ::std::move(from);
  }

  inline HomeRacingGalleryRecordBin& operator=(HomeRacingGalleryRecordBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeRacingGalleryRecordBin& default_instance();

  static inline const HomeRacingGalleryRecordBin* internal_default_instance() {
    return reinterpret_cast<const HomeRacingGalleryRecordBin*>(
               &_HomeRacingGalleryRecordBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(HomeRacingGalleryRecordBin* other);
  friend void swap(HomeRacingGalleryRecordBin& a, HomeRacingGalleryRecordBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeRacingGalleryRecordBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeRacingGalleryRecordBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeRacingGalleryRecordBin& from);
  void MergeFrom(const HomeRacingGalleryRecordBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeRacingGalleryRecordBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.HomeGroupPlayerInfoBin player_info = 2;
  bool has_player_info() const;
  void clear_player_info();
  static const int kPlayerInfoFieldNumber = 2;
  const ::proto::HomeGroupPlayerInfoBin& player_info() const;
  ::proto::HomeGroupPlayerInfoBin* mutable_player_info();
  ::proto::HomeGroupPlayerInfoBin* release_player_info();
  void set_allocated_player_info(::proto::HomeGroupPlayerInfoBin* player_info);

  // uint32 use_time = 1;
  void clear_use_time();
  static const int kUseTimeFieldNumber = 1;
  ::google::protobuf::uint32 use_time() const;
  void set_use_time(::google::protobuf::uint32 value);

  // uint32 timestamp = 3;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeRacingGalleryRecordBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::HomeGroupPlayerInfoBin* player_info_;
  ::google::protobuf::uint32 use_time_;
  ::google::protobuf::uint32 timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeRacingRecordBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeRacingRecordBin) */ {
 public:
  HomeRacingRecordBin();
  virtual ~HomeRacingRecordBin();

  HomeRacingRecordBin(const HomeRacingRecordBin& from);

  inline HomeRacingRecordBin& operator=(const HomeRacingRecordBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeRacingRecordBin(HomeRacingRecordBin&& from) noexcept
    : HomeRacingRecordBin() {
    *this = ::std::move(from);
  }

  inline HomeRacingRecordBin& operator=(HomeRacingRecordBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeRacingRecordBin& default_instance();

  static inline const HomeRacingRecordBin* internal_default_instance() {
    return reinterpret_cast<const HomeRacingRecordBin*>(
               &_HomeRacingRecordBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(HomeRacingRecordBin* other);
  friend void swap(HomeRacingRecordBin& a, HomeRacingRecordBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeRacingRecordBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeRacingRecordBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeRacingRecordBin& from);
  void MergeFrom(const HomeRacingRecordBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeRacingRecordBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeRacingGalleryRecordBin record_list = 1;
  int record_list_size() const;
  void clear_record_list();
  static const int kRecordListFieldNumber = 1;
  const ::proto::HomeRacingGalleryRecordBin& record_list(int index) const;
  ::proto::HomeRacingGalleryRecordBin* mutable_record_list(int index);
  ::proto::HomeRacingGalleryRecordBin* add_record_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeRacingGalleryRecordBin >*
      mutable_record_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeRacingGalleryRecordBin >&
      record_list() const;

  // @@protoc_insertion_point(class_scope:proto.HomeRacingRecordBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeRacingGalleryRecordBin > record_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeBalloonGalleryRecordBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeBalloonGalleryRecordBin) */ {
 public:
  HomeBalloonGalleryRecordBin();
  virtual ~HomeBalloonGalleryRecordBin();

  HomeBalloonGalleryRecordBin(const HomeBalloonGalleryRecordBin& from);

  inline HomeBalloonGalleryRecordBin& operator=(const HomeBalloonGalleryRecordBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeBalloonGalleryRecordBin(HomeBalloonGalleryRecordBin&& from) noexcept
    : HomeBalloonGalleryRecordBin() {
    *this = ::std::move(from);
  }

  inline HomeBalloonGalleryRecordBin& operator=(HomeBalloonGalleryRecordBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeBalloonGalleryRecordBin& default_instance();

  static inline const HomeBalloonGalleryRecordBin* internal_default_instance() {
    return reinterpret_cast<const HomeBalloonGalleryRecordBin*>(
               &_HomeBalloonGalleryRecordBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(HomeBalloonGalleryRecordBin* other);
  friend void swap(HomeBalloonGalleryRecordBin& a, HomeBalloonGalleryRecordBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeBalloonGalleryRecordBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeBalloonGalleryRecordBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeBalloonGalleryRecordBin& from);
  void MergeFrom(const HomeBalloonGalleryRecordBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeBalloonGalleryRecordBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.HomeGroupPlayerInfoBin player_info = 3;
  bool has_player_info() const;
  void clear_player_info();
  static const int kPlayerInfoFieldNumber = 3;
  const ::proto::HomeGroupPlayerInfoBin& player_info() const;
  ::proto::HomeGroupPlayerInfoBin* mutable_player_info();
  ::proto::HomeGroupPlayerInfoBin* release_player_info();
  void set_allocated_player_info(::proto::HomeGroupPlayerInfoBin* player_info);

  // uint32 score = 1;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // uint32 hit_count = 2;
  void clear_hit_count();
  static const int kHitCountFieldNumber = 2;
  ::google::protobuf::uint32 hit_count() const;
  void set_hit_count(::google::protobuf::uint32 value);

  // uint32 timestamp = 4;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeBalloonGalleryRecordBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::HomeGroupPlayerInfoBin* player_info_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 hit_count_;
  ::google::protobuf::uint32 timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeBalloonRecordBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeBalloonRecordBin) */ {
 public:
  HomeBalloonRecordBin();
  virtual ~HomeBalloonRecordBin();

  HomeBalloonRecordBin(const HomeBalloonRecordBin& from);

  inline HomeBalloonRecordBin& operator=(const HomeBalloonRecordBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeBalloonRecordBin(HomeBalloonRecordBin&& from) noexcept
    : HomeBalloonRecordBin() {
    *this = ::std::move(from);
  }

  inline HomeBalloonRecordBin& operator=(HomeBalloonRecordBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeBalloonRecordBin& default_instance();

  static inline const HomeBalloonRecordBin* internal_default_instance() {
    return reinterpret_cast<const HomeBalloonRecordBin*>(
               &_HomeBalloonRecordBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(HomeBalloonRecordBin* other);
  friend void swap(HomeBalloonRecordBin& a, HomeBalloonRecordBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeBalloonRecordBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeBalloonRecordBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeBalloonRecordBin& from);
  void MergeFrom(const HomeBalloonRecordBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeBalloonRecordBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeBalloonGalleryRecordBin record_list = 1;
  int record_list_size() const;
  void clear_record_list();
  static const int kRecordListFieldNumber = 1;
  const ::proto::HomeBalloonGalleryRecordBin& record_list(int index) const;
  ::proto::HomeBalloonGalleryRecordBin* mutable_record_list(int index);
  ::proto::HomeBalloonGalleryRecordBin* add_record_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeBalloonGalleryRecordBin >*
      mutable_record_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeBalloonGalleryRecordBin >&
      record_list() const;

  // @@protoc_insertion_point(class_scope:proto.HomeBalloonRecordBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeBalloonGalleryRecordBin > record_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeStakePlayRecordBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeStakePlayRecordBin) */ {
 public:
  HomeStakePlayRecordBin();
  virtual ~HomeStakePlayRecordBin();

  HomeStakePlayRecordBin(const HomeStakePlayRecordBin& from);

  inline HomeStakePlayRecordBin& operator=(const HomeStakePlayRecordBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeStakePlayRecordBin(HomeStakePlayRecordBin&& from) noexcept
    : HomeStakePlayRecordBin() {
    *this = ::std::move(from);
  }

  inline HomeStakePlayRecordBin& operator=(HomeStakePlayRecordBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeStakePlayRecordBin& default_instance();

  static inline const HomeStakePlayRecordBin* internal_default_instance() {
    return reinterpret_cast<const HomeStakePlayRecordBin*>(
               &_HomeStakePlayRecordBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(HomeStakePlayRecordBin* other);
  friend void swap(HomeStakePlayRecordBin& a, HomeStakePlayRecordBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeStakePlayRecordBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeStakePlayRecordBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeStakePlayRecordBin& from);
  void MergeFrom(const HomeStakePlayRecordBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeStakePlayRecordBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeGroupPlayerInfoBin engaged_player_info_list = 2;
  int engaged_player_info_list_size() const;
  void clear_engaged_player_info_list();
  static const int kEngagedPlayerInfoListFieldNumber = 2;
  const ::proto::HomeGroupPlayerInfoBin& engaged_player_info_list(int index) const;
  ::proto::HomeGroupPlayerInfoBin* mutable_engaged_player_info_list(int index);
  ::proto::HomeGroupPlayerInfoBin* add_engaged_player_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeGroupPlayerInfoBin >*
      mutable_engaged_player_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeGroupPlayerInfoBin >&
      engaged_player_info_list() const;

  // uint32 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeStakePlayRecordBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeGroupPlayerInfoBin > engaged_player_info_list_;
  ::google::protobuf::uint32 timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeStakeRecordBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeStakeRecordBin) */ {
 public:
  HomeStakeRecordBin();
  virtual ~HomeStakeRecordBin();

  HomeStakeRecordBin(const HomeStakeRecordBin& from);

  inline HomeStakeRecordBin& operator=(const HomeStakeRecordBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeStakeRecordBin(HomeStakeRecordBin&& from) noexcept
    : HomeStakeRecordBin() {
    *this = ::std::move(from);
  }

  inline HomeStakeRecordBin& operator=(HomeStakeRecordBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeStakeRecordBin& default_instance();

  static inline const HomeStakeRecordBin* internal_default_instance() {
    return reinterpret_cast<const HomeStakeRecordBin*>(
               &_HomeStakeRecordBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(HomeStakeRecordBin* other);
  friend void swap(HomeStakeRecordBin& a, HomeStakeRecordBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeStakeRecordBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeStakeRecordBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeStakeRecordBin& from);
  void MergeFrom(const HomeStakeRecordBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeStakeRecordBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeStakePlayRecordBin record_list = 1;
  int record_list_size() const;
  void clear_record_list();
  static const int kRecordListFieldNumber = 1;
  const ::proto::HomeStakePlayRecordBin& record_list(int index) const;
  ::proto::HomeStakePlayRecordBin* mutable_record_list(int index);
  ::proto::HomeStakePlayRecordBin* add_record_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeStakePlayRecordBin >*
      mutable_record_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeStakePlayRecordBin >&
      record_list() const;

  // @@protoc_insertion_point(class_scope:proto.HomeStakeRecordBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeStakePlayRecordBin > record_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeSeekFurniturePlayerScoreBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeSeekFurniturePlayerScoreBin) */ {
 public:
  HomeSeekFurniturePlayerScoreBin();
  virtual ~HomeSeekFurniturePlayerScoreBin();

  HomeSeekFurniturePlayerScoreBin(const HomeSeekFurniturePlayerScoreBin& from);

  inline HomeSeekFurniturePlayerScoreBin& operator=(const HomeSeekFurniturePlayerScoreBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeSeekFurniturePlayerScoreBin(HomeSeekFurniturePlayerScoreBin&& from) noexcept
    : HomeSeekFurniturePlayerScoreBin() {
    *this = ::std::move(from);
  }

  inline HomeSeekFurniturePlayerScoreBin& operator=(HomeSeekFurniturePlayerScoreBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeSeekFurniturePlayerScoreBin& default_instance();

  static inline const HomeSeekFurniturePlayerScoreBin* internal_default_instance() {
    return reinterpret_cast<const HomeSeekFurniturePlayerScoreBin*>(
               &_HomeSeekFurniturePlayerScoreBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(HomeSeekFurniturePlayerScoreBin* other);
  friend void swap(HomeSeekFurniturePlayerScoreBin& a, HomeSeekFurniturePlayerScoreBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeSeekFurniturePlayerScoreBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeSeekFurniturePlayerScoreBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeSeekFurniturePlayerScoreBin& from);
  void MergeFrom(const HomeSeekFurniturePlayerScoreBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeSeekFurniturePlayerScoreBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.HomeGroupPlayerInfoBin player_info = 1;
  bool has_player_info() const;
  void clear_player_info();
  static const int kPlayerInfoFieldNumber = 1;
  const ::proto::HomeGroupPlayerInfoBin& player_info() const;
  ::proto::HomeGroupPlayerInfoBin* mutable_player_info();
  ::proto::HomeGroupPlayerInfoBin* release_player_info();
  void set_allocated_player_info(::proto::HomeGroupPlayerInfoBin* player_info);

  // uint32 score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeSeekFurniturePlayerScoreBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::HomeGroupPlayerInfoBin* player_info_;
  ::google::protobuf::uint32 score_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeSeekFurnitureOneRecordBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeSeekFurnitureOneRecordBin) */ {
 public:
  HomeSeekFurnitureOneRecordBin();
  virtual ~HomeSeekFurnitureOneRecordBin();

  HomeSeekFurnitureOneRecordBin(const HomeSeekFurnitureOneRecordBin& from);

  inline HomeSeekFurnitureOneRecordBin& operator=(const HomeSeekFurnitureOneRecordBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeSeekFurnitureOneRecordBin(HomeSeekFurnitureOneRecordBin&& from) noexcept
    : HomeSeekFurnitureOneRecordBin() {
    *this = ::std::move(from);
  }

  inline HomeSeekFurnitureOneRecordBin& operator=(HomeSeekFurnitureOneRecordBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeSeekFurnitureOneRecordBin& default_instance();

  static inline const HomeSeekFurnitureOneRecordBin* internal_default_instance() {
    return reinterpret_cast<const HomeSeekFurnitureOneRecordBin*>(
               &_HomeSeekFurnitureOneRecordBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(HomeSeekFurnitureOneRecordBin* other);
  friend void swap(HomeSeekFurnitureOneRecordBin& a, HomeSeekFurnitureOneRecordBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeSeekFurnitureOneRecordBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeSeekFurnitureOneRecordBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeSeekFurnitureOneRecordBin& from);
  void MergeFrom(const HomeSeekFurnitureOneRecordBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeSeekFurnitureOneRecordBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeSeekFurniturePlayerScoreBin engaged_player_score_list = 2;
  int engaged_player_score_list_size() const;
  void clear_engaged_player_score_list();
  static const int kEngagedPlayerScoreListFieldNumber = 2;
  const ::proto::HomeSeekFurniturePlayerScoreBin& engaged_player_score_list(int index) const;
  ::proto::HomeSeekFurniturePlayerScoreBin* mutable_engaged_player_score_list(int index);
  ::proto::HomeSeekFurniturePlayerScoreBin* add_engaged_player_score_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurniturePlayerScoreBin >*
      mutable_engaged_player_score_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurniturePlayerScoreBin >&
      engaged_player_score_list() const;

  // uint32 timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeSeekFurnitureOneRecordBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurniturePlayerScoreBin > engaged_player_score_list_;
  ::google::protobuf::uint32 timestamp_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeSeekFurnitureAllRecordBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeSeekFurnitureAllRecordBin) */ {
 public:
  HomeSeekFurnitureAllRecordBin();
  virtual ~HomeSeekFurnitureAllRecordBin();

  HomeSeekFurnitureAllRecordBin(const HomeSeekFurnitureAllRecordBin& from);

  inline HomeSeekFurnitureAllRecordBin& operator=(const HomeSeekFurnitureAllRecordBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeSeekFurnitureAllRecordBin(HomeSeekFurnitureAllRecordBin&& from) noexcept
    : HomeSeekFurnitureAllRecordBin() {
    *this = ::std::move(from);
  }

  inline HomeSeekFurnitureAllRecordBin& operator=(HomeSeekFurnitureAllRecordBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeSeekFurnitureAllRecordBin& default_instance();

  static inline const HomeSeekFurnitureAllRecordBin* internal_default_instance() {
    return reinterpret_cast<const HomeSeekFurnitureAllRecordBin*>(
               &_HomeSeekFurnitureAllRecordBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(HomeSeekFurnitureAllRecordBin* other);
  friend void swap(HomeSeekFurnitureAllRecordBin& a, HomeSeekFurnitureAllRecordBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeSeekFurnitureAllRecordBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeSeekFurnitureAllRecordBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeSeekFurnitureAllRecordBin& from);
  void MergeFrom(const HomeSeekFurnitureAllRecordBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeSeekFurnitureAllRecordBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.HomeSeekFurnitureOneRecordBin record_list = 1;
  int record_list_size() const;
  void clear_record_list();
  static const int kRecordListFieldNumber = 1;
  const ::proto::HomeSeekFurnitureOneRecordBin& record_list(int index) const;
  ::proto::HomeSeekFurnitureOneRecordBin* mutable_record_list(int index);
  ::proto::HomeSeekFurnitureOneRecordBin* add_record_list();
  ::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurnitureOneRecordBin >*
      mutable_record_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurnitureOneRecordBin >&
      record_list() const;

  // @@protoc_insertion_point(class_scope:proto.HomeSeekFurnitureAllRecordBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurnitureOneRecordBin > record_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeGroupRecordBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeGroupRecordBin) */ {
 public:
  HomeGroupRecordBin();
  virtual ~HomeGroupRecordBin();

  HomeGroupRecordBin(const HomeGroupRecordBin& from);

  inline HomeGroupRecordBin& operator=(const HomeGroupRecordBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeGroupRecordBin(HomeGroupRecordBin&& from) noexcept
    : HomeGroupRecordBin() {
    *this = ::std::move(from);
  }

  inline HomeGroupRecordBin& operator=(HomeGroupRecordBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeGroupRecordBin& default_instance();

  enum DetailCase {
    kRacingGalleryInfoBin = 11,
    kBalloonGalleryInfoBin = 12,
    kStakePlayInfoBin = 13,
    kSeekFurniturePlayInfoBin = 14,
    DETAIL_NOT_SET = 0,
  };

  static inline const HomeGroupRecordBin* internal_default_instance() {
    return reinterpret_cast<const HomeGroupRecordBin*>(
               &_HomeGroupRecordBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(HomeGroupRecordBin* other);
  friend void swap(HomeGroupRecordBin& a, HomeGroupRecordBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeGroupRecordBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeGroupRecordBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeGroupRecordBin& from);
  void MergeFrom(const HomeGroupRecordBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeGroupRecordBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.HomeRacingRecordBin racing_gallery_info_bin = 11;
  bool has_racing_gallery_info_bin() const;
  void clear_racing_gallery_info_bin();
  static const int kRacingGalleryInfoBinFieldNumber = 11;
  const ::proto::HomeRacingRecordBin& racing_gallery_info_bin() const;
  ::proto::HomeRacingRecordBin* mutable_racing_gallery_info_bin();
  ::proto::HomeRacingRecordBin* release_racing_gallery_info_bin();
  void set_allocated_racing_gallery_info_bin(::proto::HomeRacingRecordBin* racing_gallery_info_bin);

  // .proto.HomeBalloonRecordBin balloon_gallery_info_bin = 12;
  bool has_balloon_gallery_info_bin() const;
  void clear_balloon_gallery_info_bin();
  static const int kBalloonGalleryInfoBinFieldNumber = 12;
  const ::proto::HomeBalloonRecordBin& balloon_gallery_info_bin() const;
  ::proto::HomeBalloonRecordBin* mutable_balloon_gallery_info_bin();
  ::proto::HomeBalloonRecordBin* release_balloon_gallery_info_bin();
  void set_allocated_balloon_gallery_info_bin(::proto::HomeBalloonRecordBin* balloon_gallery_info_bin);

  // .proto.HomeStakeRecordBin stake_play_info_bin = 13;
  bool has_stake_play_info_bin() const;
  void clear_stake_play_info_bin();
  static const int kStakePlayInfoBinFieldNumber = 13;
  const ::proto::HomeStakeRecordBin& stake_play_info_bin() const;
  ::proto::HomeStakeRecordBin* mutable_stake_play_info_bin();
  ::proto::HomeStakeRecordBin* release_stake_play_info_bin();
  void set_allocated_stake_play_info_bin(::proto::HomeStakeRecordBin* stake_play_info_bin);

  // .proto.HomeSeekFurnitureAllRecordBin seek_furniture_play_info_bin = 14;
  bool has_seek_furniture_play_info_bin() const;
  void clear_seek_furniture_play_info_bin();
  static const int kSeekFurniturePlayInfoBinFieldNumber = 14;
  const ::proto::HomeSeekFurnitureAllRecordBin& seek_furniture_play_info_bin() const;
  ::proto::HomeSeekFurnitureAllRecordBin* mutable_seek_furniture_play_info_bin();
  ::proto::HomeSeekFurnitureAllRecordBin* release_seek_furniture_play_info_bin();
  void set_allocated_seek_furniture_play_info_bin(::proto::HomeSeekFurnitureAllRecordBin* seek_furniture_play_info_bin);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.HomeGroupRecordBin)
 private:
  void set_has_racing_gallery_info_bin();
  void set_has_balloon_gallery_info_bin();
  void set_has_stake_play_info_bin();
  void set_has_seek_furniture_play_info_bin();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::HomeRacingRecordBin* racing_gallery_info_bin_;
    ::proto::HomeBalloonRecordBin* balloon_gallery_info_bin_;
    ::proto::HomeStakeRecordBin* stake_play_info_bin_;
    ::proto::HomeSeekFurnitureAllRecordBin* seek_furniture_play_info_bin_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class HomeGroupRecordCompBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeGroupRecordCompBin) */ {
 public:
  HomeGroupRecordCompBin();
  virtual ~HomeGroupRecordCompBin();

  HomeGroupRecordCompBin(const HomeGroupRecordCompBin& from);

  inline HomeGroupRecordCompBin& operator=(const HomeGroupRecordCompBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeGroupRecordCompBin(HomeGroupRecordCompBin&& from) noexcept
    : HomeGroupRecordCompBin() {
    *this = ::std::move(from);
  }

  inline HomeGroupRecordCompBin& operator=(HomeGroupRecordCompBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeGroupRecordCompBin& default_instance();

  static inline const HomeGroupRecordCompBin* internal_default_instance() {
    return reinterpret_cast<const HomeGroupRecordCompBin*>(
               &_HomeGroupRecordCompBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(HomeGroupRecordCompBin* other);
  friend void swap(HomeGroupRecordCompBin& a, HomeGroupRecordCompBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeGroupRecordCompBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeGroupRecordCompBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeGroupRecordCompBin& from);
  void MergeFrom(const HomeGroupRecordCompBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeGroupRecordCompBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.HomeGroupRecordBin> group_record_map_bin = 1;
  int group_record_map_bin_size() const;
  void clear_group_record_map_bin();
  static const int kGroupRecordMapBinFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >&
      group_record_map_bin() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >*
      mutable_group_record_map_bin();

  // @@protoc_insertion_point(class_scope:proto.HomeGroupRecordCompBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class HomeGroupRecordCompBin_GroupRecordMapBinEntry : public ::google::protobuf::internal::MapEntry<HomeGroupRecordCompBin_GroupRecordMapBinEntry, 
      ::google::protobuf::uint32, ::proto::HomeGroupRecordBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<HomeGroupRecordCompBin_GroupRecordMapBinEntry, 
      ::google::protobuf::uint32, ::proto::HomeGroupRecordBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    HomeGroupRecordCompBin_GroupRecordMapBinEntry();
    HomeGroupRecordCompBin_GroupRecordMapBinEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const HomeGroupRecordCompBin_GroupRecordMapBinEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_HomeGroupRecordCompBin_GroupRecordMapBinEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      HomeGroupRecordCompBin_GroupRecordMapBinEntry,
      ::google::protobuf::uint32, ::proto::HomeGroupRecordBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > group_record_map_bin_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeBlueprintCompBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeBlueprintCompBin) */ {
 public:
  HomeBlueprintCompBin();
  virtual ~HomeBlueprintCompBin();

  HomeBlueprintCompBin(const HomeBlueprintCompBin& from);

  inline HomeBlueprintCompBin& operator=(const HomeBlueprintCompBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeBlueprintCompBin(HomeBlueprintCompBin&& from) noexcept
    : HomeBlueprintCompBin() {
    *this = ::std::move(from);
  }

  inline HomeBlueprintCompBin& operator=(HomeBlueprintCompBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeBlueprintCompBin& default_instance();

  static inline const HomeBlueprintCompBin* internal_default_instance() {
    return reinterpret_cast<const HomeBlueprintCompBin*>(
               &_HomeBlueprintCompBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(HomeBlueprintCompBin* other);
  friend void swap(HomeBlueprintCompBin& a, HomeBlueprintCompBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeBlueprintCompBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeBlueprintCompBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeBlueprintCompBin& from);
  void MergeFrom(const HomeBlueprintCompBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeBlueprintCompBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_allow_friend_copy = 1;
  void clear_is_allow_friend_copy();
  static const int kIsAllowFriendCopyFieldNumber = 1;
  bool is_allow_friend_copy() const;
  void set_is_allow_friend_copy(bool value);

  // @@protoc_insertion_point(class_scope:proto.HomeBlueprintCompBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_allow_friend_copy_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeDataBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeDataBin) */ {
 public:
  HomeDataBin();
  virtual ~HomeDataBin();

  HomeDataBin(const HomeDataBin& from);

  inline HomeDataBin& operator=(const HomeDataBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeDataBin(HomeDataBin&& from) noexcept
    : HomeDataBin() {
    *this = ::std::move(from);
  }

  inline HomeDataBin& operator=(HomeDataBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeDataBin& default_instance();

  static inline const HomeDataBin* internal_default_instance() {
    return reinterpret_cast<const HomeDataBin*>(
               &_HomeDataBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(HomeDataBin* other);
  friend void swap(HomeDataBin& a, HomeDataBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeDataBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeDataBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeDataBin& from);
  void MergeFrom(const HomeDataBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeDataBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.HomeBasicCompBin basic_bin = 1;
  bool has_basic_bin() const;
  void clear_basic_bin();
  static const int kBasicBinFieldNumber = 1;
  const ::proto::HomeBasicCompBin& basic_bin() const;
  ::proto::HomeBasicCompBin* mutable_basic_bin();
  ::proto::HomeBasicCompBin* release_basic_bin();
  void set_allocated_basic_bin(::proto::HomeBasicCompBin* basic_bin);

  // .proto.HomeSceneCompBin scene_bin = 2;
  bool has_scene_bin() const;
  void clear_scene_bin();
  static const int kSceneBinFieldNumber = 2;
  const ::proto::HomeSceneCompBin& scene_bin() const;
  ::proto::HomeSceneCompBin* mutable_scene_bin();
  ::proto::HomeSceneCompBin* release_scene_bin();
  void set_allocated_scene_bin(::proto::HomeSceneCompBin* scene_bin);

  // .proto.HomeOfflineMsgCompBin offline_msg_bin = 3;
  bool has_offline_msg_bin() const;
  void clear_offline_msg_bin();
  static const int kOfflineMsgBinFieldNumber = 3;
  const ::proto::HomeOfflineMsgCompBin& offline_msg_bin() const;
  ::proto::HomeOfflineMsgCompBin* mutable_offline_msg_bin();
  ::proto::HomeOfflineMsgCompBin* release_offline_msg_bin();
  void set_allocated_offline_msg_bin(::proto::HomeOfflineMsgCompBin* offline_msg_bin);

  // .proto.HomeFurnitureMakeBin furniture_make_bin = 4;
  bool has_furniture_make_bin() const;
  void clear_furniture_make_bin();
  static const int kFurnitureMakeBinFieldNumber = 4;
  const ::proto::HomeFurnitureMakeBin& furniture_make_bin() const;
  ::proto::HomeFurnitureMakeBin* mutable_furniture_make_bin();
  ::proto::HomeFurnitureMakeBin* release_furniture_make_bin();
  void set_allocated_furniture_make_bin(::proto::HomeFurnitureMakeBin* furniture_make_bin);

  // .proto.HomeLimitedShopBin limited_shop_bin = 5;
  bool has_limited_shop_bin() const;
  void clear_limited_shop_bin();
  static const int kLimitedShopBinFieldNumber = 5;
  const ::proto::HomeLimitedShopBin& limited_shop_bin() const;
  ::proto::HomeLimitedShopBin* mutable_limited_shop_bin();
  ::proto::HomeLimitedShopBin* release_limited_shop_bin();
  void set_allocated_limited_shop_bin(::proto::HomeLimitedShopBin* limited_shop_bin);

  // .proto.HomePlantBin plant_bin = 6;
  bool has_plant_bin() const;
  void clear_plant_bin();
  static const int kPlantBinFieldNumber = 6;
  const ::proto::HomePlantBin& plant_bin() const;
  ::proto::HomePlantBin* mutable_plant_bin();
  ::proto::HomePlantBin* release_plant_bin();
  void set_allocated_plant_bin(::proto::HomePlantBin* plant_bin);

  // .proto.HomeFishFarmingBin fish_farming_bin = 7;
  bool has_fish_farming_bin() const;
  void clear_fish_farming_bin();
  static const int kFishFarmingBinFieldNumber = 7;
  const ::proto::HomeFishFarmingBin& fish_farming_bin() const;
  ::proto::HomeFishFarmingBin* mutable_fish_farming_bin();
  ::proto::HomeFishFarmingBin* release_fish_farming_bin();
  void set_allocated_fish_farming_bin(::proto::HomeFishFarmingBin* fish_farming_bin);

  // .proto.HomeCustomFurnitureBin custom_furniture_bin = 8;
  bool has_custom_furniture_bin() const;
  void clear_custom_furniture_bin();
  static const int kCustomFurnitureBinFieldNumber = 8;
  const ::proto::HomeCustomFurnitureBin& custom_furniture_bin() const;
  ::proto::HomeCustomFurnitureBin* mutable_custom_furniture_bin();
  ::proto::HomeCustomFurnitureBin* release_custom_furniture_bin();
  void set_allocated_custom_furniture_bin(::proto::HomeCustomFurnitureBin* custom_furniture_bin);

  // .proto.HomePictureFrameBin picture_frame_bin = 9;
  bool has_picture_frame_bin() const;
  void clear_picture_frame_bin();
  static const int kPictureFrameBinFieldNumber = 9;
  const ::proto::HomePictureFrameBin& picture_frame_bin() const;
  ::proto::HomePictureFrameBin* mutable_picture_frame_bin();
  ::proto::HomePictureFrameBin* release_picture_frame_bin();
  void set_allocated_picture_frame_bin(::proto::HomePictureFrameBin* picture_frame_bin);

  // .proto.HomeGroupRecordCompBin group_record_bin = 10;
  bool has_group_record_bin() const;
  void clear_group_record_bin();
  static const int kGroupRecordBinFieldNumber = 10;
  const ::proto::HomeGroupRecordCompBin& group_record_bin() const;
  ::proto::HomeGroupRecordCompBin* mutable_group_record_bin();
  ::proto::HomeGroupRecordCompBin* release_group_record_bin();
  void set_allocated_group_record_bin(::proto::HomeGroupRecordCompBin* group_record_bin);

  // .proto.HomeBlueprintCompBin blueprint_bin = 11;
  bool has_blueprint_bin() const;
  void clear_blueprint_bin();
  static const int kBlueprintBinFieldNumber = 11;
  const ::proto::HomeBlueprintCompBin& blueprint_bin() const;
  ::proto::HomeBlueprintCompBin* mutable_blueprint_bin();
  ::proto::HomeBlueprintCompBin* release_blueprint_bin();
  void set_allocated_blueprint_bin(::proto::HomeBlueprintCompBin* blueprint_bin);

  // @@protoc_insertion_point(class_scope:proto.HomeDataBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::HomeBasicCompBin* basic_bin_;
  ::proto::HomeSceneCompBin* scene_bin_;
  ::proto::HomeOfflineMsgCompBin* offline_msg_bin_;
  ::proto::HomeFurnitureMakeBin* furniture_make_bin_;
  ::proto::HomeLimitedShopBin* limited_shop_bin_;
  ::proto::HomePlantBin* plant_bin_;
  ::proto::HomeFishFarmingBin* fish_farming_bin_;
  ::proto::HomeCustomFurnitureBin* custom_furniture_bin_;
  ::proto::HomePictureFrameBin* picture_frame_bin_;
  ::proto::HomeGroupRecordCompBin* group_record_bin_;
  ::proto::HomeBlueprintCompBin* blueprint_bin_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeData) */ {
 public:
  HomeData();
  virtual ~HomeData();

  HomeData(const HomeData& from);

  inline HomeData& operator=(const HomeData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeData(HomeData&& from) noexcept
    : HomeData() {
    *this = ::std::move(from);
  }

  inline HomeData& operator=(HomeData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeData& default_instance();

  static inline const HomeData* internal_default_instance() {
    return reinterpret_cast<const HomeData*>(
               &_HomeData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(HomeData* other);
  friend void swap(HomeData& a, HomeData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeData* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeData& from);
  void MergeFrom(const HomeData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bin_data = 3;
  void clear_bin_data();
  static const int kBinDataFieldNumber = 3;
  const ::std::string& bin_data() const;
  void set_bin_data(const ::std::string& value);
  #if LANG_CXX11
  void set_bin_data(::std::string&& value);
  #endif
  void set_bin_data(const char* value);
  void set_bin_data(const void* value, size_t size);
  ::std::string* mutable_bin_data();
  ::std::string* release_bin_data();
  void set_allocated_bin_data(::std::string* bin_data);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 data_version = 2;
  void clear_data_version();
  static const int kDataVersionFieldNumber = 2;
  ::google::protobuf::uint32 data_version() const;
  void set_data_version(::google::protobuf::uint32 value);

  // int32 block_end_time = 4;
  void clear_block_end_time();
  static const int kBlockEndTimeFieldNumber = 4;
  ::google::protobuf::int32 block_end_time() const;
  void set_block_end_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bin_data_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 data_version_;
  ::google::protobuf::int32 block_end_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_2ehome_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// HomeBasicCompBin

// uint64 trans_no_count = 1;
inline void HomeBasicCompBin::clear_trans_no_count() {
  trans_no_count_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HomeBasicCompBin::trans_no_count() const {
  // @@protoc_insertion_point(field_get:proto.HomeBasicCompBin.trans_no_count)
  return trans_no_count_;
}
inline void HomeBasicCompBin::set_trans_no_count(::google::protobuf::uint64 value) {
  
  trans_no_count_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBasicCompBin.trans_no_count)
}

// uint64 exp = 4;
inline void HomeBasicCompBin::clear_exp() {
  exp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HomeBasicCompBin::exp() const {
  // @@protoc_insertion_point(field_get:proto.HomeBasicCompBin.exp)
  return exp_;
}
inline void HomeBasicCompBin::set_exp(::google::protobuf::uint64 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBasicCompBin.exp)
}

// uint32 level = 5;
inline void HomeBasicCompBin::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 HomeBasicCompBin::level() const {
  // @@protoc_insertion_point(field_get:proto.HomeBasicCompBin.level)
  return level_;
}
inline void HomeBasicCompBin::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBasicCompBin.level)
}

// string owner_nick_name = 6;
inline void HomeBasicCompBin::clear_owner_nick_name() {
  owner_nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HomeBasicCompBin::owner_nick_name() const {
  // @@protoc_insertion_point(field_get:proto.HomeBasicCompBin.owner_nick_name)
  return owner_nick_name_.GetNoArena();
}
inline void HomeBasicCompBin::set_owner_nick_name(const ::std::string& value) {
  
  owner_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeBasicCompBin.owner_nick_name)
}
#if LANG_CXX11
inline void HomeBasicCompBin::set_owner_nick_name(::std::string&& value) {
  
  owner_nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeBasicCompBin.owner_nick_name)
}
#endif
inline void HomeBasicCompBin::set_owner_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  owner_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeBasicCompBin.owner_nick_name)
}
inline void HomeBasicCompBin::set_owner_nick_name(const char* value, size_t size) {
  
  owner_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeBasicCompBin.owner_nick_name)
}
inline ::std::string* HomeBasicCompBin::mutable_owner_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeBasicCompBin.owner_nick_name)
  return owner_nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HomeBasicCompBin::release_owner_nick_name() {
  // @@protoc_insertion_point(field_release:proto.HomeBasicCompBin.owner_nick_name)
  
  return owner_nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomeBasicCompBin::set_allocated_owner_nick_name(::std::string* owner_nick_name) {
  if (owner_nick_name != NULL) {
    
  } else {
    
  }
  owner_nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner_nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBasicCompBin.owner_nick_name)
}

// uint32 total_home_time = 7;
inline void HomeBasicCompBin::clear_total_home_time() {
  total_home_time_ = 0u;
}
inline ::google::protobuf::uint32 HomeBasicCompBin::total_home_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeBasicCompBin.total_home_time)
  return total_home_time_;
}
inline void HomeBasicCompBin::set_total_home_time(::google::protobuf::uint32 value) {
  
  total_home_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBasicCompBin.total_home_time)
}

// uint64 home_time_ms = 8;
inline void HomeBasicCompBin::clear_home_time_ms() {
  home_time_ms_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 HomeBasicCompBin::home_time_ms() const {
  // @@protoc_insertion_point(field_get:proto.HomeBasicCompBin.home_time_ms)
  return home_time_ms_;
}
inline void HomeBasicCompBin::set_home_time_ms(::google::protobuf::uint64 value) {
  
  home_time_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBasicCompBin.home_time_ms)
}

// -------------------------------------------------------------------

// HomeFurnitureBin

// uint32 furniture_id = 1;
inline void HomeFurnitureBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeFurnitureBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureBin.furniture_id)
  return furniture_id_;
}
inline void HomeFurnitureBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureBin.furniture_id)
}

// .proto.VectorBin spawn_pos = 3;
inline bool HomeFurnitureBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
inline void HomeFurnitureBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
inline const ::proto::VectorBin& HomeFurnitureBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeFurnitureBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureBin.spawn_pos)
  return spawn_pos_;
}
inline ::proto::VectorBin* HomeFurnitureBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeFurnitureBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
inline void HomeFurnitureBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeFurnitureBin.spawn_pos)
}

// .proto.VectorBin spawn_rot = 4;
inline bool HomeFurnitureBin::has_spawn_rot() const {
  return this != internal_default_instance() && spawn_rot_ != NULL;
}
inline void HomeFurnitureBin::clear_spawn_rot() {
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) delete spawn_rot_;
  spawn_rot_ = NULL;
}
inline const ::proto::VectorBin& HomeFurnitureBin::spawn_rot() const {
  const ::proto::VectorBin* p = spawn_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureBin.spawn_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeFurnitureBin::mutable_spawn_rot() {
  
  if (spawn_rot_ == NULL) {
    spawn_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureBin.spawn_rot)
  return spawn_rot_;
}
inline ::proto::VectorBin* HomeFurnitureBin::release_spawn_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeFurnitureBin.spawn_rot)
  
  ::proto::VectorBin* temp = spawn_rot_;
  spawn_rot_ = NULL;
  return temp;
}
inline void HomeFurnitureBin::set_allocated_spawn_rot(::proto::VectorBin* spawn_rot) {
  delete spawn_rot_;
  spawn_rot_ = spawn_rot;
  if (spawn_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeFurnitureBin.spawn_rot)
}

// int32 parent_furniture_index = 7;
inline void HomeFurnitureBin::clear_parent_furniture_index() {
  parent_furniture_index_ = 0;
}
inline ::google::protobuf::int32 HomeFurnitureBin::parent_furniture_index() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureBin.parent_furniture_index)
  return parent_furniture_index_;
}
inline void HomeFurnitureBin::set_parent_furniture_index(::google::protobuf::int32 value) {
  
  parent_furniture_index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureBin.parent_furniture_index)
}

// uint32 guid = 8;
inline void HomeFurnitureBin::clear_guid() {
  guid_ = 0u;
}
inline ::google::protobuf::uint32 HomeFurnitureBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureBin.guid)
  return guid_;
}
inline void HomeFurnitureBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureBin.guid)
}

// uint32 version = 9;
inline void HomeFurnitureBin::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 HomeFurnitureBin::version() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureBin.version)
  return version_;
}
inline void HomeFurnitureBin::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureBin.version)
}

// -------------------------------------------------------------------

// HomeFurnitureSuiteBin

// uint32 suite_id = 1;
inline void HomeFurnitureSuiteBin::clear_suite_id() {
  suite_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeFurnitureSuiteBin::suite_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureSuiteBin.suite_id)
  return suite_id_;
}
inline void HomeFurnitureSuiteBin::set_suite_id(::google::protobuf::uint32 value) {
  
  suite_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureSuiteBin.suite_id)
}

// .proto.VectorBin spawn_pos = 2;
inline bool HomeFurnitureSuiteBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
inline void HomeFurnitureSuiteBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
inline const ::proto::VectorBin& HomeFurnitureSuiteBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureSuiteBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeFurnitureSuiteBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureSuiteBin.spawn_pos)
  return spawn_pos_;
}
inline ::proto::VectorBin* HomeFurnitureSuiteBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeFurnitureSuiteBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
inline void HomeFurnitureSuiteBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeFurnitureSuiteBin.spawn_pos)
}

// repeated int32 included_furniture_index_list = 3;
inline int HomeFurnitureSuiteBin::included_furniture_index_list_size() const {
  return included_furniture_index_list_.size();
}
inline void HomeFurnitureSuiteBin::clear_included_furniture_index_list() {
  included_furniture_index_list_.Clear();
}
inline ::google::protobuf::int32 HomeFurnitureSuiteBin::included_furniture_index_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureSuiteBin.included_furniture_index_list)
  return included_furniture_index_list_.Get(index);
}
inline void HomeFurnitureSuiteBin::set_included_furniture_index_list(int index, ::google::protobuf::int32 value) {
  included_furniture_index_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureSuiteBin.included_furniture_index_list)
}
inline void HomeFurnitureSuiteBin::add_included_furniture_index_list(::google::protobuf::int32 value) {
  included_furniture_index_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomeFurnitureSuiteBin.included_furniture_index_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HomeFurnitureSuiteBin::included_furniture_index_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeFurnitureSuiteBin.included_furniture_index_list)
  return included_furniture_index_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HomeFurnitureSuiteBin::mutable_included_furniture_index_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeFurnitureSuiteBin.included_furniture_index_list)
  return &included_furniture_index_list_;
}

// uint32 guid = 4;
inline void HomeFurnitureSuiteBin::clear_guid() {
  guid_ = 0u;
}
inline ::google::protobuf::uint32 HomeFurnitureSuiteBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureSuiteBin.guid)
  return guid_;
}
inline void HomeFurnitureSuiteBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureSuiteBin.guid)
}

// bool is_allow_summon = 5;
inline void HomeFurnitureSuiteBin::clear_is_allow_summon() {
  is_allow_summon_ = false;
}
inline bool HomeFurnitureSuiteBin::is_allow_summon() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureSuiteBin.is_allow_summon)
  return is_allow_summon_;
}
inline void HomeFurnitureSuiteBin::set_is_allow_summon(bool value) {
  
  is_allow_summon_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureSuiteBin.is_allow_summon)
}

// -------------------------------------------------------------------

// HomeNpcBin

// uint32 avatar_id = 1;
inline void HomeNpcBin::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeNpcBin::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeNpcBin.avatar_id)
  return avatar_id_;
}
inline void HomeNpcBin::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeNpcBin.avatar_id)
}

// .proto.VectorBin spawn_pos = 2;
inline bool HomeNpcBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
inline void HomeNpcBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
inline const ::proto::VectorBin& HomeNpcBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeNpcBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeNpcBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeNpcBin.spawn_pos)
  return spawn_pos_;
}
inline ::proto::VectorBin* HomeNpcBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeNpcBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
inline void HomeNpcBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeNpcBin.spawn_pos)
}

// .proto.VectorBin spawn_rot = 3;
inline bool HomeNpcBin::has_spawn_rot() const {
  return this != internal_default_instance() && spawn_rot_ != NULL;
}
inline void HomeNpcBin::clear_spawn_rot() {
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) delete spawn_rot_;
  spawn_rot_ = NULL;
}
inline const ::proto::VectorBin& HomeNpcBin::spawn_rot() const {
  const ::proto::VectorBin* p = spawn_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeNpcBin.spawn_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeNpcBin::mutable_spawn_rot() {
  
  if (spawn_rot_ == NULL) {
    spawn_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeNpcBin.spawn_rot)
  return spawn_rot_;
}
inline ::proto::VectorBin* HomeNpcBin::release_spawn_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeNpcBin.spawn_rot)
  
  ::proto::VectorBin* temp = spawn_rot_;
  spawn_rot_ = NULL;
  return temp;
}
inline void HomeNpcBin::set_allocated_spawn_rot(::proto::VectorBin* spawn_rot) {
  delete spawn_rot_;
  spawn_rot_ = spawn_rot;
  if (spawn_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeNpcBin.spawn_rot)
}

// uint32 costume_id = 4;
inline void HomeNpcBin::clear_costume_id() {
  costume_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeNpcBin::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeNpcBin.costume_id)
  return costume_id_;
}
inline void HomeNpcBin::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeNpcBin.costume_id)
}

// -------------------------------------------------------------------

// HomeAnimalBin

// uint32 furniture_id = 1;
inline void HomeAnimalBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeAnimalBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeAnimalBin.furniture_id)
  return furniture_id_;
}
inline void HomeAnimalBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeAnimalBin.furniture_id)
}

// .proto.VectorBin spawn_pos = 2;
inline bool HomeAnimalBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
inline void HomeAnimalBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
inline const ::proto::VectorBin& HomeAnimalBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeAnimalBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeAnimalBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeAnimalBin.spawn_pos)
  return spawn_pos_;
}
inline ::proto::VectorBin* HomeAnimalBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeAnimalBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
inline void HomeAnimalBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeAnimalBin.spawn_pos)
}

// .proto.VectorBin spawn_rot = 3;
inline bool HomeAnimalBin::has_spawn_rot() const {
  return this != internal_default_instance() && spawn_rot_ != NULL;
}
inline void HomeAnimalBin::clear_spawn_rot() {
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) delete spawn_rot_;
  spawn_rot_ = NULL;
}
inline const ::proto::VectorBin& HomeAnimalBin::spawn_rot() const {
  const ::proto::VectorBin* p = spawn_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeAnimalBin.spawn_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeAnimalBin::mutable_spawn_rot() {
  
  if (spawn_rot_ == NULL) {
    spawn_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeAnimalBin.spawn_rot)
  return spawn_rot_;
}
inline ::proto::VectorBin* HomeAnimalBin::release_spawn_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeAnimalBin.spawn_rot)
  
  ::proto::VectorBin* temp = spawn_rot_;
  spawn_rot_ = NULL;
  return temp;
}
inline void HomeAnimalBin::set_allocated_spawn_rot(::proto::VectorBin* spawn_rot) {
  delete spawn_rot_;
  spawn_rot_ = spawn_rot;
  if (spawn_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeAnimalBin.spawn_rot)
}

// -------------------------------------------------------------------

// HomeBlockSubFieldBin

// .proto.VectorBin spawn_pos = 1;
inline bool HomeBlockSubFieldBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
inline void HomeBlockSubFieldBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
inline const ::proto::VectorBin& HomeBlockSubFieldBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeBlockSubFieldBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeBlockSubFieldBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockSubFieldBin.spawn_pos)
  return spawn_pos_;
}
inline ::proto::VectorBin* HomeBlockSubFieldBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeBlockSubFieldBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
inline void HomeBlockSubFieldBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBlockSubFieldBin.spawn_pos)
}

// .proto.VectorBin spawn_rot = 2;
inline bool HomeBlockSubFieldBin::has_spawn_rot() const {
  return this != internal_default_instance() && spawn_rot_ != NULL;
}
inline void HomeBlockSubFieldBin::clear_spawn_rot() {
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) delete spawn_rot_;
  spawn_rot_ = NULL;
}
inline const ::proto::VectorBin& HomeBlockSubFieldBin::spawn_rot() const {
  const ::proto::VectorBin* p = spawn_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeBlockSubFieldBin.spawn_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeBlockSubFieldBin::mutable_spawn_rot() {
  
  if (spawn_rot_ == NULL) {
    spawn_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockSubFieldBin.spawn_rot)
  return spawn_rot_;
}
inline ::proto::VectorBin* HomeBlockSubFieldBin::release_spawn_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeBlockSubFieldBin.spawn_rot)
  
  ::proto::VectorBin* temp = spawn_rot_;
  spawn_rot_ = NULL;
  return temp;
}
inline void HomeBlockSubFieldBin::set_allocated_spawn_rot(::proto::VectorBin* spawn_rot) {
  delete spawn_rot_;
  spawn_rot_ = spawn_rot;
  if (spawn_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBlockSubFieldBin.spawn_rot)
}

// -------------------------------------------------------------------

// HomeBlockFieldBin

// uint32 guid = 1;
inline void HomeBlockFieldBin::clear_guid() {
  guid_ = 0u;
}
inline ::google::protobuf::uint32 HomeBlockFieldBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockFieldBin.guid)
  return guid_;
}
inline void HomeBlockFieldBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlockFieldBin.guid)
}

// uint32 furniture_id = 2;
inline void HomeBlockFieldBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeBlockFieldBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockFieldBin.furniture_id)
  return furniture_id_;
}
inline void HomeBlockFieldBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlockFieldBin.furniture_id)
}

// .proto.VectorBin spawn_pos = 3;
inline bool HomeBlockFieldBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
inline void HomeBlockFieldBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
inline const ::proto::VectorBin& HomeBlockFieldBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeBlockFieldBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeBlockFieldBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockFieldBin.spawn_pos)
  return spawn_pos_;
}
inline ::proto::VectorBin* HomeBlockFieldBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeBlockFieldBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
inline void HomeBlockFieldBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBlockFieldBin.spawn_pos)
}

// .proto.VectorBin spawn_rot = 4;
inline bool HomeBlockFieldBin::has_spawn_rot() const {
  return this != internal_default_instance() && spawn_rot_ != NULL;
}
inline void HomeBlockFieldBin::clear_spawn_rot() {
  if (GetArenaNoVirtual() == NULL && spawn_rot_ != NULL) delete spawn_rot_;
  spawn_rot_ = NULL;
}
inline const ::proto::VectorBin& HomeBlockFieldBin::spawn_rot() const {
  const ::proto::VectorBin* p = spawn_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeBlockFieldBin.spawn_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeBlockFieldBin::mutable_spawn_rot() {
  
  if (spawn_rot_ == NULL) {
    spawn_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockFieldBin.spawn_rot)
  return spawn_rot_;
}
inline ::proto::VectorBin* HomeBlockFieldBin::release_spawn_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeBlockFieldBin.spawn_rot)
  
  ::proto::VectorBin* temp = spawn_rot_;
  spawn_rot_ = NULL;
  return temp;
}
inline void HomeBlockFieldBin::set_allocated_spawn_rot(::proto::VectorBin* spawn_rot) {
  delete spawn_rot_;
  spawn_rot_ = spawn_rot;
  if (spawn_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBlockFieldBin.spawn_rot)
}

// repeated .proto.HomeBlockSubFieldBin sub_field_list = 5;
inline int HomeBlockFieldBin::sub_field_list_size() const {
  return sub_field_list_.size();
}
inline void HomeBlockFieldBin::clear_sub_field_list() {
  sub_field_list_.Clear();
}
inline const ::proto::HomeBlockSubFieldBin& HomeBlockFieldBin::sub_field_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockFieldBin.sub_field_list)
  return sub_field_list_.Get(index);
}
inline ::proto::HomeBlockSubFieldBin* HomeBlockFieldBin::mutable_sub_field_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockFieldBin.sub_field_list)
  return sub_field_list_.Mutable(index);
}
inline ::proto::HomeBlockSubFieldBin* HomeBlockFieldBin::add_sub_field_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockFieldBin.sub_field_list)
  return sub_field_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockSubFieldBin >*
HomeBlockFieldBin::mutable_sub_field_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockFieldBin.sub_field_list)
  return &sub_field_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockSubFieldBin >&
HomeBlockFieldBin::sub_field_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockFieldBin.sub_field_list)
  return sub_field_list_;
}

// -------------------------------------------------------------------

// HomeFurnitureGroupBin

// uint32 group_furniture_index = 1;
inline void HomeFurnitureGroupBin::clear_group_furniture_index() {
  group_furniture_index_ = 0u;
}
inline ::google::protobuf::uint32 HomeFurnitureGroupBin::group_furniture_index() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureGroupBin.group_furniture_index)
  return group_furniture_index_;
}
inline void HomeFurnitureGroupBin::set_group_furniture_index(::google::protobuf::uint32 value) {
  
  group_furniture_index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureGroupBin.group_furniture_index)
}

// repeated .proto.HomeFurnitureBin virtual_furniure_list = 2;
inline int HomeFurnitureGroupBin::virtual_furniure_list_size() const {
  return virtual_furniure_list_.size();
}
inline void HomeFurnitureGroupBin::clear_virtual_furniure_list() {
  virtual_furniure_list_.Clear();
}
inline const ::proto::HomeFurnitureBin& HomeFurnitureGroupBin::virtual_furniure_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureGroupBin.virtual_furniure_list)
  return virtual_furniure_list_.Get(index);
}
inline ::proto::HomeFurnitureBin* HomeFurnitureGroupBin::mutable_virtual_furniure_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureGroupBin.virtual_furniure_list)
  return virtual_furniure_list_.Mutable(index);
}
inline ::proto::HomeFurnitureBin* HomeFurnitureGroupBin::add_virtual_furniure_list() {
  // @@protoc_insertion_point(field_add:proto.HomeFurnitureGroupBin.virtual_furniure_list)
  return virtual_furniure_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
HomeFurnitureGroupBin::mutable_virtual_furniure_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeFurnitureGroupBin.virtual_furniure_list)
  return &virtual_furniure_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
HomeFurnitureGroupBin::virtual_furniure_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeFurnitureGroupBin.virtual_furniure_list)
  return virtual_furniure_list_;
}

// -------------------------------------------------------------------

// HomeFurnitureCustomSuiteBin

// .proto.VectorBin spawn_pos = 1;
inline bool HomeFurnitureCustomSuiteBin::has_spawn_pos() const {
  return this != internal_default_instance() && spawn_pos_ != NULL;
}
inline void HomeFurnitureCustomSuiteBin::clear_spawn_pos() {
  if (GetArenaNoVirtual() == NULL && spawn_pos_ != NULL) delete spawn_pos_;
  spawn_pos_ = NULL;
}
inline const ::proto::VectorBin& HomeFurnitureCustomSuiteBin::spawn_pos() const {
  const ::proto::VectorBin* p = spawn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureCustomSuiteBin.spawn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeFurnitureCustomSuiteBin::mutable_spawn_pos() {
  
  if (spawn_pos_ == NULL) {
    spawn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureCustomSuiteBin.spawn_pos)
  return spawn_pos_;
}
inline ::proto::VectorBin* HomeFurnitureCustomSuiteBin::release_spawn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeFurnitureCustomSuiteBin.spawn_pos)
  
  ::proto::VectorBin* temp = spawn_pos_;
  spawn_pos_ = NULL;
  return temp;
}
inline void HomeFurnitureCustomSuiteBin::set_allocated_spawn_pos(::proto::VectorBin* spawn_pos) {
  delete spawn_pos_;
  spawn_pos_ = spawn_pos;
  if (spawn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeFurnitureCustomSuiteBin.spawn_pos)
}

// repeated int32 included_furniture_index_list = 2;
inline int HomeFurnitureCustomSuiteBin::included_furniture_index_list_size() const {
  return included_furniture_index_list_.size();
}
inline void HomeFurnitureCustomSuiteBin::clear_included_furniture_index_list() {
  included_furniture_index_list_.Clear();
}
inline ::google::protobuf::int32 HomeFurnitureCustomSuiteBin::included_furniture_index_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureCustomSuiteBin.included_furniture_index_list)
  return included_furniture_index_list_.Get(index);
}
inline void HomeFurnitureCustomSuiteBin::set_included_furniture_index_list(int index, ::google::protobuf::int32 value) {
  included_furniture_index_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureCustomSuiteBin.included_furniture_index_list)
}
inline void HomeFurnitureCustomSuiteBin::add_included_furniture_index_list(::google::protobuf::int32 value) {
  included_furniture_index_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomeFurnitureCustomSuiteBin.included_furniture_index_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HomeFurnitureCustomSuiteBin::included_furniture_index_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeFurnitureCustomSuiteBin.included_furniture_index_list)
  return included_furniture_index_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HomeFurnitureCustomSuiteBin::mutable_included_furniture_index_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeFurnitureCustomSuiteBin.included_furniture_index_list)
  return &included_furniture_index_list_;
}

// uint32 guid = 3;
inline void HomeFurnitureCustomSuiteBin::clear_guid() {
  guid_ = 0u;
}
inline ::google::protobuf::uint32 HomeFurnitureCustomSuiteBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureCustomSuiteBin.guid)
  return guid_;
}
inline void HomeFurnitureCustomSuiteBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFurnitureCustomSuiteBin.guid)
}

// -------------------------------------------------------------------

// HomeBlockBin

// uint32 block_id = 1;
inline void HomeBlockBin::clear_block_id() {
  block_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeBlockBin::block_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.block_id)
  return block_id_;
}
inline void HomeBlockBin::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlockBin.block_id)
}

// repeated .proto.HomeFurnitureBin persistent_furniture_list = 2;
inline int HomeBlockBin::persistent_furniture_list_size() const {
  return persistent_furniture_list_.size();
}
inline void HomeBlockBin::clear_persistent_furniture_list() {
  persistent_furniture_list_.Clear();
}
inline const ::proto::HomeFurnitureBin& HomeBlockBin::persistent_furniture_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.persistent_furniture_list)
  return persistent_furniture_list_.Get(index);
}
inline ::proto::HomeFurnitureBin* HomeBlockBin::mutable_persistent_furniture_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.persistent_furniture_list)
  return persistent_furniture_list_.Mutable(index);
}
inline ::proto::HomeFurnitureBin* HomeBlockBin::add_persistent_furniture_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.persistent_furniture_list)
  return persistent_furniture_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
HomeBlockBin::mutable_persistent_furniture_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.persistent_furniture_list)
  return &persistent_furniture_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
HomeBlockBin::persistent_furniture_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.persistent_furniture_list)
  return persistent_furniture_list_;
}

// repeated .proto.HomeFurnitureBin deploy_furniure_list = 3;
inline int HomeBlockBin::deploy_furniure_list_size() const {
  return deploy_furniure_list_.size();
}
inline void HomeBlockBin::clear_deploy_furniure_list() {
  deploy_furniure_list_.Clear();
}
inline const ::proto::HomeFurnitureBin& HomeBlockBin::deploy_furniure_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.deploy_furniure_list)
  return deploy_furniure_list_.Get(index);
}
inline ::proto::HomeFurnitureBin* HomeBlockBin::mutable_deploy_furniure_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.deploy_furniure_list)
  return deploy_furniure_list_.Mutable(index);
}
inline ::proto::HomeFurnitureBin* HomeBlockBin::add_deploy_furniure_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.deploy_furniure_list)
  return deploy_furniure_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
HomeBlockBin::mutable_deploy_furniure_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.deploy_furniure_list)
  return &deploy_furniure_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
HomeBlockBin::deploy_furniure_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.deploy_furniure_list)
  return deploy_furniure_list_;
}

// repeated .proto.HomeNpcBin deploy_npc_list = 4;
inline int HomeBlockBin::deploy_npc_list_size() const {
  return deploy_npc_list_.size();
}
inline void HomeBlockBin::clear_deploy_npc_list() {
  deploy_npc_list_.Clear();
}
inline const ::proto::HomeNpcBin& HomeBlockBin::deploy_npc_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.deploy_npc_list)
  return deploy_npc_list_.Get(index);
}
inline ::proto::HomeNpcBin* HomeBlockBin::mutable_deploy_npc_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.deploy_npc_list)
  return deploy_npc_list_.Mutable(index);
}
inline ::proto::HomeNpcBin* HomeBlockBin::add_deploy_npc_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.deploy_npc_list)
  return deploy_npc_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeNpcBin >*
HomeBlockBin::mutable_deploy_npc_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.deploy_npc_list)
  return &deploy_npc_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeNpcBin >&
HomeBlockBin::deploy_npc_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.deploy_npc_list)
  return deploy_npc_list_;
}

// repeated .proto.HomeFurnitureSuiteBin furniture_suite_list = 5;
inline int HomeBlockBin::furniture_suite_list_size() const {
  return furniture_suite_list_.size();
}
inline void HomeBlockBin::clear_furniture_suite_list() {
  furniture_suite_list_.Clear();
}
inline const ::proto::HomeFurnitureSuiteBin& HomeBlockBin::furniture_suite_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.furniture_suite_list)
  return furniture_suite_list_.Get(index);
}
inline ::proto::HomeFurnitureSuiteBin* HomeBlockBin::mutable_furniture_suite_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.furniture_suite_list)
  return furniture_suite_list_.Mutable(index);
}
inline ::proto::HomeFurnitureSuiteBin* HomeBlockBin::add_furniture_suite_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.furniture_suite_list)
  return furniture_suite_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureSuiteBin >*
HomeBlockBin::mutable_furniture_suite_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.furniture_suite_list)
  return &furniture_suite_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureSuiteBin >&
HomeBlockBin::furniture_suite_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.furniture_suite_list)
  return furniture_suite_list_;
}

// repeated .proto.HomeAnimalBin deploy_animal_list = 6;
inline int HomeBlockBin::deploy_animal_list_size() const {
  return deploy_animal_list_.size();
}
inline void HomeBlockBin::clear_deploy_animal_list() {
  deploy_animal_list_.Clear();
}
inline const ::proto::HomeAnimalBin& HomeBlockBin::deploy_animal_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.deploy_animal_list)
  return deploy_animal_list_.Get(index);
}
inline ::proto::HomeAnimalBin* HomeBlockBin::mutable_deploy_animal_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.deploy_animal_list)
  return deploy_animal_list_.Mutable(index);
}
inline ::proto::HomeAnimalBin* HomeBlockBin::add_deploy_animal_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.deploy_animal_list)
  return deploy_animal_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeAnimalBin >*
HomeBlockBin::mutable_deploy_animal_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.deploy_animal_list)
  return &deploy_animal_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeAnimalBin >&
HomeBlockBin::deploy_animal_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.deploy_animal_list)
  return deploy_animal_list_;
}

// bool is_unlocked = 7;
inline void HomeBlockBin::clear_is_unlocked() {
  is_unlocked_ = false;
}
inline bool HomeBlockBin::is_unlocked() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.is_unlocked)
  return is_unlocked_;
}
inline void HomeBlockBin::set_is_unlocked(bool value) {
  
  is_unlocked_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlockBin.is_unlocked)
}

// repeated .proto.HomeBlockFieldBin deploy_field_list = 8;
inline int HomeBlockBin::deploy_field_list_size() const {
  return deploy_field_list_.size();
}
inline void HomeBlockBin::clear_deploy_field_list() {
  deploy_field_list_.Clear();
}
inline const ::proto::HomeBlockFieldBin& HomeBlockBin::deploy_field_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.deploy_field_list)
  return deploy_field_list_.Get(index);
}
inline ::proto::HomeBlockFieldBin* HomeBlockBin::mutable_deploy_field_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.deploy_field_list)
  return deploy_field_list_.Mutable(index);
}
inline ::proto::HomeBlockFieldBin* HomeBlockBin::add_deploy_field_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.deploy_field_list)
  return deploy_field_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockFieldBin >*
HomeBlockBin::mutable_deploy_field_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.deploy_field_list)
  return &deploy_field_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockFieldBin >&
HomeBlockBin::deploy_field_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.deploy_field_list)
  return deploy_field_list_;
}

// repeated .proto.HomeFurnitureGroupBin deploy_furniture_group_list = 9;
inline int HomeBlockBin::deploy_furniture_group_list_size() const {
  return deploy_furniture_group_list_.size();
}
inline void HomeBlockBin::clear_deploy_furniture_group_list() {
  deploy_furniture_group_list_.Clear();
}
inline const ::proto::HomeFurnitureGroupBin& HomeBlockBin::deploy_furniture_group_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.deploy_furniture_group_list)
  return deploy_furniture_group_list_.Get(index);
}
inline ::proto::HomeFurnitureGroupBin* HomeBlockBin::mutable_deploy_furniture_group_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.deploy_furniture_group_list)
  return deploy_furniture_group_list_.Mutable(index);
}
inline ::proto::HomeFurnitureGroupBin* HomeBlockBin::add_deploy_furniture_group_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.deploy_furniture_group_list)
  return deploy_furniture_group_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureGroupBin >*
HomeBlockBin::mutable_deploy_furniture_group_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.deploy_furniture_group_list)
  return &deploy_furniture_group_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureGroupBin >&
HomeBlockBin::deploy_furniture_group_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.deploy_furniture_group_list)
  return deploy_furniture_group_list_;
}

// repeated .proto.HomeFurnitureCustomSuiteBin furniture_custom_suite_list = 10;
inline int HomeBlockBin::furniture_custom_suite_list_size() const {
  return furniture_custom_suite_list_.size();
}
inline void HomeBlockBin::clear_furniture_custom_suite_list() {
  furniture_custom_suite_list_.Clear();
}
inline const ::proto::HomeFurnitureCustomSuiteBin& HomeBlockBin::furniture_custom_suite_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBlockBin.furniture_custom_suite_list)
  return furniture_custom_suite_list_.Get(index);
}
inline ::proto::HomeFurnitureCustomSuiteBin* HomeBlockBin::mutable_furniture_custom_suite_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBlockBin.furniture_custom_suite_list)
  return furniture_custom_suite_list_.Mutable(index);
}
inline ::proto::HomeFurnitureCustomSuiteBin* HomeBlockBin::add_furniture_custom_suite_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBlockBin.furniture_custom_suite_list)
  return furniture_custom_suite_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureCustomSuiteBin >*
HomeBlockBin::mutable_furniture_custom_suite_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBlockBin.furniture_custom_suite_list)
  return &furniture_custom_suite_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureCustomSuiteBin >&
HomeBlockBin::furniture_custom_suite_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBlockBin.furniture_custom_suite_list)
  return furniture_custom_suite_list_;
}

// -------------------------------------------------------------------

// HomeSceneBin

// uint32 scene_id = 1;
inline void HomeSceneBin::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeSceneBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.scene_id)
  return scene_id_;
}
inline void HomeSceneBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneBin.scene_id)
}

// .proto.SceneBin scene_bin = 2;
inline bool HomeSceneBin::has_scene_bin() const {
  return this != internal_default_instance() && scene_bin_ != NULL;
}
inline void HomeSceneBin::clear_scene_bin() {
  if (GetArenaNoVirtual() == NULL && scene_bin_ != NULL) delete scene_bin_;
  scene_bin_ = NULL;
}
inline const ::proto::SceneBin& HomeSceneBin::scene_bin() const {
  const ::proto::SceneBin* p = scene_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.scene_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneBin*>(
      &::proto::_SceneBin_default_instance_);
}
inline ::proto::SceneBin* HomeSceneBin::mutable_scene_bin() {
  
  if (scene_bin_ == NULL) {
    scene_bin_ = new ::proto::SceneBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.scene_bin)
  return scene_bin_;
}
inline ::proto::SceneBin* HomeSceneBin::release_scene_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeSceneBin.scene_bin)
  
  ::proto::SceneBin* temp = scene_bin_;
  scene_bin_ = NULL;
  return temp;
}
inline void HomeSceneBin::set_allocated_scene_bin(::proto::SceneBin* scene_bin) {
  delete scene_bin_;
  scene_bin_ = scene_bin;
  if (scene_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeSceneBin.scene_bin)
}

// repeated .proto.HomeBlockBin block_bin_list = 3;
inline int HomeSceneBin::block_bin_list_size() const {
  return block_bin_list_.size();
}
inline void HomeSceneBin::clear_block_bin_list() {
  block_bin_list_.Clear();
}
inline const ::proto::HomeBlockBin& HomeSceneBin::block_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.block_bin_list)
  return block_bin_list_.Get(index);
}
inline ::proto::HomeBlockBin* HomeSceneBin::mutable_block_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.block_bin_list)
  return block_bin_list_.Mutable(index);
}
inline ::proto::HomeBlockBin* HomeSceneBin::add_block_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSceneBin.block_bin_list)
  return block_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockBin >*
HomeSceneBin::mutable_block_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSceneBin.block_bin_list)
  return &block_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeBlockBin >&
HomeSceneBin::block_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSceneBin.block_bin_list)
  return block_bin_list_;
}

// bool is_set_born_pos = 4;
inline void HomeSceneBin::clear_is_set_born_pos() {
  is_set_born_pos_ = false;
}
inline bool HomeSceneBin::is_set_born_pos() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.is_set_born_pos)
  return is_set_born_pos_;
}
inline void HomeSceneBin::set_is_set_born_pos(bool value) {
  
  is_set_born_pos_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneBin.is_set_born_pos)
}

// .proto.VectorBin born_pos = 5;
inline bool HomeSceneBin::has_born_pos() const {
  return this != internal_default_instance() && born_pos_ != NULL;
}
inline void HomeSceneBin::clear_born_pos() {
  if (GetArenaNoVirtual() == NULL && born_pos_ != NULL) delete born_pos_;
  born_pos_ = NULL;
}
inline const ::proto::VectorBin& HomeSceneBin::born_pos() const {
  const ::proto::VectorBin* p = born_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.born_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeSceneBin::mutable_born_pos() {
  
  if (born_pos_ == NULL) {
    born_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.born_pos)
  return born_pos_;
}
inline ::proto::VectorBin* HomeSceneBin::release_born_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeSceneBin.born_pos)
  
  ::proto::VectorBin* temp = born_pos_;
  born_pos_ = NULL;
  return temp;
}
inline void HomeSceneBin::set_allocated_born_pos(::proto::VectorBin* born_pos) {
  delete born_pos_;
  born_pos_ = born_pos;
  if (born_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeSceneBin.born_pos)
}

// .proto.VectorBin born_rot = 6;
inline bool HomeSceneBin::has_born_rot() const {
  return this != internal_default_instance() && born_rot_ != NULL;
}
inline void HomeSceneBin::clear_born_rot() {
  if (GetArenaNoVirtual() == NULL && born_rot_ != NULL) delete born_rot_;
  born_rot_ = NULL;
}
inline const ::proto::VectorBin& HomeSceneBin::born_rot() const {
  const ::proto::VectorBin* p = born_rot_;
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.born_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeSceneBin::mutable_born_rot() {
  
  if (born_rot_ == NULL) {
    born_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.born_rot)
  return born_rot_;
}
inline ::proto::VectorBin* HomeSceneBin::release_born_rot() {
  // @@protoc_insertion_point(field_release:proto.HomeSceneBin.born_rot)
  
  ::proto::VectorBin* temp = born_rot_;
  born_rot_ = NULL;
  return temp;
}
inline void HomeSceneBin::set_allocated_born_rot(::proto::VectorBin* born_rot) {
  delete born_rot_;
  born_rot_ = born_rot;
  if (born_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeSceneBin.born_rot)
}

// repeated .proto.HomeFurnitureBin door_list = 7;
inline int HomeSceneBin::door_list_size() const {
  return door_list_.size();
}
inline void HomeSceneBin::clear_door_list() {
  door_list_.Clear();
}
inline const ::proto::HomeFurnitureBin& HomeSceneBin::door_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.door_list)
  return door_list_.Get(index);
}
inline ::proto::HomeFurnitureBin* HomeSceneBin::mutable_door_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.door_list)
  return door_list_.Mutable(index);
}
inline ::proto::HomeFurnitureBin* HomeSceneBin::add_door_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSceneBin.door_list)
  return door_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
HomeSceneBin::mutable_door_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSceneBin.door_list)
  return &door_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
HomeSceneBin::door_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSceneBin.door_list)
  return door_list_;
}

// repeated .proto.HomeFurnitureBin stair_list = 8;
inline int HomeSceneBin::stair_list_size() const {
  return stair_list_.size();
}
inline void HomeSceneBin::clear_stair_list() {
  stair_list_.Clear();
}
inline const ::proto::HomeFurnitureBin& HomeSceneBin::stair_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.stair_list)
  return stair_list_.Get(index);
}
inline ::proto::HomeFurnitureBin* HomeSceneBin::mutable_stair_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.stair_list)
  return stair_list_.Mutable(index);
}
inline ::proto::HomeFurnitureBin* HomeSceneBin::add_stair_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSceneBin.stair_list)
  return stair_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >*
HomeSceneBin::mutable_stair_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSceneBin.stair_list)
  return &stair_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeFurnitureBin >&
HomeSceneBin::stair_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSceneBin.stair_list)
  return stair_list_;
}

// .proto.HomeFurnitureBin main_house = 9;
inline bool HomeSceneBin::has_main_house() const {
  return this != internal_default_instance() && main_house_ != NULL;
}
inline void HomeSceneBin::clear_main_house() {
  if (GetArenaNoVirtual() == NULL && main_house_ != NULL) delete main_house_;
  main_house_ = NULL;
}
inline const ::proto::HomeFurnitureBin& HomeSceneBin::main_house() const {
  const ::proto::HomeFurnitureBin* p = main_house_;
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.main_house)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeFurnitureBin*>(
      &::proto::_HomeFurnitureBin_default_instance_);
}
inline ::proto::HomeFurnitureBin* HomeSceneBin::mutable_main_house() {
  
  if (main_house_ == NULL) {
    main_house_ = new ::proto::HomeFurnitureBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.main_house)
  return main_house_;
}
inline ::proto::HomeFurnitureBin* HomeSceneBin::release_main_house() {
  // @@protoc_insertion_point(field_release:proto.HomeSceneBin.main_house)
  
  ::proto::HomeFurnitureBin* temp = main_house_;
  main_house_ = NULL;
  return temp;
}
inline void HomeSceneBin::set_allocated_main_house(::proto::HomeFurnitureBin* main_house) {
  delete main_house_;
  main_house_ = main_house;
  if (main_house) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeSceneBin.main_house)
}

// .proto.VectorBin djinn_pos = 10;
inline bool HomeSceneBin::has_djinn_pos() const {
  return this != internal_default_instance() && djinn_pos_ != NULL;
}
inline void HomeSceneBin::clear_djinn_pos() {
  if (GetArenaNoVirtual() == NULL && djinn_pos_ != NULL) delete djinn_pos_;
  djinn_pos_ = NULL;
}
inline const ::proto::VectorBin& HomeSceneBin::djinn_pos() const {
  const ::proto::VectorBin* p = djinn_pos_;
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.djinn_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* HomeSceneBin::mutable_djinn_pos() {
  
  if (djinn_pos_ == NULL) {
    djinn_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneBin.djinn_pos)
  return djinn_pos_;
}
inline ::proto::VectorBin* HomeSceneBin::release_djinn_pos() {
  // @@protoc_insertion_point(field_release:proto.HomeSceneBin.djinn_pos)
  
  ::proto::VectorBin* temp = djinn_pos_;
  djinn_pos_ = NULL;
  return temp;
}
inline void HomeSceneBin::set_allocated_djinn_pos(::proto::VectorBin* djinn_pos) {
  delete djinn_pos_;
  djinn_pos_ = djinn_pos;
  if (djinn_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeSceneBin.djinn_pos)
}

// uint32 tmp_version = 12;
inline void HomeSceneBin::clear_tmp_version() {
  tmp_version_ = 0u;
}
inline ::google::protobuf::uint32 HomeSceneBin::tmp_version() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.tmp_version)
  return tmp_version_;
}
inline void HomeSceneBin::set_tmp_version(::google::protobuf::uint32 value) {
  
  tmp_version_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneBin.tmp_version)
}

// fixed32 save_time = 13;
inline void HomeSceneBin::clear_save_time() {
  save_time_ = 0u;
}
inline ::google::protobuf::uint32 HomeSceneBin::save_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.save_time)
  return save_time_;
}
inline void HomeSceneBin::set_save_time(::google::protobuf::uint32 value) {
  
  save_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneBin.save_time)
}

// uint32 bgm_id = 14;
inline void HomeSceneBin::clear_bgm_id() {
  bgm_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeSceneBin::bgm_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneBin.bgm_id)
  return bgm_id_;
}
inline void HomeSceneBin::set_bgm_id(::google::protobuf::uint32 value) {
  
  bgm_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneBin.bgm_id)
}

// -------------------------------------------------------------------

// HomeModuleBin

// uint32 module_id = 1;
inline void HomeModuleBin::clear_module_id() {
  module_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeModuleBin::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleBin.module_id)
  return module_id_;
}
inline void HomeModuleBin::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeModuleBin.module_id)
}

// uint32 cur_room_scene_id = 2;
inline void HomeModuleBin::clear_cur_room_scene_id() {
  cur_room_scene_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeModuleBin::cur_room_scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleBin.cur_room_scene_id)
  return cur_room_scene_id_;
}
inline void HomeModuleBin::set_cur_room_scene_id(::google::protobuf::uint32 value) {
  
  cur_room_scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeModuleBin.cur_room_scene_id)
}

// repeated .proto.HomeSceneBin scene_bin_list = 3;
inline int HomeModuleBin::scene_bin_list_size() const {
  return scene_bin_list_.size();
}
inline void HomeModuleBin::clear_scene_bin_list() {
  scene_bin_list_.Clear();
}
inline const ::proto::HomeSceneBin& HomeModuleBin::scene_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleBin.scene_bin_list)
  return scene_bin_list_.Get(index);
}
inline ::proto::HomeSceneBin* HomeModuleBin::mutable_scene_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeModuleBin.scene_bin_list)
  return scene_bin_list_.Mutable(index);
}
inline ::proto::HomeSceneBin* HomeModuleBin::add_scene_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeModuleBin.scene_bin_list)
  return scene_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeSceneBin >*
HomeModuleBin::mutable_scene_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeModuleBin.scene_bin_list)
  return &scene_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeSceneBin >&
HomeModuleBin::scene_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeModuleBin.scene_bin_list)
  return scene_bin_list_;
}

// -------------------------------------------------------------------

// HomeSceneCompBin

// uint32 cur_module_id = 1;
inline void HomeSceneCompBin::clear_cur_module_id() {
  cur_module_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeSceneCompBin::cur_module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneCompBin.cur_module_id)
  return cur_module_id_;
}
inline void HomeSceneCompBin::set_cur_module_id(::google::protobuf::uint32 value) {
  
  cur_module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSceneCompBin.cur_module_id)
}

// repeated .proto.HomeModuleBin module_bin_list = 2;
inline int HomeSceneCompBin::module_bin_list_size() const {
  return module_bin_list_.size();
}
inline void HomeSceneCompBin::clear_module_bin_list() {
  module_bin_list_.Clear();
}
inline const ::proto::HomeModuleBin& HomeSceneCompBin::module_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSceneCompBin.module_bin_list)
  return module_bin_list_.Get(index);
}
inline ::proto::HomeModuleBin* HomeSceneCompBin::mutable_module_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSceneCompBin.module_bin_list)
  return module_bin_list_.Mutable(index);
}
inline ::proto::HomeModuleBin* HomeSceneCompBin::add_module_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSceneCompBin.module_bin_list)
  return module_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleBin >*
HomeSceneCompBin::mutable_module_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSceneCompBin.module_bin_list)
  return &module_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleBin >&
HomeSceneCompBin::module_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSceneCompBin.module_bin_list)
  return module_bin_list_;
}

// -------------------------------------------------------------------

// HomeOfflineMsgExeBin

// .proto.HomeOfflineMsgBin msg = 1;
inline bool HomeOfflineMsgExeBin::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void HomeOfflineMsgExeBin::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
inline const ::proto::HomeOfflineMsgBin& HomeOfflineMsgExeBin::msg() const {
  const ::proto::HomeOfflineMsgBin* p = msg_;
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgExeBin.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeOfflineMsgBin*>(
      &::proto::_HomeOfflineMsgBin_default_instance_);
}
inline ::proto::HomeOfflineMsgBin* HomeOfflineMsgExeBin::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::HomeOfflineMsgBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeOfflineMsgExeBin.msg)
  return msg_;
}
inline ::proto::HomeOfflineMsgBin* HomeOfflineMsgExeBin::release_msg() {
  // @@protoc_insertion_point(field_release:proto.HomeOfflineMsgExeBin.msg)
  
  ::proto::HomeOfflineMsgBin* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void HomeOfflineMsgExeBin::set_allocated_msg(::proto::HomeOfflineMsgBin* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeOfflineMsgExeBin.msg)
}

// uint32 exe_times = 2;
inline void HomeOfflineMsgExeBin::clear_exe_times() {
  exe_times_ = 0u;
}
inline ::google::protobuf::uint32 HomeOfflineMsgExeBin::exe_times() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgExeBin.exe_times)
  return exe_times_;
}
inline void HomeOfflineMsgExeBin::set_exe_times(::google::protobuf::uint32 value) {
  
  exe_times_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOfflineMsgExeBin.exe_times)
}

// -------------------------------------------------------------------

// HomeOfflineMsgCompBin

// uint32 index = 1;
inline void HomeOfflineMsgCompBin::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 HomeOfflineMsgCompBin::index() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgCompBin.index)
  return index_;
}
inline void HomeOfflineMsgCompBin::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOfflineMsgCompBin.index)
}

// repeated .proto.HomeOfflineMsgExeBin next_offline_msg_list = 2;
inline int HomeOfflineMsgCompBin::next_offline_msg_list_size() const {
  return next_offline_msg_list_.size();
}
inline void HomeOfflineMsgCompBin::clear_next_offline_msg_list() {
  next_offline_msg_list_.Clear();
}
inline const ::proto::HomeOfflineMsgExeBin& HomeOfflineMsgCompBin::next_offline_msg_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgCompBin.next_offline_msg_list)
  return next_offline_msg_list_.Get(index);
}
inline ::proto::HomeOfflineMsgExeBin* HomeOfflineMsgCompBin::mutable_next_offline_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeOfflineMsgCompBin.next_offline_msg_list)
  return next_offline_msg_list_.Mutable(index);
}
inline ::proto::HomeOfflineMsgExeBin* HomeOfflineMsgCompBin::add_next_offline_msg_list() {
  // @@protoc_insertion_point(field_add:proto.HomeOfflineMsgCompBin.next_offline_msg_list)
  return next_offline_msg_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeOfflineMsgExeBin >*
HomeOfflineMsgCompBin::mutable_next_offline_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeOfflineMsgCompBin.next_offline_msg_list)
  return &next_offline_msg_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeOfflineMsgExeBin >&
HomeOfflineMsgCompBin::next_offline_msg_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeOfflineMsgCompBin.next_offline_msg_list)
  return next_offline_msg_list_;
}

// -------------------------------------------------------------------

// HomeFurnitureMakeBin

// repeated .proto.FurnitureMakeSlotsBin furniture_make_slots_bin_list = 1;
inline int HomeFurnitureMakeBin::furniture_make_slots_bin_list_size() const {
  return furniture_make_slots_bin_list_.size();
}
inline void HomeFurnitureMakeBin::clear_furniture_make_slots_bin_list() {
  furniture_make_slots_bin_list_.Clear();
}
inline const ::proto::FurnitureMakeSlotsBin& HomeFurnitureMakeBin::furniture_make_slots_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeFurnitureMakeBin.furniture_make_slots_bin_list)
  return furniture_make_slots_bin_list_.Get(index);
}
inline ::proto::FurnitureMakeSlotsBin* HomeFurnitureMakeBin::mutable_furniture_make_slots_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeFurnitureMakeBin.furniture_make_slots_bin_list)
  return furniture_make_slots_bin_list_.Mutable(index);
}
inline ::proto::FurnitureMakeSlotsBin* HomeFurnitureMakeBin::add_furniture_make_slots_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeFurnitureMakeBin.furniture_make_slots_bin_list)
  return furniture_make_slots_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::FurnitureMakeSlotsBin >*
HomeFurnitureMakeBin::mutable_furniture_make_slots_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeFurnitureMakeBin.furniture_make_slots_bin_list)
  return &furniture_make_slots_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::FurnitureMakeSlotsBin >&
HomeFurnitureMakeBin::furniture_make_slots_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeFurnitureMakeBin.furniture_make_slots_bin_list)
  return furniture_make_slots_bin_list_;
}

// -------------------------------------------------------------------

// HomeLimitedShopPoolRecordBin

// uint32 pool_id = 1;
inline void HomeLimitedShopPoolRecordBin::clear_pool_id() {
  pool_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeLimitedShopPoolRecordBin::pool_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopPoolRecordBin.pool_id)
  return pool_id_;
}
inline void HomeLimitedShopPoolRecordBin::set_pool_id(::google::protobuf::uint32 value) {
  
  pool_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopPoolRecordBin.pool_id)
}

// repeated uint32 goods_id_list = 2;
inline int HomeLimitedShopPoolRecordBin::goods_id_list_size() const {
  return goods_id_list_.size();
}
inline void HomeLimitedShopPoolRecordBin::clear_goods_id_list() {
  goods_id_list_.Clear();
}
inline ::google::protobuf::uint32 HomeLimitedShopPoolRecordBin::goods_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopPoolRecordBin.goods_id_list)
  return goods_id_list_.Get(index);
}
inline void HomeLimitedShopPoolRecordBin::set_goods_id_list(int index, ::google::protobuf::uint32 value) {
  goods_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopPoolRecordBin.goods_id_list)
}
inline void HomeLimitedShopPoolRecordBin::add_goods_id_list(::google::protobuf::uint32 value) {
  goods_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomeLimitedShopPoolRecordBin.goods_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HomeLimitedShopPoolRecordBin::goods_id_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeLimitedShopPoolRecordBin.goods_id_list)
  return goods_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HomeLimitedShopPoolRecordBin::mutable_goods_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeLimitedShopPoolRecordBin.goods_id_list)
  return &goods_id_list_;
}

// -------------------------------------------------------------------

// HomeLimitedShopGoodsInfoBin

// uint32 goods_id = 1;
inline void HomeLimitedShopGoodsInfoBin::clear_goods_id() {
  goods_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeLimitedShopGoodsInfoBin::goods_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopGoodsInfoBin.goods_id)
  return goods_id_;
}
inline void HomeLimitedShopGoodsInfoBin::set_goods_id(::google::protobuf::uint32 value) {
  
  goods_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopGoodsInfoBin.goods_id)
}

// uint32 buy_num = 2;
inline void HomeLimitedShopGoodsInfoBin::clear_buy_num() {
  buy_num_ = 0u;
}
inline ::google::protobuf::uint32 HomeLimitedShopGoodsInfoBin::buy_num() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopGoodsInfoBin.buy_num)
  return buy_num_;
}
inline void HomeLimitedShopGoodsInfoBin::set_buy_num(::google::protobuf::uint32 value) {
  
  buy_num_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopGoodsInfoBin.buy_num)
}

// -------------------------------------------------------------------

// HomeLimitedShopNPCPosBin

// uint32 module_id = 1;
inline void HomeLimitedShopNPCPosBin::clear_module_id() {
  module_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeLimitedShopNPCPosBin::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopNPCPosBin.module_id)
  return module_id_;
}
inline void HomeLimitedShopNPCPosBin::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopNPCPosBin.module_id)
}

// uint32 scene_id = 4;
inline void HomeLimitedShopNPCPosBin::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeLimitedShopNPCPosBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopNPCPosBin.scene_id)
  return scene_id_;
}
inline void HomeLimitedShopNPCPosBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopNPCPosBin.scene_id)
}

// uint32 block_id = 5;
inline void HomeLimitedShopNPCPosBin::clear_block_id() {
  block_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeLimitedShopNPCPosBin::block_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopNPCPosBin.block_id)
  return block_id_;
}
inline void HomeLimitedShopNPCPosBin::set_block_id(::google::protobuf::uint32 value) {
  
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopNPCPosBin.block_id)
}

// uint32 index = 6;
inline void HomeLimitedShopNPCPosBin::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 HomeLimitedShopNPCPosBin::index() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopNPCPosBin.index)
  return index_;
}
inline void HomeLimitedShopNPCPosBin::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopNPCPosBin.index)
}

// -------------------------------------------------------------------

// HomeLimitedShopBin

// uint32 last_refresh_time = 1;
inline void HomeLimitedShopBin::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
inline ::google::protobuf::uint32 HomeLimitedShopBin::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopBin.last_refresh_time)
  return last_refresh_time_;
}
inline void HomeLimitedShopBin::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeLimitedShopBin.last_refresh_time)
}

// repeated .proto.HomeLimitedShopPoolRecordBin pool_record_bin_list = 3;
inline int HomeLimitedShopBin::pool_record_bin_list_size() const {
  return pool_record_bin_list_.size();
}
inline void HomeLimitedShopBin::clear_pool_record_bin_list() {
  pool_record_bin_list_.Clear();
}
inline const ::proto::HomeLimitedShopPoolRecordBin& HomeLimitedShopBin::pool_record_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopBin.pool_record_bin_list)
  return pool_record_bin_list_.Get(index);
}
inline ::proto::HomeLimitedShopPoolRecordBin* HomeLimitedShopBin::mutable_pool_record_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeLimitedShopBin.pool_record_bin_list)
  return pool_record_bin_list_.Mutable(index);
}
inline ::proto::HomeLimitedShopPoolRecordBin* HomeLimitedShopBin::add_pool_record_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeLimitedShopBin.pool_record_bin_list)
  return pool_record_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopPoolRecordBin >*
HomeLimitedShopBin::mutable_pool_record_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeLimitedShopBin.pool_record_bin_list)
  return &pool_record_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopPoolRecordBin >&
HomeLimitedShopBin::pool_record_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeLimitedShopBin.pool_record_bin_list)
  return pool_record_bin_list_;
}

// repeated .proto.HomeLimitedShopGoodsInfoBin goods_info_bin_list = 4;
inline int HomeLimitedShopBin::goods_info_bin_list_size() const {
  return goods_info_bin_list_.size();
}
inline void HomeLimitedShopBin::clear_goods_info_bin_list() {
  goods_info_bin_list_.Clear();
}
inline const ::proto::HomeLimitedShopGoodsInfoBin& HomeLimitedShopBin::goods_info_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopBin.goods_info_bin_list)
  return goods_info_bin_list_.Get(index);
}
inline ::proto::HomeLimitedShopGoodsInfoBin* HomeLimitedShopBin::mutable_goods_info_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeLimitedShopBin.goods_info_bin_list)
  return goods_info_bin_list_.Mutable(index);
}
inline ::proto::HomeLimitedShopGoodsInfoBin* HomeLimitedShopBin::add_goods_info_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeLimitedShopBin.goods_info_bin_list)
  return goods_info_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopGoodsInfoBin >*
HomeLimitedShopBin::mutable_goods_info_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeLimitedShopBin.goods_info_bin_list)
  return &goods_info_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopGoodsInfoBin >&
HomeLimitedShopBin::goods_info_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeLimitedShopBin.goods_info_bin_list)
  return goods_info_bin_list_;
}

// repeated .proto.HomeLimitedShopNPCPosBin npc_pos_bin_list = 5;
inline int HomeLimitedShopBin::npc_pos_bin_list_size() const {
  return npc_pos_bin_list_.size();
}
inline void HomeLimitedShopBin::clear_npc_pos_bin_list() {
  npc_pos_bin_list_.Clear();
}
inline const ::proto::HomeLimitedShopNPCPosBin& HomeLimitedShopBin::npc_pos_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeLimitedShopBin.npc_pos_bin_list)
  return npc_pos_bin_list_.Get(index);
}
inline ::proto::HomeLimitedShopNPCPosBin* HomeLimitedShopBin::mutable_npc_pos_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeLimitedShopBin.npc_pos_bin_list)
  return npc_pos_bin_list_.Mutable(index);
}
inline ::proto::HomeLimitedShopNPCPosBin* HomeLimitedShopBin::add_npc_pos_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeLimitedShopBin.npc_pos_bin_list)
  return npc_pos_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopNPCPosBin >*
HomeLimitedShopBin::mutable_npc_pos_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeLimitedShopBin.npc_pos_bin_list)
  return &npc_pos_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeLimitedShopNPCPosBin >&
HomeLimitedShopBin::npc_pos_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeLimitedShopBin.npc_pos_bin_list)
  return npc_pos_bin_list_;
}

// -------------------------------------------------------------------

// HomePlantSubFieldBin

// uint32 index = 1;
inline void HomePlantSubFieldBin::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 HomePlantSubFieldBin::index() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantSubFieldBin.index)
  return index_;
}
inline void HomePlantSubFieldBin::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantSubFieldBin.index)
}

// uint32 seed_id = 2;
inline void HomePlantSubFieldBin::clear_seed_id() {
  seed_id_ = 0u;
}
inline ::google::protobuf::uint32 HomePlantSubFieldBin::seed_id() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantSubFieldBin.seed_id)
  return seed_id_;
}
inline void HomePlantSubFieldBin::set_seed_id(::google::protobuf::uint32 value) {
  
  seed_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantSubFieldBin.seed_id)
}

// uint32 grow_time = 3;
inline void HomePlantSubFieldBin::clear_grow_time() {
  grow_time_ = 0u;
}
inline ::google::protobuf::uint32 HomePlantSubFieldBin::grow_time() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantSubFieldBin.grow_time)
  return grow_time_;
}
inline void HomePlantSubFieldBin::set_grow_time(::google::protobuf::uint32 value) {
  
  grow_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantSubFieldBin.grow_time)
}

// uint32 last_update_time = 4;
inline void HomePlantSubFieldBin::clear_last_update_time() {
  last_update_time_ = 0u;
}
inline ::google::protobuf::uint32 HomePlantSubFieldBin::last_update_time() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantSubFieldBin.last_update_time)
  return last_update_time_;
}
inline void HomePlantSubFieldBin::set_last_update_time(::google::protobuf::uint32 value) {
  
  last_update_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantSubFieldBin.last_update_time)
}

// repeated uint32 gather_index_list = 5;
inline int HomePlantSubFieldBin::gather_index_list_size() const {
  return gather_index_list_.size();
}
inline void HomePlantSubFieldBin::clear_gather_index_list() {
  gather_index_list_.Clear();
}
inline ::google::protobuf::uint32 HomePlantSubFieldBin::gather_index_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomePlantSubFieldBin.gather_index_list)
  return gather_index_list_.Get(index);
}
inline void HomePlantSubFieldBin::set_gather_index_list(int index, ::google::protobuf::uint32 value) {
  gather_index_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomePlantSubFieldBin.gather_index_list)
}
inline void HomePlantSubFieldBin::add_gather_index_list(::google::protobuf::uint32 value) {
  gather_index_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomePlantSubFieldBin.gather_index_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HomePlantSubFieldBin::gather_index_list() const {
  // @@protoc_insertion_point(field_list:proto.HomePlantSubFieldBin.gather_index_list)
  return gather_index_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HomePlantSubFieldBin::mutable_gather_index_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomePlantSubFieldBin.gather_index_list)
  return &gather_index_list_;
}

// uint32 home_gather_id = 6;
inline void HomePlantSubFieldBin::clear_home_gather_id() {
  home_gather_id_ = 0u;
}
inline ::google::protobuf::uint32 HomePlantSubFieldBin::home_gather_id() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantSubFieldBin.home_gather_id)
  return home_gather_id_;
}
inline void HomePlantSubFieldBin::set_home_gather_id(::google::protobuf::uint32 value) {
  
  home_gather_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantSubFieldBin.home_gather_id)
}

// -------------------------------------------------------------------

// HomePlantFieldBin

// uint32 module_id = 1;
inline void HomePlantFieldBin::clear_module_id() {
  module_id_ = 0u;
}
inline ::google::protobuf::uint32 HomePlantFieldBin::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantFieldBin.module_id)
  return module_id_;
}
inline void HomePlantFieldBin::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantFieldBin.module_id)
}

// uint32 scene_id = 2;
inline void HomePlantFieldBin::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 HomePlantFieldBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantFieldBin.scene_id)
  return scene_id_;
}
inline void HomePlantFieldBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantFieldBin.scene_id)
}

// uint32 guid = 3;
inline void HomePlantFieldBin::clear_guid() {
  guid_ = 0u;
}
inline ::google::protobuf::uint32 HomePlantFieldBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantFieldBin.guid)
  return guid_;
}
inline void HomePlantFieldBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantFieldBin.guid)
}

// uint32 furniture_id = 4;
inline void HomePlantFieldBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
inline ::google::protobuf::uint32 HomePlantFieldBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomePlantFieldBin.furniture_id)
  return furniture_id_;
}
inline void HomePlantFieldBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomePlantFieldBin.furniture_id)
}

// repeated .proto.HomePlantSubFieldBin sub_field_bin_list = 5;
inline int HomePlantFieldBin::sub_field_bin_list_size() const {
  return sub_field_bin_list_.size();
}
inline void HomePlantFieldBin::clear_sub_field_bin_list() {
  sub_field_bin_list_.Clear();
}
inline const ::proto::HomePlantSubFieldBin& HomePlantFieldBin::sub_field_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomePlantFieldBin.sub_field_bin_list)
  return sub_field_bin_list_.Get(index);
}
inline ::proto::HomePlantSubFieldBin* HomePlantFieldBin::mutable_sub_field_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomePlantFieldBin.sub_field_bin_list)
  return sub_field_bin_list_.Mutable(index);
}
inline ::proto::HomePlantSubFieldBin* HomePlantFieldBin::add_sub_field_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomePlantFieldBin.sub_field_bin_list)
  return sub_field_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomePlantSubFieldBin >*
HomePlantFieldBin::mutable_sub_field_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomePlantFieldBin.sub_field_bin_list)
  return &sub_field_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomePlantSubFieldBin >&
HomePlantFieldBin::sub_field_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomePlantFieldBin.sub_field_bin_list)
  return sub_field_bin_list_;
}

// -------------------------------------------------------------------

// HomePlantBin

// repeated .proto.HomePlantFieldBin field_bin_list = 1;
inline int HomePlantBin::field_bin_list_size() const {
  return field_bin_list_.size();
}
inline void HomePlantBin::clear_field_bin_list() {
  field_bin_list_.Clear();
}
inline const ::proto::HomePlantFieldBin& HomePlantBin::field_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomePlantBin.field_bin_list)
  return field_bin_list_.Get(index);
}
inline ::proto::HomePlantFieldBin* HomePlantBin::mutable_field_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomePlantBin.field_bin_list)
  return field_bin_list_.Mutable(index);
}
inline ::proto::HomePlantFieldBin* HomePlantBin::add_field_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomePlantBin.field_bin_list)
  return field_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomePlantFieldBin >*
HomePlantBin::mutable_field_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomePlantBin.field_bin_list)
  return &field_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomePlantFieldBin >&
HomePlantBin::field_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomePlantBin.field_bin_list)
  return field_bin_list_;
}

// -------------------------------------------------------------------

// HomeFishpondFarmingBin

// uint32 scene_id = 1;
inline void HomeFishpondFarmingBin::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeFishpondFarmingBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeFishpondFarmingBin.scene_id)
  return scene_id_;
}
inline void HomeFishpondFarmingBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFishpondFarmingBin.scene_id)
}

// uint32 fishpond_guid = 2;
inline void HomeFishpondFarmingBin::clear_fishpond_guid() {
  fishpond_guid_ = 0u;
}
inline ::google::protobuf::uint32 HomeFishpondFarmingBin::fishpond_guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeFishpondFarmingBin.fishpond_guid)
  return fishpond_guid_;
}
inline void HomeFishpondFarmingBin::set_fishpond_guid(::google::protobuf::uint32 value) {
  
  fishpond_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFishpondFarmingBin.fishpond_guid)
}

// uint32 furniture_id = 3;
inline void HomeFishpondFarmingBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeFishpondFarmingBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeFishpondFarmingBin.furniture_id)
  return furniture_id_;
}
inline void HomeFishpondFarmingBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeFishpondFarmingBin.furniture_id)
}

// repeated uint32 fish_id_list = 4;
inline int HomeFishpondFarmingBin::fish_id_list_size() const {
  return fish_id_list_.size();
}
inline void HomeFishpondFarmingBin::clear_fish_id_list() {
  fish_id_list_.Clear();
}
inline ::google::protobuf::uint32 HomeFishpondFarmingBin::fish_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeFishpondFarmingBin.fish_id_list)
  return fish_id_list_.Get(index);
}
inline void HomeFishpondFarmingBin::set_fish_id_list(int index, ::google::protobuf::uint32 value) {
  fish_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomeFishpondFarmingBin.fish_id_list)
}
inline void HomeFishpondFarmingBin::add_fish_id_list(::google::protobuf::uint32 value) {
  fish_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomeFishpondFarmingBin.fish_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HomeFishpondFarmingBin::fish_id_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeFishpondFarmingBin.fish_id_list)
  return fish_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HomeFishpondFarmingBin::mutable_fish_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeFishpondFarmingBin.fish_id_list)
  return &fish_id_list_;
}

// -------------------------------------------------------------------

// HomeScenePointFishFarmingBin

// uint32 scene_id = 1;
inline void HomeScenePointFishFarmingBin::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeScenePointFishFarmingBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeScenePointFishFarmingBin.scene_id)
  return scene_id_;
}
inline void HomeScenePointFishFarmingBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeScenePointFishFarmingBin.scene_id)
}

// uint32 local_entity_id = 2;
inline void HomeScenePointFishFarmingBin::clear_local_entity_id() {
  local_entity_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeScenePointFishFarmingBin::local_entity_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeScenePointFishFarmingBin.local_entity_id)
  return local_entity_id_;
}
inline void HomeScenePointFishFarmingBin::set_local_entity_id(::google::protobuf::uint32 value) {
  
  local_entity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeScenePointFishFarmingBin.local_entity_id)
}

// repeated uint32 fish_id_list = 4;
inline int HomeScenePointFishFarmingBin::fish_id_list_size() const {
  return fish_id_list_.size();
}
inline void HomeScenePointFishFarmingBin::clear_fish_id_list() {
  fish_id_list_.Clear();
}
inline ::google::protobuf::uint32 HomeScenePointFishFarmingBin::fish_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeScenePointFishFarmingBin.fish_id_list)
  return fish_id_list_.Get(index);
}
inline void HomeScenePointFishFarmingBin::set_fish_id_list(int index, ::google::protobuf::uint32 value) {
  fish_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomeScenePointFishFarmingBin.fish_id_list)
}
inline void HomeScenePointFishFarmingBin::add_fish_id_list(::google::protobuf::uint32 value) {
  fish_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomeScenePointFishFarmingBin.fish_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HomeScenePointFishFarmingBin::fish_id_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeScenePointFishFarmingBin.fish_id_list)
  return fish_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HomeScenePointFishFarmingBin::mutable_fish_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeScenePointFishFarmingBin.fish_id_list)
  return &fish_id_list_;
}

// -------------------------------------------------------------------

// HomeModuleFishFarmingBin

// uint32 module_id = 1;
inline void HomeModuleFishFarmingBin::clear_module_id() {
  module_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeModuleFishFarmingBin::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleFishFarmingBin.module_id)
  return module_id_;
}
inline void HomeModuleFishFarmingBin::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeModuleFishFarmingBin.module_id)
}

// repeated .proto.HomeFishpondFarmingBin fishpond_farming_bin_list = 2;
inline int HomeModuleFishFarmingBin::fishpond_farming_bin_list_size() const {
  return fishpond_farming_bin_list_.size();
}
inline void HomeModuleFishFarmingBin::clear_fishpond_farming_bin_list() {
  fishpond_farming_bin_list_.Clear();
}
inline const ::proto::HomeFishpondFarmingBin& HomeModuleFishFarmingBin::fishpond_farming_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleFishFarmingBin.fishpond_farming_bin_list)
  return fishpond_farming_bin_list_.Get(index);
}
inline ::proto::HomeFishpondFarmingBin* HomeModuleFishFarmingBin::mutable_fishpond_farming_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeModuleFishFarmingBin.fishpond_farming_bin_list)
  return fishpond_farming_bin_list_.Mutable(index);
}
inline ::proto::HomeFishpondFarmingBin* HomeModuleFishFarmingBin::add_fishpond_farming_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeModuleFishFarmingBin.fishpond_farming_bin_list)
  return fishpond_farming_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeFishpondFarmingBin >*
HomeModuleFishFarmingBin::mutable_fishpond_farming_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeModuleFishFarmingBin.fishpond_farming_bin_list)
  return &fishpond_farming_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeFishpondFarmingBin >&
HomeModuleFishFarmingBin::fishpond_farming_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeModuleFishFarmingBin.fishpond_farming_bin_list)
  return fishpond_farming_bin_list_;
}

// repeated .proto.HomeScenePointFishFarmingBin scene_point_fish_farming_bin_list = 3;
inline int HomeModuleFishFarmingBin::scene_point_fish_farming_bin_list_size() const {
  return scene_point_fish_farming_bin_list_.size();
}
inline void HomeModuleFishFarmingBin::clear_scene_point_fish_farming_bin_list() {
  scene_point_fish_farming_bin_list_.Clear();
}
inline const ::proto::HomeScenePointFishFarmingBin& HomeModuleFishFarmingBin::scene_point_fish_farming_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleFishFarmingBin.scene_point_fish_farming_bin_list)
  return scene_point_fish_farming_bin_list_.Get(index);
}
inline ::proto::HomeScenePointFishFarmingBin* HomeModuleFishFarmingBin::mutable_scene_point_fish_farming_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeModuleFishFarmingBin.scene_point_fish_farming_bin_list)
  return scene_point_fish_farming_bin_list_.Mutable(index);
}
inline ::proto::HomeScenePointFishFarmingBin* HomeModuleFishFarmingBin::add_scene_point_fish_farming_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeModuleFishFarmingBin.scene_point_fish_farming_bin_list)
  return scene_point_fish_farming_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeScenePointFishFarmingBin >*
HomeModuleFishFarmingBin::mutable_scene_point_fish_farming_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeModuleFishFarmingBin.scene_point_fish_farming_bin_list)
  return &scene_point_fish_farming_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeScenePointFishFarmingBin >&
HomeModuleFishFarmingBin::scene_point_fish_farming_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeModuleFishFarmingBin.scene_point_fish_farming_bin_list)
  return scene_point_fish_farming_bin_list_;
}

// -------------------------------------------------------------------

// HomeFishFarmingBin

// repeated .proto.HomeModuleFishFarmingBin module_fish_farming_bin_list = 1;
inline int HomeFishFarmingBin::module_fish_farming_bin_list_size() const {
  return module_fish_farming_bin_list_.size();
}
inline void HomeFishFarmingBin::clear_module_fish_farming_bin_list() {
  module_fish_farming_bin_list_.Clear();
}
inline const ::proto::HomeModuleFishFarmingBin& HomeFishFarmingBin::module_fish_farming_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeFishFarmingBin.module_fish_farming_bin_list)
  return module_fish_farming_bin_list_.Get(index);
}
inline ::proto::HomeModuleFishFarmingBin* HomeFishFarmingBin::mutable_module_fish_farming_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeFishFarmingBin.module_fish_farming_bin_list)
  return module_fish_farming_bin_list_.Mutable(index);
}
inline ::proto::HomeModuleFishFarmingBin* HomeFishFarmingBin::add_module_fish_farming_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeFishFarmingBin.module_fish_farming_bin_list)
  return module_fish_farming_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleFishFarmingBin >*
HomeFishFarmingBin::mutable_module_fish_farming_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeFishFarmingBin.module_fish_farming_bin_list)
  return &module_fish_farming_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleFishFarmingBin >&
HomeFishFarmingBin::module_fish_farming_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeFishFarmingBin.module_fish_farming_bin_list)
  return module_fish_farming_bin_list_;
}

// -------------------------------------------------------------------

// HomeCustomFurnitureNodeInfoBin

// int32 parent_index = 1;
inline void HomeCustomFurnitureNodeInfoBin::clear_parent_index() {
  parent_index_ = 0;
}
inline ::google::protobuf::int32 HomeCustomFurnitureNodeInfoBin::parent_index() const {
  // @@protoc_insertion_point(field_get:proto.HomeCustomFurnitureNodeInfoBin.parent_index)
  return parent_index_;
}
inline void HomeCustomFurnitureNodeInfoBin::set_parent_index(::google::protobuf::int32 value) {
  
  parent_index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeCustomFurnitureNodeInfoBin.parent_index)
}

// uint32 furniture_id = 2;
inline void HomeCustomFurnitureNodeInfoBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeCustomFurnitureNodeInfoBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeCustomFurnitureNodeInfoBin.furniture_id)
  return furniture_id_;
}
inline void HomeCustomFurnitureNodeInfoBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeCustomFurnitureNodeInfoBin.furniture_id)
}

// string slot_identifier = 3;
inline void HomeCustomFurnitureNodeInfoBin::clear_slot_identifier() {
  slot_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HomeCustomFurnitureNodeInfoBin::slot_identifier() const {
  // @@protoc_insertion_point(field_get:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
  return slot_identifier_.GetNoArena();
}
inline void HomeCustomFurnitureNodeInfoBin::set_slot_identifier(const ::std::string& value) {
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
}
#if LANG_CXX11
inline void HomeCustomFurnitureNodeInfoBin::set_slot_identifier(::std::string&& value) {
  
  slot_identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
}
#endif
inline void HomeCustomFurnitureNodeInfoBin::set_slot_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
}
inline void HomeCustomFurnitureNodeInfoBin::set_slot_identifier(const char* value, size_t size) {
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
}
inline ::std::string* HomeCustomFurnitureNodeInfoBin::mutable_slot_identifier() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
  return slot_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HomeCustomFurnitureNodeInfoBin::release_slot_identifier() {
  // @@protoc_insertion_point(field_release:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
  
  return slot_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomeCustomFurnitureNodeInfoBin::set_allocated_slot_identifier(::std::string* slot_identifier) {
  if (slot_identifier != NULL) {
    
  } else {
    
  }
  slot_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), slot_identifier);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeCustomFurnitureNodeInfoBin.slot_identifier)
}

// -------------------------------------------------------------------

// HomeOneCustomFurnitureBin

// uint32 scene_id = 1;
inline void HomeOneCustomFurnitureBin::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeOneCustomFurnitureBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeOneCustomFurnitureBin.scene_id)
  return scene_id_;
}
inline void HomeOneCustomFurnitureBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOneCustomFurnitureBin.scene_id)
}

// uint32 guid = 2;
inline void HomeOneCustomFurnitureBin::clear_guid() {
  guid_ = 0u;
}
inline ::google::protobuf::uint32 HomeOneCustomFurnitureBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeOneCustomFurnitureBin.guid)
  return guid_;
}
inline void HomeOneCustomFurnitureBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOneCustomFurnitureBin.guid)
}

// uint32 furniture_id = 3;
inline void HomeOneCustomFurnitureBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeOneCustomFurnitureBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeOneCustomFurnitureBin.furniture_id)
  return furniture_id_;
}
inline void HomeOneCustomFurnitureBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOneCustomFurnitureBin.furniture_id)
}

// repeated .proto.HomeCustomFurnitureNodeInfoBin sub_furniture_list = 4;
inline int HomeOneCustomFurnitureBin::sub_furniture_list_size() const {
  return sub_furniture_list_.size();
}
inline void HomeOneCustomFurnitureBin::clear_sub_furniture_list() {
  sub_furniture_list_.Clear();
}
inline const ::proto::HomeCustomFurnitureNodeInfoBin& HomeOneCustomFurnitureBin::sub_furniture_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeOneCustomFurnitureBin.sub_furniture_list)
  return sub_furniture_list_.Get(index);
}
inline ::proto::HomeCustomFurnitureNodeInfoBin* HomeOneCustomFurnitureBin::mutable_sub_furniture_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeOneCustomFurnitureBin.sub_furniture_list)
  return sub_furniture_list_.Mutable(index);
}
inline ::proto::HomeCustomFurnitureNodeInfoBin* HomeOneCustomFurnitureBin::add_sub_furniture_list() {
  // @@protoc_insertion_point(field_add:proto.HomeOneCustomFurnitureBin.sub_furniture_list)
  return sub_furniture_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeCustomFurnitureNodeInfoBin >*
HomeOneCustomFurnitureBin::mutable_sub_furniture_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeOneCustomFurnitureBin.sub_furniture_list)
  return &sub_furniture_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeCustomFurnitureNodeInfoBin >&
HomeOneCustomFurnitureBin::sub_furniture_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeOneCustomFurnitureBin.sub_furniture_list)
  return sub_furniture_list_;
}

// -------------------------------------------------------------------

// HomeModuleCustomFurnitureBin

// uint32 module_id = 1;
inline void HomeModuleCustomFurnitureBin::clear_module_id() {
  module_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeModuleCustomFurnitureBin::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleCustomFurnitureBin.module_id)
  return module_id_;
}
inline void HomeModuleCustomFurnitureBin::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeModuleCustomFurnitureBin.module_id)
}

// repeated .proto.HomeOneCustomFurnitureBin custom_furniture_bin_list = 2;
inline int HomeModuleCustomFurnitureBin::custom_furniture_bin_list_size() const {
  return custom_furniture_bin_list_.size();
}
inline void HomeModuleCustomFurnitureBin::clear_custom_furniture_bin_list() {
  custom_furniture_bin_list_.Clear();
}
inline const ::proto::HomeOneCustomFurnitureBin& HomeModuleCustomFurnitureBin::custom_furniture_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeModuleCustomFurnitureBin.custom_furniture_bin_list)
  return custom_furniture_bin_list_.Get(index);
}
inline ::proto::HomeOneCustomFurnitureBin* HomeModuleCustomFurnitureBin::mutable_custom_furniture_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeModuleCustomFurnitureBin.custom_furniture_bin_list)
  return custom_furniture_bin_list_.Mutable(index);
}
inline ::proto::HomeOneCustomFurnitureBin* HomeModuleCustomFurnitureBin::add_custom_furniture_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeModuleCustomFurnitureBin.custom_furniture_bin_list)
  return custom_furniture_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeOneCustomFurnitureBin >*
HomeModuleCustomFurnitureBin::mutable_custom_furniture_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeModuleCustomFurnitureBin.custom_furniture_bin_list)
  return &custom_furniture_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeOneCustomFurnitureBin >&
HomeModuleCustomFurnitureBin::custom_furniture_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeModuleCustomFurnitureBin.custom_furniture_bin_list)
  return custom_furniture_bin_list_;
}

// -------------------------------------------------------------------

// HomeCustomFurnitureBin

// repeated .proto.HomeModuleCustomFurnitureBin module_custom_furniture_bin_list = 1;
inline int HomeCustomFurnitureBin::module_custom_furniture_bin_list_size() const {
  return module_custom_furniture_bin_list_.size();
}
inline void HomeCustomFurnitureBin::clear_module_custom_furniture_bin_list() {
  module_custom_furniture_bin_list_.Clear();
}
inline const ::proto::HomeModuleCustomFurnitureBin& HomeCustomFurnitureBin::module_custom_furniture_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeCustomFurnitureBin.module_custom_furniture_bin_list)
  return module_custom_furniture_bin_list_.Get(index);
}
inline ::proto::HomeModuleCustomFurnitureBin* HomeCustomFurnitureBin::mutable_module_custom_furniture_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeCustomFurnitureBin.module_custom_furniture_bin_list)
  return module_custom_furniture_bin_list_.Mutable(index);
}
inline ::proto::HomeModuleCustomFurnitureBin* HomeCustomFurnitureBin::add_module_custom_furniture_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeCustomFurnitureBin.module_custom_furniture_bin_list)
  return module_custom_furniture_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleCustomFurnitureBin >*
HomeCustomFurnitureBin::mutable_module_custom_furniture_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeCustomFurnitureBin.module_custom_furniture_bin_list)
  return &module_custom_furniture_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeModuleCustomFurnitureBin >&
HomeCustomFurnitureBin::module_custom_furniture_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeCustomFurnitureBin.module_custom_furniture_bin_list)
  return module_custom_furniture_bin_list_;
}

// -------------------------------------------------------------------

// HomeOnePictureFrameBin

// uint32 scene_id = 1;
inline void HomeOnePictureFrameBin::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeOnePictureFrameBin::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeOnePictureFrameBin.scene_id)
  return scene_id_;
}
inline void HomeOnePictureFrameBin::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOnePictureFrameBin.scene_id)
}

// uint32 guid = 2;
inline void HomeOnePictureFrameBin::clear_guid() {
  guid_ = 0u;
}
inline ::google::protobuf::uint32 HomeOnePictureFrameBin::guid() const {
  // @@protoc_insertion_point(field_get:proto.HomeOnePictureFrameBin.guid)
  return guid_;
}
inline void HomeOnePictureFrameBin::set_guid(::google::protobuf::uint32 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOnePictureFrameBin.guid)
}

// uint32 furniture_id = 3;
inline void HomeOnePictureFrameBin::clear_furniture_id() {
  furniture_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeOnePictureFrameBin::furniture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeOnePictureFrameBin.furniture_id)
  return furniture_id_;
}
inline void HomeOnePictureFrameBin::set_furniture_id(::google::protobuf::uint32 value) {
  
  furniture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOnePictureFrameBin.furniture_id)
}

// uint32 picture_id = 4;
inline void HomeOnePictureFrameBin::clear_picture_id() {
  picture_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeOnePictureFrameBin::picture_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeOnePictureFrameBin.picture_id)
  return picture_id_;
}
inline void HomeOnePictureFrameBin::set_picture_id(::google::protobuf::uint32 value) {
  
  picture_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOnePictureFrameBin.picture_id)
}

// -------------------------------------------------------------------

// HomeModulePictureFrameBin

// uint32 module_id = 1;
inline void HomeModulePictureFrameBin::clear_module_id() {
  module_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeModulePictureFrameBin::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeModulePictureFrameBin.module_id)
  return module_id_;
}
inline void HomeModulePictureFrameBin::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeModulePictureFrameBin.module_id)
}

// repeated .proto.HomeOnePictureFrameBin picture_frame_bin_list = 2;
inline int HomeModulePictureFrameBin::picture_frame_bin_list_size() const {
  return picture_frame_bin_list_.size();
}
inline void HomeModulePictureFrameBin::clear_picture_frame_bin_list() {
  picture_frame_bin_list_.Clear();
}
inline const ::proto::HomeOnePictureFrameBin& HomeModulePictureFrameBin::picture_frame_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeModulePictureFrameBin.picture_frame_bin_list)
  return picture_frame_bin_list_.Get(index);
}
inline ::proto::HomeOnePictureFrameBin* HomeModulePictureFrameBin::mutable_picture_frame_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeModulePictureFrameBin.picture_frame_bin_list)
  return picture_frame_bin_list_.Mutable(index);
}
inline ::proto::HomeOnePictureFrameBin* HomeModulePictureFrameBin::add_picture_frame_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomeModulePictureFrameBin.picture_frame_bin_list)
  return picture_frame_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeOnePictureFrameBin >*
HomeModulePictureFrameBin::mutable_picture_frame_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeModulePictureFrameBin.picture_frame_bin_list)
  return &picture_frame_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeOnePictureFrameBin >&
HomeModulePictureFrameBin::picture_frame_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeModulePictureFrameBin.picture_frame_bin_list)
  return picture_frame_bin_list_;
}

// -------------------------------------------------------------------

// HomePictureFrameBin

// repeated .proto.HomeModulePictureFrameBin module_picture_frame_bin_list = 1;
inline int HomePictureFrameBin::module_picture_frame_bin_list_size() const {
  return module_picture_frame_bin_list_.size();
}
inline void HomePictureFrameBin::clear_module_picture_frame_bin_list() {
  module_picture_frame_bin_list_.Clear();
}
inline const ::proto::HomeModulePictureFrameBin& HomePictureFrameBin::module_picture_frame_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomePictureFrameBin.module_picture_frame_bin_list)
  return module_picture_frame_bin_list_.Get(index);
}
inline ::proto::HomeModulePictureFrameBin* HomePictureFrameBin::mutable_module_picture_frame_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomePictureFrameBin.module_picture_frame_bin_list)
  return module_picture_frame_bin_list_.Mutable(index);
}
inline ::proto::HomeModulePictureFrameBin* HomePictureFrameBin::add_module_picture_frame_bin_list() {
  // @@protoc_insertion_point(field_add:proto.HomePictureFrameBin.module_picture_frame_bin_list)
  return module_picture_frame_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeModulePictureFrameBin >*
HomePictureFrameBin::mutable_module_picture_frame_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomePictureFrameBin.module_picture_frame_bin_list)
  return &module_picture_frame_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeModulePictureFrameBin >&
HomePictureFrameBin::module_picture_frame_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.HomePictureFrameBin.module_picture_frame_bin_list)
  return module_picture_frame_bin_list_;
}

// -------------------------------------------------------------------

// HomeGroupPlayerInfoBin

// uint32 uid = 1;
inline void HomeGroupPlayerInfoBin::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 HomeGroupPlayerInfoBin::uid() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupPlayerInfoBin.uid)
  return uid_;
}
inline void HomeGroupPlayerInfoBin::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeGroupPlayerInfoBin.uid)
}

// string nickname = 2;
inline void HomeGroupPlayerInfoBin::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HomeGroupPlayerInfoBin::nickname() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupPlayerInfoBin.nickname)
  return nickname_.GetNoArena();
}
inline void HomeGroupPlayerInfoBin::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeGroupPlayerInfoBin.nickname)
}
#if LANG_CXX11
inline void HomeGroupPlayerInfoBin::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeGroupPlayerInfoBin.nickname)
}
#endif
inline void HomeGroupPlayerInfoBin::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeGroupPlayerInfoBin.nickname)
}
inline void HomeGroupPlayerInfoBin::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeGroupPlayerInfoBin.nickname)
}
inline ::std::string* HomeGroupPlayerInfoBin::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupPlayerInfoBin.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HomeGroupPlayerInfoBin::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupPlayerInfoBin.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomeGroupPlayerInfoBin::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupPlayerInfoBin.nickname)
}

// uint32 player_level = 3;
inline void HomeGroupPlayerInfoBin::clear_player_level() {
  player_level_ = 0u;
}
inline ::google::protobuf::uint32 HomeGroupPlayerInfoBin::player_level() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupPlayerInfoBin.player_level)
  return player_level_;
}
inline void HomeGroupPlayerInfoBin::set_player_level(::google::protobuf::uint32 value) {
  
  player_level_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeGroupPlayerInfoBin.player_level)
}

// .proto.ProfilePictureBin profile_picture = 4;
inline bool HomeGroupPlayerInfoBin::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
inline void HomeGroupPlayerInfoBin::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
inline const ::proto::ProfilePictureBin& HomeGroupPlayerInfoBin::profile_picture() const {
  const ::proto::ProfilePictureBin* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.HomeGroupPlayerInfoBin.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePictureBin*>(
      &::proto::_ProfilePictureBin_default_instance_);
}
inline ::proto::ProfilePictureBin* HomeGroupPlayerInfoBin::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePictureBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupPlayerInfoBin.profile_picture)
  return profile_picture_;
}
inline ::proto::ProfilePictureBin* HomeGroupPlayerInfoBin::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupPlayerInfoBin.profile_picture)
  
  ::proto::ProfilePictureBin* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
inline void HomeGroupPlayerInfoBin::set_allocated_profile_picture(::proto::ProfilePictureBin* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupPlayerInfoBin.profile_picture)
}

// string online_id = 5;
inline void HomeGroupPlayerInfoBin::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HomeGroupPlayerInfoBin::online_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupPlayerInfoBin.online_id)
  return online_id_.GetNoArena();
}
inline void HomeGroupPlayerInfoBin::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeGroupPlayerInfoBin.online_id)
}
#if LANG_CXX11
inline void HomeGroupPlayerInfoBin::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeGroupPlayerInfoBin.online_id)
}
#endif
inline void HomeGroupPlayerInfoBin::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeGroupPlayerInfoBin.online_id)
}
inline void HomeGroupPlayerInfoBin::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeGroupPlayerInfoBin.online_id)
}
inline ::std::string* HomeGroupPlayerInfoBin::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupPlayerInfoBin.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HomeGroupPlayerInfoBin::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupPlayerInfoBin.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomeGroupPlayerInfoBin::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupPlayerInfoBin.online_id)
}

// string psn_id = 6;
inline void HomeGroupPlayerInfoBin::clear_psn_id() {
  psn_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HomeGroupPlayerInfoBin::psn_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupPlayerInfoBin.psn_id)
  return psn_id_.GetNoArena();
}
inline void HomeGroupPlayerInfoBin::set_psn_id(const ::std::string& value) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeGroupPlayerInfoBin.psn_id)
}
#if LANG_CXX11
inline void HomeGroupPlayerInfoBin::set_psn_id(::std::string&& value) {
  
  psn_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeGroupPlayerInfoBin.psn_id)
}
#endif
inline void HomeGroupPlayerInfoBin::set_psn_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeGroupPlayerInfoBin.psn_id)
}
inline void HomeGroupPlayerInfoBin::set_psn_id(const char* value, size_t size) {
  
  psn_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeGroupPlayerInfoBin.psn_id)
}
inline ::std::string* HomeGroupPlayerInfoBin::mutable_psn_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupPlayerInfoBin.psn_id)
  return psn_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HomeGroupPlayerInfoBin::release_psn_id() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupPlayerInfoBin.psn_id)
  
  return psn_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomeGroupPlayerInfoBin::set_allocated_psn_id(::std::string* psn_id) {
  if (psn_id != NULL) {
    
  } else {
    
  }
  psn_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), psn_id);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupPlayerInfoBin.psn_id)
}

// -------------------------------------------------------------------

// HomeRacingGalleryRecordBin

// uint32 use_time = 1;
inline void HomeRacingGalleryRecordBin::clear_use_time() {
  use_time_ = 0u;
}
inline ::google::protobuf::uint32 HomeRacingGalleryRecordBin::use_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeRacingGalleryRecordBin.use_time)
  return use_time_;
}
inline void HomeRacingGalleryRecordBin::set_use_time(::google::protobuf::uint32 value) {
  
  use_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRacingGalleryRecordBin.use_time)
}

// .proto.HomeGroupPlayerInfoBin player_info = 2;
inline bool HomeRacingGalleryRecordBin::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
inline void HomeRacingGalleryRecordBin::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
inline const ::proto::HomeGroupPlayerInfoBin& HomeRacingGalleryRecordBin::player_info() const {
  const ::proto::HomeGroupPlayerInfoBin* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.HomeRacingGalleryRecordBin.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeGroupPlayerInfoBin*>(
      &::proto::_HomeGroupPlayerInfoBin_default_instance_);
}
inline ::proto::HomeGroupPlayerInfoBin* HomeRacingGalleryRecordBin::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::HomeGroupPlayerInfoBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeRacingGalleryRecordBin.player_info)
  return player_info_;
}
inline ::proto::HomeGroupPlayerInfoBin* HomeRacingGalleryRecordBin::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.HomeRacingGalleryRecordBin.player_info)
  
  ::proto::HomeGroupPlayerInfoBin* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void HomeRacingGalleryRecordBin::set_allocated_player_info(::proto::HomeGroupPlayerInfoBin* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeRacingGalleryRecordBin.player_info)
}

// uint32 timestamp = 3;
inline void HomeRacingGalleryRecordBin::clear_timestamp() {
  timestamp_ = 0u;
}
inline ::google::protobuf::uint32 HomeRacingGalleryRecordBin::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.HomeRacingGalleryRecordBin.timestamp)
  return timestamp_;
}
inline void HomeRacingGalleryRecordBin::set_timestamp(::google::protobuf::uint32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRacingGalleryRecordBin.timestamp)
}

// -------------------------------------------------------------------

// HomeRacingRecordBin

// repeated .proto.HomeRacingGalleryRecordBin record_list = 1;
inline int HomeRacingRecordBin::record_list_size() const {
  return record_list_.size();
}
inline void HomeRacingRecordBin::clear_record_list() {
  record_list_.Clear();
}
inline const ::proto::HomeRacingGalleryRecordBin& HomeRacingRecordBin::record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeRacingRecordBin.record_list)
  return record_list_.Get(index);
}
inline ::proto::HomeRacingGalleryRecordBin* HomeRacingRecordBin::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeRacingRecordBin.record_list)
  return record_list_.Mutable(index);
}
inline ::proto::HomeRacingGalleryRecordBin* HomeRacingRecordBin::add_record_list() {
  // @@protoc_insertion_point(field_add:proto.HomeRacingRecordBin.record_list)
  return record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeRacingGalleryRecordBin >*
HomeRacingRecordBin::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeRacingRecordBin.record_list)
  return &record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeRacingGalleryRecordBin >&
HomeRacingRecordBin::record_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeRacingRecordBin.record_list)
  return record_list_;
}

// -------------------------------------------------------------------

// HomeBalloonGalleryRecordBin

// uint32 score = 1;
inline void HomeBalloonGalleryRecordBin::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 HomeBalloonGalleryRecordBin::score() const {
  // @@protoc_insertion_point(field_get:proto.HomeBalloonGalleryRecordBin.score)
  return score_;
}
inline void HomeBalloonGalleryRecordBin::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBalloonGalleryRecordBin.score)
}

// uint32 hit_count = 2;
inline void HomeBalloonGalleryRecordBin::clear_hit_count() {
  hit_count_ = 0u;
}
inline ::google::protobuf::uint32 HomeBalloonGalleryRecordBin::hit_count() const {
  // @@protoc_insertion_point(field_get:proto.HomeBalloonGalleryRecordBin.hit_count)
  return hit_count_;
}
inline void HomeBalloonGalleryRecordBin::set_hit_count(::google::protobuf::uint32 value) {
  
  hit_count_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBalloonGalleryRecordBin.hit_count)
}

// .proto.HomeGroupPlayerInfoBin player_info = 3;
inline bool HomeBalloonGalleryRecordBin::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
inline void HomeBalloonGalleryRecordBin::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
inline const ::proto::HomeGroupPlayerInfoBin& HomeBalloonGalleryRecordBin::player_info() const {
  const ::proto::HomeGroupPlayerInfoBin* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.HomeBalloonGalleryRecordBin.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeGroupPlayerInfoBin*>(
      &::proto::_HomeGroupPlayerInfoBin_default_instance_);
}
inline ::proto::HomeGroupPlayerInfoBin* HomeBalloonGalleryRecordBin::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::HomeGroupPlayerInfoBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeBalloonGalleryRecordBin.player_info)
  return player_info_;
}
inline ::proto::HomeGroupPlayerInfoBin* HomeBalloonGalleryRecordBin::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.HomeBalloonGalleryRecordBin.player_info)
  
  ::proto::HomeGroupPlayerInfoBin* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void HomeBalloonGalleryRecordBin::set_allocated_player_info(::proto::HomeGroupPlayerInfoBin* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeBalloonGalleryRecordBin.player_info)
}

// uint32 timestamp = 4;
inline void HomeBalloonGalleryRecordBin::clear_timestamp() {
  timestamp_ = 0u;
}
inline ::google::protobuf::uint32 HomeBalloonGalleryRecordBin::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.HomeBalloonGalleryRecordBin.timestamp)
  return timestamp_;
}
inline void HomeBalloonGalleryRecordBin::set_timestamp(::google::protobuf::uint32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBalloonGalleryRecordBin.timestamp)
}

// -------------------------------------------------------------------

// HomeBalloonRecordBin

// repeated .proto.HomeBalloonGalleryRecordBin record_list = 1;
inline int HomeBalloonRecordBin::record_list_size() const {
  return record_list_.size();
}
inline void HomeBalloonRecordBin::clear_record_list() {
  record_list_.Clear();
}
inline const ::proto::HomeBalloonGalleryRecordBin& HomeBalloonRecordBin::record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeBalloonRecordBin.record_list)
  return record_list_.Get(index);
}
inline ::proto::HomeBalloonGalleryRecordBin* HomeBalloonRecordBin::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeBalloonRecordBin.record_list)
  return record_list_.Mutable(index);
}
inline ::proto::HomeBalloonGalleryRecordBin* HomeBalloonRecordBin::add_record_list() {
  // @@protoc_insertion_point(field_add:proto.HomeBalloonRecordBin.record_list)
  return record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeBalloonGalleryRecordBin >*
HomeBalloonRecordBin::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeBalloonRecordBin.record_list)
  return &record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeBalloonGalleryRecordBin >&
HomeBalloonRecordBin::record_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeBalloonRecordBin.record_list)
  return record_list_;
}

// -------------------------------------------------------------------

// HomeStakePlayRecordBin

// uint32 timestamp = 1;
inline void HomeStakePlayRecordBin::clear_timestamp() {
  timestamp_ = 0u;
}
inline ::google::protobuf::uint32 HomeStakePlayRecordBin::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.HomeStakePlayRecordBin.timestamp)
  return timestamp_;
}
inline void HomeStakePlayRecordBin::set_timestamp(::google::protobuf::uint32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeStakePlayRecordBin.timestamp)
}

// repeated .proto.HomeGroupPlayerInfoBin engaged_player_info_list = 2;
inline int HomeStakePlayRecordBin::engaged_player_info_list_size() const {
  return engaged_player_info_list_.size();
}
inline void HomeStakePlayRecordBin::clear_engaged_player_info_list() {
  engaged_player_info_list_.Clear();
}
inline const ::proto::HomeGroupPlayerInfoBin& HomeStakePlayRecordBin::engaged_player_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeStakePlayRecordBin.engaged_player_info_list)
  return engaged_player_info_list_.Get(index);
}
inline ::proto::HomeGroupPlayerInfoBin* HomeStakePlayRecordBin::mutable_engaged_player_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeStakePlayRecordBin.engaged_player_info_list)
  return engaged_player_info_list_.Mutable(index);
}
inline ::proto::HomeGroupPlayerInfoBin* HomeStakePlayRecordBin::add_engaged_player_info_list() {
  // @@protoc_insertion_point(field_add:proto.HomeStakePlayRecordBin.engaged_player_info_list)
  return engaged_player_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeGroupPlayerInfoBin >*
HomeStakePlayRecordBin::mutable_engaged_player_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeStakePlayRecordBin.engaged_player_info_list)
  return &engaged_player_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeGroupPlayerInfoBin >&
HomeStakePlayRecordBin::engaged_player_info_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeStakePlayRecordBin.engaged_player_info_list)
  return engaged_player_info_list_;
}

// -------------------------------------------------------------------

// HomeStakeRecordBin

// repeated .proto.HomeStakePlayRecordBin record_list = 1;
inline int HomeStakeRecordBin::record_list_size() const {
  return record_list_.size();
}
inline void HomeStakeRecordBin::clear_record_list() {
  record_list_.Clear();
}
inline const ::proto::HomeStakePlayRecordBin& HomeStakeRecordBin::record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeStakeRecordBin.record_list)
  return record_list_.Get(index);
}
inline ::proto::HomeStakePlayRecordBin* HomeStakeRecordBin::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeStakeRecordBin.record_list)
  return record_list_.Mutable(index);
}
inline ::proto::HomeStakePlayRecordBin* HomeStakeRecordBin::add_record_list() {
  // @@protoc_insertion_point(field_add:proto.HomeStakeRecordBin.record_list)
  return record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeStakePlayRecordBin >*
HomeStakeRecordBin::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeStakeRecordBin.record_list)
  return &record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeStakePlayRecordBin >&
HomeStakeRecordBin::record_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeStakeRecordBin.record_list)
  return record_list_;
}

// -------------------------------------------------------------------

// HomeSeekFurniturePlayerScoreBin

// .proto.HomeGroupPlayerInfoBin player_info = 1;
inline bool HomeSeekFurniturePlayerScoreBin::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
inline void HomeSeekFurniturePlayerScoreBin::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
inline const ::proto::HomeGroupPlayerInfoBin& HomeSeekFurniturePlayerScoreBin::player_info() const {
  const ::proto::HomeGroupPlayerInfoBin* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.HomeSeekFurniturePlayerScoreBin.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeGroupPlayerInfoBin*>(
      &::proto::_HomeGroupPlayerInfoBin_default_instance_);
}
inline ::proto::HomeGroupPlayerInfoBin* HomeSeekFurniturePlayerScoreBin::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::HomeGroupPlayerInfoBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeSeekFurniturePlayerScoreBin.player_info)
  return player_info_;
}
inline ::proto::HomeGroupPlayerInfoBin* HomeSeekFurniturePlayerScoreBin::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.HomeSeekFurniturePlayerScoreBin.player_info)
  
  ::proto::HomeGroupPlayerInfoBin* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
inline void HomeSeekFurniturePlayerScoreBin::set_allocated_player_info(::proto::HomeGroupPlayerInfoBin* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeSeekFurniturePlayerScoreBin.player_info)
}

// uint32 score = 2;
inline void HomeSeekFurniturePlayerScoreBin::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 HomeSeekFurniturePlayerScoreBin::score() const {
  // @@protoc_insertion_point(field_get:proto.HomeSeekFurniturePlayerScoreBin.score)
  return score_;
}
inline void HomeSeekFurniturePlayerScoreBin::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSeekFurniturePlayerScoreBin.score)
}

// -------------------------------------------------------------------

// HomeSeekFurnitureOneRecordBin

// uint32 timestamp = 1;
inline void HomeSeekFurnitureOneRecordBin::clear_timestamp() {
  timestamp_ = 0u;
}
inline ::google::protobuf::uint32 HomeSeekFurnitureOneRecordBin::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.HomeSeekFurnitureOneRecordBin.timestamp)
  return timestamp_;
}
inline void HomeSeekFurnitureOneRecordBin::set_timestamp(::google::protobuf::uint32 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeSeekFurnitureOneRecordBin.timestamp)
}

// repeated .proto.HomeSeekFurniturePlayerScoreBin engaged_player_score_list = 2;
inline int HomeSeekFurnitureOneRecordBin::engaged_player_score_list_size() const {
  return engaged_player_score_list_.size();
}
inline void HomeSeekFurnitureOneRecordBin::clear_engaged_player_score_list() {
  engaged_player_score_list_.Clear();
}
inline const ::proto::HomeSeekFurniturePlayerScoreBin& HomeSeekFurnitureOneRecordBin::engaged_player_score_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSeekFurnitureOneRecordBin.engaged_player_score_list)
  return engaged_player_score_list_.Get(index);
}
inline ::proto::HomeSeekFurniturePlayerScoreBin* HomeSeekFurnitureOneRecordBin::mutable_engaged_player_score_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSeekFurnitureOneRecordBin.engaged_player_score_list)
  return engaged_player_score_list_.Mutable(index);
}
inline ::proto::HomeSeekFurniturePlayerScoreBin* HomeSeekFurnitureOneRecordBin::add_engaged_player_score_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSeekFurnitureOneRecordBin.engaged_player_score_list)
  return engaged_player_score_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurniturePlayerScoreBin >*
HomeSeekFurnitureOneRecordBin::mutable_engaged_player_score_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSeekFurnitureOneRecordBin.engaged_player_score_list)
  return &engaged_player_score_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurniturePlayerScoreBin >&
HomeSeekFurnitureOneRecordBin::engaged_player_score_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSeekFurnitureOneRecordBin.engaged_player_score_list)
  return engaged_player_score_list_;
}

// -------------------------------------------------------------------

// HomeSeekFurnitureAllRecordBin

// repeated .proto.HomeSeekFurnitureOneRecordBin record_list = 1;
inline int HomeSeekFurnitureAllRecordBin::record_list_size() const {
  return record_list_.size();
}
inline void HomeSeekFurnitureAllRecordBin::clear_record_list() {
  record_list_.Clear();
}
inline const ::proto::HomeSeekFurnitureOneRecordBin& HomeSeekFurnitureAllRecordBin::record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeSeekFurnitureAllRecordBin.record_list)
  return record_list_.Get(index);
}
inline ::proto::HomeSeekFurnitureOneRecordBin* HomeSeekFurnitureAllRecordBin::mutable_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.HomeSeekFurnitureAllRecordBin.record_list)
  return record_list_.Mutable(index);
}
inline ::proto::HomeSeekFurnitureOneRecordBin* HomeSeekFurnitureAllRecordBin::add_record_list() {
  // @@protoc_insertion_point(field_add:proto.HomeSeekFurnitureAllRecordBin.record_list)
  return record_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurnitureOneRecordBin >*
HomeSeekFurnitureAllRecordBin::mutable_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeSeekFurnitureAllRecordBin.record_list)
  return &record_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::HomeSeekFurnitureOneRecordBin >&
HomeSeekFurnitureAllRecordBin::record_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeSeekFurnitureAllRecordBin.record_list)
  return record_list_;
}

// -------------------------------------------------------------------

// HomeGroupRecordBin

// .proto.HomeRacingRecordBin racing_gallery_info_bin = 11;
inline bool HomeGroupRecordBin::has_racing_gallery_info_bin() const {
  return detail_case() == kRacingGalleryInfoBin;
}
inline void HomeGroupRecordBin::set_has_racing_gallery_info_bin() {
  _oneof_case_[0] = kRacingGalleryInfoBin;
}
inline void HomeGroupRecordBin::clear_racing_gallery_info_bin() {
  if (has_racing_gallery_info_bin()) {
    delete detail_.racing_gallery_info_bin_;
    clear_has_detail();
  }
}
inline  const ::proto::HomeRacingRecordBin& HomeGroupRecordBin::racing_gallery_info_bin() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupRecordBin.racing_gallery_info_bin)
  return has_racing_gallery_info_bin()
      ? *detail_.racing_gallery_info_bin_
      : ::proto::HomeRacingRecordBin::default_instance();
}
inline ::proto::HomeRacingRecordBin* HomeGroupRecordBin::mutable_racing_gallery_info_bin() {
  if (!has_racing_gallery_info_bin()) {
    clear_detail();
    set_has_racing_gallery_info_bin();
    detail_.racing_gallery_info_bin_ = new ::proto::HomeRacingRecordBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupRecordBin.racing_gallery_info_bin)
  return detail_.racing_gallery_info_bin_;
}
inline ::proto::HomeRacingRecordBin* HomeGroupRecordBin::release_racing_gallery_info_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupRecordBin.racing_gallery_info_bin)
  if (has_racing_gallery_info_bin()) {
    clear_has_detail();
    ::proto::HomeRacingRecordBin* temp = detail_.racing_gallery_info_bin_;
    detail_.racing_gallery_info_bin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HomeGroupRecordBin::set_allocated_racing_gallery_info_bin(::proto::HomeRacingRecordBin* racing_gallery_info_bin) {
  clear_detail();
  if (racing_gallery_info_bin) {
    set_has_racing_gallery_info_bin();
    detail_.racing_gallery_info_bin_ = racing_gallery_info_bin;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupRecordBin.racing_gallery_info_bin)
}

// .proto.HomeBalloonRecordBin balloon_gallery_info_bin = 12;
inline bool HomeGroupRecordBin::has_balloon_gallery_info_bin() const {
  return detail_case() == kBalloonGalleryInfoBin;
}
inline void HomeGroupRecordBin::set_has_balloon_gallery_info_bin() {
  _oneof_case_[0] = kBalloonGalleryInfoBin;
}
inline void HomeGroupRecordBin::clear_balloon_gallery_info_bin() {
  if (has_balloon_gallery_info_bin()) {
    delete detail_.balloon_gallery_info_bin_;
    clear_has_detail();
  }
}
inline  const ::proto::HomeBalloonRecordBin& HomeGroupRecordBin::balloon_gallery_info_bin() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupRecordBin.balloon_gallery_info_bin)
  return has_balloon_gallery_info_bin()
      ? *detail_.balloon_gallery_info_bin_
      : ::proto::HomeBalloonRecordBin::default_instance();
}
inline ::proto::HomeBalloonRecordBin* HomeGroupRecordBin::mutable_balloon_gallery_info_bin() {
  if (!has_balloon_gallery_info_bin()) {
    clear_detail();
    set_has_balloon_gallery_info_bin();
    detail_.balloon_gallery_info_bin_ = new ::proto::HomeBalloonRecordBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupRecordBin.balloon_gallery_info_bin)
  return detail_.balloon_gallery_info_bin_;
}
inline ::proto::HomeBalloonRecordBin* HomeGroupRecordBin::release_balloon_gallery_info_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupRecordBin.balloon_gallery_info_bin)
  if (has_balloon_gallery_info_bin()) {
    clear_has_detail();
    ::proto::HomeBalloonRecordBin* temp = detail_.balloon_gallery_info_bin_;
    detail_.balloon_gallery_info_bin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HomeGroupRecordBin::set_allocated_balloon_gallery_info_bin(::proto::HomeBalloonRecordBin* balloon_gallery_info_bin) {
  clear_detail();
  if (balloon_gallery_info_bin) {
    set_has_balloon_gallery_info_bin();
    detail_.balloon_gallery_info_bin_ = balloon_gallery_info_bin;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupRecordBin.balloon_gallery_info_bin)
}

// .proto.HomeStakeRecordBin stake_play_info_bin = 13;
inline bool HomeGroupRecordBin::has_stake_play_info_bin() const {
  return detail_case() == kStakePlayInfoBin;
}
inline void HomeGroupRecordBin::set_has_stake_play_info_bin() {
  _oneof_case_[0] = kStakePlayInfoBin;
}
inline void HomeGroupRecordBin::clear_stake_play_info_bin() {
  if (has_stake_play_info_bin()) {
    delete detail_.stake_play_info_bin_;
    clear_has_detail();
  }
}
inline  const ::proto::HomeStakeRecordBin& HomeGroupRecordBin::stake_play_info_bin() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupRecordBin.stake_play_info_bin)
  return has_stake_play_info_bin()
      ? *detail_.stake_play_info_bin_
      : ::proto::HomeStakeRecordBin::default_instance();
}
inline ::proto::HomeStakeRecordBin* HomeGroupRecordBin::mutable_stake_play_info_bin() {
  if (!has_stake_play_info_bin()) {
    clear_detail();
    set_has_stake_play_info_bin();
    detail_.stake_play_info_bin_ = new ::proto::HomeStakeRecordBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupRecordBin.stake_play_info_bin)
  return detail_.stake_play_info_bin_;
}
inline ::proto::HomeStakeRecordBin* HomeGroupRecordBin::release_stake_play_info_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupRecordBin.stake_play_info_bin)
  if (has_stake_play_info_bin()) {
    clear_has_detail();
    ::proto::HomeStakeRecordBin* temp = detail_.stake_play_info_bin_;
    detail_.stake_play_info_bin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HomeGroupRecordBin::set_allocated_stake_play_info_bin(::proto::HomeStakeRecordBin* stake_play_info_bin) {
  clear_detail();
  if (stake_play_info_bin) {
    set_has_stake_play_info_bin();
    detail_.stake_play_info_bin_ = stake_play_info_bin;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupRecordBin.stake_play_info_bin)
}

// .proto.HomeSeekFurnitureAllRecordBin seek_furniture_play_info_bin = 14;
inline bool HomeGroupRecordBin::has_seek_furniture_play_info_bin() const {
  return detail_case() == kSeekFurniturePlayInfoBin;
}
inline void HomeGroupRecordBin::set_has_seek_furniture_play_info_bin() {
  _oneof_case_[0] = kSeekFurniturePlayInfoBin;
}
inline void HomeGroupRecordBin::clear_seek_furniture_play_info_bin() {
  if (has_seek_furniture_play_info_bin()) {
    delete detail_.seek_furniture_play_info_bin_;
    clear_has_detail();
  }
}
inline  const ::proto::HomeSeekFurnitureAllRecordBin& HomeGroupRecordBin::seek_furniture_play_info_bin() const {
  // @@protoc_insertion_point(field_get:proto.HomeGroupRecordBin.seek_furniture_play_info_bin)
  return has_seek_furniture_play_info_bin()
      ? *detail_.seek_furniture_play_info_bin_
      : ::proto::HomeSeekFurnitureAllRecordBin::default_instance();
}
inline ::proto::HomeSeekFurnitureAllRecordBin* HomeGroupRecordBin::mutable_seek_furniture_play_info_bin() {
  if (!has_seek_furniture_play_info_bin()) {
    clear_detail();
    set_has_seek_furniture_play_info_bin();
    detail_.seek_furniture_play_info_bin_ = new ::proto::HomeSeekFurnitureAllRecordBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeGroupRecordBin.seek_furniture_play_info_bin)
  return detail_.seek_furniture_play_info_bin_;
}
inline ::proto::HomeSeekFurnitureAllRecordBin* HomeGroupRecordBin::release_seek_furniture_play_info_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeGroupRecordBin.seek_furniture_play_info_bin)
  if (has_seek_furniture_play_info_bin()) {
    clear_has_detail();
    ::proto::HomeSeekFurnitureAllRecordBin* temp = detail_.seek_furniture_play_info_bin_;
    detail_.seek_furniture_play_info_bin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HomeGroupRecordBin::set_allocated_seek_furniture_play_info_bin(::proto::HomeSeekFurnitureAllRecordBin* seek_furniture_play_info_bin) {
  clear_detail();
  if (seek_furniture_play_info_bin) {
    set_has_seek_furniture_play_info_bin();
    detail_.seek_furniture_play_info_bin_ = seek_furniture_play_info_bin;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeGroupRecordBin.seek_furniture_play_info_bin)
}

inline bool HomeGroupRecordBin::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void HomeGroupRecordBin::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline HomeGroupRecordBin::DetailCase HomeGroupRecordBin::detail_case() const {
  return HomeGroupRecordBin::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// HomeGroupRecordCompBin

// map<uint32, .proto.HomeGroupRecordBin> group_record_map_bin = 1;
inline int HomeGroupRecordCompBin::group_record_map_bin_size() const {
  return group_record_map_bin_.size();
}
inline void HomeGroupRecordCompBin::clear_group_record_map_bin() {
  group_record_map_bin_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >&
HomeGroupRecordCompBin::group_record_map_bin() const {
  // @@protoc_insertion_point(field_map:proto.HomeGroupRecordCompBin.group_record_map_bin)
  return group_record_map_bin_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::HomeGroupRecordBin >*
HomeGroupRecordCompBin::mutable_group_record_map_bin() {
  // @@protoc_insertion_point(field_mutable_map:proto.HomeGroupRecordCompBin.group_record_map_bin)
  return group_record_map_bin_.MutableMap();
}

// -------------------------------------------------------------------

// HomeBlueprintCompBin

// bool is_allow_friend_copy = 1;
inline void HomeBlueprintCompBin::clear_is_allow_friend_copy() {
  is_allow_friend_copy_ = false;
}
inline bool HomeBlueprintCompBin::is_allow_friend_copy() const {
  // @@protoc_insertion_point(field_get:proto.HomeBlueprintCompBin.is_allow_friend_copy)
  return is_allow_friend_copy_;
}
inline void HomeBlueprintCompBin::set_is_allow_friend_copy(bool value) {
  
  is_allow_friend_copy_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeBlueprintCompBin.is_allow_friend_copy)
}

// -------------------------------------------------------------------

// HomeDataBin

// .proto.HomeBasicCompBin basic_bin = 1;
inline bool HomeDataBin::has_basic_bin() const {
  return this != internal_default_instance() && basic_bin_ != NULL;
}
inline void HomeDataBin::clear_basic_bin() {
  if (GetArenaNoVirtual() == NULL && basic_bin_ != NULL) delete basic_bin_;
  basic_bin_ = NULL;
}
inline const ::proto::HomeBasicCompBin& HomeDataBin::basic_bin() const {
  const ::proto::HomeBasicCompBin* p = basic_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.basic_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeBasicCompBin*>(
      &::proto::_HomeBasicCompBin_default_instance_);
}
inline ::proto::HomeBasicCompBin* HomeDataBin::mutable_basic_bin() {
  
  if (basic_bin_ == NULL) {
    basic_bin_ = new ::proto::HomeBasicCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.basic_bin)
  return basic_bin_;
}
inline ::proto::HomeBasicCompBin* HomeDataBin::release_basic_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.basic_bin)
  
  ::proto::HomeBasicCompBin* temp = basic_bin_;
  basic_bin_ = NULL;
  return temp;
}
inline void HomeDataBin::set_allocated_basic_bin(::proto::HomeBasicCompBin* basic_bin) {
  delete basic_bin_;
  basic_bin_ = basic_bin;
  if (basic_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.basic_bin)
}

// .proto.HomeSceneCompBin scene_bin = 2;
inline bool HomeDataBin::has_scene_bin() const {
  return this != internal_default_instance() && scene_bin_ != NULL;
}
inline void HomeDataBin::clear_scene_bin() {
  if (GetArenaNoVirtual() == NULL && scene_bin_ != NULL) delete scene_bin_;
  scene_bin_ = NULL;
}
inline const ::proto::HomeSceneCompBin& HomeDataBin::scene_bin() const {
  const ::proto::HomeSceneCompBin* p = scene_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.scene_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeSceneCompBin*>(
      &::proto::_HomeSceneCompBin_default_instance_);
}
inline ::proto::HomeSceneCompBin* HomeDataBin::mutable_scene_bin() {
  
  if (scene_bin_ == NULL) {
    scene_bin_ = new ::proto::HomeSceneCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.scene_bin)
  return scene_bin_;
}
inline ::proto::HomeSceneCompBin* HomeDataBin::release_scene_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.scene_bin)
  
  ::proto::HomeSceneCompBin* temp = scene_bin_;
  scene_bin_ = NULL;
  return temp;
}
inline void HomeDataBin::set_allocated_scene_bin(::proto::HomeSceneCompBin* scene_bin) {
  delete scene_bin_;
  scene_bin_ = scene_bin;
  if (scene_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.scene_bin)
}

// .proto.HomeOfflineMsgCompBin offline_msg_bin = 3;
inline bool HomeDataBin::has_offline_msg_bin() const {
  return this != internal_default_instance() && offline_msg_bin_ != NULL;
}
inline void HomeDataBin::clear_offline_msg_bin() {
  if (GetArenaNoVirtual() == NULL && offline_msg_bin_ != NULL) delete offline_msg_bin_;
  offline_msg_bin_ = NULL;
}
inline const ::proto::HomeOfflineMsgCompBin& HomeDataBin::offline_msg_bin() const {
  const ::proto::HomeOfflineMsgCompBin* p = offline_msg_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.offline_msg_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeOfflineMsgCompBin*>(
      &::proto::_HomeOfflineMsgCompBin_default_instance_);
}
inline ::proto::HomeOfflineMsgCompBin* HomeDataBin::mutable_offline_msg_bin() {
  
  if (offline_msg_bin_ == NULL) {
    offline_msg_bin_ = new ::proto::HomeOfflineMsgCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.offline_msg_bin)
  return offline_msg_bin_;
}
inline ::proto::HomeOfflineMsgCompBin* HomeDataBin::release_offline_msg_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.offline_msg_bin)
  
  ::proto::HomeOfflineMsgCompBin* temp = offline_msg_bin_;
  offline_msg_bin_ = NULL;
  return temp;
}
inline void HomeDataBin::set_allocated_offline_msg_bin(::proto::HomeOfflineMsgCompBin* offline_msg_bin) {
  delete offline_msg_bin_;
  offline_msg_bin_ = offline_msg_bin;
  if (offline_msg_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.offline_msg_bin)
}

// .proto.HomeFurnitureMakeBin furniture_make_bin = 4;
inline bool HomeDataBin::has_furniture_make_bin() const {
  return this != internal_default_instance() && furniture_make_bin_ != NULL;
}
inline void HomeDataBin::clear_furniture_make_bin() {
  if (GetArenaNoVirtual() == NULL && furniture_make_bin_ != NULL) delete furniture_make_bin_;
  furniture_make_bin_ = NULL;
}
inline const ::proto::HomeFurnitureMakeBin& HomeDataBin::furniture_make_bin() const {
  const ::proto::HomeFurnitureMakeBin* p = furniture_make_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.furniture_make_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeFurnitureMakeBin*>(
      &::proto::_HomeFurnitureMakeBin_default_instance_);
}
inline ::proto::HomeFurnitureMakeBin* HomeDataBin::mutable_furniture_make_bin() {
  
  if (furniture_make_bin_ == NULL) {
    furniture_make_bin_ = new ::proto::HomeFurnitureMakeBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.furniture_make_bin)
  return furniture_make_bin_;
}
inline ::proto::HomeFurnitureMakeBin* HomeDataBin::release_furniture_make_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.furniture_make_bin)
  
  ::proto::HomeFurnitureMakeBin* temp = furniture_make_bin_;
  furniture_make_bin_ = NULL;
  return temp;
}
inline void HomeDataBin::set_allocated_furniture_make_bin(::proto::HomeFurnitureMakeBin* furniture_make_bin) {
  delete furniture_make_bin_;
  furniture_make_bin_ = furniture_make_bin;
  if (furniture_make_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.furniture_make_bin)
}

// .proto.HomeLimitedShopBin limited_shop_bin = 5;
inline bool HomeDataBin::has_limited_shop_bin() const {
  return this != internal_default_instance() && limited_shop_bin_ != NULL;
}
inline void HomeDataBin::clear_limited_shop_bin() {
  if (GetArenaNoVirtual() == NULL && limited_shop_bin_ != NULL) delete limited_shop_bin_;
  limited_shop_bin_ = NULL;
}
inline const ::proto::HomeLimitedShopBin& HomeDataBin::limited_shop_bin() const {
  const ::proto::HomeLimitedShopBin* p = limited_shop_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.limited_shop_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeLimitedShopBin*>(
      &::proto::_HomeLimitedShopBin_default_instance_);
}
inline ::proto::HomeLimitedShopBin* HomeDataBin::mutable_limited_shop_bin() {
  
  if (limited_shop_bin_ == NULL) {
    limited_shop_bin_ = new ::proto::HomeLimitedShopBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.limited_shop_bin)
  return limited_shop_bin_;
}
inline ::proto::HomeLimitedShopBin* HomeDataBin::release_limited_shop_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.limited_shop_bin)
  
  ::proto::HomeLimitedShopBin* temp = limited_shop_bin_;
  limited_shop_bin_ = NULL;
  return temp;
}
inline void HomeDataBin::set_allocated_limited_shop_bin(::proto::HomeLimitedShopBin* limited_shop_bin) {
  delete limited_shop_bin_;
  limited_shop_bin_ = limited_shop_bin;
  if (limited_shop_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.limited_shop_bin)
}

// .proto.HomePlantBin plant_bin = 6;
inline bool HomeDataBin::has_plant_bin() const {
  return this != internal_default_instance() && plant_bin_ != NULL;
}
inline void HomeDataBin::clear_plant_bin() {
  if (GetArenaNoVirtual() == NULL && plant_bin_ != NULL) delete plant_bin_;
  plant_bin_ = NULL;
}
inline const ::proto::HomePlantBin& HomeDataBin::plant_bin() const {
  const ::proto::HomePlantBin* p = plant_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.plant_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomePlantBin*>(
      &::proto::_HomePlantBin_default_instance_);
}
inline ::proto::HomePlantBin* HomeDataBin::mutable_plant_bin() {
  
  if (plant_bin_ == NULL) {
    plant_bin_ = new ::proto::HomePlantBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.plant_bin)
  return plant_bin_;
}
inline ::proto::HomePlantBin* HomeDataBin::release_plant_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.plant_bin)
  
  ::proto::HomePlantBin* temp = plant_bin_;
  plant_bin_ = NULL;
  return temp;
}
inline void HomeDataBin::set_allocated_plant_bin(::proto::HomePlantBin* plant_bin) {
  delete plant_bin_;
  plant_bin_ = plant_bin;
  if (plant_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.plant_bin)
}

// .proto.HomeFishFarmingBin fish_farming_bin = 7;
inline bool HomeDataBin::has_fish_farming_bin() const {
  return this != internal_default_instance() && fish_farming_bin_ != NULL;
}
inline void HomeDataBin::clear_fish_farming_bin() {
  if (GetArenaNoVirtual() == NULL && fish_farming_bin_ != NULL) delete fish_farming_bin_;
  fish_farming_bin_ = NULL;
}
inline const ::proto::HomeFishFarmingBin& HomeDataBin::fish_farming_bin() const {
  const ::proto::HomeFishFarmingBin* p = fish_farming_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.fish_farming_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeFishFarmingBin*>(
      &::proto::_HomeFishFarmingBin_default_instance_);
}
inline ::proto::HomeFishFarmingBin* HomeDataBin::mutable_fish_farming_bin() {
  
  if (fish_farming_bin_ == NULL) {
    fish_farming_bin_ = new ::proto::HomeFishFarmingBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.fish_farming_bin)
  return fish_farming_bin_;
}
inline ::proto::HomeFishFarmingBin* HomeDataBin::release_fish_farming_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.fish_farming_bin)
  
  ::proto::HomeFishFarmingBin* temp = fish_farming_bin_;
  fish_farming_bin_ = NULL;
  return temp;
}
inline void HomeDataBin::set_allocated_fish_farming_bin(::proto::HomeFishFarmingBin* fish_farming_bin) {
  delete fish_farming_bin_;
  fish_farming_bin_ = fish_farming_bin;
  if (fish_farming_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.fish_farming_bin)
}

// .proto.HomeCustomFurnitureBin custom_furniture_bin = 8;
inline bool HomeDataBin::has_custom_furniture_bin() const {
  return this != internal_default_instance() && custom_furniture_bin_ != NULL;
}
inline void HomeDataBin::clear_custom_furniture_bin() {
  if (GetArenaNoVirtual() == NULL && custom_furniture_bin_ != NULL) delete custom_furniture_bin_;
  custom_furniture_bin_ = NULL;
}
inline const ::proto::HomeCustomFurnitureBin& HomeDataBin::custom_furniture_bin() const {
  const ::proto::HomeCustomFurnitureBin* p = custom_furniture_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.custom_furniture_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeCustomFurnitureBin*>(
      &::proto::_HomeCustomFurnitureBin_default_instance_);
}
inline ::proto::HomeCustomFurnitureBin* HomeDataBin::mutable_custom_furniture_bin() {
  
  if (custom_furniture_bin_ == NULL) {
    custom_furniture_bin_ = new ::proto::HomeCustomFurnitureBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.custom_furniture_bin)
  return custom_furniture_bin_;
}
inline ::proto::HomeCustomFurnitureBin* HomeDataBin::release_custom_furniture_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.custom_furniture_bin)
  
  ::proto::HomeCustomFurnitureBin* temp = custom_furniture_bin_;
  custom_furniture_bin_ = NULL;
  return temp;
}
inline void HomeDataBin::set_allocated_custom_furniture_bin(::proto::HomeCustomFurnitureBin* custom_furniture_bin) {
  delete custom_furniture_bin_;
  custom_furniture_bin_ = custom_furniture_bin;
  if (custom_furniture_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.custom_furniture_bin)
}

// .proto.HomePictureFrameBin picture_frame_bin = 9;
inline bool HomeDataBin::has_picture_frame_bin() const {
  return this != internal_default_instance() && picture_frame_bin_ != NULL;
}
inline void HomeDataBin::clear_picture_frame_bin() {
  if (GetArenaNoVirtual() == NULL && picture_frame_bin_ != NULL) delete picture_frame_bin_;
  picture_frame_bin_ = NULL;
}
inline const ::proto::HomePictureFrameBin& HomeDataBin::picture_frame_bin() const {
  const ::proto::HomePictureFrameBin* p = picture_frame_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.picture_frame_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomePictureFrameBin*>(
      &::proto::_HomePictureFrameBin_default_instance_);
}
inline ::proto::HomePictureFrameBin* HomeDataBin::mutable_picture_frame_bin() {
  
  if (picture_frame_bin_ == NULL) {
    picture_frame_bin_ = new ::proto::HomePictureFrameBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.picture_frame_bin)
  return picture_frame_bin_;
}
inline ::proto::HomePictureFrameBin* HomeDataBin::release_picture_frame_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.picture_frame_bin)
  
  ::proto::HomePictureFrameBin* temp = picture_frame_bin_;
  picture_frame_bin_ = NULL;
  return temp;
}
inline void HomeDataBin::set_allocated_picture_frame_bin(::proto::HomePictureFrameBin* picture_frame_bin) {
  delete picture_frame_bin_;
  picture_frame_bin_ = picture_frame_bin;
  if (picture_frame_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.picture_frame_bin)
}

// .proto.HomeGroupRecordCompBin group_record_bin = 10;
inline bool HomeDataBin::has_group_record_bin() const {
  return this != internal_default_instance() && group_record_bin_ != NULL;
}
inline void HomeDataBin::clear_group_record_bin() {
  if (GetArenaNoVirtual() == NULL && group_record_bin_ != NULL) delete group_record_bin_;
  group_record_bin_ = NULL;
}
inline const ::proto::HomeGroupRecordCompBin& HomeDataBin::group_record_bin() const {
  const ::proto::HomeGroupRecordCompBin* p = group_record_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.group_record_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeGroupRecordCompBin*>(
      &::proto::_HomeGroupRecordCompBin_default_instance_);
}
inline ::proto::HomeGroupRecordCompBin* HomeDataBin::mutable_group_record_bin() {
  
  if (group_record_bin_ == NULL) {
    group_record_bin_ = new ::proto::HomeGroupRecordCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.group_record_bin)
  return group_record_bin_;
}
inline ::proto::HomeGroupRecordCompBin* HomeDataBin::release_group_record_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.group_record_bin)
  
  ::proto::HomeGroupRecordCompBin* temp = group_record_bin_;
  group_record_bin_ = NULL;
  return temp;
}
inline void HomeDataBin::set_allocated_group_record_bin(::proto::HomeGroupRecordCompBin* group_record_bin) {
  delete group_record_bin_;
  group_record_bin_ = group_record_bin;
  if (group_record_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.group_record_bin)
}

// .proto.HomeBlueprintCompBin blueprint_bin = 11;
inline bool HomeDataBin::has_blueprint_bin() const {
  return this != internal_default_instance() && blueprint_bin_ != NULL;
}
inline void HomeDataBin::clear_blueprint_bin() {
  if (GetArenaNoVirtual() == NULL && blueprint_bin_ != NULL) delete blueprint_bin_;
  blueprint_bin_ = NULL;
}
inline const ::proto::HomeBlueprintCompBin& HomeDataBin::blueprint_bin() const {
  const ::proto::HomeBlueprintCompBin* p = blueprint_bin_;
  // @@protoc_insertion_point(field_get:proto.HomeDataBin.blueprint_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::HomeBlueprintCompBin*>(
      &::proto::_HomeBlueprintCompBin_default_instance_);
}
inline ::proto::HomeBlueprintCompBin* HomeDataBin::mutable_blueprint_bin() {
  
  if (blueprint_bin_ == NULL) {
    blueprint_bin_ = new ::proto::HomeBlueprintCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeDataBin.blueprint_bin)
  return blueprint_bin_;
}
inline ::proto::HomeBlueprintCompBin* HomeDataBin::release_blueprint_bin() {
  // @@protoc_insertion_point(field_release:proto.HomeDataBin.blueprint_bin)
  
  ::proto::HomeBlueprintCompBin* temp = blueprint_bin_;
  blueprint_bin_ = NULL;
  return temp;
}
inline void HomeDataBin::set_allocated_blueprint_bin(::proto::HomeBlueprintCompBin* blueprint_bin) {
  delete blueprint_bin_;
  blueprint_bin_ = blueprint_bin;
  if (blueprint_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeDataBin.blueprint_bin)
}

// -------------------------------------------------------------------

// HomeData

// uint32 uid = 1;
inline void HomeData::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 HomeData::uid() const {
  // @@protoc_insertion_point(field_get:proto.HomeData.uid)
  return uid_;
}
inline void HomeData::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeData.uid)
}

// uint32 data_version = 2;
inline void HomeData::clear_data_version() {
  data_version_ = 0u;
}
inline ::google::protobuf::uint32 HomeData::data_version() const {
  // @@protoc_insertion_point(field_get:proto.HomeData.data_version)
  return data_version_;
}
inline void HomeData::set_data_version(::google::protobuf::uint32 value) {
  
  data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeData.data_version)
}

// bytes bin_data = 3;
inline void HomeData::clear_bin_data() {
  bin_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HomeData::bin_data() const {
  // @@protoc_insertion_point(field_get:proto.HomeData.bin_data)
  return bin_data_.GetNoArena();
}
inline void HomeData::set_bin_data(const ::std::string& value) {
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeData.bin_data)
}
#if LANG_CXX11
inline void HomeData::set_bin_data(::std::string&& value) {
  
  bin_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeData.bin_data)
}
#endif
inline void HomeData::set_bin_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeData.bin_data)
}
inline void HomeData::set_bin_data(const void* value, size_t size) {
  
  bin_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeData.bin_data)
}
inline ::std::string* HomeData::mutable_bin_data() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeData.bin_data)
  return bin_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HomeData::release_bin_data() {
  // @@protoc_insertion_point(field_release:proto.HomeData.bin_data)
  
  return bin_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomeData::set_allocated_bin_data(::std::string* bin_data) {
  if (bin_data != NULL) {
    
  } else {
    
  }
  bin_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bin_data);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeData.bin_data)
}

// int32 block_end_time = 4;
inline void HomeData::clear_block_end_time() {
  block_end_time_ = 0;
}
inline ::google::protobuf::int32 HomeData::block_end_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeData.block_end_time)
  return block_end_time_;
}
inline void HomeData::set_block_end_time(::google::protobuf::int32 value) {
  
  block_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeData.block_end_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fonly_2fbin_2ehome_2eproto__INCLUDED
