// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_security.server.proto

#ifndef PROTOBUF_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto__INCLUDED
#define PROTOBUF_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto_security {
class GameHeartBeatInfo;
class GameHeartBeatInfoDefaultTypeInternal;
extern GameHeartBeatInfoDefaultTypeInternal _GameHeartBeatInfo_default_instance_;
class GameHeartBeatNotifyRequest;
class GameHeartBeatNotifyRequestDefaultTypeInternal;
extern GameHeartBeatNotifyRequestDefaultTypeInternal _GameHeartBeatNotifyRequest_default_instance_;
class GameHeartBeatNotifyRequest_PlatformUidListEntry;
class GameHeartBeatNotifyRequest_PlatformUidListEntryDefaultTypeInternal;
extern GameHeartBeatNotifyRequest_PlatformUidListEntryDefaultTypeInternal _GameHeartBeatNotifyRequest_PlatformUidListEntry_default_instance_;
class GameLoginNotifyRequest;
class GameLoginNotifyRequestDefaultTypeInternal;
extern GameLoginNotifyRequestDefaultTypeInternal _GameLoginNotifyRequest_default_instance_;
class GameLogoutNotifyRequest;
class GameLogoutNotifyRequestDefaultTypeInternal;
extern GameLogoutNotifyRequestDefaultTypeInternal _GameLogoutNotifyRequest_default_instance_;
}  // namespace proto_security

namespace proto_security {

namespace protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto

enum Platform {
  Unkown = 0,
  IOS = 1,
  Android = 2,
  PC = 3,
  WEB = 4,
  WAP = 5,
  PS = 6,
  Nintendo = 7,
  CloudAndroid = 8,
  CloudPC = 9,
  CloudIOS = 10,
  PS5 = 11,
  Platform_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Platform_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Platform_IsValid(int value);
const Platform Platform_MIN = Unkown;
const Platform Platform_MAX = PS5;
const int Platform_ARRAYSIZE = Platform_MAX + 1;

const ::google::protobuf::EnumDescriptor* Platform_descriptor();
inline const ::std::string& Platform_Name(Platform value) {
  return ::google::protobuf::internal::NameOfEnum(
    Platform_descriptor(), value);
}
inline bool Platform_Parse(
    const ::std::string& name, Platform* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Platform>(
    Platform_descriptor(), name, value);
}
// ===================================================================

class GameLoginNotifyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto_security.GameLoginNotifyRequest) */ {
 public:
  GameLoginNotifyRequest();
  virtual ~GameLoginNotifyRequest();

  GameLoginNotifyRequest(const GameLoginNotifyRequest& from);

  inline GameLoginNotifyRequest& operator=(const GameLoginNotifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameLoginNotifyRequest(GameLoginNotifyRequest&& from) noexcept
    : GameLoginNotifyRequest() {
    *this = ::std::move(from);
  }

  inline GameLoginNotifyRequest& operator=(GameLoginNotifyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameLoginNotifyRequest& default_instance();

  static inline const GameLoginNotifyRequest* internal_default_instance() {
    return reinterpret_cast<const GameLoginNotifyRequest*>(
               &_GameLoginNotifyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GameLoginNotifyRequest* other);
  friend void swap(GameLoginNotifyRequest& a, GameLoginNotifyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameLoginNotifyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GameLoginNotifyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameLoginNotifyRequest& from);
  void MergeFrom(const GameLoginNotifyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameLoginNotifyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string account = 3;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string region = 5;
  void clear_region();
  static const int kRegionFieldNumber = 5;
  const ::std::string& region() const;
  void set_region(const ::std::string& value);
  #if LANG_CXX11
  void set_region(::std::string&& value);
  #endif
  void set_region(const char* value);
  void set_region(const char* value, size_t size);
  ::std::string* mutable_region();
  ::std::string* release_region();
  void set_allocated_region(::std::string* region);

  // string biz_game = 6;
  void clear_biz_game();
  static const int kBizGameFieldNumber = 6;
  const ::std::string& biz_game() const;
  void set_biz_game(const ::std::string& value);
  #if LANG_CXX11
  void set_biz_game(::std::string&& value);
  #endif
  void set_biz_game(const char* value);
  void set_biz_game(const char* value, size_t size);
  ::std::string* mutable_biz_game();
  ::std::string* release_biz_game();
  void set_allocated_biz_game(::std::string* biz_game);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 account_type = 2;
  void clear_account_type();
  static const int kAccountTypeFieldNumber = 2;
  ::google::protobuf::uint32 account_type() const;
  void set_account_type(::google::protobuf::uint32 value);

  // uint32 platform = 4;
  void clear_platform();
  static const int kPlatformFieldNumber = 4;
  ::google::protobuf::uint32 platform() const;
  void set_platform(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_security.GameLoginNotifyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr region_;
  ::google::protobuf::internal::ArenaStringPtr biz_game_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 account_type_;
  ::google::protobuf::uint32 platform_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameLogoutNotifyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto_security.GameLogoutNotifyRequest) */ {
 public:
  GameLogoutNotifyRequest();
  virtual ~GameLogoutNotifyRequest();

  GameLogoutNotifyRequest(const GameLogoutNotifyRequest& from);

  inline GameLogoutNotifyRequest& operator=(const GameLogoutNotifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameLogoutNotifyRequest(GameLogoutNotifyRequest&& from) noexcept
    : GameLogoutNotifyRequest() {
    *this = ::std::move(from);
  }

  inline GameLogoutNotifyRequest& operator=(GameLogoutNotifyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameLogoutNotifyRequest& default_instance();

  static inline const GameLogoutNotifyRequest* internal_default_instance() {
    return reinterpret_cast<const GameLogoutNotifyRequest*>(
               &_GameLogoutNotifyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GameLogoutNotifyRequest* other);
  friend void swap(GameLogoutNotifyRequest& a, GameLogoutNotifyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameLogoutNotifyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GameLogoutNotifyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameLogoutNotifyRequest& from);
  void MergeFrom(const GameLogoutNotifyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameLogoutNotifyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string account = 3;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string region = 5;
  void clear_region();
  static const int kRegionFieldNumber = 5;
  const ::std::string& region() const;
  void set_region(const ::std::string& value);
  #if LANG_CXX11
  void set_region(::std::string&& value);
  #endif
  void set_region(const char* value);
  void set_region(const char* value, size_t size);
  ::std::string* mutable_region();
  ::std::string* release_region();
  void set_allocated_region(::std::string* region);

  // string biz_game = 6;
  void clear_biz_game();
  static const int kBizGameFieldNumber = 6;
  const ::std::string& biz_game() const;
  void set_biz_game(const ::std::string& value);
  #if LANG_CXX11
  void set_biz_game(::std::string&& value);
  #endif
  void set_biz_game(const char* value);
  void set_biz_game(const char* value, size_t size);
  ::std::string* mutable_biz_game();
  ::std::string* release_biz_game();
  void set_allocated_biz_game(::std::string* biz_game);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 account_type = 2;
  void clear_account_type();
  static const int kAccountTypeFieldNumber = 2;
  ::google::protobuf::uint32 account_type() const;
  void set_account_type(::google::protobuf::uint32 value);

  // uint32 platform = 4;
  void clear_platform();
  static const int kPlatformFieldNumber = 4;
  ::google::protobuf::uint32 platform() const;
  void set_platform(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto_security.GameLogoutNotifyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr region_;
  ::google::protobuf::internal::ArenaStringPtr biz_game_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 account_type_;
  ::google::protobuf::uint32 platform_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameHeartBeatInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto_security.GameHeartBeatInfo) */ {
 public:
  GameHeartBeatInfo();
  virtual ~GameHeartBeatInfo();

  GameHeartBeatInfo(const GameHeartBeatInfo& from);

  inline GameHeartBeatInfo& operator=(const GameHeartBeatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameHeartBeatInfo(GameHeartBeatInfo&& from) noexcept
    : GameHeartBeatInfo() {
    *this = ::std::move(from);
  }

  inline GameHeartBeatInfo& operator=(GameHeartBeatInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameHeartBeatInfo& default_instance();

  static inline const GameHeartBeatInfo* internal_default_instance() {
    return reinterpret_cast<const GameHeartBeatInfo*>(
               &_GameHeartBeatInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GameHeartBeatInfo* other);
  friend void swap(GameHeartBeatInfo& a, GameHeartBeatInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameHeartBeatInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  GameHeartBeatInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameHeartBeatInfo& from);
  void MergeFrom(const GameHeartBeatInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameHeartBeatInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uid = 1;
  int uid_size() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid(int index) const;
  void set_uid(int index, ::google::protobuf::uint32 value);
  void add_uid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uid();

  // @@protoc_insertion_point(class_scope:proto_security.GameHeartBeatInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uid_;
  mutable int _uid_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GameHeartBeatNotifyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto_security.GameHeartBeatNotifyRequest) */ {
 public:
  GameHeartBeatNotifyRequest();
  virtual ~GameHeartBeatNotifyRequest();

  GameHeartBeatNotifyRequest(const GameHeartBeatNotifyRequest& from);

  inline GameHeartBeatNotifyRequest& operator=(const GameHeartBeatNotifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameHeartBeatNotifyRequest(GameHeartBeatNotifyRequest&& from) noexcept
    : GameHeartBeatNotifyRequest() {
    *this = ::std::move(from);
  }

  inline GameHeartBeatNotifyRequest& operator=(GameHeartBeatNotifyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameHeartBeatNotifyRequest& default_instance();

  static inline const GameHeartBeatNotifyRequest* internal_default_instance() {
    return reinterpret_cast<const GameHeartBeatNotifyRequest*>(
               &_GameHeartBeatNotifyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GameHeartBeatNotifyRequest* other);
  friend void swap(GameHeartBeatNotifyRequest& a, GameHeartBeatNotifyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameHeartBeatNotifyRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  GameHeartBeatNotifyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameHeartBeatNotifyRequest& from);
  void MergeFrom(const GameHeartBeatNotifyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameHeartBeatNotifyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto_security.GameHeartBeatInfo> platform_uid_list = 1;
  int platform_uid_list_size() const;
  void clear_platform_uid_list();
  static const int kPlatformUidListFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >&
      platform_uid_list() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >*
      mutable_platform_uid_list();

  // string region = 2;
  void clear_region();
  static const int kRegionFieldNumber = 2;
  const ::std::string& region() const;
  void set_region(const ::std::string& value);
  #if LANG_CXX11
  void set_region(::std::string&& value);
  #endif
  void set_region(const char* value);
  void set_region(const char* value, size_t size);
  ::std::string* mutable_region();
  ::std::string* release_region();
  void set_allocated_region(::std::string* region);

  // string biz_game = 3;
  void clear_biz_game();
  static const int kBizGameFieldNumber = 3;
  const ::std::string& biz_game() const;
  void set_biz_game(const ::std::string& value);
  #if LANG_CXX11
  void set_biz_game(::std::string&& value);
  #endif
  void set_biz_game(const char* value);
  void set_biz_game(const char* value, size_t size);
  ::std::string* mutable_biz_game();
  ::std::string* release_biz_game();
  void set_allocated_biz_game(::std::string* biz_game);

  // @@protoc_insertion_point(class_scope:proto_security.GameHeartBeatNotifyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GameHeartBeatNotifyRequest_PlatformUidListEntry : public ::google::protobuf::internal::MapEntry<GameHeartBeatNotifyRequest_PlatformUidListEntry, 
      ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GameHeartBeatNotifyRequest_PlatformUidListEntry, 
      ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    GameHeartBeatNotifyRequest_PlatformUidListEntry();
    GameHeartBeatNotifyRequest_PlatformUidListEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GameHeartBeatNotifyRequest_PlatformUidListEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GameHeartBeatNotifyRequest_PlatformUidListEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GameHeartBeatNotifyRequest_PlatformUidListEntry,
      ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > platform_uid_list_;
  private:
  ::google::protobuf::internal::ArenaStringPtr region_;
  ::google::protobuf::internal::ArenaStringPtr biz_game_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GameLoginNotifyRequest

// uint32 uid = 1;
inline void GameLoginNotifyRequest::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GameLoginNotifyRequest::uid() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLoginNotifyRequest.uid)
  return uid_;
}
inline void GameLoginNotifyRequest::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto_security.GameLoginNotifyRequest.uid)
}

// uint32 account_type = 2;
inline void GameLoginNotifyRequest::clear_account_type() {
  account_type_ = 0u;
}
inline ::google::protobuf::uint32 GameLoginNotifyRequest::account_type() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLoginNotifyRequest.account_type)
  return account_type_;
}
inline void GameLoginNotifyRequest::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto_security.GameLoginNotifyRequest.account_type)
}

// string account = 3;
inline void GameLoginNotifyRequest::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameLoginNotifyRequest::account() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLoginNotifyRequest.account)
  return account_.GetNoArena();
}
inline void GameLoginNotifyRequest::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameLoginNotifyRequest.account)
}
#if LANG_CXX11
inline void GameLoginNotifyRequest::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameLoginNotifyRequest.account)
}
#endif
inline void GameLoginNotifyRequest::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameLoginNotifyRequest.account)
}
inline void GameLoginNotifyRequest::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameLoginNotifyRequest.account)
}
inline ::std::string* GameLoginNotifyRequest::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameLoginNotifyRequest.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameLoginNotifyRequest::release_account() {
  // @@protoc_insertion_point(field_release:proto_security.GameLoginNotifyRequest.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameLoginNotifyRequest::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameLoginNotifyRequest.account)
}

// uint32 platform = 4;
inline void GameLoginNotifyRequest::clear_platform() {
  platform_ = 0u;
}
inline ::google::protobuf::uint32 GameLoginNotifyRequest::platform() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLoginNotifyRequest.platform)
  return platform_;
}
inline void GameLoginNotifyRequest::set_platform(::google::protobuf::uint32 value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:proto_security.GameLoginNotifyRequest.platform)
}

// string region = 5;
inline void GameLoginNotifyRequest::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameLoginNotifyRequest::region() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLoginNotifyRequest.region)
  return region_.GetNoArena();
}
inline void GameLoginNotifyRequest::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameLoginNotifyRequest.region)
}
#if LANG_CXX11
inline void GameLoginNotifyRequest::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameLoginNotifyRequest.region)
}
#endif
inline void GameLoginNotifyRequest::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameLoginNotifyRequest.region)
}
inline void GameLoginNotifyRequest::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameLoginNotifyRequest.region)
}
inline ::std::string* GameLoginNotifyRequest::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameLoginNotifyRequest.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameLoginNotifyRequest::release_region() {
  // @@protoc_insertion_point(field_release:proto_security.GameLoginNotifyRequest.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameLoginNotifyRequest::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameLoginNotifyRequest.region)
}

// string biz_game = 6;
inline void GameLoginNotifyRequest::clear_biz_game() {
  biz_game_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameLoginNotifyRequest::biz_game() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLoginNotifyRequest.biz_game)
  return biz_game_.GetNoArena();
}
inline void GameLoginNotifyRequest::set_biz_game(const ::std::string& value) {
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameLoginNotifyRequest.biz_game)
}
#if LANG_CXX11
inline void GameLoginNotifyRequest::set_biz_game(::std::string&& value) {
  
  biz_game_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameLoginNotifyRequest.biz_game)
}
#endif
inline void GameLoginNotifyRequest::set_biz_game(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameLoginNotifyRequest.biz_game)
}
inline void GameLoginNotifyRequest::set_biz_game(const char* value, size_t size) {
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameLoginNotifyRequest.biz_game)
}
inline ::std::string* GameLoginNotifyRequest::mutable_biz_game() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameLoginNotifyRequest.biz_game)
  return biz_game_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameLoginNotifyRequest::release_biz_game() {
  // @@protoc_insertion_point(field_release:proto_security.GameLoginNotifyRequest.biz_game)
  
  return biz_game_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameLoginNotifyRequest::set_allocated_biz_game(::std::string* biz_game) {
  if (biz_game != NULL) {
    
  } else {
    
  }
  biz_game_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), biz_game);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameLoginNotifyRequest.biz_game)
}

// -------------------------------------------------------------------

// GameLogoutNotifyRequest

// uint32 uid = 1;
inline void GameLogoutNotifyRequest::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 GameLogoutNotifyRequest::uid() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLogoutNotifyRequest.uid)
  return uid_;
}
inline void GameLogoutNotifyRequest::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto_security.GameLogoutNotifyRequest.uid)
}

// uint32 account_type = 2;
inline void GameLogoutNotifyRequest::clear_account_type() {
  account_type_ = 0u;
}
inline ::google::protobuf::uint32 GameLogoutNotifyRequest::account_type() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLogoutNotifyRequest.account_type)
  return account_type_;
}
inline void GameLogoutNotifyRequest::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto_security.GameLogoutNotifyRequest.account_type)
}

// string account = 3;
inline void GameLogoutNotifyRequest::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameLogoutNotifyRequest::account() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLogoutNotifyRequest.account)
  return account_.GetNoArena();
}
inline void GameLogoutNotifyRequest::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameLogoutNotifyRequest.account)
}
#if LANG_CXX11
inline void GameLogoutNotifyRequest::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameLogoutNotifyRequest.account)
}
#endif
inline void GameLogoutNotifyRequest::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameLogoutNotifyRequest.account)
}
inline void GameLogoutNotifyRequest::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameLogoutNotifyRequest.account)
}
inline ::std::string* GameLogoutNotifyRequest::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameLogoutNotifyRequest.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameLogoutNotifyRequest::release_account() {
  // @@protoc_insertion_point(field_release:proto_security.GameLogoutNotifyRequest.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameLogoutNotifyRequest::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameLogoutNotifyRequest.account)
}

// uint32 platform = 4;
inline void GameLogoutNotifyRequest::clear_platform() {
  platform_ = 0u;
}
inline ::google::protobuf::uint32 GameLogoutNotifyRequest::platform() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLogoutNotifyRequest.platform)
  return platform_;
}
inline void GameLogoutNotifyRequest::set_platform(::google::protobuf::uint32 value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:proto_security.GameLogoutNotifyRequest.platform)
}

// string region = 5;
inline void GameLogoutNotifyRequest::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameLogoutNotifyRequest::region() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLogoutNotifyRequest.region)
  return region_.GetNoArena();
}
inline void GameLogoutNotifyRequest::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameLogoutNotifyRequest.region)
}
#if LANG_CXX11
inline void GameLogoutNotifyRequest::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameLogoutNotifyRequest.region)
}
#endif
inline void GameLogoutNotifyRequest::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameLogoutNotifyRequest.region)
}
inline void GameLogoutNotifyRequest::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameLogoutNotifyRequest.region)
}
inline ::std::string* GameLogoutNotifyRequest::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameLogoutNotifyRequest.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameLogoutNotifyRequest::release_region() {
  // @@protoc_insertion_point(field_release:proto_security.GameLogoutNotifyRequest.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameLogoutNotifyRequest::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameLogoutNotifyRequest.region)
}

// string biz_game = 6;
inline void GameLogoutNotifyRequest::clear_biz_game() {
  biz_game_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameLogoutNotifyRequest::biz_game() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLogoutNotifyRequest.biz_game)
  return biz_game_.GetNoArena();
}
inline void GameLogoutNotifyRequest::set_biz_game(const ::std::string& value) {
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameLogoutNotifyRequest.biz_game)
}
#if LANG_CXX11
inline void GameLogoutNotifyRequest::set_biz_game(::std::string&& value) {
  
  biz_game_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameLogoutNotifyRequest.biz_game)
}
#endif
inline void GameLogoutNotifyRequest::set_biz_game(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameLogoutNotifyRequest.biz_game)
}
inline void GameLogoutNotifyRequest::set_biz_game(const char* value, size_t size) {
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameLogoutNotifyRequest.biz_game)
}
inline ::std::string* GameLogoutNotifyRequest::mutable_biz_game() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameLogoutNotifyRequest.biz_game)
  return biz_game_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameLogoutNotifyRequest::release_biz_game() {
  // @@protoc_insertion_point(field_release:proto_security.GameLogoutNotifyRequest.biz_game)
  
  return biz_game_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameLogoutNotifyRequest::set_allocated_biz_game(::std::string* biz_game) {
  if (biz_game != NULL) {
    
  } else {
    
  }
  biz_game_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), biz_game);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameLogoutNotifyRequest.biz_game)
}

// -------------------------------------------------------------------

// GameHeartBeatInfo

// repeated uint32 uid = 1;
inline int GameHeartBeatInfo::uid_size() const {
  return uid_.size();
}
inline void GameHeartBeatInfo::clear_uid() {
  uid_.Clear();
}
inline ::google::protobuf::uint32 GameHeartBeatInfo::uid(int index) const {
  // @@protoc_insertion_point(field_get:proto_security.GameHeartBeatInfo.uid)
  return uid_.Get(index);
}
inline void GameHeartBeatInfo::set_uid(int index, ::google::protobuf::uint32 value) {
  uid_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto_security.GameHeartBeatInfo.uid)
}
inline void GameHeartBeatInfo::add_uid(::google::protobuf::uint32 value) {
  uid_.Add(value);
  // @@protoc_insertion_point(field_add:proto_security.GameHeartBeatInfo.uid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GameHeartBeatInfo::uid() const {
  // @@protoc_insertion_point(field_list:proto_security.GameHeartBeatInfo.uid)
  return uid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GameHeartBeatInfo::mutable_uid() {
  // @@protoc_insertion_point(field_mutable_list:proto_security.GameHeartBeatInfo.uid)
  return &uid_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GameHeartBeatNotifyRequest

// map<uint32, .proto_security.GameHeartBeatInfo> platform_uid_list = 1;
inline int GameHeartBeatNotifyRequest::platform_uid_list_size() const {
  return platform_uid_list_.size();
}
inline void GameHeartBeatNotifyRequest::clear_platform_uid_list() {
  platform_uid_list_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >&
GameHeartBeatNotifyRequest::platform_uid_list() const {
  // @@protoc_insertion_point(field_map:proto_security.GameHeartBeatNotifyRequest.platform_uid_list)
  return platform_uid_list_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >*
GameHeartBeatNotifyRequest::mutable_platform_uid_list() {
  // @@protoc_insertion_point(field_mutable_map:proto_security.GameHeartBeatNotifyRequest.platform_uid_list)
  return platform_uid_list_.MutableMap();
}

// string region = 2;
inline void GameHeartBeatNotifyRequest::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameHeartBeatNotifyRequest::region() const {
  // @@protoc_insertion_point(field_get:proto_security.GameHeartBeatNotifyRequest.region)
  return region_.GetNoArena();
}
inline void GameHeartBeatNotifyRequest::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameHeartBeatNotifyRequest.region)
}
#if LANG_CXX11
inline void GameHeartBeatNotifyRequest::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameHeartBeatNotifyRequest.region)
}
#endif
inline void GameHeartBeatNotifyRequest::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameHeartBeatNotifyRequest.region)
}
inline void GameHeartBeatNotifyRequest::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameHeartBeatNotifyRequest.region)
}
inline ::std::string* GameHeartBeatNotifyRequest::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameHeartBeatNotifyRequest.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameHeartBeatNotifyRequest::release_region() {
  // @@protoc_insertion_point(field_release:proto_security.GameHeartBeatNotifyRequest.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameHeartBeatNotifyRequest::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameHeartBeatNotifyRequest.region)
}

// string biz_game = 3;
inline void GameHeartBeatNotifyRequest::clear_biz_game() {
  biz_game_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameHeartBeatNotifyRequest::biz_game() const {
  // @@protoc_insertion_point(field_get:proto_security.GameHeartBeatNotifyRequest.biz_game)
  return biz_game_.GetNoArena();
}
inline void GameHeartBeatNotifyRequest::set_biz_game(const ::std::string& value) {
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameHeartBeatNotifyRequest.biz_game)
}
#if LANG_CXX11
inline void GameHeartBeatNotifyRequest::set_biz_game(::std::string&& value) {
  
  biz_game_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameHeartBeatNotifyRequest.biz_game)
}
#endif
inline void GameHeartBeatNotifyRequest::set_biz_game(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameHeartBeatNotifyRequest.biz_game)
}
inline void GameHeartBeatNotifyRequest::set_biz_game(const char* value, size_t size) {
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameHeartBeatNotifyRequest.biz_game)
}
inline ::std::string* GameHeartBeatNotifyRequest::mutable_biz_game() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameHeartBeatNotifyRequest.biz_game)
  return biz_game_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameHeartBeatNotifyRequest::release_biz_game() {
  // @@protoc_insertion_point(field_release:proto_security.GameHeartBeatNotifyRequest.biz_game)
  
  return biz_game_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameHeartBeatNotifyRequest::set_allocated_biz_game(::std::string* biz_game) {
  if (biz_game != NULL) {
    
  } else {
    
  }
  biz_game_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), biz_game);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameHeartBeatNotifyRequest.biz_game)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto_security

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto_security::Platform> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto_security::Platform>() {
  return ::proto_security::Platform_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto__INCLUDED
