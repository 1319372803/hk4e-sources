// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/bin.block.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_only/bin.block.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class BlossomChestBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlossomChestBin>
     _instance;
} _BlossomChestBin_default_instance_;
class GadgetPlatformBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetPlatformBin>
     _instance;
} _GadgetPlatformBin_default_instance_;
class BossChestBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BossChestBin>
     _instance;
} _BossChestBin_default_instance_;
class ChallengeRecordBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ChallengeRecordBin>
     _instance;
} _ChallengeRecordBin_default_instance_;
class BossDieInfoBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BossDieInfoBin>
     _instance;
} _BossDieInfoBin_default_instance_;
class GroupTriggerBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupTriggerBin>
     _instance;
} _GroupTriggerBin_default_instance_;
class GeneralRewardBin_DropMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GeneralRewardBin::GeneralRewardBin_DropMapEntry>
     _instance;
} _GeneralRewardBin_DropMapEntry_default_instance_;
class GeneralRewardBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GeneralRewardBin>
     _instance;
} _GeneralRewardBin_default_instance_;
class GadgetGeneralRewardBin_QualifyInfoMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetGeneralRewardBin::GadgetGeneralRewardBin_QualifyInfoMapEntry>
     _instance;
} _GadgetGeneralRewardBin_QualifyInfoMapEntry_default_instance_;
class GadgetGeneralRewardBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetGeneralRewardBin>
     _instance;
} _GadgetGeneralRewardBin_default_instance_;
class FishStockBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FishStockBin>
     _instance;
} _FishStockBin_default_instance_;
class GadgetFishPoolBin_CachedFishMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetFishPoolBin::GadgetFishPoolBin_CachedFishMapEntry>
     _instance;
} _GadgetFishPoolBin_CachedFishMapEntry_default_instance_;
class GadgetFishPoolBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetFishPoolBin>
     _instance;
} _GadgetFishPoolBin_default_instance_;
class CustomGadgetNodeInfoBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CustomGadgetNodeInfoBin>
     _instance;
} _CustomGadgetNodeInfoBin_default_instance_;
class CustomGadgetTreeInfoBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CustomGadgetTreeInfoBin>
     _instance;
} _CustomGadgetTreeInfoBin_default_instance_;
class GadgetWorktopBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GadgetWorktopBin>
     _instance;
} _GadgetWorktopBin_default_instance_;
class GroupGadgetBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupGadgetBin>
     _instance;
  const ::proto::GadgetPlatformBin* platform_;
  const ::proto::BossChestBin* boss_chest_;
  const ::proto::BlossomChestBin* blossom_chest_;
  const ::proto::GadgetGeneralRewardBin* general_reward_;
  const ::proto::GadgetFishPoolBin* fish_pool_;
  const ::proto::CustomGadgetTreeInfoBin* custom_gadget_tree_info_;
  const ::proto::GadgetWorktopBin* worktop_;
} _GroupGadgetBin_default_instance_;
class GroupMonsterBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupMonsterBin>
     _instance;
} _GroupMonsterBin_default_instance_;
class GroupGatherBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupGatherBin>
     _instance;
} _GroupGatherBin_default_instance_;
class GroupRefreshTimeBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupRefreshTimeBin>
     _instance;
} _GroupRefreshTimeBin_default_instance_;
class GroupBin_MonsterMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupBin::GroupBin_MonsterMapEntry>
     _instance;
} _GroupBin_MonsterMapEntry_default_instance_;
class GroupBin_GadgetMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupBin::GroupBin_GadgetMapEntry>
     _instance;
} _GroupBin_GadgetMapEntry_default_instance_;
class GroupBin_TriggerMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupBin::GroupBin_TriggerMapEntry>
     _instance;
} _GroupBin_TriggerMapEntry_default_instance_;
class GroupBin_VariableMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupBin::GroupBin_VariableMapEntry>
     _instance;
} _GroupBin_VariableMapEntry_default_instance_;
class GroupBin_BossDieInfoMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupBin::GroupBin_BossDieInfoMapEntry>
     _instance;
} _GroupBin_BossDieInfoMapEntry_default_instance_;
class GroupBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GroupBin>
     _instance;
} _GroupBin_default_instance_;
class BlockBin_GroupMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlockBin::BlockBin_GroupMapEntry>
     _instance;
} _BlockBin_GroupMapEntry_default_instance_;
class BlockBin_GroupProductMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlockBin::BlockBin_GroupProductMapEntry>
     _instance;
} _BlockBin_GroupProductMapEntry_default_instance_;
class BlockBinDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BlockBin>
     _instance;
} _BlockBin_default_instance_;

namespace protobuf_server_5fonly_2fbin_2eblock_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[29];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestBin, blossom_chest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestBin, drop_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestBin, dead_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestBin, qualify_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestBin, remain_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestBin, item_limit_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlossomChestBin, refresh_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlatformBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlatformBin, route_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlatformBin, point_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlatformBin, is_started_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlatformBin, point_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetPlatformBin, moving_platform_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestBin, remain_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestBin, dead_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestBin, dead_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossChestBin, qualify_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChallengeRecordBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChallengeRecordBin, challenge_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChallengeRecordBin, challenge_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChallengeRecordBin, challenge_record_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChallengeRecordBin, best_value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossDieInfoBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossDieInfoBin, surround_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossDieInfoBin, dead_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BossDieInfoBin, dead_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupTriggerBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupTriggerBin, trigger_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupTriggerBin, config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralRewardBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralRewardBin, drop_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralRewardBin, reward_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralRewardBin, drop_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralRewardBin, drop_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetGeneralRewardBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetGeneralRewardBin, resin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetGeneralRewardBin, dead_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetGeneralRewardBin, remain_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetGeneralRewardBin, qualify_info_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetGeneralRewardBin, destroy_cd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetGeneralRewardBin, item_limit_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetGeneralRewardBin, item_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetGeneralRewardBin, open_state_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishStockBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishStockBin, stock_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishStockBin, gen_fish_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FishStockBin, max_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetFishPoolBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetFishPoolBin, fish_stock_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetFishPoolBin, today_fish_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetFishPoolBin, last_refresh_today_fish_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetFishPoolBin, cached_fish_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomGadgetNodeInfoBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomGadgetNodeInfoBin, parent_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomGadgetNodeInfoBin, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomGadgetNodeInfoBin, slot_identifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomGadgetTreeInfoBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomGadgetTreeInfoBin, node_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetWorktopBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GadgetWorktopBin, option_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupGadgetBin, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupGadgetBin, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupGadgetBin, gadget_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupGadgetBin, is_enable_interact_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupGadgetBin, gadget_talk_state_),
  offsetof(GroupGadgetBinDefaultTypeInternal, platform_),
  offsetof(GroupGadgetBinDefaultTypeInternal, boss_chest_),
  offsetof(GroupGadgetBinDefaultTypeInternal, blossom_chest_),
  offsetof(GroupGadgetBinDefaultTypeInternal, general_reward_),
  offsetof(GroupGadgetBinDefaultTypeInternal, fish_pool_),
  offsetof(GroupGadgetBinDefaultTypeInternal, custom_gadget_tree_info_),
  offsetof(GroupGadgetBinDefaultTypeInternal, worktop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupGadgetBin, component_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMonsterBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupMonsterBin, dropped_hp_percent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupGatherBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupGatherBin, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupGatherBin, last_refresh_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupRefreshTimeBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupRefreshTimeBin, save_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupRefreshTimeBin, last_refresh_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, monster_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, del_monster_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, gadget_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, del_gadget_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, trigger_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, variable_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, suite_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, show_cutscene_chest_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, challenge_record_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, revise_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, last_refresh_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, target_suite_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, boss_die_info_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, gather_refresh_time_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, is_replaceable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, replaceable_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, trigger_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, group_refresh_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GroupBin, variable_config_id_bin_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockBin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockBin, group_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockBin, group_product_map_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(BlossomChestBin)},
  { 12, -1, sizeof(GadgetPlatformBin)},
  { 22, -1, sizeof(BossChestBin)},
  { 31, -1, sizeof(ChallengeRecordBin)},
  { 40, -1, sizeof(BossDieInfoBin)},
  { 48, -1, sizeof(GroupTriggerBin)},
  { 55, -1, sizeof(GeneralRewardBin)},
  { 64, -1, sizeof(GadgetGeneralRewardBin)},
  { 77, -1, sizeof(FishStockBin)},
  { 85, -1, sizeof(GadgetFishPoolBin)},
  { 94, -1, sizeof(CustomGadgetNodeInfoBin)},
  { 102, -1, sizeof(CustomGadgetTreeInfoBin)},
  { 108, -1, sizeof(GadgetWorktopBin)},
  { 114, -1, sizeof(GroupGadgetBin)},
  { 130, -1, sizeof(GroupMonsterBin)},
  { 136, -1, sizeof(GroupGatherBin)},
  { 143, -1, sizeof(GroupRefreshTimeBin)},
  { 150, -1, sizeof(GroupBin)},
  { 174, -1, sizeof(BlockBin)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlossomChestBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetPlatformBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BossChestBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChallengeRecordBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BossDieInfoBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupTriggerBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GeneralRewardBin_DropMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GeneralRewardBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetGeneralRewardBin_QualifyInfoMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetGeneralRewardBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FishStockBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetFishPoolBin_CachedFishMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetFishPoolBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CustomGadgetNodeInfoBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CustomGadgetTreeInfoBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GadgetWorktopBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupGadgetBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupMonsterBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupGatherBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupRefreshTimeBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupBin_MonsterMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupBin_GadgetMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupBin_TriggerMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupBin_VariableMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupBin_BossDieInfoMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GroupBin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockBin_GroupMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockBin_GroupProductMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockBin_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "server_only/bin.block.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[6].reflection = GeneralRewardBin::GeneralRewardBin_DropMapEntry::CreateReflection(file_level_metadata[6].descriptor, _GeneralRewardBin_DropMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[8].reflection = GadgetGeneralRewardBin::GadgetGeneralRewardBin_QualifyInfoMapEntry::CreateReflection(file_level_metadata[8].descriptor, _GadgetGeneralRewardBin_QualifyInfoMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[11].reflection = GadgetFishPoolBin::GadgetFishPoolBin_CachedFishMapEntry::CreateReflection(file_level_metadata[11].descriptor, _GadgetFishPoolBin_CachedFishMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[20].reflection = GroupBin::GroupBin_MonsterMapEntry::CreateReflection(file_level_metadata[20].descriptor, _GroupBin_MonsterMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[21].reflection = GroupBin::GroupBin_GadgetMapEntry::CreateReflection(file_level_metadata[21].descriptor, _GroupBin_GadgetMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[22].reflection = GroupBin::GroupBin_TriggerMapEntry::CreateReflection(file_level_metadata[22].descriptor, _GroupBin_TriggerMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[23].reflection = GroupBin::GroupBin_VariableMapEntry::CreateReflection(file_level_metadata[23].descriptor, _GroupBin_VariableMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[24].reflection = GroupBin::GroupBin_BossDieInfoMapEntry::CreateReflection(file_level_metadata[24].descriptor, _GroupBin_BossDieInfoMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[26].reflection = BlockBin::BlockBin_GroupMapEntry::CreateReflection(file_level_metadata[26].descriptor, _BlockBin_GroupMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[27].reflection = BlockBin::BlockBin_GroupProductMapEntry::CreateReflection(file_level_metadata[27].descriptor, _BlockBin_GroupProductMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 29);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  _BlossomChestBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlossomChestBin_default_instance_);_GadgetPlatformBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetPlatformBin_default_instance_);_BossChestBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BossChestBin_default_instance_);_ChallengeRecordBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ChallengeRecordBin_default_instance_);_BossDieInfoBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BossDieInfoBin_default_instance_);_GroupTriggerBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupTriggerBin_default_instance_);_GeneralRewardBin_DropMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GeneralRewardBin_DropMapEntry_default_instance_);_GeneralRewardBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GeneralRewardBin_default_instance_);_GadgetGeneralRewardBin_QualifyInfoMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetGeneralRewardBin_QualifyInfoMapEntry_default_instance_);_GadgetGeneralRewardBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetGeneralRewardBin_default_instance_);_FishStockBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FishStockBin_default_instance_);_GadgetFishPoolBin_CachedFishMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetFishPoolBin_CachedFishMapEntry_default_instance_);_GadgetFishPoolBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetFishPoolBin_default_instance_);_CustomGadgetNodeInfoBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CustomGadgetNodeInfoBin_default_instance_);_CustomGadgetTreeInfoBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CustomGadgetTreeInfoBin_default_instance_);_GadgetWorktopBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GadgetWorktopBin_default_instance_);_GroupGadgetBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupGadgetBin_default_instance_);_GroupMonsterBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupMonsterBin_default_instance_);_GroupGatherBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupGatherBin_default_instance_);_GroupRefreshTimeBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupRefreshTimeBin_default_instance_);_GroupBin_MonsterMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupBin_MonsterMapEntry_default_instance_);_GroupBin_GadgetMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupBin_GadgetMapEntry_default_instance_);_GroupBin_TriggerMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupBin_TriggerMapEntry_default_instance_);_GroupBin_VariableMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupBin_VariableMapEntry_default_instance_);_GroupBin_BossDieInfoMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupBin_BossDieInfoMapEntry_default_instance_);_GroupBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GroupBin_default_instance_);_BlockBin_GroupMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlockBin_GroupMapEntry_default_instance_);_BlockBin_GroupProductMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlockBin_GroupProductMapEntry_default_instance_);_BlockBin_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BlockBin_default_instance_);_GeneralRewardBin_DropMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GeneralRewardBin_DropMapEntry_default_instance_._instance.get_mutable());
  _GeneralRewardBin_DropMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GadgetGeneralRewardBin_QualifyInfoMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GadgetGeneralRewardBin_QualifyInfoMapEntry_default_instance_._instance.get_mutable());
  _GadgetGeneralRewardBin_QualifyInfoMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GadgetGeneralRewardBin_default_instance_._instance.get_mutable()->item_param_ = const_cast< ::proto::ItemParamBin*>(
      ::proto::ItemParamBin::internal_default_instance());
  _GadgetFishPoolBin_CachedFishMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GadgetFishPoolBin_CachedFishMapEntry_default_instance_._instance.get_mutable());
  _GadgetFishPoolBin_CachedFishMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GroupGadgetBin_default_instance_.platform_ = const_cast< ::proto::GadgetPlatformBin*>(
      ::proto::GadgetPlatformBin::internal_default_instance());
  _GroupGadgetBin_default_instance_.boss_chest_ = const_cast< ::proto::BossChestBin*>(
      ::proto::BossChestBin::internal_default_instance());
  _GroupGadgetBin_default_instance_.blossom_chest_ = const_cast< ::proto::BlossomChestBin*>(
      ::proto::BlossomChestBin::internal_default_instance());
  _GroupGadgetBin_default_instance_.general_reward_ = const_cast< ::proto::GadgetGeneralRewardBin*>(
      ::proto::GadgetGeneralRewardBin::internal_default_instance());
  _GroupGadgetBin_default_instance_.fish_pool_ = const_cast< ::proto::GadgetFishPoolBin*>(
      ::proto::GadgetFishPoolBin::internal_default_instance());
  _GroupGadgetBin_default_instance_.custom_gadget_tree_info_ = const_cast< ::proto::CustomGadgetTreeInfoBin*>(
      ::proto::CustomGadgetTreeInfoBin::internal_default_instance());
  _GroupGadgetBin_default_instance_.worktop_ = const_cast< ::proto::GadgetWorktopBin*>(
      ::proto::GadgetWorktopBin::internal_default_instance());
  _GroupBin_MonsterMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GroupBin_MonsterMapEntry_default_instance_._instance.get_mutable());
  _GroupBin_MonsterMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GroupBin_GadgetMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GroupBin_GadgetMapEntry_default_instance_._instance.get_mutable());
  _GroupBin_GadgetMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GroupBin_TriggerMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GroupBin_TriggerMapEntry_default_instance_._instance.get_mutable());
  _GroupBin_TriggerMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GroupBin_VariableMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GroupBin_VariableMapEntry_default_instance_._instance.get_mutable());
  _GroupBin_VariableMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _GroupBin_BossDieInfoMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GroupBin_BossDieInfoMapEntry_default_instance_._instance.get_mutable());
  _GroupBin_BossDieInfoMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _BlockBin_GroupMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_BlockBin_GroupMapEntry_default_instance_._instance.get_mutable());
  _BlockBin_GroupMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _BlockBin_GroupProductMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_BlockBin_GroupProductMapEntry_default_instance_._instance.get_mutable());
  _BlockBin_GroupProductMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033server_only/bin.block.proto\022\005proto\032#se"
      "rver_only/bin_common.server.proto\"\257\001\n\017Bl"
      "ossomChestBin\022\030\n\020blossom_chest_id\030\001 \001(\r\022"
      "\017\n\007drop_id\030\002 \001(\r\022\021\n\tdead_time\030\003 \001(\007\022\030\n\020q"
      "ualify_uid_list\030\004 \003(\r\022\027\n\017remain_uid_list"
      "\030\005 \003(\r\022\027\n\017item_limit_type\030\006 \001(\r\022\022\n\nrefre"
      "sh_id\030\007 \001(\r\"~\n\021GadgetPlatformBin\022\020\n\010rout"
      "e_id\030\001 \001(\r\022\023\n\013point_index\030\002 \001(\005\022\022\n\nis_st"
      "arted\030\003 \001(\010\022\020\n\010point_id\030\004 \001(\r\022\034\n\024moving_"
      "platform_type\030\005 \001(\r\"h\n\014BossChestBin\022\027\n\017r"
      "emain_uid_list\030\001 \003(\r\022\021\n\tdead_time\030\002 \001(\007\022"
      "\022\n\ndead_level\030\003 \001(\r\022\030\n\020qualify_uid_list\030"
      "\004 \003(\r\"v\n\022ChallengeRecordBin\022\027\n\017challenge"
      "_index\030\001 \001(\r\022\024\n\014challenge_id\030\002 \001(\r\022\035\n\025ch"
      "allenge_record_type\030\003 \001(\r\022\022\n\nbest_value\030"
      "\004 \001(\r\"R\n\016BossDieInfoBin\022\031\n\021surround_uid_"
      "list\030\001 \003(\r\022\021\n\tdead_time\030\002 \001(\007\022\022\n\ndead_le"
      "vel\030\003 \001(\r\";\n\017GroupTriggerBin\022\025\n\rtrigger_"
      "count\030\001 \001(\r\022\021\n\tconfig_id\030\002 \001(\r\"\260\001\n\020Gener"
      "alRewardBin\022\017\n\007drop_id\030\001 \001(\r\022\021\n\treward_i"
      "d\030\002 \001(\r\022\020\n\010drop_num\030\003 \001(\r\0226\n\010drop_map\030\004 "
      "\003(\0132$.proto.GeneralRewardBin.DropMapEntr"
      "y\032.\n\014DropMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030"
      "\002 \001(\r:\0028\001\"\337\002\n\026GadgetGeneralRewardBin\022\r\n\005"
      "resin\030\002 \001(\r\022\021\n\tdead_time\030\003 \001(\r\022\027\n\017remain"
      "_uid_list\030\005 \003(\r\022K\n\020qualify_info_map\030\007 \003("
      "\01321.proto.GadgetGeneralRewardBin.Qualify"
      "InfoMapEntry\022\022\n\ndestroy_cd\030\010 \001(\r\022\027\n\017item"
      "_limit_type\030\t \001(\r\022\'\n\nitem_param\030\n \001(\0132\023."
      "proto.ItemParamBin\022\027\n\017open_state_list\030\013 "
      "\003(\r\032N\n\023QualifyInfoMapEntry\022\013\n\003key\030\001 \001(\r\022"
      "&\n\005value\030\002 \001(\0132\027.proto.GeneralRewardBin:"
      "\0028\001\"I\n\014FishStockBin\022\022\n\nstock_type\030\001 \001(\r\022"
      "\024\n\014gen_fish_num\030\002 \001(\r\022\017\n\007max_num\030\003 \001(\r\"\373"
      "\001\n\021GadgetFishPoolBin\022,\n\017fish_stock_list\030"
      "\001 \003(\0132\023.proto.FishStockBin\022\026\n\016today_fish"
      "_num\030\002 \001(\r\022$\n\034last_refresh_today_fish_ti"
      "me\030\003 \001(\r\022D\n\017cached_fish_map\030\004 \003(\0132+.prot"
      "o.GadgetFishPoolBin.CachedFishMapEntry\0324"
      "\n\022CachedFishMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005val"
      "ue\030\002 \001(\r:\0028\001\"[\n\027CustomGadgetNodeInfoBin\022"
      "\024\n\014parent_index\030\001 \001(\005\022\021\n\tconfig_id\030\002 \001(\r"
      "\022\027\n\017slot_identifier\030\003 \001(\t\"L\n\027CustomGadge"
      "tTreeInfoBin\0221\n\tnode_list\030\001 \003(\0132\036.proto."
      "CustomGadgetNodeInfoBin\"\'\n\020GadgetWorktop"
      "Bin\022\023\n\013option_list\030\001 \003(\r\"\313\003\n\016GroupGadget"
      "Bin\022\024\n\014gadget_state\030\001 \001(\r\022\032\n\022is_enable_i"
      "nteract\030\002 \001(\010\022\031\n\021gadget_talk_state\030\003 \001(\r"
      "\022,\n\010platform\030e \001(\0132\030.proto.GadgetPlatfor"
      "mBinH\000\022)\n\nboss_chest\030f \001(\0132\023.proto.BossC"
      "hestBinH\000\022/\n\rblossom_chest\030g \001(\0132\026.proto"
      ".BlossomChestBinH\000\0227\n\016general_reward\030h \001"
      "(\0132\035.proto.GadgetGeneralRewardBinH\000\022-\n\tf"
      "ish_pool\030i \001(\0132\030.proto.GadgetFishPoolBin"
      "H\000\022A\n\027custom_gadget_tree_info\030j \001(\0132\036.pr"
      "oto.CustomGadgetTreeInfoBinH\000\022*\n\007worktop"
      "\030k \001(\0132\027.proto.GadgetWorktopBinH\000B\013\n\tcom"
      "ponent\"-\n\017GroupMonsterBin\022\032\n\022dropped_hp_"
      "percent\030\001 \001(\r\">\n\016GroupGatherBin\022\021\n\tconfi"
      "g_id\030\001 \001(\r\022\031\n\021last_refresh_time\030\002 \001(\007\"C\n"
      "\023GroupRefreshTimeBin\022\021\n\tsave_type\030\001 \001(\r\022"
      "\031\n\021last_refresh_time\030\002 \001(\007\"\247\t\n\010GroupBin\022"
      "4\n\013monster_map\030\001 \003(\0132\037.proto.GroupBin.Mo"
      "nsterMapEntry\022\030\n\020del_monster_list\030\002 \003(\r\022"
      "2\n\ngadget_map\030\003 \003(\0132\036.proto.GroupBin.Gad"
      "getMapEntry\022\027\n\017del_gadget_list\030\004 \003(\r\0224\n\013"
      "trigger_map\030\005 \003(\0132\037.proto.GroupBin.Trigg"
      "erMapEntry\0226\n\014variable_map\030\006 \003(\0132 .proto"
      ".GroupBin.VariableMapEntry\022\023\n\013suite_inde"
      "x\030\007 \001(\r\022 \n\030show_cutscene_chest_list\030\010 \003("
      "\r\0228\n\025challenge_record_list\030\t \003(\0132\031.proto"
      ".ChallengeRecordBin\022\024\n\014revise_level\030\n \001("
      "\r\022\031\n\021last_refresh_time\030\013 \001(\007\022\032\n\022target_s"
      "uite_index\030\014 \001(\r\022>\n\021boss_die_info_map\030\r "
      "\003(\0132#.proto.GroupBin.BossDieInfoMapEntry"
      "\0227\n\030gather_refresh_time_list\030\016 \003(\0132\025.pro"
      "to.GroupGatherBin\022\026\n\016is_replaceable\030\017 \001("
      "\010\022\033\n\023replaceable_version\030\020 \001(\r\022,\n\014trigge"
      "r_list\030\021 \003(\0132\026.proto.GroupTriggerBin\0226\n\022"
      "group_refresh_list\030\022 \003(\0132\032.proto.GroupRe"
      "freshTimeBin\022D\n\033variable_config_id_bin_l"
      "ist\030\023 \003(\0132\037.proto.GroupVariableConfigIdB"
      "in\032I\n\017MonsterMapEntry\022\013\n\003key\030\001 \001(\r\022%\n\005va"
      "lue\030\002 \001(\0132\026.proto.GroupMonsterBin:\0028\001\032G\n"
      "\016GadgetMapEntry\022\013\n\003key\030\001 \001(\r\022$\n\005value\030\002 "
      "\001(\0132\025.proto.GroupGadgetBin:\0028\001\032I\n\017Trigge"
      "rMapEntry\022\013\n\003key\030\001 \001(\t\022%\n\005value\030\002 \001(\0132\026."
      "proto.GroupTriggerBin:\0028\001\032K\n\020VariableMap"
      "Entry\022\013\n\003key\030\001 \001(\t\022&\n\005value\030\002 \001(\0132\027.prot"
      "o.GroupVariableBin:\0028\001\032L\n\023BossDieInfoMap"
      "Entry\022\013\n\003key\030\001 \001(\r\022$\n\005value\030\002 \001(\0132\025.prot"
      "o.BossDieInfoBin:\0028\001\"\376\001\n\010BlockBin\0220\n\tgro"
      "up_map\030\001 \003(\0132\035.proto.BlockBin.GroupMapEn"
      "try\022\?\n\021group_product_map\030\002 \003(\0132$.proto.B"
      "lockBin.GroupProductMapEntry\032/\n\rGroupMap"
      "Entry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\014:\0028\001\032N\n"
      "\024GroupProductMapEntry\022\013\n\003key\030\001 \001(\r\022%\n\005va"
      "lue\030\002 \001(\0132\026.proto.GroupProductBin:\0028\001B(Z"
      "&github.com/teyvat-helper/hk4e-proto/pbb"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3967);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_only/bin.block.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_server_5fonly_2fbin_2eblock_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlossomChestBin::kBlossomChestIdFieldNumber;
const int BlossomChestBin::kDropIdFieldNumber;
const int BlossomChestBin::kDeadTimeFieldNumber;
const int BlossomChestBin::kQualifyUidListFieldNumber;
const int BlossomChestBin::kRemainUidListFieldNumber;
const int BlossomChestBin::kItemLimitTypeFieldNumber;
const int BlossomChestBin::kRefreshIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlossomChestBin::BlossomChestBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlossomChestBin)
}
BlossomChestBin::BlossomChestBin(const BlossomChestBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      qualify_uid_list_(from.qualify_uid_list_),
      remain_uid_list_(from.remain_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&blossom_chest_id_, &from.blossom_chest_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&refresh_id_) -
    reinterpret_cast<char*>(&blossom_chest_id_)) + sizeof(refresh_id_));
  // @@protoc_insertion_point(copy_constructor:proto.BlossomChestBin)
}

void BlossomChestBin::SharedCtor() {
  ::memset(&blossom_chest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&refresh_id_) -
      reinterpret_cast<char*>(&blossom_chest_id_)) + sizeof(refresh_id_));
  _cached_size_ = 0;
}

BlossomChestBin::~BlossomChestBin() {
  // @@protoc_insertion_point(destructor:proto.BlossomChestBin)
  SharedDtor();
}

void BlossomChestBin::SharedDtor() {
}

void BlossomChestBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlossomChestBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlossomChestBin& BlossomChestBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlossomChestBin* BlossomChestBin::New(::google::protobuf::Arena* arena) const {
  BlossomChestBin* n = new BlossomChestBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlossomChestBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlossomChestBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  qualify_uid_list_.Clear();
  remain_uid_list_.Clear();
  ::memset(&blossom_chest_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&refresh_id_) -
      reinterpret_cast<char*>(&blossom_chest_id_)) + sizeof(refresh_id_));
  _internal_metadata_.Clear();
}

bool BlossomChestBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlossomChestBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 blossom_chest_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blossom_chest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 drop_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drop_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 dead_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &dead_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 qualify_uid_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_qualify_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_qualify_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 remain_uid_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_remain_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_remain_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_limit_type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_limit_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 refresh_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &refresh_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlossomChestBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlossomChestBin)
  return false;
#undef DO_
}

void BlossomChestBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlossomChestBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 blossom_chest_id = 1;
  if (this->blossom_chest_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->blossom_chest_id(), output);
  }

  // uint32 drop_id = 2;
  if (this->drop_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->drop_id(), output);
  }

  // fixed32 dead_time = 3;
  if (this->dead_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->dead_time(), output);
  }

  // repeated uint32 qualify_uid_list = 4;
  if (this->qualify_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _qualify_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->qualify_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->qualify_uid_list(i), output);
  }

  // repeated uint32 remain_uid_list = 5;
  if (this->remain_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _remain_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->remain_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->remain_uid_list(i), output);
  }

  // uint32 item_limit_type = 6;
  if (this->item_limit_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->item_limit_type(), output);
  }

  // uint32 refresh_id = 7;
  if (this->refresh_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->refresh_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BlossomChestBin)
}

::google::protobuf::uint8* BlossomChestBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlossomChestBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 blossom_chest_id = 1;
  if (this->blossom_chest_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->blossom_chest_id(), target);
  }

  // uint32 drop_id = 2;
  if (this->drop_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->drop_id(), target);
  }

  // fixed32 dead_time = 3;
  if (this->dead_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->dead_time(), target);
  }

  // repeated uint32 qualify_uid_list = 4;
  if (this->qualify_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _qualify_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->qualify_uid_list_, target);
  }

  // repeated uint32 remain_uid_list = 5;
  if (this->remain_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _remain_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->remain_uid_list_, target);
  }

  // uint32 item_limit_type = 6;
  if (this->item_limit_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->item_limit_type(), target);
  }

  // uint32 refresh_id = 7;
  if (this->refresh_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->refresh_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BlossomChestBin)
  return target;
}

size_t BlossomChestBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlossomChestBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 qualify_uid_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->qualify_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _qualify_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 remain_uid_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->remain_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _remain_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 blossom_chest_id = 1;
  if (this->blossom_chest_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->blossom_chest_id());
  }

  // uint32 drop_id = 2;
  if (this->drop_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drop_id());
  }

  // fixed32 dead_time = 3;
  if (this->dead_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 item_limit_type = 6;
  if (this->item_limit_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_limit_type());
  }

  // uint32 refresh_id = 7;
  if (this->refresh_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->refresh_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlossomChestBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlossomChestBin)
  GOOGLE_DCHECK_NE(&from, this);
  const BlossomChestBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlossomChestBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlossomChestBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlossomChestBin)
    MergeFrom(*source);
  }
}

void BlossomChestBin::MergeFrom(const BlossomChestBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlossomChestBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  qualify_uid_list_.MergeFrom(from.qualify_uid_list_);
  remain_uid_list_.MergeFrom(from.remain_uid_list_);
  if (from.blossom_chest_id() != 0) {
    set_blossom_chest_id(from.blossom_chest_id());
  }
  if (from.drop_id() != 0) {
    set_drop_id(from.drop_id());
  }
  if (from.dead_time() != 0) {
    set_dead_time(from.dead_time());
  }
  if (from.item_limit_type() != 0) {
    set_item_limit_type(from.item_limit_type());
  }
  if (from.refresh_id() != 0) {
    set_refresh_id(from.refresh_id());
  }
}

void BlossomChestBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlossomChestBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlossomChestBin::CopyFrom(const BlossomChestBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlossomChestBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlossomChestBin::IsInitialized() const {
  return true;
}

void BlossomChestBin::Swap(BlossomChestBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlossomChestBin::InternalSwap(BlossomChestBin* other) {
  using std::swap;
  qualify_uid_list_.InternalSwap(&other->qualify_uid_list_);
  remain_uid_list_.InternalSwap(&other->remain_uid_list_);
  swap(blossom_chest_id_, other->blossom_chest_id_);
  swap(drop_id_, other->drop_id_);
  swap(dead_time_, other->dead_time_);
  swap(item_limit_type_, other->item_limit_type_);
  swap(refresh_id_, other->refresh_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlossomChestBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlossomChestBin

// uint32 blossom_chest_id = 1;
void BlossomChestBin::clear_blossom_chest_id() {
  blossom_chest_id_ = 0u;
}
::google::protobuf::uint32 BlossomChestBin::blossom_chest_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.blossom_chest_id)
  return blossom_chest_id_;
}
void BlossomChestBin::set_blossom_chest_id(::google::protobuf::uint32 value) {
  
  blossom_chest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.blossom_chest_id)
}

// uint32 drop_id = 2;
void BlossomChestBin::clear_drop_id() {
  drop_id_ = 0u;
}
::google::protobuf::uint32 BlossomChestBin::drop_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.drop_id)
  return drop_id_;
}
void BlossomChestBin::set_drop_id(::google::protobuf::uint32 value) {
  
  drop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.drop_id)
}

// fixed32 dead_time = 3;
void BlossomChestBin::clear_dead_time() {
  dead_time_ = 0u;
}
::google::protobuf::uint32 BlossomChestBin::dead_time() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.dead_time)
  return dead_time_;
}
void BlossomChestBin::set_dead_time(::google::protobuf::uint32 value) {
  
  dead_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.dead_time)
}

// repeated uint32 qualify_uid_list = 4;
int BlossomChestBin::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
void BlossomChestBin::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
::google::protobuf::uint32 BlossomChestBin::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
void BlossomChestBin::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.qualify_uid_list)
}
void BlossomChestBin::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BlossomChestBin.qualify_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlossomChestBin::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BlossomChestBin.qualify_uid_list)
  return qualify_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlossomChestBin::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BlossomChestBin.qualify_uid_list)
  return &qualify_uid_list_;
}

// repeated uint32 remain_uid_list = 5;
int BlossomChestBin::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
void BlossomChestBin::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
::google::protobuf::uint32 BlossomChestBin::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.remain_uid_list)
  return remain_uid_list_.Get(index);
}
void BlossomChestBin::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.remain_uid_list)
}
void BlossomChestBin::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BlossomChestBin.remain_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlossomChestBin::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BlossomChestBin.remain_uid_list)
  return remain_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlossomChestBin::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BlossomChestBin.remain_uid_list)
  return &remain_uid_list_;
}

// uint32 item_limit_type = 6;
void BlossomChestBin::clear_item_limit_type() {
  item_limit_type_ = 0u;
}
::google::protobuf::uint32 BlossomChestBin::item_limit_type() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.item_limit_type)
  return item_limit_type_;
}
void BlossomChestBin::set_item_limit_type(::google::protobuf::uint32 value) {
  
  item_limit_type_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.item_limit_type)
}

// uint32 refresh_id = 7;
void BlossomChestBin::clear_refresh_id() {
  refresh_id_ = 0u;
}
::google::protobuf::uint32 BlossomChestBin::refresh_id() const {
  // @@protoc_insertion_point(field_get:proto.BlossomChestBin.refresh_id)
  return refresh_id_;
}
void BlossomChestBin::set_refresh_id(::google::protobuf::uint32 value) {
  
  refresh_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlossomChestBin.refresh_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetPlatformBin::kRouteIdFieldNumber;
const int GadgetPlatformBin::kPointIndexFieldNumber;
const int GadgetPlatformBin::kIsStartedFieldNumber;
const int GadgetPlatformBin::kPointIdFieldNumber;
const int GadgetPlatformBin::kMovingPlatformTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetPlatformBin::GadgetPlatformBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetPlatformBin)
}
GadgetPlatformBin::GadgetPlatformBin(const GadgetPlatformBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&route_id_, &from.route_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&moving_platform_type_) -
    reinterpret_cast<char*>(&route_id_)) + sizeof(moving_platform_type_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetPlatformBin)
}

void GadgetPlatformBin::SharedCtor() {
  ::memset(&route_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&moving_platform_type_) -
      reinterpret_cast<char*>(&route_id_)) + sizeof(moving_platform_type_));
  _cached_size_ = 0;
}

GadgetPlatformBin::~GadgetPlatformBin() {
  // @@protoc_insertion_point(destructor:proto.GadgetPlatformBin)
  SharedDtor();
}

void GadgetPlatformBin::SharedDtor() {
}

void GadgetPlatformBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetPlatformBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetPlatformBin& GadgetPlatformBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetPlatformBin* GadgetPlatformBin::New(::google::protobuf::Arena* arena) const {
  GadgetPlatformBin* n = new GadgetPlatformBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetPlatformBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetPlatformBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&route_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&moving_platform_type_) -
      reinterpret_cast<char*>(&route_id_)) + sizeof(moving_platform_type_));
  _internal_metadata_.Clear();
}

bool GadgetPlatformBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetPlatformBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 route_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &route_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 point_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &point_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_started = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_started_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 point_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 moving_platform_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &moving_platform_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetPlatformBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetPlatformBin)
  return false;
#undef DO_
}

void GadgetPlatformBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetPlatformBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 route_id = 1;
  if (this->route_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->route_id(), output);
  }

  // int32 point_index = 2;
  if (this->point_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->point_index(), output);
  }

  // bool is_started = 3;
  if (this->is_started() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_started(), output);
  }

  // uint32 point_id = 4;
  if (this->point_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->point_id(), output);
  }

  // uint32 moving_platform_type = 5;
  if (this->moving_platform_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->moving_platform_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetPlatformBin)
}

::google::protobuf::uint8* GadgetPlatformBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetPlatformBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 route_id = 1;
  if (this->route_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->route_id(), target);
  }

  // int32 point_index = 2;
  if (this->point_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->point_index(), target);
  }

  // bool is_started = 3;
  if (this->is_started() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_started(), target);
  }

  // uint32 point_id = 4;
  if (this->point_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->point_id(), target);
  }

  // uint32 moving_platform_type = 5;
  if (this->moving_platform_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->moving_platform_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetPlatformBin)
  return target;
}

size_t GadgetPlatformBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetPlatformBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 route_id = 1;
  if (this->route_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->route_id());
  }

  // int32 point_index = 2;
  if (this->point_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->point_index());
  }

  // bool is_started = 3;
  if (this->is_started() != 0) {
    total_size += 1 + 1;
  }

  // uint32 point_id = 4;
  if (this->point_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_id());
  }

  // uint32 moving_platform_type = 5;
  if (this->moving_platform_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->moving_platform_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetPlatformBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetPlatformBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetPlatformBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetPlatformBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetPlatformBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetPlatformBin)
    MergeFrom(*source);
  }
}

void GadgetPlatformBin::MergeFrom(const GadgetPlatformBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetPlatformBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.route_id() != 0) {
    set_route_id(from.route_id());
  }
  if (from.point_index() != 0) {
    set_point_index(from.point_index());
  }
  if (from.is_started() != 0) {
    set_is_started(from.is_started());
  }
  if (from.point_id() != 0) {
    set_point_id(from.point_id());
  }
  if (from.moving_platform_type() != 0) {
    set_moving_platform_type(from.moving_platform_type());
  }
}

void GadgetPlatformBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetPlatformBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetPlatformBin::CopyFrom(const GadgetPlatformBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetPlatformBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetPlatformBin::IsInitialized() const {
  return true;
}

void GadgetPlatformBin::Swap(GadgetPlatformBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetPlatformBin::InternalSwap(GadgetPlatformBin* other) {
  using std::swap;
  swap(route_id_, other->route_id_);
  swap(point_index_, other->point_index_);
  swap(is_started_, other->is_started_);
  swap(point_id_, other->point_id_);
  swap(moving_platform_type_, other->moving_platform_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetPlatformBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetPlatformBin

// uint32 route_id = 1;
void GadgetPlatformBin::clear_route_id() {
  route_id_ = 0u;
}
::google::protobuf::uint32 GadgetPlatformBin::route_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlatformBin.route_id)
  return route_id_;
}
void GadgetPlatformBin::set_route_id(::google::protobuf::uint32 value) {
  
  route_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlatformBin.route_id)
}

// int32 point_index = 2;
void GadgetPlatformBin::clear_point_index() {
  point_index_ = 0;
}
::google::protobuf::int32 GadgetPlatformBin::point_index() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlatformBin.point_index)
  return point_index_;
}
void GadgetPlatformBin::set_point_index(::google::protobuf::int32 value) {
  
  point_index_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlatformBin.point_index)
}

// bool is_started = 3;
void GadgetPlatformBin::clear_is_started() {
  is_started_ = false;
}
bool GadgetPlatformBin::is_started() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlatformBin.is_started)
  return is_started_;
}
void GadgetPlatformBin::set_is_started(bool value) {
  
  is_started_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlatformBin.is_started)
}

// uint32 point_id = 4;
void GadgetPlatformBin::clear_point_id() {
  point_id_ = 0u;
}
::google::protobuf::uint32 GadgetPlatformBin::point_id() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlatformBin.point_id)
  return point_id_;
}
void GadgetPlatformBin::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlatformBin.point_id)
}

// uint32 moving_platform_type = 5;
void GadgetPlatformBin::clear_moving_platform_type() {
  moving_platform_type_ = 0u;
}
::google::protobuf::uint32 GadgetPlatformBin::moving_platform_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetPlatformBin.moving_platform_type)
  return moving_platform_type_;
}
void GadgetPlatformBin::set_moving_platform_type(::google::protobuf::uint32 value) {
  
  moving_platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetPlatformBin.moving_platform_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BossChestBin::kRemainUidListFieldNumber;
const int BossChestBin::kDeadTimeFieldNumber;
const int BossChestBin::kDeadLevelFieldNumber;
const int BossChestBin::kQualifyUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BossChestBin::BossChestBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BossChestBin)
}
BossChestBin::BossChestBin(const BossChestBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      remain_uid_list_(from.remain_uid_list_),
      qualify_uid_list_(from.qualify_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dead_time_, &from.dead_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&dead_level_) -
    reinterpret_cast<char*>(&dead_time_)) + sizeof(dead_level_));
  // @@protoc_insertion_point(copy_constructor:proto.BossChestBin)
}

void BossChestBin::SharedCtor() {
  ::memset(&dead_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dead_level_) -
      reinterpret_cast<char*>(&dead_time_)) + sizeof(dead_level_));
  _cached_size_ = 0;
}

BossChestBin::~BossChestBin() {
  // @@protoc_insertion_point(destructor:proto.BossChestBin)
  SharedDtor();
}

void BossChestBin::SharedDtor() {
}

void BossChestBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BossChestBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BossChestBin& BossChestBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

BossChestBin* BossChestBin::New(::google::protobuf::Arena* arena) const {
  BossChestBin* n = new BossChestBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BossChestBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BossChestBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remain_uid_list_.Clear();
  qualify_uid_list_.Clear();
  ::memset(&dead_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dead_level_) -
      reinterpret_cast<char*>(&dead_time_)) + sizeof(dead_level_));
  _internal_metadata_.Clear();
}

bool BossChestBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BossChestBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 remain_uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_remain_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_remain_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 dead_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &dead_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dead_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dead_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 qualify_uid_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_qualify_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_qualify_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BossChestBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BossChestBin)
  return false;
#undef DO_
}

void BossChestBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BossChestBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 remain_uid_list = 1;
  if (this->remain_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _remain_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->remain_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->remain_uid_list(i), output);
  }

  // fixed32 dead_time = 2;
  if (this->dead_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->dead_time(), output);
  }

  // uint32 dead_level = 3;
  if (this->dead_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dead_level(), output);
  }

  // repeated uint32 qualify_uid_list = 4;
  if (this->qualify_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _qualify_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->qualify_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->qualify_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BossChestBin)
}

::google::protobuf::uint8* BossChestBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BossChestBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 remain_uid_list = 1;
  if (this->remain_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _remain_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->remain_uid_list_, target);
  }

  // fixed32 dead_time = 2;
  if (this->dead_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->dead_time(), target);
  }

  // uint32 dead_level = 3;
  if (this->dead_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dead_level(), target);
  }

  // repeated uint32 qualify_uid_list = 4;
  if (this->qualify_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _qualify_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->qualify_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BossChestBin)
  return target;
}

size_t BossChestBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BossChestBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 remain_uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->remain_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _remain_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 qualify_uid_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->qualify_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _qualify_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // fixed32 dead_time = 2;
  if (this->dead_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 dead_level = 3;
  if (this->dead_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dead_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BossChestBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BossChestBin)
  GOOGLE_DCHECK_NE(&from, this);
  const BossChestBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BossChestBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BossChestBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BossChestBin)
    MergeFrom(*source);
  }
}

void BossChestBin::MergeFrom(const BossChestBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BossChestBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  remain_uid_list_.MergeFrom(from.remain_uid_list_);
  qualify_uid_list_.MergeFrom(from.qualify_uid_list_);
  if (from.dead_time() != 0) {
    set_dead_time(from.dead_time());
  }
  if (from.dead_level() != 0) {
    set_dead_level(from.dead_level());
  }
}

void BossChestBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BossChestBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BossChestBin::CopyFrom(const BossChestBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BossChestBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BossChestBin::IsInitialized() const {
  return true;
}

void BossChestBin::Swap(BossChestBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BossChestBin::InternalSwap(BossChestBin* other) {
  using std::swap;
  remain_uid_list_.InternalSwap(&other->remain_uid_list_);
  qualify_uid_list_.InternalSwap(&other->qualify_uid_list_);
  swap(dead_time_, other->dead_time_);
  swap(dead_level_, other->dead_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BossChestBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BossChestBin

// repeated uint32 remain_uid_list = 1;
int BossChestBin::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
void BossChestBin::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
::google::protobuf::uint32 BossChestBin::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestBin.remain_uid_list)
  return remain_uid_list_.Get(index);
}
void BossChestBin::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestBin.remain_uid_list)
}
void BossChestBin::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestBin.remain_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestBin::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestBin.remain_uid_list)
  return remain_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestBin::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestBin.remain_uid_list)
  return &remain_uid_list_;
}

// fixed32 dead_time = 2;
void BossChestBin::clear_dead_time() {
  dead_time_ = 0u;
}
::google::protobuf::uint32 BossChestBin::dead_time() const {
  // @@protoc_insertion_point(field_get:proto.BossChestBin.dead_time)
  return dead_time_;
}
void BossChestBin::set_dead_time(::google::protobuf::uint32 value) {
  
  dead_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestBin.dead_time)
}

// uint32 dead_level = 3;
void BossChestBin::clear_dead_level() {
  dead_level_ = 0u;
}
::google::protobuf::uint32 BossChestBin::dead_level() const {
  // @@protoc_insertion_point(field_get:proto.BossChestBin.dead_level)
  return dead_level_;
}
void BossChestBin::set_dead_level(::google::protobuf::uint32 value) {
  
  dead_level_ = value;
  // @@protoc_insertion_point(field_set:proto.BossChestBin.dead_level)
}

// repeated uint32 qualify_uid_list = 4;
int BossChestBin::qualify_uid_list_size() const {
  return qualify_uid_list_.size();
}
void BossChestBin::clear_qualify_uid_list() {
  qualify_uid_list_.Clear();
}
::google::protobuf::uint32 BossChestBin::qualify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossChestBin.qualify_uid_list)
  return qualify_uid_list_.Get(index);
}
void BossChestBin::set_qualify_uid_list(int index, ::google::protobuf::uint32 value) {
  qualify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossChestBin.qualify_uid_list)
}
void BossChestBin::add_qualify_uid_list(::google::protobuf::uint32 value) {
  qualify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossChestBin.qualify_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossChestBin::qualify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossChestBin.qualify_uid_list)
  return qualify_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossChestBin::mutable_qualify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossChestBin.qualify_uid_list)
  return &qualify_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChallengeRecordBin::kChallengeIndexFieldNumber;
const int ChallengeRecordBin::kChallengeIdFieldNumber;
const int ChallengeRecordBin::kChallengeRecordTypeFieldNumber;
const int ChallengeRecordBin::kBestValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChallengeRecordBin::ChallengeRecordBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ChallengeRecordBin)
}
ChallengeRecordBin::ChallengeRecordBin(const ChallengeRecordBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&challenge_index_, &from.challenge_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&best_value_) -
    reinterpret_cast<char*>(&challenge_index_)) + sizeof(best_value_));
  // @@protoc_insertion_point(copy_constructor:proto.ChallengeRecordBin)
}

void ChallengeRecordBin::SharedCtor() {
  ::memset(&challenge_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&best_value_) -
      reinterpret_cast<char*>(&challenge_index_)) + sizeof(best_value_));
  _cached_size_ = 0;
}

ChallengeRecordBin::~ChallengeRecordBin() {
  // @@protoc_insertion_point(destructor:proto.ChallengeRecordBin)
  SharedDtor();
}

void ChallengeRecordBin::SharedDtor() {
}

void ChallengeRecordBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChallengeRecordBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChallengeRecordBin& ChallengeRecordBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChallengeRecordBin* ChallengeRecordBin::New(::google::protobuf::Arena* arena) const {
  ChallengeRecordBin* n = new ChallengeRecordBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChallengeRecordBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChallengeRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&challenge_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&best_value_) -
      reinterpret_cast<char*>(&challenge_index_)) + sizeof(best_value_));
  _internal_metadata_.Clear();
}

bool ChallengeRecordBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ChallengeRecordBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 challenge_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &challenge_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 challenge_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &challenge_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 challenge_record_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &challenge_record_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 best_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &best_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ChallengeRecordBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ChallengeRecordBin)
  return false;
#undef DO_
}

void ChallengeRecordBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ChallengeRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 challenge_index = 1;
  if (this->challenge_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->challenge_index(), output);
  }

  // uint32 challenge_id = 2;
  if (this->challenge_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->challenge_id(), output);
  }

  // uint32 challenge_record_type = 3;
  if (this->challenge_record_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->challenge_record_type(), output);
  }

  // uint32 best_value = 4;
  if (this->best_value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->best_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ChallengeRecordBin)
}

::google::protobuf::uint8* ChallengeRecordBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChallengeRecordBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 challenge_index = 1;
  if (this->challenge_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->challenge_index(), target);
  }

  // uint32 challenge_id = 2;
  if (this->challenge_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->challenge_id(), target);
  }

  // uint32 challenge_record_type = 3;
  if (this->challenge_record_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->challenge_record_type(), target);
  }

  // uint32 best_value = 4;
  if (this->best_value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->best_value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChallengeRecordBin)
  return target;
}

size_t ChallengeRecordBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChallengeRecordBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 challenge_index = 1;
  if (this->challenge_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->challenge_index());
  }

  // uint32 challenge_id = 2;
  if (this->challenge_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->challenge_id());
  }

  // uint32 challenge_record_type = 3;
  if (this->challenge_record_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->challenge_record_type());
  }

  // uint32 best_value = 4;
  if (this->best_value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->best_value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChallengeRecordBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ChallengeRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  const ChallengeRecordBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChallengeRecordBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ChallengeRecordBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ChallengeRecordBin)
    MergeFrom(*source);
  }
}

void ChallengeRecordBin::MergeFrom(const ChallengeRecordBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ChallengeRecordBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.challenge_index() != 0) {
    set_challenge_index(from.challenge_index());
  }
  if (from.challenge_id() != 0) {
    set_challenge_id(from.challenge_id());
  }
  if (from.challenge_record_type() != 0) {
    set_challenge_record_type(from.challenge_record_type());
  }
  if (from.best_value() != 0) {
    set_best_value(from.best_value());
  }
}

void ChallengeRecordBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ChallengeRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChallengeRecordBin::CopyFrom(const ChallengeRecordBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChallengeRecordBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChallengeRecordBin::IsInitialized() const {
  return true;
}

void ChallengeRecordBin::Swap(ChallengeRecordBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChallengeRecordBin::InternalSwap(ChallengeRecordBin* other) {
  using std::swap;
  swap(challenge_index_, other->challenge_index_);
  swap(challenge_id_, other->challenge_id_);
  swap(challenge_record_type_, other->challenge_record_type_);
  swap(best_value_, other->best_value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChallengeRecordBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChallengeRecordBin

// uint32 challenge_index = 1;
void ChallengeRecordBin::clear_challenge_index() {
  challenge_index_ = 0u;
}
::google::protobuf::uint32 ChallengeRecordBin::challenge_index() const {
  // @@protoc_insertion_point(field_get:proto.ChallengeRecordBin.challenge_index)
  return challenge_index_;
}
void ChallengeRecordBin::set_challenge_index(::google::protobuf::uint32 value) {
  
  challenge_index_ = value;
  // @@protoc_insertion_point(field_set:proto.ChallengeRecordBin.challenge_index)
}

// uint32 challenge_id = 2;
void ChallengeRecordBin::clear_challenge_id() {
  challenge_id_ = 0u;
}
::google::protobuf::uint32 ChallengeRecordBin::challenge_id() const {
  // @@protoc_insertion_point(field_get:proto.ChallengeRecordBin.challenge_id)
  return challenge_id_;
}
void ChallengeRecordBin::set_challenge_id(::google::protobuf::uint32 value) {
  
  challenge_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChallengeRecordBin.challenge_id)
}

// uint32 challenge_record_type = 3;
void ChallengeRecordBin::clear_challenge_record_type() {
  challenge_record_type_ = 0u;
}
::google::protobuf::uint32 ChallengeRecordBin::challenge_record_type() const {
  // @@protoc_insertion_point(field_get:proto.ChallengeRecordBin.challenge_record_type)
  return challenge_record_type_;
}
void ChallengeRecordBin::set_challenge_record_type(::google::protobuf::uint32 value) {
  
  challenge_record_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ChallengeRecordBin.challenge_record_type)
}

// uint32 best_value = 4;
void ChallengeRecordBin::clear_best_value() {
  best_value_ = 0u;
}
::google::protobuf::uint32 ChallengeRecordBin::best_value() const {
  // @@protoc_insertion_point(field_get:proto.ChallengeRecordBin.best_value)
  return best_value_;
}
void ChallengeRecordBin::set_best_value(::google::protobuf::uint32 value) {
  
  best_value_ = value;
  // @@protoc_insertion_point(field_set:proto.ChallengeRecordBin.best_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BossDieInfoBin::kSurroundUidListFieldNumber;
const int BossDieInfoBin::kDeadTimeFieldNumber;
const int BossDieInfoBin::kDeadLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BossDieInfoBin::BossDieInfoBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BossDieInfoBin)
}
BossDieInfoBin::BossDieInfoBin(const BossDieInfoBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      surround_uid_list_(from.surround_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dead_time_, &from.dead_time_,
    static_cast<size_t>(reinterpret_cast<char*>(&dead_level_) -
    reinterpret_cast<char*>(&dead_time_)) + sizeof(dead_level_));
  // @@protoc_insertion_point(copy_constructor:proto.BossDieInfoBin)
}

void BossDieInfoBin::SharedCtor() {
  ::memset(&dead_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dead_level_) -
      reinterpret_cast<char*>(&dead_time_)) + sizeof(dead_level_));
  _cached_size_ = 0;
}

BossDieInfoBin::~BossDieInfoBin() {
  // @@protoc_insertion_point(destructor:proto.BossDieInfoBin)
  SharedDtor();
}

void BossDieInfoBin::SharedDtor() {
}

void BossDieInfoBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BossDieInfoBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BossDieInfoBin& BossDieInfoBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

BossDieInfoBin* BossDieInfoBin::New(::google::protobuf::Arena* arena) const {
  BossDieInfoBin* n = new BossDieInfoBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BossDieInfoBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BossDieInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  surround_uid_list_.Clear();
  ::memset(&dead_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dead_level_) -
      reinterpret_cast<char*>(&dead_time_)) + sizeof(dead_level_));
  _internal_metadata_.Clear();
}

bool BossDieInfoBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BossDieInfoBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 surround_uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_surround_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_surround_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 dead_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &dead_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dead_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dead_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BossDieInfoBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BossDieInfoBin)
  return false;
#undef DO_
}

void BossDieInfoBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BossDieInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 surround_uid_list = 1;
  if (this->surround_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _surround_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->surround_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->surround_uid_list(i), output);
  }

  // fixed32 dead_time = 2;
  if (this->dead_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->dead_time(), output);
  }

  // uint32 dead_level = 3;
  if (this->dead_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dead_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BossDieInfoBin)
}

::google::protobuf::uint8* BossDieInfoBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BossDieInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 surround_uid_list = 1;
  if (this->surround_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _surround_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->surround_uid_list_, target);
  }

  // fixed32 dead_time = 2;
  if (this->dead_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->dead_time(), target);
  }

  // uint32 dead_level = 3;
  if (this->dead_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dead_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BossDieInfoBin)
  return target;
}

size_t BossDieInfoBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BossDieInfoBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 surround_uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->surround_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _surround_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // fixed32 dead_time = 2;
  if (this->dead_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 dead_level = 3;
  if (this->dead_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dead_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BossDieInfoBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BossDieInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  const BossDieInfoBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BossDieInfoBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BossDieInfoBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BossDieInfoBin)
    MergeFrom(*source);
  }
}

void BossDieInfoBin::MergeFrom(const BossDieInfoBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BossDieInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  surround_uid_list_.MergeFrom(from.surround_uid_list_);
  if (from.dead_time() != 0) {
    set_dead_time(from.dead_time());
  }
  if (from.dead_level() != 0) {
    set_dead_level(from.dead_level());
  }
}

void BossDieInfoBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BossDieInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BossDieInfoBin::CopyFrom(const BossDieInfoBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BossDieInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BossDieInfoBin::IsInitialized() const {
  return true;
}

void BossDieInfoBin::Swap(BossDieInfoBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BossDieInfoBin::InternalSwap(BossDieInfoBin* other) {
  using std::swap;
  surround_uid_list_.InternalSwap(&other->surround_uid_list_);
  swap(dead_time_, other->dead_time_);
  swap(dead_level_, other->dead_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BossDieInfoBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BossDieInfoBin

// repeated uint32 surround_uid_list = 1;
int BossDieInfoBin::surround_uid_list_size() const {
  return surround_uid_list_.size();
}
void BossDieInfoBin::clear_surround_uid_list() {
  surround_uid_list_.Clear();
}
::google::protobuf::uint32 BossDieInfoBin::surround_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BossDieInfoBin.surround_uid_list)
  return surround_uid_list_.Get(index);
}
void BossDieInfoBin::set_surround_uid_list(int index, ::google::protobuf::uint32 value) {
  surround_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BossDieInfoBin.surround_uid_list)
}
void BossDieInfoBin::add_surround_uid_list(::google::protobuf::uint32 value) {
  surround_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BossDieInfoBin.surround_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BossDieInfoBin::surround_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.BossDieInfoBin.surround_uid_list)
  return surround_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BossDieInfoBin::mutable_surround_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BossDieInfoBin.surround_uid_list)
  return &surround_uid_list_;
}

// fixed32 dead_time = 2;
void BossDieInfoBin::clear_dead_time() {
  dead_time_ = 0u;
}
::google::protobuf::uint32 BossDieInfoBin::dead_time() const {
  // @@protoc_insertion_point(field_get:proto.BossDieInfoBin.dead_time)
  return dead_time_;
}
void BossDieInfoBin::set_dead_time(::google::protobuf::uint32 value) {
  
  dead_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BossDieInfoBin.dead_time)
}

// uint32 dead_level = 3;
void BossDieInfoBin::clear_dead_level() {
  dead_level_ = 0u;
}
::google::protobuf::uint32 BossDieInfoBin::dead_level() const {
  // @@protoc_insertion_point(field_get:proto.BossDieInfoBin.dead_level)
  return dead_level_;
}
void BossDieInfoBin::set_dead_level(::google::protobuf::uint32 value) {
  
  dead_level_ = value;
  // @@protoc_insertion_point(field_set:proto.BossDieInfoBin.dead_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupTriggerBin::kTriggerCountFieldNumber;
const int GroupTriggerBin::kConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupTriggerBin::GroupTriggerBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GroupTriggerBin)
}
GroupTriggerBin::GroupTriggerBin(const GroupTriggerBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&trigger_count_, &from.trigger_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&config_id_) -
    reinterpret_cast<char*>(&trigger_count_)) + sizeof(config_id_));
  // @@protoc_insertion_point(copy_constructor:proto.GroupTriggerBin)
}

void GroupTriggerBin::SharedCtor() {
  ::memset(&trigger_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&trigger_count_)) + sizeof(config_id_));
  _cached_size_ = 0;
}

GroupTriggerBin::~GroupTriggerBin() {
  // @@protoc_insertion_point(destructor:proto.GroupTriggerBin)
  SharedDtor();
}

void GroupTriggerBin::SharedDtor() {
}

void GroupTriggerBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupTriggerBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupTriggerBin& GroupTriggerBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupTriggerBin* GroupTriggerBin::New(::google::protobuf::Arena* arena) const {
  GroupTriggerBin* n = new GroupTriggerBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupTriggerBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GroupTriggerBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&trigger_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&trigger_count_)) + sizeof(config_id_));
  _internal_metadata_.Clear();
}

bool GroupTriggerBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GroupTriggerBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 trigger_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trigger_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GroupTriggerBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GroupTriggerBin)
  return false;
#undef DO_
}

void GroupTriggerBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GroupTriggerBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 trigger_count = 1;
  if (this->trigger_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->trigger_count(), output);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GroupTriggerBin)
}

::google::protobuf::uint8* GroupTriggerBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GroupTriggerBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 trigger_count = 1;
  if (this->trigger_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->trigger_count(), target);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GroupTriggerBin)
  return target;
}

size_t GroupTriggerBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GroupTriggerBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 trigger_count = 1;
  if (this->trigger_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->trigger_count());
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupTriggerBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GroupTriggerBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupTriggerBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupTriggerBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GroupTriggerBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GroupTriggerBin)
    MergeFrom(*source);
  }
}

void GroupTriggerBin::MergeFrom(const GroupTriggerBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GroupTriggerBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.trigger_count() != 0) {
    set_trigger_count(from.trigger_count());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
}

void GroupTriggerBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GroupTriggerBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupTriggerBin::CopyFrom(const GroupTriggerBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GroupTriggerBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupTriggerBin::IsInitialized() const {
  return true;
}

void GroupTriggerBin::Swap(GroupTriggerBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupTriggerBin::InternalSwap(GroupTriggerBin* other) {
  using std::swap;
  swap(trigger_count_, other->trigger_count_);
  swap(config_id_, other->config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupTriggerBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupTriggerBin

// uint32 trigger_count = 1;
void GroupTriggerBin::clear_trigger_count() {
  trigger_count_ = 0u;
}
::google::protobuf::uint32 GroupTriggerBin::trigger_count() const {
  // @@protoc_insertion_point(field_get:proto.GroupTriggerBin.trigger_count)
  return trigger_count_;
}
void GroupTriggerBin::set_trigger_count(::google::protobuf::uint32 value) {
  
  trigger_count_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupTriggerBin.trigger_count)
}

// uint32 config_id = 2;
void GroupTriggerBin::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 GroupTriggerBin::config_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupTriggerBin.config_id)
  return config_id_;
}
void GroupTriggerBin::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupTriggerBin.config_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GeneralRewardBin::GeneralRewardBin_DropMapEntry::GeneralRewardBin_DropMapEntry() {}
GeneralRewardBin::GeneralRewardBin_DropMapEntry::GeneralRewardBin_DropMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GeneralRewardBin::GeneralRewardBin_DropMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[6];
}
void GeneralRewardBin::GeneralRewardBin_DropMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GeneralRewardBin::GeneralRewardBin_DropMapEntry::MergeFrom(const GeneralRewardBin_DropMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GeneralRewardBin::kDropIdFieldNumber;
const int GeneralRewardBin::kRewardIdFieldNumber;
const int GeneralRewardBin::kDropNumFieldNumber;
const int GeneralRewardBin::kDropMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GeneralRewardBin::GeneralRewardBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GeneralRewardBin)
}
GeneralRewardBin::GeneralRewardBin(const GeneralRewardBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drop_map_.MergeFrom(from.drop_map_);
  ::memcpy(&drop_id_, &from.drop_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&drop_num_) -
    reinterpret_cast<char*>(&drop_id_)) + sizeof(drop_num_));
  // @@protoc_insertion_point(copy_constructor:proto.GeneralRewardBin)
}

void GeneralRewardBin::SharedCtor() {
  ::memset(&drop_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&drop_num_) -
      reinterpret_cast<char*>(&drop_id_)) + sizeof(drop_num_));
  _cached_size_ = 0;
}

GeneralRewardBin::~GeneralRewardBin() {
  // @@protoc_insertion_point(destructor:proto.GeneralRewardBin)
  SharedDtor();
}

void GeneralRewardBin::SharedDtor() {
}

void GeneralRewardBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GeneralRewardBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GeneralRewardBin& GeneralRewardBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

GeneralRewardBin* GeneralRewardBin::New(::google::protobuf::Arena* arena) const {
  GeneralRewardBin* n = new GeneralRewardBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GeneralRewardBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GeneralRewardBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drop_map_.Clear();
  ::memset(&drop_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&drop_num_) -
      reinterpret_cast<char*>(&drop_id_)) + sizeof(drop_num_));
  _internal_metadata_.Clear();
}

bool GeneralRewardBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GeneralRewardBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 drop_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drop_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 reward_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reward_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 drop_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &drop_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> drop_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          GeneralRewardBin_DropMapEntry::Parser< ::google::protobuf::internal::MapField<
              GeneralRewardBin_DropMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&drop_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GeneralRewardBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GeneralRewardBin)
  return false;
#undef DO_
}

void GeneralRewardBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GeneralRewardBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 drop_id = 1;
  if (this->drop_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->drop_id(), output);
  }

  // uint32 reward_id = 2;
  if (this->reward_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reward_id(), output);
  }

  // uint32 drop_num = 3;
  if (this->drop_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->drop_num(), output);
  }

  // map<uint32, uint32> drop_map = 4;
  if (!this->drop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->drop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->drop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->drop_map().begin();
          it != this->drop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GeneralRewardBin_DropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(drop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GeneralRewardBin_DropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->drop_map().begin();
          it != this->drop_map().end(); ++it) {
        entry.reset(drop_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GeneralRewardBin)
}

::google::protobuf::uint8* GeneralRewardBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GeneralRewardBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 drop_id = 1;
  if (this->drop_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->drop_id(), target);
  }

  // uint32 reward_id = 2;
  if (this->reward_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reward_id(), target);
  }

  // uint32 drop_num = 3;
  if (this->drop_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->drop_num(), target);
  }

  // map<uint32, uint32> drop_map = 4;
  if (!this->drop_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->drop_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->drop_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->drop_map().begin();
          it != this->drop_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GeneralRewardBin_DropMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(drop_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GeneralRewardBin_DropMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->drop_map().begin();
          it != this->drop_map().end(); ++it) {
        entry.reset(drop_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GeneralRewardBin)
  return target;
}

size_t GeneralRewardBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GeneralRewardBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> drop_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->drop_map_size());
  {
    ::google::protobuf::scoped_ptr<GeneralRewardBin_DropMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->drop_map().begin();
        it != this->drop_map().end(); ++it) {
      entry.reset(drop_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 drop_id = 1;
  if (this->drop_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drop_id());
  }

  // uint32 reward_id = 2;
  if (this->reward_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reward_id());
  }

  // uint32 drop_num = 3;
  if (this->drop_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->drop_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GeneralRewardBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GeneralRewardBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GeneralRewardBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GeneralRewardBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GeneralRewardBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GeneralRewardBin)
    MergeFrom(*source);
  }
}

void GeneralRewardBin::MergeFrom(const GeneralRewardBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GeneralRewardBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  drop_map_.MergeFrom(from.drop_map_);
  if (from.drop_id() != 0) {
    set_drop_id(from.drop_id());
  }
  if (from.reward_id() != 0) {
    set_reward_id(from.reward_id());
  }
  if (from.drop_num() != 0) {
    set_drop_num(from.drop_num());
  }
}

void GeneralRewardBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GeneralRewardBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneralRewardBin::CopyFrom(const GeneralRewardBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GeneralRewardBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneralRewardBin::IsInitialized() const {
  return true;
}

void GeneralRewardBin::Swap(GeneralRewardBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GeneralRewardBin::InternalSwap(GeneralRewardBin* other) {
  using std::swap;
  drop_map_.Swap(&other->drop_map_);
  swap(drop_id_, other->drop_id_);
  swap(reward_id_, other->reward_id_);
  swap(drop_num_, other->drop_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GeneralRewardBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GeneralRewardBin

// uint32 drop_id = 1;
void GeneralRewardBin::clear_drop_id() {
  drop_id_ = 0u;
}
::google::protobuf::uint32 GeneralRewardBin::drop_id() const {
  // @@protoc_insertion_point(field_get:proto.GeneralRewardBin.drop_id)
  return drop_id_;
}
void GeneralRewardBin::set_drop_id(::google::protobuf::uint32 value) {
  
  drop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralRewardBin.drop_id)
}

// uint32 reward_id = 2;
void GeneralRewardBin::clear_reward_id() {
  reward_id_ = 0u;
}
::google::protobuf::uint32 GeneralRewardBin::reward_id() const {
  // @@protoc_insertion_point(field_get:proto.GeneralRewardBin.reward_id)
  return reward_id_;
}
void GeneralRewardBin::set_reward_id(::google::protobuf::uint32 value) {
  
  reward_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralRewardBin.reward_id)
}

// uint32 drop_num = 3;
void GeneralRewardBin::clear_drop_num() {
  drop_num_ = 0u;
}
::google::protobuf::uint32 GeneralRewardBin::drop_num() const {
  // @@protoc_insertion_point(field_get:proto.GeneralRewardBin.drop_num)
  return drop_num_;
}
void GeneralRewardBin::set_drop_num(::google::protobuf::uint32 value) {
  
  drop_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralRewardBin.drop_num)
}

// map<uint32, uint32> drop_map = 4;
int GeneralRewardBin::drop_map_size() const {
  return drop_map_.size();
}
void GeneralRewardBin::clear_drop_map() {
  drop_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GeneralRewardBin::drop_map() const {
  // @@protoc_insertion_point(field_map:proto.GeneralRewardBin.drop_map)
  return drop_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GeneralRewardBin::mutable_drop_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GeneralRewardBin.drop_map)
  return drop_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GadgetGeneralRewardBin::GadgetGeneralRewardBin_QualifyInfoMapEntry::GadgetGeneralRewardBin_QualifyInfoMapEntry() {}
GadgetGeneralRewardBin::GadgetGeneralRewardBin_QualifyInfoMapEntry::GadgetGeneralRewardBin_QualifyInfoMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GadgetGeneralRewardBin::GadgetGeneralRewardBin_QualifyInfoMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[8];
}
void GadgetGeneralRewardBin::GadgetGeneralRewardBin_QualifyInfoMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GadgetGeneralRewardBin::GadgetGeneralRewardBin_QualifyInfoMapEntry::MergeFrom(const GadgetGeneralRewardBin_QualifyInfoMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetGeneralRewardBin::kResinFieldNumber;
const int GadgetGeneralRewardBin::kDeadTimeFieldNumber;
const int GadgetGeneralRewardBin::kRemainUidListFieldNumber;
const int GadgetGeneralRewardBin::kQualifyInfoMapFieldNumber;
const int GadgetGeneralRewardBin::kDestroyCdFieldNumber;
const int GadgetGeneralRewardBin::kItemLimitTypeFieldNumber;
const int GadgetGeneralRewardBin::kItemParamFieldNumber;
const int GadgetGeneralRewardBin::kOpenStateListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetGeneralRewardBin::GadgetGeneralRewardBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetGeneralRewardBin)
}
GadgetGeneralRewardBin::GadgetGeneralRewardBin(const GadgetGeneralRewardBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      remain_uid_list_(from.remain_uid_list_),
      open_state_list_(from.open_state_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  qualify_info_map_.MergeFrom(from.qualify_info_map_);
  if (from.has_item_param()) {
    item_param_ = new ::proto::ItemParamBin(*from.item_param_);
  } else {
    item_param_ = NULL;
  }
  ::memcpy(&resin_, &from.resin_,
    static_cast<size_t>(reinterpret_cast<char*>(&item_limit_type_) -
    reinterpret_cast<char*>(&resin_)) + sizeof(item_limit_type_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetGeneralRewardBin)
}

void GadgetGeneralRewardBin::SharedCtor() {
  ::memset(&item_param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_limit_type_) -
      reinterpret_cast<char*>(&item_param_)) + sizeof(item_limit_type_));
  _cached_size_ = 0;
}

GadgetGeneralRewardBin::~GadgetGeneralRewardBin() {
  // @@protoc_insertion_point(destructor:proto.GadgetGeneralRewardBin)
  SharedDtor();
}

void GadgetGeneralRewardBin::SharedDtor() {
  if (this != internal_default_instance()) delete item_param_;
}

void GadgetGeneralRewardBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetGeneralRewardBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetGeneralRewardBin& GadgetGeneralRewardBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetGeneralRewardBin* GadgetGeneralRewardBin::New(::google::protobuf::Arena* arena) const {
  GadgetGeneralRewardBin* n = new GadgetGeneralRewardBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetGeneralRewardBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetGeneralRewardBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remain_uid_list_.Clear();
  qualify_info_map_.Clear();
  open_state_list_.Clear();
  if (GetArenaNoVirtual() == NULL && item_param_ != NULL) {
    delete item_param_;
  }
  item_param_ = NULL;
  ::memset(&resin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&item_limit_type_) -
      reinterpret_cast<char*>(&resin_)) + sizeof(item_limit_type_));
  _internal_metadata_.Clear();
}

bool GadgetGeneralRewardBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetGeneralRewardBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 resin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &resin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dead_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dead_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 remain_uid_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_remain_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_remain_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.GeneralRewardBin> qualify_info_map = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          GadgetGeneralRewardBin_QualifyInfoMapEntry::Parser< ::google::protobuf::internal::MapField<
              GadgetGeneralRewardBin_QualifyInfoMapEntry,
              ::google::protobuf::uint32, ::proto::GeneralRewardBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin > > parser(&qualify_info_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 destroy_cd = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &destroy_cd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 item_limit_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_limit_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ItemParamBin item_param = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item_param()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 open_state_list = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_open_state_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable_open_state_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetGeneralRewardBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetGeneralRewardBin)
  return false;
#undef DO_
}

void GadgetGeneralRewardBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetGeneralRewardBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 resin = 2;
  if (this->resin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->resin(), output);
  }

  // uint32 dead_time = 3;
  if (this->dead_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dead_time(), output);
  }

  // repeated uint32 remain_uid_list = 5;
  if (this->remain_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _remain_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->remain_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->remain_uid_list(i), output);
  }

  // map<uint32, .proto.GeneralRewardBin> qualify_info_map = 7;
  if (!this->qualify_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->qualify_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->qualify_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >::const_iterator
          it = this->qualify_info_map().begin();
          it != this->qualify_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GadgetGeneralRewardBin_QualifyInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(qualify_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GadgetGeneralRewardBin_QualifyInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >::const_iterator
          it = this->qualify_info_map().begin();
          it != this->qualify_info_map().end(); ++it) {
        entry.reset(qualify_info_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
      }
    }
  }

  // uint32 destroy_cd = 8;
  if (this->destroy_cd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->destroy_cd(), output);
  }

  // uint32 item_limit_type = 9;
  if (this->item_limit_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->item_limit_type(), output);
  }

  // .proto.ItemParamBin item_param = 10;
  if (this->has_item_param()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->item_param_, output);
  }

  // repeated uint32 open_state_list = 11;
  if (this->open_state_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _open_state_list_cached_byte_size_));
  }
  for (int i = 0, n = this->open_state_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->open_state_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetGeneralRewardBin)
}

::google::protobuf::uint8* GadgetGeneralRewardBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetGeneralRewardBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 resin = 2;
  if (this->resin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->resin(), target);
  }

  // uint32 dead_time = 3;
  if (this->dead_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dead_time(), target);
  }

  // repeated uint32 remain_uid_list = 5;
  if (this->remain_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _remain_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->remain_uid_list_, target);
  }

  // map<uint32, .proto.GeneralRewardBin> qualify_info_map = 7;
  if (!this->qualify_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->qualify_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->qualify_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >::const_iterator
          it = this->qualify_info_map().begin();
          it != this->qualify_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GadgetGeneralRewardBin_QualifyInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(qualify_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GadgetGeneralRewardBin_QualifyInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >::const_iterator
          it = this->qualify_info_map().begin();
          it != this->qualify_info_map().end(); ++it) {
        entry.reset(qualify_info_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 destroy_cd = 8;
  if (this->destroy_cd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->destroy_cd(), target);
  }

  // uint32 item_limit_type = 9;
  if (this->item_limit_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->item_limit_type(), target);
  }

  // .proto.ItemParamBin item_param = 10;
  if (this->has_item_param()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->item_param_, deterministic, target);
  }

  // repeated uint32 open_state_list = 11;
  if (this->open_state_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _open_state_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->open_state_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetGeneralRewardBin)
  return target;
}

size_t GadgetGeneralRewardBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetGeneralRewardBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 remain_uid_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->remain_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _remain_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint32, .proto.GeneralRewardBin> qualify_info_map = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->qualify_info_map_size());
  {
    ::google::protobuf::scoped_ptr<GadgetGeneralRewardBin_QualifyInfoMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >::const_iterator
        it = this->qualify_info_map().begin();
        it != this->qualify_info_map().end(); ++it) {
      entry.reset(qualify_info_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint32 open_state_list = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->open_state_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _open_state_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.ItemParamBin item_param = 10;
  if (this->has_item_param()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->item_param_);
  }

  // uint32 resin = 2;
  if (this->resin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->resin());
  }

  // uint32 dead_time = 3;
  if (this->dead_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dead_time());
  }

  // uint32 destroy_cd = 8;
  if (this->destroy_cd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->destroy_cd());
  }

  // uint32 item_limit_type = 9;
  if (this->item_limit_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->item_limit_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetGeneralRewardBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetGeneralRewardBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetGeneralRewardBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetGeneralRewardBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetGeneralRewardBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetGeneralRewardBin)
    MergeFrom(*source);
  }
}

void GadgetGeneralRewardBin::MergeFrom(const GadgetGeneralRewardBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetGeneralRewardBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  remain_uid_list_.MergeFrom(from.remain_uid_list_);
  qualify_info_map_.MergeFrom(from.qualify_info_map_);
  open_state_list_.MergeFrom(from.open_state_list_);
  if (from.has_item_param()) {
    mutable_item_param()->::proto::ItemParamBin::MergeFrom(from.item_param());
  }
  if (from.resin() != 0) {
    set_resin(from.resin());
  }
  if (from.dead_time() != 0) {
    set_dead_time(from.dead_time());
  }
  if (from.destroy_cd() != 0) {
    set_destroy_cd(from.destroy_cd());
  }
  if (from.item_limit_type() != 0) {
    set_item_limit_type(from.item_limit_type());
  }
}

void GadgetGeneralRewardBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetGeneralRewardBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetGeneralRewardBin::CopyFrom(const GadgetGeneralRewardBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetGeneralRewardBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetGeneralRewardBin::IsInitialized() const {
  return true;
}

void GadgetGeneralRewardBin::Swap(GadgetGeneralRewardBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetGeneralRewardBin::InternalSwap(GadgetGeneralRewardBin* other) {
  using std::swap;
  remain_uid_list_.InternalSwap(&other->remain_uid_list_);
  qualify_info_map_.Swap(&other->qualify_info_map_);
  open_state_list_.InternalSwap(&other->open_state_list_);
  swap(item_param_, other->item_param_);
  swap(resin_, other->resin_);
  swap(dead_time_, other->dead_time_);
  swap(destroy_cd_, other->destroy_cd_);
  swap(item_limit_type_, other->item_limit_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetGeneralRewardBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetGeneralRewardBin

// uint32 resin = 2;
void GadgetGeneralRewardBin::clear_resin() {
  resin_ = 0u;
}
::google::protobuf::uint32 GadgetGeneralRewardBin::resin() const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.resin)
  return resin_;
}
void GadgetGeneralRewardBin::set_resin(::google::protobuf::uint32 value) {
  
  resin_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardBin.resin)
}

// uint32 dead_time = 3;
void GadgetGeneralRewardBin::clear_dead_time() {
  dead_time_ = 0u;
}
::google::protobuf::uint32 GadgetGeneralRewardBin::dead_time() const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.dead_time)
  return dead_time_;
}
void GadgetGeneralRewardBin::set_dead_time(::google::protobuf::uint32 value) {
  
  dead_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardBin.dead_time)
}

// repeated uint32 remain_uid_list = 5;
int GadgetGeneralRewardBin::remain_uid_list_size() const {
  return remain_uid_list_.size();
}
void GadgetGeneralRewardBin::clear_remain_uid_list() {
  remain_uid_list_.Clear();
}
::google::protobuf::uint32 GadgetGeneralRewardBin::remain_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.remain_uid_list)
  return remain_uid_list_.Get(index);
}
void GadgetGeneralRewardBin::set_remain_uid_list(int index, ::google::protobuf::uint32 value) {
  remain_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardBin.remain_uid_list)
}
void GadgetGeneralRewardBin::add_remain_uid_list(::google::protobuf::uint32 value) {
  remain_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GadgetGeneralRewardBin.remain_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GadgetGeneralRewardBin::remain_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetGeneralRewardBin.remain_uid_list)
  return remain_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GadgetGeneralRewardBin::mutable_remain_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetGeneralRewardBin.remain_uid_list)
  return &remain_uid_list_;
}

// map<uint32, .proto.GeneralRewardBin> qualify_info_map = 7;
int GadgetGeneralRewardBin::qualify_info_map_size() const {
  return qualify_info_map_.size();
}
void GadgetGeneralRewardBin::clear_qualify_info_map() {
  qualify_info_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >&
GadgetGeneralRewardBin::qualify_info_map() const {
  // @@protoc_insertion_point(field_map:proto.GadgetGeneralRewardBin.qualify_info_map)
  return qualify_info_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GeneralRewardBin >*
GadgetGeneralRewardBin::mutable_qualify_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GadgetGeneralRewardBin.qualify_info_map)
  return qualify_info_map_.MutableMap();
}

// uint32 destroy_cd = 8;
void GadgetGeneralRewardBin::clear_destroy_cd() {
  destroy_cd_ = 0u;
}
::google::protobuf::uint32 GadgetGeneralRewardBin::destroy_cd() const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.destroy_cd)
  return destroy_cd_;
}
void GadgetGeneralRewardBin::set_destroy_cd(::google::protobuf::uint32 value) {
  
  destroy_cd_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardBin.destroy_cd)
}

// uint32 item_limit_type = 9;
void GadgetGeneralRewardBin::clear_item_limit_type() {
  item_limit_type_ = 0u;
}
::google::protobuf::uint32 GadgetGeneralRewardBin::item_limit_type() const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.item_limit_type)
  return item_limit_type_;
}
void GadgetGeneralRewardBin::set_item_limit_type(::google::protobuf::uint32 value) {
  
  item_limit_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardBin.item_limit_type)
}

// .proto.ItemParamBin item_param = 10;
bool GadgetGeneralRewardBin::has_item_param() const {
  return this != internal_default_instance() && item_param_ != NULL;
}
void GadgetGeneralRewardBin::clear_item_param() {
  if (GetArenaNoVirtual() == NULL && item_param_ != NULL) delete item_param_;
  item_param_ = NULL;
}
const ::proto::ItemParamBin& GadgetGeneralRewardBin::item_param() const {
  const ::proto::ItemParamBin* p = item_param_;
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.item_param)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ItemParamBin*>(
      &::proto::_ItemParamBin_default_instance_);
}
::proto::ItemParamBin* GadgetGeneralRewardBin::mutable_item_param() {
  
  if (item_param_ == NULL) {
    item_param_ = new ::proto::ItemParamBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GadgetGeneralRewardBin.item_param)
  return item_param_;
}
::proto::ItemParamBin* GadgetGeneralRewardBin::release_item_param() {
  // @@protoc_insertion_point(field_release:proto.GadgetGeneralRewardBin.item_param)
  
  ::proto::ItemParamBin* temp = item_param_;
  item_param_ = NULL;
  return temp;
}
void GadgetGeneralRewardBin::set_allocated_item_param(::proto::ItemParamBin* item_param) {
  delete item_param_;
  item_param_ = item_param;
  if (item_param) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GadgetGeneralRewardBin.item_param)
}

// repeated uint32 open_state_list = 11;
int GadgetGeneralRewardBin::open_state_list_size() const {
  return open_state_list_.size();
}
void GadgetGeneralRewardBin::clear_open_state_list() {
  open_state_list_.Clear();
}
::google::protobuf::uint32 GadgetGeneralRewardBin::open_state_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetGeneralRewardBin.open_state_list)
  return open_state_list_.Get(index);
}
void GadgetGeneralRewardBin::set_open_state_list(int index, ::google::protobuf::uint32 value) {
  open_state_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GadgetGeneralRewardBin.open_state_list)
}
void GadgetGeneralRewardBin::add_open_state_list(::google::protobuf::uint32 value) {
  open_state_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GadgetGeneralRewardBin.open_state_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GadgetGeneralRewardBin::open_state_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetGeneralRewardBin.open_state_list)
  return open_state_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GadgetGeneralRewardBin::mutable_open_state_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetGeneralRewardBin.open_state_list)
  return &open_state_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FishStockBin::kStockTypeFieldNumber;
const int FishStockBin::kGenFishNumFieldNumber;
const int FishStockBin::kMaxNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FishStockBin::FishStockBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FishStockBin)
}
FishStockBin::FishStockBin(const FishStockBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&stock_type_, &from.stock_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_num_) -
    reinterpret_cast<char*>(&stock_type_)) + sizeof(max_num_));
  // @@protoc_insertion_point(copy_constructor:proto.FishStockBin)
}

void FishStockBin::SharedCtor() {
  ::memset(&stock_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_num_) -
      reinterpret_cast<char*>(&stock_type_)) + sizeof(max_num_));
  _cached_size_ = 0;
}

FishStockBin::~FishStockBin() {
  // @@protoc_insertion_point(destructor:proto.FishStockBin)
  SharedDtor();
}

void FishStockBin::SharedDtor() {
}

void FishStockBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FishStockBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FishStockBin& FishStockBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

FishStockBin* FishStockBin::New(::google::protobuf::Arena* arena) const {
  FishStockBin* n = new FishStockBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FishStockBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FishStockBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&stock_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_num_) -
      reinterpret_cast<char*>(&stock_type_)) + sizeof(max_num_));
  _internal_metadata_.Clear();
}

bool FishStockBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FishStockBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 stock_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stock_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gen_fish_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gen_fish_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FishStockBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FishStockBin)
  return false;
#undef DO_
}

void FishStockBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FishStockBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 stock_type = 1;
  if (this->stock_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->stock_type(), output);
  }

  // uint32 gen_fish_num = 2;
  if (this->gen_fish_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gen_fish_num(), output);
  }

  // uint32 max_num = 3;
  if (this->max_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->max_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FishStockBin)
}

::google::protobuf::uint8* FishStockBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FishStockBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 stock_type = 1;
  if (this->stock_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->stock_type(), target);
  }

  // uint32 gen_fish_num = 2;
  if (this->gen_fish_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gen_fish_num(), target);
  }

  // uint32 max_num = 3;
  if (this->max_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->max_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FishStockBin)
  return target;
}

size_t FishStockBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FishStockBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 stock_type = 1;
  if (this->stock_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->stock_type());
  }

  // uint32 gen_fish_num = 2;
  if (this->gen_fish_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gen_fish_num());
  }

  // uint32 max_num = 3;
  if (this->max_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FishStockBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FishStockBin)
  GOOGLE_DCHECK_NE(&from, this);
  const FishStockBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FishStockBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FishStockBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FishStockBin)
    MergeFrom(*source);
  }
}

void FishStockBin::MergeFrom(const FishStockBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FishStockBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stock_type() != 0) {
    set_stock_type(from.stock_type());
  }
  if (from.gen_fish_num() != 0) {
    set_gen_fish_num(from.gen_fish_num());
  }
  if (from.max_num() != 0) {
    set_max_num(from.max_num());
  }
}

void FishStockBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FishStockBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FishStockBin::CopyFrom(const FishStockBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FishStockBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FishStockBin::IsInitialized() const {
  return true;
}

void FishStockBin::Swap(FishStockBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FishStockBin::InternalSwap(FishStockBin* other) {
  using std::swap;
  swap(stock_type_, other->stock_type_);
  swap(gen_fish_num_, other->gen_fish_num_);
  swap(max_num_, other->max_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FishStockBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FishStockBin

// uint32 stock_type = 1;
void FishStockBin::clear_stock_type() {
  stock_type_ = 0u;
}
::google::protobuf::uint32 FishStockBin::stock_type() const {
  // @@protoc_insertion_point(field_get:proto.FishStockBin.stock_type)
  return stock_type_;
}
void FishStockBin::set_stock_type(::google::protobuf::uint32 value) {
  
  stock_type_ = value;
  // @@protoc_insertion_point(field_set:proto.FishStockBin.stock_type)
}

// uint32 gen_fish_num = 2;
void FishStockBin::clear_gen_fish_num() {
  gen_fish_num_ = 0u;
}
::google::protobuf::uint32 FishStockBin::gen_fish_num() const {
  // @@protoc_insertion_point(field_get:proto.FishStockBin.gen_fish_num)
  return gen_fish_num_;
}
void FishStockBin::set_gen_fish_num(::google::protobuf::uint32 value) {
  
  gen_fish_num_ = value;
  // @@protoc_insertion_point(field_set:proto.FishStockBin.gen_fish_num)
}

// uint32 max_num = 3;
void FishStockBin::clear_max_num() {
  max_num_ = 0u;
}
::google::protobuf::uint32 FishStockBin::max_num() const {
  // @@protoc_insertion_point(field_get:proto.FishStockBin.max_num)
  return max_num_;
}
void FishStockBin::set_max_num(::google::protobuf::uint32 value) {
  
  max_num_ = value;
  // @@protoc_insertion_point(field_set:proto.FishStockBin.max_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GadgetFishPoolBin::GadgetFishPoolBin_CachedFishMapEntry::GadgetFishPoolBin_CachedFishMapEntry() {}
GadgetFishPoolBin::GadgetFishPoolBin_CachedFishMapEntry::GadgetFishPoolBin_CachedFishMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GadgetFishPoolBin::GadgetFishPoolBin_CachedFishMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[11];
}
void GadgetFishPoolBin::GadgetFishPoolBin_CachedFishMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GadgetFishPoolBin::GadgetFishPoolBin_CachedFishMapEntry::MergeFrom(const GadgetFishPoolBin_CachedFishMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetFishPoolBin::kFishStockListFieldNumber;
const int GadgetFishPoolBin::kTodayFishNumFieldNumber;
const int GadgetFishPoolBin::kLastRefreshTodayFishTimeFieldNumber;
const int GadgetFishPoolBin::kCachedFishMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetFishPoolBin::GadgetFishPoolBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetFishPoolBin)
}
GadgetFishPoolBin::GadgetFishPoolBin(const GadgetFishPoolBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fish_stock_list_(from.fish_stock_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cached_fish_map_.MergeFrom(from.cached_fish_map_);
  ::memcpy(&today_fish_num_, &from.today_fish_num_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_refresh_today_fish_time_) -
    reinterpret_cast<char*>(&today_fish_num_)) + sizeof(last_refresh_today_fish_time_));
  // @@protoc_insertion_point(copy_constructor:proto.GadgetFishPoolBin)
}

void GadgetFishPoolBin::SharedCtor() {
  ::memset(&today_fish_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_refresh_today_fish_time_) -
      reinterpret_cast<char*>(&today_fish_num_)) + sizeof(last_refresh_today_fish_time_));
  _cached_size_ = 0;
}

GadgetFishPoolBin::~GadgetFishPoolBin() {
  // @@protoc_insertion_point(destructor:proto.GadgetFishPoolBin)
  SharedDtor();
}

void GadgetFishPoolBin::SharedDtor() {
}

void GadgetFishPoolBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetFishPoolBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetFishPoolBin& GadgetFishPoolBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetFishPoolBin* GadgetFishPoolBin::New(::google::protobuf::Arena* arena) const {
  GadgetFishPoolBin* n = new GadgetFishPoolBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetFishPoolBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetFishPoolBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fish_stock_list_.Clear();
  cached_fish_map_.Clear();
  ::memset(&today_fish_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_refresh_today_fish_time_) -
      reinterpret_cast<char*>(&today_fish_num_)) + sizeof(last_refresh_today_fish_time_));
  _internal_metadata_.Clear();
}

bool GadgetFishPoolBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetFishPoolBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.FishStockBin fish_stock_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fish_stock_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 today_fish_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &today_fish_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_refresh_today_fish_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_refresh_today_fish_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> cached_fish_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          GadgetFishPoolBin_CachedFishMapEntry::Parser< ::google::protobuf::internal::MapField<
              GadgetFishPoolBin_CachedFishMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&cached_fish_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetFishPoolBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetFishPoolBin)
  return false;
#undef DO_
}

void GadgetFishPoolBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetFishPoolBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FishStockBin fish_stock_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fish_stock_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fish_stock_list(static_cast<int>(i)), output);
  }

  // uint32 today_fish_num = 2;
  if (this->today_fish_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->today_fish_num(), output);
  }

  // uint32 last_refresh_today_fish_time = 3;
  if (this->last_refresh_today_fish_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->last_refresh_today_fish_time(), output);
  }

  // map<uint32, uint32> cached_fish_map = 4;
  if (!this->cached_fish_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->cached_fish_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->cached_fish_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->cached_fish_map().begin();
          it != this->cached_fish_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GadgetFishPoolBin_CachedFishMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(cached_fish_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GadgetFishPoolBin_CachedFishMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->cached_fish_map().begin();
          it != this->cached_fish_map().end(); ++it) {
        entry.reset(cached_fish_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetFishPoolBin)
}

::google::protobuf::uint8* GadgetFishPoolBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetFishPoolBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.FishStockBin fish_stock_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fish_stock_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->fish_stock_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 today_fish_num = 2;
  if (this->today_fish_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->today_fish_num(), target);
  }

  // uint32 last_refresh_today_fish_time = 3;
  if (this->last_refresh_today_fish_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->last_refresh_today_fish_time(), target);
  }

  // map<uint32, uint32> cached_fish_map = 4;
  if (!this->cached_fish_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->cached_fish_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->cached_fish_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->cached_fish_map().begin();
          it != this->cached_fish_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GadgetFishPoolBin_CachedFishMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(cached_fish_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GadgetFishPoolBin_CachedFishMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->cached_fish_map().begin();
          it != this->cached_fish_map().end(); ++it) {
        entry.reset(cached_fish_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetFishPoolBin)
  return target;
}

size_t GadgetFishPoolBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetFishPoolBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FishStockBin fish_stock_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->fish_stock_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fish_stock_list(static_cast<int>(i)));
    }
  }

  // map<uint32, uint32> cached_fish_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cached_fish_map_size());
  {
    ::google::protobuf::scoped_ptr<GadgetFishPoolBin_CachedFishMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->cached_fish_map().begin();
        it != this->cached_fish_map().end(); ++it) {
      entry.reset(cached_fish_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 today_fish_num = 2;
  if (this->today_fish_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->today_fish_num());
  }

  // uint32 last_refresh_today_fish_time = 3;
  if (this->last_refresh_today_fish_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_refresh_today_fish_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetFishPoolBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetFishPoolBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetFishPoolBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetFishPoolBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetFishPoolBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetFishPoolBin)
    MergeFrom(*source);
  }
}

void GadgetFishPoolBin::MergeFrom(const GadgetFishPoolBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetFishPoolBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fish_stock_list_.MergeFrom(from.fish_stock_list_);
  cached_fish_map_.MergeFrom(from.cached_fish_map_);
  if (from.today_fish_num() != 0) {
    set_today_fish_num(from.today_fish_num());
  }
  if (from.last_refresh_today_fish_time() != 0) {
    set_last_refresh_today_fish_time(from.last_refresh_today_fish_time());
  }
}

void GadgetFishPoolBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetFishPoolBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetFishPoolBin::CopyFrom(const GadgetFishPoolBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetFishPoolBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetFishPoolBin::IsInitialized() const {
  return true;
}

void GadgetFishPoolBin::Swap(GadgetFishPoolBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetFishPoolBin::InternalSwap(GadgetFishPoolBin* other) {
  using std::swap;
  fish_stock_list_.InternalSwap(&other->fish_stock_list_);
  cached_fish_map_.Swap(&other->cached_fish_map_);
  swap(today_fish_num_, other->today_fish_num_);
  swap(last_refresh_today_fish_time_, other->last_refresh_today_fish_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetFishPoolBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetFishPoolBin

// repeated .proto.FishStockBin fish_stock_list = 1;
int GadgetFishPoolBin::fish_stock_list_size() const {
  return fish_stock_list_.size();
}
void GadgetFishPoolBin::clear_fish_stock_list() {
  fish_stock_list_.Clear();
}
const ::proto::FishStockBin& GadgetFishPoolBin::fish_stock_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetFishPoolBin.fish_stock_list)
  return fish_stock_list_.Get(index);
}
::proto::FishStockBin* GadgetFishPoolBin::mutable_fish_stock_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GadgetFishPoolBin.fish_stock_list)
  return fish_stock_list_.Mutable(index);
}
::proto::FishStockBin* GadgetFishPoolBin::add_fish_stock_list() {
  // @@protoc_insertion_point(field_add:proto.GadgetFishPoolBin.fish_stock_list)
  return fish_stock_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FishStockBin >*
GadgetFishPoolBin::mutable_fish_stock_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetFishPoolBin.fish_stock_list)
  return &fish_stock_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FishStockBin >&
GadgetFishPoolBin::fish_stock_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetFishPoolBin.fish_stock_list)
  return fish_stock_list_;
}

// uint32 today_fish_num = 2;
void GadgetFishPoolBin::clear_today_fish_num() {
  today_fish_num_ = 0u;
}
::google::protobuf::uint32 GadgetFishPoolBin::today_fish_num() const {
  // @@protoc_insertion_point(field_get:proto.GadgetFishPoolBin.today_fish_num)
  return today_fish_num_;
}
void GadgetFishPoolBin::set_today_fish_num(::google::protobuf::uint32 value) {
  
  today_fish_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetFishPoolBin.today_fish_num)
}

// uint32 last_refresh_today_fish_time = 3;
void GadgetFishPoolBin::clear_last_refresh_today_fish_time() {
  last_refresh_today_fish_time_ = 0u;
}
::google::protobuf::uint32 GadgetFishPoolBin::last_refresh_today_fish_time() const {
  // @@protoc_insertion_point(field_get:proto.GadgetFishPoolBin.last_refresh_today_fish_time)
  return last_refresh_today_fish_time_;
}
void GadgetFishPoolBin::set_last_refresh_today_fish_time(::google::protobuf::uint32 value) {
  
  last_refresh_today_fish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GadgetFishPoolBin.last_refresh_today_fish_time)
}

// map<uint32, uint32> cached_fish_map = 4;
int GadgetFishPoolBin::cached_fish_map_size() const {
  return cached_fish_map_.size();
}
void GadgetFishPoolBin::clear_cached_fish_map() {
  cached_fish_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GadgetFishPoolBin::cached_fish_map() const {
  // @@protoc_insertion_point(field_map:proto.GadgetFishPoolBin.cached_fish_map)
  return cached_fish_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GadgetFishPoolBin::mutable_cached_fish_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GadgetFishPoolBin.cached_fish_map)
  return cached_fish_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomGadgetNodeInfoBin::kParentIndexFieldNumber;
const int CustomGadgetNodeInfoBin::kConfigIdFieldNumber;
const int CustomGadgetNodeInfoBin::kSlotIdentifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomGadgetNodeInfoBin::CustomGadgetNodeInfoBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CustomGadgetNodeInfoBin)
}
CustomGadgetNodeInfoBin::CustomGadgetNodeInfoBin(const CustomGadgetNodeInfoBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  slot_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.slot_identifier().size() > 0) {
    slot_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slot_identifier_);
  }
  ::memcpy(&parent_index_, &from.parent_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&config_id_) -
    reinterpret_cast<char*>(&parent_index_)) + sizeof(config_id_));
  // @@protoc_insertion_point(copy_constructor:proto.CustomGadgetNodeInfoBin)
}

void CustomGadgetNodeInfoBin::SharedCtor() {
  slot_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&parent_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&parent_index_)) + sizeof(config_id_));
  _cached_size_ = 0;
}

CustomGadgetNodeInfoBin::~CustomGadgetNodeInfoBin() {
  // @@protoc_insertion_point(destructor:proto.CustomGadgetNodeInfoBin)
  SharedDtor();
}

void CustomGadgetNodeInfoBin::SharedDtor() {
  slot_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CustomGadgetNodeInfoBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomGadgetNodeInfoBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CustomGadgetNodeInfoBin& CustomGadgetNodeInfoBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

CustomGadgetNodeInfoBin* CustomGadgetNodeInfoBin::New(::google::protobuf::Arena* arena) const {
  CustomGadgetNodeInfoBin* n = new CustomGadgetNodeInfoBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomGadgetNodeInfoBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CustomGadgetNodeInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  slot_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&parent_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&parent_index_)) + sizeof(config_id_));
  _internal_metadata_.Clear();
}

bool CustomGadgetNodeInfoBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CustomGadgetNodeInfoBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 parent_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string slot_identifier = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slot_identifier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->slot_identifier().data(), static_cast<int>(this->slot_identifier().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.CustomGadgetNodeInfoBin.slot_identifier"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CustomGadgetNodeInfoBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CustomGadgetNodeInfoBin)
  return false;
#undef DO_
}

void CustomGadgetNodeInfoBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CustomGadgetNodeInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 parent_index = 1;
  if (this->parent_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->parent_index(), output);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_id(), output);
  }

  // string slot_identifier = 3;
  if (this->slot_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slot_identifier().data(), static_cast<int>(this->slot_identifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.CustomGadgetNodeInfoBin.slot_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->slot_identifier(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CustomGadgetNodeInfoBin)
}

::google::protobuf::uint8* CustomGadgetNodeInfoBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CustomGadgetNodeInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 parent_index = 1;
  if (this->parent_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->parent_index(), target);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_id(), target);
  }

  // string slot_identifier = 3;
  if (this->slot_identifier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slot_identifier().data(), static_cast<int>(this->slot_identifier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.CustomGadgetNodeInfoBin.slot_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->slot_identifier(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CustomGadgetNodeInfoBin)
  return target;
}

size_t CustomGadgetNodeInfoBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CustomGadgetNodeInfoBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string slot_identifier = 3;
  if (this->slot_identifier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->slot_identifier());
  }

  // int32 parent_index = 1;
  if (this->parent_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent_index());
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomGadgetNodeInfoBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CustomGadgetNodeInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomGadgetNodeInfoBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomGadgetNodeInfoBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CustomGadgetNodeInfoBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CustomGadgetNodeInfoBin)
    MergeFrom(*source);
  }
}

void CustomGadgetNodeInfoBin::MergeFrom(const CustomGadgetNodeInfoBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CustomGadgetNodeInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.slot_identifier().size() > 0) {

    slot_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slot_identifier_);
  }
  if (from.parent_index() != 0) {
    set_parent_index(from.parent_index());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
}

void CustomGadgetNodeInfoBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CustomGadgetNodeInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomGadgetNodeInfoBin::CopyFrom(const CustomGadgetNodeInfoBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CustomGadgetNodeInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomGadgetNodeInfoBin::IsInitialized() const {
  return true;
}

void CustomGadgetNodeInfoBin::Swap(CustomGadgetNodeInfoBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomGadgetNodeInfoBin::InternalSwap(CustomGadgetNodeInfoBin* other) {
  using std::swap;
  slot_identifier_.Swap(&other->slot_identifier_);
  swap(parent_index_, other->parent_index_);
  swap(config_id_, other->config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomGadgetNodeInfoBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomGadgetNodeInfoBin

// int32 parent_index = 1;
void CustomGadgetNodeInfoBin::clear_parent_index() {
  parent_index_ = 0;
}
::google::protobuf::int32 CustomGadgetNodeInfoBin::parent_index() const {
  // @@protoc_insertion_point(field_get:proto.CustomGadgetNodeInfoBin.parent_index)
  return parent_index_;
}
void CustomGadgetNodeInfoBin::set_parent_index(::google::protobuf::int32 value) {
  
  parent_index_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomGadgetNodeInfoBin.parent_index)
}

// uint32 config_id = 2;
void CustomGadgetNodeInfoBin::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 CustomGadgetNodeInfoBin::config_id() const {
  // @@protoc_insertion_point(field_get:proto.CustomGadgetNodeInfoBin.config_id)
  return config_id_;
}
void CustomGadgetNodeInfoBin::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomGadgetNodeInfoBin.config_id)
}

// string slot_identifier = 3;
void CustomGadgetNodeInfoBin::clear_slot_identifier() {
  slot_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CustomGadgetNodeInfoBin::slot_identifier() const {
  // @@protoc_insertion_point(field_get:proto.CustomGadgetNodeInfoBin.slot_identifier)
  return slot_identifier_.GetNoArena();
}
void CustomGadgetNodeInfoBin::set_slot_identifier(const ::std::string& value) {
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CustomGadgetNodeInfoBin.slot_identifier)
}
#if LANG_CXX11
void CustomGadgetNodeInfoBin::set_slot_identifier(::std::string&& value) {
  
  slot_identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CustomGadgetNodeInfoBin.slot_identifier)
}
#endif
void CustomGadgetNodeInfoBin::set_slot_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CustomGadgetNodeInfoBin.slot_identifier)
}
void CustomGadgetNodeInfoBin::set_slot_identifier(const char* value, size_t size) {
  
  slot_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CustomGadgetNodeInfoBin.slot_identifier)
}
::std::string* CustomGadgetNodeInfoBin::mutable_slot_identifier() {
  
  // @@protoc_insertion_point(field_mutable:proto.CustomGadgetNodeInfoBin.slot_identifier)
  return slot_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CustomGadgetNodeInfoBin::release_slot_identifier() {
  // @@protoc_insertion_point(field_release:proto.CustomGadgetNodeInfoBin.slot_identifier)
  
  return slot_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CustomGadgetNodeInfoBin::set_allocated_slot_identifier(::std::string* slot_identifier) {
  if (slot_identifier != NULL) {
    
  } else {
    
  }
  slot_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), slot_identifier);
  // @@protoc_insertion_point(field_set_allocated:proto.CustomGadgetNodeInfoBin.slot_identifier)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomGadgetTreeInfoBin::kNodeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomGadgetTreeInfoBin::CustomGadgetTreeInfoBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CustomGadgetTreeInfoBin)
}
CustomGadgetTreeInfoBin::CustomGadgetTreeInfoBin(const CustomGadgetTreeInfoBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      node_list_(from.node_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.CustomGadgetTreeInfoBin)
}

void CustomGadgetTreeInfoBin::SharedCtor() {
  _cached_size_ = 0;
}

CustomGadgetTreeInfoBin::~CustomGadgetTreeInfoBin() {
  // @@protoc_insertion_point(destructor:proto.CustomGadgetTreeInfoBin)
  SharedDtor();
}

void CustomGadgetTreeInfoBin::SharedDtor() {
}

void CustomGadgetTreeInfoBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomGadgetTreeInfoBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CustomGadgetTreeInfoBin& CustomGadgetTreeInfoBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

CustomGadgetTreeInfoBin* CustomGadgetTreeInfoBin::New(::google::protobuf::Arena* arena) const {
  CustomGadgetTreeInfoBin* n = new CustomGadgetTreeInfoBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomGadgetTreeInfoBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CustomGadgetTreeInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_list_.Clear();
  _internal_metadata_.Clear();
}

bool CustomGadgetTreeInfoBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CustomGadgetTreeInfoBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.CustomGadgetNodeInfoBin node_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_node_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CustomGadgetTreeInfoBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CustomGadgetTreeInfoBin)
  return false;
#undef DO_
}

void CustomGadgetTreeInfoBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CustomGadgetTreeInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.CustomGadgetNodeInfoBin node_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CustomGadgetTreeInfoBin)
}

::google::protobuf::uint8* CustomGadgetTreeInfoBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CustomGadgetTreeInfoBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.CustomGadgetNodeInfoBin node_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->node_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->node_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CustomGadgetTreeInfoBin)
  return target;
}

size_t CustomGadgetTreeInfoBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CustomGadgetTreeInfoBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.CustomGadgetNodeInfoBin node_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->node_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomGadgetTreeInfoBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CustomGadgetTreeInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomGadgetTreeInfoBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomGadgetTreeInfoBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CustomGadgetTreeInfoBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CustomGadgetTreeInfoBin)
    MergeFrom(*source);
  }
}

void CustomGadgetTreeInfoBin::MergeFrom(const CustomGadgetTreeInfoBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CustomGadgetTreeInfoBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_list_.MergeFrom(from.node_list_);
}

void CustomGadgetTreeInfoBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CustomGadgetTreeInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomGadgetTreeInfoBin::CopyFrom(const CustomGadgetTreeInfoBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CustomGadgetTreeInfoBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomGadgetTreeInfoBin::IsInitialized() const {
  return true;
}

void CustomGadgetTreeInfoBin::Swap(CustomGadgetTreeInfoBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomGadgetTreeInfoBin::InternalSwap(CustomGadgetTreeInfoBin* other) {
  using std::swap;
  node_list_.InternalSwap(&other->node_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomGadgetTreeInfoBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomGadgetTreeInfoBin

// repeated .proto.CustomGadgetNodeInfoBin node_list = 1;
int CustomGadgetTreeInfoBin::node_list_size() const {
  return node_list_.size();
}
void CustomGadgetTreeInfoBin::clear_node_list() {
  node_list_.Clear();
}
const ::proto::CustomGadgetNodeInfoBin& CustomGadgetTreeInfoBin::node_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CustomGadgetTreeInfoBin.node_list)
  return node_list_.Get(index);
}
::proto::CustomGadgetNodeInfoBin* CustomGadgetTreeInfoBin::mutable_node_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CustomGadgetTreeInfoBin.node_list)
  return node_list_.Mutable(index);
}
::proto::CustomGadgetNodeInfoBin* CustomGadgetTreeInfoBin::add_node_list() {
  // @@protoc_insertion_point(field_add:proto.CustomGadgetTreeInfoBin.node_list)
  return node_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CustomGadgetNodeInfoBin >*
CustomGadgetTreeInfoBin::mutable_node_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CustomGadgetTreeInfoBin.node_list)
  return &node_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CustomGadgetNodeInfoBin >&
CustomGadgetTreeInfoBin::node_list() const {
  // @@protoc_insertion_point(field_list:proto.CustomGadgetTreeInfoBin.node_list)
  return node_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GadgetWorktopBin::kOptionListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GadgetWorktopBin::GadgetWorktopBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GadgetWorktopBin)
}
GadgetWorktopBin::GadgetWorktopBin(const GadgetWorktopBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      option_list_(from.option_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GadgetWorktopBin)
}

void GadgetWorktopBin::SharedCtor() {
  _cached_size_ = 0;
}

GadgetWorktopBin::~GadgetWorktopBin() {
  // @@protoc_insertion_point(destructor:proto.GadgetWorktopBin)
  SharedDtor();
}

void GadgetWorktopBin::SharedDtor() {
}

void GadgetWorktopBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GadgetWorktopBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GadgetWorktopBin& GadgetWorktopBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

GadgetWorktopBin* GadgetWorktopBin::New(::google::protobuf::Arena* arena) const {
  GadgetWorktopBin* n = new GadgetWorktopBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GadgetWorktopBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GadgetWorktopBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  option_list_.Clear();
  _internal_metadata_.Clear();
}

bool GadgetWorktopBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GadgetWorktopBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 option_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_option_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_option_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GadgetWorktopBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GadgetWorktopBin)
  return false;
#undef DO_
}

void GadgetWorktopBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GadgetWorktopBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 option_list = 1;
  if (this->option_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _option_list_cached_byte_size_));
  }
  for (int i = 0, n = this->option_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->option_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GadgetWorktopBin)
}

::google::protobuf::uint8* GadgetWorktopBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GadgetWorktopBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 option_list = 1;
  if (this->option_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _option_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->option_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GadgetWorktopBin)
  return target;
}

size_t GadgetWorktopBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GadgetWorktopBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 option_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->option_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _option_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GadgetWorktopBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GadgetWorktopBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GadgetWorktopBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GadgetWorktopBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GadgetWorktopBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GadgetWorktopBin)
    MergeFrom(*source);
  }
}

void GadgetWorktopBin::MergeFrom(const GadgetWorktopBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GadgetWorktopBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  option_list_.MergeFrom(from.option_list_);
}

void GadgetWorktopBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GadgetWorktopBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GadgetWorktopBin::CopyFrom(const GadgetWorktopBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GadgetWorktopBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GadgetWorktopBin::IsInitialized() const {
  return true;
}

void GadgetWorktopBin::Swap(GadgetWorktopBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GadgetWorktopBin::InternalSwap(GadgetWorktopBin* other) {
  using std::swap;
  option_list_.InternalSwap(&other->option_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GadgetWorktopBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GadgetWorktopBin

// repeated uint32 option_list = 1;
int GadgetWorktopBin::option_list_size() const {
  return option_list_.size();
}
void GadgetWorktopBin::clear_option_list() {
  option_list_.Clear();
}
::google::protobuf::uint32 GadgetWorktopBin::option_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GadgetWorktopBin.option_list)
  return option_list_.Get(index);
}
void GadgetWorktopBin::set_option_list(int index, ::google::protobuf::uint32 value) {
  option_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GadgetWorktopBin.option_list)
}
void GadgetWorktopBin::add_option_list(::google::protobuf::uint32 value) {
  option_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GadgetWorktopBin.option_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GadgetWorktopBin::option_list() const {
  // @@protoc_insertion_point(field_list:proto.GadgetWorktopBin.option_list)
  return option_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GadgetWorktopBin::mutable_option_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GadgetWorktopBin.option_list)
  return &option_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupGadgetBin::kGadgetStateFieldNumber;
const int GroupGadgetBin::kIsEnableInteractFieldNumber;
const int GroupGadgetBin::kGadgetTalkStateFieldNumber;
const int GroupGadgetBin::kPlatformFieldNumber;
const int GroupGadgetBin::kBossChestFieldNumber;
const int GroupGadgetBin::kBlossomChestFieldNumber;
const int GroupGadgetBin::kGeneralRewardFieldNumber;
const int GroupGadgetBin::kFishPoolFieldNumber;
const int GroupGadgetBin::kCustomGadgetTreeInfoFieldNumber;
const int GroupGadgetBin::kWorktopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupGadgetBin::GroupGadgetBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GroupGadgetBin)
}
GroupGadgetBin::GroupGadgetBin(const GroupGadgetBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gadget_state_, &from.gadget_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&gadget_talk_state_) -
    reinterpret_cast<char*>(&gadget_state_)) + sizeof(gadget_talk_state_));
  clear_has_component();
  switch (from.component_case()) {
    case kPlatform: {
      mutable_platform()->::proto::GadgetPlatformBin::MergeFrom(from.platform());
      break;
    }
    case kBossChest: {
      mutable_boss_chest()->::proto::BossChestBin::MergeFrom(from.boss_chest());
      break;
    }
    case kBlossomChest: {
      mutable_blossom_chest()->::proto::BlossomChestBin::MergeFrom(from.blossom_chest());
      break;
    }
    case kGeneralReward: {
      mutable_general_reward()->::proto::GadgetGeneralRewardBin::MergeFrom(from.general_reward());
      break;
    }
    case kFishPool: {
      mutable_fish_pool()->::proto::GadgetFishPoolBin::MergeFrom(from.fish_pool());
      break;
    }
    case kCustomGadgetTreeInfo: {
      mutable_custom_gadget_tree_info()->::proto::CustomGadgetTreeInfoBin::MergeFrom(from.custom_gadget_tree_info());
      break;
    }
    case kWorktop: {
      mutable_worktop()->::proto::GadgetWorktopBin::MergeFrom(from.worktop());
      break;
    }
    case COMPONENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.GroupGadgetBin)
}

void GroupGadgetBin::SharedCtor() {
  ::memset(&gadget_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_talk_state_) -
      reinterpret_cast<char*>(&gadget_state_)) + sizeof(gadget_talk_state_));
  clear_has_component();
  _cached_size_ = 0;
}

GroupGadgetBin::~GroupGadgetBin() {
  // @@protoc_insertion_point(destructor:proto.GroupGadgetBin)
  SharedDtor();
}

void GroupGadgetBin::SharedDtor() {
  if (has_component()) {
    clear_component();
  }
}

void GroupGadgetBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupGadgetBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupGadgetBin& GroupGadgetBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupGadgetBin* GroupGadgetBin::New(::google::protobuf::Arena* arena) const {
  GroupGadgetBin* n = new GroupGadgetBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupGadgetBin::clear_component() {
// @@protoc_insertion_point(one_of_clear_start:proto.GroupGadgetBin)
  switch (component_case()) {
    case kPlatform: {
      delete component_.platform_;
      break;
    }
    case kBossChest: {
      delete component_.boss_chest_;
      break;
    }
    case kBlossomChest: {
      delete component_.blossom_chest_;
      break;
    }
    case kGeneralReward: {
      delete component_.general_reward_;
      break;
    }
    case kFishPool: {
      delete component_.fish_pool_;
      break;
    }
    case kCustomGadgetTreeInfo: {
      delete component_.custom_gadget_tree_info_;
      break;
    }
    case kWorktop: {
      delete component_.worktop_;
      break;
    }
    case COMPONENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = COMPONENT_NOT_SET;
}


void GroupGadgetBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GroupGadgetBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gadget_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gadget_talk_state_) -
      reinterpret_cast<char*>(&gadget_state_)) + sizeof(gadget_talk_state_));
  clear_component();
  _internal_metadata_.Clear();
}

bool GroupGadgetBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GroupGadgetBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gadget_state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_enable_interact = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_enable_interact_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gadget_talk_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gadget_talk_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GadgetPlatformBin platform = 101;
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_platform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BossChestBin boss_chest = 102;
      case 102: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_boss_chest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.BlossomChestBin blossom_chest = 103;
      case 103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_blossom_chest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GadgetGeneralRewardBin general_reward = 104;
      case 104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 834 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_general_reward()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GadgetFishPoolBin fish_pool = 105;
      case 105: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fish_pool()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CustomGadgetTreeInfoBin custom_gadget_tree_info = 106;
      case 106: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_custom_gadget_tree_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GadgetWorktopBin worktop = 107;
      case 107: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 858 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_worktop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GroupGadgetBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GroupGadgetBin)
  return false;
#undef DO_
}

void GroupGadgetBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GroupGadgetBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_state = 1;
  if (this->gadget_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gadget_state(), output);
  }

  // bool is_enable_interact = 2;
  if (this->is_enable_interact() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_enable_interact(), output);
  }

  // uint32 gadget_talk_state = 3;
  if (this->gadget_talk_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->gadget_talk_state(), output);
  }

  // .proto.GadgetPlatformBin platform = 101;
  if (has_platform()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101, *component_.platform_, output);
  }

  // .proto.BossChestBin boss_chest = 102;
  if (has_boss_chest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      102, *component_.boss_chest_, output);
  }

  // .proto.BlossomChestBin blossom_chest = 103;
  if (has_blossom_chest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      103, *component_.blossom_chest_, output);
  }

  // .proto.GadgetGeneralRewardBin general_reward = 104;
  if (has_general_reward()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      104, *component_.general_reward_, output);
  }

  // .proto.GadgetFishPoolBin fish_pool = 105;
  if (has_fish_pool()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      105, *component_.fish_pool_, output);
  }

  // .proto.CustomGadgetTreeInfoBin custom_gadget_tree_info = 106;
  if (has_custom_gadget_tree_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      106, *component_.custom_gadget_tree_info_, output);
  }

  // .proto.GadgetWorktopBin worktop = 107;
  if (has_worktop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      107, *component_.worktop_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GroupGadgetBin)
}

::google::protobuf::uint8* GroupGadgetBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GroupGadgetBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gadget_state = 1;
  if (this->gadget_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gadget_state(), target);
  }

  // bool is_enable_interact = 2;
  if (this->is_enable_interact() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_enable_interact(), target);
  }

  // uint32 gadget_talk_state = 3;
  if (this->gadget_talk_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->gadget_talk_state(), target);
  }

  // .proto.GadgetPlatformBin platform = 101;
  if (has_platform()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        101, *component_.platform_, deterministic, target);
  }

  // .proto.BossChestBin boss_chest = 102;
  if (has_boss_chest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        102, *component_.boss_chest_, deterministic, target);
  }

  // .proto.BlossomChestBin blossom_chest = 103;
  if (has_blossom_chest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        103, *component_.blossom_chest_, deterministic, target);
  }

  // .proto.GadgetGeneralRewardBin general_reward = 104;
  if (has_general_reward()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        104, *component_.general_reward_, deterministic, target);
  }

  // .proto.GadgetFishPoolBin fish_pool = 105;
  if (has_fish_pool()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        105, *component_.fish_pool_, deterministic, target);
  }

  // .proto.CustomGadgetTreeInfoBin custom_gadget_tree_info = 106;
  if (has_custom_gadget_tree_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        106, *component_.custom_gadget_tree_info_, deterministic, target);
  }

  // .proto.GadgetWorktopBin worktop = 107;
  if (has_worktop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        107, *component_.worktop_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GroupGadgetBin)
  return target;
}

size_t GroupGadgetBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GroupGadgetBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gadget_state = 1;
  if (this->gadget_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_state());
  }

  // bool is_enable_interact = 2;
  if (this->is_enable_interact() != 0) {
    total_size += 1 + 1;
  }

  // uint32 gadget_talk_state = 3;
  if (this->gadget_talk_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gadget_talk_state());
  }

  switch (component_case()) {
    // .proto.GadgetPlatformBin platform = 101;
    case kPlatform: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *component_.platform_);
      break;
    }
    // .proto.BossChestBin boss_chest = 102;
    case kBossChest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *component_.boss_chest_);
      break;
    }
    // .proto.BlossomChestBin blossom_chest = 103;
    case kBlossomChest: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *component_.blossom_chest_);
      break;
    }
    // .proto.GadgetGeneralRewardBin general_reward = 104;
    case kGeneralReward: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *component_.general_reward_);
      break;
    }
    // .proto.GadgetFishPoolBin fish_pool = 105;
    case kFishPool: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *component_.fish_pool_);
      break;
    }
    // .proto.CustomGadgetTreeInfoBin custom_gadget_tree_info = 106;
    case kCustomGadgetTreeInfo: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *component_.custom_gadget_tree_info_);
      break;
    }
    // .proto.GadgetWorktopBin worktop = 107;
    case kWorktop: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *component_.worktop_);
      break;
    }
    case COMPONENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupGadgetBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GroupGadgetBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupGadgetBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupGadgetBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GroupGadgetBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GroupGadgetBin)
    MergeFrom(*source);
  }
}

void GroupGadgetBin::MergeFrom(const GroupGadgetBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GroupGadgetBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gadget_state() != 0) {
    set_gadget_state(from.gadget_state());
  }
  if (from.is_enable_interact() != 0) {
    set_is_enable_interact(from.is_enable_interact());
  }
  if (from.gadget_talk_state() != 0) {
    set_gadget_talk_state(from.gadget_talk_state());
  }
  switch (from.component_case()) {
    case kPlatform: {
      mutable_platform()->::proto::GadgetPlatformBin::MergeFrom(from.platform());
      break;
    }
    case kBossChest: {
      mutable_boss_chest()->::proto::BossChestBin::MergeFrom(from.boss_chest());
      break;
    }
    case kBlossomChest: {
      mutable_blossom_chest()->::proto::BlossomChestBin::MergeFrom(from.blossom_chest());
      break;
    }
    case kGeneralReward: {
      mutable_general_reward()->::proto::GadgetGeneralRewardBin::MergeFrom(from.general_reward());
      break;
    }
    case kFishPool: {
      mutable_fish_pool()->::proto::GadgetFishPoolBin::MergeFrom(from.fish_pool());
      break;
    }
    case kCustomGadgetTreeInfo: {
      mutable_custom_gadget_tree_info()->::proto::CustomGadgetTreeInfoBin::MergeFrom(from.custom_gadget_tree_info());
      break;
    }
    case kWorktop: {
      mutable_worktop()->::proto::GadgetWorktopBin::MergeFrom(from.worktop());
      break;
    }
    case COMPONENT_NOT_SET: {
      break;
    }
  }
}

void GroupGadgetBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GroupGadgetBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupGadgetBin::CopyFrom(const GroupGadgetBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GroupGadgetBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupGadgetBin::IsInitialized() const {
  return true;
}

void GroupGadgetBin::Swap(GroupGadgetBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupGadgetBin::InternalSwap(GroupGadgetBin* other) {
  using std::swap;
  swap(gadget_state_, other->gadget_state_);
  swap(is_enable_interact_, other->is_enable_interact_);
  swap(gadget_talk_state_, other->gadget_talk_state_);
  swap(component_, other->component_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupGadgetBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupGadgetBin

// uint32 gadget_state = 1;
void GroupGadgetBin::clear_gadget_state() {
  gadget_state_ = 0u;
}
::google::protobuf::uint32 GroupGadgetBin::gadget_state() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.gadget_state)
  return gadget_state_;
}
void GroupGadgetBin::set_gadget_state(::google::protobuf::uint32 value) {
  
  gadget_state_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupGadgetBin.gadget_state)
}

// bool is_enable_interact = 2;
void GroupGadgetBin::clear_is_enable_interact() {
  is_enable_interact_ = false;
}
bool GroupGadgetBin::is_enable_interact() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.is_enable_interact)
  return is_enable_interact_;
}
void GroupGadgetBin::set_is_enable_interact(bool value) {
  
  is_enable_interact_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupGadgetBin.is_enable_interact)
}

// uint32 gadget_talk_state = 3;
void GroupGadgetBin::clear_gadget_talk_state() {
  gadget_talk_state_ = 0u;
}
::google::protobuf::uint32 GroupGadgetBin::gadget_talk_state() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.gadget_talk_state)
  return gadget_talk_state_;
}
void GroupGadgetBin::set_gadget_talk_state(::google::protobuf::uint32 value) {
  
  gadget_talk_state_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupGadgetBin.gadget_talk_state)
}

// .proto.GadgetPlatformBin platform = 101;
bool GroupGadgetBin::has_platform() const {
  return component_case() == kPlatform;
}
void GroupGadgetBin::set_has_platform() {
  _oneof_case_[0] = kPlatform;
}
void GroupGadgetBin::clear_platform() {
  if (has_platform()) {
    delete component_.platform_;
    clear_has_component();
  }
}
 const ::proto::GadgetPlatformBin& GroupGadgetBin::platform() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.platform)
  return has_platform()
      ? *component_.platform_
      : ::proto::GadgetPlatformBin::default_instance();
}
::proto::GadgetPlatformBin* GroupGadgetBin::mutable_platform() {
  if (!has_platform()) {
    clear_component();
    set_has_platform();
    component_.platform_ = new ::proto::GadgetPlatformBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.platform)
  return component_.platform_;
}
::proto::GadgetPlatformBin* GroupGadgetBin::release_platform() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.platform)
  if (has_platform()) {
    clear_has_component();
    ::proto::GadgetPlatformBin* temp = component_.platform_;
    component_.platform_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GroupGadgetBin::set_allocated_platform(::proto::GadgetPlatformBin* platform) {
  clear_component();
  if (platform) {
    set_has_platform();
    component_.platform_ = platform;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.platform)
}

// .proto.BossChestBin boss_chest = 102;
bool GroupGadgetBin::has_boss_chest() const {
  return component_case() == kBossChest;
}
void GroupGadgetBin::set_has_boss_chest() {
  _oneof_case_[0] = kBossChest;
}
void GroupGadgetBin::clear_boss_chest() {
  if (has_boss_chest()) {
    delete component_.boss_chest_;
    clear_has_component();
  }
}
 const ::proto::BossChestBin& GroupGadgetBin::boss_chest() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.boss_chest)
  return has_boss_chest()
      ? *component_.boss_chest_
      : ::proto::BossChestBin::default_instance();
}
::proto::BossChestBin* GroupGadgetBin::mutable_boss_chest() {
  if (!has_boss_chest()) {
    clear_component();
    set_has_boss_chest();
    component_.boss_chest_ = new ::proto::BossChestBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.boss_chest)
  return component_.boss_chest_;
}
::proto::BossChestBin* GroupGadgetBin::release_boss_chest() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.boss_chest)
  if (has_boss_chest()) {
    clear_has_component();
    ::proto::BossChestBin* temp = component_.boss_chest_;
    component_.boss_chest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GroupGadgetBin::set_allocated_boss_chest(::proto::BossChestBin* boss_chest) {
  clear_component();
  if (boss_chest) {
    set_has_boss_chest();
    component_.boss_chest_ = boss_chest;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.boss_chest)
}

// .proto.BlossomChestBin blossom_chest = 103;
bool GroupGadgetBin::has_blossom_chest() const {
  return component_case() == kBlossomChest;
}
void GroupGadgetBin::set_has_blossom_chest() {
  _oneof_case_[0] = kBlossomChest;
}
void GroupGadgetBin::clear_blossom_chest() {
  if (has_blossom_chest()) {
    delete component_.blossom_chest_;
    clear_has_component();
  }
}
 const ::proto::BlossomChestBin& GroupGadgetBin::blossom_chest() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.blossom_chest)
  return has_blossom_chest()
      ? *component_.blossom_chest_
      : ::proto::BlossomChestBin::default_instance();
}
::proto::BlossomChestBin* GroupGadgetBin::mutable_blossom_chest() {
  if (!has_blossom_chest()) {
    clear_component();
    set_has_blossom_chest();
    component_.blossom_chest_ = new ::proto::BlossomChestBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.blossom_chest)
  return component_.blossom_chest_;
}
::proto::BlossomChestBin* GroupGadgetBin::release_blossom_chest() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.blossom_chest)
  if (has_blossom_chest()) {
    clear_has_component();
    ::proto::BlossomChestBin* temp = component_.blossom_chest_;
    component_.blossom_chest_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GroupGadgetBin::set_allocated_blossom_chest(::proto::BlossomChestBin* blossom_chest) {
  clear_component();
  if (blossom_chest) {
    set_has_blossom_chest();
    component_.blossom_chest_ = blossom_chest;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.blossom_chest)
}

// .proto.GadgetGeneralRewardBin general_reward = 104;
bool GroupGadgetBin::has_general_reward() const {
  return component_case() == kGeneralReward;
}
void GroupGadgetBin::set_has_general_reward() {
  _oneof_case_[0] = kGeneralReward;
}
void GroupGadgetBin::clear_general_reward() {
  if (has_general_reward()) {
    delete component_.general_reward_;
    clear_has_component();
  }
}
 const ::proto::GadgetGeneralRewardBin& GroupGadgetBin::general_reward() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.general_reward)
  return has_general_reward()
      ? *component_.general_reward_
      : ::proto::GadgetGeneralRewardBin::default_instance();
}
::proto::GadgetGeneralRewardBin* GroupGadgetBin::mutable_general_reward() {
  if (!has_general_reward()) {
    clear_component();
    set_has_general_reward();
    component_.general_reward_ = new ::proto::GadgetGeneralRewardBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.general_reward)
  return component_.general_reward_;
}
::proto::GadgetGeneralRewardBin* GroupGadgetBin::release_general_reward() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.general_reward)
  if (has_general_reward()) {
    clear_has_component();
    ::proto::GadgetGeneralRewardBin* temp = component_.general_reward_;
    component_.general_reward_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GroupGadgetBin::set_allocated_general_reward(::proto::GadgetGeneralRewardBin* general_reward) {
  clear_component();
  if (general_reward) {
    set_has_general_reward();
    component_.general_reward_ = general_reward;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.general_reward)
}

// .proto.GadgetFishPoolBin fish_pool = 105;
bool GroupGadgetBin::has_fish_pool() const {
  return component_case() == kFishPool;
}
void GroupGadgetBin::set_has_fish_pool() {
  _oneof_case_[0] = kFishPool;
}
void GroupGadgetBin::clear_fish_pool() {
  if (has_fish_pool()) {
    delete component_.fish_pool_;
    clear_has_component();
  }
}
 const ::proto::GadgetFishPoolBin& GroupGadgetBin::fish_pool() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.fish_pool)
  return has_fish_pool()
      ? *component_.fish_pool_
      : ::proto::GadgetFishPoolBin::default_instance();
}
::proto::GadgetFishPoolBin* GroupGadgetBin::mutable_fish_pool() {
  if (!has_fish_pool()) {
    clear_component();
    set_has_fish_pool();
    component_.fish_pool_ = new ::proto::GadgetFishPoolBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.fish_pool)
  return component_.fish_pool_;
}
::proto::GadgetFishPoolBin* GroupGadgetBin::release_fish_pool() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.fish_pool)
  if (has_fish_pool()) {
    clear_has_component();
    ::proto::GadgetFishPoolBin* temp = component_.fish_pool_;
    component_.fish_pool_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GroupGadgetBin::set_allocated_fish_pool(::proto::GadgetFishPoolBin* fish_pool) {
  clear_component();
  if (fish_pool) {
    set_has_fish_pool();
    component_.fish_pool_ = fish_pool;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.fish_pool)
}

// .proto.CustomGadgetTreeInfoBin custom_gadget_tree_info = 106;
bool GroupGadgetBin::has_custom_gadget_tree_info() const {
  return component_case() == kCustomGadgetTreeInfo;
}
void GroupGadgetBin::set_has_custom_gadget_tree_info() {
  _oneof_case_[0] = kCustomGadgetTreeInfo;
}
void GroupGadgetBin::clear_custom_gadget_tree_info() {
  if (has_custom_gadget_tree_info()) {
    delete component_.custom_gadget_tree_info_;
    clear_has_component();
  }
}
 const ::proto::CustomGadgetTreeInfoBin& GroupGadgetBin::custom_gadget_tree_info() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.custom_gadget_tree_info)
  return has_custom_gadget_tree_info()
      ? *component_.custom_gadget_tree_info_
      : ::proto::CustomGadgetTreeInfoBin::default_instance();
}
::proto::CustomGadgetTreeInfoBin* GroupGadgetBin::mutable_custom_gadget_tree_info() {
  if (!has_custom_gadget_tree_info()) {
    clear_component();
    set_has_custom_gadget_tree_info();
    component_.custom_gadget_tree_info_ = new ::proto::CustomGadgetTreeInfoBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.custom_gadget_tree_info)
  return component_.custom_gadget_tree_info_;
}
::proto::CustomGadgetTreeInfoBin* GroupGadgetBin::release_custom_gadget_tree_info() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.custom_gadget_tree_info)
  if (has_custom_gadget_tree_info()) {
    clear_has_component();
    ::proto::CustomGadgetTreeInfoBin* temp = component_.custom_gadget_tree_info_;
    component_.custom_gadget_tree_info_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GroupGadgetBin::set_allocated_custom_gadget_tree_info(::proto::CustomGadgetTreeInfoBin* custom_gadget_tree_info) {
  clear_component();
  if (custom_gadget_tree_info) {
    set_has_custom_gadget_tree_info();
    component_.custom_gadget_tree_info_ = custom_gadget_tree_info;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.custom_gadget_tree_info)
}

// .proto.GadgetWorktopBin worktop = 107;
bool GroupGadgetBin::has_worktop() const {
  return component_case() == kWorktop;
}
void GroupGadgetBin::set_has_worktop() {
  _oneof_case_[0] = kWorktop;
}
void GroupGadgetBin::clear_worktop() {
  if (has_worktop()) {
    delete component_.worktop_;
    clear_has_component();
  }
}
 const ::proto::GadgetWorktopBin& GroupGadgetBin::worktop() const {
  // @@protoc_insertion_point(field_get:proto.GroupGadgetBin.worktop)
  return has_worktop()
      ? *component_.worktop_
      : ::proto::GadgetWorktopBin::default_instance();
}
::proto::GadgetWorktopBin* GroupGadgetBin::mutable_worktop() {
  if (!has_worktop()) {
    clear_component();
    set_has_worktop();
    component_.worktop_ = new ::proto::GadgetWorktopBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.GroupGadgetBin.worktop)
  return component_.worktop_;
}
::proto::GadgetWorktopBin* GroupGadgetBin::release_worktop() {
  // @@protoc_insertion_point(field_release:proto.GroupGadgetBin.worktop)
  if (has_worktop()) {
    clear_has_component();
    ::proto::GadgetWorktopBin* temp = component_.worktop_;
    component_.worktop_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void GroupGadgetBin::set_allocated_worktop(::proto::GadgetWorktopBin* worktop) {
  clear_component();
  if (worktop) {
    set_has_worktop();
    component_.worktop_ = worktop;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GroupGadgetBin.worktop)
}

bool GroupGadgetBin::has_component() const {
  return component_case() != COMPONENT_NOT_SET;
}
void GroupGadgetBin::clear_has_component() {
  _oneof_case_[0] = COMPONENT_NOT_SET;
}
GroupGadgetBin::ComponentCase GroupGadgetBin::component_case() const {
  return GroupGadgetBin::ComponentCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupMonsterBin::kDroppedHpPercentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupMonsterBin::GroupMonsterBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GroupMonsterBin)
}
GroupMonsterBin::GroupMonsterBin(const GroupMonsterBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dropped_hp_percent_ = from.dropped_hp_percent_;
  // @@protoc_insertion_point(copy_constructor:proto.GroupMonsterBin)
}

void GroupMonsterBin::SharedCtor() {
  dropped_hp_percent_ = 0u;
  _cached_size_ = 0;
}

GroupMonsterBin::~GroupMonsterBin() {
  // @@protoc_insertion_point(destructor:proto.GroupMonsterBin)
  SharedDtor();
}

void GroupMonsterBin::SharedDtor() {
}

void GroupMonsterBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupMonsterBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupMonsterBin& GroupMonsterBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupMonsterBin* GroupMonsterBin::New(::google::protobuf::Arena* arena) const {
  GroupMonsterBin* n = new GroupMonsterBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupMonsterBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GroupMonsterBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dropped_hp_percent_ = 0u;
  _internal_metadata_.Clear();
}

bool GroupMonsterBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GroupMonsterBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 dropped_hp_percent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dropped_hp_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GroupMonsterBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GroupMonsterBin)
  return false;
#undef DO_
}

void GroupMonsterBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GroupMonsterBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dropped_hp_percent = 1;
  if (this->dropped_hp_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dropped_hp_percent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GroupMonsterBin)
}

::google::protobuf::uint8* GroupMonsterBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GroupMonsterBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 dropped_hp_percent = 1;
  if (this->dropped_hp_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dropped_hp_percent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GroupMonsterBin)
  return target;
}

size_t GroupMonsterBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GroupMonsterBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 dropped_hp_percent = 1;
  if (this->dropped_hp_percent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dropped_hp_percent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupMonsterBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GroupMonsterBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupMonsterBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupMonsterBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GroupMonsterBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GroupMonsterBin)
    MergeFrom(*source);
  }
}

void GroupMonsterBin::MergeFrom(const GroupMonsterBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GroupMonsterBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dropped_hp_percent() != 0) {
    set_dropped_hp_percent(from.dropped_hp_percent());
  }
}

void GroupMonsterBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GroupMonsterBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupMonsterBin::CopyFrom(const GroupMonsterBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GroupMonsterBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupMonsterBin::IsInitialized() const {
  return true;
}

void GroupMonsterBin::Swap(GroupMonsterBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupMonsterBin::InternalSwap(GroupMonsterBin* other) {
  using std::swap;
  swap(dropped_hp_percent_, other->dropped_hp_percent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupMonsterBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupMonsterBin

// uint32 dropped_hp_percent = 1;
void GroupMonsterBin::clear_dropped_hp_percent() {
  dropped_hp_percent_ = 0u;
}
::google::protobuf::uint32 GroupMonsterBin::dropped_hp_percent() const {
  // @@protoc_insertion_point(field_get:proto.GroupMonsterBin.dropped_hp_percent)
  return dropped_hp_percent_;
}
void GroupMonsterBin::set_dropped_hp_percent(::google::protobuf::uint32 value) {
  
  dropped_hp_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupMonsterBin.dropped_hp_percent)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupGatherBin::kConfigIdFieldNumber;
const int GroupGatherBin::kLastRefreshTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupGatherBin::GroupGatherBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GroupGatherBin)
}
GroupGatherBin::GroupGatherBin(const GroupGatherBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&config_id_, &from.config_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_refresh_time_) -
    reinterpret_cast<char*>(&config_id_)) + sizeof(last_refresh_time_));
  // @@protoc_insertion_point(copy_constructor:proto.GroupGatherBin)
}

void GroupGatherBin::SharedCtor() {
  ::memset(&config_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_refresh_time_) -
      reinterpret_cast<char*>(&config_id_)) + sizeof(last_refresh_time_));
  _cached_size_ = 0;
}

GroupGatherBin::~GroupGatherBin() {
  // @@protoc_insertion_point(destructor:proto.GroupGatherBin)
  SharedDtor();
}

void GroupGatherBin::SharedDtor() {
}

void GroupGatherBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupGatherBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupGatherBin& GroupGatherBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupGatherBin* GroupGatherBin::New(::google::protobuf::Arena* arena) const {
  GroupGatherBin* n = new GroupGatherBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupGatherBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GroupGatherBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&config_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_refresh_time_) -
      reinterpret_cast<char*>(&config_id_)) + sizeof(last_refresh_time_));
  _internal_metadata_.Clear();
}

bool GroupGatherBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GroupGatherBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 config_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 last_refresh_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &last_refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GroupGatherBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GroupGatherBin)
  return false;
#undef DO_
}

void GroupGatherBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GroupGatherBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_id = 1;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->config_id(), output);
  }

  // fixed32 last_refresh_time = 2;
  if (this->last_refresh_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->last_refresh_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GroupGatherBin)
}

::google::protobuf::uint8* GroupGatherBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GroupGatherBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_id = 1;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->config_id(), target);
  }

  // fixed32 last_refresh_time = 2;
  if (this->last_refresh_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->last_refresh_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GroupGatherBin)
  return target;
}

size_t GroupGatherBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GroupGatherBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 config_id = 1;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // fixed32 last_refresh_time = 2;
  if (this->last_refresh_time() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupGatherBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GroupGatherBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupGatherBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupGatherBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GroupGatherBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GroupGatherBin)
    MergeFrom(*source);
  }
}

void GroupGatherBin::MergeFrom(const GroupGatherBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GroupGatherBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.last_refresh_time() != 0) {
    set_last_refresh_time(from.last_refresh_time());
  }
}

void GroupGatherBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GroupGatherBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupGatherBin::CopyFrom(const GroupGatherBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GroupGatherBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupGatherBin::IsInitialized() const {
  return true;
}

void GroupGatherBin::Swap(GroupGatherBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupGatherBin::InternalSwap(GroupGatherBin* other) {
  using std::swap;
  swap(config_id_, other->config_id_);
  swap(last_refresh_time_, other->last_refresh_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupGatherBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupGatherBin

// uint32 config_id = 1;
void GroupGatherBin::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 GroupGatherBin::config_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupGatherBin.config_id)
  return config_id_;
}
void GroupGatherBin::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupGatherBin.config_id)
}

// fixed32 last_refresh_time = 2;
void GroupGatherBin::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
::google::protobuf::uint32 GroupGatherBin::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.GroupGatherBin.last_refresh_time)
  return last_refresh_time_;
}
void GroupGatherBin::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupGatherBin.last_refresh_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupRefreshTimeBin::kSaveTypeFieldNumber;
const int GroupRefreshTimeBin::kLastRefreshTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupRefreshTimeBin::GroupRefreshTimeBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GroupRefreshTimeBin)
}
GroupRefreshTimeBin::GroupRefreshTimeBin(const GroupRefreshTimeBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&save_type_, &from.save_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_refresh_time_) -
    reinterpret_cast<char*>(&save_type_)) + sizeof(last_refresh_time_));
  // @@protoc_insertion_point(copy_constructor:proto.GroupRefreshTimeBin)
}

void GroupRefreshTimeBin::SharedCtor() {
  ::memset(&save_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_refresh_time_) -
      reinterpret_cast<char*>(&save_type_)) + sizeof(last_refresh_time_));
  _cached_size_ = 0;
}

GroupRefreshTimeBin::~GroupRefreshTimeBin() {
  // @@protoc_insertion_point(destructor:proto.GroupRefreshTimeBin)
  SharedDtor();
}

void GroupRefreshTimeBin::SharedDtor() {
}

void GroupRefreshTimeBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupRefreshTimeBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupRefreshTimeBin& GroupRefreshTimeBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupRefreshTimeBin* GroupRefreshTimeBin::New(::google::protobuf::Arena* arena) const {
  GroupRefreshTimeBin* n = new GroupRefreshTimeBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupRefreshTimeBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GroupRefreshTimeBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&save_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_refresh_time_) -
      reinterpret_cast<char*>(&save_type_)) + sizeof(last_refresh_time_));
  _internal_metadata_.Clear();
}

bool GroupRefreshTimeBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GroupRefreshTimeBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 save_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &save_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 last_refresh_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &last_refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GroupRefreshTimeBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GroupRefreshTimeBin)
  return false;
#undef DO_
}

void GroupRefreshTimeBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GroupRefreshTimeBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 save_type = 1;
  if (this->save_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->save_type(), output);
  }

  // fixed32 last_refresh_time = 2;
  if (this->last_refresh_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->last_refresh_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GroupRefreshTimeBin)
}

::google::protobuf::uint8* GroupRefreshTimeBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GroupRefreshTimeBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 save_type = 1;
  if (this->save_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->save_type(), target);
  }

  // fixed32 last_refresh_time = 2;
  if (this->last_refresh_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->last_refresh_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GroupRefreshTimeBin)
  return target;
}

size_t GroupRefreshTimeBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GroupRefreshTimeBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 save_type = 1;
  if (this->save_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->save_type());
  }

  // fixed32 last_refresh_time = 2;
  if (this->last_refresh_time() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupRefreshTimeBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GroupRefreshTimeBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupRefreshTimeBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupRefreshTimeBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GroupRefreshTimeBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GroupRefreshTimeBin)
    MergeFrom(*source);
  }
}

void GroupRefreshTimeBin::MergeFrom(const GroupRefreshTimeBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GroupRefreshTimeBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.save_type() != 0) {
    set_save_type(from.save_type());
  }
  if (from.last_refresh_time() != 0) {
    set_last_refresh_time(from.last_refresh_time());
  }
}

void GroupRefreshTimeBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GroupRefreshTimeBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupRefreshTimeBin::CopyFrom(const GroupRefreshTimeBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GroupRefreshTimeBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupRefreshTimeBin::IsInitialized() const {
  return true;
}

void GroupRefreshTimeBin::Swap(GroupRefreshTimeBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupRefreshTimeBin::InternalSwap(GroupRefreshTimeBin* other) {
  using std::swap;
  swap(save_type_, other->save_type_);
  swap(last_refresh_time_, other->last_refresh_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupRefreshTimeBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupRefreshTimeBin

// uint32 save_type = 1;
void GroupRefreshTimeBin::clear_save_type() {
  save_type_ = 0u;
}
::google::protobuf::uint32 GroupRefreshTimeBin::save_type() const {
  // @@protoc_insertion_point(field_get:proto.GroupRefreshTimeBin.save_type)
  return save_type_;
}
void GroupRefreshTimeBin::set_save_type(::google::protobuf::uint32 value) {
  
  save_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupRefreshTimeBin.save_type)
}

// fixed32 last_refresh_time = 2;
void GroupRefreshTimeBin::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
::google::protobuf::uint32 GroupRefreshTimeBin::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.GroupRefreshTimeBin.last_refresh_time)
  return last_refresh_time_;
}
void GroupRefreshTimeBin::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupRefreshTimeBin.last_refresh_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GroupBin::GroupBin_MonsterMapEntry::GroupBin_MonsterMapEntry() {}
GroupBin::GroupBin_MonsterMapEntry::GroupBin_MonsterMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GroupBin::GroupBin_MonsterMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[20];
}
void GroupBin::GroupBin_MonsterMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GroupBin::GroupBin_MonsterMapEntry::MergeFrom(const GroupBin_MonsterMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GroupBin::GroupBin_GadgetMapEntry::GroupBin_GadgetMapEntry() {}
GroupBin::GroupBin_GadgetMapEntry::GroupBin_GadgetMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GroupBin::GroupBin_GadgetMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[21];
}
void GroupBin::GroupBin_GadgetMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GroupBin::GroupBin_GadgetMapEntry::MergeFrom(const GroupBin_GadgetMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GroupBin::GroupBin_TriggerMapEntry::GroupBin_TriggerMapEntry() {}
GroupBin::GroupBin_TriggerMapEntry::GroupBin_TriggerMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GroupBin::GroupBin_TriggerMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[22];
}
void GroupBin::GroupBin_TriggerMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GroupBin::GroupBin_TriggerMapEntry::MergeFrom(const GroupBin_TriggerMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GroupBin::GroupBin_VariableMapEntry::GroupBin_VariableMapEntry() {}
GroupBin::GroupBin_VariableMapEntry::GroupBin_VariableMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GroupBin::GroupBin_VariableMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[23];
}
void GroupBin::GroupBin_VariableMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GroupBin::GroupBin_VariableMapEntry::MergeFrom(const GroupBin_VariableMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GroupBin::GroupBin_BossDieInfoMapEntry::GroupBin_BossDieInfoMapEntry() {}
GroupBin::GroupBin_BossDieInfoMapEntry::GroupBin_BossDieInfoMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GroupBin::GroupBin_BossDieInfoMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[24];
}
void GroupBin::GroupBin_BossDieInfoMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GroupBin::GroupBin_BossDieInfoMapEntry::MergeFrom(const GroupBin_BossDieInfoMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GroupBin::kMonsterMapFieldNumber;
const int GroupBin::kDelMonsterListFieldNumber;
const int GroupBin::kGadgetMapFieldNumber;
const int GroupBin::kDelGadgetListFieldNumber;
const int GroupBin::kTriggerMapFieldNumber;
const int GroupBin::kVariableMapFieldNumber;
const int GroupBin::kSuiteIndexFieldNumber;
const int GroupBin::kShowCutsceneChestListFieldNumber;
const int GroupBin::kChallengeRecordListFieldNumber;
const int GroupBin::kReviseLevelFieldNumber;
const int GroupBin::kLastRefreshTimeFieldNumber;
const int GroupBin::kTargetSuiteIndexFieldNumber;
const int GroupBin::kBossDieInfoMapFieldNumber;
const int GroupBin::kGatherRefreshTimeListFieldNumber;
const int GroupBin::kIsReplaceableFieldNumber;
const int GroupBin::kReplaceableVersionFieldNumber;
const int GroupBin::kTriggerListFieldNumber;
const int GroupBin::kGroupRefreshListFieldNumber;
const int GroupBin::kVariableConfigIdBinListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GroupBin::GroupBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GroupBin)
}
GroupBin::GroupBin(const GroupBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      del_monster_list_(from.del_monster_list_),
      del_gadget_list_(from.del_gadget_list_),
      show_cutscene_chest_list_(from.show_cutscene_chest_list_),
      challenge_record_list_(from.challenge_record_list_),
      gather_refresh_time_list_(from.gather_refresh_time_list_),
      trigger_list_(from.trigger_list_),
      group_refresh_list_(from.group_refresh_list_),
      variable_config_id_bin_list_(from.variable_config_id_bin_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  monster_map_.MergeFrom(from.monster_map_);
  gadget_map_.MergeFrom(from.gadget_map_);
  trigger_map_.MergeFrom(from.trigger_map_);
  variable_map_.MergeFrom(from.variable_map_);
  boss_die_info_map_.MergeFrom(from.boss_die_info_map_);
  ::memcpy(&suite_index_, &from.suite_index_,
    static_cast<size_t>(reinterpret_cast<char*>(&replaceable_version_) -
    reinterpret_cast<char*>(&suite_index_)) + sizeof(replaceable_version_));
  // @@protoc_insertion_point(copy_constructor:proto.GroupBin)
}

void GroupBin::SharedCtor() {
  ::memset(&suite_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replaceable_version_) -
      reinterpret_cast<char*>(&suite_index_)) + sizeof(replaceable_version_));
  _cached_size_ = 0;
}

GroupBin::~GroupBin() {
  // @@protoc_insertion_point(destructor:proto.GroupBin)
  SharedDtor();
}

void GroupBin::SharedDtor() {
}

void GroupBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GroupBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GroupBin& GroupBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

GroupBin* GroupBin::New(::google::protobuf::Arena* arena) const {
  GroupBin* n = new GroupBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GroupBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GroupBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monster_map_.Clear();
  del_monster_list_.Clear();
  gadget_map_.Clear();
  del_gadget_list_.Clear();
  trigger_map_.Clear();
  variable_map_.Clear();
  show_cutscene_chest_list_.Clear();
  challenge_record_list_.Clear();
  boss_die_info_map_.Clear();
  gather_refresh_time_list_.Clear();
  trigger_list_.Clear();
  group_refresh_list_.Clear();
  variable_config_id_bin_list_.Clear();
  ::memset(&suite_index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&replaceable_version_) -
      reinterpret_cast<char*>(&suite_index_)) + sizeof(replaceable_version_));
  _internal_metadata_.Clear();
}

bool GroupBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GroupBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .proto.GroupMonsterBin> monster_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          GroupBin_MonsterMapEntry::Parser< ::google::protobuf::internal::MapField<
              GroupBin_MonsterMapEntry,
              ::google::protobuf::uint32, ::proto::GroupMonsterBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin > > parser(&monster_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 del_monster_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_del_monster_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_del_monster_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.GroupGadgetBin> gadget_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          GroupBin_GadgetMapEntry::Parser< ::google::protobuf::internal::MapField<
              GroupBin_GadgetMapEntry,
              ::google::protobuf::uint32, ::proto::GroupGadgetBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin > > parser(&gadget_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 del_gadget_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_del_gadget_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_del_gadget_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .proto.GroupTriggerBin> trigger_map = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          GroupBin_TriggerMapEntry::Parser< ::google::protobuf::internal::MapField<
              GroupBin_TriggerMapEntry,
              ::std::string, ::proto::GroupTriggerBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin > > parser(&trigger_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GroupBin.TriggerMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .proto.GroupVariableBin> variable_map = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          GroupBin_VariableMapEntry::Parser< ::google::protobuf::internal::MapField<
              GroupBin_VariableMapEntry,
              ::std::string, ::proto::GroupVariableBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin > > parser(&variable_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.GroupBin.VariableMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 suite_index = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &suite_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 show_cutscene_chest_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_show_cutscene_chest_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_show_cutscene_chest_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ChallengeRecordBin challenge_record_list = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_challenge_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 revise_level = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &revise_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 last_refresh_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &last_refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_suite_index = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_suite_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.BossDieInfoBin> boss_die_info_map = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          GroupBin_BossDieInfoMapEntry::Parser< ::google::protobuf::internal::MapField<
              GroupBin_BossDieInfoMapEntry,
              ::google::protobuf::uint32, ::proto::BossDieInfoBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin > > parser(&boss_die_info_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.GroupGatherBin gather_refresh_time_list = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gather_refresh_time_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_replaceable = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_replaceable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 replaceable_version = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &replaceable_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.GroupTriggerBin trigger_list = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_trigger_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.GroupRefreshTimeBin group_refresh_list = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_group_refresh_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.GroupVariableConfigIdBin variable_config_id_bin_list = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_variable_config_id_bin_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GroupBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GroupBin)
  return false;
#undef DO_
}

void GroupBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GroupBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.GroupMonsterBin> monster_map = 1;
  if (!this->monster_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->monster_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->monster_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >::const_iterator
          it = this->monster_map().begin();
          it != this->monster_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupBin_MonsterMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(monster_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupBin_MonsterMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >::const_iterator
          it = this->monster_map().begin();
          it != this->monster_map().end(); ++it) {
        entry.reset(monster_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // repeated uint32 del_monster_list = 2;
  if (this->del_monster_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _del_monster_list_cached_byte_size_));
  }
  for (int i = 0, n = this->del_monster_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->del_monster_list(i), output);
  }

  // map<uint32, .proto.GroupGadgetBin> gadget_map = 3;
  if (!this->gadget_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->gadget_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gadget_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >::const_iterator
          it = this->gadget_map().begin();
          it != this->gadget_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupBin_GadgetMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gadget_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupBin_GadgetMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >::const_iterator
          it = this->gadget_map().begin();
          it != this->gadget_map().end(); ++it) {
        entry.reset(gadget_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  // repeated uint32 del_gadget_list = 4;
  if (this->del_gadget_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _del_gadget_list_cached_byte_size_));
  }
  for (int i = 0, n = this->del_gadget_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->del_gadget_list(i), output);
  }

  // map<string, .proto.GroupTriggerBin> trigger_map = 5;
  if (!this->trigger_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.GroupBin.TriggerMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->trigger_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->trigger_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >::const_iterator
          it = this->trigger_map().begin();
          it != this->trigger_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupBin_TriggerMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(trigger_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupBin_TriggerMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >::const_iterator
          it = this->trigger_map().begin();
          it != this->trigger_map().end(); ++it) {
        entry.reset(trigger_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .proto.GroupVariableBin> variable_map = 6;
  if (!this->variable_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.GroupBin.VariableMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->variable_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->variable_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_iterator
          it = this->variable_map().begin();
          it != this->variable_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupBin_VariableMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(variable_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupBin_VariableMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_iterator
          it = this->variable_map().begin();
          it != this->variable_map().end(); ++it) {
        entry.reset(variable_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint32 suite_index = 7;
  if (this->suite_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->suite_index(), output);
  }

  // repeated uint32 show_cutscene_chest_list = 8;
  if (this->show_cutscene_chest_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _show_cutscene_chest_list_cached_byte_size_));
  }
  for (int i = 0, n = this->show_cutscene_chest_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->show_cutscene_chest_list(i), output);
  }

  // repeated .proto.ChallengeRecordBin challenge_record_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->challenge_record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->challenge_record_list(static_cast<int>(i)), output);
  }

  // uint32 revise_level = 10;
  if (this->revise_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->revise_level(), output);
  }

  // fixed32 last_refresh_time = 11;
  if (this->last_refresh_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(11, this->last_refresh_time(), output);
  }

  // uint32 target_suite_index = 12;
  if (this->target_suite_index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->target_suite_index(), output);
  }

  // map<uint32, .proto.BossDieInfoBin> boss_die_info_map = 13;
  if (!this->boss_die_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->boss_die_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->boss_die_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >::const_iterator
          it = this->boss_die_info_map().begin();
          it != this->boss_die_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupBin_BossDieInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(boss_die_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupBin_BossDieInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >::const_iterator
          it = this->boss_die_info_map().begin();
          it != this->boss_die_info_map().end(); ++it) {
        entry.reset(boss_die_info_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            13, *entry, output);
      }
    }
  }

  // repeated .proto.GroupGatherBin gather_refresh_time_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gather_refresh_time_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->gather_refresh_time_list(static_cast<int>(i)), output);
  }

  // bool is_replaceable = 15;
  if (this->is_replaceable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->is_replaceable(), output);
  }

  // uint32 replaceable_version = 16;
  if (this->replaceable_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->replaceable_version(), output);
  }

  // repeated .proto.GroupTriggerBin trigger_list = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trigger_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->trigger_list(static_cast<int>(i)), output);
  }

  // repeated .proto.GroupRefreshTimeBin group_refresh_list = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_refresh_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->group_refresh_list(static_cast<int>(i)), output);
  }

  // repeated .proto.GroupVariableConfigIdBin variable_config_id_bin_list = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variable_config_id_bin_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->variable_config_id_bin_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GroupBin)
}

::google::protobuf::uint8* GroupBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GroupBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto.GroupMonsterBin> monster_map = 1;
  if (!this->monster_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->monster_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->monster_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >::const_iterator
          it = this->monster_map().begin();
          it != this->monster_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupBin_MonsterMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(monster_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupBin_MonsterMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >::const_iterator
          it = this->monster_map().begin();
          it != this->monster_map().end(); ++it) {
        entry.reset(monster_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // repeated uint32 del_monster_list = 2;
  if (this->del_monster_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _del_monster_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->del_monster_list_, target);
  }

  // map<uint32, .proto.GroupGadgetBin> gadget_map = 3;
  if (!this->gadget_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->gadget_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gadget_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >::const_iterator
          it = this->gadget_map().begin();
          it != this->gadget_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupBin_GadgetMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gadget_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupBin_GadgetMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >::const_iterator
          it = this->gadget_map().begin();
          it != this->gadget_map().end(); ++it) {
        entry.reset(gadget_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  // repeated uint32 del_gadget_list = 4;
  if (this->del_gadget_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _del_gadget_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->del_gadget_list_, target);
  }

  // map<string, .proto.GroupTriggerBin> trigger_map = 5;
  if (!this->trigger_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.GroupBin.TriggerMapEntry.key");
      }
    };

    if (deterministic &&
        this->trigger_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->trigger_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >::const_iterator
          it = this->trigger_map().begin();
          it != this->trigger_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupBin_TriggerMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(trigger_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupBin_TriggerMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >::const_iterator
          it = this->trigger_map().begin();
          it != this->trigger_map().end(); ++it) {
        entry.reset(trigger_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, .proto.GroupVariableBin> variable_map = 6;
  if (!this->variable_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.GroupBin.VariableMapEntry.key");
      }
    };

    if (deterministic &&
        this->variable_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->variable_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_iterator
          it = this->variable_map().begin();
          it != this->variable_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupBin_VariableMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(variable_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupBin_VariableMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_iterator
          it = this->variable_map().begin();
          it != this->variable_map().end(); ++it) {
        entry.reset(variable_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // uint32 suite_index = 7;
  if (this->suite_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->suite_index(), target);
  }

  // repeated uint32 show_cutscene_chest_list = 8;
  if (this->show_cutscene_chest_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _show_cutscene_chest_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->show_cutscene_chest_list_, target);
  }

  // repeated .proto.ChallengeRecordBin challenge_record_list = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->challenge_record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->challenge_record_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 revise_level = 10;
  if (this->revise_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->revise_level(), target);
  }

  // fixed32 last_refresh_time = 11;
  if (this->last_refresh_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(11, this->last_refresh_time(), target);
  }

  // uint32 target_suite_index = 12;
  if (this->target_suite_index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->target_suite_index(), target);
  }

  // map<uint32, .proto.BossDieInfoBin> boss_die_info_map = 13;
  if (!this->boss_die_info_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->boss_die_info_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->boss_die_info_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >::const_iterator
          it = this->boss_die_info_map().begin();
          it != this->boss_die_info_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GroupBin_BossDieInfoMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(boss_die_info_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GroupBin_BossDieInfoMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >::const_iterator
          it = this->boss_die_info_map().begin();
          it != this->boss_die_info_map().end(); ++it) {
        entry.reset(boss_die_info_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       13, *entry, deterministic, target);
;
      }
    }
  }

  // repeated .proto.GroupGatherBin gather_refresh_time_list = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gather_refresh_time_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, this->gather_refresh_time_list(static_cast<int>(i)), deterministic, target);
  }

  // bool is_replaceable = 15;
  if (this->is_replaceable() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->is_replaceable(), target);
  }

  // uint32 replaceable_version = 16;
  if (this->replaceable_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->replaceable_version(), target);
  }

  // repeated .proto.GroupTriggerBin trigger_list = 17;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trigger_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, this->trigger_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.GroupRefreshTimeBin group_refresh_list = 18;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->group_refresh_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, this->group_refresh_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.GroupVariableConfigIdBin variable_config_id_bin_list = 19;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->variable_config_id_bin_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, this->variable_config_id_bin_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GroupBin)
  return target;
}

size_t GroupBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GroupBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.GroupMonsterBin> monster_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->monster_map_size());
  {
    ::google::protobuf::scoped_ptr<GroupBin_MonsterMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >::const_iterator
        it = this->monster_map().begin();
        it != this->monster_map().end(); ++it) {
      entry.reset(monster_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint32 del_monster_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->del_monster_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _del_monster_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<uint32, .proto.GroupGadgetBin> gadget_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->gadget_map_size());
  {
    ::google::protobuf::scoped_ptr<GroupBin_GadgetMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >::const_iterator
        it = this->gadget_map().begin();
        it != this->gadget_map().end(); ++it) {
      entry.reset(gadget_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint32 del_gadget_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->del_gadget_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _del_gadget_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // map<string, .proto.GroupTriggerBin> trigger_map = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->trigger_map_size());
  {
    ::google::protobuf::scoped_ptr<GroupBin_TriggerMapEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >::const_iterator
        it = this->trigger_map().begin();
        it != this->trigger_map().end(); ++it) {
      entry.reset(trigger_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, .proto.GroupVariableBin> variable_map = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->variable_map_size());
  {
    ::google::protobuf::scoped_ptr<GroupBin_VariableMapEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >::const_iterator
        it = this->variable_map().begin();
        it != this->variable_map().end(); ++it) {
      entry.reset(variable_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated uint32 show_cutscene_chest_list = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->show_cutscene_chest_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _show_cutscene_chest_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.ChallengeRecordBin challenge_record_list = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->challenge_record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->challenge_record_list(static_cast<int>(i)));
    }
  }

  // map<uint32, .proto.BossDieInfoBin> boss_die_info_map = 13;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->boss_die_info_map_size());
  {
    ::google::protobuf::scoped_ptr<GroupBin_BossDieInfoMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >::const_iterator
        it = this->boss_die_info_map().begin();
        it != this->boss_die_info_map().end(); ++it) {
      entry.reset(boss_die_info_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .proto.GroupGatherBin gather_refresh_time_list = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->gather_refresh_time_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gather_refresh_time_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.GroupTriggerBin trigger_list = 17;
  {
    unsigned int count = static_cast<unsigned int>(this->trigger_list_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->trigger_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.GroupRefreshTimeBin group_refresh_list = 18;
  {
    unsigned int count = static_cast<unsigned int>(this->group_refresh_list_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->group_refresh_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.GroupVariableConfigIdBin variable_config_id_bin_list = 19;
  {
    unsigned int count = static_cast<unsigned int>(this->variable_config_id_bin_list_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->variable_config_id_bin_list(static_cast<int>(i)));
    }
  }

  // uint32 suite_index = 7;
  if (this->suite_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->suite_index());
  }

  // uint32 revise_level = 10;
  if (this->revise_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->revise_level());
  }

  // fixed32 last_refresh_time = 11;
  if (this->last_refresh_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 target_suite_index = 12;
  if (this->target_suite_index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_suite_index());
  }

  // bool is_replaceable = 15;
  if (this->is_replaceable() != 0) {
    total_size += 1 + 1;
  }

  // uint32 replaceable_version = 16;
  if (this->replaceable_version() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->replaceable_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GroupBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GroupBin)
  GOOGLE_DCHECK_NE(&from, this);
  const GroupBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GroupBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GroupBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GroupBin)
    MergeFrom(*source);
  }
}

void GroupBin::MergeFrom(const GroupBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GroupBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  monster_map_.MergeFrom(from.monster_map_);
  del_monster_list_.MergeFrom(from.del_monster_list_);
  gadget_map_.MergeFrom(from.gadget_map_);
  del_gadget_list_.MergeFrom(from.del_gadget_list_);
  trigger_map_.MergeFrom(from.trigger_map_);
  variable_map_.MergeFrom(from.variable_map_);
  show_cutscene_chest_list_.MergeFrom(from.show_cutscene_chest_list_);
  challenge_record_list_.MergeFrom(from.challenge_record_list_);
  boss_die_info_map_.MergeFrom(from.boss_die_info_map_);
  gather_refresh_time_list_.MergeFrom(from.gather_refresh_time_list_);
  trigger_list_.MergeFrom(from.trigger_list_);
  group_refresh_list_.MergeFrom(from.group_refresh_list_);
  variable_config_id_bin_list_.MergeFrom(from.variable_config_id_bin_list_);
  if (from.suite_index() != 0) {
    set_suite_index(from.suite_index());
  }
  if (from.revise_level() != 0) {
    set_revise_level(from.revise_level());
  }
  if (from.last_refresh_time() != 0) {
    set_last_refresh_time(from.last_refresh_time());
  }
  if (from.target_suite_index() != 0) {
    set_target_suite_index(from.target_suite_index());
  }
  if (from.is_replaceable() != 0) {
    set_is_replaceable(from.is_replaceable());
  }
  if (from.replaceable_version() != 0) {
    set_replaceable_version(from.replaceable_version());
  }
}

void GroupBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GroupBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GroupBin::CopyFrom(const GroupBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GroupBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupBin::IsInitialized() const {
  return true;
}

void GroupBin::Swap(GroupBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GroupBin::InternalSwap(GroupBin* other) {
  using std::swap;
  monster_map_.Swap(&other->monster_map_);
  del_monster_list_.InternalSwap(&other->del_monster_list_);
  gadget_map_.Swap(&other->gadget_map_);
  del_gadget_list_.InternalSwap(&other->del_gadget_list_);
  trigger_map_.Swap(&other->trigger_map_);
  variable_map_.Swap(&other->variable_map_);
  show_cutscene_chest_list_.InternalSwap(&other->show_cutscene_chest_list_);
  challenge_record_list_.InternalSwap(&other->challenge_record_list_);
  boss_die_info_map_.Swap(&other->boss_die_info_map_);
  gather_refresh_time_list_.InternalSwap(&other->gather_refresh_time_list_);
  trigger_list_.InternalSwap(&other->trigger_list_);
  group_refresh_list_.InternalSwap(&other->group_refresh_list_);
  variable_config_id_bin_list_.InternalSwap(&other->variable_config_id_bin_list_);
  swap(suite_index_, other->suite_index_);
  swap(revise_level_, other->revise_level_);
  swap(last_refresh_time_, other->last_refresh_time_);
  swap(target_suite_index_, other->target_suite_index_);
  swap(is_replaceable_, other->is_replaceable_);
  swap(replaceable_version_, other->replaceable_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GroupBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GroupBin

// map<uint32, .proto.GroupMonsterBin> monster_map = 1;
int GroupBin::monster_map_size() const {
  return monster_map_.size();
}
void GroupBin::clear_monster_map() {
  monster_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >&
GroupBin::monster_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupBin.monster_map)
  return monster_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupMonsterBin >*
GroupBin::mutable_monster_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupBin.monster_map)
  return monster_map_.MutableMap();
}

// repeated uint32 del_monster_list = 2;
int GroupBin::del_monster_list_size() const {
  return del_monster_list_.size();
}
void GroupBin::clear_del_monster_list() {
  del_monster_list_.Clear();
}
::google::protobuf::uint32 GroupBin::del_monster_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.del_monster_list)
  return del_monster_list_.Get(index);
}
void GroupBin::set_del_monster_list(int index, ::google::protobuf::uint32 value) {
  del_monster_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GroupBin.del_monster_list)
}
void GroupBin::add_del_monster_list(::google::protobuf::uint32 value) {
  del_monster_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GroupBin.del_monster_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupBin::del_monster_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.del_monster_list)
  return del_monster_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupBin::mutable_del_monster_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.del_monster_list)
  return &del_monster_list_;
}

// map<uint32, .proto.GroupGadgetBin> gadget_map = 3;
int GroupBin::gadget_map_size() const {
  return gadget_map_.size();
}
void GroupBin::clear_gadget_map() {
  gadget_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >&
GroupBin::gadget_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupBin.gadget_map)
  return gadget_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupGadgetBin >*
GroupBin::mutable_gadget_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupBin.gadget_map)
  return gadget_map_.MutableMap();
}

// repeated uint32 del_gadget_list = 4;
int GroupBin::del_gadget_list_size() const {
  return del_gadget_list_.size();
}
void GroupBin::clear_del_gadget_list() {
  del_gadget_list_.Clear();
}
::google::protobuf::uint32 GroupBin::del_gadget_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.del_gadget_list)
  return del_gadget_list_.Get(index);
}
void GroupBin::set_del_gadget_list(int index, ::google::protobuf::uint32 value) {
  del_gadget_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GroupBin.del_gadget_list)
}
void GroupBin::add_del_gadget_list(::google::protobuf::uint32 value) {
  del_gadget_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GroupBin.del_gadget_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupBin::del_gadget_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.del_gadget_list)
  return del_gadget_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupBin::mutable_del_gadget_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.del_gadget_list)
  return &del_gadget_list_;
}

// map<string, .proto.GroupTriggerBin> trigger_map = 5;
int GroupBin::trigger_map_size() const {
  return trigger_map_.size();
}
void GroupBin::clear_trigger_map() {
  trigger_map_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >&
GroupBin::trigger_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupBin.trigger_map)
  return trigger_map_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::proto::GroupTriggerBin >*
GroupBin::mutable_trigger_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupBin.trigger_map)
  return trigger_map_.MutableMap();
}

// map<string, .proto.GroupVariableBin> variable_map = 6;
int GroupBin::variable_map_size() const {
  return variable_map_.size();
}
void GroupBin::clear_variable_map() {
  variable_map_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >&
GroupBin::variable_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupBin.variable_map)
  return variable_map_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >*
GroupBin::mutable_variable_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupBin.variable_map)
  return variable_map_.MutableMap();
}

// uint32 suite_index = 7;
void GroupBin::clear_suite_index() {
  suite_index_ = 0u;
}
::google::protobuf::uint32 GroupBin::suite_index() const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.suite_index)
  return suite_index_;
}
void GroupBin::set_suite_index(::google::protobuf::uint32 value) {
  
  suite_index_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBin.suite_index)
}

// repeated uint32 show_cutscene_chest_list = 8;
int GroupBin::show_cutscene_chest_list_size() const {
  return show_cutscene_chest_list_.size();
}
void GroupBin::clear_show_cutscene_chest_list() {
  show_cutscene_chest_list_.Clear();
}
::google::protobuf::uint32 GroupBin::show_cutscene_chest_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.show_cutscene_chest_list)
  return show_cutscene_chest_list_.Get(index);
}
void GroupBin::set_show_cutscene_chest_list(int index, ::google::protobuf::uint32 value) {
  show_cutscene_chest_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GroupBin.show_cutscene_chest_list)
}
void GroupBin::add_show_cutscene_chest_list(::google::protobuf::uint32 value) {
  show_cutscene_chest_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GroupBin.show_cutscene_chest_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupBin::show_cutscene_chest_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.show_cutscene_chest_list)
  return show_cutscene_chest_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupBin::mutable_show_cutscene_chest_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.show_cutscene_chest_list)
  return &show_cutscene_chest_list_;
}

// repeated .proto.ChallengeRecordBin challenge_record_list = 9;
int GroupBin::challenge_record_list_size() const {
  return challenge_record_list_.size();
}
void GroupBin::clear_challenge_record_list() {
  challenge_record_list_.Clear();
}
const ::proto::ChallengeRecordBin& GroupBin::challenge_record_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.challenge_record_list)
  return challenge_record_list_.Get(index);
}
::proto::ChallengeRecordBin* GroupBin::mutable_challenge_record_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GroupBin.challenge_record_list)
  return challenge_record_list_.Mutable(index);
}
::proto::ChallengeRecordBin* GroupBin::add_challenge_record_list() {
  // @@protoc_insertion_point(field_add:proto.GroupBin.challenge_record_list)
  return challenge_record_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ChallengeRecordBin >*
GroupBin::mutable_challenge_record_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.challenge_record_list)
  return &challenge_record_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ChallengeRecordBin >&
GroupBin::challenge_record_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.challenge_record_list)
  return challenge_record_list_;
}

// uint32 revise_level = 10;
void GroupBin::clear_revise_level() {
  revise_level_ = 0u;
}
::google::protobuf::uint32 GroupBin::revise_level() const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.revise_level)
  return revise_level_;
}
void GroupBin::set_revise_level(::google::protobuf::uint32 value) {
  
  revise_level_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBin.revise_level)
}

// fixed32 last_refresh_time = 11;
void GroupBin::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
::google::protobuf::uint32 GroupBin::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.last_refresh_time)
  return last_refresh_time_;
}
void GroupBin::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBin.last_refresh_time)
}

// uint32 target_suite_index = 12;
void GroupBin::clear_target_suite_index() {
  target_suite_index_ = 0u;
}
::google::protobuf::uint32 GroupBin::target_suite_index() const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.target_suite_index)
  return target_suite_index_;
}
void GroupBin::set_target_suite_index(::google::protobuf::uint32 value) {
  
  target_suite_index_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBin.target_suite_index)
}

// map<uint32, .proto.BossDieInfoBin> boss_die_info_map = 13;
int GroupBin::boss_die_info_map_size() const {
  return boss_die_info_map_.size();
}
void GroupBin::clear_boss_die_info_map() {
  boss_die_info_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >&
GroupBin::boss_die_info_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupBin.boss_die_info_map)
  return boss_die_info_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BossDieInfoBin >*
GroupBin::mutable_boss_die_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupBin.boss_die_info_map)
  return boss_die_info_map_.MutableMap();
}

// repeated .proto.GroupGatherBin gather_refresh_time_list = 14;
int GroupBin::gather_refresh_time_list_size() const {
  return gather_refresh_time_list_.size();
}
void GroupBin::clear_gather_refresh_time_list() {
  gather_refresh_time_list_.Clear();
}
const ::proto::GroupGatherBin& GroupBin::gather_refresh_time_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.gather_refresh_time_list)
  return gather_refresh_time_list_.Get(index);
}
::proto::GroupGatherBin* GroupBin::mutable_gather_refresh_time_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GroupBin.gather_refresh_time_list)
  return gather_refresh_time_list_.Mutable(index);
}
::proto::GroupGatherBin* GroupBin::add_gather_refresh_time_list() {
  // @@protoc_insertion_point(field_add:proto.GroupBin.gather_refresh_time_list)
  return gather_refresh_time_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::GroupGatherBin >*
GroupBin::mutable_gather_refresh_time_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.gather_refresh_time_list)
  return &gather_refresh_time_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::GroupGatherBin >&
GroupBin::gather_refresh_time_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.gather_refresh_time_list)
  return gather_refresh_time_list_;
}

// bool is_replaceable = 15;
void GroupBin::clear_is_replaceable() {
  is_replaceable_ = false;
}
bool GroupBin::is_replaceable() const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.is_replaceable)
  return is_replaceable_;
}
void GroupBin::set_is_replaceable(bool value) {
  
  is_replaceable_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBin.is_replaceable)
}

// uint32 replaceable_version = 16;
void GroupBin::clear_replaceable_version() {
  replaceable_version_ = 0u;
}
::google::protobuf::uint32 GroupBin::replaceable_version() const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.replaceable_version)
  return replaceable_version_;
}
void GroupBin::set_replaceable_version(::google::protobuf::uint32 value) {
  
  replaceable_version_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBin.replaceable_version)
}

// repeated .proto.GroupTriggerBin trigger_list = 17;
int GroupBin::trigger_list_size() const {
  return trigger_list_.size();
}
void GroupBin::clear_trigger_list() {
  trigger_list_.Clear();
}
const ::proto::GroupTriggerBin& GroupBin::trigger_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.trigger_list)
  return trigger_list_.Get(index);
}
::proto::GroupTriggerBin* GroupBin::mutable_trigger_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GroupBin.trigger_list)
  return trigger_list_.Mutable(index);
}
::proto::GroupTriggerBin* GroupBin::add_trigger_list() {
  // @@protoc_insertion_point(field_add:proto.GroupBin.trigger_list)
  return trigger_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::GroupTriggerBin >*
GroupBin::mutable_trigger_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.trigger_list)
  return &trigger_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::GroupTriggerBin >&
GroupBin::trigger_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.trigger_list)
  return trigger_list_;
}

// repeated .proto.GroupRefreshTimeBin group_refresh_list = 18;
int GroupBin::group_refresh_list_size() const {
  return group_refresh_list_.size();
}
void GroupBin::clear_group_refresh_list() {
  group_refresh_list_.Clear();
}
const ::proto::GroupRefreshTimeBin& GroupBin::group_refresh_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.group_refresh_list)
  return group_refresh_list_.Get(index);
}
::proto::GroupRefreshTimeBin* GroupBin::mutable_group_refresh_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GroupBin.group_refresh_list)
  return group_refresh_list_.Mutable(index);
}
::proto::GroupRefreshTimeBin* GroupBin::add_group_refresh_list() {
  // @@protoc_insertion_point(field_add:proto.GroupBin.group_refresh_list)
  return group_refresh_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::GroupRefreshTimeBin >*
GroupBin::mutable_group_refresh_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.group_refresh_list)
  return &group_refresh_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::GroupRefreshTimeBin >&
GroupBin::group_refresh_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.group_refresh_list)
  return group_refresh_list_;
}

// repeated .proto.GroupVariableConfigIdBin variable_config_id_bin_list = 19;
int GroupBin::variable_config_id_bin_list_size() const {
  return variable_config_id_bin_list_.size();
}
void GroupBin::clear_variable_config_id_bin_list() {
  variable_config_id_bin_list_.Clear();
}
const ::proto::GroupVariableConfigIdBin& GroupBin::variable_config_id_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GroupBin.variable_config_id_bin_list)
  return variable_config_id_bin_list_.Get(index);
}
::proto::GroupVariableConfigIdBin* GroupBin::mutable_variable_config_id_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GroupBin.variable_config_id_bin_list)
  return variable_config_id_bin_list_.Mutable(index);
}
::proto::GroupVariableConfigIdBin* GroupBin::add_variable_config_id_bin_list() {
  // @@protoc_insertion_point(field_add:proto.GroupBin.variable_config_id_bin_list)
  return variable_config_id_bin_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::GroupVariableConfigIdBin >*
GroupBin::mutable_variable_config_id_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GroupBin.variable_config_id_bin_list)
  return &variable_config_id_bin_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::GroupVariableConfigIdBin >&
GroupBin::variable_config_id_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.GroupBin.variable_config_id_bin_list)
  return variable_config_id_bin_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

BlockBin::BlockBin_GroupMapEntry::BlockBin_GroupMapEntry() {}
BlockBin::BlockBin_GroupMapEntry::BlockBin_GroupMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata BlockBin::BlockBin_GroupMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[26];
}
void BlockBin::BlockBin_GroupMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void BlockBin::BlockBin_GroupMapEntry::MergeFrom(const BlockBin_GroupMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

BlockBin::BlockBin_GroupProductMapEntry::BlockBin_GroupProductMapEntry() {}
BlockBin::BlockBin_GroupProductMapEntry::BlockBin_GroupProductMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata BlockBin::BlockBin_GroupProductMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[27];
}
void BlockBin::BlockBin_GroupProductMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void BlockBin::BlockBin_GroupProductMapEntry::MergeFrom(const BlockBin_GroupProductMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockBin::kGroupMapFieldNumber;
const int BlockBin::kGroupProductMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockBin::BlockBin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BlockBin)
}
BlockBin::BlockBin(const BlockBin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  group_map_.MergeFrom(from.group_map_);
  group_product_map_.MergeFrom(from.group_product_map_);
  // @@protoc_insertion_point(copy_constructor:proto.BlockBin)
}

void BlockBin::SharedCtor() {
  _cached_size_ = 0;
}

BlockBin::~BlockBin() {
  // @@protoc_insertion_point(destructor:proto.BlockBin)
  SharedDtor();
}

void BlockBin::SharedDtor() {
}

void BlockBin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockBin::descriptor() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockBin& BlockBin::default_instance() {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockBin* BlockBin::New(::google::protobuf::Arena* arena) const {
  BlockBin* n = new BlockBin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockBin::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BlockBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  group_map_.Clear();
  group_product_map_.Clear();
  _internal_metadata_.Clear();
}

bool BlockBin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BlockBin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, bytes> group_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          BlockBin_GroupMapEntry::Parser< ::google::protobuf::internal::MapField<
              BlockBin_GroupMapEntry,
              ::google::protobuf::uint32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string > > parser(&group_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.GroupProductBin> group_product_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          BlockBin_GroupProductMapEntry::Parser< ::google::protobuf::internal::MapField<
              BlockBin_GroupProductMapEntry,
              ::google::protobuf::uint32, ::proto::GroupProductBin,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin > > parser(&group_product_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BlockBin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BlockBin)
  return false;
#undef DO_
}

void BlockBin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BlockBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, bytes> group_map = 1;
  if (!this->group_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->group_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->group_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->group_map().begin();
          it != this->group_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BlockBin_GroupMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(group_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<BlockBin_GroupMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->group_map().begin();
          it != this->group_map().end(); ++it) {
        entry.reset(group_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // map<uint32, .proto.GroupProductBin> group_product_map = 2;
  if (!this->group_product_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->group_product_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->group_product_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >::const_iterator
          it = this->group_product_map().begin();
          it != this->group_product_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BlockBin_GroupProductMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(group_product_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<BlockBin_GroupProductMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >::const_iterator
          it = this->group_product_map().begin();
          it != this->group_product_map().end(); ++it) {
        entry.reset(group_product_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BlockBin)
}

::google::protobuf::uint8* BlockBin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BlockBin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, bytes> group_map = 1;
  if (!this->group_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->group_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->group_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->group_map().begin();
          it != this->group_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BlockBin_GroupMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(group_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<BlockBin_GroupMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
          it = this->group_map().begin();
          it != this->group_map().end(); ++it) {
        entry.reset(group_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, .proto.GroupProductBin> group_product_map = 2;
  if (!this->group_product_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->group_product_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->group_product_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >::const_iterator
          it = this->group_product_map().begin();
          it != this->group_product_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<BlockBin_GroupProductMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(group_product_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<BlockBin_GroupProductMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >::const_iterator
          it = this->group_product_map().begin();
          it != this->group_product_map().end(); ++it) {
        entry.reset(group_product_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BlockBin)
  return target;
}

size_t BlockBin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BlockBin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, bytes> group_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->group_map_size());
  {
    ::google::protobuf::scoped_ptr<BlockBin_GroupMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >::const_iterator
        it = this->group_map().begin();
        it != this->group_map().end(); ++it) {
      entry.reset(group_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, .proto.GroupProductBin> group_product_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->group_product_map_size());
  {
    ::google::protobuf::scoped_ptr<BlockBin_GroupProductMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >::const_iterator
        it = this->group_product_map().begin();
        it != this->group_product_map().end(); ++it) {
      entry.reset(group_product_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockBin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BlockBin)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockBin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockBin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BlockBin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BlockBin)
    MergeFrom(*source);
  }
}

void BlockBin::MergeFrom(const BlockBin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BlockBin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  group_map_.MergeFrom(from.group_map_);
  group_product_map_.MergeFrom(from.group_product_map_);
}

void BlockBin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BlockBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockBin::CopyFrom(const BlockBin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BlockBin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockBin::IsInitialized() const {
  return true;
}

void BlockBin::Swap(BlockBin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockBin::InternalSwap(BlockBin* other) {
  using std::swap;
  group_map_.Swap(&other->group_map_);
  group_product_map_.Swap(&other->group_product_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockBin::GetMetadata() const {
  protobuf_server_5fonly_2fbin_2eblock_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fbin_2eblock_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockBin

// map<uint32, bytes> group_map = 1;
int BlockBin::group_map_size() const {
  return group_map_.size();
}
void BlockBin::clear_group_map() {
  group_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >&
BlockBin::group_map() const {
  // @@protoc_insertion_point(field_map:proto.BlockBin.group_map)
  return group_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::std::string >*
BlockBin::mutable_group_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.BlockBin.group_map)
  return group_map_.MutableMap();
}

// map<uint32, .proto.GroupProductBin> group_product_map = 2;
int BlockBin::group_product_map_size() const {
  return group_product_map_.size();
}
void BlockBin::clear_group_product_map() {
  group_product_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >&
BlockBin::group_product_map() const {
  // @@protoc_insertion_point(field_map:proto.BlockBin.group_product_map)
  return group_product_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GroupProductBin >*
BlockBin::mutable_group_product_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.BlockBin.group_product_map)
  return group_product_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
