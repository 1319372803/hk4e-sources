// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_recharge.server.proto

#ifndef PROTOBUF_server_5fonly_2fcmd_5frecharge_2eserver_2eproto__INCLUDED
#define PROTOBUF_server_5fonly_2fcmd_5frecharge_2eserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto {
class GetSpecificUnfinishedReq;
class GetSpecificUnfinishedReqDefaultTypeInternal;
extern GetSpecificUnfinishedReqDefaultTypeInternal _GetSpecificUnfinishedReq_default_instance_;
class GetSpecificUnfinishedRsp;
class GetSpecificUnfinishedRspDefaultTypeInternal;
extern GetSpecificUnfinishedRspDefaultTypeInternal _GetSpecificUnfinishedRsp_default_instance_;
class GetUnfinishedOrderReq;
class GetUnfinishedOrderReqDefaultTypeInternal;
extern GetUnfinishedOrderReqDefaultTypeInternal _GetUnfinishedOrderReq_default_instance_;
class GetUnfinishedOrderRsp;
class GetUnfinishedOrderRspDefaultTypeInternal;
extern GetUnfinishedOrderRspDefaultTypeInternal _GetUnfinishedOrderRsp_default_instance_;
class MarkOrderFinishedReq;
class MarkOrderFinishedReqDefaultTypeInternal;
extern MarkOrderFinishedReqDefaultTypeInternal _MarkOrderFinishedReq_default_instance_;
class MarkOrderFinishedRsp;
class MarkOrderFinishedRspDefaultTypeInternal;
extern MarkOrderFinishedRspDefaultTypeInternal _MarkOrderFinishedRsp_default_instance_;
class Order;
class OrderDefaultTypeInternal;
extern OrderDefaultTypeInternal _Order_default_instance_;
class RechargeOrderNotify;
class RechargeOrderNotifyDefaultTypeInternal;
extern RechargeOrderNotifyDefaultTypeInternal _RechargeOrderNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto

// ===================================================================

class Order : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Order) */ {
 public:
  Order();
  virtual ~Order();

  Order(const Order& from);

  inline Order& operator=(const Order& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Order(Order&& from) noexcept
    : Order() {
    *this = ::std::move(from);
  }

  inline Order& operator=(Order&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Order& default_instance();

  static inline const Order* internal_default_instance() {
    return reinterpret_cast<const Order*>(
               &_Order_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Order* other);
  friend void swap(Order& a, Order& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Order* New() const PROTOBUF_FINAL { return New(NULL); }

  Order* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Order& from);
  void MergeFrom(const Order& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Order* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string product_id = 3;
  void clear_product_id();
  static const int kProductIdFieldNumber = 3;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  #if LANG_CXX11
  void set_product_id(::std::string&& value);
  #endif
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // string product_name = 4;
  void clear_product_name();
  static const int kProductNameFieldNumber = 4;
  const ::std::string& product_name() const;
  void set_product_name(const ::std::string& value);
  #if LANG_CXX11
  void set_product_name(::std::string&& value);
  #endif
  void set_product_name(const char* value);
  void set_product_name(const char* value, size_t size);
  ::std::string* mutable_product_name();
  ::std::string* release_product_name();
  void set_allocated_product_name(::std::string* product_name);

  // string total_fee = 7;
  void clear_total_fee();
  static const int kTotalFeeFieldNumber = 7;
  const ::std::string& total_fee() const;
  void set_total_fee(const ::std::string& value);
  #if LANG_CXX11
  void set_total_fee(::std::string&& value);
  #endif
  void set_total_fee(const char* value);
  void set_total_fee(const char* value, size_t size);
  ::std::string* mutable_total_fee();
  ::std::string* release_total_fee();
  void set_allocated_total_fee(::std::string* total_fee);

  // string currency = 8;
  void clear_currency();
  static const int kCurrencyFieldNumber = 8;
  const ::std::string& currency() const;
  void set_currency(const ::std::string& value);
  #if LANG_CXX11
  void set_currency(::std::string&& value);
  #endif
  void set_currency(const char* value);
  void set_currency(const char* value, size_t size);
  ::std::string* mutable_currency();
  ::std::string* release_currency();
  void set_allocated_currency(::std::string* currency);

  // string price_tier = 9;
  void clear_price_tier();
  static const int kPriceTierFieldNumber = 9;
  const ::std::string& price_tier() const;
  void set_price_tier(const ::std::string& value);
  #if LANG_CXX11
  void set_price_tier(::std::string&& value);
  #endif
  void set_price_tier(const char* value);
  void set_price_tier(const char* value, size_t size);
  ::std::string* mutable_price_tier();
  ::std::string* release_price_tier();
  void set_allocated_price_tier(::std::string* price_tier);

  // string trade_no = 10;
  void clear_trade_no();
  static const int kTradeNoFieldNumber = 10;
  const ::std::string& trade_no() const;
  void set_trade_no(const ::std::string& value);
  #if LANG_CXX11
  void set_trade_no(::std::string&& value);
  #endif
  void set_trade_no(const char* value);
  void set_trade_no(const char* value, size_t size);
  ::std::string* mutable_trade_no();
  ::std::string* release_trade_no();
  void set_allocated_trade_no(::std::string* trade_no);

  // string channel_order_no = 13;
  void clear_channel_order_no();
  static const int kChannelOrderNoFieldNumber = 13;
  const ::std::string& channel_order_no() const;
  void set_channel_order_no(const ::std::string& value);
  #if LANG_CXX11
  void set_channel_order_no(::std::string&& value);
  #endif
  void set_channel_order_no(const char* value);
  void set_channel_order_no(const char* value, size_t size);
  ::std::string* mutable_channel_order_no();
  ::std::string* release_channel_order_no();
  void set_allocated_channel_order_no(::std::string* channel_order_no);

  // string pay_plat = 14;
  void clear_pay_plat();
  static const int kPayPlatFieldNumber = 14;
  const ::std::string& pay_plat() const;
  void set_pay_plat(const ::std::string& value);
  #if LANG_CXX11
  void set_pay_plat(::std::string&& value);
  #endif
  void set_pay_plat(const char* value);
  void set_pay_plat(const char* value, size_t size);
  ::std::string* mutable_pay_plat();
  ::std::string* release_pay_plat();
  void set_allocated_pay_plat(::std::string* pay_plat);

  // string extend = 15;
  void clear_extend();
  static const int kExtendFieldNumber = 15;
  const ::std::string& extend() const;
  void set_extend(const ::std::string& value);
  #if LANG_CXX11
  void set_extend(::std::string&& value);
  #endif
  void set_extend(const char* value);
  void set_extend(const char* value, size_t size);
  ::std::string* mutable_extend();
  ::std::string* release_extend();
  void set_allocated_extend(::std::string* extend);

  // string bonus = 17;
  void clear_bonus();
  static const int kBonusFieldNumber = 17;
  const ::std::string& bonus() const;
  void set_bonus(const ::std::string& value);
  #if LANG_CXX11
  void set_bonus(::std::string&& value);
  #endif
  void set_bonus(const char* value);
  void set_bonus(const char* value, size_t size);
  ::std::string* mutable_bonus();
  ::std::string* release_bonus();
  void set_allocated_bonus(::std::string* bonus);

  // string pay_type = 20;
  void clear_pay_type();
  static const int kPayTypeFieldNumber = 20;
  const ::std::string& pay_type() const;
  void set_pay_type(const ::std::string& value);
  #if LANG_CXX11
  void set_pay_type(::std::string&& value);
  #endif
  void set_pay_type(const char* value);
  void set_pay_type(const char* value, size_t size);
  ::std::string* mutable_pay_type();
  ::std::string* release_pay_type();
  void set_allocated_pay_type(::std::string* pay_type);

  // string pay_vendor = 21;
  void clear_pay_vendor();
  static const int kPayVendorFieldNumber = 21;
  const ::std::string& pay_vendor() const;
  void set_pay_vendor(const ::std::string& value);
  #if LANG_CXX11
  void set_pay_vendor(::std::string&& value);
  #endif
  void set_pay_vendor(const char* value);
  void set_pay_vendor(const char* value, size_t size);
  ::std::string* mutable_pay_vendor();
  ::std::string* release_pay_vendor();
  void set_allocated_pay_vendor(::std::string* pay_vendor);

  // string client_type = 22;
  void clear_client_type();
  static const int kClientTypeFieldNumber = 22;
  const ::std::string& client_type() const;
  void set_client_type(const ::std::string& value);
  #if LANG_CXX11
  void set_client_type(::std::string&& value);
  #endif
  void set_client_type(const char* value);
  void set_client_type(const char* value, size_t size);
  ::std::string* mutable_client_type();
  ::std::string* release_client_type();
  void set_allocated_client_type(::std::string* client_type);

  // string device = 23;
  void clear_device();
  static const int kDeviceFieldNumber = 23;
  const ::std::string& device() const;
  void set_device(const ::std::string& value);
  #if LANG_CXX11
  void set_device(::std::string&& value);
  #endif
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  ::std::string* mutable_device();
  ::std::string* release_device();
  void set_allocated_device(::std::string* device);

  // string client_ip = 24;
  void clear_client_ip();
  static const int kClientIpFieldNumber = 24;
  const ::std::string& client_ip() const;
  void set_client_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_client_ip(::std::string&& value);
  #endif
  void set_client_ip(const char* value);
  void set_client_ip(const char* value, size_t size);
  ::std::string* mutable_client_ip();
  ::std::string* release_client_ip();
  void set_allocated_client_ip(::std::string* client_ip);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 uid = 2;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 product_num = 5;
  void clear_product_num();
  static const int kProductNumFieldNumber = 5;
  ::google::protobuf::uint32 product_num() const;
  void set_product_num(::google::protobuf::uint32 value);

  // uint32 coin_num = 6;
  void clear_coin_num();
  static const int kCoinNumFieldNumber = 6;
  ::google::protobuf::uint32 coin_num() const;
  void set_coin_num(::google::protobuf::uint32 value);

  // uint32 trade_time = 11;
  void clear_trade_time();
  static const int kTradeTimeFieldNumber = 11;
  ::google::protobuf::uint32 trade_time() const;
  void set_trade_time(::google::protobuf::uint32 value);

  // uint32 channel_id = 12;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 12;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // uint32 create_time = 16;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 16;
  ::google::protobuf::uint32 create_time() const;
  void set_create_time(::google::protobuf::uint32 value);

  // uint32 bonus_num = 18;
  void clear_bonus_num();
  static const int kBonusNumFieldNumber = 18;
  ::google::protobuf::uint32 bonus_num() const;
  void set_bonus_num(::google::protobuf::uint32 value);

  // uint32 vip_point_num = 19;
  void clear_vip_point_num();
  static const int kVipPointNumFieldNumber = 19;
  ::google::protobuf::uint32 vip_point_num() const;
  void set_vip_point_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Order)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  ::google::protobuf::internal::ArenaStringPtr product_name_;
  ::google::protobuf::internal::ArenaStringPtr total_fee_;
  ::google::protobuf::internal::ArenaStringPtr currency_;
  ::google::protobuf::internal::ArenaStringPtr price_tier_;
  ::google::protobuf::internal::ArenaStringPtr trade_no_;
  ::google::protobuf::internal::ArenaStringPtr channel_order_no_;
  ::google::protobuf::internal::ArenaStringPtr pay_plat_;
  ::google::protobuf::internal::ArenaStringPtr extend_;
  ::google::protobuf::internal::ArenaStringPtr bonus_;
  ::google::protobuf::internal::ArenaStringPtr pay_type_;
  ::google::protobuf::internal::ArenaStringPtr pay_vendor_;
  ::google::protobuf::internal::ArenaStringPtr client_type_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  ::google::protobuf::internal::ArenaStringPtr client_ip_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 product_num_;
  ::google::protobuf::uint32 coin_num_;
  ::google::protobuf::uint32 trade_time_;
  ::google::protobuf::uint32 channel_id_;
  ::google::protobuf::uint32 create_time_;
  ::google::protobuf::uint32 bonus_num_;
  ::google::protobuf::uint32 vip_point_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RechargeOrderNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RechargeOrderNotify) */ {
 public:
  RechargeOrderNotify();
  virtual ~RechargeOrderNotify();

  RechargeOrderNotify(const RechargeOrderNotify& from);

  inline RechargeOrderNotify& operator=(const RechargeOrderNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RechargeOrderNotify(RechargeOrderNotify&& from) noexcept
    : RechargeOrderNotify() {
    *this = ::std::move(from);
  }

  inline RechargeOrderNotify& operator=(RechargeOrderNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeOrderNotify& default_instance();

  static inline const RechargeOrderNotify* internal_default_instance() {
    return reinterpret_cast<const RechargeOrderNotify*>(
               &_RechargeOrderNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(RechargeOrderNotify* other);
  friend void swap(RechargeOrderNotify& a, RechargeOrderNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RechargeOrderNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RechargeOrderNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RechargeOrderNotify& from);
  void MergeFrom(const RechargeOrderNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RechargeOrderNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Order order = 1;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 1;
  const ::proto::Order& order() const;
  ::proto::Order* mutable_order();
  ::proto::Order* release_order();
  void set_allocated_order(::proto::Order* order);

  // @@protoc_insertion_point(class_scope:proto.RechargeOrderNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Order* order_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarkOrderFinishedReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MarkOrderFinishedReq) */ {
 public:
  MarkOrderFinishedReq();
  virtual ~MarkOrderFinishedReq();

  MarkOrderFinishedReq(const MarkOrderFinishedReq& from);

  inline MarkOrderFinishedReq& operator=(const MarkOrderFinishedReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarkOrderFinishedReq(MarkOrderFinishedReq&& from) noexcept
    : MarkOrderFinishedReq() {
    *this = ::std::move(from);
  }

  inline MarkOrderFinishedReq& operator=(MarkOrderFinishedReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkOrderFinishedReq& default_instance();

  static inline const MarkOrderFinishedReq* internal_default_instance() {
    return reinterpret_cast<const MarkOrderFinishedReq*>(
               &_MarkOrderFinishedReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MarkOrderFinishedReq* other);
  friend void swap(MarkOrderFinishedReq& a, MarkOrderFinishedReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarkOrderFinishedReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MarkOrderFinishedReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarkOrderFinishedReq& from);
  void MergeFrom(const MarkOrderFinishedReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarkOrderFinishedReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 order_id = 1;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  ::google::protobuf::uint32 order_id() const;
  void set_order_id(::google::protobuf::uint32 value);

  // uint32 finish_time = 2;
  void clear_finish_time();
  static const int kFinishTimeFieldNumber = 2;
  ::google::protobuf::uint32 finish_time() const;
  void set_finish_time(::google::protobuf::uint32 value);

  // bool is_retry = 3;
  void clear_is_retry();
  static const int kIsRetryFieldNumber = 3;
  bool is_retry() const;
  void set_is_retry(bool value);

  // @@protoc_insertion_point(class_scope:proto.MarkOrderFinishedReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 order_id_;
  ::google::protobuf::uint32 finish_time_;
  bool is_retry_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MarkOrderFinishedRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MarkOrderFinishedRsp) */ {
 public:
  MarkOrderFinishedRsp();
  virtual ~MarkOrderFinishedRsp();

  MarkOrderFinishedRsp(const MarkOrderFinishedRsp& from);

  inline MarkOrderFinishedRsp& operator=(const MarkOrderFinishedRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarkOrderFinishedRsp(MarkOrderFinishedRsp&& from) noexcept
    : MarkOrderFinishedRsp() {
    *this = ::std::move(from);
  }

  inline MarkOrderFinishedRsp& operator=(MarkOrderFinishedRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MarkOrderFinishedRsp& default_instance();

  static inline const MarkOrderFinishedRsp* internal_default_instance() {
    return reinterpret_cast<const MarkOrderFinishedRsp*>(
               &_MarkOrderFinishedRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MarkOrderFinishedRsp* other);
  friend void swap(MarkOrderFinishedRsp& a, MarkOrderFinishedRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarkOrderFinishedRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MarkOrderFinishedRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarkOrderFinishedRsp& from);
  void MergeFrom(const MarkOrderFinishedRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarkOrderFinishedRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 order_id = 2;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 2;
  ::google::protobuf::uint32 order_id() const;
  void set_order_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MarkOrderFinishedRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 order_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUnfinishedOrderReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetUnfinishedOrderReq) */ {
 public:
  GetUnfinishedOrderReq();
  virtual ~GetUnfinishedOrderReq();

  GetUnfinishedOrderReq(const GetUnfinishedOrderReq& from);

  inline GetUnfinishedOrderReq& operator=(const GetUnfinishedOrderReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUnfinishedOrderReq(GetUnfinishedOrderReq&& from) noexcept
    : GetUnfinishedOrderReq() {
    *this = ::std::move(from);
  }

  inline GetUnfinishedOrderReq& operator=(GetUnfinishedOrderReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUnfinishedOrderReq& default_instance();

  static inline const GetUnfinishedOrderReq* internal_default_instance() {
    return reinterpret_cast<const GetUnfinishedOrderReq*>(
               &_GetUnfinishedOrderReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GetUnfinishedOrderReq* other);
  friend void swap(GetUnfinishedOrderReq& a, GetUnfinishedOrderReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUnfinishedOrderReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUnfinishedOrderReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUnfinishedOrderReq& from);
  void MergeFrom(const GetUnfinishedOrderReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUnfinishedOrderReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetUnfinishedOrderReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetUnfinishedOrderRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetUnfinishedOrderRsp) */ {
 public:
  GetUnfinishedOrderRsp();
  virtual ~GetUnfinishedOrderRsp();

  GetUnfinishedOrderRsp(const GetUnfinishedOrderRsp& from);

  inline GetUnfinishedOrderRsp& operator=(const GetUnfinishedOrderRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetUnfinishedOrderRsp(GetUnfinishedOrderRsp&& from) noexcept
    : GetUnfinishedOrderRsp() {
    *this = ::std::move(from);
  }

  inline GetUnfinishedOrderRsp& operator=(GetUnfinishedOrderRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUnfinishedOrderRsp& default_instance();

  static inline const GetUnfinishedOrderRsp* internal_default_instance() {
    return reinterpret_cast<const GetUnfinishedOrderRsp*>(
               &_GetUnfinishedOrderRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetUnfinishedOrderRsp* other);
  friend void swap(GetUnfinishedOrderRsp& a, GetUnfinishedOrderRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetUnfinishedOrderRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetUnfinishedOrderRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetUnfinishedOrderRsp& from);
  void MergeFrom(const GetUnfinishedOrderRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetUnfinishedOrderRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.Order order_list = 2;
  int order_list_size() const;
  void clear_order_list();
  static const int kOrderListFieldNumber = 2;
  const ::proto::Order& order_list(int index) const;
  ::proto::Order* mutable_order_list(int index);
  ::proto::Order* add_order_list();
  ::google::protobuf::RepeatedPtrField< ::proto::Order >*
      mutable_order_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::Order >&
      order_list() const;

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetUnfinishedOrderRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::Order > order_list_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSpecificUnfinishedReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetSpecificUnfinishedReq) */ {
 public:
  GetSpecificUnfinishedReq();
  virtual ~GetSpecificUnfinishedReq();

  GetSpecificUnfinishedReq(const GetSpecificUnfinishedReq& from);

  inline GetSpecificUnfinishedReq& operator=(const GetSpecificUnfinishedReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSpecificUnfinishedReq(GetSpecificUnfinishedReq&& from) noexcept
    : GetSpecificUnfinishedReq() {
    *this = ::std::move(from);
  }

  inline GetSpecificUnfinishedReq& operator=(GetSpecificUnfinishedReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSpecificUnfinishedReq& default_instance();

  static inline const GetSpecificUnfinishedReq* internal_default_instance() {
    return reinterpret_cast<const GetSpecificUnfinishedReq*>(
               &_GetSpecificUnfinishedReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(GetSpecificUnfinishedReq* other);
  friend void swap(GetSpecificUnfinishedReq& a, GetSpecificUnfinishedReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSpecificUnfinishedReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSpecificUnfinishedReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSpecificUnfinishedReq& from);
  void MergeFrom(const GetSpecificUnfinishedReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSpecificUnfinishedReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 order_id = 1;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  ::google::protobuf::uint32 order_id() const;
  void set_order_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetSpecificUnfinishedReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 order_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSpecificUnfinishedRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetSpecificUnfinishedRsp) */ {
 public:
  GetSpecificUnfinishedRsp();
  virtual ~GetSpecificUnfinishedRsp();

  GetSpecificUnfinishedRsp(const GetSpecificUnfinishedRsp& from);

  inline GetSpecificUnfinishedRsp& operator=(const GetSpecificUnfinishedRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetSpecificUnfinishedRsp(GetSpecificUnfinishedRsp&& from) noexcept
    : GetSpecificUnfinishedRsp() {
    *this = ::std::move(from);
  }

  inline GetSpecificUnfinishedRsp& operator=(GetSpecificUnfinishedRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSpecificUnfinishedRsp& default_instance();

  static inline const GetSpecificUnfinishedRsp* internal_default_instance() {
    return reinterpret_cast<const GetSpecificUnfinishedRsp*>(
               &_GetSpecificUnfinishedRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(GetSpecificUnfinishedRsp* other);
  friend void swap(GetSpecificUnfinishedRsp& a, GetSpecificUnfinishedRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetSpecificUnfinishedRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSpecificUnfinishedRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSpecificUnfinishedRsp& from);
  void MergeFrom(const GetSpecificUnfinishedRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSpecificUnfinishedRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.Order order = 2;
  bool has_order() const;
  void clear_order();
  static const int kOrderFieldNumber = 2;
  const ::proto::Order& order() const;
  ::proto::Order* mutable_order();
  ::proto::Order* release_order();
  void set_allocated_order(::proto::Order* order);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetSpecificUnfinishedRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::Order* order_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Order

// uint32 id = 1;
inline void Order::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Order::id() const {
  // @@protoc_insertion_point(field_get:proto.Order.id)
  return id_;
}
inline void Order::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.id)
}

// uint32 uid = 2;
inline void Order::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 Order::uid() const {
  // @@protoc_insertion_point(field_get:proto.Order.uid)
  return uid_;
}
inline void Order::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.uid)
}

// string product_id = 3;
inline void Order::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::product_id() const {
  // @@protoc_insertion_point(field_get:proto.Order.product_id)
  return product_id_.GetNoArena();
}
inline void Order::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.product_id)
}
#if LANG_CXX11
inline void Order::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.product_id)
}
#endif
inline void Order::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.product_id)
}
inline void Order::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.product_id)
}
inline ::std::string* Order::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.Order.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.product_id)
}

// string product_name = 4;
inline void Order::clear_product_name() {
  product_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::product_name() const {
  // @@protoc_insertion_point(field_get:proto.Order.product_name)
  return product_name_.GetNoArena();
}
inline void Order::set_product_name(const ::std::string& value) {
  
  product_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.product_name)
}
#if LANG_CXX11
inline void Order::set_product_name(::std::string&& value) {
  
  product_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.product_name)
}
#endif
inline void Order::set_product_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.product_name)
}
inline void Order::set_product_name(const char* value, size_t size) {
  
  product_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.product_name)
}
inline ::std::string* Order::mutable_product_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.product_name)
  return product_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_product_name() {
  // @@protoc_insertion_point(field_release:proto.Order.product_name)
  
  return product_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_product_name(::std::string* product_name) {
  if (product_name != NULL) {
    
  } else {
    
  }
  product_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_name);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.product_name)
}

// uint32 product_num = 5;
inline void Order::clear_product_num() {
  product_num_ = 0u;
}
inline ::google::protobuf::uint32 Order::product_num() const {
  // @@protoc_insertion_point(field_get:proto.Order.product_num)
  return product_num_;
}
inline void Order::set_product_num(::google::protobuf::uint32 value) {
  
  product_num_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.product_num)
}

// uint32 coin_num = 6;
inline void Order::clear_coin_num() {
  coin_num_ = 0u;
}
inline ::google::protobuf::uint32 Order::coin_num() const {
  // @@protoc_insertion_point(field_get:proto.Order.coin_num)
  return coin_num_;
}
inline void Order::set_coin_num(::google::protobuf::uint32 value) {
  
  coin_num_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.coin_num)
}

// string total_fee = 7;
inline void Order::clear_total_fee() {
  total_fee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::total_fee() const {
  // @@protoc_insertion_point(field_get:proto.Order.total_fee)
  return total_fee_.GetNoArena();
}
inline void Order::set_total_fee(const ::std::string& value) {
  
  total_fee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.total_fee)
}
#if LANG_CXX11
inline void Order::set_total_fee(::std::string&& value) {
  
  total_fee_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.total_fee)
}
#endif
inline void Order::set_total_fee(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  total_fee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.total_fee)
}
inline void Order::set_total_fee(const char* value, size_t size) {
  
  total_fee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.total_fee)
}
inline ::std::string* Order::mutable_total_fee() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.total_fee)
  return total_fee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_total_fee() {
  // @@protoc_insertion_point(field_release:proto.Order.total_fee)
  
  return total_fee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_total_fee(::std::string* total_fee) {
  if (total_fee != NULL) {
    
  } else {
    
  }
  total_fee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), total_fee);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.total_fee)
}

// string currency = 8;
inline void Order::clear_currency() {
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::currency() const {
  // @@protoc_insertion_point(field_get:proto.Order.currency)
  return currency_.GetNoArena();
}
inline void Order::set_currency(const ::std::string& value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.currency)
}
#if LANG_CXX11
inline void Order::set_currency(::std::string&& value) {
  
  currency_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.currency)
}
#endif
inline void Order::set_currency(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.currency)
}
inline void Order::set_currency(const char* value, size_t size) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.currency)
}
inline ::std::string* Order::mutable_currency() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.currency)
  return currency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_currency() {
  // @@protoc_insertion_point(field_release:proto.Order.currency)
  
  return currency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_currency(::std::string* currency) {
  if (currency != NULL) {
    
  } else {
    
  }
  currency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.currency)
}

// string price_tier = 9;
inline void Order::clear_price_tier() {
  price_tier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::price_tier() const {
  // @@protoc_insertion_point(field_get:proto.Order.price_tier)
  return price_tier_.GetNoArena();
}
inline void Order::set_price_tier(const ::std::string& value) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.price_tier)
}
#if LANG_CXX11
inline void Order::set_price_tier(::std::string&& value) {
  
  price_tier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.price_tier)
}
#endif
inline void Order::set_price_tier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.price_tier)
}
inline void Order::set_price_tier(const char* value, size_t size) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.price_tier)
}
inline ::std::string* Order::mutable_price_tier() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.price_tier)
  return price_tier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_price_tier() {
  // @@protoc_insertion_point(field_release:proto.Order.price_tier)
  
  return price_tier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_price_tier(::std::string* price_tier) {
  if (price_tier != NULL) {
    
  } else {
    
  }
  price_tier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price_tier);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.price_tier)
}

// string trade_no = 10;
inline void Order::clear_trade_no() {
  trade_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::trade_no() const {
  // @@protoc_insertion_point(field_get:proto.Order.trade_no)
  return trade_no_.GetNoArena();
}
inline void Order::set_trade_no(const ::std::string& value) {
  
  trade_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.trade_no)
}
#if LANG_CXX11
inline void Order::set_trade_no(::std::string&& value) {
  
  trade_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.trade_no)
}
#endif
inline void Order::set_trade_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trade_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.trade_no)
}
inline void Order::set_trade_no(const char* value, size_t size) {
  
  trade_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.trade_no)
}
inline ::std::string* Order::mutable_trade_no() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.trade_no)
  return trade_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_trade_no() {
  // @@protoc_insertion_point(field_release:proto.Order.trade_no)
  
  return trade_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_trade_no(::std::string* trade_no) {
  if (trade_no != NULL) {
    
  } else {
    
  }
  trade_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trade_no);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.trade_no)
}

// uint32 trade_time = 11;
inline void Order::clear_trade_time() {
  trade_time_ = 0u;
}
inline ::google::protobuf::uint32 Order::trade_time() const {
  // @@protoc_insertion_point(field_get:proto.Order.trade_time)
  return trade_time_;
}
inline void Order::set_trade_time(::google::protobuf::uint32 value) {
  
  trade_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.trade_time)
}

// uint32 channel_id = 12;
inline void Order::clear_channel_id() {
  channel_id_ = 0u;
}
inline ::google::protobuf::uint32 Order::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.Order.channel_id)
  return channel_id_;
}
inline void Order::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.channel_id)
}

// string channel_order_no = 13;
inline void Order::clear_channel_order_no() {
  channel_order_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::channel_order_no() const {
  // @@protoc_insertion_point(field_get:proto.Order.channel_order_no)
  return channel_order_no_.GetNoArena();
}
inline void Order::set_channel_order_no(const ::std::string& value) {
  
  channel_order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.channel_order_no)
}
#if LANG_CXX11
inline void Order::set_channel_order_no(::std::string&& value) {
  
  channel_order_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.channel_order_no)
}
#endif
inline void Order::set_channel_order_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.channel_order_no)
}
inline void Order::set_channel_order_no(const char* value, size_t size) {
  
  channel_order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.channel_order_no)
}
inline ::std::string* Order::mutable_channel_order_no() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.channel_order_no)
  return channel_order_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_channel_order_no() {
  // @@protoc_insertion_point(field_release:proto.Order.channel_order_no)
  
  return channel_order_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_channel_order_no(::std::string* channel_order_no) {
  if (channel_order_no != NULL) {
    
  } else {
    
  }
  channel_order_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_order_no);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.channel_order_no)
}

// string pay_plat = 14;
inline void Order::clear_pay_plat() {
  pay_plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::pay_plat() const {
  // @@protoc_insertion_point(field_get:proto.Order.pay_plat)
  return pay_plat_.GetNoArena();
}
inline void Order::set_pay_plat(const ::std::string& value) {
  
  pay_plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.pay_plat)
}
#if LANG_CXX11
inline void Order::set_pay_plat(::std::string&& value) {
  
  pay_plat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.pay_plat)
}
#endif
inline void Order::set_pay_plat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pay_plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.pay_plat)
}
inline void Order::set_pay_plat(const char* value, size_t size) {
  
  pay_plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.pay_plat)
}
inline ::std::string* Order::mutable_pay_plat() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.pay_plat)
  return pay_plat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_pay_plat() {
  // @@protoc_insertion_point(field_release:proto.Order.pay_plat)
  
  return pay_plat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_pay_plat(::std::string* pay_plat) {
  if (pay_plat != NULL) {
    
  } else {
    
  }
  pay_plat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pay_plat);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.pay_plat)
}

// string extend = 15;
inline void Order::clear_extend() {
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::extend() const {
  // @@protoc_insertion_point(field_get:proto.Order.extend)
  return extend_.GetNoArena();
}
inline void Order::set_extend(const ::std::string& value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.extend)
}
#if LANG_CXX11
inline void Order::set_extend(::std::string&& value) {
  
  extend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.extend)
}
#endif
inline void Order::set_extend(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.extend)
}
inline void Order::set_extend(const char* value, size_t size) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.extend)
}
inline ::std::string* Order::mutable_extend() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.extend)
  return extend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_extend() {
  // @@protoc_insertion_point(field_release:proto.Order.extend)
  
  return extend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_extend(::std::string* extend) {
  if (extend != NULL) {
    
  } else {
    
  }
  extend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.extend)
}

// uint32 create_time = 16;
inline void Order::clear_create_time() {
  create_time_ = 0u;
}
inline ::google::protobuf::uint32 Order::create_time() const {
  // @@protoc_insertion_point(field_get:proto.Order.create_time)
  return create_time_;
}
inline void Order::set_create_time(::google::protobuf::uint32 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.create_time)
}

// string bonus = 17;
inline void Order::clear_bonus() {
  bonus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::bonus() const {
  // @@protoc_insertion_point(field_get:proto.Order.bonus)
  return bonus_.GetNoArena();
}
inline void Order::set_bonus(const ::std::string& value) {
  
  bonus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.bonus)
}
#if LANG_CXX11
inline void Order::set_bonus(::std::string&& value) {
  
  bonus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.bonus)
}
#endif
inline void Order::set_bonus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bonus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.bonus)
}
inline void Order::set_bonus(const char* value, size_t size) {
  
  bonus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.bonus)
}
inline ::std::string* Order::mutable_bonus() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.bonus)
  return bonus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_bonus() {
  // @@protoc_insertion_point(field_release:proto.Order.bonus)
  
  return bonus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_bonus(::std::string* bonus) {
  if (bonus != NULL) {
    
  } else {
    
  }
  bonus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bonus);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.bonus)
}

// uint32 bonus_num = 18;
inline void Order::clear_bonus_num() {
  bonus_num_ = 0u;
}
inline ::google::protobuf::uint32 Order::bonus_num() const {
  // @@protoc_insertion_point(field_get:proto.Order.bonus_num)
  return bonus_num_;
}
inline void Order::set_bonus_num(::google::protobuf::uint32 value) {
  
  bonus_num_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.bonus_num)
}

// uint32 vip_point_num = 19;
inline void Order::clear_vip_point_num() {
  vip_point_num_ = 0u;
}
inline ::google::protobuf::uint32 Order::vip_point_num() const {
  // @@protoc_insertion_point(field_get:proto.Order.vip_point_num)
  return vip_point_num_;
}
inline void Order::set_vip_point_num(::google::protobuf::uint32 value) {
  
  vip_point_num_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.vip_point_num)
}

// string pay_type = 20;
inline void Order::clear_pay_type() {
  pay_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::pay_type() const {
  // @@protoc_insertion_point(field_get:proto.Order.pay_type)
  return pay_type_.GetNoArena();
}
inline void Order::set_pay_type(const ::std::string& value) {
  
  pay_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.pay_type)
}
#if LANG_CXX11
inline void Order::set_pay_type(::std::string&& value) {
  
  pay_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.pay_type)
}
#endif
inline void Order::set_pay_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pay_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.pay_type)
}
inline void Order::set_pay_type(const char* value, size_t size) {
  
  pay_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.pay_type)
}
inline ::std::string* Order::mutable_pay_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.pay_type)
  return pay_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_pay_type() {
  // @@protoc_insertion_point(field_release:proto.Order.pay_type)
  
  return pay_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_pay_type(::std::string* pay_type) {
  if (pay_type != NULL) {
    
  } else {
    
  }
  pay_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pay_type);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.pay_type)
}

// string pay_vendor = 21;
inline void Order::clear_pay_vendor() {
  pay_vendor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::pay_vendor() const {
  // @@protoc_insertion_point(field_get:proto.Order.pay_vendor)
  return pay_vendor_.GetNoArena();
}
inline void Order::set_pay_vendor(const ::std::string& value) {
  
  pay_vendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.pay_vendor)
}
#if LANG_CXX11
inline void Order::set_pay_vendor(::std::string&& value) {
  
  pay_vendor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.pay_vendor)
}
#endif
inline void Order::set_pay_vendor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pay_vendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.pay_vendor)
}
inline void Order::set_pay_vendor(const char* value, size_t size) {
  
  pay_vendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.pay_vendor)
}
inline ::std::string* Order::mutable_pay_vendor() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.pay_vendor)
  return pay_vendor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_pay_vendor() {
  // @@protoc_insertion_point(field_release:proto.Order.pay_vendor)
  
  return pay_vendor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_pay_vendor(::std::string* pay_vendor) {
  if (pay_vendor != NULL) {
    
  } else {
    
  }
  pay_vendor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pay_vendor);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.pay_vendor)
}

// string client_type = 22;
inline void Order::clear_client_type() {
  client_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::client_type() const {
  // @@protoc_insertion_point(field_get:proto.Order.client_type)
  return client_type_.GetNoArena();
}
inline void Order::set_client_type(const ::std::string& value) {
  
  client_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.client_type)
}
#if LANG_CXX11
inline void Order::set_client_type(::std::string&& value) {
  
  client_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.client_type)
}
#endif
inline void Order::set_client_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.client_type)
}
inline void Order::set_client_type(const char* value, size_t size) {
  
  client_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.client_type)
}
inline ::std::string* Order::mutable_client_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.client_type)
  return client_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_client_type() {
  // @@protoc_insertion_point(field_release:proto.Order.client_type)
  
  return client_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_client_type(::std::string* client_type) {
  if (client_type != NULL) {
    
  } else {
    
  }
  client_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_type);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.client_type)
}

// string device = 23;
inline void Order::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::device() const {
  // @@protoc_insertion_point(field_get:proto.Order.device)
  return device_.GetNoArena();
}
inline void Order::set_device(const ::std::string& value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.device)
}
#if LANG_CXX11
inline void Order::set_device(::std::string&& value) {
  
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.device)
}
#endif
inline void Order::set_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.device)
}
inline void Order::set_device(const char* value, size_t size) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.device)
}
inline ::std::string* Order::mutable_device() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_device() {
  // @@protoc_insertion_point(field_release:proto.Order.device)
  
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.device)
}

// string client_ip = 24;
inline void Order::clear_client_ip() {
  client_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::client_ip() const {
  // @@protoc_insertion_point(field_get:proto.Order.client_ip)
  return client_ip_.GetNoArena();
}
inline void Order::set_client_ip(const ::std::string& value) {
  
  client_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.client_ip)
}
#if LANG_CXX11
inline void Order::set_client_ip(::std::string&& value) {
  
  client_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.client_ip)
}
#endif
inline void Order::set_client_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.client_ip)
}
inline void Order::set_client_ip(const char* value, size_t size) {
  
  client_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.client_ip)
}
inline ::std::string* Order::mutable_client_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.client_ip)
  return client_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_client_ip() {
  // @@protoc_insertion_point(field_release:proto.Order.client_ip)
  
  return client_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_client_ip(::std::string* client_ip) {
  if (client_ip != NULL) {
    
  } else {
    
  }
  client_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_ip);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.client_ip)
}

// -------------------------------------------------------------------

// RechargeOrderNotify

// .proto.Order order = 1;
inline bool RechargeOrderNotify::has_order() const {
  return this != internal_default_instance() && order_ != NULL;
}
inline void RechargeOrderNotify::clear_order() {
  if (GetArenaNoVirtual() == NULL && order_ != NULL) delete order_;
  order_ = NULL;
}
inline const ::proto::Order& RechargeOrderNotify::order() const {
  const ::proto::Order* p = order_;
  // @@protoc_insertion_point(field_get:proto.RechargeOrderNotify.order)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Order*>(
      &::proto::_Order_default_instance_);
}
inline ::proto::Order* RechargeOrderNotify::mutable_order() {
  
  if (order_ == NULL) {
    order_ = new ::proto::Order;
  }
  // @@protoc_insertion_point(field_mutable:proto.RechargeOrderNotify.order)
  return order_;
}
inline ::proto::Order* RechargeOrderNotify::release_order() {
  // @@protoc_insertion_point(field_release:proto.RechargeOrderNotify.order)
  
  ::proto::Order* temp = order_;
  order_ = NULL;
  return temp;
}
inline void RechargeOrderNotify::set_allocated_order(::proto::Order* order) {
  delete order_;
  order_ = order;
  if (order) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RechargeOrderNotify.order)
}

// -------------------------------------------------------------------

// MarkOrderFinishedReq

// uint32 order_id = 1;
inline void MarkOrderFinishedReq::clear_order_id() {
  order_id_ = 0u;
}
inline ::google::protobuf::uint32 MarkOrderFinishedReq::order_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkOrderFinishedReq.order_id)
  return order_id_;
}
inline void MarkOrderFinishedReq::set_order_id(::google::protobuf::uint32 value) {
  
  order_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkOrderFinishedReq.order_id)
}

// uint32 finish_time = 2;
inline void MarkOrderFinishedReq::clear_finish_time() {
  finish_time_ = 0u;
}
inline ::google::protobuf::uint32 MarkOrderFinishedReq::finish_time() const {
  // @@protoc_insertion_point(field_get:proto.MarkOrderFinishedReq.finish_time)
  return finish_time_;
}
inline void MarkOrderFinishedReq::set_finish_time(::google::protobuf::uint32 value) {
  
  finish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkOrderFinishedReq.finish_time)
}

// bool is_retry = 3;
inline void MarkOrderFinishedReq::clear_is_retry() {
  is_retry_ = false;
}
inline bool MarkOrderFinishedReq::is_retry() const {
  // @@protoc_insertion_point(field_get:proto.MarkOrderFinishedReq.is_retry)
  return is_retry_;
}
inline void MarkOrderFinishedReq::set_is_retry(bool value) {
  
  is_retry_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkOrderFinishedReq.is_retry)
}

// -------------------------------------------------------------------

// MarkOrderFinishedRsp

// int32 retcode = 1;
inline void MarkOrderFinishedRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 MarkOrderFinishedRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MarkOrderFinishedRsp.retcode)
  return retcode_;
}
inline void MarkOrderFinishedRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkOrderFinishedRsp.retcode)
}

// uint32 order_id = 2;
inline void MarkOrderFinishedRsp::clear_order_id() {
  order_id_ = 0u;
}
inline ::google::protobuf::uint32 MarkOrderFinishedRsp::order_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkOrderFinishedRsp.order_id)
  return order_id_;
}
inline void MarkOrderFinishedRsp::set_order_id(::google::protobuf::uint32 value) {
  
  order_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkOrderFinishedRsp.order_id)
}

// -------------------------------------------------------------------

// GetUnfinishedOrderReq

// -------------------------------------------------------------------

// GetUnfinishedOrderRsp

// int32 retcode = 1;
inline void GetUnfinishedOrderRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetUnfinishedOrderRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetUnfinishedOrderRsp.retcode)
  return retcode_;
}
inline void GetUnfinishedOrderRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUnfinishedOrderRsp.retcode)
}

// repeated .proto.Order order_list = 2;
inline int GetUnfinishedOrderRsp::order_list_size() const {
  return order_list_.size();
}
inline void GetUnfinishedOrderRsp::clear_order_list() {
  order_list_.Clear();
}
inline const ::proto::Order& GetUnfinishedOrderRsp::order_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetUnfinishedOrderRsp.order_list)
  return order_list_.Get(index);
}
inline ::proto::Order* GetUnfinishedOrderRsp::mutable_order_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetUnfinishedOrderRsp.order_list)
  return order_list_.Mutable(index);
}
inline ::proto::Order* GetUnfinishedOrderRsp::add_order_list() {
  // @@protoc_insertion_point(field_add:proto.GetUnfinishedOrderRsp.order_list)
  return order_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::Order >*
GetUnfinishedOrderRsp::mutable_order_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetUnfinishedOrderRsp.order_list)
  return &order_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::Order >&
GetUnfinishedOrderRsp::order_list() const {
  // @@protoc_insertion_point(field_list:proto.GetUnfinishedOrderRsp.order_list)
  return order_list_;
}

// -------------------------------------------------------------------

// GetSpecificUnfinishedReq

// uint32 order_id = 1;
inline void GetSpecificUnfinishedReq::clear_order_id() {
  order_id_ = 0u;
}
inline ::google::protobuf::uint32 GetSpecificUnfinishedReq::order_id() const {
  // @@protoc_insertion_point(field_get:proto.GetSpecificUnfinishedReq.order_id)
  return order_id_;
}
inline void GetSpecificUnfinishedReq::set_order_id(::google::protobuf::uint32 value) {
  
  order_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSpecificUnfinishedReq.order_id)
}

// -------------------------------------------------------------------

// GetSpecificUnfinishedRsp

// int32 retcode = 1;
inline void GetSpecificUnfinishedRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetSpecificUnfinishedRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetSpecificUnfinishedRsp.retcode)
  return retcode_;
}
inline void GetSpecificUnfinishedRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSpecificUnfinishedRsp.retcode)
}

// .proto.Order order = 2;
inline bool GetSpecificUnfinishedRsp::has_order() const {
  return this != internal_default_instance() && order_ != NULL;
}
inline void GetSpecificUnfinishedRsp::clear_order() {
  if (GetArenaNoVirtual() == NULL && order_ != NULL) delete order_;
  order_ = NULL;
}
inline const ::proto::Order& GetSpecificUnfinishedRsp::order() const {
  const ::proto::Order* p = order_;
  // @@protoc_insertion_point(field_get:proto.GetSpecificUnfinishedRsp.order)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Order*>(
      &::proto::_Order_default_instance_);
}
inline ::proto::Order* GetSpecificUnfinishedRsp::mutable_order() {
  
  if (order_ == NULL) {
    order_ = new ::proto::Order;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetSpecificUnfinishedRsp.order)
  return order_;
}
inline ::proto::Order* GetSpecificUnfinishedRsp::release_order() {
  // @@protoc_insertion_point(field_release:proto.GetSpecificUnfinishedRsp.order)
  
  ::proto::Order* temp = order_;
  order_ = NULL;
  return temp;
}
inline void GetSpecificUnfinishedRsp::set_allocated_order(::proto::Order* order) {
  delete order_;
  order_ = order;
  if (order) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetSpecificUnfinishedRsp.order)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fonly_2fcmd_5frecharge_2eserver_2eproto__INCLUDED
