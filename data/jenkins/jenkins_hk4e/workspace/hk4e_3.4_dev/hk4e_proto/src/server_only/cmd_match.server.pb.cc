// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_match.server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_only/cmd_match.server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class MatchPlayerDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchPlayer>
     _instance;
} _MatchPlayer_default_instance_;
class MatchUnitDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchUnit>
     _instance;
} _MatchUnit_default_instance_;
class AddMatchUnitReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddMatchUnitReq>
     _instance;
  const ::proto::GCGDuelExtra* gcg_duel_extra_;
} _AddMatchUnitReq_default_instance_;
class AddMatchUnitRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddMatchUnitRsp>
     _instance;
} _AddMatchUnitRsp_default_instance_;
class MatchStartNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchStartNotify>
     _instance;
} _MatchStartNotify_default_instance_;
class RemoveMatchUnitReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RemoveMatchUnitReq>
     _instance;
} _RemoveMatchUnitReq_default_instance_;
class RemoveMatchUnitRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RemoveMatchUnitRsp>
     _instance;
} _RemoveMatchUnitRsp_default_instance_;
class MatchUnitRemovedNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchUnitRemovedNotify>
     _instance;
} _MatchUnitRemovedNotify_default_instance_;
class GuestUnitMatchSuccNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuestUnitMatchSuccNotify>
     _instance;
} _GuestUnitMatchSuccNotify_default_instance_;
class ConfirmGuestUnitReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConfirmGuestUnitReq>
     _instance;
} _ConfirmGuestUnitReq_default_instance_;
class ConfirmGuestUnitRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConfirmGuestUnitRsp>
     _instance;
} _ConfirmGuestUnitRsp_default_instance_;
class MatchPlayerJoinNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchPlayerJoinNotify>
     _instance;
} _MatchPlayerJoinNotify_default_instance_;
class MatchPlayerQuitNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchPlayerQuitNotify>
     _instance;
} _MatchPlayerQuitNotify_default_instance_;
class GuestUnitAgreedResultNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GuestUnitAgreedResultNotify>
     _instance;
} _GuestUnitAgreedResultNotify_default_instance_;
class HostUnitMatchSuccNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<HostUnitMatchSuccNotify>
     _instance;
} _HostUnitMatchSuccNotify_default_instance_;
class SyncMatchUnitReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SyncMatchUnitReq>
     _instance;
} _SyncMatchUnitReq_default_instance_;
class SyncMatchUnitRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SyncMatchUnitRsp>
     _instance;
} _SyncMatchUnitRsp_default_instance_;
class MatchserverWorkloadInfoNotify_MatchUnitMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchserverWorkloadInfoNotify::MatchserverWorkloadInfoNotify_MatchUnitMapEntry>
     _instance;
} _MatchserverWorkloadInfoNotify_MatchUnitMapEntry_default_instance_;
class MatchserverWorkloadInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchserverWorkloadInfoNotify>
     _instance;
} _MatchserverWorkloadInfoNotify_default_instance_;
class MatchPlayerUpdateNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchPlayerUpdateNotify>
     _instance;
} _MatchPlayerUpdateNotify_default_instance_;
class MatchIdentityNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchIdentityNotify>
     _instance;
} _MatchIdentityNotify_default_instance_;
class GeneralMatchFinishNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GeneralMatchFinishNotify>
     _instance;
} _GeneralMatchFinishNotify_default_instance_;

namespace protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[22];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayer, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayer, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayer, player_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayer, world_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayer, platform_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayer, is_only_match_with_ps_player_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayer, blacklist_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayer, player_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayer, hide_and_seek_hider_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayer, hide_and_seek_chosen_map_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUnit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUnit, match_player_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUnit, unit_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitReq, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitReq, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitReq, match_unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitReq, expect_identity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitReq, dungeon_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitReq, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitReq, mechanicus_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitReq, match_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitReq, match_param_list_),
  offsetof(AddMatchUnitReqDefaultTypeInternal, gcg_duel_extra_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitReq, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitRsp, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitRsp, match_unit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitRsp, dungeon_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitRsp, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMatchUnitRsp, mechanicus_tag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartNotify, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartNotify, match_begin_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartNotify, estimate_match_cost_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartNotify, is_rematch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartNotify, dungeon_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartNotify, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartNotify, mechanicus_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartNotify, match_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchStartNotify, match_param_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveMatchUnitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveMatchUnitReq, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveMatchUnitReq, unit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveMatchUnitReq, op_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveMatchUnitRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveMatchUnitRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveMatchUnitRsp, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveMatchUnitRsp, unit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveMatchUnitRsp, op_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUnitRemovedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUnitRemovedNotify, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchUnitRemovedNotify, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestUnitMatchSuccNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestUnitMatchSuccNotify, host_unit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestUnitMatchSuccNotify, confirm_end_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestUnitMatchSuccNotify, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestUnitMatchSuccNotify, dungeon_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestUnitMatchSuccNotify, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestUnitMatchSuccNotify, mechanicus_tag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGuestUnitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGuestUnitReq, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGuestUnitReq, unit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGuestUnitReq, is_agreed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGuestUnitReq, match_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGuestUnitRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGuestUnitRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGuestUnitRsp, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGuestUnitRsp, unit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGuestUnitRsp, is_agreed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmGuestUnitRsp, match_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayerJoinNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayerJoinNotify, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayerJoinNotify, unit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayerJoinNotify, match_player_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayerQuitNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayerQuitNotify, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayerQuitNotify, unit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayerQuitNotify, player_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestUnitAgreedResultNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestUnitAgreedResultNotify, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestUnitAgreedResultNotify, host_unit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuestUnitAgreedResultNotify, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HostUnitMatchSuccNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HostUnitMatchSuccNotify, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HostUnitMatchSuccNotify, dungeon_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HostUnitMatchSuccNotify, mp_play_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HostUnitMatchSuccNotify, mechanicus_difficult_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMatchUnitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMatchUnitReq, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMatchUnitReq, match_unit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMatchUnitRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncMatchUnitRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchserverWorkloadInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchserverWorkloadInfoNotify, match_unit_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchserverWorkloadInfoNotify, match_unit_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayerUpdateNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayerUpdateNotify, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayerUpdateNotify, unit_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchPlayerUpdateNotify, match_player_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchIdentityNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchIdentityNotify, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchIdentityNotify, match_identity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMatchFinishNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMatchFinishNotify, match_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMatchFinishNotify, match_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMatchFinishNotify, match_param_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GeneralMatchFinishNotify, match_player_list_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(MatchPlayer)},
  { 15, -1, sizeof(MatchUnit)},
  { 22, -1, sizeof(AddMatchUnitReq)},
  { 37, -1, sizeof(AddMatchUnitRsp)},
  { 48, -1, sizeof(MatchStartNotify)},
  { 62, -1, sizeof(RemoveMatchUnitReq)},
  { 70, -1, sizeof(RemoveMatchUnitRsp)},
  { 79, -1, sizeof(MatchUnitRemovedNotify)},
  { 86, -1, sizeof(GuestUnitMatchSuccNotify)},
  { 97, -1, sizeof(ConfirmGuestUnitReq)},
  { 106, -1, sizeof(ConfirmGuestUnitRsp)},
  { 116, -1, sizeof(MatchPlayerJoinNotify)},
  { 124, -1, sizeof(MatchPlayerQuitNotify)},
  { 132, -1, sizeof(GuestUnitAgreedResultNotify)},
  { 140, -1, sizeof(HostUnitMatchSuccNotify)},
  { 149, -1, sizeof(SyncMatchUnitReq)},
  { 156, -1, sizeof(SyncMatchUnitRsp)},
  { 162, -1, sizeof(MatchserverWorkloadInfoNotify)},
  { 169, -1, sizeof(MatchPlayerUpdateNotify)},
  { 177, -1, sizeof(MatchIdentityNotify)},
  { 184, -1, sizeof(GeneralMatchFinishNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchPlayer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchUnit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddMatchUnitReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddMatchUnitRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchStartNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoveMatchUnitReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoveMatchUnitRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchUnitRemovedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuestUnitMatchSuccNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfirmGuestUnitReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfirmGuestUnitRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchPlayerJoinNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchPlayerQuitNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GuestUnitAgreedResultNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HostUnitMatchSuccNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SyncMatchUnitReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SyncMatchUnitRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchserverWorkloadInfoNotify_MatchUnitMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchserverWorkloadInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchPlayerUpdateNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchIdentityNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GeneralMatchFinishNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "server_only/cmd_match.server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[17].reflection = MatchserverWorkloadInfoNotify::MatchserverWorkloadInfoNotify_MatchUnitMapEntry::CreateReflection(file_level_metadata[17].descriptor, _MatchserverWorkloadInfoNotify_MatchUnitMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 22);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  ::proto::protobuf_server_5fonly_2fenum_2eserver_2eproto::InitDefaults();
  _MatchPlayer_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchPlayer_default_instance_);_MatchUnit_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchUnit_default_instance_);_AddMatchUnitReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddMatchUnitReq_default_instance_);_AddMatchUnitRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddMatchUnitRsp_default_instance_);_MatchStartNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchStartNotify_default_instance_);_RemoveMatchUnitReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RemoveMatchUnitReq_default_instance_);_RemoveMatchUnitRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RemoveMatchUnitRsp_default_instance_);_MatchUnitRemovedNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchUnitRemovedNotify_default_instance_);_GuestUnitMatchSuccNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuestUnitMatchSuccNotify_default_instance_);_ConfirmGuestUnitReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConfirmGuestUnitReq_default_instance_);_ConfirmGuestUnitRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConfirmGuestUnitRsp_default_instance_);_MatchPlayerJoinNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchPlayerJoinNotify_default_instance_);_MatchPlayerQuitNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchPlayerQuitNotify_default_instance_);_GuestUnitAgreedResultNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GuestUnitAgreedResultNotify_default_instance_);_HostUnitMatchSuccNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_HostUnitMatchSuccNotify_default_instance_);_SyncMatchUnitReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SyncMatchUnitReq_default_instance_);_SyncMatchUnitRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SyncMatchUnitRsp_default_instance_);_MatchserverWorkloadInfoNotify_MatchUnitMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchserverWorkloadInfoNotify_MatchUnitMapEntry_default_instance_);_MatchserverWorkloadInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchserverWorkloadInfoNotify_default_instance_);_MatchPlayerUpdateNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchPlayerUpdateNotify_default_instance_);_MatchIdentityNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchIdentityNotify_default_instance_);_GeneralMatchFinishNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GeneralMatchFinishNotify_default_instance_);_MatchPlayer_default_instance_._instance.get_mutable()->player_info_ = const_cast< ::proto::OnlinePlayerInfo*>(
      ::proto::OnlinePlayerInfo::internal_default_instance());
  _AddMatchUnitReq_default_instance_._instance.get_mutable()->match_unit_ = const_cast< ::proto::MatchUnit*>(
      ::proto::MatchUnit::internal_default_instance());
  _AddMatchUnitReq_default_instance_.gcg_duel_extra_ = const_cast< ::proto::GCGDuelExtra*>(
      ::proto::GCGDuelExtra::internal_default_instance());
  _AddMatchUnitRsp_default_instance_._instance.get_mutable()->match_unit_ = const_cast< ::proto::MatchUnit*>(
      ::proto::MatchUnit::internal_default_instance());
  _MatchPlayerJoinNotify_default_instance_._instance.get_mutable()->match_player_ = const_cast< ::proto::MatchPlayer*>(
      ::proto::MatchPlayer::internal_default_instance());
  _SyncMatchUnitReq_default_instance_._instance.get_mutable()->match_unit_ = const_cast< ::proto::MatchUnit*>(
      ::proto::MatchUnit::internal_default_instance());
  _MatchserverWorkloadInfoNotify_MatchUnitMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_MatchserverWorkloadInfoNotify_MatchUnitMapEntry_default_instance_._instance.get_mutable());
  _MatchserverWorkloadInfoNotify_MatchUnitMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _MatchPlayerUpdateNotify_default_instance_._instance.get_mutable()->match_player_ = const_cast< ::proto::MatchPlayer*>(
      ::proto::MatchPlayer::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\"server_only/cmd_match.server.proto\022\005pr"
      "oto\032\014define.proto\032\035server_only/enum.serv"
      "er.proto\"\250\002\n\013MatchPlayer\022\013\n\003uid\030\001 \001(\r\022\020\n"
      "\010nickname\030\002 \001(\t\022\024\n\014player_level\030\003 \001(\r\022\023\n"
      "\013world_level\030\004 \001(\r\022\025\n\rplatform_type\030\005 \001("
      "\r\022$\n\034is_only_match_with_ps_player\030\006 \001(\010\022"
      "\032\n\022blacklist_uid_list\030\007 \003(\r\022,\n\013player_in"
      "fo\030\010 \001(\0132\027.proto.OnlinePlayerInfo\022!\n\031hid"
      "e_and_seek_hider_count\030\t \001(\r\022%\n\035hide_and"
      "_seek_chosen_map_list\030\n \003(\r\"K\n\tMatchUnit"
      "\022-\n\021match_player_list\030\001 \003(\0132\022.proto.Matc"
      "hPlayer\022\017\n\007unit_id\030\002 \001(\r\"\261\002\n\017AddMatchUni"
      "tReq\022$\n\nmatch_type\030\001 \001(\0162\020.proto.MatchTy"
      "pe\022$\n\nmatch_unit\030\002 \001(\0132\020.proto.MatchUnit"
      "\022-\n\017expect_identity\030\003 \001(\0162\024.proto.MatchI"
      "dentity\022\022\n\ndungeon_id\030\013 \001(\r\022\022\n\nmp_play_i"
      "d\030\014 \001(\r\022\026\n\016mechanicus_tag\030\r \001(\r\022\020\n\010match"
      "_id\030\016 \001(\r\022\030\n\020match_param_list\030\017 \003(\r\022-\n\016g"
      "cg_duel_extra\030\025 \001(\0132\023.proto.GCGDuelExtra"
      "H\000B\010\n\006detail\"\256\001\n\017AddMatchUnitRsp\022\017\n\007retc"
      "ode\030\001 \001(\005\022$\n\nmatch_type\030\002 \001(\0162\020.proto.Ma"
      "tchType\022$\n\nmatch_unit\030\003 \001(\0132\020.proto.Matc"
      "hUnit\022\022\n\ndungeon_id\030\013 \001(\r\022\022\n\nmp_play_id\030"
      "\014 \001(\r\022\026\n\016mechanicus_tag\030\r \001(\r\"\364\001\n\020MatchS"
      "tartNotify\022$\n\nmatch_type\030\001 \001(\0162\020.proto.M"
      "atchType\022\030\n\020match_begin_time\030\002 \001(\r\022 \n\030es"
      "timate_match_cost_time\030\003 \001(\r\022\022\n\nis_remat"
      "ch\030\004 \001(\010\022\022\n\ndungeon_id\030\013 \001(\r\022\022\n\nmp_play_"
      "id\030\014 \001(\r\022\026\n\016mechanicus_tag\030\r \001(\r\022\020\n\010matc"
      "h_id\030\016 \001(\r\022\030\n\020match_param_list\030\017 \003(\r\"z\n\022"
      "RemoveMatchUnitReq\022$\n\nmatch_type\030\001 \001(\0162\020"
      ".proto.MatchType\022\017\n\007unit_id\030\002 \001(\r\022-\n\007op_"
      "type\030\003 \001(\0162\034.proto.MatchUnitRemoveOpType"
      "\"\213\001\n\022RemoveMatchUnitRsp\022\017\n\007retcode\030\001 \001(\005"
      "\022$\n\nmatch_type\030\002 \001(\0162\020.proto.MatchType\022\017"
      "\n\007unit_id\030\003 \001(\r\022-\n\007op_type\030\004 \001(\0162\034.proto"
      ".MatchUnitRemoveOpType\"b\n\026MatchUnitRemov"
      "edNotify\022$\n\nmatch_type\030\001 \001(\0162\020.proto.Mat"
      "chType\022\"\n\006reason\030\002 \001(\0162\022.proto.MatchReas"
      "on\"\236\001\n\030GuestUnitMatchSuccNotify\022\024\n\014host_"
      "unit_id\030\001 \001(\r\022\030\n\020confirm_end_time\030\002 \001(\r\022"
      "\022\n\nmatch_type\030\003 \001(\r\022\022\n\ndungeon_id\030\013 \001(\r\022"
      "\022\n\nmp_play_id\030\014 \001(\r\022\026\n\016mechanicus_tag\030\r "
      "\001(\r\"q\n\023ConfirmGuestUnitReq\022$\n\nmatch_type"
      "\030\001 \001(\0162\020.proto.MatchType\022\017\n\007unit_id\030\002 \001("
      "\r\022\021\n\tis_agreed\030\003 \001(\010\022\020\n\010match_id\030\004 \001(\r\"\202"
      "\001\n\023ConfirmGuestUnitRsp\022\017\n\007retcode\030\001 \001(\005\022"
      "$\n\nmatch_type\030\002 \001(\0162\020.proto.MatchType\022\017\n"
      "\007unit_id\030\003 \001(\r\022\021\n\tis_agreed\030\004 \001(\010\022\020\n\010mat"
      "ch_id\030\005 \001(\r\"x\n\025MatchPlayerJoinNotify\022$\n\n"
      "match_type\030\001 \001(\0162\020.proto.MatchType\022\017\n\007un"
      "it_id\030\002 \001(\r\022(\n\014match_player\030\003 \001(\0132\022.prot"
      "o.MatchPlayer\"b\n\025MatchPlayerQuitNotify\022$"
      "\n\nmatch_type\030\001 \001(\0162\020.proto.MatchType\022\017\n\007"
      "unit_id\030\002 \001(\r\022\022\n\nplayer_uid\030\003 \001(\r\"\274\001\n\033Gu"
      "estUnitAgreedResultNotify\022$\n\nmatch_type\030"
      "\001 \001(\0162\020.proto.MatchType\022\024\n\014host_unit_id\030"
      "\002 \001(\r\0229\n\006reason\030\003 \001(\0162).proto.GuestUnitA"
      "greedResultNotify.Reason\"&\n\006Reason\022\010\n\004SU"
      "CC\020\000\022\022\n\016HOST_UNIT_QUIT\020\001\"y\n\027HostUnitMatc"
      "hSuccNotify\022\022\n\nmatch_type\030\001 \001(\r\022\022\n\ndunge"
      "on_id\030\013 \001(\r\022\022\n\nmp_play_id\030\014 \001(\r\022\"\n\032mecha"
      "nicus_difficult_level\030\r \001(\r\"^\n\020SyncMatch"
      "UnitReq\022$\n\nmatch_type\030\001 \001(\0162\020.proto.Matc"
      "hType\022$\n\nmatch_unit\030\002 \001(\0132\020.proto.MatchU"
      "nit\"#\n\020SyncMatchUnitRsp\022\017\n\007retcode\030\001 \001(\005"
      "\"\274\001\n\035MatchserverWorkloadInfoNotify\022\026\n\016ma"
      "tch_unit_num\030\001 \001(\r\022N\n\016match_unit_map\030\002 \003"
      "(\01326.proto.MatchserverWorkloadInfoNotify"
      ".MatchUnitMapEntry\0323\n\021MatchUnitMapEntry\022"
      "\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"z\n\027Match"
      "PlayerUpdateNotify\022$\n\nmatch_type\030\001 \001(\0162\020"
      ".proto.MatchType\022\017\n\007unit_id\030\002 \001(\r\022(\n\014mat"
      "ch_player\030\003 \001(\0132\022.proto.MatchPlayer\"i\n\023M"
      "atchIdentityNotify\022$\n\nmatch_type\030\001 \001(\0162\020"
      ".proto.MatchType\022,\n\016match_identity\030\002 \001(\016"
      "2\024.proto.MatchIdentity\"\226\001\n\030GeneralMatchF"
      "inishNotify\022$\n\nmatch_type\030\001 \001(\0162\020.proto."
      "MatchType\022\020\n\010match_id\030\002 \001(\r\022\023\n\013match_par"
      "am\030\003 \001(\r\022-\n\021match_player_list\030\004 \003(\0132\022.pr"
      "oto.MatchPlayerB(Z&github.com/teyvat-hel"
      "per/hk4e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3265);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_only/cmd_match.server.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
  ::proto::protobuf_server_5fonly_2fenum_2eserver_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto

const ::google::protobuf::EnumDescriptor* GuestUnitAgreedResultNotify_Reason_descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_enum_descriptors[0];
}
bool GuestUnitAgreedResultNotify_Reason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GuestUnitAgreedResultNotify_Reason GuestUnitAgreedResultNotify::SUCC;
const GuestUnitAgreedResultNotify_Reason GuestUnitAgreedResultNotify::HOST_UNIT_QUIT;
const GuestUnitAgreedResultNotify_Reason GuestUnitAgreedResultNotify::Reason_MIN;
const GuestUnitAgreedResultNotify_Reason GuestUnitAgreedResultNotify::Reason_MAX;
const int GuestUnitAgreedResultNotify::Reason_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchPlayer::kUidFieldNumber;
const int MatchPlayer::kNicknameFieldNumber;
const int MatchPlayer::kPlayerLevelFieldNumber;
const int MatchPlayer::kWorldLevelFieldNumber;
const int MatchPlayer::kPlatformTypeFieldNumber;
const int MatchPlayer::kIsOnlyMatchWithPsPlayerFieldNumber;
const int MatchPlayer::kBlacklistUidListFieldNumber;
const int MatchPlayer::kPlayerInfoFieldNumber;
const int MatchPlayer::kHideAndSeekHiderCountFieldNumber;
const int MatchPlayer::kHideAndSeekChosenMapListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchPlayer::MatchPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MatchPlayer)
}
MatchPlayer::MatchPlayer(const MatchPlayer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blacklist_uid_list_(from.blacklist_uid_list_),
      hide_and_seek_chosen_map_list_(from.hide_and_seek_chosen_map_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.has_player_info()) {
    player_info_ = new ::proto::OnlinePlayerInfo(*from.player_info_);
  } else {
    player_info_ = NULL;
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&hide_and_seek_hider_count_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(hide_and_seek_hider_count_));
  // @@protoc_insertion_point(copy_constructor:proto.MatchPlayer)
}

void MatchPlayer::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hide_and_seek_hider_count_) -
      reinterpret_cast<char*>(&player_info_)) + sizeof(hide_and_seek_hider_count_));
  _cached_size_ = 0;
}

MatchPlayer::~MatchPlayer() {
  // @@protoc_insertion_point(destructor:proto.MatchPlayer)
  SharedDtor();
}

void MatchPlayer::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_info_;
}

void MatchPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchPlayer::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchPlayer& MatchPlayer::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchPlayer* MatchPlayer::New(::google::protobuf::Arena* arena) const {
  MatchPlayer* n = new MatchPlayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MatchPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blacklist_uid_list_.Clear();
  hide_and_seek_chosen_map_list_.Clear();
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) {
    delete player_info_;
  }
  player_info_ = NULL;
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hide_and_seek_hider_count_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(hide_and_seek_hider_count_));
  _internal_metadata_.Clear();
}

bool MatchPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MatchPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.MatchPlayer.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 player_level = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 world_level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &world_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 platform_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_only_match_with_ps_player = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_only_match_with_ps_player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 blacklist_uid_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_blacklist_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 58u, input, this->mutable_blacklist_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.OnlinePlayerInfo player_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hide_and_seek_hider_count = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hide_and_seek_hider_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 hide_and_seek_chosen_map_list = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_hide_and_seek_chosen_map_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 82u, input, this->mutable_hide_and_seek_chosen_map_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MatchPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MatchPlayer)
  return false;
#undef DO_
}

void MatchPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MatchPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MatchPlayer.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // uint32 player_level = 3;
  if (this->player_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->player_level(), output);
  }

  // uint32 world_level = 4;
  if (this->world_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->world_level(), output);
  }

  // uint32 platform_type = 5;
  if (this->platform_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->platform_type(), output);
  }

  // bool is_only_match_with_ps_player = 6;
  if (this->is_only_match_with_ps_player() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_only_match_with_ps_player(), output);
  }

  // repeated uint32 blacklist_uid_list = 7;
  if (this->blacklist_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _blacklist_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->blacklist_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->blacklist_uid_list(i), output);
  }

  // .proto.OnlinePlayerInfo player_info = 8;
  if (this->has_player_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->player_info_, output);
  }

  // uint32 hide_and_seek_hider_count = 9;
  if (this->hide_and_seek_hider_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->hide_and_seek_hider_count(), output);
  }

  // repeated uint32 hide_and_seek_chosen_map_list = 10;
  if (this->hide_and_seek_chosen_map_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _hide_and_seek_chosen_map_list_cached_byte_size_));
  }
  for (int i = 0, n = this->hide_and_seek_chosen_map_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->hide_and_seek_chosen_map_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MatchPlayer)
}

::google::protobuf::uint8* MatchPlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MatchPlayer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.MatchPlayer.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // uint32 player_level = 3;
  if (this->player_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->player_level(), target);
  }

  // uint32 world_level = 4;
  if (this->world_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->world_level(), target);
  }

  // uint32 platform_type = 5;
  if (this->platform_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->platform_type(), target);
  }

  // bool is_only_match_with_ps_player = 6;
  if (this->is_only_match_with_ps_player() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_only_match_with_ps_player(), target);
  }

  // repeated uint32 blacklist_uid_list = 7;
  if (this->blacklist_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _blacklist_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->blacklist_uid_list_, target);
  }

  // .proto.OnlinePlayerInfo player_info = 8;
  if (this->has_player_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->player_info_, deterministic, target);
  }

  // uint32 hide_and_seek_hider_count = 9;
  if (this->hide_and_seek_hider_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->hide_and_seek_hider_count(), target);
  }

  // repeated uint32 hide_and_seek_chosen_map_list = 10;
  if (this->hide_and_seek_chosen_map_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _hide_and_seek_chosen_map_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->hide_and_seek_chosen_map_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MatchPlayer)
  return target;
}

size_t MatchPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MatchPlayer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 blacklist_uid_list = 7;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->blacklist_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _blacklist_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 hide_and_seek_chosen_map_list = 10;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->hide_and_seek_chosen_map_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _hide_and_seek_chosen_map_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string nickname = 2;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // .proto.OnlinePlayerInfo player_info = 8;
  if (this->has_player_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_info_);
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 player_level = 3;
  if (this->player_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_level());
  }

  // uint32 world_level = 4;
  if (this->world_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->world_level());
  }

  // uint32 platform_type = 5;
  if (this->platform_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform_type());
  }

  // bool is_only_match_with_ps_player = 6;
  if (this->is_only_match_with_ps_player() != 0) {
    total_size += 1 + 1;
  }

  // uint32 hide_and_seek_hider_count = 9;
  if (this->hide_and_seek_hider_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hide_and_seek_hider_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MatchPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchPlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchPlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MatchPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MatchPlayer)
    MergeFrom(*source);
  }
}

void MatchPlayer::MergeFrom(const MatchPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MatchPlayer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  blacklist_uid_list_.MergeFrom(from.blacklist_uid_list_);
  hide_and_seek_chosen_map_list_.MergeFrom(from.hide_and_seek_chosen_map_list_);
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.has_player_info()) {
    mutable_player_info()->::proto::OnlinePlayerInfo::MergeFrom(from.player_info());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.player_level() != 0) {
    set_player_level(from.player_level());
  }
  if (from.world_level() != 0) {
    set_world_level(from.world_level());
  }
  if (from.platform_type() != 0) {
    set_platform_type(from.platform_type());
  }
  if (from.is_only_match_with_ps_player() != 0) {
    set_is_only_match_with_ps_player(from.is_only_match_with_ps_player());
  }
  if (from.hide_and_seek_hider_count() != 0) {
    set_hide_and_seek_hider_count(from.hide_and_seek_hider_count());
  }
}

void MatchPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MatchPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchPlayer::CopyFrom(const MatchPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MatchPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchPlayer::IsInitialized() const {
  return true;
}

void MatchPlayer::Swap(MatchPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchPlayer::InternalSwap(MatchPlayer* other) {
  using std::swap;
  blacklist_uid_list_.InternalSwap(&other->blacklist_uid_list_);
  hide_and_seek_chosen_map_list_.InternalSwap(&other->hide_and_seek_chosen_map_list_);
  nickname_.Swap(&other->nickname_);
  swap(player_info_, other->player_info_);
  swap(uid_, other->uid_);
  swap(player_level_, other->player_level_);
  swap(world_level_, other->world_level_);
  swap(platform_type_, other->platform_type_);
  swap(is_only_match_with_ps_player_, other->is_only_match_with_ps_player_);
  swap(hide_and_seek_hider_count_, other->hide_and_seek_hider_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchPlayer::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchPlayer

// uint32 uid = 1;
void MatchPlayer::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 MatchPlayer::uid() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.uid)
  return uid_;
}
void MatchPlayer::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.uid)
}

// string nickname = 2;
void MatchPlayer::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MatchPlayer::nickname() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.nickname)
  return nickname_.GetNoArena();
}
void MatchPlayer::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.nickname)
}
#if LANG_CXX11
void MatchPlayer::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MatchPlayer.nickname)
}
#endif
void MatchPlayer::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MatchPlayer.nickname)
}
void MatchPlayer::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MatchPlayer.nickname)
}
::std::string* MatchPlayer::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.MatchPlayer.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MatchPlayer::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.MatchPlayer.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MatchPlayer::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.MatchPlayer.nickname)
}

// uint32 player_level = 3;
void MatchPlayer::clear_player_level() {
  player_level_ = 0u;
}
::google::protobuf::uint32 MatchPlayer::player_level() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.player_level)
  return player_level_;
}
void MatchPlayer::set_player_level(::google::protobuf::uint32 value) {
  
  player_level_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.player_level)
}

// uint32 world_level = 4;
void MatchPlayer::clear_world_level() {
  world_level_ = 0u;
}
::google::protobuf::uint32 MatchPlayer::world_level() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.world_level)
  return world_level_;
}
void MatchPlayer::set_world_level(::google::protobuf::uint32 value) {
  
  world_level_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.world_level)
}

// uint32 platform_type = 5;
void MatchPlayer::clear_platform_type() {
  platform_type_ = 0u;
}
::google::protobuf::uint32 MatchPlayer::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.platform_type)
  return platform_type_;
}
void MatchPlayer::set_platform_type(::google::protobuf::uint32 value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.platform_type)
}

// bool is_only_match_with_ps_player = 6;
void MatchPlayer::clear_is_only_match_with_ps_player() {
  is_only_match_with_ps_player_ = false;
}
bool MatchPlayer::is_only_match_with_ps_player() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.is_only_match_with_ps_player)
  return is_only_match_with_ps_player_;
}
void MatchPlayer::set_is_only_match_with_ps_player(bool value) {
  
  is_only_match_with_ps_player_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.is_only_match_with_ps_player)
}

// repeated uint32 blacklist_uid_list = 7;
int MatchPlayer::blacklist_uid_list_size() const {
  return blacklist_uid_list_.size();
}
void MatchPlayer::clear_blacklist_uid_list() {
  blacklist_uid_list_.Clear();
}
::google::protobuf::uint32 MatchPlayer::blacklist_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.blacklist_uid_list)
  return blacklist_uid_list_.Get(index);
}
void MatchPlayer::set_blacklist_uid_list(int index, ::google::protobuf::uint32 value) {
  blacklist_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.blacklist_uid_list)
}
void MatchPlayer::add_blacklist_uid_list(::google::protobuf::uint32 value) {
  blacklist_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MatchPlayer.blacklist_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MatchPlayer::blacklist_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.MatchPlayer.blacklist_uid_list)
  return blacklist_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MatchPlayer::mutable_blacklist_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MatchPlayer.blacklist_uid_list)
  return &blacklist_uid_list_;
}

// .proto.OnlinePlayerInfo player_info = 8;
bool MatchPlayer::has_player_info() const {
  return this != internal_default_instance() && player_info_ != NULL;
}
void MatchPlayer::clear_player_info() {
  if (GetArenaNoVirtual() == NULL && player_info_ != NULL) delete player_info_;
  player_info_ = NULL;
}
const ::proto::OnlinePlayerInfo& MatchPlayer::player_info() const {
  const ::proto::OnlinePlayerInfo* p = player_info_;
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.player_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OnlinePlayerInfo*>(
      &::proto::_OnlinePlayerInfo_default_instance_);
}
::proto::OnlinePlayerInfo* MatchPlayer::mutable_player_info() {
  
  if (player_info_ == NULL) {
    player_info_ = new ::proto::OnlinePlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.MatchPlayer.player_info)
  return player_info_;
}
::proto::OnlinePlayerInfo* MatchPlayer::release_player_info() {
  // @@protoc_insertion_point(field_release:proto.MatchPlayer.player_info)
  
  ::proto::OnlinePlayerInfo* temp = player_info_;
  player_info_ = NULL;
  return temp;
}
void MatchPlayer::set_allocated_player_info(::proto::OnlinePlayerInfo* player_info) {
  delete player_info_;
  player_info_ = player_info;
  if (player_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MatchPlayer.player_info)
}

// uint32 hide_and_seek_hider_count = 9;
void MatchPlayer::clear_hide_and_seek_hider_count() {
  hide_and_seek_hider_count_ = 0u;
}
::google::protobuf::uint32 MatchPlayer::hide_and_seek_hider_count() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.hide_and_seek_hider_count)
  return hide_and_seek_hider_count_;
}
void MatchPlayer::set_hide_and_seek_hider_count(::google::protobuf::uint32 value) {
  
  hide_and_seek_hider_count_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.hide_and_seek_hider_count)
}

// repeated uint32 hide_and_seek_chosen_map_list = 10;
int MatchPlayer::hide_and_seek_chosen_map_list_size() const {
  return hide_and_seek_chosen_map_list_.size();
}
void MatchPlayer::clear_hide_and_seek_chosen_map_list() {
  hide_and_seek_chosen_map_list_.Clear();
}
::google::protobuf::uint32 MatchPlayer::hide_and_seek_chosen_map_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayer.hide_and_seek_chosen_map_list)
  return hide_and_seek_chosen_map_list_.Get(index);
}
void MatchPlayer::set_hide_and_seek_chosen_map_list(int index, ::google::protobuf::uint32 value) {
  hide_and_seek_chosen_map_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MatchPlayer.hide_and_seek_chosen_map_list)
}
void MatchPlayer::add_hide_and_seek_chosen_map_list(::google::protobuf::uint32 value) {
  hide_and_seek_chosen_map_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MatchPlayer.hide_and_seek_chosen_map_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MatchPlayer::hide_and_seek_chosen_map_list() const {
  // @@protoc_insertion_point(field_list:proto.MatchPlayer.hide_and_seek_chosen_map_list)
  return hide_and_seek_chosen_map_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MatchPlayer::mutable_hide_and_seek_chosen_map_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MatchPlayer.hide_and_seek_chosen_map_list)
  return &hide_and_seek_chosen_map_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchUnit::kMatchPlayerListFieldNumber;
const int MatchUnit::kUnitIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchUnit::MatchUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MatchUnit)
}
MatchUnit::MatchUnit(const MatchUnit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      match_player_list_(from.match_player_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unit_id_ = from.unit_id_;
  // @@protoc_insertion_point(copy_constructor:proto.MatchUnit)
}

void MatchUnit::SharedCtor() {
  unit_id_ = 0u;
  _cached_size_ = 0;
}

MatchUnit::~MatchUnit() {
  // @@protoc_insertion_point(destructor:proto.MatchUnit)
  SharedDtor();
}

void MatchUnit::SharedDtor() {
}

void MatchUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchUnit::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchUnit& MatchUnit::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchUnit* MatchUnit::New(::google::protobuf::Arena* arena) const {
  MatchUnit* n = new MatchUnit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MatchUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_player_list_.Clear();
  unit_id_ = 0u;
  _internal_metadata_.Clear();
}

bool MatchUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MatchUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.MatchPlayer match_player_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_match_player_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unit_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MatchUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MatchUnit)
  return false;
#undef DO_
}

void MatchUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MatchUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.MatchPlayer match_player_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->match_player_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->match_player_list(static_cast<int>(i)), output);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unit_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MatchUnit)
}

::google::protobuf::uint8* MatchUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MatchUnit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.MatchPlayer match_player_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->match_player_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->match_player_list(static_cast<int>(i)), deterministic, target);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unit_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MatchUnit)
  return target;
}

size_t MatchUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MatchUnit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.MatchPlayer match_player_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->match_player_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->match_player_list(static_cast<int>(i)));
    }
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unit_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MatchUnit)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MatchUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MatchUnit)
    MergeFrom(*source);
  }
}

void MatchUnit::MergeFrom(const MatchUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MatchUnit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  match_player_list_.MergeFrom(from.match_player_list_);
  if (from.unit_id() != 0) {
    set_unit_id(from.unit_id());
  }
}

void MatchUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MatchUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchUnit::CopyFrom(const MatchUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MatchUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchUnit::IsInitialized() const {
  return true;
}

void MatchUnit::Swap(MatchUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchUnit::InternalSwap(MatchUnit* other) {
  using std::swap;
  match_player_list_.InternalSwap(&other->match_player_list_);
  swap(unit_id_, other->unit_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchUnit::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchUnit

// repeated .proto.MatchPlayer match_player_list = 1;
int MatchUnit::match_player_list_size() const {
  return match_player_list_.size();
}
void MatchUnit::clear_match_player_list() {
  match_player_list_.Clear();
}
const ::proto::MatchPlayer& MatchUnit::match_player_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MatchUnit.match_player_list)
  return match_player_list_.Get(index);
}
::proto::MatchPlayer* MatchUnit::mutable_match_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MatchUnit.match_player_list)
  return match_player_list_.Mutable(index);
}
::proto::MatchPlayer* MatchUnit::add_match_player_list() {
  // @@protoc_insertion_point(field_add:proto.MatchUnit.match_player_list)
  return match_player_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer >*
MatchUnit::mutable_match_player_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MatchUnit.match_player_list)
  return &match_player_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer >&
MatchUnit::match_player_list() const {
  // @@protoc_insertion_point(field_list:proto.MatchUnit.match_player_list)
  return match_player_list_;
}

// uint32 unit_id = 2;
void MatchUnit::clear_unit_id() {
  unit_id_ = 0u;
}
::google::protobuf::uint32 MatchUnit::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchUnit.unit_id)
  return unit_id_;
}
void MatchUnit::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchUnit.unit_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddMatchUnitReq::kMatchTypeFieldNumber;
const int AddMatchUnitReq::kMatchUnitFieldNumber;
const int AddMatchUnitReq::kExpectIdentityFieldNumber;
const int AddMatchUnitReq::kDungeonIdFieldNumber;
const int AddMatchUnitReq::kMpPlayIdFieldNumber;
const int AddMatchUnitReq::kMechanicusTagFieldNumber;
const int AddMatchUnitReq::kMatchIdFieldNumber;
const int AddMatchUnitReq::kMatchParamListFieldNumber;
const int AddMatchUnitReq::kGcgDuelExtraFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddMatchUnitReq::AddMatchUnitReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddMatchUnitReq)
}
AddMatchUnitReq::AddMatchUnitReq(const AddMatchUnitReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      match_param_list_(from.match_param_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_match_unit()) {
    match_unit_ = new ::proto::MatchUnit(*from.match_unit_);
  } else {
    match_unit_ = NULL;
  }
  ::memcpy(&match_type_, &from.match_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&match_id_) -
    reinterpret_cast<char*>(&match_type_)) + sizeof(match_id_));
  clear_has_detail();
  switch (from.detail_case()) {
    case kGcgDuelExtra: {
      mutable_gcg_duel_extra()->::proto::GCGDuelExtra::MergeFrom(from.gcg_duel_extra());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.AddMatchUnitReq)
}

void AddMatchUnitReq::SharedCtor() {
  ::memset(&match_unit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_id_) -
      reinterpret_cast<char*>(&match_unit_)) + sizeof(match_id_));
  clear_has_detail();
  _cached_size_ = 0;
}

AddMatchUnitReq::~AddMatchUnitReq() {
  // @@protoc_insertion_point(destructor:proto.AddMatchUnitReq)
  SharedDtor();
}

void AddMatchUnitReq::SharedDtor() {
  if (this != internal_default_instance()) delete match_unit_;
  if (has_detail()) {
    clear_detail();
  }
}

void AddMatchUnitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddMatchUnitReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddMatchUnitReq& AddMatchUnitReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddMatchUnitReq* AddMatchUnitReq::New(::google::protobuf::Arena* arena) const {
  AddMatchUnitReq* n = new AddMatchUnitReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddMatchUnitReq::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.AddMatchUnitReq)
  switch (detail_case()) {
    case kGcgDuelExtra: {
      delete detail_.gcg_duel_extra_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void AddMatchUnitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddMatchUnitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_param_list_.Clear();
  if (GetArenaNoVirtual() == NULL && match_unit_ != NULL) {
    delete match_unit_;
  }
  match_unit_ = NULL;
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_id_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(match_id_));
  clear_detail();
  _internal_metadata_.Clear();
}

bool AddMatchUnitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddMatchUnitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchType match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchUnit match_unit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_match_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchIdentity expect_identity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_expect_identity(static_cast< ::proto::MatchIdentity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dungeon_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp_play_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mechanicus_tag = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 match_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 match_param_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_match_param_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 122u, input, this->mutable_match_param_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GCGDuelExtra gcg_duel_extra = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gcg_duel_extra()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddMatchUnitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddMatchUnitReq)
  return false;
#undef DO_
}

void AddMatchUnitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddMatchUnitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->match_type(), output);
  }

  // .proto.MatchUnit match_unit = 2;
  if (this->has_match_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->match_unit_, output);
  }

  // .proto.MatchIdentity expect_identity = 3;
  if (this->expect_identity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->expect_identity(), output);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->dungeon_id(), output);
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->mp_play_id(), output);
  }

  // uint32 mechanicus_tag = 13;
  if (this->mechanicus_tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->mechanicus_tag(), output);
  }

  // uint32 match_id = 14;
  if (this->match_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->match_id(), output);
  }

  // repeated uint32 match_param_list = 15;
  if (this->match_param_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _match_param_list_cached_byte_size_));
  }
  for (int i = 0, n = this->match_param_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->match_param_list(i), output);
  }

  // .proto.GCGDuelExtra gcg_duel_extra = 21;
  if (has_gcg_duel_extra()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *detail_.gcg_duel_extra_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddMatchUnitReq)
}

::google::protobuf::uint8* AddMatchUnitReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddMatchUnitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->match_type(), target);
  }

  // .proto.MatchUnit match_unit = 2;
  if (this->has_match_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->match_unit_, deterministic, target);
  }

  // .proto.MatchIdentity expect_identity = 3;
  if (this->expect_identity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->expect_identity(), target);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->dungeon_id(), target);
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->mp_play_id(), target);
  }

  // uint32 mechanicus_tag = 13;
  if (this->mechanicus_tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->mechanicus_tag(), target);
  }

  // uint32 match_id = 14;
  if (this->match_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->match_id(), target);
  }

  // repeated uint32 match_param_list = 15;
  if (this->match_param_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _match_param_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->match_param_list_, target);
  }

  // .proto.GCGDuelExtra gcg_duel_extra = 21;
  if (has_gcg_duel_extra()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *detail_.gcg_duel_extra_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddMatchUnitReq)
  return target;
}

size_t AddMatchUnitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddMatchUnitReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 match_param_list = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->match_param_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _match_param_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.MatchUnit match_unit = 2;
  if (this->has_match_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->match_unit_);
  }

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // .proto.MatchIdentity expect_identity = 3;
  if (this->expect_identity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->expect_identity());
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_id());
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  // uint32 mechanicus_tag = 13;
  if (this->mechanicus_tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_tag());
  }

  // uint32 match_id = 14;
  if (this->match_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_id());
  }

  switch (detail_case()) {
    // .proto.GCGDuelExtra gcg_duel_extra = 21;
    case kGcgDuelExtra: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.gcg_duel_extra_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddMatchUnitReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddMatchUnitReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddMatchUnitReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddMatchUnitReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddMatchUnitReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddMatchUnitReq)
    MergeFrom(*source);
  }
}

void AddMatchUnitReq::MergeFrom(const AddMatchUnitReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddMatchUnitReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  match_param_list_.MergeFrom(from.match_param_list_);
  if (from.has_match_unit()) {
    mutable_match_unit()->::proto::MatchUnit::MergeFrom(from.match_unit());
  }
  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.expect_identity() != 0) {
    set_expect_identity(from.expect_identity());
  }
  if (from.dungeon_id() != 0) {
    set_dungeon_id(from.dungeon_id());
  }
  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
  if (from.mechanicus_tag() != 0) {
    set_mechanicus_tag(from.mechanicus_tag());
  }
  if (from.match_id() != 0) {
    set_match_id(from.match_id());
  }
  switch (from.detail_case()) {
    case kGcgDuelExtra: {
      mutable_gcg_duel_extra()->::proto::GCGDuelExtra::MergeFrom(from.gcg_duel_extra());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void AddMatchUnitReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddMatchUnitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddMatchUnitReq::CopyFrom(const AddMatchUnitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddMatchUnitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddMatchUnitReq::IsInitialized() const {
  return true;
}

void AddMatchUnitReq::Swap(AddMatchUnitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddMatchUnitReq::InternalSwap(AddMatchUnitReq* other) {
  using std::swap;
  match_param_list_.InternalSwap(&other->match_param_list_);
  swap(match_unit_, other->match_unit_);
  swap(match_type_, other->match_type_);
  swap(expect_identity_, other->expect_identity_);
  swap(dungeon_id_, other->dungeon_id_);
  swap(mp_play_id_, other->mp_play_id_);
  swap(mechanicus_tag_, other->mechanicus_tag_);
  swap(match_id_, other->match_id_);
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddMatchUnitReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddMatchUnitReq

// .proto.MatchType match_type = 1;
void AddMatchUnitReq::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType AddMatchUnitReq::match_type() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void AddMatchUnitReq::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.match_type)
}

// .proto.MatchUnit match_unit = 2;
bool AddMatchUnitReq::has_match_unit() const {
  return this != internal_default_instance() && match_unit_ != NULL;
}
void AddMatchUnitReq::clear_match_unit() {
  if (GetArenaNoVirtual() == NULL && match_unit_ != NULL) delete match_unit_;
  match_unit_ = NULL;
}
const ::proto::MatchUnit& AddMatchUnitReq::match_unit() const {
  const ::proto::MatchUnit* p = match_unit_;
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.match_unit)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchUnit*>(
      &::proto::_MatchUnit_default_instance_);
}
::proto::MatchUnit* AddMatchUnitReq::mutable_match_unit() {
  
  if (match_unit_ == NULL) {
    match_unit_ = new ::proto::MatchUnit;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddMatchUnitReq.match_unit)
  return match_unit_;
}
::proto::MatchUnit* AddMatchUnitReq::release_match_unit() {
  // @@protoc_insertion_point(field_release:proto.AddMatchUnitReq.match_unit)
  
  ::proto::MatchUnit* temp = match_unit_;
  match_unit_ = NULL;
  return temp;
}
void AddMatchUnitReq::set_allocated_match_unit(::proto::MatchUnit* match_unit) {
  delete match_unit_;
  match_unit_ = match_unit;
  if (match_unit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddMatchUnitReq.match_unit)
}

// .proto.MatchIdentity expect_identity = 3;
void AddMatchUnitReq::clear_expect_identity() {
  expect_identity_ = 0;
}
::proto::MatchIdentity AddMatchUnitReq::expect_identity() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.expect_identity)
  return static_cast< ::proto::MatchIdentity >(expect_identity_);
}
void AddMatchUnitReq::set_expect_identity(::proto::MatchIdentity value) {
  
  expect_identity_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.expect_identity)
}

// uint32 dungeon_id = 11;
void AddMatchUnitReq::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
::google::protobuf::uint32 AddMatchUnitReq::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.dungeon_id)
  return dungeon_id_;
}
void AddMatchUnitReq::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.dungeon_id)
}

// uint32 mp_play_id = 12;
void AddMatchUnitReq::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 AddMatchUnitReq::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.mp_play_id)
  return mp_play_id_;
}
void AddMatchUnitReq::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.mp_play_id)
}

// uint32 mechanicus_tag = 13;
void AddMatchUnitReq::clear_mechanicus_tag() {
  mechanicus_tag_ = 0u;
}
::google::protobuf::uint32 AddMatchUnitReq::mechanicus_tag() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.mechanicus_tag)
  return mechanicus_tag_;
}
void AddMatchUnitReq::set_mechanicus_tag(::google::protobuf::uint32 value) {
  
  mechanicus_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.mechanicus_tag)
}

// uint32 match_id = 14;
void AddMatchUnitReq::clear_match_id() {
  match_id_ = 0u;
}
::google::protobuf::uint32 AddMatchUnitReq::match_id() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.match_id)
  return match_id_;
}
void AddMatchUnitReq::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.match_id)
}

// repeated uint32 match_param_list = 15;
int AddMatchUnitReq::match_param_list_size() const {
  return match_param_list_.size();
}
void AddMatchUnitReq::clear_match_param_list() {
  match_param_list_.Clear();
}
::google::protobuf::uint32 AddMatchUnitReq::match_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.match_param_list)
  return match_param_list_.Get(index);
}
void AddMatchUnitReq::set_match_param_list(int index, ::google::protobuf::uint32 value) {
  match_param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitReq.match_param_list)
}
void AddMatchUnitReq::add_match_param_list(::google::protobuf::uint32 value) {
  match_param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AddMatchUnitReq.match_param_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AddMatchUnitReq::match_param_list() const {
  // @@protoc_insertion_point(field_list:proto.AddMatchUnitReq.match_param_list)
  return match_param_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AddMatchUnitReq::mutable_match_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AddMatchUnitReq.match_param_list)
  return &match_param_list_;
}

// .proto.GCGDuelExtra gcg_duel_extra = 21;
bool AddMatchUnitReq::has_gcg_duel_extra() const {
  return detail_case() == kGcgDuelExtra;
}
void AddMatchUnitReq::set_has_gcg_duel_extra() {
  _oneof_case_[0] = kGcgDuelExtra;
}
void AddMatchUnitReq::clear_gcg_duel_extra() {
  if (has_gcg_duel_extra()) {
    delete detail_.gcg_duel_extra_;
    clear_has_detail();
  }
}
 const ::proto::GCGDuelExtra& AddMatchUnitReq::gcg_duel_extra() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitReq.gcg_duel_extra)
  return has_gcg_duel_extra()
      ? *detail_.gcg_duel_extra_
      : ::proto::GCGDuelExtra::default_instance();
}
::proto::GCGDuelExtra* AddMatchUnitReq::mutable_gcg_duel_extra() {
  if (!has_gcg_duel_extra()) {
    clear_detail();
    set_has_gcg_duel_extra();
    detail_.gcg_duel_extra_ = new ::proto::GCGDuelExtra;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddMatchUnitReq.gcg_duel_extra)
  return detail_.gcg_duel_extra_;
}
::proto::GCGDuelExtra* AddMatchUnitReq::release_gcg_duel_extra() {
  // @@protoc_insertion_point(field_release:proto.AddMatchUnitReq.gcg_duel_extra)
  if (has_gcg_duel_extra()) {
    clear_has_detail();
    ::proto::GCGDuelExtra* temp = detail_.gcg_duel_extra_;
    detail_.gcg_duel_extra_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void AddMatchUnitReq::set_allocated_gcg_duel_extra(::proto::GCGDuelExtra* gcg_duel_extra) {
  clear_detail();
  if (gcg_duel_extra) {
    set_has_gcg_duel_extra();
    detail_.gcg_duel_extra_ = gcg_duel_extra;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddMatchUnitReq.gcg_duel_extra)
}

bool AddMatchUnitReq::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void AddMatchUnitReq::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
AddMatchUnitReq::DetailCase AddMatchUnitReq::detail_case() const {
  return AddMatchUnitReq::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddMatchUnitRsp::kRetcodeFieldNumber;
const int AddMatchUnitRsp::kMatchTypeFieldNumber;
const int AddMatchUnitRsp::kMatchUnitFieldNumber;
const int AddMatchUnitRsp::kDungeonIdFieldNumber;
const int AddMatchUnitRsp::kMpPlayIdFieldNumber;
const int AddMatchUnitRsp::kMechanicusTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddMatchUnitRsp::AddMatchUnitRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddMatchUnitRsp)
}
AddMatchUnitRsp::AddMatchUnitRsp(const AddMatchUnitRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_match_unit()) {
    match_unit_ = new ::proto::MatchUnit(*from.match_unit_);
  } else {
    match_unit_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&mp_play_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(mp_play_id_));
  // @@protoc_insertion_point(copy_constructor:proto.AddMatchUnitRsp)
}

void AddMatchUnitRsp::SharedCtor() {
  ::memset(&match_unit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_play_id_) -
      reinterpret_cast<char*>(&match_unit_)) + sizeof(mp_play_id_));
  _cached_size_ = 0;
}

AddMatchUnitRsp::~AddMatchUnitRsp() {
  // @@protoc_insertion_point(destructor:proto.AddMatchUnitRsp)
  SharedDtor();
}

void AddMatchUnitRsp::SharedDtor() {
  if (this != internal_default_instance()) delete match_unit_;
}

void AddMatchUnitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddMatchUnitRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddMatchUnitRsp& AddMatchUnitRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddMatchUnitRsp* AddMatchUnitRsp::New(::google::protobuf::Arena* arena) const {
  AddMatchUnitRsp* n = new AddMatchUnitRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddMatchUnitRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddMatchUnitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && match_unit_ != NULL) {
    delete match_unit_;
  }
  match_unit_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mp_play_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(mp_play_id_));
  _internal_metadata_.Clear();
}

bool AddMatchUnitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddMatchUnitRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchType match_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchUnit match_unit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_match_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dungeon_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp_play_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mechanicus_tag = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddMatchUnitRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddMatchUnitRsp)
  return false;
#undef DO_
}

void AddMatchUnitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddMatchUnitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.MatchType match_type = 2;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->match_type(), output);
  }

  // .proto.MatchUnit match_unit = 3;
  if (this->has_match_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->match_unit_, output);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->dungeon_id(), output);
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->mp_play_id(), output);
  }

  // uint32 mechanicus_tag = 13;
  if (this->mechanicus_tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->mechanicus_tag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddMatchUnitRsp)
}

::google::protobuf::uint8* AddMatchUnitRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddMatchUnitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.MatchType match_type = 2;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->match_type(), target);
  }

  // .proto.MatchUnit match_unit = 3;
  if (this->has_match_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->match_unit_, deterministic, target);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->dungeon_id(), target);
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->mp_play_id(), target);
  }

  // uint32 mechanicus_tag = 13;
  if (this->mechanicus_tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->mechanicus_tag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddMatchUnitRsp)
  return target;
}

size_t AddMatchUnitRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddMatchUnitRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MatchUnit match_unit = 3;
  if (this->has_match_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->match_unit_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.MatchType match_type = 2;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // uint32 mechanicus_tag = 13;
  if (this->mechanicus_tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_tag());
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_id());
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddMatchUnitRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddMatchUnitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const AddMatchUnitRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddMatchUnitRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddMatchUnitRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddMatchUnitRsp)
    MergeFrom(*source);
  }
}

void AddMatchUnitRsp::MergeFrom(const AddMatchUnitRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddMatchUnitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_match_unit()) {
    mutable_match_unit()->::proto::MatchUnit::MergeFrom(from.match_unit());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.mechanicus_tag() != 0) {
    set_mechanicus_tag(from.mechanicus_tag());
  }
  if (from.dungeon_id() != 0) {
    set_dungeon_id(from.dungeon_id());
  }
  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
}

void AddMatchUnitRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddMatchUnitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddMatchUnitRsp::CopyFrom(const AddMatchUnitRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddMatchUnitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddMatchUnitRsp::IsInitialized() const {
  return true;
}

void AddMatchUnitRsp::Swap(AddMatchUnitRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddMatchUnitRsp::InternalSwap(AddMatchUnitRsp* other) {
  using std::swap;
  swap(match_unit_, other->match_unit_);
  swap(retcode_, other->retcode_);
  swap(match_type_, other->match_type_);
  swap(mechanicus_tag_, other->mechanicus_tag_);
  swap(dungeon_id_, other->dungeon_id_);
  swap(mp_play_id_, other->mp_play_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddMatchUnitRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddMatchUnitRsp

// int32 retcode = 1;
void AddMatchUnitRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 AddMatchUnitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitRsp.retcode)
  return retcode_;
}
void AddMatchUnitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitRsp.retcode)
}

// .proto.MatchType match_type = 2;
void AddMatchUnitRsp::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType AddMatchUnitRsp::match_type() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitRsp.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void AddMatchUnitRsp::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitRsp.match_type)
}

// .proto.MatchUnit match_unit = 3;
bool AddMatchUnitRsp::has_match_unit() const {
  return this != internal_default_instance() && match_unit_ != NULL;
}
void AddMatchUnitRsp::clear_match_unit() {
  if (GetArenaNoVirtual() == NULL && match_unit_ != NULL) delete match_unit_;
  match_unit_ = NULL;
}
const ::proto::MatchUnit& AddMatchUnitRsp::match_unit() const {
  const ::proto::MatchUnit* p = match_unit_;
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitRsp.match_unit)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchUnit*>(
      &::proto::_MatchUnit_default_instance_);
}
::proto::MatchUnit* AddMatchUnitRsp::mutable_match_unit() {
  
  if (match_unit_ == NULL) {
    match_unit_ = new ::proto::MatchUnit;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddMatchUnitRsp.match_unit)
  return match_unit_;
}
::proto::MatchUnit* AddMatchUnitRsp::release_match_unit() {
  // @@protoc_insertion_point(field_release:proto.AddMatchUnitRsp.match_unit)
  
  ::proto::MatchUnit* temp = match_unit_;
  match_unit_ = NULL;
  return temp;
}
void AddMatchUnitRsp::set_allocated_match_unit(::proto::MatchUnit* match_unit) {
  delete match_unit_;
  match_unit_ = match_unit;
  if (match_unit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddMatchUnitRsp.match_unit)
}

// uint32 dungeon_id = 11;
void AddMatchUnitRsp::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
::google::protobuf::uint32 AddMatchUnitRsp::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitRsp.dungeon_id)
  return dungeon_id_;
}
void AddMatchUnitRsp::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitRsp.dungeon_id)
}

// uint32 mp_play_id = 12;
void AddMatchUnitRsp::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 AddMatchUnitRsp::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitRsp.mp_play_id)
  return mp_play_id_;
}
void AddMatchUnitRsp::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitRsp.mp_play_id)
}

// uint32 mechanicus_tag = 13;
void AddMatchUnitRsp::clear_mechanicus_tag() {
  mechanicus_tag_ = 0u;
}
::google::protobuf::uint32 AddMatchUnitRsp::mechanicus_tag() const {
  // @@protoc_insertion_point(field_get:proto.AddMatchUnitRsp.mechanicus_tag)
  return mechanicus_tag_;
}
void AddMatchUnitRsp::set_mechanicus_tag(::google::protobuf::uint32 value) {
  
  mechanicus_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMatchUnitRsp.mechanicus_tag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchStartNotify::kMatchTypeFieldNumber;
const int MatchStartNotify::kMatchBeginTimeFieldNumber;
const int MatchStartNotify::kEstimateMatchCostTimeFieldNumber;
const int MatchStartNotify::kIsRematchFieldNumber;
const int MatchStartNotify::kDungeonIdFieldNumber;
const int MatchStartNotify::kMpPlayIdFieldNumber;
const int MatchStartNotify::kMechanicusTagFieldNumber;
const int MatchStartNotify::kMatchIdFieldNumber;
const int MatchStartNotify::kMatchParamListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchStartNotify::MatchStartNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MatchStartNotify)
}
MatchStartNotify::MatchStartNotify(const MatchStartNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      match_param_list_(from.match_param_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_type_, &from.match_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&match_id_) -
    reinterpret_cast<char*>(&match_type_)) + sizeof(match_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MatchStartNotify)
}

void MatchStartNotify::SharedCtor() {
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_id_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(match_id_));
  _cached_size_ = 0;
}

MatchStartNotify::~MatchStartNotify() {
  // @@protoc_insertion_point(destructor:proto.MatchStartNotify)
  SharedDtor();
}

void MatchStartNotify::SharedDtor() {
}

void MatchStartNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchStartNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchStartNotify& MatchStartNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchStartNotify* MatchStartNotify::New(::google::protobuf::Arena* arena) const {
  MatchStartNotify* n = new MatchStartNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchStartNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MatchStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_param_list_.Clear();
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_id_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(match_id_));
  _internal_metadata_.Clear();
}

bool MatchStartNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MatchStartNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchType match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 match_begin_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_begin_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 estimate_match_cost_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &estimate_match_cost_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_rematch = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_rematch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dungeon_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp_play_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mechanicus_tag = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 match_id = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 match_param_list = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_match_param_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 122u, input, this->mutable_match_param_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MatchStartNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MatchStartNotify)
  return false;
#undef DO_
}

void MatchStartNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MatchStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->match_type(), output);
  }

  // uint32 match_begin_time = 2;
  if (this->match_begin_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->match_begin_time(), output);
  }

  // uint32 estimate_match_cost_time = 3;
  if (this->estimate_match_cost_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->estimate_match_cost_time(), output);
  }

  // bool is_rematch = 4;
  if (this->is_rematch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_rematch(), output);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->dungeon_id(), output);
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->mp_play_id(), output);
  }

  // uint32 mechanicus_tag = 13;
  if (this->mechanicus_tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->mechanicus_tag(), output);
  }

  // uint32 match_id = 14;
  if (this->match_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->match_id(), output);
  }

  // repeated uint32 match_param_list = 15;
  if (this->match_param_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(15, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _match_param_list_cached_byte_size_));
  }
  for (int i = 0, n = this->match_param_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->match_param_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MatchStartNotify)
}

::google::protobuf::uint8* MatchStartNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MatchStartNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->match_type(), target);
  }

  // uint32 match_begin_time = 2;
  if (this->match_begin_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->match_begin_time(), target);
  }

  // uint32 estimate_match_cost_time = 3;
  if (this->estimate_match_cost_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->estimate_match_cost_time(), target);
  }

  // bool is_rematch = 4;
  if (this->is_rematch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_rematch(), target);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->dungeon_id(), target);
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->mp_play_id(), target);
  }

  // uint32 mechanicus_tag = 13;
  if (this->mechanicus_tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->mechanicus_tag(), target);
  }

  // uint32 match_id = 14;
  if (this->match_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->match_id(), target);
  }

  // repeated uint32 match_param_list = 15;
  if (this->match_param_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      15,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _match_param_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->match_param_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MatchStartNotify)
  return target;
}

size_t MatchStartNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MatchStartNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 match_param_list = 15;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->match_param_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _match_param_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // uint32 match_begin_time = 2;
  if (this->match_begin_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_begin_time());
  }

  // uint32 estimate_match_cost_time = 3;
  if (this->estimate_match_cost_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->estimate_match_cost_time());
  }

  // bool is_rematch = 4;
  if (this->is_rematch() != 0) {
    total_size += 1 + 1;
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_id());
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  // uint32 mechanicus_tag = 13;
  if (this->mechanicus_tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_tag());
  }

  // uint32 match_id = 14;
  if (this->match_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchStartNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MatchStartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchStartNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchStartNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MatchStartNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MatchStartNotify)
    MergeFrom(*source);
  }
}

void MatchStartNotify::MergeFrom(const MatchStartNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MatchStartNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  match_param_list_.MergeFrom(from.match_param_list_);
  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.match_begin_time() != 0) {
    set_match_begin_time(from.match_begin_time());
  }
  if (from.estimate_match_cost_time() != 0) {
    set_estimate_match_cost_time(from.estimate_match_cost_time());
  }
  if (from.is_rematch() != 0) {
    set_is_rematch(from.is_rematch());
  }
  if (from.dungeon_id() != 0) {
    set_dungeon_id(from.dungeon_id());
  }
  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
  if (from.mechanicus_tag() != 0) {
    set_mechanicus_tag(from.mechanicus_tag());
  }
  if (from.match_id() != 0) {
    set_match_id(from.match_id());
  }
}

void MatchStartNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MatchStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchStartNotify::CopyFrom(const MatchStartNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MatchStartNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchStartNotify::IsInitialized() const {
  return true;
}

void MatchStartNotify::Swap(MatchStartNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchStartNotify::InternalSwap(MatchStartNotify* other) {
  using std::swap;
  match_param_list_.InternalSwap(&other->match_param_list_);
  swap(match_type_, other->match_type_);
  swap(match_begin_time_, other->match_begin_time_);
  swap(estimate_match_cost_time_, other->estimate_match_cost_time_);
  swap(is_rematch_, other->is_rematch_);
  swap(dungeon_id_, other->dungeon_id_);
  swap(mp_play_id_, other->mp_play_id_);
  swap(mechanicus_tag_, other->mechanicus_tag_);
  swap(match_id_, other->match_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchStartNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchStartNotify

// .proto.MatchType match_type = 1;
void MatchStartNotify::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType MatchStartNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void MatchStartNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.match_type)
}

// uint32 match_begin_time = 2;
void MatchStartNotify::clear_match_begin_time() {
  match_begin_time_ = 0u;
}
::google::protobuf::uint32 MatchStartNotify::match_begin_time() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.match_begin_time)
  return match_begin_time_;
}
void MatchStartNotify::set_match_begin_time(::google::protobuf::uint32 value) {
  
  match_begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.match_begin_time)
}

// uint32 estimate_match_cost_time = 3;
void MatchStartNotify::clear_estimate_match_cost_time() {
  estimate_match_cost_time_ = 0u;
}
::google::protobuf::uint32 MatchStartNotify::estimate_match_cost_time() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.estimate_match_cost_time)
  return estimate_match_cost_time_;
}
void MatchStartNotify::set_estimate_match_cost_time(::google::protobuf::uint32 value) {
  
  estimate_match_cost_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.estimate_match_cost_time)
}

// bool is_rematch = 4;
void MatchStartNotify::clear_is_rematch() {
  is_rematch_ = false;
}
bool MatchStartNotify::is_rematch() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.is_rematch)
  return is_rematch_;
}
void MatchStartNotify::set_is_rematch(bool value) {
  
  is_rematch_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.is_rematch)
}

// uint32 dungeon_id = 11;
void MatchStartNotify::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
::google::protobuf::uint32 MatchStartNotify::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.dungeon_id)
  return dungeon_id_;
}
void MatchStartNotify::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.dungeon_id)
}

// uint32 mp_play_id = 12;
void MatchStartNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 MatchStartNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.mp_play_id)
  return mp_play_id_;
}
void MatchStartNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.mp_play_id)
}

// uint32 mechanicus_tag = 13;
void MatchStartNotify::clear_mechanicus_tag() {
  mechanicus_tag_ = 0u;
}
::google::protobuf::uint32 MatchStartNotify::mechanicus_tag() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.mechanicus_tag)
  return mechanicus_tag_;
}
void MatchStartNotify::set_mechanicus_tag(::google::protobuf::uint32 value) {
  
  mechanicus_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.mechanicus_tag)
}

// uint32 match_id = 14;
void MatchStartNotify::clear_match_id() {
  match_id_ = 0u;
}
::google::protobuf::uint32 MatchStartNotify::match_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.match_id)
  return match_id_;
}
void MatchStartNotify::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.match_id)
}

// repeated uint32 match_param_list = 15;
int MatchStartNotify::match_param_list_size() const {
  return match_param_list_.size();
}
void MatchStartNotify::clear_match_param_list() {
  match_param_list_.Clear();
}
::google::protobuf::uint32 MatchStartNotify::match_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MatchStartNotify.match_param_list)
  return match_param_list_.Get(index);
}
void MatchStartNotify::set_match_param_list(int index, ::google::protobuf::uint32 value) {
  match_param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MatchStartNotify.match_param_list)
}
void MatchStartNotify::add_match_param_list(::google::protobuf::uint32 value) {
  match_param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MatchStartNotify.match_param_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MatchStartNotify::match_param_list() const {
  // @@protoc_insertion_point(field_list:proto.MatchStartNotify.match_param_list)
  return match_param_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MatchStartNotify::mutable_match_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MatchStartNotify.match_param_list)
  return &match_param_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveMatchUnitReq::kMatchTypeFieldNumber;
const int RemoveMatchUnitReq::kUnitIdFieldNumber;
const int RemoveMatchUnitReq::kOpTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveMatchUnitReq::RemoveMatchUnitReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RemoveMatchUnitReq)
}
RemoveMatchUnitReq::RemoveMatchUnitReq(const RemoveMatchUnitReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_type_, &from.match_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_type_) -
    reinterpret_cast<char*>(&match_type_)) + sizeof(op_type_));
  // @@protoc_insertion_point(copy_constructor:proto.RemoveMatchUnitReq)
}

void RemoveMatchUnitReq::SharedCtor() {
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(op_type_));
  _cached_size_ = 0;
}

RemoveMatchUnitReq::~RemoveMatchUnitReq() {
  // @@protoc_insertion_point(destructor:proto.RemoveMatchUnitReq)
  SharedDtor();
}

void RemoveMatchUnitReq::SharedDtor() {
}

void RemoveMatchUnitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveMatchUnitReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveMatchUnitReq& RemoveMatchUnitReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoveMatchUnitReq* RemoveMatchUnitReq::New(::google::protobuf::Arena* arena) const {
  RemoveMatchUnitReq* n = new RemoveMatchUnitReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveMatchUnitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RemoveMatchUnitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(op_type_));
  _internal_metadata_.Clear();
}

bool RemoveMatchUnitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RemoveMatchUnitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchType match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unit_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchUnitRemoveOpType op_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::MatchUnitRemoveOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RemoveMatchUnitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RemoveMatchUnitReq)
  return false;
#undef DO_
}

void RemoveMatchUnitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RemoveMatchUnitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->match_type(), output);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unit_id(), output);
  }

  // .proto.MatchUnitRemoveOpType op_type = 3;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->op_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RemoveMatchUnitReq)
}

::google::protobuf::uint8* RemoveMatchUnitReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RemoveMatchUnitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->match_type(), target);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unit_id(), target);
  }

  // .proto.MatchUnitRemoveOpType op_type = 3;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->op_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RemoveMatchUnitReq)
  return target;
}

size_t RemoveMatchUnitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RemoveMatchUnitReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unit_id());
  }

  // .proto.MatchUnitRemoveOpType op_type = 3;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveMatchUnitReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RemoveMatchUnitReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveMatchUnitReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveMatchUnitReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RemoveMatchUnitReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RemoveMatchUnitReq)
    MergeFrom(*source);
  }
}

void RemoveMatchUnitReq::MergeFrom(const RemoveMatchUnitReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RemoveMatchUnitReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.unit_id() != 0) {
    set_unit_id(from.unit_id());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void RemoveMatchUnitReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RemoveMatchUnitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveMatchUnitReq::CopyFrom(const RemoveMatchUnitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RemoveMatchUnitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveMatchUnitReq::IsInitialized() const {
  return true;
}

void RemoveMatchUnitReq::Swap(RemoveMatchUnitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveMatchUnitReq::InternalSwap(RemoveMatchUnitReq* other) {
  using std::swap;
  swap(match_type_, other->match_type_);
  swap(unit_id_, other->unit_id_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveMatchUnitReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveMatchUnitReq

// .proto.MatchType match_type = 1;
void RemoveMatchUnitReq::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType RemoveMatchUnitReq::match_type() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitReq.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void RemoveMatchUnitReq::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitReq.match_type)
}

// uint32 unit_id = 2;
void RemoveMatchUnitReq::clear_unit_id() {
  unit_id_ = 0u;
}
::google::protobuf::uint32 RemoveMatchUnitReq::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitReq.unit_id)
  return unit_id_;
}
void RemoveMatchUnitReq::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitReq.unit_id)
}

// .proto.MatchUnitRemoveOpType op_type = 3;
void RemoveMatchUnitReq::clear_op_type() {
  op_type_ = 0;
}
::proto::MatchUnitRemoveOpType RemoveMatchUnitReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitReq.op_type)
  return static_cast< ::proto::MatchUnitRemoveOpType >(op_type_);
}
void RemoveMatchUnitReq::set_op_type(::proto::MatchUnitRemoveOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitReq.op_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveMatchUnitRsp::kRetcodeFieldNumber;
const int RemoveMatchUnitRsp::kMatchTypeFieldNumber;
const int RemoveMatchUnitRsp::kUnitIdFieldNumber;
const int RemoveMatchUnitRsp::kOpTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveMatchUnitRsp::RemoveMatchUnitRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RemoveMatchUnitRsp)
}
RemoveMatchUnitRsp::RemoveMatchUnitRsp(const RemoveMatchUnitRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&op_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(op_type_));
  // @@protoc_insertion_point(copy_constructor:proto.RemoveMatchUnitRsp)
}

void RemoveMatchUnitRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(op_type_));
  _cached_size_ = 0;
}

RemoveMatchUnitRsp::~RemoveMatchUnitRsp() {
  // @@protoc_insertion_point(destructor:proto.RemoveMatchUnitRsp)
  SharedDtor();
}

void RemoveMatchUnitRsp::SharedDtor() {
}

void RemoveMatchUnitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveMatchUnitRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveMatchUnitRsp& RemoveMatchUnitRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoveMatchUnitRsp* RemoveMatchUnitRsp::New(::google::protobuf::Arena* arena) const {
  RemoveMatchUnitRsp* n = new RemoveMatchUnitRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveMatchUnitRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RemoveMatchUnitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&op_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(op_type_));
  _internal_metadata_.Clear();
}

bool RemoveMatchUnitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RemoveMatchUnitRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchType match_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unit_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchUnitRemoveOpType op_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op_type(static_cast< ::proto::MatchUnitRemoveOpType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RemoveMatchUnitRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RemoveMatchUnitRsp)
  return false;
#undef DO_
}

void RemoveMatchUnitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RemoveMatchUnitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.MatchType match_type = 2;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->match_type(), output);
  }

  // uint32 unit_id = 3;
  if (this->unit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unit_id(), output);
  }

  // .proto.MatchUnitRemoveOpType op_type = 4;
  if (this->op_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->op_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RemoveMatchUnitRsp)
}

::google::protobuf::uint8* RemoveMatchUnitRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RemoveMatchUnitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.MatchType match_type = 2;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->match_type(), target);
  }

  // uint32 unit_id = 3;
  if (this->unit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unit_id(), target);
  }

  // .proto.MatchUnitRemoveOpType op_type = 4;
  if (this->op_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->op_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RemoveMatchUnitRsp)
  return target;
}

size_t RemoveMatchUnitRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RemoveMatchUnitRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.MatchType match_type = 2;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // uint32 unit_id = 3;
  if (this->unit_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unit_id());
  }

  // .proto.MatchUnitRemoveOpType op_type = 4;
  if (this->op_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveMatchUnitRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RemoveMatchUnitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveMatchUnitRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveMatchUnitRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RemoveMatchUnitRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RemoveMatchUnitRsp)
    MergeFrom(*source);
  }
}

void RemoveMatchUnitRsp::MergeFrom(const RemoveMatchUnitRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RemoveMatchUnitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.unit_id() != 0) {
    set_unit_id(from.unit_id());
  }
  if (from.op_type() != 0) {
    set_op_type(from.op_type());
  }
}

void RemoveMatchUnitRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RemoveMatchUnitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveMatchUnitRsp::CopyFrom(const RemoveMatchUnitRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RemoveMatchUnitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveMatchUnitRsp::IsInitialized() const {
  return true;
}

void RemoveMatchUnitRsp::Swap(RemoveMatchUnitRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveMatchUnitRsp::InternalSwap(RemoveMatchUnitRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(match_type_, other->match_type_);
  swap(unit_id_, other->unit_id_);
  swap(op_type_, other->op_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveMatchUnitRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveMatchUnitRsp

// int32 retcode = 1;
void RemoveMatchUnitRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 RemoveMatchUnitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitRsp.retcode)
  return retcode_;
}
void RemoveMatchUnitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitRsp.retcode)
}

// .proto.MatchType match_type = 2;
void RemoveMatchUnitRsp::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType RemoveMatchUnitRsp::match_type() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitRsp.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void RemoveMatchUnitRsp::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitRsp.match_type)
}

// uint32 unit_id = 3;
void RemoveMatchUnitRsp::clear_unit_id() {
  unit_id_ = 0u;
}
::google::protobuf::uint32 RemoveMatchUnitRsp::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitRsp.unit_id)
  return unit_id_;
}
void RemoveMatchUnitRsp::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitRsp.unit_id)
}

// .proto.MatchUnitRemoveOpType op_type = 4;
void RemoveMatchUnitRsp::clear_op_type() {
  op_type_ = 0;
}
::proto::MatchUnitRemoveOpType RemoveMatchUnitRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.RemoveMatchUnitRsp.op_type)
  return static_cast< ::proto::MatchUnitRemoveOpType >(op_type_);
}
void RemoveMatchUnitRsp::set_op_type(::proto::MatchUnitRemoveOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveMatchUnitRsp.op_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchUnitRemovedNotify::kMatchTypeFieldNumber;
const int MatchUnitRemovedNotify::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchUnitRemovedNotify::MatchUnitRemovedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MatchUnitRemovedNotify)
}
MatchUnitRemovedNotify::MatchUnitRemovedNotify(const MatchUnitRemovedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_type_, &from.match_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&match_type_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:proto.MatchUnitRemovedNotify)
}

void MatchUnitRemovedNotify::SharedCtor() {
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(reason_));
  _cached_size_ = 0;
}

MatchUnitRemovedNotify::~MatchUnitRemovedNotify() {
  // @@protoc_insertion_point(destructor:proto.MatchUnitRemovedNotify)
  SharedDtor();
}

void MatchUnitRemovedNotify::SharedDtor() {
}

void MatchUnitRemovedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchUnitRemovedNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchUnitRemovedNotify& MatchUnitRemovedNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchUnitRemovedNotify* MatchUnitRemovedNotify::New(::google::protobuf::Arena* arena) const {
  MatchUnitRemovedNotify* n = new MatchUnitRemovedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchUnitRemovedNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MatchUnitRemovedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool MatchUnitRemovedNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MatchUnitRemovedNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchType match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchReason reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::MatchReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MatchUnitRemovedNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MatchUnitRemovedNotify)
  return false;
#undef DO_
}

void MatchUnitRemovedNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MatchUnitRemovedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->match_type(), output);
  }

  // .proto.MatchReason reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MatchUnitRemovedNotify)
}

::google::protobuf::uint8* MatchUnitRemovedNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MatchUnitRemovedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->match_type(), target);
  }

  // .proto.MatchReason reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MatchUnitRemovedNotify)
  return target;
}

size_t MatchUnitRemovedNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MatchUnitRemovedNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // .proto.MatchReason reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchUnitRemovedNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MatchUnitRemovedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchUnitRemovedNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchUnitRemovedNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MatchUnitRemovedNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MatchUnitRemovedNotify)
    MergeFrom(*source);
  }
}

void MatchUnitRemovedNotify::MergeFrom(const MatchUnitRemovedNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MatchUnitRemovedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void MatchUnitRemovedNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MatchUnitRemovedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchUnitRemovedNotify::CopyFrom(const MatchUnitRemovedNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MatchUnitRemovedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchUnitRemovedNotify::IsInitialized() const {
  return true;
}

void MatchUnitRemovedNotify::Swap(MatchUnitRemovedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchUnitRemovedNotify::InternalSwap(MatchUnitRemovedNotify* other) {
  using std::swap;
  swap(match_type_, other->match_type_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchUnitRemovedNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchUnitRemovedNotify

// .proto.MatchType match_type = 1;
void MatchUnitRemovedNotify::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType MatchUnitRemovedNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchUnitRemovedNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void MatchUnitRemovedNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchUnitRemovedNotify.match_type)
}

// .proto.MatchReason reason = 2;
void MatchUnitRemovedNotify::clear_reason() {
  reason_ = 0;
}
::proto::MatchReason MatchUnitRemovedNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.MatchUnitRemovedNotify.reason)
  return static_cast< ::proto::MatchReason >(reason_);
}
void MatchUnitRemovedNotify::set_reason(::proto::MatchReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchUnitRemovedNotify.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuestUnitMatchSuccNotify::kHostUnitIdFieldNumber;
const int GuestUnitMatchSuccNotify::kConfirmEndTimeFieldNumber;
const int GuestUnitMatchSuccNotify::kMatchTypeFieldNumber;
const int GuestUnitMatchSuccNotify::kDungeonIdFieldNumber;
const int GuestUnitMatchSuccNotify::kMpPlayIdFieldNumber;
const int GuestUnitMatchSuccNotify::kMechanicusTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuestUnitMatchSuccNotify::GuestUnitMatchSuccNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GuestUnitMatchSuccNotify)
}
GuestUnitMatchSuccNotify::GuestUnitMatchSuccNotify(const GuestUnitMatchSuccNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&host_unit_id_, &from.host_unit_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&mechanicus_tag_) -
    reinterpret_cast<char*>(&host_unit_id_)) + sizeof(mechanicus_tag_));
  // @@protoc_insertion_point(copy_constructor:proto.GuestUnitMatchSuccNotify)
}

void GuestUnitMatchSuccNotify::SharedCtor() {
  ::memset(&host_unit_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechanicus_tag_) -
      reinterpret_cast<char*>(&host_unit_id_)) + sizeof(mechanicus_tag_));
  _cached_size_ = 0;
}

GuestUnitMatchSuccNotify::~GuestUnitMatchSuccNotify() {
  // @@protoc_insertion_point(destructor:proto.GuestUnitMatchSuccNotify)
  SharedDtor();
}

void GuestUnitMatchSuccNotify::SharedDtor() {
}

void GuestUnitMatchSuccNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuestUnitMatchSuccNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuestUnitMatchSuccNotify& GuestUnitMatchSuccNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuestUnitMatchSuccNotify* GuestUnitMatchSuccNotify::New(::google::protobuf::Arena* arena) const {
  GuestUnitMatchSuccNotify* n = new GuestUnitMatchSuccNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuestUnitMatchSuccNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GuestUnitMatchSuccNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&host_unit_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechanicus_tag_) -
      reinterpret_cast<char*>(&host_unit_id_)) + sizeof(mechanicus_tag_));
  _internal_metadata_.Clear();
}

bool GuestUnitMatchSuccNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GuestUnitMatchSuccNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 host_unit_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_unit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 confirm_end_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &confirm_end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 match_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dungeon_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp_play_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mechanicus_tag = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GuestUnitMatchSuccNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GuestUnitMatchSuccNotify)
  return false;
#undef DO_
}

void GuestUnitMatchSuccNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GuestUnitMatchSuccNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 host_unit_id = 1;
  if (this->host_unit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->host_unit_id(), output);
  }

  // uint32 confirm_end_time = 2;
  if (this->confirm_end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->confirm_end_time(), output);
  }

  // uint32 match_type = 3;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->match_type(), output);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->dungeon_id(), output);
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->mp_play_id(), output);
  }

  // uint32 mechanicus_tag = 13;
  if (this->mechanicus_tag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->mechanicus_tag(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GuestUnitMatchSuccNotify)
}

::google::protobuf::uint8* GuestUnitMatchSuccNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GuestUnitMatchSuccNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 host_unit_id = 1;
  if (this->host_unit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->host_unit_id(), target);
  }

  // uint32 confirm_end_time = 2;
  if (this->confirm_end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->confirm_end_time(), target);
  }

  // uint32 match_type = 3;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->match_type(), target);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->dungeon_id(), target);
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->mp_play_id(), target);
  }

  // uint32 mechanicus_tag = 13;
  if (this->mechanicus_tag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->mechanicus_tag(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GuestUnitMatchSuccNotify)
  return target;
}

size_t GuestUnitMatchSuccNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GuestUnitMatchSuccNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 host_unit_id = 1;
  if (this->host_unit_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->host_unit_id());
  }

  // uint32 confirm_end_time = 2;
  if (this->confirm_end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->confirm_end_time());
  }

  // uint32 match_type = 3;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_type());
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_id());
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  // uint32 mechanicus_tag = 13;
  if (this->mechanicus_tag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_tag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuestUnitMatchSuccNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GuestUnitMatchSuccNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuestUnitMatchSuccNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuestUnitMatchSuccNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GuestUnitMatchSuccNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GuestUnitMatchSuccNotify)
    MergeFrom(*source);
  }
}

void GuestUnitMatchSuccNotify::MergeFrom(const GuestUnitMatchSuccNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GuestUnitMatchSuccNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host_unit_id() != 0) {
    set_host_unit_id(from.host_unit_id());
  }
  if (from.confirm_end_time() != 0) {
    set_confirm_end_time(from.confirm_end_time());
  }
  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.dungeon_id() != 0) {
    set_dungeon_id(from.dungeon_id());
  }
  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
  if (from.mechanicus_tag() != 0) {
    set_mechanicus_tag(from.mechanicus_tag());
  }
}

void GuestUnitMatchSuccNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GuestUnitMatchSuccNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuestUnitMatchSuccNotify::CopyFrom(const GuestUnitMatchSuccNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GuestUnitMatchSuccNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuestUnitMatchSuccNotify::IsInitialized() const {
  return true;
}

void GuestUnitMatchSuccNotify::Swap(GuestUnitMatchSuccNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuestUnitMatchSuccNotify::InternalSwap(GuestUnitMatchSuccNotify* other) {
  using std::swap;
  swap(host_unit_id_, other->host_unit_id_);
  swap(confirm_end_time_, other->confirm_end_time_);
  swap(match_type_, other->match_type_);
  swap(dungeon_id_, other->dungeon_id_);
  swap(mp_play_id_, other->mp_play_id_);
  swap(mechanicus_tag_, other->mechanicus_tag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuestUnitMatchSuccNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuestUnitMatchSuccNotify

// uint32 host_unit_id = 1;
void GuestUnitMatchSuccNotify::clear_host_unit_id() {
  host_unit_id_ = 0u;
}
::google::protobuf::uint32 GuestUnitMatchSuccNotify::host_unit_id() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitMatchSuccNotify.host_unit_id)
  return host_unit_id_;
}
void GuestUnitMatchSuccNotify::set_host_unit_id(::google::protobuf::uint32 value) {
  
  host_unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitMatchSuccNotify.host_unit_id)
}

// uint32 confirm_end_time = 2;
void GuestUnitMatchSuccNotify::clear_confirm_end_time() {
  confirm_end_time_ = 0u;
}
::google::protobuf::uint32 GuestUnitMatchSuccNotify::confirm_end_time() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitMatchSuccNotify.confirm_end_time)
  return confirm_end_time_;
}
void GuestUnitMatchSuccNotify::set_confirm_end_time(::google::protobuf::uint32 value) {
  
  confirm_end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitMatchSuccNotify.confirm_end_time)
}

// uint32 match_type = 3;
void GuestUnitMatchSuccNotify::clear_match_type() {
  match_type_ = 0u;
}
::google::protobuf::uint32 GuestUnitMatchSuccNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitMatchSuccNotify.match_type)
  return match_type_;
}
void GuestUnitMatchSuccNotify::set_match_type(::google::protobuf::uint32 value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitMatchSuccNotify.match_type)
}

// uint32 dungeon_id = 11;
void GuestUnitMatchSuccNotify::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
::google::protobuf::uint32 GuestUnitMatchSuccNotify::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitMatchSuccNotify.dungeon_id)
  return dungeon_id_;
}
void GuestUnitMatchSuccNotify::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitMatchSuccNotify.dungeon_id)
}

// uint32 mp_play_id = 12;
void GuestUnitMatchSuccNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 GuestUnitMatchSuccNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitMatchSuccNotify.mp_play_id)
  return mp_play_id_;
}
void GuestUnitMatchSuccNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitMatchSuccNotify.mp_play_id)
}

// uint32 mechanicus_tag = 13;
void GuestUnitMatchSuccNotify::clear_mechanicus_tag() {
  mechanicus_tag_ = 0u;
}
::google::protobuf::uint32 GuestUnitMatchSuccNotify::mechanicus_tag() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitMatchSuccNotify.mechanicus_tag)
  return mechanicus_tag_;
}
void GuestUnitMatchSuccNotify::set_mechanicus_tag(::google::protobuf::uint32 value) {
  
  mechanicus_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitMatchSuccNotify.mechanicus_tag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfirmGuestUnitReq::kMatchTypeFieldNumber;
const int ConfirmGuestUnitReq::kUnitIdFieldNumber;
const int ConfirmGuestUnitReq::kIsAgreedFieldNumber;
const int ConfirmGuestUnitReq::kMatchIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfirmGuestUnitReq::ConfirmGuestUnitReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ConfirmGuestUnitReq)
}
ConfirmGuestUnitReq::ConfirmGuestUnitReq(const ConfirmGuestUnitReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_type_, &from.match_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&match_id_) -
    reinterpret_cast<char*>(&match_type_)) + sizeof(match_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ConfirmGuestUnitReq)
}

void ConfirmGuestUnitReq::SharedCtor() {
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_id_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(match_id_));
  _cached_size_ = 0;
}

ConfirmGuestUnitReq::~ConfirmGuestUnitReq() {
  // @@protoc_insertion_point(destructor:proto.ConfirmGuestUnitReq)
  SharedDtor();
}

void ConfirmGuestUnitReq::SharedDtor() {
}

void ConfirmGuestUnitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfirmGuestUnitReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfirmGuestUnitReq& ConfirmGuestUnitReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfirmGuestUnitReq* ConfirmGuestUnitReq::New(::google::protobuf::Arena* arena) const {
  ConfirmGuestUnitReq* n = new ConfirmGuestUnitReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfirmGuestUnitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ConfirmGuestUnitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_id_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(match_id_));
  _internal_metadata_.Clear();
}

bool ConfirmGuestUnitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ConfirmGuestUnitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchType match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unit_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_agreed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_agreed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 match_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ConfirmGuestUnitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ConfirmGuestUnitReq)
  return false;
#undef DO_
}

void ConfirmGuestUnitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ConfirmGuestUnitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->match_type(), output);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unit_id(), output);
  }

  // bool is_agreed = 3;
  if (this->is_agreed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_agreed(), output);
  }

  // uint32 match_id = 4;
  if (this->match_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->match_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ConfirmGuestUnitReq)
}

::google::protobuf::uint8* ConfirmGuestUnitReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ConfirmGuestUnitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->match_type(), target);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unit_id(), target);
  }

  // bool is_agreed = 3;
  if (this->is_agreed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_agreed(), target);
  }

  // uint32 match_id = 4;
  if (this->match_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->match_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ConfirmGuestUnitReq)
  return target;
}

size_t ConfirmGuestUnitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ConfirmGuestUnitReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unit_id());
  }

  // bool is_agreed = 3;
  if (this->is_agreed() != 0) {
    total_size += 1 + 1;
  }

  // uint32 match_id = 4;
  if (this->match_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfirmGuestUnitReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ConfirmGuestUnitReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfirmGuestUnitReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfirmGuestUnitReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ConfirmGuestUnitReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ConfirmGuestUnitReq)
    MergeFrom(*source);
  }
}

void ConfirmGuestUnitReq::MergeFrom(const ConfirmGuestUnitReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ConfirmGuestUnitReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.unit_id() != 0) {
    set_unit_id(from.unit_id());
  }
  if (from.is_agreed() != 0) {
    set_is_agreed(from.is_agreed());
  }
  if (from.match_id() != 0) {
    set_match_id(from.match_id());
  }
}

void ConfirmGuestUnitReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ConfirmGuestUnitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfirmGuestUnitReq::CopyFrom(const ConfirmGuestUnitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ConfirmGuestUnitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfirmGuestUnitReq::IsInitialized() const {
  return true;
}

void ConfirmGuestUnitReq::Swap(ConfirmGuestUnitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfirmGuestUnitReq::InternalSwap(ConfirmGuestUnitReq* other) {
  using std::swap;
  swap(match_type_, other->match_type_);
  swap(unit_id_, other->unit_id_);
  swap(is_agreed_, other->is_agreed_);
  swap(match_id_, other->match_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfirmGuestUnitReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfirmGuestUnitReq

// .proto.MatchType match_type = 1;
void ConfirmGuestUnitReq::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType ConfirmGuestUnitReq::match_type() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitReq.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void ConfirmGuestUnitReq::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitReq.match_type)
}

// uint32 unit_id = 2;
void ConfirmGuestUnitReq::clear_unit_id() {
  unit_id_ = 0u;
}
::google::protobuf::uint32 ConfirmGuestUnitReq::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitReq.unit_id)
  return unit_id_;
}
void ConfirmGuestUnitReq::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitReq.unit_id)
}

// bool is_agreed = 3;
void ConfirmGuestUnitReq::clear_is_agreed() {
  is_agreed_ = false;
}
bool ConfirmGuestUnitReq::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitReq.is_agreed)
  return is_agreed_;
}
void ConfirmGuestUnitReq::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitReq.is_agreed)
}

// uint32 match_id = 4;
void ConfirmGuestUnitReq::clear_match_id() {
  match_id_ = 0u;
}
::google::protobuf::uint32 ConfirmGuestUnitReq::match_id() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitReq.match_id)
  return match_id_;
}
void ConfirmGuestUnitReq::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitReq.match_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfirmGuestUnitRsp::kRetcodeFieldNumber;
const int ConfirmGuestUnitRsp::kMatchTypeFieldNumber;
const int ConfirmGuestUnitRsp::kUnitIdFieldNumber;
const int ConfirmGuestUnitRsp::kIsAgreedFieldNumber;
const int ConfirmGuestUnitRsp::kMatchIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfirmGuestUnitRsp::ConfirmGuestUnitRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ConfirmGuestUnitRsp)
}
ConfirmGuestUnitRsp::ConfirmGuestUnitRsp(const ConfirmGuestUnitRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&match_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(match_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ConfirmGuestUnitRsp)
}

void ConfirmGuestUnitRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(match_id_));
  _cached_size_ = 0;
}

ConfirmGuestUnitRsp::~ConfirmGuestUnitRsp() {
  // @@protoc_insertion_point(destructor:proto.ConfirmGuestUnitRsp)
  SharedDtor();
}

void ConfirmGuestUnitRsp::SharedDtor() {
}

void ConfirmGuestUnitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfirmGuestUnitRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfirmGuestUnitRsp& ConfirmGuestUnitRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfirmGuestUnitRsp* ConfirmGuestUnitRsp::New(::google::protobuf::Arena* arena) const {
  ConfirmGuestUnitRsp* n = new ConfirmGuestUnitRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfirmGuestUnitRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ConfirmGuestUnitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(match_id_));
  _internal_metadata_.Clear();
}

bool ConfirmGuestUnitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ConfirmGuestUnitRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchType match_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unit_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_agreed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_agreed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 match_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ConfirmGuestUnitRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ConfirmGuestUnitRsp)
  return false;
#undef DO_
}

void ConfirmGuestUnitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ConfirmGuestUnitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.MatchType match_type = 2;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->match_type(), output);
  }

  // uint32 unit_id = 3;
  if (this->unit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->unit_id(), output);
  }

  // bool is_agreed = 4;
  if (this->is_agreed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_agreed(), output);
  }

  // uint32 match_id = 5;
  if (this->match_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->match_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ConfirmGuestUnitRsp)
}

::google::protobuf::uint8* ConfirmGuestUnitRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ConfirmGuestUnitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.MatchType match_type = 2;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->match_type(), target);
  }

  // uint32 unit_id = 3;
  if (this->unit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->unit_id(), target);
  }

  // bool is_agreed = 4;
  if (this->is_agreed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_agreed(), target);
  }

  // uint32 match_id = 5;
  if (this->match_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->match_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ConfirmGuestUnitRsp)
  return target;
}

size_t ConfirmGuestUnitRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ConfirmGuestUnitRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.MatchType match_type = 2;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // uint32 unit_id = 3;
  if (this->unit_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unit_id());
  }

  // bool is_agreed = 4;
  if (this->is_agreed() != 0) {
    total_size += 1 + 1;
  }

  // uint32 match_id = 5;
  if (this->match_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfirmGuestUnitRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ConfirmGuestUnitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfirmGuestUnitRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfirmGuestUnitRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ConfirmGuestUnitRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ConfirmGuestUnitRsp)
    MergeFrom(*source);
  }
}

void ConfirmGuestUnitRsp::MergeFrom(const ConfirmGuestUnitRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ConfirmGuestUnitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.unit_id() != 0) {
    set_unit_id(from.unit_id());
  }
  if (from.is_agreed() != 0) {
    set_is_agreed(from.is_agreed());
  }
  if (from.match_id() != 0) {
    set_match_id(from.match_id());
  }
}

void ConfirmGuestUnitRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ConfirmGuestUnitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfirmGuestUnitRsp::CopyFrom(const ConfirmGuestUnitRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ConfirmGuestUnitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfirmGuestUnitRsp::IsInitialized() const {
  return true;
}

void ConfirmGuestUnitRsp::Swap(ConfirmGuestUnitRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfirmGuestUnitRsp::InternalSwap(ConfirmGuestUnitRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(match_type_, other->match_type_);
  swap(unit_id_, other->unit_id_);
  swap(is_agreed_, other->is_agreed_);
  swap(match_id_, other->match_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfirmGuestUnitRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfirmGuestUnitRsp

// int32 retcode = 1;
void ConfirmGuestUnitRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ConfirmGuestUnitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitRsp.retcode)
  return retcode_;
}
void ConfirmGuestUnitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitRsp.retcode)
}

// .proto.MatchType match_type = 2;
void ConfirmGuestUnitRsp::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType ConfirmGuestUnitRsp::match_type() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitRsp.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void ConfirmGuestUnitRsp::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitRsp.match_type)
}

// uint32 unit_id = 3;
void ConfirmGuestUnitRsp::clear_unit_id() {
  unit_id_ = 0u;
}
::google::protobuf::uint32 ConfirmGuestUnitRsp::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitRsp.unit_id)
  return unit_id_;
}
void ConfirmGuestUnitRsp::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitRsp.unit_id)
}

// bool is_agreed = 4;
void ConfirmGuestUnitRsp::clear_is_agreed() {
  is_agreed_ = false;
}
bool ConfirmGuestUnitRsp::is_agreed() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitRsp.is_agreed)
  return is_agreed_;
}
void ConfirmGuestUnitRsp::set_is_agreed(bool value) {
  
  is_agreed_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitRsp.is_agreed)
}

// uint32 match_id = 5;
void ConfirmGuestUnitRsp::clear_match_id() {
  match_id_ = 0u;
}
::google::protobuf::uint32 ConfirmGuestUnitRsp::match_id() const {
  // @@protoc_insertion_point(field_get:proto.ConfirmGuestUnitRsp.match_id)
  return match_id_;
}
void ConfirmGuestUnitRsp::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ConfirmGuestUnitRsp.match_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchPlayerJoinNotify::kMatchTypeFieldNumber;
const int MatchPlayerJoinNotify::kUnitIdFieldNumber;
const int MatchPlayerJoinNotify::kMatchPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchPlayerJoinNotify::MatchPlayerJoinNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MatchPlayerJoinNotify)
}
MatchPlayerJoinNotify::MatchPlayerJoinNotify(const MatchPlayerJoinNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_match_player()) {
    match_player_ = new ::proto::MatchPlayer(*from.match_player_);
  } else {
    match_player_ = NULL;
  }
  ::memcpy(&match_type_, &from.match_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&unit_id_) -
    reinterpret_cast<char*>(&match_type_)) + sizeof(unit_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MatchPlayerJoinNotify)
}

void MatchPlayerJoinNotify::SharedCtor() {
  ::memset(&match_player_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_id_) -
      reinterpret_cast<char*>(&match_player_)) + sizeof(unit_id_));
  _cached_size_ = 0;
}

MatchPlayerJoinNotify::~MatchPlayerJoinNotify() {
  // @@protoc_insertion_point(destructor:proto.MatchPlayerJoinNotify)
  SharedDtor();
}

void MatchPlayerJoinNotify::SharedDtor() {
  if (this != internal_default_instance()) delete match_player_;
}

void MatchPlayerJoinNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchPlayerJoinNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchPlayerJoinNotify& MatchPlayerJoinNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchPlayerJoinNotify* MatchPlayerJoinNotify::New(::google::protobuf::Arena* arena) const {
  MatchPlayerJoinNotify* n = new MatchPlayerJoinNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchPlayerJoinNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MatchPlayerJoinNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && match_player_ != NULL) {
    delete match_player_;
  }
  match_player_ = NULL;
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_id_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(unit_id_));
  _internal_metadata_.Clear();
}

bool MatchPlayerJoinNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MatchPlayerJoinNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchType match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unit_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchPlayer match_player = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_match_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MatchPlayerJoinNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MatchPlayerJoinNotify)
  return false;
#undef DO_
}

void MatchPlayerJoinNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MatchPlayerJoinNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->match_type(), output);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unit_id(), output);
  }

  // .proto.MatchPlayer match_player = 3;
  if (this->has_match_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->match_player_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MatchPlayerJoinNotify)
}

::google::protobuf::uint8* MatchPlayerJoinNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MatchPlayerJoinNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->match_type(), target);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unit_id(), target);
  }

  // .proto.MatchPlayer match_player = 3;
  if (this->has_match_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->match_player_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MatchPlayerJoinNotify)
  return target;
}

size_t MatchPlayerJoinNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MatchPlayerJoinNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MatchPlayer match_player = 3;
  if (this->has_match_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->match_player_);
  }

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unit_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchPlayerJoinNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MatchPlayerJoinNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchPlayerJoinNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchPlayerJoinNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MatchPlayerJoinNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MatchPlayerJoinNotify)
    MergeFrom(*source);
  }
}

void MatchPlayerJoinNotify::MergeFrom(const MatchPlayerJoinNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MatchPlayerJoinNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_match_player()) {
    mutable_match_player()->::proto::MatchPlayer::MergeFrom(from.match_player());
  }
  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.unit_id() != 0) {
    set_unit_id(from.unit_id());
  }
}

void MatchPlayerJoinNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MatchPlayerJoinNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchPlayerJoinNotify::CopyFrom(const MatchPlayerJoinNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MatchPlayerJoinNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchPlayerJoinNotify::IsInitialized() const {
  return true;
}

void MatchPlayerJoinNotify::Swap(MatchPlayerJoinNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchPlayerJoinNotify::InternalSwap(MatchPlayerJoinNotify* other) {
  using std::swap;
  swap(match_player_, other->match_player_);
  swap(match_type_, other->match_type_);
  swap(unit_id_, other->unit_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchPlayerJoinNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchPlayerJoinNotify

// .proto.MatchType match_type = 1;
void MatchPlayerJoinNotify::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType MatchPlayerJoinNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerJoinNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void MatchPlayerJoinNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerJoinNotify.match_type)
}

// uint32 unit_id = 2;
void MatchPlayerJoinNotify::clear_unit_id() {
  unit_id_ = 0u;
}
::google::protobuf::uint32 MatchPlayerJoinNotify::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerJoinNotify.unit_id)
  return unit_id_;
}
void MatchPlayerJoinNotify::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerJoinNotify.unit_id)
}

// .proto.MatchPlayer match_player = 3;
bool MatchPlayerJoinNotify::has_match_player() const {
  return this != internal_default_instance() && match_player_ != NULL;
}
void MatchPlayerJoinNotify::clear_match_player() {
  if (GetArenaNoVirtual() == NULL && match_player_ != NULL) delete match_player_;
  match_player_ = NULL;
}
const ::proto::MatchPlayer& MatchPlayerJoinNotify::match_player() const {
  const ::proto::MatchPlayer* p = match_player_;
  // @@protoc_insertion_point(field_get:proto.MatchPlayerJoinNotify.match_player)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchPlayer*>(
      &::proto::_MatchPlayer_default_instance_);
}
::proto::MatchPlayer* MatchPlayerJoinNotify::mutable_match_player() {
  
  if (match_player_ == NULL) {
    match_player_ = new ::proto::MatchPlayer;
  }
  // @@protoc_insertion_point(field_mutable:proto.MatchPlayerJoinNotify.match_player)
  return match_player_;
}
::proto::MatchPlayer* MatchPlayerJoinNotify::release_match_player() {
  // @@protoc_insertion_point(field_release:proto.MatchPlayerJoinNotify.match_player)
  
  ::proto::MatchPlayer* temp = match_player_;
  match_player_ = NULL;
  return temp;
}
void MatchPlayerJoinNotify::set_allocated_match_player(::proto::MatchPlayer* match_player) {
  delete match_player_;
  match_player_ = match_player;
  if (match_player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MatchPlayerJoinNotify.match_player)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchPlayerQuitNotify::kMatchTypeFieldNumber;
const int MatchPlayerQuitNotify::kUnitIdFieldNumber;
const int MatchPlayerQuitNotify::kPlayerUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchPlayerQuitNotify::MatchPlayerQuitNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MatchPlayerQuitNotify)
}
MatchPlayerQuitNotify::MatchPlayerQuitNotify(const MatchPlayerQuitNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_type_, &from.match_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_uid_) -
    reinterpret_cast<char*>(&match_type_)) + sizeof(player_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.MatchPlayerQuitNotify)
}

void MatchPlayerQuitNotify::SharedCtor() {
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_uid_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(player_uid_));
  _cached_size_ = 0;
}

MatchPlayerQuitNotify::~MatchPlayerQuitNotify() {
  // @@protoc_insertion_point(destructor:proto.MatchPlayerQuitNotify)
  SharedDtor();
}

void MatchPlayerQuitNotify::SharedDtor() {
}

void MatchPlayerQuitNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchPlayerQuitNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchPlayerQuitNotify& MatchPlayerQuitNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchPlayerQuitNotify* MatchPlayerQuitNotify::New(::google::protobuf::Arena* arena) const {
  MatchPlayerQuitNotify* n = new MatchPlayerQuitNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchPlayerQuitNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MatchPlayerQuitNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_uid_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(player_uid_));
  _internal_metadata_.Clear();
}

bool MatchPlayerQuitNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MatchPlayerQuitNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchType match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unit_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 player_uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MatchPlayerQuitNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MatchPlayerQuitNotify)
  return false;
#undef DO_
}

void MatchPlayerQuitNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MatchPlayerQuitNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->match_type(), output);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unit_id(), output);
  }

  // uint32 player_uid = 3;
  if (this->player_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->player_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MatchPlayerQuitNotify)
}

::google::protobuf::uint8* MatchPlayerQuitNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MatchPlayerQuitNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->match_type(), target);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unit_id(), target);
  }

  // uint32 player_uid = 3;
  if (this->player_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->player_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MatchPlayerQuitNotify)
  return target;
}

size_t MatchPlayerQuitNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MatchPlayerQuitNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unit_id());
  }

  // uint32 player_uid = 3;
  if (this->player_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchPlayerQuitNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MatchPlayerQuitNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchPlayerQuitNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchPlayerQuitNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MatchPlayerQuitNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MatchPlayerQuitNotify)
    MergeFrom(*source);
  }
}

void MatchPlayerQuitNotify::MergeFrom(const MatchPlayerQuitNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MatchPlayerQuitNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.unit_id() != 0) {
    set_unit_id(from.unit_id());
  }
  if (from.player_uid() != 0) {
    set_player_uid(from.player_uid());
  }
}

void MatchPlayerQuitNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MatchPlayerQuitNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchPlayerQuitNotify::CopyFrom(const MatchPlayerQuitNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MatchPlayerQuitNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchPlayerQuitNotify::IsInitialized() const {
  return true;
}

void MatchPlayerQuitNotify::Swap(MatchPlayerQuitNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchPlayerQuitNotify::InternalSwap(MatchPlayerQuitNotify* other) {
  using std::swap;
  swap(match_type_, other->match_type_);
  swap(unit_id_, other->unit_id_);
  swap(player_uid_, other->player_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchPlayerQuitNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchPlayerQuitNotify

// .proto.MatchType match_type = 1;
void MatchPlayerQuitNotify::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType MatchPlayerQuitNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerQuitNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void MatchPlayerQuitNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerQuitNotify.match_type)
}

// uint32 unit_id = 2;
void MatchPlayerQuitNotify::clear_unit_id() {
  unit_id_ = 0u;
}
::google::protobuf::uint32 MatchPlayerQuitNotify::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerQuitNotify.unit_id)
  return unit_id_;
}
void MatchPlayerQuitNotify::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerQuitNotify.unit_id)
}

// uint32 player_uid = 3;
void MatchPlayerQuitNotify::clear_player_uid() {
  player_uid_ = 0u;
}
::google::protobuf::uint32 MatchPlayerQuitNotify::player_uid() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerQuitNotify.player_uid)
  return player_uid_;
}
void MatchPlayerQuitNotify::set_player_uid(::google::protobuf::uint32 value) {
  
  player_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerQuitNotify.player_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuestUnitAgreedResultNotify::kMatchTypeFieldNumber;
const int GuestUnitAgreedResultNotify::kHostUnitIdFieldNumber;
const int GuestUnitAgreedResultNotify::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuestUnitAgreedResultNotify::GuestUnitAgreedResultNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GuestUnitAgreedResultNotify)
}
GuestUnitAgreedResultNotify::GuestUnitAgreedResultNotify(const GuestUnitAgreedResultNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_type_, &from.match_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&match_type_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:proto.GuestUnitAgreedResultNotify)
}

void GuestUnitAgreedResultNotify::SharedCtor() {
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(reason_));
  _cached_size_ = 0;
}

GuestUnitAgreedResultNotify::~GuestUnitAgreedResultNotify() {
  // @@protoc_insertion_point(destructor:proto.GuestUnitAgreedResultNotify)
  SharedDtor();
}

void GuestUnitAgreedResultNotify::SharedDtor() {
}

void GuestUnitAgreedResultNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuestUnitAgreedResultNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GuestUnitAgreedResultNotify& GuestUnitAgreedResultNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GuestUnitAgreedResultNotify* GuestUnitAgreedResultNotify::New(::google::protobuf::Arena* arena) const {
  GuestUnitAgreedResultNotify* n = new GuestUnitAgreedResultNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GuestUnitAgreedResultNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GuestUnitAgreedResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool GuestUnitAgreedResultNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GuestUnitAgreedResultNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchType match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 host_unit_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &host_unit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GuestUnitAgreedResultNotify.Reason reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::GuestUnitAgreedResultNotify_Reason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GuestUnitAgreedResultNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GuestUnitAgreedResultNotify)
  return false;
#undef DO_
}

void GuestUnitAgreedResultNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GuestUnitAgreedResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->match_type(), output);
  }

  // uint32 host_unit_id = 2;
  if (this->host_unit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->host_unit_id(), output);
  }

  // .proto.GuestUnitAgreedResultNotify.Reason reason = 3;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GuestUnitAgreedResultNotify)
}

::google::protobuf::uint8* GuestUnitAgreedResultNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GuestUnitAgreedResultNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->match_type(), target);
  }

  // uint32 host_unit_id = 2;
  if (this->host_unit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->host_unit_id(), target);
  }

  // .proto.GuestUnitAgreedResultNotify.Reason reason = 3;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GuestUnitAgreedResultNotify)
  return target;
}

size_t GuestUnitAgreedResultNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GuestUnitAgreedResultNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // uint32 host_unit_id = 2;
  if (this->host_unit_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->host_unit_id());
  }

  // .proto.GuestUnitAgreedResultNotify.Reason reason = 3;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuestUnitAgreedResultNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GuestUnitAgreedResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GuestUnitAgreedResultNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GuestUnitAgreedResultNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GuestUnitAgreedResultNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GuestUnitAgreedResultNotify)
    MergeFrom(*source);
  }
}

void GuestUnitAgreedResultNotify::MergeFrom(const GuestUnitAgreedResultNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GuestUnitAgreedResultNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.host_unit_id() != 0) {
    set_host_unit_id(from.host_unit_id());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void GuestUnitAgreedResultNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GuestUnitAgreedResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuestUnitAgreedResultNotify::CopyFrom(const GuestUnitAgreedResultNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GuestUnitAgreedResultNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuestUnitAgreedResultNotify::IsInitialized() const {
  return true;
}

void GuestUnitAgreedResultNotify::Swap(GuestUnitAgreedResultNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuestUnitAgreedResultNotify::InternalSwap(GuestUnitAgreedResultNotify* other) {
  using std::swap;
  swap(match_type_, other->match_type_);
  swap(host_unit_id_, other->host_unit_id_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GuestUnitAgreedResultNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GuestUnitAgreedResultNotify

// .proto.MatchType match_type = 1;
void GuestUnitAgreedResultNotify::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType GuestUnitAgreedResultNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitAgreedResultNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void GuestUnitAgreedResultNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitAgreedResultNotify.match_type)
}

// uint32 host_unit_id = 2;
void GuestUnitAgreedResultNotify::clear_host_unit_id() {
  host_unit_id_ = 0u;
}
::google::protobuf::uint32 GuestUnitAgreedResultNotify::host_unit_id() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitAgreedResultNotify.host_unit_id)
  return host_unit_id_;
}
void GuestUnitAgreedResultNotify::set_host_unit_id(::google::protobuf::uint32 value) {
  
  host_unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitAgreedResultNotify.host_unit_id)
}

// .proto.GuestUnitAgreedResultNotify.Reason reason = 3;
void GuestUnitAgreedResultNotify::clear_reason() {
  reason_ = 0;
}
::proto::GuestUnitAgreedResultNotify_Reason GuestUnitAgreedResultNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.GuestUnitAgreedResultNotify.reason)
  return static_cast< ::proto::GuestUnitAgreedResultNotify_Reason >(reason_);
}
void GuestUnitAgreedResultNotify::set_reason(::proto::GuestUnitAgreedResultNotify_Reason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.GuestUnitAgreedResultNotify.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HostUnitMatchSuccNotify::kMatchTypeFieldNumber;
const int HostUnitMatchSuccNotify::kDungeonIdFieldNumber;
const int HostUnitMatchSuccNotify::kMpPlayIdFieldNumber;
const int HostUnitMatchSuccNotify::kMechanicusDifficultLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HostUnitMatchSuccNotify::HostUnitMatchSuccNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.HostUnitMatchSuccNotify)
}
HostUnitMatchSuccNotify::HostUnitMatchSuccNotify(const HostUnitMatchSuccNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_type_, &from.match_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&mechanicus_difficult_level_) -
    reinterpret_cast<char*>(&match_type_)) + sizeof(mechanicus_difficult_level_));
  // @@protoc_insertion_point(copy_constructor:proto.HostUnitMatchSuccNotify)
}

void HostUnitMatchSuccNotify::SharedCtor() {
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechanicus_difficult_level_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(mechanicus_difficult_level_));
  _cached_size_ = 0;
}

HostUnitMatchSuccNotify::~HostUnitMatchSuccNotify() {
  // @@protoc_insertion_point(destructor:proto.HostUnitMatchSuccNotify)
  SharedDtor();
}

void HostUnitMatchSuccNotify::SharedDtor() {
}

void HostUnitMatchSuccNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HostUnitMatchSuccNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HostUnitMatchSuccNotify& HostUnitMatchSuccNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

HostUnitMatchSuccNotify* HostUnitMatchSuccNotify::New(::google::protobuf::Arena* arena) const {
  HostUnitMatchSuccNotify* n = new HostUnitMatchSuccNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HostUnitMatchSuccNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.HostUnitMatchSuccNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mechanicus_difficult_level_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(mechanicus_difficult_level_));
  _internal_metadata_.Clear();
}

bool HostUnitMatchSuccNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.HostUnitMatchSuccNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dungeon_id = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mp_play_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mp_play_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 mechanicus_difficult_level = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mechanicus_difficult_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.HostUnitMatchSuccNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.HostUnitMatchSuccNotify)
  return false;
#undef DO_
}

void HostUnitMatchSuccNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.HostUnitMatchSuccNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->match_type(), output);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->dungeon_id(), output);
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->mp_play_id(), output);
  }

  // uint32 mechanicus_difficult_level = 13;
  if (this->mechanicus_difficult_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->mechanicus_difficult_level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.HostUnitMatchSuccNotify)
}

::google::protobuf::uint8* HostUnitMatchSuccNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.HostUnitMatchSuccNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->match_type(), target);
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->dungeon_id(), target);
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->mp_play_id(), target);
  }

  // uint32 mechanicus_difficult_level = 13;
  if (this->mechanicus_difficult_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->mechanicus_difficult_level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.HostUnitMatchSuccNotify)
  return target;
}

size_t HostUnitMatchSuccNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.HostUnitMatchSuccNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_type());
  }

  // uint32 dungeon_id = 11;
  if (this->dungeon_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_id());
  }

  // uint32 mp_play_id = 12;
  if (this->mp_play_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mp_play_id());
  }

  // uint32 mechanicus_difficult_level = 13;
  if (this->mechanicus_difficult_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mechanicus_difficult_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HostUnitMatchSuccNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.HostUnitMatchSuccNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const HostUnitMatchSuccNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HostUnitMatchSuccNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.HostUnitMatchSuccNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.HostUnitMatchSuccNotify)
    MergeFrom(*source);
  }
}

void HostUnitMatchSuccNotify::MergeFrom(const HostUnitMatchSuccNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.HostUnitMatchSuccNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.dungeon_id() != 0) {
    set_dungeon_id(from.dungeon_id());
  }
  if (from.mp_play_id() != 0) {
    set_mp_play_id(from.mp_play_id());
  }
  if (from.mechanicus_difficult_level() != 0) {
    set_mechanicus_difficult_level(from.mechanicus_difficult_level());
  }
}

void HostUnitMatchSuccNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.HostUnitMatchSuccNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HostUnitMatchSuccNotify::CopyFrom(const HostUnitMatchSuccNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.HostUnitMatchSuccNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HostUnitMatchSuccNotify::IsInitialized() const {
  return true;
}

void HostUnitMatchSuccNotify::Swap(HostUnitMatchSuccNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HostUnitMatchSuccNotify::InternalSwap(HostUnitMatchSuccNotify* other) {
  using std::swap;
  swap(match_type_, other->match_type_);
  swap(dungeon_id_, other->dungeon_id_);
  swap(mp_play_id_, other->mp_play_id_);
  swap(mechanicus_difficult_level_, other->mechanicus_difficult_level_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HostUnitMatchSuccNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HostUnitMatchSuccNotify

// uint32 match_type = 1;
void HostUnitMatchSuccNotify::clear_match_type() {
  match_type_ = 0u;
}
::google::protobuf::uint32 HostUnitMatchSuccNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.HostUnitMatchSuccNotify.match_type)
  return match_type_;
}
void HostUnitMatchSuccNotify::set_match_type(::google::protobuf::uint32 value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.HostUnitMatchSuccNotify.match_type)
}

// uint32 dungeon_id = 11;
void HostUnitMatchSuccNotify::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
::google::protobuf::uint32 HostUnitMatchSuccNotify::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.HostUnitMatchSuccNotify.dungeon_id)
  return dungeon_id_;
}
void HostUnitMatchSuccNotify::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HostUnitMatchSuccNotify.dungeon_id)
}

// uint32 mp_play_id = 12;
void HostUnitMatchSuccNotify::clear_mp_play_id() {
  mp_play_id_ = 0u;
}
::google::protobuf::uint32 HostUnitMatchSuccNotify::mp_play_id() const {
  // @@protoc_insertion_point(field_get:proto.HostUnitMatchSuccNotify.mp_play_id)
  return mp_play_id_;
}
void HostUnitMatchSuccNotify::set_mp_play_id(::google::protobuf::uint32 value) {
  
  mp_play_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HostUnitMatchSuccNotify.mp_play_id)
}

// uint32 mechanicus_difficult_level = 13;
void HostUnitMatchSuccNotify::clear_mechanicus_difficult_level() {
  mechanicus_difficult_level_ = 0u;
}
::google::protobuf::uint32 HostUnitMatchSuccNotify::mechanicus_difficult_level() const {
  // @@protoc_insertion_point(field_get:proto.HostUnitMatchSuccNotify.mechanicus_difficult_level)
  return mechanicus_difficult_level_;
}
void HostUnitMatchSuccNotify::set_mechanicus_difficult_level(::google::protobuf::uint32 value) {
  
  mechanicus_difficult_level_ = value;
  // @@protoc_insertion_point(field_set:proto.HostUnitMatchSuccNotify.mechanicus_difficult_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncMatchUnitReq::kMatchTypeFieldNumber;
const int SyncMatchUnitReq::kMatchUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncMatchUnitReq::SyncMatchUnitReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SyncMatchUnitReq)
}
SyncMatchUnitReq::SyncMatchUnitReq(const SyncMatchUnitReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_match_unit()) {
    match_unit_ = new ::proto::MatchUnit(*from.match_unit_);
  } else {
    match_unit_ = NULL;
  }
  match_type_ = from.match_type_;
  // @@protoc_insertion_point(copy_constructor:proto.SyncMatchUnitReq)
}

void SyncMatchUnitReq::SharedCtor() {
  ::memset(&match_unit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_type_) -
      reinterpret_cast<char*>(&match_unit_)) + sizeof(match_type_));
  _cached_size_ = 0;
}

SyncMatchUnitReq::~SyncMatchUnitReq() {
  // @@protoc_insertion_point(destructor:proto.SyncMatchUnitReq)
  SharedDtor();
}

void SyncMatchUnitReq::SharedDtor() {
  if (this != internal_default_instance()) delete match_unit_;
}

void SyncMatchUnitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncMatchUnitReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncMatchUnitReq& SyncMatchUnitReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SyncMatchUnitReq* SyncMatchUnitReq::New(::google::protobuf::Arena* arena) const {
  SyncMatchUnitReq* n = new SyncMatchUnitReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncMatchUnitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SyncMatchUnitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && match_unit_ != NULL) {
    delete match_unit_;
  }
  match_unit_ = NULL;
  match_type_ = 0;
  _internal_metadata_.Clear();
}

bool SyncMatchUnitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SyncMatchUnitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchType match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchUnit match_unit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_match_unit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SyncMatchUnitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SyncMatchUnitReq)
  return false;
#undef DO_
}

void SyncMatchUnitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SyncMatchUnitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->match_type(), output);
  }

  // .proto.MatchUnit match_unit = 2;
  if (this->has_match_unit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->match_unit_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SyncMatchUnitReq)
}

::google::protobuf::uint8* SyncMatchUnitReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SyncMatchUnitReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->match_type(), target);
  }

  // .proto.MatchUnit match_unit = 2;
  if (this->has_match_unit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->match_unit_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SyncMatchUnitReq)
  return target;
}

size_t SyncMatchUnitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SyncMatchUnitReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MatchUnit match_unit = 2;
  if (this->has_match_unit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->match_unit_);
  }

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncMatchUnitReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SyncMatchUnitReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncMatchUnitReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncMatchUnitReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SyncMatchUnitReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SyncMatchUnitReq)
    MergeFrom(*source);
  }
}

void SyncMatchUnitReq::MergeFrom(const SyncMatchUnitReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SyncMatchUnitReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_match_unit()) {
    mutable_match_unit()->::proto::MatchUnit::MergeFrom(from.match_unit());
  }
  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
}

void SyncMatchUnitReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SyncMatchUnitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncMatchUnitReq::CopyFrom(const SyncMatchUnitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SyncMatchUnitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncMatchUnitReq::IsInitialized() const {
  return true;
}

void SyncMatchUnitReq::Swap(SyncMatchUnitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncMatchUnitReq::InternalSwap(SyncMatchUnitReq* other) {
  using std::swap;
  swap(match_unit_, other->match_unit_);
  swap(match_type_, other->match_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncMatchUnitReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncMatchUnitReq

// .proto.MatchType match_type = 1;
void SyncMatchUnitReq::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType SyncMatchUnitReq::match_type() const {
  // @@protoc_insertion_point(field_get:proto.SyncMatchUnitReq.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void SyncMatchUnitReq::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SyncMatchUnitReq.match_type)
}

// .proto.MatchUnit match_unit = 2;
bool SyncMatchUnitReq::has_match_unit() const {
  return this != internal_default_instance() && match_unit_ != NULL;
}
void SyncMatchUnitReq::clear_match_unit() {
  if (GetArenaNoVirtual() == NULL && match_unit_ != NULL) delete match_unit_;
  match_unit_ = NULL;
}
const ::proto::MatchUnit& SyncMatchUnitReq::match_unit() const {
  const ::proto::MatchUnit* p = match_unit_;
  // @@protoc_insertion_point(field_get:proto.SyncMatchUnitReq.match_unit)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchUnit*>(
      &::proto::_MatchUnit_default_instance_);
}
::proto::MatchUnit* SyncMatchUnitReq::mutable_match_unit() {
  
  if (match_unit_ == NULL) {
    match_unit_ = new ::proto::MatchUnit;
  }
  // @@protoc_insertion_point(field_mutable:proto.SyncMatchUnitReq.match_unit)
  return match_unit_;
}
::proto::MatchUnit* SyncMatchUnitReq::release_match_unit() {
  // @@protoc_insertion_point(field_release:proto.SyncMatchUnitReq.match_unit)
  
  ::proto::MatchUnit* temp = match_unit_;
  match_unit_ = NULL;
  return temp;
}
void SyncMatchUnitReq::set_allocated_match_unit(::proto::MatchUnit* match_unit) {
  delete match_unit_;
  match_unit_ = match_unit;
  if (match_unit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SyncMatchUnitReq.match_unit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncMatchUnitRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncMatchUnitRsp::SyncMatchUnitRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SyncMatchUnitRsp)
}
SyncMatchUnitRsp::SyncMatchUnitRsp(const SyncMatchUnitRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.SyncMatchUnitRsp)
}

void SyncMatchUnitRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

SyncMatchUnitRsp::~SyncMatchUnitRsp() {
  // @@protoc_insertion_point(destructor:proto.SyncMatchUnitRsp)
  SharedDtor();
}

void SyncMatchUnitRsp::SharedDtor() {
}

void SyncMatchUnitRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncMatchUnitRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncMatchUnitRsp& SyncMatchUnitRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SyncMatchUnitRsp* SyncMatchUnitRsp::New(::google::protobuf::Arena* arena) const {
  SyncMatchUnitRsp* n = new SyncMatchUnitRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncMatchUnitRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SyncMatchUnitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool SyncMatchUnitRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SyncMatchUnitRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SyncMatchUnitRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SyncMatchUnitRsp)
  return false;
#undef DO_
}

void SyncMatchUnitRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SyncMatchUnitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SyncMatchUnitRsp)
}

::google::protobuf::uint8* SyncMatchUnitRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SyncMatchUnitRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SyncMatchUnitRsp)
  return target;
}

size_t SyncMatchUnitRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SyncMatchUnitRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncMatchUnitRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SyncMatchUnitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncMatchUnitRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncMatchUnitRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SyncMatchUnitRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SyncMatchUnitRsp)
    MergeFrom(*source);
  }
}

void SyncMatchUnitRsp::MergeFrom(const SyncMatchUnitRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SyncMatchUnitRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void SyncMatchUnitRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SyncMatchUnitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncMatchUnitRsp::CopyFrom(const SyncMatchUnitRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SyncMatchUnitRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncMatchUnitRsp::IsInitialized() const {
  return true;
}

void SyncMatchUnitRsp::Swap(SyncMatchUnitRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncMatchUnitRsp::InternalSwap(SyncMatchUnitRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncMatchUnitRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncMatchUnitRsp

// int32 retcode = 1;
void SyncMatchUnitRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SyncMatchUnitRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SyncMatchUnitRsp.retcode)
  return retcode_;
}
void SyncMatchUnitRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SyncMatchUnitRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

MatchserverWorkloadInfoNotify::MatchserverWorkloadInfoNotify_MatchUnitMapEntry::MatchserverWorkloadInfoNotify_MatchUnitMapEntry() {}
MatchserverWorkloadInfoNotify::MatchserverWorkloadInfoNotify_MatchUnitMapEntry::MatchserverWorkloadInfoNotify_MatchUnitMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata MatchserverWorkloadInfoNotify::MatchserverWorkloadInfoNotify_MatchUnitMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[17];
}
void MatchserverWorkloadInfoNotify::MatchserverWorkloadInfoNotify_MatchUnitMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void MatchserverWorkloadInfoNotify::MatchserverWorkloadInfoNotify_MatchUnitMapEntry::MergeFrom(const MatchserverWorkloadInfoNotify_MatchUnitMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchserverWorkloadInfoNotify::kMatchUnitNumFieldNumber;
const int MatchserverWorkloadInfoNotify::kMatchUnitMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchserverWorkloadInfoNotify::MatchserverWorkloadInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MatchserverWorkloadInfoNotify)
}
MatchserverWorkloadInfoNotify::MatchserverWorkloadInfoNotify(const MatchserverWorkloadInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  match_unit_map_.MergeFrom(from.match_unit_map_);
  match_unit_num_ = from.match_unit_num_;
  // @@protoc_insertion_point(copy_constructor:proto.MatchserverWorkloadInfoNotify)
}

void MatchserverWorkloadInfoNotify::SharedCtor() {
  match_unit_num_ = 0u;
  _cached_size_ = 0;
}

MatchserverWorkloadInfoNotify::~MatchserverWorkloadInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.MatchserverWorkloadInfoNotify)
  SharedDtor();
}

void MatchserverWorkloadInfoNotify::SharedDtor() {
}

void MatchserverWorkloadInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchserverWorkloadInfoNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchserverWorkloadInfoNotify& MatchserverWorkloadInfoNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchserverWorkloadInfoNotify* MatchserverWorkloadInfoNotify::New(::google::protobuf::Arena* arena) const {
  MatchserverWorkloadInfoNotify* n = new MatchserverWorkloadInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchserverWorkloadInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MatchserverWorkloadInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_unit_map_.Clear();
  match_unit_num_ = 0u;
  _internal_metadata_.Clear();
}

bool MatchserverWorkloadInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MatchserverWorkloadInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 match_unit_num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_unit_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> match_unit_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          MatchserverWorkloadInfoNotify_MatchUnitMapEntry::Parser< ::google::protobuf::internal::MapField<
              MatchserverWorkloadInfoNotify_MatchUnitMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&match_unit_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MatchserverWorkloadInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MatchserverWorkloadInfoNotify)
  return false;
#undef DO_
}

void MatchserverWorkloadInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MatchserverWorkloadInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 match_unit_num = 1;
  if (this->match_unit_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->match_unit_num(), output);
  }

  // map<uint32, uint32> match_unit_map = 2;
  if (!this->match_unit_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->match_unit_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->match_unit_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->match_unit_map().begin();
          it != this->match_unit_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<MatchserverWorkloadInfoNotify_MatchUnitMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(match_unit_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<MatchserverWorkloadInfoNotify_MatchUnitMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->match_unit_map().begin();
          it != this->match_unit_map().end(); ++it) {
        entry.reset(match_unit_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MatchserverWorkloadInfoNotify)
}

::google::protobuf::uint8* MatchserverWorkloadInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MatchserverWorkloadInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 match_unit_num = 1;
  if (this->match_unit_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->match_unit_num(), target);
  }

  // map<uint32, uint32> match_unit_map = 2;
  if (!this->match_unit_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->match_unit_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->match_unit_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->match_unit_map().begin();
          it != this->match_unit_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<MatchserverWorkloadInfoNotify_MatchUnitMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(match_unit_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<MatchserverWorkloadInfoNotify_MatchUnitMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->match_unit_map().begin();
          it != this->match_unit_map().end(); ++it) {
        entry.reset(match_unit_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MatchserverWorkloadInfoNotify)
  return target;
}

size_t MatchserverWorkloadInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MatchserverWorkloadInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> match_unit_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->match_unit_map_size());
  {
    ::google::protobuf::scoped_ptr<MatchserverWorkloadInfoNotify_MatchUnitMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->match_unit_map().begin();
        it != this->match_unit_map().end(); ++it) {
      entry.reset(match_unit_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 match_unit_num = 1;
  if (this->match_unit_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_unit_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchserverWorkloadInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MatchserverWorkloadInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchserverWorkloadInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchserverWorkloadInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MatchserverWorkloadInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MatchserverWorkloadInfoNotify)
    MergeFrom(*source);
  }
}

void MatchserverWorkloadInfoNotify::MergeFrom(const MatchserverWorkloadInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MatchserverWorkloadInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  match_unit_map_.MergeFrom(from.match_unit_map_);
  if (from.match_unit_num() != 0) {
    set_match_unit_num(from.match_unit_num());
  }
}

void MatchserverWorkloadInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MatchserverWorkloadInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchserverWorkloadInfoNotify::CopyFrom(const MatchserverWorkloadInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MatchserverWorkloadInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchserverWorkloadInfoNotify::IsInitialized() const {
  return true;
}

void MatchserverWorkloadInfoNotify::Swap(MatchserverWorkloadInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchserverWorkloadInfoNotify::InternalSwap(MatchserverWorkloadInfoNotify* other) {
  using std::swap;
  match_unit_map_.Swap(&other->match_unit_map_);
  swap(match_unit_num_, other->match_unit_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchserverWorkloadInfoNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchserverWorkloadInfoNotify

// uint32 match_unit_num = 1;
void MatchserverWorkloadInfoNotify::clear_match_unit_num() {
  match_unit_num_ = 0u;
}
::google::protobuf::uint32 MatchserverWorkloadInfoNotify::match_unit_num() const {
  // @@protoc_insertion_point(field_get:proto.MatchserverWorkloadInfoNotify.match_unit_num)
  return match_unit_num_;
}
void MatchserverWorkloadInfoNotify::set_match_unit_num(::google::protobuf::uint32 value) {
  
  match_unit_num_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchserverWorkloadInfoNotify.match_unit_num)
}

// map<uint32, uint32> match_unit_map = 2;
int MatchserverWorkloadInfoNotify::match_unit_map_size() const {
  return match_unit_map_.size();
}
void MatchserverWorkloadInfoNotify::clear_match_unit_map() {
  match_unit_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
MatchserverWorkloadInfoNotify::match_unit_map() const {
  // @@protoc_insertion_point(field_map:proto.MatchserverWorkloadInfoNotify.match_unit_map)
  return match_unit_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
MatchserverWorkloadInfoNotify::mutable_match_unit_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.MatchserverWorkloadInfoNotify.match_unit_map)
  return match_unit_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchPlayerUpdateNotify::kMatchTypeFieldNumber;
const int MatchPlayerUpdateNotify::kUnitIdFieldNumber;
const int MatchPlayerUpdateNotify::kMatchPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchPlayerUpdateNotify::MatchPlayerUpdateNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MatchPlayerUpdateNotify)
}
MatchPlayerUpdateNotify::MatchPlayerUpdateNotify(const MatchPlayerUpdateNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_match_player()) {
    match_player_ = new ::proto::MatchPlayer(*from.match_player_);
  } else {
    match_player_ = NULL;
  }
  ::memcpy(&match_type_, &from.match_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&unit_id_) -
    reinterpret_cast<char*>(&match_type_)) + sizeof(unit_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MatchPlayerUpdateNotify)
}

void MatchPlayerUpdateNotify::SharedCtor() {
  ::memset(&match_player_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_id_) -
      reinterpret_cast<char*>(&match_player_)) + sizeof(unit_id_));
  _cached_size_ = 0;
}

MatchPlayerUpdateNotify::~MatchPlayerUpdateNotify() {
  // @@protoc_insertion_point(destructor:proto.MatchPlayerUpdateNotify)
  SharedDtor();
}

void MatchPlayerUpdateNotify::SharedDtor() {
  if (this != internal_default_instance()) delete match_player_;
}

void MatchPlayerUpdateNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchPlayerUpdateNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchPlayerUpdateNotify& MatchPlayerUpdateNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchPlayerUpdateNotify* MatchPlayerUpdateNotify::New(::google::protobuf::Arena* arena) const {
  MatchPlayerUpdateNotify* n = new MatchPlayerUpdateNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchPlayerUpdateNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MatchPlayerUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && match_player_ != NULL) {
    delete match_player_;
  }
  match_player_ = NULL;
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unit_id_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(unit_id_));
  _internal_metadata_.Clear();
}

bool MatchPlayerUpdateNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MatchPlayerUpdateNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchType match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 unit_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &unit_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchPlayer match_player = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_match_player()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MatchPlayerUpdateNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MatchPlayerUpdateNotify)
  return false;
#undef DO_
}

void MatchPlayerUpdateNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MatchPlayerUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->match_type(), output);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->unit_id(), output);
  }

  // .proto.MatchPlayer match_player = 3;
  if (this->has_match_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->match_player_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MatchPlayerUpdateNotify)
}

::google::protobuf::uint8* MatchPlayerUpdateNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MatchPlayerUpdateNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->match_type(), target);
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->unit_id(), target);
  }

  // .proto.MatchPlayer match_player = 3;
  if (this->has_match_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->match_player_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MatchPlayerUpdateNotify)
  return target;
}

size_t MatchPlayerUpdateNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MatchPlayerUpdateNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MatchPlayer match_player = 3;
  if (this->has_match_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->match_player_);
  }

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // uint32 unit_id = 2;
  if (this->unit_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->unit_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchPlayerUpdateNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MatchPlayerUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchPlayerUpdateNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchPlayerUpdateNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MatchPlayerUpdateNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MatchPlayerUpdateNotify)
    MergeFrom(*source);
  }
}

void MatchPlayerUpdateNotify::MergeFrom(const MatchPlayerUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MatchPlayerUpdateNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_match_player()) {
    mutable_match_player()->::proto::MatchPlayer::MergeFrom(from.match_player());
  }
  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.unit_id() != 0) {
    set_unit_id(from.unit_id());
  }
}

void MatchPlayerUpdateNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MatchPlayerUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchPlayerUpdateNotify::CopyFrom(const MatchPlayerUpdateNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MatchPlayerUpdateNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchPlayerUpdateNotify::IsInitialized() const {
  return true;
}

void MatchPlayerUpdateNotify::Swap(MatchPlayerUpdateNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchPlayerUpdateNotify::InternalSwap(MatchPlayerUpdateNotify* other) {
  using std::swap;
  swap(match_player_, other->match_player_);
  swap(match_type_, other->match_type_);
  swap(unit_id_, other->unit_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchPlayerUpdateNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchPlayerUpdateNotify

// .proto.MatchType match_type = 1;
void MatchPlayerUpdateNotify::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType MatchPlayerUpdateNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerUpdateNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void MatchPlayerUpdateNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerUpdateNotify.match_type)
}

// uint32 unit_id = 2;
void MatchPlayerUpdateNotify::clear_unit_id() {
  unit_id_ = 0u;
}
::google::protobuf::uint32 MatchPlayerUpdateNotify::unit_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchPlayerUpdateNotify.unit_id)
  return unit_id_;
}
void MatchPlayerUpdateNotify::set_unit_id(::google::protobuf::uint32 value) {
  
  unit_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchPlayerUpdateNotify.unit_id)
}

// .proto.MatchPlayer match_player = 3;
bool MatchPlayerUpdateNotify::has_match_player() const {
  return this != internal_default_instance() && match_player_ != NULL;
}
void MatchPlayerUpdateNotify::clear_match_player() {
  if (GetArenaNoVirtual() == NULL && match_player_ != NULL) delete match_player_;
  match_player_ = NULL;
}
const ::proto::MatchPlayer& MatchPlayerUpdateNotify::match_player() const {
  const ::proto::MatchPlayer* p = match_player_;
  // @@protoc_insertion_point(field_get:proto.MatchPlayerUpdateNotify.match_player)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchPlayer*>(
      &::proto::_MatchPlayer_default_instance_);
}
::proto::MatchPlayer* MatchPlayerUpdateNotify::mutable_match_player() {
  
  if (match_player_ == NULL) {
    match_player_ = new ::proto::MatchPlayer;
  }
  // @@protoc_insertion_point(field_mutable:proto.MatchPlayerUpdateNotify.match_player)
  return match_player_;
}
::proto::MatchPlayer* MatchPlayerUpdateNotify::release_match_player() {
  // @@protoc_insertion_point(field_release:proto.MatchPlayerUpdateNotify.match_player)
  
  ::proto::MatchPlayer* temp = match_player_;
  match_player_ = NULL;
  return temp;
}
void MatchPlayerUpdateNotify::set_allocated_match_player(::proto::MatchPlayer* match_player) {
  delete match_player_;
  match_player_ = match_player;
  if (match_player) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MatchPlayerUpdateNotify.match_player)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchIdentityNotify::kMatchTypeFieldNumber;
const int MatchIdentityNotify::kMatchIdentityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchIdentityNotify::MatchIdentityNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MatchIdentityNotify)
}
MatchIdentityNotify::MatchIdentityNotify(const MatchIdentityNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_type_, &from.match_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&match_identity_) -
    reinterpret_cast<char*>(&match_type_)) + sizeof(match_identity_));
  // @@protoc_insertion_point(copy_constructor:proto.MatchIdentityNotify)
}

void MatchIdentityNotify::SharedCtor() {
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_identity_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(match_identity_));
  _cached_size_ = 0;
}

MatchIdentityNotify::~MatchIdentityNotify() {
  // @@protoc_insertion_point(destructor:proto.MatchIdentityNotify)
  SharedDtor();
}

void MatchIdentityNotify::SharedDtor() {
}

void MatchIdentityNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchIdentityNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchIdentityNotify& MatchIdentityNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchIdentityNotify* MatchIdentityNotify::New(::google::protobuf::Arena* arena) const {
  MatchIdentityNotify* n = new MatchIdentityNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchIdentityNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MatchIdentityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_identity_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(match_identity_));
  _internal_metadata_.Clear();
}

bool MatchIdentityNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MatchIdentityNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchType match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.MatchIdentity match_identity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_identity(static_cast< ::proto::MatchIdentity >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MatchIdentityNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MatchIdentityNotify)
  return false;
#undef DO_
}

void MatchIdentityNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MatchIdentityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->match_type(), output);
  }

  // .proto.MatchIdentity match_identity = 2;
  if (this->match_identity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->match_identity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MatchIdentityNotify)
}

::google::protobuf::uint8* MatchIdentityNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MatchIdentityNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->match_type(), target);
  }

  // .proto.MatchIdentity match_identity = 2;
  if (this->match_identity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->match_identity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MatchIdentityNotify)
  return target;
}

size_t MatchIdentityNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MatchIdentityNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // .proto.MatchIdentity match_identity = 2;
  if (this->match_identity() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_identity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchIdentityNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MatchIdentityNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchIdentityNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchIdentityNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MatchIdentityNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MatchIdentityNotify)
    MergeFrom(*source);
  }
}

void MatchIdentityNotify::MergeFrom(const MatchIdentityNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MatchIdentityNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.match_identity() != 0) {
    set_match_identity(from.match_identity());
  }
}

void MatchIdentityNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MatchIdentityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchIdentityNotify::CopyFrom(const MatchIdentityNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MatchIdentityNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchIdentityNotify::IsInitialized() const {
  return true;
}

void MatchIdentityNotify::Swap(MatchIdentityNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchIdentityNotify::InternalSwap(MatchIdentityNotify* other) {
  using std::swap;
  swap(match_type_, other->match_type_);
  swap(match_identity_, other->match_identity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchIdentityNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchIdentityNotify

// .proto.MatchType match_type = 1;
void MatchIdentityNotify::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType MatchIdentityNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.MatchIdentityNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void MatchIdentityNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchIdentityNotify.match_type)
}

// .proto.MatchIdentity match_identity = 2;
void MatchIdentityNotify::clear_match_identity() {
  match_identity_ = 0;
}
::proto::MatchIdentity MatchIdentityNotify::match_identity() const {
  // @@protoc_insertion_point(field_get:proto.MatchIdentityNotify.match_identity)
  return static_cast< ::proto::MatchIdentity >(match_identity_);
}
void MatchIdentityNotify::set_match_identity(::proto::MatchIdentity value) {
  
  match_identity_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchIdentityNotify.match_identity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GeneralMatchFinishNotify::kMatchTypeFieldNumber;
const int GeneralMatchFinishNotify::kMatchIdFieldNumber;
const int GeneralMatchFinishNotify::kMatchParamFieldNumber;
const int GeneralMatchFinishNotify::kMatchPlayerListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GeneralMatchFinishNotify::GeneralMatchFinishNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GeneralMatchFinishNotify)
}
GeneralMatchFinishNotify::GeneralMatchFinishNotify(const GeneralMatchFinishNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      match_player_list_(from.match_player_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&match_type_, &from.match_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&match_param_) -
    reinterpret_cast<char*>(&match_type_)) + sizeof(match_param_));
  // @@protoc_insertion_point(copy_constructor:proto.GeneralMatchFinishNotify)
}

void GeneralMatchFinishNotify::SharedCtor() {
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_param_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(match_param_));
  _cached_size_ = 0;
}

GeneralMatchFinishNotify::~GeneralMatchFinishNotify() {
  // @@protoc_insertion_point(destructor:proto.GeneralMatchFinishNotify)
  SharedDtor();
}

void GeneralMatchFinishNotify::SharedDtor() {
}

void GeneralMatchFinishNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GeneralMatchFinishNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GeneralMatchFinishNotify& GeneralMatchFinishNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GeneralMatchFinishNotify* GeneralMatchFinishNotify::New(::google::protobuf::Arena* arena) const {
  GeneralMatchFinishNotify* n = new GeneralMatchFinishNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GeneralMatchFinishNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GeneralMatchFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  match_player_list_.Clear();
  ::memset(&match_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&match_param_) -
      reinterpret_cast<char*>(&match_type_)) + sizeof(match_param_));
  _internal_metadata_.Clear();
}

bool GeneralMatchFinishNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GeneralMatchFinishNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchType match_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_match_type(static_cast< ::proto::MatchType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 match_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 match_param = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &match_param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.MatchPlayer match_player_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_match_player_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GeneralMatchFinishNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GeneralMatchFinishNotify)
  return false;
#undef DO_
}

void GeneralMatchFinishNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GeneralMatchFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->match_type(), output);
  }

  // uint32 match_id = 2;
  if (this->match_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->match_id(), output);
  }

  // uint32 match_param = 3;
  if (this->match_param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->match_param(), output);
  }

  // repeated .proto.MatchPlayer match_player_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->match_player_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->match_player_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GeneralMatchFinishNotify)
}

::google::protobuf::uint8* GeneralMatchFinishNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GeneralMatchFinishNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->match_type(), target);
  }

  // uint32 match_id = 2;
  if (this->match_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->match_id(), target);
  }

  // uint32 match_param = 3;
  if (this->match_param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->match_param(), target);
  }

  // repeated .proto.MatchPlayer match_player_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->match_player_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->match_player_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GeneralMatchFinishNotify)
  return target;
}

size_t GeneralMatchFinishNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GeneralMatchFinishNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.MatchPlayer match_player_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->match_player_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->match_player_list(static_cast<int>(i)));
    }
  }

  // .proto.MatchType match_type = 1;
  if (this->match_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->match_type());
  }

  // uint32 match_id = 2;
  if (this->match_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_id());
  }

  // uint32 match_param = 3;
  if (this->match_param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->match_param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GeneralMatchFinishNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GeneralMatchFinishNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const GeneralMatchFinishNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GeneralMatchFinishNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GeneralMatchFinishNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GeneralMatchFinishNotify)
    MergeFrom(*source);
  }
}

void GeneralMatchFinishNotify::MergeFrom(const GeneralMatchFinishNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GeneralMatchFinishNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  match_player_list_.MergeFrom(from.match_player_list_);
  if (from.match_type() != 0) {
    set_match_type(from.match_type());
  }
  if (from.match_id() != 0) {
    set_match_id(from.match_id());
  }
  if (from.match_param() != 0) {
    set_match_param(from.match_param());
  }
}

void GeneralMatchFinishNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GeneralMatchFinishNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GeneralMatchFinishNotify::CopyFrom(const GeneralMatchFinishNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GeneralMatchFinishNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GeneralMatchFinishNotify::IsInitialized() const {
  return true;
}

void GeneralMatchFinishNotify::Swap(GeneralMatchFinishNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GeneralMatchFinishNotify::InternalSwap(GeneralMatchFinishNotify* other) {
  using std::swap;
  match_player_list_.InternalSwap(&other->match_player_list_);
  swap(match_type_, other->match_type_);
  swap(match_id_, other->match_id_);
  swap(match_param_, other->match_param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GeneralMatchFinishNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmatch_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GeneralMatchFinishNotify

// .proto.MatchType match_type = 1;
void GeneralMatchFinishNotify::clear_match_type() {
  match_type_ = 0;
}
::proto::MatchType GeneralMatchFinishNotify::match_type() const {
  // @@protoc_insertion_point(field_get:proto.GeneralMatchFinishNotify.match_type)
  return static_cast< ::proto::MatchType >(match_type_);
}
void GeneralMatchFinishNotify::set_match_type(::proto::MatchType value) {
  
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralMatchFinishNotify.match_type)
}

// uint32 match_id = 2;
void GeneralMatchFinishNotify::clear_match_id() {
  match_id_ = 0u;
}
::google::protobuf::uint32 GeneralMatchFinishNotify::match_id() const {
  // @@protoc_insertion_point(field_get:proto.GeneralMatchFinishNotify.match_id)
  return match_id_;
}
void GeneralMatchFinishNotify::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralMatchFinishNotify.match_id)
}

// uint32 match_param = 3;
void GeneralMatchFinishNotify::clear_match_param() {
  match_param_ = 0u;
}
::google::protobuf::uint32 GeneralMatchFinishNotify::match_param() const {
  // @@protoc_insertion_point(field_get:proto.GeneralMatchFinishNotify.match_param)
  return match_param_;
}
void GeneralMatchFinishNotify::set_match_param(::google::protobuf::uint32 value) {
  
  match_param_ = value;
  // @@protoc_insertion_point(field_set:proto.GeneralMatchFinishNotify.match_param)
}

// repeated .proto.MatchPlayer match_player_list = 4;
int GeneralMatchFinishNotify::match_player_list_size() const {
  return match_player_list_.size();
}
void GeneralMatchFinishNotify::clear_match_player_list() {
  match_player_list_.Clear();
}
const ::proto::MatchPlayer& GeneralMatchFinishNotify::match_player_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GeneralMatchFinishNotify.match_player_list)
  return match_player_list_.Get(index);
}
::proto::MatchPlayer* GeneralMatchFinishNotify::mutable_match_player_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GeneralMatchFinishNotify.match_player_list)
  return match_player_list_.Mutable(index);
}
::proto::MatchPlayer* GeneralMatchFinishNotify::add_match_player_list() {
  // @@protoc_insertion_point(field_add:proto.GeneralMatchFinishNotify.match_player_list)
  return match_player_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer >*
GeneralMatchFinishNotify::mutable_match_player_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GeneralMatchFinishNotify.match_player_list)
  return &match_player_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::MatchPlayer >&
GeneralMatchFinishNotify::match_player_list() const {
  // @@protoc_insertion_point(field_list:proto.GeneralMatchFinishNotify.match_player_list)
  return match_player_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
