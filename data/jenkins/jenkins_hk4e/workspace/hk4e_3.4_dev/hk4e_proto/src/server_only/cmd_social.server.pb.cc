// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_social.server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_only/cmd_social.server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class AddAskFriendNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddAskFriendNotify>
     _instance;
} _AddAskFriendNotify_default_instance_;
class ServerGetPlayerFriendListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetPlayerFriendListReq>
     _instance;
} _ServerGetPlayerFriendListReq_default_instance_;
class ServerGetPlayerFriendListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetPlayerFriendListRsp>
     _instance;
} _ServerGetPlayerFriendListRsp_default_instance_;
class ServerGetSocialDetailReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetSocialDetailReq>
     _instance;
} _ServerGetSocialDetailReq_default_instance_;
class ServerGetSocialDetailRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetSocialDetailRsp>
     _instance;
} _ServerGetSocialDetailRsp_default_instance_;
class ServerAskAddFriendReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerAskAddFriendReq>
     _instance;
} _ServerAskAddFriendReq_default_instance_;
class ServerAskAddFriendRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerAskAddFriendRsp>
     _instance;
} _ServerAskAddFriendRsp_default_instance_;
class ServerDealAddFriendReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerDealAddFriendReq>
     _instance;
} _ServerDealAddFriendReq_default_instance_;
class ServerDealAddFriendRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerDealAddFriendRsp>
     _instance;
} _ServerDealAddFriendRsp_default_instance_;
class ServerDeleteFriendReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerDeleteFriendReq>
     _instance;
} _ServerDeleteFriendReq_default_instance_;
class ServerDeleteFriendRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerDeleteFriendRsp>
     _instance;
} _ServerDeleteFriendRsp_default_instance_;
class ServerSetSignatureReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerSetSignatureReq>
     _instance;
} _ServerSetSignatureReq_default_instance_;
class ServerSetSignatureRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerSetSignatureRsp>
     _instance;
} _ServerSetSignatureRsp_default_instance_;
class ServerGetPlayerFriendBriefReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetPlayerFriendBriefReq>
     _instance;
} _ServerGetPlayerFriendBriefReq_default_instance_;
class ServerGetPlayerFriendBriefRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetPlayerFriendBriefRsp>
     _instance;
} _ServerGetPlayerFriendBriefRsp_default_instance_;
class SeverGetPS4FriendUidReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SeverGetPS4FriendUidReq>
     _instance;
} _SeverGetPS4FriendUidReq_default_instance_;
class SeverGetPS4FriendUidRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SeverGetPS4FriendUidRsp>
     _instance;
} _SeverGetPS4FriendUidRsp_default_instance_;
class SyncPlayerBriefNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SyncPlayerBriefNotify>
     _instance;
} _SyncPlayerBriefNotify_default_instance_;
class ServerAddBlacklistReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerAddBlacklistReq>
     _instance;
} _ServerAddBlacklistReq_default_instance_;
class ServerAddBlacklistRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerAddBlacklistRsp>
     _instance;
} _ServerAddBlacklistRsp_default_instance_;
class ServerRemoveBlacklistReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerRemoveBlacklistReq>
     _instance;
} _ServerRemoveBlacklistReq_default_instance_;
class ServerRemoveBlacklistRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerRemoveBlacklistRsp>
     _instance;
} _ServerRemoveBlacklistRsp_default_instance_;
class ServerGetRecentMpPlayerListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetRecentMpPlayerListReq>
     _instance;
} _ServerGetRecentMpPlayerListReq_default_instance_;
class ServerGetRecentMpPlayerListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetRecentMpPlayerListRsp>
     _instance;
} _ServerGetRecentMpPlayerListRsp_default_instance_;
class ServerGetPlayerBlacklistReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetPlayerBlacklistReq>
     _instance;
} _ServerGetPlayerBlacklistReq_default_instance_;
class ServerGetPlayerBlacklistRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetPlayerBlacklistRsp>
     _instance;
} _ServerGetPlayerBlacklistRsp_default_instance_;
class ServerPrivateChatReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPrivateChatReq>
     _instance;
} _ServerPrivateChatReq_default_instance_;
class ServerPrivateChatRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPrivateChatRsp>
     _instance;
} _ServerPrivateChatRsp_default_instance_;
class ServerPullPrivateChatReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPullPrivateChatReq>
     _instance;
} _ServerPullPrivateChatReq_default_instance_;
class ServerPullRecentChatReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPullRecentChatReq>
     _instance;
} _ServerPullRecentChatReq_default_instance_;
class ServerUpdateActivitySocialDataNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerUpdateActivitySocialDataNotify>
     _instance;
} _ServerUpdateActivitySocialDataNotify_default_instance_;
class ServerBlessingGetFriendPicListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerBlessingGetFriendPicListReq>
     _instance;
} _ServerBlessingGetFriendPicListReq_default_instance_;
class ServerBlessingGetFriendPicListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerBlessingGetFriendPicListRsp>
     _instance;
} _ServerBlessingGetFriendPicListRsp_default_instance_;
class ServerGetFriendBriefReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetFriendBriefReq>
     _instance;
} _ServerGetFriendBriefReq_default_instance_;
class ServerGetFriendBriefRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetFriendBriefRsp>
     _instance;
} _ServerGetFriendBriefRsp_default_instance_;
class ServerUpdateShowAvatarInfoNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerUpdateShowAvatarInfoNotify>
     _instance;
} _ServerUpdateShowAvatarInfoNotify_default_instance_;
class ServerGetFriendShowAvatarInfoReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetFriendShowAvatarInfoReq>
     _instance;
} _ServerGetFriendShowAvatarInfoReq_default_instance_;
class ServerGetFriendShowAvatarInfoRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetFriendShowAvatarInfoRsp>
     _instance;
} _ServerGetFriendShowAvatarInfoRsp_default_instance_;
class ServerReadPrivateChatReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerReadPrivateChatReq>
     _instance;
} _ServerReadPrivateChatReq_default_instance_;
class ServerGetFriendShowNameCardInfoReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetFriendShowNameCardInfoReq>
     _instance;
} _ServerGetFriendShowNameCardInfoReq_default_instance_;
class ServerGetFriendShowNameCardInfoRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetFriendShowNameCardInfoRsp>
     _instance;
} _ServerGetFriendShowNameCardInfoRsp_default_instance_;
class ServerGetAskFriendBriefReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetAskFriendBriefReq>
     _instance;
} _ServerGetAskFriendBriefReq_default_instance_;
class ServerGetAskFriendBriefRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetAskFriendBriefRsp>
     _instance;
} _ServerGetAskFriendBriefRsp_default_instance_;
class ServerAddPsnFriendReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerAddPsnFriendReq>
     _instance;
} _ServerAddPsnFriendReq_default_instance_;
class ServerAddPsnFriendRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerAddPsnFriendRsp>
     _instance;
} _ServerAddPsnFriendRsp_default_instance_;
class ServerAddPsnBlackReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerAddPsnBlackReq>
     _instance;
} _ServerAddPsnBlackReq_default_instance_;
class ServerAddPsnBlackRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerAddPsnBlackRsp>
     _instance;
} _ServerAddPsnBlackRsp_default_instance_;
class ServerFriendInfoChangeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerFriendInfoChangeNotify>
     _instance;
} _ServerFriendInfoChangeNotify_default_instance_;
class ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPlantFlowerGetFriendFlowerDataReq::ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry>
     _instance;
} _ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry_default_instance_;
class ServerPlantFlowerGetFriendFlowerDataReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPlantFlowerGetFriendFlowerDataReq>
     _instance;
} _ServerPlantFlowerGetFriendFlowerDataReq_default_instance_;
class ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry>
     _instance;
} _ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry_default_instance_;
class ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry>
     _instance;
} _ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry_default_instance_;
class ServerPlantFlowerGetFriendFlowerDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPlantFlowerGetFriendFlowerDataRsp>
     _instance;
} _ServerPlantFlowerGetFriendFlowerDataRsp_default_instance_;
class ServerPlantFlowerGetFriendFlowerWishListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPlantFlowerGetFriendFlowerWishListReq>
     _instance;
} _ServerPlantFlowerGetFriendFlowerWishListReq_default_instance_;
class ServerPlantFlowerGetFriendFlowerWishListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPlantFlowerGetFriendFlowerWishListRsp>
     _instance;
} _ServerPlantFlowerGetFriendFlowerWishListRsp_default_instance_;
class ServerWinterCampGetFriendItemDataReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerWinterCampGetFriendItemDataReq>
     _instance;
} _ServerWinterCampGetFriendItemDataReq_default_instance_;
class ServerWinterCampGetFriendItemDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerWinterCampGetFriendItemDataRsp>
     _instance;
} _ServerWinterCampGetFriendItemDataRsp_default_instance_;
class ServerWinterCampGetFriendWishListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerWinterCampGetFriendWishListReq>
     _instance;
} _ServerWinterCampGetFriendWishListReq_default_instance_;
class ServerWinterCampGetFriendWishListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerWinterCampGetFriendWishListRsp>
     _instance;
} _ServerWinterCampGetFriendWishListRsp_default_instance_;
class ServerGetCustomDungeonReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetCustomDungeonReq>
     _instance;
} _ServerGetCustomDungeonReq_default_instance_;
class ServerCustomDungeonDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerCustomDungeon>
     _instance;
} _ServerCustomDungeon_default_instance_;
class CustomDungeonAdventureDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CustomDungeonAdventure>
     _instance;
} _CustomDungeonAdventure_default_instance_;
class ServerGetCustomDungeonRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetCustomDungeonRsp>
     _instance;
} _ServerGetCustomDungeonRsp_default_instance_;
class ServerSaveCustomDungeonReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerSaveCustomDungeonReq>
     _instance;
} _ServerSaveCustomDungeonReq_default_instance_;
class ServerSaveCustomDungeonRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerSaveCustomDungeonRsp>
     _instance;
} _ServerSaveCustomDungeonRsp_default_instance_;
class ServerPublishCustomDungeonReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPublishCustomDungeonReq>
     _instance;
} _ServerPublishCustomDungeonReq_default_instance_;
class ServerPublishCustomDungeonRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPublishCustomDungeonRsp>
     _instance;
} _ServerPublishCustomDungeonRsp_default_instance_;
class ServerRemoveCustomDungeonReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerRemoveCustomDungeonReq>
     _instance;
} _ServerRemoveCustomDungeonReq_default_instance_;
class ServerRemoveCustomDungeonRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerRemoveCustomDungeonRsp>
     _instance;
} _ServerRemoveCustomDungeonRsp_default_instance_;
class ServerUpdateCustomDungeonSocialNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerUpdateCustomDungeonSocialNotify>
     _instance;
} _ServerUpdateCustomDungeonSocialNotify_default_instance_;
class ServerGetCustomDungeonBriefReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetCustomDungeonBriefReq>
     _instance;
} _ServerGetCustomDungeonBriefReq_default_instance_;
class ServerGetCustomDungeonBriefRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetCustomDungeonBriefRsp>
     _instance;
} _ServerGetCustomDungeonBriefRsp_default_instance_;
class ServerGetRecommendCustomDungeonReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetRecommendCustomDungeonReq>
     _instance;
} _ServerGetRecommendCustomDungeonReq_default_instance_;
class ServerGetRecommendCustomDungeonRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetRecommendCustomDungeonRsp>
     _instance;
} _ServerGetRecommendCustomDungeonRsp_default_instance_;
class ServerAddFriendByMuipReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerAddFriendByMuipReq>
     _instance;
} _ServerAddFriendByMuipReq_default_instance_;
class ServerAddFriendByMuipRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerAddFriendByMuipRsp>
     _instance;
} _ServerAddFriendByMuipRsp_default_instance_;
class ServerDelFriendByMuipReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerDelFriendByMuipReq>
     _instance;
} _ServerDelFriendByMuipReq_default_instance_;
class ServerDelFriendByMuipRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerDelFriendByMuipRsp>
     _instance;
} _ServerDelFriendByMuipRsp_default_instance_;
class ServerAddFriendAskByMuipReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerAddFriendAskByMuipReq>
     _instance;
} _ServerAddFriendAskByMuipReq_default_instance_;
class ServerAddFriendAskByMuipRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerAddFriendAskByMuipRsp>
     _instance;
} _ServerAddFriendAskByMuipRsp_default_instance_;
class ServerDelFriendAskByMuipReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerDelFriendAskByMuipReq>
     _instance;
} _ServerDelFriendAskByMuipReq_default_instance_;
class ServerDelFriendAskByMuipRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerDelFriendAskByMuipRsp>
     _instance;
} _ServerDelFriendAskByMuipRsp_default_instance_;
class ServerCustomDungeonCacheInvalidNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerCustomDungeonCacheInvalidNotify>
     _instance;
} _ServerCustomDungeonCacheInvalidNotify_default_instance_;
class ServerCustomDungeonSocialGmNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerCustomDungeonSocialGmNotify>
     _instance;
} _ServerCustomDungeonSocialGmNotify_default_instance_;
class ServerCustomDungeonFirstLikeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerCustomDungeonFirstLikeNotify>
     _instance;
} _ServerCustomDungeonFirstLikeNotify_default_instance_;
class ServerGetUgcReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetUgcReq>
     _instance;
} _ServerGetUgcReq_default_instance_;
class ServerGetUgcRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetUgcRsp>
     _instance;
} _ServerGetUgcRsp_default_instance_;
class ServerGetUgcBriefReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetUgcBriefReq>
     _instance;
} _ServerGetUgcBriefReq_default_instance_;
class ServerGetUgcBriefRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerGetUgcBriefRsp>
     _instance;
} _ServerGetUgcBriefRsp_default_instance_;
class ServerMultiGetUgcBriefReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerMultiGetUgcBriefReq>
     _instance;
} _ServerMultiGetUgcBriefReq_default_instance_;
class ServerMultiGetUgcBriefRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerMultiGetUgcBriefRsp>
     _instance;
} _ServerMultiGetUgcBriefRsp_default_instance_;
class ServerSaveUgcReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerSaveUgcReq>
     _instance;
} _ServerSaveUgcReq_default_instance_;
class ServerSaveUgcRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerSaveUgcRsp>
     _instance;
} _ServerSaveUgcRsp_default_instance_;
class ServerPublishUgcReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPublishUgcReq>
     _instance;
} _ServerPublishUgcReq_default_instance_;
class ServerPublishUgcRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerPublishUgcRsp>
     _instance;
} _ServerPublishUgcRsp_default_instance_;
class ServerCheckUgcUpdateReq_UgcGuidVersionMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerCheckUgcUpdateReq::ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry>
     _instance;
} _ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry_default_instance_;
class ServerCheckUgcUpdateReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerCheckUgcUpdateReq>
     _instance;
} _ServerCheckUgcUpdateReq_default_instance_;
class ServerCheckUgcUpdateRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerCheckUgcUpdateRsp>
     _instance;
} _ServerCheckUgcUpdateRsp_default_instance_;
class ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerActivityGetFriendGiftDataReq::ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry>
     _instance;
} _ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry_default_instance_;
class ServerActivityGetFriendGiftDataReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerActivityGetFriendGiftDataReq>
     _instance;
} _ServerActivityGetFriendGiftDataReq_default_instance_;
class ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry>
     _instance;
} _ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry_default_instance_;
class ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry>
     _instance;
} _ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry_default_instance_;
class ServerActivityGetFriendGiftDataRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerActivityGetFriendGiftDataRsp>
     _instance;
} _ServerActivityGetFriendGiftDataRsp_default_instance_;
class ServerActivityGetFriendGiftWishListReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerActivityGetFriendGiftWishListReq>
     _instance;
} _ServerActivityGetFriendGiftWishListReq_default_instance_;
class ServerActivityGetFriendGiftWishListRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerActivityGetFriendGiftWishListRsp>
     _instance;
} _ServerActivityGetFriendGiftWishListRsp_default_instance_;
class SyncPlayerIpRegionNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SyncPlayerIpRegionNotify>
     _instance;
} _SyncPlayerIpRegionNotify_default_instance_;

namespace protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[106];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddAskFriendNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddAskFriendNotify, source_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendListRsp, friend_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendListRsp, ask_add_friend_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendListRsp, blacklist_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendListRsp, psn_friend_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendListRsp, psn_blacklist_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetSocialDetailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetSocialDetailReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetSocialDetailRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetSocialDetailRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetSocialDetailRsp, social_detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAskAddFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAskAddFriendReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAskAddFriendRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAskAddFriendRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAskAddFriendRsp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDealAddFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDealAddFriendReq, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDealAddFriendReq, deal_add_friend_result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDealAddFriendRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDealAddFriendRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDealAddFriendRsp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDealAddFriendRsp, deal_add_friend_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDealAddFriendRsp, target_friend_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDealAddFriendRsp, target_friend_brief_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDeleteFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDeleteFriendReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDeleteFriendRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDeleteFriendRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDeleteFriendRsp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDeleteFriendRsp, target_friend_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSetSignatureReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSetSignatureReq, signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSetSignatureRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSetSignatureRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSetSignatureRsp, signature_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendBriefReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendBriefReq, friend_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendBriefRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendBriefRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerFriendBriefRsp, friend_brief_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeverGetPS4FriendUidReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeverGetPS4FriendUidReq, psn_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeverGetPS4FriendUidReq, request_reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeverGetPS4FriendUidRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeverGetPS4FriendUidRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeverGetPS4FriendUidRsp, uid_id_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeverGetPS4FriendUidRsp, request_reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeverGetPS4FriendUidRsp, friend_brief_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncPlayerBriefNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncPlayerBriefNotify, basic_brief_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncPlayerBriefNotify, mp_brief_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncPlayerBriefNotify, social_brief_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncPlayerBriefNotify, home_brief_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddBlacklistReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddBlacklistReq, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddBlacklistReq, is_friend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddBlacklistRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddBlacklistRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddBlacklistRsp, target_friend_brief_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRemoveBlacklistReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRemoveBlacklistReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRemoveBlacklistRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRemoveBlacklistRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRemoveBlacklistRsp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetRecentMpPlayerListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetRecentMpPlayerListReq, recent_player_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetRecentMpPlayerListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetRecentMpPlayerListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetRecentMpPlayerListRsp, recent_mp_player_brief_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerBlacklistReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerBlacklistReq, blacklist_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerBlacklistRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerBlacklistRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetPlayerBlacklistRsp, blacklist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPrivateChatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPrivateChatReq, chat_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPrivateChatReq, is_ps4_friend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPrivateChatRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPrivateChatRsp, retcode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPullPrivateChatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPullPrivateChatReq, from_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPullPrivateChatReq, to_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPullPrivateChatReq, from_sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPullPrivateChatReq, pull_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPullPrivateChatReq, is_ps4_friend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPullRecentChatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPullRecentChatReq, from_sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPullRecentChatReq, pull_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUpdateActivitySocialDataNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUpdateActivitySocialDataNotify, social_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBlessingGetFriendPicListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBlessingGetFriendPicListReq, friend_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBlessingGetFriendPicListReq, schedule_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBlessingGetFriendPicListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBlessingGetFriendPicListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBlessingGetFriendPicListRsp, friend_pic_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendBriefReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendBriefReq, uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendBriefReq, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendBriefRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendBriefRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendBriefRsp, friend_brief_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendBriefRsp, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUpdateShowAvatarInfoNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUpdateShowAvatarInfoNotify, show_avatar_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendShowAvatarInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendShowAvatarInfoReq, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendShowAvatarInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendShowAvatarInfoRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendShowAvatarInfoRsp, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendShowAvatarInfoRsp, show_avatar_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerReadPrivateChatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerReadPrivateChatReq, from_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerReadPrivateChatReq, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerReadPrivateChatReq, is_ps4_friend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendShowNameCardInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendShowNameCardInfoReq, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendShowNameCardInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendShowNameCardInfoRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendShowNameCardInfoRsp, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetFriendShowNameCardInfoRsp, show_name_card_id_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetAskFriendBriefReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetAskFriendBriefReq, ask_add_friend_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetAskFriendBriefRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetAskFriendBriefRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetAskFriendBriefRsp, ask_add_friend_brief_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddPsnFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddPsnFriendReq, force_add_psn_friend_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddPsnFriendRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddPsnFriendRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddPsnFriendRsp, force_add_psn_friend_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddPsnFriendRsp, force_add_psn_friend_brief_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddPsnBlackReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddPsnBlackReq, force_add_psn_black_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddPsnBlackRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddPsnBlackRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddPsnBlackRsp, force_add_psn_black_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerFriendInfoChangeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerFriendInfoChangeNotify, my_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerFriendInfoChangeNotify, my_online_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerFriendInfoChangeNotify, notify_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerDataReq, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerDataReq, friend_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerDataReq, give_flower_num_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerDataRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerDataRsp, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerDataRsp, friend_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerDataRsp, give_flower_num_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerDataRsp, have_flower_num_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerWishListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerWishListReq, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerWishListReq, friend_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerWishListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerWishListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerWishListRsp, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPlantFlowerGetFriendFlowerWishListRsp, friend_flower_wish_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendItemDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendItemDataReq, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendItemDataReq, friend_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendItemDataReq, give_item_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendItemDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendItemDataRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendItemDataRsp, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendItemDataRsp, friend_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendItemDataRsp, give_item_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendItemDataRsp, friend_item_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendWishListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendWishListReq, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendWishListReq, friend_uid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendWishListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendWishListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendWishListRsp, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerWinterCampGetFriendWishListRsp, wish_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonReq, dungeon_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonReq, is_self_dungeon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonReq, enter_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeon, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeon, dungeon_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeon, dungeon_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeon, room_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeon, setting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeon, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeon, is_liked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeon, first_publish_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonAdventure, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonAdventure, custom_dungeon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CustomDungeonAdventure, dungeon_brief_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonRsp, is_exist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonRsp, custom_dungeon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonRsp, enter_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveCustomDungeonReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveCustomDungeonReq, custom_dungeon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveCustomDungeonReq, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveCustomDungeonReq, is_ever_published_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveCustomDungeonRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveCustomDungeonRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveCustomDungeonRsp, dungeon_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveCustomDungeonRsp, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveCustomDungeonRsp, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonReq, dungeon_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonReq, abstract_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonReq, deploy_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonReq, creator_nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonReq, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonReq, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonReq, lang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonReq, tag_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonReq, is_psn_platform_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonRsp, dungeon_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishCustomDungeonRsp, publish_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRemoveCustomDungeonReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRemoveCustomDungeonReq, dungeon_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRemoveCustomDungeonReq, group_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRemoveCustomDungeonRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRemoveCustomDungeonRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerRemoveCustomDungeonRsp, dungeon_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUpdateCustomDungeonSocialNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUpdateCustomDungeonSocialNotify, dungeon_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUpdateCustomDungeonSocialNotify, update_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUpdateCustomDungeonSocialNotify, is_cancel_store_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUpdateCustomDungeonSocialNotify, is_cancel_like_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUpdateCustomDungeonSocialNotify, is_win_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerUpdateCustomDungeonSocialNotify, is_ever_liked_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonBriefReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonBriefReq, dungeon_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonBriefReq, get_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonBriefRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonBriefRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonBriefRsp, dungeon_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonBriefRsp, dungeon_brief_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetCustomDungeonBriefRsp, get_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetRecommendCustomDungeonReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetRecommendCustomDungeonReq, dungeon_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetRecommendCustomDungeonReq, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetRecommendCustomDungeonReq, recommend_interval_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetRecommendCustomDungeonRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetRecommendCustomDungeonRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetRecommendCustomDungeonRsp, dungeon_brief_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddFriendByMuipReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddFriendByMuipReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddFriendByMuipRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddFriendByMuipRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddFriendByMuipRsp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddFriendByMuipRsp, target_friend_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddFriendByMuipRsp, target_friend_brief_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDelFriendByMuipReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDelFriendByMuipReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDelFriendByMuipRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDelFriendByMuipRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDelFriendByMuipRsp, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDelFriendByMuipRsp, target_friend_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddFriendAskByMuipReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddFriendAskByMuipReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddFriendAskByMuipRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddFriendAskByMuipRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerAddFriendAskByMuipRsp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDelFriendAskByMuipReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDelFriendAskByMuipReq, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDelFriendAskByMuipRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDelFriendAskByMuipRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerDelFriendAskByMuipRsp, target_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeonCacheInvalidNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeonCacheInvalidNotify, dungeon_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeonSocialGmNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeonSocialGmNotify, dungeon_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeonSocialGmNotify, update_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeonSocialGmNotify, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCustomDungeonFirstLikeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcReq, ugc_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcReq, ugc_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcReq, is_edit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcReq, is_require_brief_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcReq, ugc_record_usage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcRsp, ugc_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcRsp, ugc_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcRsp, is_edit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcRsp, is_exist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcRsp, ugc_record_usage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcRsp, ugc_redis_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcRsp, ugc_brief_redis_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcBriefReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcBriefReq, ugc_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcBriefReq, ugc_guid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcBriefRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcBriefRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcBriefRsp, ugc_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcBriefRsp, is_exist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerGetUgcBriefRsp, ugc_brief_redis_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMultiGetUgcBriefReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMultiGetUgcBriefReq, ugc_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMultiGetUgcBriefReq, ugc_guid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMultiGetUgcBriefRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMultiGetUgcBriefRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMultiGetUgcBriefRsp, ugc_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerMultiGetUgcBriefRsp, ugc_brief_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveUgcReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveUgcReq, ugc_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveUgcReq, ugc_redis_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveUgcReq, ugc_brief_redis_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveUgcRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveUgcRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveUgcRsp, ugc_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerSaveUgcRsp, ugc_brief_redis_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishUgcReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishUgcReq, ugc_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishUgcReq, ugc_brief_redis_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishUgcRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishUgcRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishUgcRsp, ugc_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishUgcRsp, ugc_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerPublishUgcRsp, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCheckUgcUpdateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCheckUgcUpdateReq, ugc_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCheckUgcUpdateReq, ugc_guid_version_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCheckUgcUpdateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCheckUgcUpdateRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCheckUgcUpdateRsp, ugc_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCheckUgcUpdateRsp, update_ugc_guid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCheckUgcUpdateRsp, not_find_ugc_guid_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftDataReq, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftDataReq, friend_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftDataReq, give_gift_num_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftDataRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftDataRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftDataRsp, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftDataRsp, friend_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftDataRsp, give_gift_num_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftDataRsp, have_gift_num_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftWishListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftWishListReq, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftWishListReq, friend_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftWishListReq, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftWishListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftWishListRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftWishListRsp, schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerActivityGetFriendGiftWishListRsp, friend_gift_wish_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncPlayerIpRegionNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncPlayerIpRegionNotify, social_brief_data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(AddAskFriendNotify)},
  { 6, -1, sizeof(ServerGetPlayerFriendListReq)},
  { 11, -1, sizeof(ServerGetPlayerFriendListRsp)},
  { 22, -1, sizeof(ServerGetSocialDetailReq)},
  { 28, -1, sizeof(ServerGetSocialDetailRsp)},
  { 35, -1, sizeof(ServerAskAddFriendReq)},
  { 41, -1, sizeof(ServerAskAddFriendRsp)},
  { 48, -1, sizeof(ServerDealAddFriendReq)},
  { 55, -1, sizeof(ServerDealAddFriendRsp)},
  { 65, -1, sizeof(ServerDeleteFriendReq)},
  { 71, -1, sizeof(ServerDeleteFriendRsp)},
  { 79, -1, sizeof(ServerSetSignatureReq)},
  { 85, -1, sizeof(ServerSetSignatureRsp)},
  { 92, -1, sizeof(ServerGetPlayerFriendBriefReq)},
  { 98, -1, sizeof(ServerGetPlayerFriendBriefRsp)},
  { 105, -1, sizeof(SeverGetPS4FriendUidReq)},
  { 112, -1, sizeof(SeverGetPS4FriendUidRsp)},
  { 121, -1, sizeof(SyncPlayerBriefNotify)},
  { 130, -1, sizeof(ServerAddBlacklistReq)},
  { 137, -1, sizeof(ServerAddBlacklistRsp)},
  { 144, -1, sizeof(ServerRemoveBlacklistReq)},
  { 150, -1, sizeof(ServerRemoveBlacklistRsp)},
  { 157, -1, sizeof(ServerGetRecentMpPlayerListReq)},
  { 163, -1, sizeof(ServerGetRecentMpPlayerListRsp)},
  { 170, -1, sizeof(ServerGetPlayerBlacklistReq)},
  { 176, -1, sizeof(ServerGetPlayerBlacklistRsp)},
  { 183, -1, sizeof(ServerPrivateChatReq)},
  { 190, -1, sizeof(ServerPrivateChatRsp)},
  { 196, -1, sizeof(ServerPullPrivateChatReq)},
  { 206, -1, sizeof(ServerPullRecentChatReq)},
  { 213, -1, sizeof(ServerUpdateActivitySocialDataNotify)},
  { 219, -1, sizeof(ServerBlessingGetFriendPicListReq)},
  { 226, -1, sizeof(ServerBlessingGetFriendPicListRsp)},
  { 233, -1, sizeof(ServerGetFriendBriefReq)},
  { 240, -1, sizeof(ServerGetFriendBriefRsp)},
  { 248, -1, sizeof(ServerUpdateShowAvatarInfoNotify)},
  { 254, -1, sizeof(ServerGetFriendShowAvatarInfoReq)},
  { 260, -1, sizeof(ServerGetFriendShowAvatarInfoRsp)},
  { 268, -1, sizeof(ServerReadPrivateChatReq)},
  { 276, -1, sizeof(ServerGetFriendShowNameCardInfoReq)},
  { 282, -1, sizeof(ServerGetFriendShowNameCardInfoRsp)},
  { 290, -1, sizeof(ServerGetAskFriendBriefReq)},
  { 296, -1, sizeof(ServerGetAskFriendBriefRsp)},
  { 303, -1, sizeof(ServerAddPsnFriendReq)},
  { 309, -1, sizeof(ServerAddPsnFriendRsp)},
  { 317, -1, sizeof(ServerAddPsnBlackReq)},
  { 323, -1, sizeof(ServerAddPsnBlackRsp)},
  { 330, -1, sizeof(ServerFriendInfoChangeNotify)},
  { 338, -1, sizeof(ServerPlantFlowerGetFriendFlowerDataReq)},
  { 346, -1, sizeof(ServerPlantFlowerGetFriendFlowerDataRsp)},
  { 356, -1, sizeof(ServerPlantFlowerGetFriendFlowerWishListReq)},
  { 363, -1, sizeof(ServerPlantFlowerGetFriendFlowerWishListRsp)},
  { 371, -1, sizeof(ServerWinterCampGetFriendItemDataReq)},
  { 379, -1, sizeof(ServerWinterCampGetFriendItemDataRsp)},
  { 389, -1, sizeof(ServerWinterCampGetFriendWishListReq)},
  { 396, -1, sizeof(ServerWinterCampGetFriendWishListRsp)},
  { 404, -1, sizeof(ServerGetCustomDungeonReq)},
  { 412, -1, sizeof(ServerCustomDungeon)},
  { 424, -1, sizeof(CustomDungeonAdventure)},
  { 431, -1, sizeof(ServerGetCustomDungeonRsp)},
  { 440, -1, sizeof(ServerSaveCustomDungeonReq)},
  { 448, -1, sizeof(ServerSaveCustomDungeonRsp)},
  { 457, -1, sizeof(ServerPublishCustomDungeonReq)},
  { 471, -1, sizeof(ServerPublishCustomDungeonRsp)},
  { 479, -1, sizeof(ServerRemoveCustomDungeonReq)},
  { 486, -1, sizeof(ServerRemoveCustomDungeonRsp)},
  { 493, -1, sizeof(ServerUpdateCustomDungeonSocialNotify)},
  { 504, -1, sizeof(ServerGetCustomDungeonBriefReq)},
  { 511, -1, sizeof(ServerGetCustomDungeonBriefRsp)},
  { 520, -1, sizeof(ServerGetRecommendCustomDungeonReq)},
  { 528, -1, sizeof(ServerGetRecommendCustomDungeonRsp)},
  { 535, -1, sizeof(ServerAddFriendByMuipReq)},
  { 541, -1, sizeof(ServerAddFriendByMuipRsp)},
  { 550, -1, sizeof(ServerDelFriendByMuipReq)},
  { 556, -1, sizeof(ServerDelFriendByMuipRsp)},
  { 564, -1, sizeof(ServerAddFriendAskByMuipReq)},
  { 570, -1, sizeof(ServerAddFriendAskByMuipRsp)},
  { 577, -1, sizeof(ServerDelFriendAskByMuipReq)},
  { 583, -1, sizeof(ServerDelFriendAskByMuipRsp)},
  { 590, -1, sizeof(ServerCustomDungeonCacheInvalidNotify)},
  { 596, -1, sizeof(ServerCustomDungeonSocialGmNotify)},
  { 604, -1, sizeof(ServerCustomDungeonFirstLikeNotify)},
  { 609, -1, sizeof(ServerGetUgcReq)},
  { 619, -1, sizeof(ServerGetUgcRsp)},
  { 632, -1, sizeof(ServerGetUgcBriefReq)},
  { 639, -1, sizeof(ServerGetUgcBriefRsp)},
  { 648, -1, sizeof(ServerMultiGetUgcBriefReq)},
  { 655, -1, sizeof(ServerMultiGetUgcBriefRsp)},
  { 663, -1, sizeof(ServerSaveUgcReq)},
  { 671, -1, sizeof(ServerSaveUgcRsp)},
  { 679, -1, sizeof(ServerPublishUgcReq)},
  { 686, -1, sizeof(ServerPublishUgcRsp)},
  { 695, -1, sizeof(ServerCheckUgcUpdateReq)},
  { 702, -1, sizeof(ServerCheckUgcUpdateRsp)},
  { 711, -1, sizeof(ServerActivityGetFriendGiftDataReq)},
  { 719, -1, sizeof(ServerActivityGetFriendGiftDataRsp)},
  { 729, -1, sizeof(ServerActivityGetFriendGiftWishListReq)},
  { 737, -1, sizeof(ServerActivityGetFriendGiftWishListRsp)},
  { 745, -1, sizeof(SyncPlayerIpRegionNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddAskFriendNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetPlayerFriendListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetPlayerFriendListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetSocialDetailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetSocialDetailRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerAskAddFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerAskAddFriendRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerDealAddFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerDealAddFriendRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerDeleteFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerDeleteFriendRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerSetSignatureReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerSetSignatureRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetPlayerFriendBriefReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetPlayerFriendBriefRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SeverGetPS4FriendUidReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SeverGetPS4FriendUidRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SyncPlayerBriefNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerAddBlacklistReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerAddBlacklistRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerRemoveBlacklistReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerRemoveBlacklistRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetRecentMpPlayerListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetRecentMpPlayerListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetPlayerBlacklistReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetPlayerBlacklistRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPrivateChatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPrivateChatRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPullPrivateChatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPullRecentChatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerUpdateActivitySocialDataNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerBlessingGetFriendPicListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerBlessingGetFriendPicListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetFriendBriefReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetFriendBriefRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerUpdateShowAvatarInfoNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetFriendShowAvatarInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetFriendShowAvatarInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerReadPrivateChatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetFriendShowNameCardInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetFriendShowNameCardInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetAskFriendBriefReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetAskFriendBriefRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerAddPsnFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerAddPsnFriendRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerAddPsnBlackReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerAddPsnBlackRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerFriendInfoChangeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPlantFlowerGetFriendFlowerDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPlantFlowerGetFriendFlowerDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPlantFlowerGetFriendFlowerWishListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPlantFlowerGetFriendFlowerWishListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerWinterCampGetFriendItemDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerWinterCampGetFriendItemDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerWinterCampGetFriendWishListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerWinterCampGetFriendWishListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetCustomDungeonReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerCustomDungeon_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CustomDungeonAdventure_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetCustomDungeonRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerSaveCustomDungeonReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerSaveCustomDungeonRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPublishCustomDungeonReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPublishCustomDungeonRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerRemoveCustomDungeonReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerRemoveCustomDungeonRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerUpdateCustomDungeonSocialNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetCustomDungeonBriefReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetCustomDungeonBriefRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetRecommendCustomDungeonReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetRecommendCustomDungeonRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerAddFriendByMuipReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerAddFriendByMuipRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerDelFriendByMuipReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerDelFriendByMuipRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerAddFriendAskByMuipReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerAddFriendAskByMuipRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerDelFriendAskByMuipReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerDelFriendAskByMuipRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerCustomDungeonCacheInvalidNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerCustomDungeonSocialGmNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerCustomDungeonFirstLikeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetUgcReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetUgcRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetUgcBriefReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerGetUgcBriefRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerMultiGetUgcBriefReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerMultiGetUgcBriefRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerSaveUgcReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerSaveUgcRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPublishUgcReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerPublishUgcRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerCheckUgcUpdateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerCheckUgcUpdateRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerActivityGetFriendGiftDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerActivityGetFriendGiftDataRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerActivityGetFriendGiftWishListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerActivityGetFriendGiftWishListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SyncPlayerIpRegionNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "server_only/cmd_social.server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[48].reflection = ServerPlantFlowerGetFriendFlowerDataReq::ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry::CreateReflection(file_level_metadata[48].descriptor, _ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[50].reflection = ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry::CreateReflection(file_level_metadata[50].descriptor, _ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[51].reflection = ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry::CreateReflection(file_level_metadata[51].descriptor, _ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[95].reflection = ServerCheckUgcUpdateReq::ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry::CreateReflection(file_level_metadata[95].descriptor, _ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[98].reflection = ServerActivityGetFriendGiftDataReq::ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry::CreateReflection(file_level_metadata[98].descriptor, _ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[100].reflection = ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry::CreateReflection(file_level_metadata[100].descriptor, _ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[101].reflection = ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry::CreateReflection(file_level_metadata[101].descriptor, _ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 106);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_server_5fonly_2fredis_5fdata_2eproto::InitDefaults();
  ::proto::protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::InitDefaults();
  ::proto::protobuf_cmd_2fcmd_5fsocial_2eproto::InitDefaults();
  ::proto::protobuf_cmd_2fcmd_5fscene_2eproto::InitDefaults();
  ::proto::protobuf_cmd_2fcmd_5factivity_2eproto::InitDefaults();
  ::proto::protobuf_cmd_2fcmd_5fugc_2eproto::InitDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _AddAskFriendNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddAskFriendNotify_default_instance_);_ServerGetPlayerFriendListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetPlayerFriendListReq_default_instance_);_ServerGetPlayerFriendListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetPlayerFriendListRsp_default_instance_);_ServerGetSocialDetailReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetSocialDetailReq_default_instance_);_ServerGetSocialDetailRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetSocialDetailRsp_default_instance_);_ServerAskAddFriendReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerAskAddFriendReq_default_instance_);_ServerAskAddFriendRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerAskAddFriendRsp_default_instance_);_ServerDealAddFriendReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerDealAddFriendReq_default_instance_);_ServerDealAddFriendRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerDealAddFriendRsp_default_instance_);_ServerDeleteFriendReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerDeleteFriendReq_default_instance_);_ServerDeleteFriendRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerDeleteFriendRsp_default_instance_);_ServerSetSignatureReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerSetSignatureReq_default_instance_);_ServerSetSignatureRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerSetSignatureRsp_default_instance_);_ServerGetPlayerFriendBriefReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetPlayerFriendBriefReq_default_instance_);_ServerGetPlayerFriendBriefRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetPlayerFriendBriefRsp_default_instance_);_SeverGetPS4FriendUidReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SeverGetPS4FriendUidReq_default_instance_);_SeverGetPS4FriendUidRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SeverGetPS4FriendUidRsp_default_instance_);_SyncPlayerBriefNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SyncPlayerBriefNotify_default_instance_);_ServerAddBlacklistReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerAddBlacklistReq_default_instance_);_ServerAddBlacklistRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerAddBlacklistRsp_default_instance_);_ServerRemoveBlacklistReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerRemoveBlacklistReq_default_instance_);_ServerRemoveBlacklistRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerRemoveBlacklistRsp_default_instance_);_ServerGetRecentMpPlayerListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetRecentMpPlayerListReq_default_instance_);_ServerGetRecentMpPlayerListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetRecentMpPlayerListRsp_default_instance_);_ServerGetPlayerBlacklistReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetPlayerBlacklistReq_default_instance_);_ServerGetPlayerBlacklistRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetPlayerBlacklistRsp_default_instance_);_ServerPrivateChatReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPrivateChatReq_default_instance_);_ServerPrivateChatRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPrivateChatRsp_default_instance_);_ServerPullPrivateChatReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPullPrivateChatReq_default_instance_);_ServerPullRecentChatReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPullRecentChatReq_default_instance_);_ServerUpdateActivitySocialDataNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerUpdateActivitySocialDataNotify_default_instance_);_ServerBlessingGetFriendPicListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerBlessingGetFriendPicListReq_default_instance_);_ServerBlessingGetFriendPicListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerBlessingGetFriendPicListRsp_default_instance_);_ServerGetFriendBriefReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetFriendBriefReq_default_instance_);_ServerGetFriendBriefRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetFriendBriefRsp_default_instance_);_ServerUpdateShowAvatarInfoNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerUpdateShowAvatarInfoNotify_default_instance_);_ServerGetFriendShowAvatarInfoReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetFriendShowAvatarInfoReq_default_instance_);_ServerGetFriendShowAvatarInfoRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetFriendShowAvatarInfoRsp_default_instance_);_ServerReadPrivateChatReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerReadPrivateChatReq_default_instance_);_ServerGetFriendShowNameCardInfoReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetFriendShowNameCardInfoReq_default_instance_);_ServerGetFriendShowNameCardInfoRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetFriendShowNameCardInfoRsp_default_instance_);_ServerGetAskFriendBriefReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetAskFriendBriefReq_default_instance_);_ServerGetAskFriendBriefRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetAskFriendBriefRsp_default_instance_);_ServerAddPsnFriendReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerAddPsnFriendReq_default_instance_);_ServerAddPsnFriendRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerAddPsnFriendRsp_default_instance_);_ServerAddPsnBlackReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerAddPsnBlackReq_default_instance_);_ServerAddPsnBlackRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerAddPsnBlackRsp_default_instance_);_ServerFriendInfoChangeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerFriendInfoChangeNotify_default_instance_);_ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry_default_instance_);_ServerPlantFlowerGetFriendFlowerDataReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPlantFlowerGetFriendFlowerDataReq_default_instance_);_ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry_default_instance_);_ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry_default_instance_);_ServerPlantFlowerGetFriendFlowerDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPlantFlowerGetFriendFlowerDataRsp_default_instance_);_ServerPlantFlowerGetFriendFlowerWishListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPlantFlowerGetFriendFlowerWishListReq_default_instance_);_ServerPlantFlowerGetFriendFlowerWishListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPlantFlowerGetFriendFlowerWishListRsp_default_instance_);_ServerWinterCampGetFriendItemDataReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerWinterCampGetFriendItemDataReq_default_instance_);_ServerWinterCampGetFriendItemDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerWinterCampGetFriendItemDataRsp_default_instance_);_ServerWinterCampGetFriendWishListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerWinterCampGetFriendWishListReq_default_instance_);_ServerWinterCampGetFriendWishListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerWinterCampGetFriendWishListRsp_default_instance_);_ServerGetCustomDungeonReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetCustomDungeonReq_default_instance_);_ServerCustomDungeon_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerCustomDungeon_default_instance_);_CustomDungeonAdventure_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CustomDungeonAdventure_default_instance_);_ServerGetCustomDungeonRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetCustomDungeonRsp_default_instance_);_ServerSaveCustomDungeonReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerSaveCustomDungeonReq_default_instance_);_ServerSaveCustomDungeonRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerSaveCustomDungeonRsp_default_instance_);_ServerPublishCustomDungeonReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPublishCustomDungeonReq_default_instance_);_ServerPublishCustomDungeonRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPublishCustomDungeonRsp_default_instance_);_ServerRemoveCustomDungeonReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerRemoveCustomDungeonReq_default_instance_);_ServerRemoveCustomDungeonRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerRemoveCustomDungeonRsp_default_instance_);_ServerUpdateCustomDungeonSocialNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerUpdateCustomDungeonSocialNotify_default_instance_);_ServerGetCustomDungeonBriefReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetCustomDungeonBriefReq_default_instance_);_ServerGetCustomDungeonBriefRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetCustomDungeonBriefRsp_default_instance_);_ServerGetRecommendCustomDungeonReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetRecommendCustomDungeonReq_default_instance_);_ServerGetRecommendCustomDungeonRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetRecommendCustomDungeonRsp_default_instance_);_ServerAddFriendByMuipReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerAddFriendByMuipReq_default_instance_);_ServerAddFriendByMuipRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerAddFriendByMuipRsp_default_instance_);_ServerDelFriendByMuipReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerDelFriendByMuipReq_default_instance_);_ServerDelFriendByMuipRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerDelFriendByMuipRsp_default_instance_);_ServerAddFriendAskByMuipReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerAddFriendAskByMuipReq_default_instance_);_ServerAddFriendAskByMuipRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerAddFriendAskByMuipRsp_default_instance_);_ServerDelFriendAskByMuipReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerDelFriendAskByMuipReq_default_instance_);_ServerDelFriendAskByMuipRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerDelFriendAskByMuipRsp_default_instance_);_ServerCustomDungeonCacheInvalidNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerCustomDungeonCacheInvalidNotify_default_instance_);_ServerCustomDungeonSocialGmNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerCustomDungeonSocialGmNotify_default_instance_);_ServerCustomDungeonFirstLikeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerCustomDungeonFirstLikeNotify_default_instance_);_ServerGetUgcReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetUgcReq_default_instance_);_ServerGetUgcRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetUgcRsp_default_instance_);_ServerGetUgcBriefReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetUgcBriefReq_default_instance_);_ServerGetUgcBriefRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerGetUgcBriefRsp_default_instance_);_ServerMultiGetUgcBriefReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerMultiGetUgcBriefReq_default_instance_);_ServerMultiGetUgcBriefRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerMultiGetUgcBriefRsp_default_instance_);_ServerSaveUgcReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerSaveUgcReq_default_instance_);_ServerSaveUgcRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerSaveUgcRsp_default_instance_);_ServerPublishUgcReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPublishUgcReq_default_instance_);_ServerPublishUgcRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerPublishUgcRsp_default_instance_);_ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry_default_instance_);_ServerCheckUgcUpdateReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerCheckUgcUpdateReq_default_instance_);_ServerCheckUgcUpdateRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerCheckUgcUpdateRsp_default_instance_);_ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry_default_instance_);_ServerActivityGetFriendGiftDataReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerActivityGetFriendGiftDataReq_default_instance_);_ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry_default_instance_);_ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry_default_instance_);_ServerActivityGetFriendGiftDataRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerActivityGetFriendGiftDataRsp_default_instance_);_ServerActivityGetFriendGiftWishListReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerActivityGetFriendGiftWishListReq_default_instance_);_ServerActivityGetFriendGiftWishListRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerActivityGetFriendGiftWishListRsp_default_instance_);_SyncPlayerIpRegionNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SyncPlayerIpRegionNotify_default_instance_);_ServerGetSocialDetailRsp_default_instance_._instance.get_mutable()->social_detail_ = const_cast< ::proto::SocialDetail*>(
      ::proto::SocialDetail::internal_default_instance());
  _ServerDealAddFriendRsp_default_instance_._instance.get_mutable()->target_friend_brief_ = const_cast< ::proto::FriendBrief*>(
      ::proto::FriendBrief::internal_default_instance());
  _SyncPlayerBriefNotify_default_instance_._instance.get_mutable()->basic_brief_data_ = const_cast< ::proto::PlayerBasicBriefData*>(
      ::proto::PlayerBasicBriefData::internal_default_instance());
  _SyncPlayerBriefNotify_default_instance_._instance.get_mutable()->mp_brief_data_ = const_cast< ::proto::PlayerMpBriefData*>(
      ::proto::PlayerMpBriefData::internal_default_instance());
  _SyncPlayerBriefNotify_default_instance_._instance.get_mutable()->social_brief_data_ = const_cast< ::proto::PlayerSocialBriefData*>(
      ::proto::PlayerSocialBriefData::internal_default_instance());
  _SyncPlayerBriefNotify_default_instance_._instance.get_mutable()->home_brief_data_ = const_cast< ::proto::PlayerHomeBriefData*>(
      ::proto::PlayerHomeBriefData::internal_default_instance());
  _ServerAddBlacklistRsp_default_instance_._instance.get_mutable()->target_friend_brief_ = const_cast< ::proto::FriendBrief*>(
      ::proto::FriendBrief::internal_default_instance());
  _ServerPrivateChatReq_default_instance_._instance.get_mutable()->chat_info_ = const_cast< ::proto::ChatInfo*>(
      ::proto::ChatInfo::internal_default_instance());
  _ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry_default_instance_._instance.get_mutable());
  _ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry_default_instance_._instance.get_mutable());
  _ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry_default_instance_._instance.get_mutable());
  _ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ServerCustomDungeon_default_instance_._instance.get_mutable()->setting_ = const_cast< ::proto::CustomDungeonSettingBin*>(
      ::proto::CustomDungeonSettingBin::internal_default_instance());
  _CustomDungeonAdventure_default_instance_._instance.get_mutable()->custom_dungeon_ = const_cast< ::proto::ServerCustomDungeon*>(
      ::proto::ServerCustomDungeon::internal_default_instance());
  _CustomDungeonAdventure_default_instance_._instance.get_mutable()->dungeon_brief_ = const_cast< ::proto::CustomDungeonBriefRedisData*>(
      ::proto::CustomDungeonBriefRedisData::internal_default_instance());
  _ServerGetCustomDungeonRsp_default_instance_._instance.get_mutable()->custom_dungeon_ = const_cast< ::proto::ServerCustomDungeon*>(
      ::proto::ServerCustomDungeon::internal_default_instance());
  _ServerSaveCustomDungeonReq_default_instance_._instance.get_mutable()->custom_dungeon_ = const_cast< ::proto::ServerCustomDungeon*>(
      ::proto::ServerCustomDungeon::internal_default_instance());
  _ServerPublishCustomDungeonReq_default_instance_._instance.get_mutable()->abstract_ = const_cast< ::proto::CustomDungeonAbstractBin*>(
      ::proto::CustomDungeonAbstractBin::internal_default_instance());
  _ServerAddFriendByMuipRsp_default_instance_._instance.get_mutable()->target_friend_brief_ = const_cast< ::proto::FriendBrief*>(
      ::proto::FriendBrief::internal_default_instance());
  _ServerGetUgcRsp_default_instance_._instance.get_mutable()->ugc_redis_data_ = const_cast< ::proto::UgcRedisData*>(
      ::proto::UgcRedisData::internal_default_instance());
  _ServerGetUgcRsp_default_instance_._instance.get_mutable()->ugc_brief_redis_data_ = const_cast< ::proto::UgcBriefRedisData*>(
      ::proto::UgcBriefRedisData::internal_default_instance());
  _ServerGetUgcBriefRsp_default_instance_._instance.get_mutable()->ugc_brief_redis_data_ = const_cast< ::proto::UgcBriefRedisData*>(
      ::proto::UgcBriefRedisData::internal_default_instance());
  _ServerSaveUgcReq_default_instance_._instance.get_mutable()->ugc_redis_data_ = const_cast< ::proto::UgcRedisData*>(
      ::proto::UgcRedisData::internal_default_instance());
  _ServerSaveUgcReq_default_instance_._instance.get_mutable()->ugc_brief_redis_data_ = const_cast< ::proto::UgcBriefRedisData*>(
      ::proto::UgcBriefRedisData::internal_default_instance());
  _ServerSaveUgcRsp_default_instance_._instance.get_mutable()->ugc_brief_redis_data_ = const_cast< ::proto::UgcBriefRedisData*>(
      ::proto::UgcBriefRedisData::internal_default_instance());
  _ServerPublishUgcReq_default_instance_._instance.get_mutable()->ugc_brief_redis_data_ = const_cast< ::proto::UgcBriefRedisData*>(
      ::proto::UgcBriefRedisData::internal_default_instance());
  _ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry_default_instance_._instance.get_mutable());
  _ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry_default_instance_._instance.get_mutable());
  _ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry_default_instance_._instance.get_mutable());
  _ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry_default_instance_._instance.get_mutable());
  _ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _SyncPlayerIpRegionNotify_default_instance_._instance.get_mutable()->social_brief_data_ = const_cast< ::proto::PlayerSocialBriefData*>(
      ::proto::PlayerSocialBriefData::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n#server_only/cmd_social.server.proto\022\005p"
      "roto\032\034server_only/redis_data.proto\032#serv"
      "er_only/bin_common.server.proto\032\024cmd/cmd"
      "_social.proto\032\023cmd/cmd_scene.proto\032\026cmd/"
      "cmd_activity.proto\032\021cmd/cmd_ugc.proto\032\014d"
      "efine.proto\"\'\n\022AddAskFriendNotify\022\021\n\tsou"
      "rce_id\030\001 \001(\r\"\036\n\034ServerGetPlayerFriendLis"
      "tReq\"\302\001\n\034ServerGetPlayerFriendListRsp\022\017\n"
      "\007retcode\030\001 \001(\005\022\027\n\017friend_uid_list\030\002 \003(\r\022"
      "\037\n\027ask_add_friend_uid_list\030\003 \003(\r\022\032\n\022blac"
      "klist_uid_list\030\004 \003(\r\022\033\n\023psn_friend_uid_l"
      "ist\030\005 \003(\r\022\036\n\026psn_blacklist_uid_list\030\006 \003("
      "\r\".\n\030ServerGetSocialDetailReq\022\022\n\ntarget_"
      "uid\030\001 \001(\r\"W\n\030ServerGetSocialDetailRsp\022\017\n"
      "\007retcode\030\001 \001(\005\022*\n\rsocial_detail\030\002 \001(\0132\023."
      "proto.SocialDetail\"+\n\025ServerAskAddFriend"
      "Req\022\022\n\ntarget_uid\030\001 \001(\r\"<\n\025ServerAskAddF"
      "riendRsp\022\017\n\007retcode\030\001 \001(\005\022\022\n\ntarget_uid\030"
      "\002 \001(\r\"l\n\026ServerDealAddFriendReq\022\022\n\ntarge"
      "t_uid\030\001 \001(\r\022>\n\026deal_add_friend_result\030\002 "
      "\001(\0162\036.proto.DealAddFriendResultType\"\311\001\n\026"
      "ServerDealAddFriendRsp\022\017\n\007retcode\030\001 \001(\005\022"
      "\022\n\ntarget_uid\030\002 \001(\r\022>\n\026deal_add_friend_r"
      "esult\030\003 \001(\0162\036.proto.DealAddFriendResultT"
      "ype\022\031\n\021target_friend_num\030\004 \001(\r\022/\n\023target"
      "_friend_brief\030\005 \001(\0132\022.proto.FriendBrief\""
      "+\n\025ServerDeleteFriendReq\022\022\n\ntarget_uid\030\001"
      " \001(\r\"W\n\025ServerDeleteFriendRsp\022\017\n\007retcode"
      "\030\001 \001(\005\022\022\n\ntarget_uid\030\002 \001(\r\022\031\n\021target_fri"
      "end_num\030\003 \001(\r\"*\n\025ServerSetSignatureReq\022\021"
      "\n\tsignature\030\001 \001(\t\";\n\025ServerSetSignatureR"
      "sp\022\017\n\007retcode\030\001 \001(\005\022\021\n\tsignature\030\002 \001(\t\"8"
      "\n\035ServerGetPlayerFriendBriefReq\022\027\n\017frien"
      "d_uid_list\030\001 \003(\r\"_\n\035ServerGetPlayerFrien"
      "dBriefRsp\022\017\n\007retcode\030\001 \001(\005\022-\n\021friend_bri"
      "ef_list\030\002 \003(\0132\022.proto.FriendBrief\"]\n\027Sev"
      "erGetPS4FriendUidReq\022\023\n\013psn_id_list\030\001 \003("
      "\t\022-\n\016request_reason\030\002 \001(\0162\025.proto.PSRequ"
      "stReason\"\235\001\n\027SeverGetPS4FriendUidRsp\022\017\n\007"
      "retcode\030\001 \001(\005\022\023\n\013uid_id_list\030\002 \003(\r\022-\n\016re"
      "quest_reason\030\003 \001(\0162\025.proto.PSRequstReaso"
      "n\022-\n\021friend_brief_list\030\004 \003(\0132\022.proto.Fri"
      "endBrief\"\355\001\n\025SyncPlayerBriefNotify\0225\n\020ba"
      "sic_brief_data\030\001 \001(\0132\033.proto.PlayerBasic"
      "BriefData\022/\n\rmp_brief_data\030\002 \001(\0132\030.proto"
      ".PlayerMpBriefData\0227\n\021social_brief_data\030"
      "\003 \001(\0132\034.proto.PlayerSocialBriefData\0223\n\017h"
      "ome_brief_data\030\004 \001(\0132\032.proto.PlayerHomeB"
      "riefData\">\n\025ServerAddBlacklistReq\022\022\n\ntar"
      "get_uid\030\001 \001(\r\022\021\n\tis_friend\030\002 \001(\010\"Y\n\025Serv"
      "erAddBlacklistRsp\022\017\n\007retcode\030\001 \001(\005\022/\n\023ta"
      "rget_friend_brief\030\002 \001(\0132\022.proto.FriendBr"
      "ief\".\n\030ServerRemoveBlacklistReq\022\022\n\ntarge"
      "t_uid\030\001 \001(\r\"\?\n\030ServerRemoveBlacklistRsp\022"
      "\017\n\007retcode\030\001 \001(\005\022\022\n\ntarget_uid\030\002 \001(\r\"@\n\036"
      "ServerGetRecentMpPlayerListReq\022\036\n\026recent"
      "_player_uid_list\030\001 \003(\r\"j\n\036ServerGetRecen"
      "tMpPlayerListRsp\022\017\n\007retcode\030\001 \001(\005\0227\n\033rec"
      "ent_mp_player_brief_list\030\002 \003(\0132\022.proto.F"
      "riendBrief\"9\n\033ServerGetPlayerBlacklistRe"
      "q\022\032\n\022blacklist_uid_list\030\001 \003(\r\"U\n\033ServerG"
      "etPlayerBlacklistRsp\022\017\n\007retcode\030\001 \001(\005\022%\n"
      "\tblacklist\030\002 \003(\0132\022.proto.FriendBrief\"Q\n\024"
      "ServerPrivateChatReq\022\"\n\tchat_info\030\001 \001(\0132"
      "\017.proto.ChatInfo\022\025\n\ris_ps4_friend\030\002 \001(\010\""
      "\'\n\024ServerPrivateChatRsp\022\017\n\007retcode\030\001 \001(\005"
      "\"|\n\030ServerPullPrivateChatReq\022\020\n\010from_uid"
      "\030\001 \001(\r\022\016\n\006to_uid\030\002 \001(\r\022\025\n\rfrom_sequence\030"
      "\003 \001(\r\022\020\n\010pull_num\030\004 \001(\r\022\025\n\ris_ps4_friend"
      "\030\005 \001(\010\"B\n\027ServerPullRecentChatReq\022\025\n\rfro"
      "m_sequence\030\001 \001(\r\022\020\n\010pull_num\030\002 \001(\r\"[\n$Se"
      "rverUpdateActivitySocialDataNotify\0223\n\020so"
      "cial_data_list\030\001 \003(\0132\031.proto.ActivitySoc"
      "ialData\"Q\n!ServerBlessingGetFriendPicLis"
      "tReq\022\027\n\017friend_uid_list\030\001 \003(\r\022\023\n\013schedul"
      "e_id\030\002 \001(\r\"p\n!ServerBlessingGetFriendPic"
      "ListRsp\022\017\n\007retcode\030\001 \001(\005\022:\n\024friend_pic_d"
      "ata_list\030\002 \003(\0132\034.proto.BlessingFriendPic"
      "Data\"\\\n\027ServerGetFriendBriefReq\022\020\n\010uid_l"
      "ist\030\001 \003(\r\022/\n\006reason\030\002 \001(\0162\037.proto.Friend"
      "BriefRequestReason\"\212\001\n\027ServerGetFriendBr"
      "iefRsp\022\017\n\007retcode\030\001 \001(\005\022-\n\021friend_brief_"
      "list\030\002 \003(\0132\022.proto.FriendBrief\022/\n\006reason"
      "\030\003 \001(\0162\037.proto.FriendBriefRequestReason\""
      "X\n ServerUpdateShowAvatarInfoNotify\0224\n\025s"
      "how_avatar_info_list\030\001 \003(\0132\025.proto.ShowA"
      "vatarInfo\"/\n ServerGetFriendShowAvatarIn"
      "foReq\022\013\n\003uid\030\001 \001(\r\"v\n ServerGetFriendSho"
      "wAvatarInfoRsp\022\017\n\007retcode\030\001 \001(\005\022\013\n\003uid\030\002"
      " \001(\r\0224\n\025show_avatar_info_list\030\003 \003(\0132\025.pr"
      "oto.ShowAvatarInfo\"W\n\030ServerReadPrivateC"
      "hatReq\022\020\n\010from_uid\030\001 \001(\r\022\022\n\ntarget_uid\030\002"
      " \001(\r\022\025\n\ris_ps4_friend\030\003 \001(\010\"1\n\"ServerGet"
      "FriendShowNameCardInfoReq\022\013\n\003uid\030\001 \001(\r\"b"
      "\n\"ServerGetFriendShowNameCardInfoRsp\022\017\n\007"
      "retcode\030\001 \001(\005\022\013\n\003uid\030\002 \001(\r\022\036\n\026show_name_"
      "card_id_list\030\003 \003(\r\"=\n\032ServerGetAskFriend"
      "BriefReq\022\037\n\027ask_add_friend_uid_list\030\001 \003("
      "\r\"d\n\032ServerGetAskFriendBriefRsp\022\017\n\007retco"
      "de\030\001 \001(\005\0225\n\031ask_add_friend_brief_list\030\002 "
      "\003(\0132\022.proto.FriendBrief\">\n\025ServerAddPsnF"
      "riendReq\022%\n\035force_add_psn_friend_uid_lis"
      "t\030\001 \003(\r\"\214\001\n\025ServerAddPsnFriendRsp\022\017\n\007ret"
      "code\030\001 \001(\005\022%\n\035force_add_psn_friend_uid_l"
      "ist\030\002 \003(\r\022;\n\037force_add_psn_friend_brief_"
      "list\030\003 \003(\0132\022.proto.FriendBrief\"<\n\024Server"
      "AddPsnBlackReq\022$\n\034force_add_psn_black_ui"
      "d_list\030\001 \003(\r\"M\n\024ServerAddPsnBlackRsp\022\017\n\007"
      "retcode\030\001 \001(\005\022$\n\034force_add_psn_black_uid"
      "_list\030\002 \003(\r\"]\n\034ServerFriendInfoChangeNot"
      "ify\022\016\n\006my_uid\030\001 \001(\r\022\024\n\014my_online_id\030\002 \001("
      "\t\022\027\n\017notify_uid_list\030\003 \003(\r\"\356\001\n\'ServerPla"
      "ntFlowerGetFriendFlowerDataReq\022\023\n\013schedu"
      "le_id\030\001 \001(\r\022\022\n\nfriend_uid\030\002 \001(\r\022a\n\023give_"
      "flower_num_map\030\003 \003(\0132D.proto.ServerPlant"
      "FlowerGetFriendFlowerDataReq.GiveFlowerN"
      "umMapEntry\0327\n\025GiveFlowerNumMapEntry\022\013\n\003k"
      "ey\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"\233\003\n\'ServerPl"
      "antFlowerGetFriendFlowerDataRsp\022\017\n\007retco"
      "de\030\001 \001(\005\022\023\n\013schedule_id\030\002 \001(\r\022\022\n\nfriend_"
      "uid\030\003 \001(\r\022a\n\023give_flower_num_map\030\004 \003(\0132D"
      ".proto.ServerPlantFlowerGetFriendFlowerD"
      "ataRsp.GiveFlowerNumMapEntry\022a\n\023have_flo"
      "wer_num_map\030\005 \003(\0132D.proto.ServerPlantFlo"
      "werGetFriendFlowerDataRsp.HaveFlowerNumM"
      "apEntry\0327\n\025GiveFlowerNumMapEntry\022\013\n\003key\030"
      "\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\0327\n\025HaveFlowerNu"
      "mMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028"
      "\001\"[\n+ServerPlantFlowerGetFriendFlowerWis"
      "hListReq\022\023\n\013schedule_id\030\001 \001(\r\022\027\n\017friend_"
      "uid_list\030\002 \003(\r\"\234\001\n+ServerPlantFlowerGetF"
      "riendFlowerWishListRsp\022\017\n\007retcode\030\001 \001(\005\022"
      "\023\n\013schedule_id\030\002 \001(\r\022G\n\027friend_flower_wi"
      "sh_list\030\003 \003(\0132&.proto.PlantFlowerFriendF"
      "lowerWishData\"y\n$ServerWinterCampGetFrie"
      "ndItemDataReq\022\023\n\013schedule_id\030\001 \001(\r\022\022\n\nfr"
      "iend_uid\030\002 \001(\r\022(\n\016give_item_list\030\003 \003(\0132\020"
      ".proto.ItemParam\"\266\001\n$ServerWinterCampGet"
      "FriendItemDataRsp\022\017\n\007retcode\030\001 \001(\005\022\023\n\013sc"
      "hedule_id\030\002 \001(\r\022\022\n\nfriend_uid\030\003 \001(\r\022(\n\016g"
      "ive_item_list\030\004 \003(\0132\020.proto.ItemParam\022*\n"
      "\020friend_item_list\030\005 \003(\0132\020.proto.ItemPara"
      "m\"T\n$ServerWinterCampGetFriendWishListRe"
      "q\022\023\n\013schedule_id\030\001 \001(\r\022\027\n\017friend_uid_lis"
      "t\030\002 \003(\r\"\205\001\n$ServerWinterCampGetFriendWis"
      "hListRsp\022\017\n\007retcode\030\001 \001(\005\022\023\n\013schedule_id"
      "\030\002 \001(\r\0227\n\016wish_data_list\030\003 \003(\0132\037.proto.W"
      "interCampFriendWishData\"^\n\031ServerGetCust"
      "omDungeonReq\022\024\n\014dungeon_guid\030\001 \001(\004\022\027\n\017is"
      "_self_dungeon\030\002 \001(\010\022\022\n\nenter_type\030\003 \001(\r\""
      "\345\001\n\023ServerCustomDungeon\022\024\n\014dungeon_guid\030"
      "\001 \001(\004\022\022\n\ndungeon_id\030\002 \001(\r\0224\n\troom_list\030\003"
      " \003(\0132!.proto.CustomDungeonRoomRedisData\022"
      "/\n\007setting\030\004 \001(\0132\036.proto.CustomDungeonSe"
      "ttingBin\022\017\n\007version\030\005 \001(\r\022\020\n\010is_liked\030\006 "
      "\001(\010\022\032\n\022first_publish_time\030\007 \001(\r\"\207\001\n\026Cust"
      "omDungeonAdventure\0222\n\016custom_dungeon\030\001 \001"
      "(\0132\032.proto.ServerCustomDungeon\0229\n\rdungeo"
      "n_brief\030\002 \001(\0132\".proto.CustomDungeonBrief"
      "RedisData\"\206\001\n\031ServerGetCustomDungeonRsp\022"
      "\017\n\007retcode\030\001 \001(\005\022\020\n\010is_exist\030\002 \001(\010\0222\n\016cu"
      "stom_dungeon\030\003 \001(\0132\032.proto.ServerCustomD"
      "ungeon\022\022\n\nenter_type\030\004 \001(\r\"|\n\032ServerSave"
      "CustomDungeonReq\0222\n\016custom_dungeon\030\001 \001(\013"
      "2\032.proto.ServerCustomDungeon\022\017\n\007room_id\030"
      "\002 \001(\r\022\031\n\021is_ever_published\030\003 \001(\010\"e\n\032Serv"
      "erSaveCustomDungeonRsp\022\017\n\007retcode\030\001 \001(\005\022"
      "\024\n\014dungeon_guid\030\002 \001(\004\022\017\n\007room_id\030\003 \001(\r\022\017"
      "\n\007version\030\004 \001(\r\"\360\001\n\035ServerPublishCustomD"
      "ungeonReq\022\024\n\014dungeon_guid\030\001 \001(\004\0221\n\010abstr"
      "act\030\002 \001(\0132\037.proto.CustomDungeonAbstractB"
      "in\022\024\n\014deploy_score\030\003 \001(\r\022\030\n\020creator_nick"
      "name\030\004 \001(\t\022\020\n\010group_id\030\005 \001(\r\022\013\n\003uid\030\006 \001("
      "\r\022\014\n\004lang\030\007 \001(\r\022\020\n\010tag_list\030\010 \003(\r\022\027\n\017is_"
      "psn_platform\030\t \001(\010\"\\\n\035ServerPublishCusto"
      "mDungeonRsp\022\017\n\007retcode\030\001 \001(\005\022\024\n\014dungeon_"
      "guid\030\002 \001(\004\022\024\n\014publish_time\030\003 \001(\r\"F\n\034Serv"
      "erRemoveCustomDungeonReq\022\024\n\014dungeon_guid"
      "\030\001 \001(\004\022\020\n\010group_id\030\002 \001(\r\"E\n\034ServerRemove"
      "CustomDungeonRsp\022\017\n\007retcode\030\001 \001(\005\022\024\n\014dun"
      "geon_guid\030\002 \001(\004\"\320\001\n%ServerUpdateCustomDu"
      "ngeonSocialNotify\022\024\n\014dungeon_guid\030\001 \001(\004\022"
      "9\n\013update_type\030\002 \001(\0162$.proto.CustomDunge"
      "onSocialUpdateType\022\027\n\017is_cancel_store\030\003 "
      "\001(\010\022\026\n\016is_cancel_like\030\004 \001(\010\022\016\n\006is_win\030\005 "
      "\001(\010\022\025\n\ris_ever_liked\030\006 \001(\010\"o\n\036ServerGetC"
      "ustomDungeonBriefReq\022\031\n\021dungeon_guid_lis"
      "t\030\001 \003(\004\0222\n\010get_type\030\002 \001(\0162 .proto.Custom"
      "DungeonBriefGetType\"\300\001\n\036ServerGetCustomD"
      "ungeonBriefRsp\022\017\n\007retcode\030\001 \001(\005\022\031\n\021dunge"
      "on_guid_list\030\002 \003(\004\022>\n\022dungeon_brief_list"
      "\030\003 \003(\0132\".proto.CustomDungeonBriefRedisDa"
      "ta\0222\n\010get_type\030\004 \001(\0162 .proto.CustomDunge"
      "onBriefGetType\"m\n\"ServerGetRecommendCust"
      "omDungeonReq\022\031\n\021dungeon_guid_list\030\001 \003(\004\022"
      "\020\n\010group_id\030\002 \001(\r\022\032\n\022recommend_interval\030"
      "\003 \001(\r\"u\n\"ServerGetRecommendCustomDungeon"
      "Rsp\022\017\n\007retcode\030\001 \001(\005\022>\n\022dungeon_brief_li"
      "st\030\002 \003(\0132\".proto.CustomDungeonBriefRedis"
      "Data\".\n\030ServerAddFriendByMuipReq\022\022\n\ntarg"
      "et_uid\030\001 \001(\r\"\213\001\n\030ServerAddFriendByMuipRs"
      "p\022\017\n\007retcode\030\001 \001(\005\022\022\n\ntarget_uid\030\002 \001(\r\022\031"
      "\n\021target_friend_num\030\003 \001(\r\022/\n\023target_frie"
      "nd_brief\030\004 \001(\0132\022.proto.FriendBrief\".\n\030Se"
      "rverDelFriendByMuipReq\022\022\n\ntarget_uid\030\001 \001"
      "(\r\"Z\n\030ServerDelFriendByMuipRsp\022\017\n\007retcod"
      "e\030\001 \001(\005\022\022\n\ntarget_uid\030\002 \001(\r\022\031\n\021target_fr"
      "iend_num\030\003 \001(\r\"1\n\033ServerAddFriendAskByMu"
      "ipReq\022\022\n\ntarget_uid\030\001 \001(\r\"B\n\033ServerAddFr"
      "iendAskByMuipRsp\022\017\n\007retcode\030\001 \001(\005\022\022\n\ntar"
      "get_uid\030\002 \001(\r\"1\n\033ServerDelFriendAskByMui"
      "pReq\022\022\n\ntarget_uid\030\001 \001(\r\"B\n\033ServerDelFri"
      "endAskByMuipRsp\022\017\n\007retcode\030\001 \001(\005\022\022\n\ntarg"
      "et_uid\030\002 \001(\r\"=\n%ServerCustomDungeonCache"
      "InvalidNotify\022\024\n\014dungeon_guid\030\001 \001(\004\"[\n!S"
      "erverCustomDungeonSocialGmNotify\022\024\n\014dung"
      "eon_guid\030\001 \001(\004\022\023\n\013update_type\030\002 \001(\r\022\013\n\003n"
      "um\030\003 \001(\r\"$\n\"ServerCustomDungeonFirstLike"
      "Notify\"\236\001\n\017ServerGetUgcReq\022 \n\010ugc_type\030\001"
      " \001(\0162\016.proto.UgcType\022\020\n\010ugc_guid\030\002 \001(\004\022\017"
      "\n\007is_edit\030\003 \001(\010\022\030\n\020is_require_brief\030\004 \001("
      "\010\022,\n\020ugc_record_usage\030\005 \001(\0162\022.proto.Reco"
      "rdUsage\"\214\002\n\017ServerGetUgcRsp\022\017\n\007retcode\030\001"
      " \001(\005\022 \n\010ugc_type\030\002 \001(\0162\016.proto.UgcType\022\020"
      "\n\010ugc_guid\030\003 \001(\004\022\017\n\007is_edit\030\004 \001(\010\022\020\n\010is_"
      "exist\030\005 \001(\010\022,\n\020ugc_record_usage\030\006 \001(\0162\022."
      "proto.RecordUsage\022+\n\016ugc_redis_data\030\007 \001("
      "\0132\023.proto.UgcRedisData\0226\n\024ugc_brief_redi"
      "s_data\030\010 \001(\0132\030.proto.UgcBriefRedisData\"J"
      "\n\024ServerGetUgcBriefReq\022 \n\010ugc_type\030\001 \001(\016"
      "2\016.proto.UgcType\022\020\n\010ugc_guid\030\002 \001(\004\"\223\001\n\024S"
      "erverGetUgcBriefRsp\022\017\n\007retcode\030\001 \001(\005\022 \n\010"
      "ugc_type\030\002 \001(\0162\016.proto.UgcType\022\020\n\010is_exi"
      "st\030\003 \001(\010\0226\n\024ugc_brief_redis_data\030\004 \001(\0132\030"
      ".proto.UgcBriefRedisData\"T\n\031ServerMultiG"
      "etUgcBriefReq\022 \n\010ugc_type\030\001 \001(\0162\016.proto."
      "UgcType\022\025\n\rugc_guid_list\030\002 \003(\004\"\200\001\n\031Serve"
      "rMultiGetUgcBriefRsp\022\017\n\007retcode\030\001 \001(\005\022 \n"
      "\010ugc_type\030\002 \001(\0162\016.proto.UgcType\0220\n\016ugc_b"
      "rief_list\030\003 \003(\0132\030.proto.UgcBriefRedisDat"
      "a\"\231\001\n\020ServerSaveUgcReq\022 \n\010ugc_type\030\001 \001(\016"
      "2\016.proto.UgcType\022+\n\016ugc_redis_data\030\002 \001(\013"
      "2\023.proto.UgcRedisData\0226\n\024ugc_brief_redis"
      "_data\030\003 \001(\0132\030.proto.UgcBriefRedisData\"}\n"
      "\020ServerSaveUgcRsp\022\017\n\007retcode\030\001 \001(\005\022 \n\010ug"
      "c_type\030\002 \001(\0162\016.proto.UgcType\0226\n\024ugc_brie"
      "f_redis_data\030\003 \001(\0132\030.proto.UgcBriefRedis"
      "Data\"o\n\023ServerPublishUgcReq\022 \n\010ugc_type\030"
      "\001 \001(\0162\016.proto.UgcType\0226\n\024ugc_brief_redis"
      "_data\030\002 \001(\0132\030.proto.UgcBriefRedisData\"k\n"
      "\023ServerPublishUgcRsp\022\017\n\007retcode\030\001 \001(\005\022 \n"
      "\010ugc_type\030\002 \001(\0162\016.proto.UgcType\022\020\n\010ugc_g"
      "uid\030\003 \001(\004\022\017\n\007version\030\004 \001(\r\"\312\001\n\027ServerChe"
      "ckUgcUpdateReq\022 \n\010ugc_type\030\001 \001(\0162\016.proto"
      ".UgcType\022S\n\024ugc_guid_version_map\030\002 \003(\01325"
      ".proto.ServerCheckUgcUpdateReq.UgcGuidVe"
      "rsionMapEntry\0328\n\026UgcGuidVersionMapEntry\022"
      "\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001(\r:\0028\001\"\212\001\n\027Serv"
      "erCheckUgcUpdateRsp\022\017\n\007retcode\030\001 \001(\005\022 \n\010"
      "ugc_type\030\002 \001(\0162\016.proto.UgcType\022\034\n\024update"
      "_ugc_guid_list\030\003 \003(\004\022\036\n\026not_find_ugc_gui"
      "d_list\030\004 \003(\004\"\336\001\n\"ServerActivityGetFriend"
      "GiftDataReq\022\023\n\013schedule_id\030\001 \001(\r\022\022\n\nfrie"
      "nd_uid\030\002 \001(\r\022X\n\021give_gift_num_map\030\003 \003(\0132"
      "=.proto.ServerActivityGetFriendGiftDataR"
      "eq.GiveGiftNumMapEntry\0325\n\023GiveGiftNumMap"
      "Entry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"\200\003"
      "\n\"ServerActivityGetFriendGiftDataRsp\022\017\n\007"
      "retcode\030\001 \001(\005\022\023\n\013schedule_id\030\002 \001(\r\022\022\n\nfr"
      "iend_uid\030\003 \001(\r\022X\n\021give_gift_num_map\030\004 \003("
      "\0132=.proto.ServerActivityGetFriendGiftDat"
      "aRsp.GiveGiftNumMapEntry\022X\n\021have_gift_nu"
      "m_map\030\005 \003(\0132=.proto.ServerActivityGetFri"
      "endGiftDataRsp.HaveGiftNumMapEntry\0325\n\023Gi"
      "veGiftNumMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030"
      "\002 \001(\r:\0028\001\0325\n\023HaveGiftNumMapEntry\022\013\n\003key\030"
      "\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"\207\001\n&ServerActiv"
      "ityGetFriendGiftWishListReq\022\023\n\013schedule_"
      "id\030\001 \001(\r\022\027\n\017friend_uid_list\030\002 \003(\r\022/\n\006rea"
      "son\030\003 \001(\0162\037.proto.FriendBriefRequestReas"
      "on\"\220\001\n&ServerActivityGetFriendGiftWishLi"
      "stRsp\022\017\n\007retcode\030\001 \001(\005\022\023\n\013schedule_id\030\002 "
      "\001(\r\022@\n\025friend_gift_wish_list\030\003 \003(\0132!.pro"
      "to.ActivityFriendGiftWishData\"S\n\030SyncPla"
      "yerIpRegionNotify\0227\n\021social_brief_data\030\001"
      " \001(\0132\034.proto.PlayerSocialBriefData*w\n\016PS"
      "RequstReason\022\022\n\016PS_REASON_NONE\020\000\022\031\n\025PS_R"
      "EASON_FRIEND_LIST\020\001\022\034\n\030PS_REASON_APPLY_E"
      "NTER_MP\020\002\022\030\n\024PS_REASON_BLACK_LIST\020\003*\222\002\n\030"
      "FriendBriefRequestReason\022\034\n\030FRIEND_BRIEF"
      "_REASON_NONE\020\000\022)\n%FRIEND_BRIEF_REASON_BL"
      "ESSING_ACTIVITY\020\001\022-\n)FRIEND_BRIEF_REASON"
      "_PLANT_FLOWER_ACTIVITY\020\002\022,\n(FRIEND_BRIEF"
      "_REASON_WINTER_CAMP_ACTIVITY\020\003\022&\n\"FRIEND"
      "_BRIEF_REASON_GACHA_ACTIVITY\020\004\022(\n$FRIEND"
      "_BRIEF_REASON_VINTAGE_ACTIVITY\020\005*t\n\025Save"
      "CustomDungeonType\022\034\n\030SAVE_CUSTOM_DUNGEON"
      "_NONE\020\000\022\034\n\030SAVE_CUSTOM_DUNGEON_ROOM\020\001\022\037\n"
      "\033SAVE_CUSTOM_DUNGEON_SETTING\020\002*\274\001\n\035Custo"
      "mDungeonSocialUpdateType\022%\n!CUSTOM_DUNGE"
      "ON_SOCIAL_UPDATE_NONE\020\000\022&\n\"CUSTOM_DUNGEO"
      "N_SOCIAL_UPDATE_STORE\020\001\022%\n!CUSTOM_DUNGEO"
      "N_SOCIAL_UPDATE_PLAY\020\002\022%\n!CUSTOM_DUNGEON"
      "_SOCIAL_UPDATE_LIKE\020\003*\317\001\n\031CustomDungeonB"
      "riefGetType\022!\n\035CUSTOM_DUNGEON_BRIEF_GET_"
      "NONE\020\000\022\037\n\033CUSTOM_DUNGEON_BRIEF_GET_MY\020\001\022"
      "\"\n\036CUSTOM_DUNGEON_BRIEF_GET_STORE\020\002\022#\n\037C"
      "USTOM_DUNGEON_BRIEF_GET_SEARCH\020\003\022%\n!CUST"
      "OM_DUNGEON_BRIEF_GET_GM_SCORE\020\004B(Z&githu"
      "b.com/teyvat-helper/hk4e-proto/pbb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 12401);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_only/cmd_social.server.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_server_5fonly_2fredis_5fdata_2eproto::AddDescriptors();
  ::proto::protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::AddDescriptors();
  ::proto::protobuf_cmd_2fcmd_5fsocial_2eproto::AddDescriptors();
  ::proto::protobuf_cmd_2fcmd_5fscene_2eproto::AddDescriptors();
  ::proto::protobuf_cmd_2fcmd_5factivity_2eproto::AddDescriptors();
  ::proto::protobuf_cmd_2fcmd_5fugc_2eproto::AddDescriptors();
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto

const ::google::protobuf::EnumDescriptor* PSRequstReason_descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_enum_descriptors[0];
}
bool PSRequstReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FriendBriefRequestReason_descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_enum_descriptors[1];
}
bool FriendBriefRequestReason_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SaveCustomDungeonType_descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_enum_descriptors[2];
}
bool SaveCustomDungeonType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CustomDungeonSocialUpdateType_descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_enum_descriptors[3];
}
bool CustomDungeonSocialUpdateType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CustomDungeonBriefGetType_descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_enum_descriptors[4];
}
bool CustomDungeonBriefGetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddAskFriendNotify::kSourceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddAskFriendNotify::AddAskFriendNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddAskFriendNotify)
}
AddAskFriendNotify::AddAskFriendNotify(const AddAskFriendNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  source_id_ = from.source_id_;
  // @@protoc_insertion_point(copy_constructor:proto.AddAskFriendNotify)
}

void AddAskFriendNotify::SharedCtor() {
  source_id_ = 0u;
  _cached_size_ = 0;
}

AddAskFriendNotify::~AddAskFriendNotify() {
  // @@protoc_insertion_point(destructor:proto.AddAskFriendNotify)
  SharedDtor();
}

void AddAskFriendNotify::SharedDtor() {
}

void AddAskFriendNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddAskFriendNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddAskFriendNotify& AddAskFriendNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddAskFriendNotify* AddAskFriendNotify::New(::google::protobuf::Arena* arena) const {
  AddAskFriendNotify* n = new AddAskFriendNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddAskFriendNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddAskFriendNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  source_id_ = 0u;
  _internal_metadata_.Clear();
}

bool AddAskFriendNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddAskFriendNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 source_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddAskFriendNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddAskFriendNotify)
  return false;
#undef DO_
}

void AddAskFriendNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddAskFriendNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 source_id = 1;
  if (this->source_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddAskFriendNotify)
}

::google::protobuf::uint8* AddAskFriendNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddAskFriendNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 source_id = 1;
  if (this->source_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddAskFriendNotify)
  return target;
}

size_t AddAskFriendNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddAskFriendNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 source_id = 1;
  if (this->source_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->source_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddAskFriendNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddAskFriendNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AddAskFriendNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddAskFriendNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddAskFriendNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddAskFriendNotify)
    MergeFrom(*source);
  }
}

void AddAskFriendNotify::MergeFrom(const AddAskFriendNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddAskFriendNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.source_id() != 0) {
    set_source_id(from.source_id());
  }
}

void AddAskFriendNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddAskFriendNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddAskFriendNotify::CopyFrom(const AddAskFriendNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddAskFriendNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAskFriendNotify::IsInitialized() const {
  return true;
}

void AddAskFriendNotify::Swap(AddAskFriendNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddAskFriendNotify::InternalSwap(AddAskFriendNotify* other) {
  using std::swap;
  swap(source_id_, other->source_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddAskFriendNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddAskFriendNotify

// uint32 source_id = 1;
void AddAskFriendNotify::clear_source_id() {
  source_id_ = 0u;
}
::google::protobuf::uint32 AddAskFriendNotify::source_id() const {
  // @@protoc_insertion_point(field_get:proto.AddAskFriendNotify.source_id)
  return source_id_;
}
void AddAskFriendNotify::set_source_id(::google::protobuf::uint32 value) {
  
  source_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddAskFriendNotify.source_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetPlayerFriendListReq::ServerGetPlayerFriendListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetPlayerFriendListReq)
}
ServerGetPlayerFriendListReq::ServerGetPlayerFriendListReq(const ServerGetPlayerFriendListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetPlayerFriendListReq)
}

void ServerGetPlayerFriendListReq::SharedCtor() {
  _cached_size_ = 0;
}

ServerGetPlayerFriendListReq::~ServerGetPlayerFriendListReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetPlayerFriendListReq)
  SharedDtor();
}

void ServerGetPlayerFriendListReq::SharedDtor() {
}

void ServerGetPlayerFriendListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetPlayerFriendListReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetPlayerFriendListReq& ServerGetPlayerFriendListReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetPlayerFriendListReq* ServerGetPlayerFriendListReq::New(::google::protobuf::Arena* arena) const {
  ServerGetPlayerFriendListReq* n = new ServerGetPlayerFriendListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetPlayerFriendListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetPlayerFriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ServerGetPlayerFriendListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetPlayerFriendListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetPlayerFriendListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetPlayerFriendListReq)
  return false;
#undef DO_
}

void ServerGetPlayerFriendListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetPlayerFriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetPlayerFriendListReq)
}

::google::protobuf::uint8* ServerGetPlayerFriendListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetPlayerFriendListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetPlayerFriendListReq)
  return target;
}

size_t ServerGetPlayerFriendListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetPlayerFriendListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetPlayerFriendListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetPlayerFriendListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetPlayerFriendListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetPlayerFriendListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetPlayerFriendListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetPlayerFriendListReq)
    MergeFrom(*source);
  }
}

void ServerGetPlayerFriendListReq::MergeFrom(const ServerGetPlayerFriendListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetPlayerFriendListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServerGetPlayerFriendListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetPlayerFriendListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetPlayerFriendListReq::CopyFrom(const ServerGetPlayerFriendListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetPlayerFriendListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetPlayerFriendListReq::IsInitialized() const {
  return true;
}

void ServerGetPlayerFriendListReq::Swap(ServerGetPlayerFriendListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetPlayerFriendListReq::InternalSwap(ServerGetPlayerFriendListReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetPlayerFriendListReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetPlayerFriendListReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetPlayerFriendListRsp::kRetcodeFieldNumber;
const int ServerGetPlayerFriendListRsp::kFriendUidListFieldNumber;
const int ServerGetPlayerFriendListRsp::kAskAddFriendUidListFieldNumber;
const int ServerGetPlayerFriendListRsp::kBlacklistUidListFieldNumber;
const int ServerGetPlayerFriendListRsp::kPsnFriendUidListFieldNumber;
const int ServerGetPlayerFriendListRsp::kPsnBlacklistUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetPlayerFriendListRsp::ServerGetPlayerFriendListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetPlayerFriendListRsp)
}
ServerGetPlayerFriendListRsp::ServerGetPlayerFriendListRsp(const ServerGetPlayerFriendListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_uid_list_(from.friend_uid_list_),
      ask_add_friend_uid_list_(from.ask_add_friend_uid_list_),
      blacklist_uid_list_(from.blacklist_uid_list_),
      psn_friend_uid_list_(from.psn_friend_uid_list_),
      psn_blacklist_uid_list_(from.psn_blacklist_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetPlayerFriendListRsp)
}

void ServerGetPlayerFriendListRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ServerGetPlayerFriendListRsp::~ServerGetPlayerFriendListRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetPlayerFriendListRsp)
  SharedDtor();
}

void ServerGetPlayerFriendListRsp::SharedDtor() {
}

void ServerGetPlayerFriendListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetPlayerFriendListRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetPlayerFriendListRsp& ServerGetPlayerFriendListRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetPlayerFriendListRsp* ServerGetPlayerFriendListRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetPlayerFriendListRsp* n = new ServerGetPlayerFriendListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetPlayerFriendListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetPlayerFriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_uid_list_.Clear();
  ask_add_friend_uid_list_.Clear();
  blacklist_uid_list_.Clear();
  psn_friend_uid_list_.Clear();
  psn_blacklist_uid_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerGetPlayerFriendListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetPlayerFriendListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 friend_uid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_friend_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_friend_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 ask_add_friend_uid_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ask_add_friend_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_ask_add_friend_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 blacklist_uid_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_blacklist_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_blacklist_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 psn_friend_uid_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_psn_friend_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_psn_friend_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 psn_blacklist_uid_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_psn_blacklist_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_psn_blacklist_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetPlayerFriendListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetPlayerFriendListRsp)
  return false;
#undef DO_
}

void ServerGetPlayerFriendListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetPlayerFriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated uint32 friend_uid_list = 2;
  if (this->friend_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _friend_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->friend_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->friend_uid_list(i), output);
  }

  // repeated uint32 ask_add_friend_uid_list = 3;
  if (this->ask_add_friend_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _ask_add_friend_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->ask_add_friend_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->ask_add_friend_uid_list(i), output);
  }

  // repeated uint32 blacklist_uid_list = 4;
  if (this->blacklist_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _blacklist_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->blacklist_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->blacklist_uid_list(i), output);
  }

  // repeated uint32 psn_friend_uid_list = 5;
  if (this->psn_friend_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _psn_friend_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->psn_friend_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->psn_friend_uid_list(i), output);
  }

  // repeated uint32 psn_blacklist_uid_list = 6;
  if (this->psn_blacklist_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _psn_blacklist_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->psn_blacklist_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->psn_blacklist_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetPlayerFriendListRsp)
}

::google::protobuf::uint8* ServerGetPlayerFriendListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetPlayerFriendListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated uint32 friend_uid_list = 2;
  if (this->friend_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _friend_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->friend_uid_list_, target);
  }

  // repeated uint32 ask_add_friend_uid_list = 3;
  if (this->ask_add_friend_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _ask_add_friend_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->ask_add_friend_uid_list_, target);
  }

  // repeated uint32 blacklist_uid_list = 4;
  if (this->blacklist_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _blacklist_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->blacklist_uid_list_, target);
  }

  // repeated uint32 psn_friend_uid_list = 5;
  if (this->psn_friend_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _psn_friend_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->psn_friend_uid_list_, target);
  }

  // repeated uint32 psn_blacklist_uid_list = 6;
  if (this->psn_blacklist_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _psn_blacklist_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->psn_blacklist_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetPlayerFriendListRsp)
  return target;
}

size_t ServerGetPlayerFriendListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetPlayerFriendListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 friend_uid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->friend_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _friend_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 ask_add_friend_uid_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->ask_add_friend_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ask_add_friend_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 blacklist_uid_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->blacklist_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _blacklist_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 psn_friend_uid_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->psn_friend_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _psn_friend_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 psn_blacklist_uid_list = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->psn_blacklist_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _psn_blacklist_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetPlayerFriendListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetPlayerFriendListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetPlayerFriendListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetPlayerFriendListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetPlayerFriendListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetPlayerFriendListRsp)
    MergeFrom(*source);
  }
}

void ServerGetPlayerFriendListRsp::MergeFrom(const ServerGetPlayerFriendListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetPlayerFriendListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_uid_list_.MergeFrom(from.friend_uid_list_);
  ask_add_friend_uid_list_.MergeFrom(from.ask_add_friend_uid_list_);
  blacklist_uid_list_.MergeFrom(from.blacklist_uid_list_);
  psn_friend_uid_list_.MergeFrom(from.psn_friend_uid_list_);
  psn_blacklist_uid_list_.MergeFrom(from.psn_blacklist_uid_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerGetPlayerFriendListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetPlayerFriendListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetPlayerFriendListRsp::CopyFrom(const ServerGetPlayerFriendListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetPlayerFriendListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetPlayerFriendListRsp::IsInitialized() const {
  return true;
}

void ServerGetPlayerFriendListRsp::Swap(ServerGetPlayerFriendListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetPlayerFriendListRsp::InternalSwap(ServerGetPlayerFriendListRsp* other) {
  using std::swap;
  friend_uid_list_.InternalSwap(&other->friend_uid_list_);
  ask_add_friend_uid_list_.InternalSwap(&other->ask_add_friend_uid_list_);
  blacklist_uid_list_.InternalSwap(&other->blacklist_uid_list_);
  psn_friend_uid_list_.InternalSwap(&other->psn_friend_uid_list_);
  psn_blacklist_uid_list_.InternalSwap(&other->psn_blacklist_uid_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetPlayerFriendListRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetPlayerFriendListRsp

// int32 retcode = 1;
void ServerGetPlayerFriendListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetPlayerFriendListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetPlayerFriendListRsp.retcode)
  return retcode_;
}
void ServerGetPlayerFriendListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetPlayerFriendListRsp.retcode)
}

// repeated uint32 friend_uid_list = 2;
int ServerGetPlayerFriendListRsp::friend_uid_list_size() const {
  return friend_uid_list_.size();
}
void ServerGetPlayerFriendListRsp::clear_friend_uid_list() {
  friend_uid_list_.Clear();
}
::google::protobuf::uint32 ServerGetPlayerFriendListRsp::friend_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetPlayerFriendListRsp.friend_uid_list)
  return friend_uid_list_.Get(index);
}
void ServerGetPlayerFriendListRsp::set_friend_uid_list(int index, ::google::protobuf::uint32 value) {
  friend_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetPlayerFriendListRsp.friend_uid_list)
}
void ServerGetPlayerFriendListRsp::add_friend_uid_list(::google::protobuf::uint32 value) {
  friend_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetPlayerFriendListRsp.friend_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerGetPlayerFriendListRsp::friend_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetPlayerFriendListRsp.friend_uid_list)
  return friend_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerGetPlayerFriendListRsp::mutable_friend_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetPlayerFriendListRsp.friend_uid_list)
  return &friend_uid_list_;
}

// repeated uint32 ask_add_friend_uid_list = 3;
int ServerGetPlayerFriendListRsp::ask_add_friend_uid_list_size() const {
  return ask_add_friend_uid_list_.size();
}
void ServerGetPlayerFriendListRsp::clear_ask_add_friend_uid_list() {
  ask_add_friend_uid_list_.Clear();
}
::google::protobuf::uint32 ServerGetPlayerFriendListRsp::ask_add_friend_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetPlayerFriendListRsp.ask_add_friend_uid_list)
  return ask_add_friend_uid_list_.Get(index);
}
void ServerGetPlayerFriendListRsp::set_ask_add_friend_uid_list(int index, ::google::protobuf::uint32 value) {
  ask_add_friend_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetPlayerFriendListRsp.ask_add_friend_uid_list)
}
void ServerGetPlayerFriendListRsp::add_ask_add_friend_uid_list(::google::protobuf::uint32 value) {
  ask_add_friend_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetPlayerFriendListRsp.ask_add_friend_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerGetPlayerFriendListRsp::ask_add_friend_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetPlayerFriendListRsp.ask_add_friend_uid_list)
  return ask_add_friend_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerGetPlayerFriendListRsp::mutable_ask_add_friend_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetPlayerFriendListRsp.ask_add_friend_uid_list)
  return &ask_add_friend_uid_list_;
}

// repeated uint32 blacklist_uid_list = 4;
int ServerGetPlayerFriendListRsp::blacklist_uid_list_size() const {
  return blacklist_uid_list_.size();
}
void ServerGetPlayerFriendListRsp::clear_blacklist_uid_list() {
  blacklist_uid_list_.Clear();
}
::google::protobuf::uint32 ServerGetPlayerFriendListRsp::blacklist_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetPlayerFriendListRsp.blacklist_uid_list)
  return blacklist_uid_list_.Get(index);
}
void ServerGetPlayerFriendListRsp::set_blacklist_uid_list(int index, ::google::protobuf::uint32 value) {
  blacklist_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetPlayerFriendListRsp.blacklist_uid_list)
}
void ServerGetPlayerFriendListRsp::add_blacklist_uid_list(::google::protobuf::uint32 value) {
  blacklist_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetPlayerFriendListRsp.blacklist_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerGetPlayerFriendListRsp::blacklist_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetPlayerFriendListRsp.blacklist_uid_list)
  return blacklist_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerGetPlayerFriendListRsp::mutable_blacklist_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetPlayerFriendListRsp.blacklist_uid_list)
  return &blacklist_uid_list_;
}

// repeated uint32 psn_friend_uid_list = 5;
int ServerGetPlayerFriendListRsp::psn_friend_uid_list_size() const {
  return psn_friend_uid_list_.size();
}
void ServerGetPlayerFriendListRsp::clear_psn_friend_uid_list() {
  psn_friend_uid_list_.Clear();
}
::google::protobuf::uint32 ServerGetPlayerFriendListRsp::psn_friend_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetPlayerFriendListRsp.psn_friend_uid_list)
  return psn_friend_uid_list_.Get(index);
}
void ServerGetPlayerFriendListRsp::set_psn_friend_uid_list(int index, ::google::protobuf::uint32 value) {
  psn_friend_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetPlayerFriendListRsp.psn_friend_uid_list)
}
void ServerGetPlayerFriendListRsp::add_psn_friend_uid_list(::google::protobuf::uint32 value) {
  psn_friend_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetPlayerFriendListRsp.psn_friend_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerGetPlayerFriendListRsp::psn_friend_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetPlayerFriendListRsp.psn_friend_uid_list)
  return psn_friend_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerGetPlayerFriendListRsp::mutable_psn_friend_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetPlayerFriendListRsp.psn_friend_uid_list)
  return &psn_friend_uid_list_;
}

// repeated uint32 psn_blacklist_uid_list = 6;
int ServerGetPlayerFriendListRsp::psn_blacklist_uid_list_size() const {
  return psn_blacklist_uid_list_.size();
}
void ServerGetPlayerFriendListRsp::clear_psn_blacklist_uid_list() {
  psn_blacklist_uid_list_.Clear();
}
::google::protobuf::uint32 ServerGetPlayerFriendListRsp::psn_blacklist_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetPlayerFriendListRsp.psn_blacklist_uid_list)
  return psn_blacklist_uid_list_.Get(index);
}
void ServerGetPlayerFriendListRsp::set_psn_blacklist_uid_list(int index, ::google::protobuf::uint32 value) {
  psn_blacklist_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetPlayerFriendListRsp.psn_blacklist_uid_list)
}
void ServerGetPlayerFriendListRsp::add_psn_blacklist_uid_list(::google::protobuf::uint32 value) {
  psn_blacklist_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetPlayerFriendListRsp.psn_blacklist_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerGetPlayerFriendListRsp::psn_blacklist_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetPlayerFriendListRsp.psn_blacklist_uid_list)
  return psn_blacklist_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerGetPlayerFriendListRsp::mutable_psn_blacklist_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetPlayerFriendListRsp.psn_blacklist_uid_list)
  return &psn_blacklist_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetSocialDetailReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetSocialDetailReq::ServerGetSocialDetailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetSocialDetailReq)
}
ServerGetSocialDetailReq::ServerGetSocialDetailReq(const ServerGetSocialDetailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetSocialDetailReq)
}

void ServerGetSocialDetailReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

ServerGetSocialDetailReq::~ServerGetSocialDetailReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetSocialDetailReq)
  SharedDtor();
}

void ServerGetSocialDetailReq::SharedDtor() {
}

void ServerGetSocialDetailReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetSocialDetailReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetSocialDetailReq& ServerGetSocialDetailReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetSocialDetailReq* ServerGetSocialDetailReq::New(::google::protobuf::Arena* arena) const {
  ServerGetSocialDetailReq* n = new ServerGetSocialDetailReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetSocialDetailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetSocialDetailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerGetSocialDetailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetSocialDetailReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetSocialDetailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetSocialDetailReq)
  return false;
#undef DO_
}

void ServerGetSocialDetailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetSocialDetailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetSocialDetailReq)
}

::google::protobuf::uint8* ServerGetSocialDetailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetSocialDetailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetSocialDetailReq)
  return target;
}

size_t ServerGetSocialDetailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetSocialDetailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetSocialDetailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetSocialDetailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetSocialDetailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetSocialDetailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetSocialDetailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetSocialDetailReq)
    MergeFrom(*source);
  }
}

void ServerGetSocialDetailReq::MergeFrom(const ServerGetSocialDetailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetSocialDetailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ServerGetSocialDetailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetSocialDetailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetSocialDetailReq::CopyFrom(const ServerGetSocialDetailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetSocialDetailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetSocialDetailReq::IsInitialized() const {
  return true;
}

void ServerGetSocialDetailReq::Swap(ServerGetSocialDetailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetSocialDetailReq::InternalSwap(ServerGetSocialDetailReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetSocialDetailReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetSocialDetailReq

// uint32 target_uid = 1;
void ServerGetSocialDetailReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerGetSocialDetailReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetSocialDetailReq.target_uid)
  return target_uid_;
}
void ServerGetSocialDetailReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetSocialDetailReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetSocialDetailRsp::kRetcodeFieldNumber;
const int ServerGetSocialDetailRsp::kSocialDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetSocialDetailRsp::ServerGetSocialDetailRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetSocialDetailRsp)
}
ServerGetSocialDetailRsp::ServerGetSocialDetailRsp(const ServerGetSocialDetailRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_social_detail()) {
    social_detail_ = new ::proto::SocialDetail(*from.social_detail_);
  } else {
    social_detail_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetSocialDetailRsp)
}

void ServerGetSocialDetailRsp::SharedCtor() {
  ::memset(&social_detail_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&social_detail_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

ServerGetSocialDetailRsp::~ServerGetSocialDetailRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetSocialDetailRsp)
  SharedDtor();
}

void ServerGetSocialDetailRsp::SharedDtor() {
  if (this != internal_default_instance()) delete social_detail_;
}

void ServerGetSocialDetailRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetSocialDetailRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetSocialDetailRsp& ServerGetSocialDetailRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetSocialDetailRsp* ServerGetSocialDetailRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetSocialDetailRsp* n = new ServerGetSocialDetailRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetSocialDetailRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetSocialDetailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && social_detail_ != NULL) {
    delete social_detail_;
  }
  social_detail_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerGetSocialDetailRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetSocialDetailRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.SocialDetail social_detail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_social_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetSocialDetailRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetSocialDetailRsp)
  return false;
#undef DO_
}

void ServerGetSocialDetailRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetSocialDetailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.SocialDetail social_detail = 2;
  if (this->has_social_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->social_detail_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetSocialDetailRsp)
}

::google::protobuf::uint8* ServerGetSocialDetailRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetSocialDetailRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.SocialDetail social_detail = 2;
  if (this->has_social_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->social_detail_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetSocialDetailRsp)
  return target;
}

size_t ServerGetSocialDetailRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetSocialDetailRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.SocialDetail social_detail = 2;
  if (this->has_social_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->social_detail_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetSocialDetailRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetSocialDetailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetSocialDetailRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetSocialDetailRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetSocialDetailRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetSocialDetailRsp)
    MergeFrom(*source);
  }
}

void ServerGetSocialDetailRsp::MergeFrom(const ServerGetSocialDetailRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetSocialDetailRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_social_detail()) {
    mutable_social_detail()->::proto::SocialDetail::MergeFrom(from.social_detail());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerGetSocialDetailRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetSocialDetailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetSocialDetailRsp::CopyFrom(const ServerGetSocialDetailRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetSocialDetailRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetSocialDetailRsp::IsInitialized() const {
  return true;
}

void ServerGetSocialDetailRsp::Swap(ServerGetSocialDetailRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetSocialDetailRsp::InternalSwap(ServerGetSocialDetailRsp* other) {
  using std::swap;
  swap(social_detail_, other->social_detail_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetSocialDetailRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetSocialDetailRsp

// int32 retcode = 1;
void ServerGetSocialDetailRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetSocialDetailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetSocialDetailRsp.retcode)
  return retcode_;
}
void ServerGetSocialDetailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetSocialDetailRsp.retcode)
}

// .proto.SocialDetail social_detail = 2;
bool ServerGetSocialDetailRsp::has_social_detail() const {
  return this != internal_default_instance() && social_detail_ != NULL;
}
void ServerGetSocialDetailRsp::clear_social_detail() {
  if (GetArenaNoVirtual() == NULL && social_detail_ != NULL) delete social_detail_;
  social_detail_ = NULL;
}
const ::proto::SocialDetail& ServerGetSocialDetailRsp::social_detail() const {
  const ::proto::SocialDetail* p = social_detail_;
  // @@protoc_insertion_point(field_get:proto.ServerGetSocialDetailRsp.social_detail)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SocialDetail*>(
      &::proto::_SocialDetail_default_instance_);
}
::proto::SocialDetail* ServerGetSocialDetailRsp::mutable_social_detail() {
  
  if (social_detail_ == NULL) {
    social_detail_ = new ::proto::SocialDetail;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGetSocialDetailRsp.social_detail)
  return social_detail_;
}
::proto::SocialDetail* ServerGetSocialDetailRsp::release_social_detail() {
  // @@protoc_insertion_point(field_release:proto.ServerGetSocialDetailRsp.social_detail)
  
  ::proto::SocialDetail* temp = social_detail_;
  social_detail_ = NULL;
  return temp;
}
void ServerGetSocialDetailRsp::set_allocated_social_detail(::proto::SocialDetail* social_detail) {
  delete social_detail_;
  social_detail_ = social_detail;
  if (social_detail) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGetSocialDetailRsp.social_detail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAskAddFriendReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAskAddFriendReq::ServerAskAddFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerAskAddFriendReq)
}
ServerAskAddFriendReq::ServerAskAddFriendReq(const ServerAskAddFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerAskAddFriendReq)
}

void ServerAskAddFriendReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

ServerAskAddFriendReq::~ServerAskAddFriendReq() {
  // @@protoc_insertion_point(destructor:proto.ServerAskAddFriendReq)
  SharedDtor();
}

void ServerAskAddFriendReq::SharedDtor() {
}

void ServerAskAddFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAskAddFriendReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAskAddFriendReq& ServerAskAddFriendReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerAskAddFriendReq* ServerAskAddFriendReq::New(::google::protobuf::Arena* arena) const {
  ServerAskAddFriendReq* n = new ServerAskAddFriendReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAskAddFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerAskAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerAskAddFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerAskAddFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerAskAddFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerAskAddFriendReq)
  return false;
#undef DO_
}

void ServerAskAddFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerAskAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerAskAddFriendReq)
}

::google::protobuf::uint8* ServerAskAddFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerAskAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerAskAddFriendReq)
  return target;
}

size_t ServerAskAddFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerAskAddFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAskAddFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerAskAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAskAddFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAskAddFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerAskAddFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerAskAddFriendReq)
    MergeFrom(*source);
  }
}

void ServerAskAddFriendReq::MergeFrom(const ServerAskAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerAskAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ServerAskAddFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerAskAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAskAddFriendReq::CopyFrom(const ServerAskAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerAskAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAskAddFriendReq::IsInitialized() const {
  return true;
}

void ServerAskAddFriendReq::Swap(ServerAskAddFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAskAddFriendReq::InternalSwap(ServerAskAddFriendReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAskAddFriendReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAskAddFriendReq

// uint32 target_uid = 1;
void ServerAskAddFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerAskAddFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerAskAddFriendReq.target_uid)
  return target_uid_;
}
void ServerAskAddFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAskAddFriendReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAskAddFriendRsp::kRetcodeFieldNumber;
const int ServerAskAddFriendRsp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAskAddFriendRsp::ServerAskAddFriendRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerAskAddFriendRsp)
}
ServerAskAddFriendRsp::ServerAskAddFriendRsp(const ServerAskAddFriendRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerAskAddFriendRsp)
}

void ServerAskAddFriendRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

ServerAskAddFriendRsp::~ServerAskAddFriendRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerAskAddFriendRsp)
  SharedDtor();
}

void ServerAskAddFriendRsp::SharedDtor() {
}

void ServerAskAddFriendRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAskAddFriendRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAskAddFriendRsp& ServerAskAddFriendRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerAskAddFriendRsp* ServerAskAddFriendRsp::New(::google::protobuf::Arena* arena) const {
  ServerAskAddFriendRsp* n = new ServerAskAddFriendRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAskAddFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerAskAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool ServerAskAddFriendRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerAskAddFriendRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerAskAddFriendRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerAskAddFriendRsp)
  return false;
#undef DO_
}

void ServerAskAddFriendRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerAskAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerAskAddFriendRsp)
}

::google::protobuf::uint8* ServerAskAddFriendRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerAskAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerAskAddFriendRsp)
  return target;
}

size_t ServerAskAddFriendRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerAskAddFriendRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAskAddFriendRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerAskAddFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAskAddFriendRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAskAddFriendRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerAskAddFriendRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerAskAddFriendRsp)
    MergeFrom(*source);
  }
}

void ServerAskAddFriendRsp::MergeFrom(const ServerAskAddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerAskAddFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ServerAskAddFriendRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerAskAddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAskAddFriendRsp::CopyFrom(const ServerAskAddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerAskAddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAskAddFriendRsp::IsInitialized() const {
  return true;
}

void ServerAskAddFriendRsp::Swap(ServerAskAddFriendRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAskAddFriendRsp::InternalSwap(ServerAskAddFriendRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAskAddFriendRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAskAddFriendRsp

// int32 retcode = 1;
void ServerAskAddFriendRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerAskAddFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerAskAddFriendRsp.retcode)
  return retcode_;
}
void ServerAskAddFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAskAddFriendRsp.retcode)
}

// uint32 target_uid = 2;
void ServerAskAddFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerAskAddFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerAskAddFriendRsp.target_uid)
  return target_uid_;
}
void ServerAskAddFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAskAddFriendRsp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerDealAddFriendReq::kTargetUidFieldNumber;
const int ServerDealAddFriendReq::kDealAddFriendResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerDealAddFriendReq::ServerDealAddFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerDealAddFriendReq)
}
ServerDealAddFriendReq::ServerDealAddFriendReq(const ServerDealAddFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_uid_, &from.target_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&deal_add_friend_result_) -
    reinterpret_cast<char*>(&target_uid_)) + sizeof(deal_add_friend_result_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerDealAddFriendReq)
}

void ServerDealAddFriendReq::SharedCtor() {
  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deal_add_friend_result_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(deal_add_friend_result_));
  _cached_size_ = 0;
}

ServerDealAddFriendReq::~ServerDealAddFriendReq() {
  // @@protoc_insertion_point(destructor:proto.ServerDealAddFriendReq)
  SharedDtor();
}

void ServerDealAddFriendReq::SharedDtor() {
}

void ServerDealAddFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDealAddFriendReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerDealAddFriendReq& ServerDealAddFriendReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerDealAddFriendReq* ServerDealAddFriendReq::New(::google::protobuf::Arena* arena) const {
  ServerDealAddFriendReq* n = new ServerDealAddFriendReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerDealAddFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerDealAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&deal_add_friend_result_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(deal_add_friend_result_));
  _internal_metadata_.Clear();
}

bool ServerDealAddFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerDealAddFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DealAddFriendResultType deal_add_friend_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_deal_add_friend_result(static_cast< ::proto::DealAddFriendResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerDealAddFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerDealAddFriendReq)
  return false;
#undef DO_
}

void ServerDealAddFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerDealAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 2;
  if (this->deal_add_friend_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->deal_add_friend_result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerDealAddFriendReq)
}

::google::protobuf::uint8* ServerDealAddFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerDealAddFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 2;
  if (this->deal_add_friend_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->deal_add_friend_result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerDealAddFriendReq)
  return target;
}

size_t ServerDealAddFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerDealAddFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 2;
  if (this->deal_add_friend_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->deal_add_friend_result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDealAddFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerDealAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerDealAddFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerDealAddFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerDealAddFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerDealAddFriendReq)
    MergeFrom(*source);
  }
}

void ServerDealAddFriendReq::MergeFrom(const ServerDealAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerDealAddFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.deal_add_friend_result() != 0) {
    set_deal_add_friend_result(from.deal_add_friend_result());
  }
}

void ServerDealAddFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerDealAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDealAddFriendReq::CopyFrom(const ServerDealAddFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerDealAddFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDealAddFriendReq::IsInitialized() const {
  return true;
}

void ServerDealAddFriendReq::Swap(ServerDealAddFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerDealAddFriendReq::InternalSwap(ServerDealAddFriendReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  swap(deal_add_friend_result_, other->deal_add_friend_result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerDealAddFriendReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerDealAddFriendReq

// uint32 target_uid = 1;
void ServerDealAddFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerDealAddFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerDealAddFriendReq.target_uid)
  return target_uid_;
}
void ServerDealAddFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDealAddFriendReq.target_uid)
}

// .proto.DealAddFriendResultType deal_add_friend_result = 2;
void ServerDealAddFriendReq::clear_deal_add_friend_result() {
  deal_add_friend_result_ = 0;
}
::proto::DealAddFriendResultType ServerDealAddFriendReq::deal_add_friend_result() const {
  // @@protoc_insertion_point(field_get:proto.ServerDealAddFriendReq.deal_add_friend_result)
  return static_cast< ::proto::DealAddFriendResultType >(deal_add_friend_result_);
}
void ServerDealAddFriendReq::set_deal_add_friend_result(::proto::DealAddFriendResultType value) {
  
  deal_add_friend_result_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDealAddFriendReq.deal_add_friend_result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerDealAddFriendRsp::kRetcodeFieldNumber;
const int ServerDealAddFriendRsp::kTargetUidFieldNumber;
const int ServerDealAddFriendRsp::kDealAddFriendResultFieldNumber;
const int ServerDealAddFriendRsp::kTargetFriendNumFieldNumber;
const int ServerDealAddFriendRsp::kTargetFriendBriefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerDealAddFriendRsp::ServerDealAddFriendRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerDealAddFriendRsp)
}
ServerDealAddFriendRsp::ServerDealAddFriendRsp(const ServerDealAddFriendRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_friend_brief()) {
    target_friend_brief_ = new ::proto::FriendBrief(*from.target_friend_brief_);
  } else {
    target_friend_brief_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_friend_num_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_friend_num_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerDealAddFriendRsp)
}

void ServerDealAddFriendRsp::SharedCtor() {
  ::memset(&target_friend_brief_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_friend_num_) -
      reinterpret_cast<char*>(&target_friend_brief_)) + sizeof(target_friend_num_));
  _cached_size_ = 0;
}

ServerDealAddFriendRsp::~ServerDealAddFriendRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerDealAddFriendRsp)
  SharedDtor();
}

void ServerDealAddFriendRsp::SharedDtor() {
  if (this != internal_default_instance()) delete target_friend_brief_;
}

void ServerDealAddFriendRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDealAddFriendRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerDealAddFriendRsp& ServerDealAddFriendRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerDealAddFriendRsp* ServerDealAddFriendRsp::New(::google::protobuf::Arena* arena) const {
  ServerDealAddFriendRsp* n = new ServerDealAddFriendRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerDealAddFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerDealAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) {
    delete target_friend_brief_;
  }
  target_friend_brief_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_friend_num_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_friend_num_));
  _internal_metadata_.Clear();
}

bool ServerDealAddFriendRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerDealAddFriendRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.DealAddFriendResultType deal_add_friend_result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_deal_add_friend_result(static_cast< ::proto::DealAddFriendResultType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_friend_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_friend_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendBrief target_friend_brief = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_target_friend_brief()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerDealAddFriendRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerDealAddFriendRsp)
  return false;
#undef DO_
}

void ServerDealAddFriendRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerDealAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 3;
  if (this->deal_add_friend_result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->deal_add_friend_result(), output);
  }

  // uint32 target_friend_num = 4;
  if (this->target_friend_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->target_friend_num(), output);
  }

  // .proto.FriendBrief target_friend_brief = 5;
  if (this->has_target_friend_brief()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->target_friend_brief_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerDealAddFriendRsp)
}

::google::protobuf::uint8* ServerDealAddFriendRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerDealAddFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 3;
  if (this->deal_add_friend_result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->deal_add_friend_result(), target);
  }

  // uint32 target_friend_num = 4;
  if (this->target_friend_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->target_friend_num(), target);
  }

  // .proto.FriendBrief target_friend_brief = 5;
  if (this->has_target_friend_brief()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->target_friend_brief_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerDealAddFriendRsp)
  return target;
}

size_t ServerDealAddFriendRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerDealAddFriendRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FriendBrief target_friend_brief = 5;
  if (this->has_target_friend_brief()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->target_friend_brief_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // .proto.DealAddFriendResultType deal_add_friend_result = 3;
  if (this->deal_add_friend_result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->deal_add_friend_result());
  }

  // uint32 target_friend_num = 4;
  if (this->target_friend_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_friend_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDealAddFriendRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerDealAddFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerDealAddFriendRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerDealAddFriendRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerDealAddFriendRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerDealAddFriendRsp)
    MergeFrom(*source);
  }
}

void ServerDealAddFriendRsp::MergeFrom(const ServerDealAddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerDealAddFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_friend_brief()) {
    mutable_target_friend_brief()->::proto::FriendBrief::MergeFrom(from.target_friend_brief());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.deal_add_friend_result() != 0) {
    set_deal_add_friend_result(from.deal_add_friend_result());
  }
  if (from.target_friend_num() != 0) {
    set_target_friend_num(from.target_friend_num());
  }
}

void ServerDealAddFriendRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerDealAddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDealAddFriendRsp::CopyFrom(const ServerDealAddFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerDealAddFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDealAddFriendRsp::IsInitialized() const {
  return true;
}

void ServerDealAddFriendRsp::Swap(ServerDealAddFriendRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerDealAddFriendRsp::InternalSwap(ServerDealAddFriendRsp* other) {
  using std::swap;
  swap(target_friend_brief_, other->target_friend_brief_);
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  swap(deal_add_friend_result_, other->deal_add_friend_result_);
  swap(target_friend_num_, other->target_friend_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerDealAddFriendRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerDealAddFriendRsp

// int32 retcode = 1;
void ServerDealAddFriendRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerDealAddFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerDealAddFriendRsp.retcode)
  return retcode_;
}
void ServerDealAddFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDealAddFriendRsp.retcode)
}

// uint32 target_uid = 2;
void ServerDealAddFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerDealAddFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerDealAddFriendRsp.target_uid)
  return target_uid_;
}
void ServerDealAddFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDealAddFriendRsp.target_uid)
}

// .proto.DealAddFriendResultType deal_add_friend_result = 3;
void ServerDealAddFriendRsp::clear_deal_add_friend_result() {
  deal_add_friend_result_ = 0;
}
::proto::DealAddFriendResultType ServerDealAddFriendRsp::deal_add_friend_result() const {
  // @@protoc_insertion_point(field_get:proto.ServerDealAddFriendRsp.deal_add_friend_result)
  return static_cast< ::proto::DealAddFriendResultType >(deal_add_friend_result_);
}
void ServerDealAddFriendRsp::set_deal_add_friend_result(::proto::DealAddFriendResultType value) {
  
  deal_add_friend_result_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDealAddFriendRsp.deal_add_friend_result)
}

// uint32 target_friend_num = 4;
void ServerDealAddFriendRsp::clear_target_friend_num() {
  target_friend_num_ = 0u;
}
::google::protobuf::uint32 ServerDealAddFriendRsp::target_friend_num() const {
  // @@protoc_insertion_point(field_get:proto.ServerDealAddFriendRsp.target_friend_num)
  return target_friend_num_;
}
void ServerDealAddFriendRsp::set_target_friend_num(::google::protobuf::uint32 value) {
  
  target_friend_num_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDealAddFriendRsp.target_friend_num)
}

// .proto.FriendBrief target_friend_brief = 5;
bool ServerDealAddFriendRsp::has_target_friend_brief() const {
  return this != internal_default_instance() && target_friend_brief_ != NULL;
}
void ServerDealAddFriendRsp::clear_target_friend_brief() {
  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) delete target_friend_brief_;
  target_friend_brief_ = NULL;
}
const ::proto::FriendBrief& ServerDealAddFriendRsp::target_friend_brief() const {
  const ::proto::FriendBrief* p = target_friend_brief_;
  // @@protoc_insertion_point(field_get:proto.ServerDealAddFriendRsp.target_friend_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FriendBrief*>(
      &::proto::_FriendBrief_default_instance_);
}
::proto::FriendBrief* ServerDealAddFriendRsp::mutable_target_friend_brief() {
  
  if (target_friend_brief_ == NULL) {
    target_friend_brief_ = new ::proto::FriendBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerDealAddFriendRsp.target_friend_brief)
  return target_friend_brief_;
}
::proto::FriendBrief* ServerDealAddFriendRsp::release_target_friend_brief() {
  // @@protoc_insertion_point(field_release:proto.ServerDealAddFriendRsp.target_friend_brief)
  
  ::proto::FriendBrief* temp = target_friend_brief_;
  target_friend_brief_ = NULL;
  return temp;
}
void ServerDealAddFriendRsp::set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief) {
  delete target_friend_brief_;
  target_friend_brief_ = target_friend_brief;
  if (target_friend_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerDealAddFriendRsp.target_friend_brief)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerDeleteFriendReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerDeleteFriendReq::ServerDeleteFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerDeleteFriendReq)
}
ServerDeleteFriendReq::ServerDeleteFriendReq(const ServerDeleteFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerDeleteFriendReq)
}

void ServerDeleteFriendReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

ServerDeleteFriendReq::~ServerDeleteFriendReq() {
  // @@protoc_insertion_point(destructor:proto.ServerDeleteFriendReq)
  SharedDtor();
}

void ServerDeleteFriendReq::SharedDtor() {
}

void ServerDeleteFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDeleteFriendReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerDeleteFriendReq& ServerDeleteFriendReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerDeleteFriendReq* ServerDeleteFriendReq::New(::google::protobuf::Arena* arena) const {
  ServerDeleteFriendReq* n = new ServerDeleteFriendReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerDeleteFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerDeleteFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerDeleteFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerDeleteFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerDeleteFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerDeleteFriendReq)
  return false;
#undef DO_
}

void ServerDeleteFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerDeleteFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerDeleteFriendReq)
}

::google::protobuf::uint8* ServerDeleteFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerDeleteFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerDeleteFriendReq)
  return target;
}

size_t ServerDeleteFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerDeleteFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDeleteFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerDeleteFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerDeleteFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerDeleteFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerDeleteFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerDeleteFriendReq)
    MergeFrom(*source);
  }
}

void ServerDeleteFriendReq::MergeFrom(const ServerDeleteFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerDeleteFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ServerDeleteFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerDeleteFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDeleteFriendReq::CopyFrom(const ServerDeleteFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerDeleteFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDeleteFriendReq::IsInitialized() const {
  return true;
}

void ServerDeleteFriendReq::Swap(ServerDeleteFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerDeleteFriendReq::InternalSwap(ServerDeleteFriendReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerDeleteFriendReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerDeleteFriendReq

// uint32 target_uid = 1;
void ServerDeleteFriendReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerDeleteFriendReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerDeleteFriendReq.target_uid)
  return target_uid_;
}
void ServerDeleteFriendReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDeleteFriendReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerDeleteFriendRsp::kRetcodeFieldNumber;
const int ServerDeleteFriendRsp::kTargetUidFieldNumber;
const int ServerDeleteFriendRsp::kTargetFriendNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerDeleteFriendRsp::ServerDeleteFriendRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerDeleteFriendRsp)
}
ServerDeleteFriendRsp::ServerDeleteFriendRsp(const ServerDeleteFriendRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_friend_num_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_friend_num_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerDeleteFriendRsp)
}

void ServerDeleteFriendRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_friend_num_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_friend_num_));
  _cached_size_ = 0;
}

ServerDeleteFriendRsp::~ServerDeleteFriendRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerDeleteFriendRsp)
  SharedDtor();
}

void ServerDeleteFriendRsp::SharedDtor() {
}

void ServerDeleteFriendRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDeleteFriendRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerDeleteFriendRsp& ServerDeleteFriendRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerDeleteFriendRsp* ServerDeleteFriendRsp::New(::google::protobuf::Arena* arena) const {
  ServerDeleteFriendRsp* n = new ServerDeleteFriendRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerDeleteFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerDeleteFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_friend_num_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_friend_num_));
  _internal_metadata_.Clear();
}

bool ServerDeleteFriendRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerDeleteFriendRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_friend_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_friend_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerDeleteFriendRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerDeleteFriendRsp)
  return false;
#undef DO_
}

void ServerDeleteFriendRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerDeleteFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  // uint32 target_friend_num = 3;
  if (this->target_friend_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_friend_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerDeleteFriendRsp)
}

::google::protobuf::uint8* ServerDeleteFriendRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerDeleteFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  // uint32 target_friend_num = 3;
  if (this->target_friend_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_friend_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerDeleteFriendRsp)
  return target;
}

size_t ServerDeleteFriendRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerDeleteFriendRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 target_friend_num = 3;
  if (this->target_friend_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_friend_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDeleteFriendRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerDeleteFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerDeleteFriendRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerDeleteFriendRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerDeleteFriendRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerDeleteFriendRsp)
    MergeFrom(*source);
  }
}

void ServerDeleteFriendRsp::MergeFrom(const ServerDeleteFriendRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerDeleteFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.target_friend_num() != 0) {
    set_target_friend_num(from.target_friend_num());
  }
}

void ServerDeleteFriendRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerDeleteFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDeleteFriendRsp::CopyFrom(const ServerDeleteFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerDeleteFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDeleteFriendRsp::IsInitialized() const {
  return true;
}

void ServerDeleteFriendRsp::Swap(ServerDeleteFriendRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerDeleteFriendRsp::InternalSwap(ServerDeleteFriendRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  swap(target_friend_num_, other->target_friend_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerDeleteFriendRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerDeleteFriendRsp

// int32 retcode = 1;
void ServerDeleteFriendRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerDeleteFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerDeleteFriendRsp.retcode)
  return retcode_;
}
void ServerDeleteFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDeleteFriendRsp.retcode)
}

// uint32 target_uid = 2;
void ServerDeleteFriendRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerDeleteFriendRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerDeleteFriendRsp.target_uid)
  return target_uid_;
}
void ServerDeleteFriendRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDeleteFriendRsp.target_uid)
}

// uint32 target_friend_num = 3;
void ServerDeleteFriendRsp::clear_target_friend_num() {
  target_friend_num_ = 0u;
}
::google::protobuf::uint32 ServerDeleteFriendRsp::target_friend_num() const {
  // @@protoc_insertion_point(field_get:proto.ServerDeleteFriendRsp.target_friend_num)
  return target_friend_num_;
}
void ServerDeleteFriendRsp::set_target_friend_num(::google::protobuf::uint32 value) {
  
  target_friend_num_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDeleteFriendRsp.target_friend_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerSetSignatureReq::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerSetSignatureReq::ServerSetSignatureReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerSetSignatureReq)
}
ServerSetSignatureReq::ServerSetSignatureReq(const ServerSetSignatureReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ServerSetSignatureReq)
}

void ServerSetSignatureReq::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ServerSetSignatureReq::~ServerSetSignatureReq() {
  // @@protoc_insertion_point(destructor:proto.ServerSetSignatureReq)
  SharedDtor();
}

void ServerSetSignatureReq::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerSetSignatureReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerSetSignatureReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerSetSignatureReq& ServerSetSignatureReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerSetSignatureReq* ServerSetSignatureReq::New(::google::protobuf::Arena* arena) const {
  ServerSetSignatureReq* n = new ServerSetSignatureReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerSetSignatureReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerSetSignatureReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ServerSetSignatureReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerSetSignatureReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string signature = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ServerSetSignatureReq.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerSetSignatureReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerSetSignatureReq)
  return false;
#undef DO_
}

void ServerSetSignatureReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerSetSignatureReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ServerSetSignatureReq.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerSetSignatureReq)
}

::google::protobuf::uint8* ServerSetSignatureReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerSetSignatureReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signature = 1;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ServerSetSignatureReq.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerSetSignatureReq)
  return target;
}

size_t ServerSetSignatureReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerSetSignatureReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string signature = 1;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerSetSignatureReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerSetSignatureReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerSetSignatureReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerSetSignatureReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerSetSignatureReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerSetSignatureReq)
    MergeFrom(*source);
  }
}

void ServerSetSignatureReq::MergeFrom(const ServerSetSignatureReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerSetSignatureReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
}

void ServerSetSignatureReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerSetSignatureReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerSetSignatureReq::CopyFrom(const ServerSetSignatureReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerSetSignatureReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerSetSignatureReq::IsInitialized() const {
  return true;
}

void ServerSetSignatureReq::Swap(ServerSetSignatureReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerSetSignatureReq::InternalSwap(ServerSetSignatureReq* other) {
  using std::swap;
  signature_.Swap(&other->signature_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerSetSignatureReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerSetSignatureReq

// string signature = 1;
void ServerSetSignatureReq::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServerSetSignatureReq::signature() const {
  // @@protoc_insertion_point(field_get:proto.ServerSetSignatureReq.signature)
  return signature_.GetNoArena();
}
void ServerSetSignatureReq::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ServerSetSignatureReq.signature)
}
#if LANG_CXX11
void ServerSetSignatureReq::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ServerSetSignatureReq.signature)
}
#endif
void ServerSetSignatureReq::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ServerSetSignatureReq.signature)
}
void ServerSetSignatureReq::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ServerSetSignatureReq.signature)
}
::std::string* ServerSetSignatureReq::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.ServerSetSignatureReq.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerSetSignatureReq::release_signature() {
  // @@protoc_insertion_point(field_release:proto.ServerSetSignatureReq.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerSetSignatureReq::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.ServerSetSignatureReq.signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerSetSignatureRsp::kRetcodeFieldNumber;
const int ServerSetSignatureRsp::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerSetSignatureRsp::ServerSetSignatureRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerSetSignatureRsp)
}
ServerSetSignatureRsp::ServerSetSignatureRsp(const ServerSetSignatureRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerSetSignatureRsp)
}

void ServerSetSignatureRsp::SharedCtor() {
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _cached_size_ = 0;
}

ServerSetSignatureRsp::~ServerSetSignatureRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerSetSignatureRsp)
  SharedDtor();
}

void ServerSetSignatureRsp::SharedDtor() {
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerSetSignatureRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerSetSignatureRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerSetSignatureRsp& ServerSetSignatureRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerSetSignatureRsp* ServerSetSignatureRsp::New(::google::protobuf::Arena* arena) const {
  ServerSetSignatureRsp* n = new ServerSetSignatureRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerSetSignatureRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerSetSignatureRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerSetSignatureRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerSetSignatureRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signature()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signature().data(), static_cast<int>(this->signature().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ServerSetSignatureRsp.signature"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerSetSignatureRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerSetSignatureRsp)
  return false;
#undef DO_
}

void ServerSetSignatureRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerSetSignatureRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // string signature = 2;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ServerSetSignatureRsp.signature");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerSetSignatureRsp)
}

::google::protobuf::uint8* ServerSetSignatureRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerSetSignatureRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // string signature = 2;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signature().data(), static_cast<int>(this->signature().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ServerSetSignatureRsp.signature");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerSetSignatureRsp)
  return target;
}

size_t ServerSetSignatureRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerSetSignatureRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string signature = 2;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signature());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerSetSignatureRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerSetSignatureRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerSetSignatureRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerSetSignatureRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerSetSignatureRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerSetSignatureRsp)
    MergeFrom(*source);
  }
}

void ServerSetSignatureRsp::MergeFrom(const ServerSetSignatureRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerSetSignatureRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerSetSignatureRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerSetSignatureRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerSetSignatureRsp::CopyFrom(const ServerSetSignatureRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerSetSignatureRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerSetSignatureRsp::IsInitialized() const {
  return true;
}

void ServerSetSignatureRsp::Swap(ServerSetSignatureRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerSetSignatureRsp::InternalSwap(ServerSetSignatureRsp* other) {
  using std::swap;
  signature_.Swap(&other->signature_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerSetSignatureRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerSetSignatureRsp

// int32 retcode = 1;
void ServerSetSignatureRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerSetSignatureRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerSetSignatureRsp.retcode)
  return retcode_;
}
void ServerSetSignatureRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerSetSignatureRsp.retcode)
}

// string signature = 2;
void ServerSetSignatureRsp::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServerSetSignatureRsp::signature() const {
  // @@protoc_insertion_point(field_get:proto.ServerSetSignatureRsp.signature)
  return signature_.GetNoArena();
}
void ServerSetSignatureRsp::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ServerSetSignatureRsp.signature)
}
#if LANG_CXX11
void ServerSetSignatureRsp::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ServerSetSignatureRsp.signature)
}
#endif
void ServerSetSignatureRsp::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ServerSetSignatureRsp.signature)
}
void ServerSetSignatureRsp::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ServerSetSignatureRsp.signature)
}
::std::string* ServerSetSignatureRsp::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.ServerSetSignatureRsp.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerSetSignatureRsp::release_signature() {
  // @@protoc_insertion_point(field_release:proto.ServerSetSignatureRsp.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerSetSignatureRsp::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.ServerSetSignatureRsp.signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetPlayerFriendBriefReq::kFriendUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetPlayerFriendBriefReq::ServerGetPlayerFriendBriefReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetPlayerFriendBriefReq)
}
ServerGetPlayerFriendBriefReq::ServerGetPlayerFriendBriefReq(const ServerGetPlayerFriendBriefReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_uid_list_(from.friend_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetPlayerFriendBriefReq)
}

void ServerGetPlayerFriendBriefReq::SharedCtor() {
  _cached_size_ = 0;
}

ServerGetPlayerFriendBriefReq::~ServerGetPlayerFriendBriefReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetPlayerFriendBriefReq)
  SharedDtor();
}

void ServerGetPlayerFriendBriefReq::SharedDtor() {
}

void ServerGetPlayerFriendBriefReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetPlayerFriendBriefReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetPlayerFriendBriefReq& ServerGetPlayerFriendBriefReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetPlayerFriendBriefReq* ServerGetPlayerFriendBriefReq::New(::google::protobuf::Arena* arena) const {
  ServerGetPlayerFriendBriefReq* n = new ServerGetPlayerFriendBriefReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetPlayerFriendBriefReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetPlayerFriendBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_uid_list_.Clear();
  _internal_metadata_.Clear();
}

bool ServerGetPlayerFriendBriefReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetPlayerFriendBriefReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 friend_uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_friend_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_friend_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetPlayerFriendBriefReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetPlayerFriendBriefReq)
  return false;
#undef DO_
}

void ServerGetPlayerFriendBriefReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetPlayerFriendBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 friend_uid_list = 1;
  if (this->friend_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _friend_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->friend_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->friend_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetPlayerFriendBriefReq)
}

::google::protobuf::uint8* ServerGetPlayerFriendBriefReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetPlayerFriendBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 friend_uid_list = 1;
  if (this->friend_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _friend_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->friend_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetPlayerFriendBriefReq)
  return target;
}

size_t ServerGetPlayerFriendBriefReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetPlayerFriendBriefReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 friend_uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->friend_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _friend_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetPlayerFriendBriefReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetPlayerFriendBriefReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetPlayerFriendBriefReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetPlayerFriendBriefReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetPlayerFriendBriefReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetPlayerFriendBriefReq)
    MergeFrom(*source);
  }
}

void ServerGetPlayerFriendBriefReq::MergeFrom(const ServerGetPlayerFriendBriefReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetPlayerFriendBriefReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_uid_list_.MergeFrom(from.friend_uid_list_);
}

void ServerGetPlayerFriendBriefReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetPlayerFriendBriefReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetPlayerFriendBriefReq::CopyFrom(const ServerGetPlayerFriendBriefReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetPlayerFriendBriefReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetPlayerFriendBriefReq::IsInitialized() const {
  return true;
}

void ServerGetPlayerFriendBriefReq::Swap(ServerGetPlayerFriendBriefReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetPlayerFriendBriefReq::InternalSwap(ServerGetPlayerFriendBriefReq* other) {
  using std::swap;
  friend_uid_list_.InternalSwap(&other->friend_uid_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetPlayerFriendBriefReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetPlayerFriendBriefReq

// repeated uint32 friend_uid_list = 1;
int ServerGetPlayerFriendBriefReq::friend_uid_list_size() const {
  return friend_uid_list_.size();
}
void ServerGetPlayerFriendBriefReq::clear_friend_uid_list() {
  friend_uid_list_.Clear();
}
::google::protobuf::uint32 ServerGetPlayerFriendBriefReq::friend_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetPlayerFriendBriefReq.friend_uid_list)
  return friend_uid_list_.Get(index);
}
void ServerGetPlayerFriendBriefReq::set_friend_uid_list(int index, ::google::protobuf::uint32 value) {
  friend_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetPlayerFriendBriefReq.friend_uid_list)
}
void ServerGetPlayerFriendBriefReq::add_friend_uid_list(::google::protobuf::uint32 value) {
  friend_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetPlayerFriendBriefReq.friend_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerGetPlayerFriendBriefReq::friend_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetPlayerFriendBriefReq.friend_uid_list)
  return friend_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerGetPlayerFriendBriefReq::mutable_friend_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetPlayerFriendBriefReq.friend_uid_list)
  return &friend_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetPlayerFriendBriefRsp::kRetcodeFieldNumber;
const int ServerGetPlayerFriendBriefRsp::kFriendBriefListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetPlayerFriendBriefRsp::ServerGetPlayerFriendBriefRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetPlayerFriendBriefRsp)
}
ServerGetPlayerFriendBriefRsp::ServerGetPlayerFriendBriefRsp(const ServerGetPlayerFriendBriefRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_brief_list_(from.friend_brief_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetPlayerFriendBriefRsp)
}

void ServerGetPlayerFriendBriefRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ServerGetPlayerFriendBriefRsp::~ServerGetPlayerFriendBriefRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetPlayerFriendBriefRsp)
  SharedDtor();
}

void ServerGetPlayerFriendBriefRsp::SharedDtor() {
}

void ServerGetPlayerFriendBriefRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetPlayerFriendBriefRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetPlayerFriendBriefRsp& ServerGetPlayerFriendBriefRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetPlayerFriendBriefRsp* ServerGetPlayerFriendBriefRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetPlayerFriendBriefRsp* n = new ServerGetPlayerFriendBriefRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetPlayerFriendBriefRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetPlayerFriendBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_brief_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerGetPlayerFriendBriefRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetPlayerFriendBriefRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief friend_brief_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_brief_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetPlayerFriendBriefRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetPlayerFriendBriefRsp)
  return false;
#undef DO_
}

void ServerGetPlayerFriendBriefRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetPlayerFriendBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.FriendBrief friend_brief_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_brief_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friend_brief_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetPlayerFriendBriefRsp)
}

::google::protobuf::uint8* ServerGetPlayerFriendBriefRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetPlayerFriendBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.FriendBrief friend_brief_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_brief_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->friend_brief_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetPlayerFriendBriefRsp)
  return target;
}

size_t ServerGetPlayerFriendBriefRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetPlayerFriendBriefRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FriendBrief friend_brief_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_brief_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_brief_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetPlayerFriendBriefRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetPlayerFriendBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetPlayerFriendBriefRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetPlayerFriendBriefRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetPlayerFriendBriefRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetPlayerFriendBriefRsp)
    MergeFrom(*source);
  }
}

void ServerGetPlayerFriendBriefRsp::MergeFrom(const ServerGetPlayerFriendBriefRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetPlayerFriendBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_brief_list_.MergeFrom(from.friend_brief_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerGetPlayerFriendBriefRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetPlayerFriendBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetPlayerFriendBriefRsp::CopyFrom(const ServerGetPlayerFriendBriefRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetPlayerFriendBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetPlayerFriendBriefRsp::IsInitialized() const {
  return true;
}

void ServerGetPlayerFriendBriefRsp::Swap(ServerGetPlayerFriendBriefRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetPlayerFriendBriefRsp::InternalSwap(ServerGetPlayerFriendBriefRsp* other) {
  using std::swap;
  friend_brief_list_.InternalSwap(&other->friend_brief_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetPlayerFriendBriefRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetPlayerFriendBriefRsp

// int32 retcode = 1;
void ServerGetPlayerFriendBriefRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetPlayerFriendBriefRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetPlayerFriendBriefRsp.retcode)
  return retcode_;
}
void ServerGetPlayerFriendBriefRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetPlayerFriendBriefRsp.retcode)
}

// repeated .proto.FriendBrief friend_brief_list = 2;
int ServerGetPlayerFriendBriefRsp::friend_brief_list_size() const {
  return friend_brief_list_.size();
}
void ServerGetPlayerFriendBriefRsp::clear_friend_brief_list() {
  friend_brief_list_.Clear();
}
const ::proto::FriendBrief& ServerGetPlayerFriendBriefRsp::friend_brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetPlayerFriendBriefRsp.friend_brief_list)
  return friend_brief_list_.Get(index);
}
::proto::FriendBrief* ServerGetPlayerFriendBriefRsp::mutable_friend_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGetPlayerFriendBriefRsp.friend_brief_list)
  return friend_brief_list_.Mutable(index);
}
::proto::FriendBrief* ServerGetPlayerFriendBriefRsp::add_friend_brief_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGetPlayerFriendBriefRsp.friend_brief_list)
  return friend_brief_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
ServerGetPlayerFriendBriefRsp::mutable_friend_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetPlayerFriendBriefRsp.friend_brief_list)
  return &friend_brief_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
ServerGetPlayerFriendBriefRsp::friend_brief_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetPlayerFriendBriefRsp.friend_brief_list)
  return friend_brief_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeverGetPS4FriendUidReq::kPsnIdListFieldNumber;
const int SeverGetPS4FriendUidReq::kRequestReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeverGetPS4FriendUidReq::SeverGetPS4FriendUidReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SeverGetPS4FriendUidReq)
}
SeverGetPS4FriendUidReq::SeverGetPS4FriendUidReq(const SeverGetPS4FriendUidReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      psn_id_list_(from.psn_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_reason_ = from.request_reason_;
  // @@protoc_insertion_point(copy_constructor:proto.SeverGetPS4FriendUidReq)
}

void SeverGetPS4FriendUidReq::SharedCtor() {
  request_reason_ = 0;
  _cached_size_ = 0;
}

SeverGetPS4FriendUidReq::~SeverGetPS4FriendUidReq() {
  // @@protoc_insertion_point(destructor:proto.SeverGetPS4FriendUidReq)
  SharedDtor();
}

void SeverGetPS4FriendUidReq::SharedDtor() {
}

void SeverGetPS4FriendUidReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SeverGetPS4FriendUidReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SeverGetPS4FriendUidReq& SeverGetPS4FriendUidReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SeverGetPS4FriendUidReq* SeverGetPS4FriendUidReq::New(::google::protobuf::Arena* arena) const {
  SeverGetPS4FriendUidReq* n = new SeverGetPS4FriendUidReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SeverGetPS4FriendUidReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SeverGetPS4FriendUidReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  psn_id_list_.Clear();
  request_reason_ = 0;
  _internal_metadata_.Clear();
}

bool SeverGetPS4FriendUidReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SeverGetPS4FriendUidReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string psn_id_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_psn_id_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->psn_id_list(this->psn_id_list_size() - 1).data(),
            static_cast<int>(this->psn_id_list(this->psn_id_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SeverGetPS4FriendUidReq.psn_id_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PSRequstReason request_reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_request_reason(static_cast< ::proto::PSRequstReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SeverGetPS4FriendUidReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SeverGetPS4FriendUidReq)
  return false;
#undef DO_
}

void SeverGetPS4FriendUidReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SeverGetPS4FriendUidReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string psn_id_list = 1;
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id_list(i).data(), static_cast<int>(this->psn_id_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SeverGetPS4FriendUidReq.psn_id_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->psn_id_list(i), output);
  }

  // .proto.PSRequstReason request_reason = 2;
  if (this->request_reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->request_reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SeverGetPS4FriendUidReq)
}

::google::protobuf::uint8* SeverGetPS4FriendUidReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SeverGetPS4FriendUidReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string psn_id_list = 1;
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->psn_id_list(i).data(), static_cast<int>(this->psn_id_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SeverGetPS4FriendUidReq.psn_id_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->psn_id_list(i), target);
  }

  // .proto.PSRequstReason request_reason = 2;
  if (this->request_reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->request_reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SeverGetPS4FriendUidReq)
  return target;
}

size_t SeverGetPS4FriendUidReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SeverGetPS4FriendUidReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string psn_id_list = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->psn_id_list_size());
  for (int i = 0, n = this->psn_id_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->psn_id_list(i));
  }

  // .proto.PSRequstReason request_reason = 2;
  if (this->request_reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->request_reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SeverGetPS4FriendUidReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SeverGetPS4FriendUidReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SeverGetPS4FriendUidReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SeverGetPS4FriendUidReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SeverGetPS4FriendUidReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SeverGetPS4FriendUidReq)
    MergeFrom(*source);
  }
}

void SeverGetPS4FriendUidReq::MergeFrom(const SeverGetPS4FriendUidReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SeverGetPS4FriendUidReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  psn_id_list_.MergeFrom(from.psn_id_list_);
  if (from.request_reason() != 0) {
    set_request_reason(from.request_reason());
  }
}

void SeverGetPS4FriendUidReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SeverGetPS4FriendUidReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeverGetPS4FriendUidReq::CopyFrom(const SeverGetPS4FriendUidReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SeverGetPS4FriendUidReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeverGetPS4FriendUidReq::IsInitialized() const {
  return true;
}

void SeverGetPS4FriendUidReq::Swap(SeverGetPS4FriendUidReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeverGetPS4FriendUidReq::InternalSwap(SeverGetPS4FriendUidReq* other) {
  using std::swap;
  psn_id_list_.InternalSwap(&other->psn_id_list_);
  swap(request_reason_, other->request_reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SeverGetPS4FriendUidReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SeverGetPS4FriendUidReq

// repeated string psn_id_list = 1;
int SeverGetPS4FriendUidReq::psn_id_list_size() const {
  return psn_id_list_.size();
}
void SeverGetPS4FriendUidReq::clear_psn_id_list() {
  psn_id_list_.Clear();
}
const ::std::string& SeverGetPS4FriendUidReq::psn_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SeverGetPS4FriendUidReq.psn_id_list)
  return psn_id_list_.Get(index);
}
::std::string* SeverGetPS4FriendUidReq::mutable_psn_id_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SeverGetPS4FriendUidReq.psn_id_list)
  return psn_id_list_.Mutable(index);
}
void SeverGetPS4FriendUidReq::set_psn_id_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.SeverGetPS4FriendUidReq.psn_id_list)
  psn_id_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void SeverGetPS4FriendUidReq::set_psn_id_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.SeverGetPS4FriendUidReq.psn_id_list)
  psn_id_list_.Mutable(index)->assign(std::move(value));
}
#endif
void SeverGetPS4FriendUidReq::set_psn_id_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.SeverGetPS4FriendUidReq.psn_id_list)
}
void SeverGetPS4FriendUidReq::set_psn_id_list(int index, const char* value, size_t size) {
  psn_id_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.SeverGetPS4FriendUidReq.psn_id_list)
}
::std::string* SeverGetPS4FriendUidReq::add_psn_id_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.SeverGetPS4FriendUidReq.psn_id_list)
  return psn_id_list_.Add();
}
void SeverGetPS4FriendUidReq::add_psn_id_list(const ::std::string& value) {
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.SeverGetPS4FriendUidReq.psn_id_list)
}
#if LANG_CXX11
void SeverGetPS4FriendUidReq::add_psn_id_list(::std::string&& value) {
  psn_id_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.SeverGetPS4FriendUidReq.psn_id_list)
}
#endif
void SeverGetPS4FriendUidReq::add_psn_id_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  psn_id_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.SeverGetPS4FriendUidReq.psn_id_list)
}
void SeverGetPS4FriendUidReq::add_psn_id_list(const char* value, size_t size) {
  psn_id_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.SeverGetPS4FriendUidReq.psn_id_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
SeverGetPS4FriendUidReq::psn_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SeverGetPS4FriendUidReq.psn_id_list)
  return psn_id_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
SeverGetPS4FriendUidReq::mutable_psn_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SeverGetPS4FriendUidReq.psn_id_list)
  return &psn_id_list_;
}

// .proto.PSRequstReason request_reason = 2;
void SeverGetPS4FriendUidReq::clear_request_reason() {
  request_reason_ = 0;
}
::proto::PSRequstReason SeverGetPS4FriendUidReq::request_reason() const {
  // @@protoc_insertion_point(field_get:proto.SeverGetPS4FriendUidReq.request_reason)
  return static_cast< ::proto::PSRequstReason >(request_reason_);
}
void SeverGetPS4FriendUidReq::set_request_reason(::proto::PSRequstReason value) {
  
  request_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.SeverGetPS4FriendUidReq.request_reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeverGetPS4FriendUidRsp::kRetcodeFieldNumber;
const int SeverGetPS4FriendUidRsp::kUidIdListFieldNumber;
const int SeverGetPS4FriendUidRsp::kRequestReasonFieldNumber;
const int SeverGetPS4FriendUidRsp::kFriendBriefListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeverGetPS4FriendUidRsp::SeverGetPS4FriendUidRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SeverGetPS4FriendUidRsp)
}
SeverGetPS4FriendUidRsp::SeverGetPS4FriendUidRsp(const SeverGetPS4FriendUidRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uid_id_list_(from.uid_id_list_),
      friend_brief_list_(from.friend_brief_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&request_reason_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(request_reason_));
  // @@protoc_insertion_point(copy_constructor:proto.SeverGetPS4FriendUidRsp)
}

void SeverGetPS4FriendUidRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&request_reason_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(request_reason_));
  _cached_size_ = 0;
}

SeverGetPS4FriendUidRsp::~SeverGetPS4FriendUidRsp() {
  // @@protoc_insertion_point(destructor:proto.SeverGetPS4FriendUidRsp)
  SharedDtor();
}

void SeverGetPS4FriendUidRsp::SharedDtor() {
}

void SeverGetPS4FriendUidRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SeverGetPS4FriendUidRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SeverGetPS4FriendUidRsp& SeverGetPS4FriendUidRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SeverGetPS4FriendUidRsp* SeverGetPS4FriendUidRsp::New(::google::protobuf::Arena* arena) const {
  SeverGetPS4FriendUidRsp* n = new SeverGetPS4FriendUidRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SeverGetPS4FriendUidRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SeverGetPS4FriendUidRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_id_list_.Clear();
  friend_brief_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&request_reason_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(request_reason_));
  _internal_metadata_.Clear();
}

bool SeverGetPS4FriendUidRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SeverGetPS4FriendUidRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 uid_id_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uid_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_uid_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PSRequstReason request_reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_request_reason(static_cast< ::proto::PSRequstReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief friend_brief_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_brief_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SeverGetPS4FriendUidRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SeverGetPS4FriendUidRsp)
  return false;
#undef DO_
}

void SeverGetPS4FriendUidRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SeverGetPS4FriendUidRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated uint32 uid_id_list = 2;
  if (this->uid_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uid_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->uid_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->uid_id_list(i), output);
  }

  // .proto.PSRequstReason request_reason = 3;
  if (this->request_reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->request_reason(), output);
  }

  // repeated .proto.FriendBrief friend_brief_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_brief_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->friend_brief_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SeverGetPS4FriendUidRsp)
}

::google::protobuf::uint8* SeverGetPS4FriendUidRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SeverGetPS4FriendUidRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated uint32 uid_id_list = 2;
  if (this->uid_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _uid_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->uid_id_list_, target);
  }

  // .proto.PSRequstReason request_reason = 3;
  if (this->request_reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->request_reason(), target);
  }

  // repeated .proto.FriendBrief friend_brief_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_brief_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->friend_brief_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SeverGetPS4FriendUidRsp)
  return target;
}

size_t SeverGetPS4FriendUidRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SeverGetPS4FriendUidRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 uid_id_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->uid_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uid_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.FriendBrief friend_brief_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_brief_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_brief_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.PSRequstReason request_reason = 3;
  if (this->request_reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->request_reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SeverGetPS4FriendUidRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SeverGetPS4FriendUidRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SeverGetPS4FriendUidRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SeverGetPS4FriendUidRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SeverGetPS4FriendUidRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SeverGetPS4FriendUidRsp)
    MergeFrom(*source);
  }
}

void SeverGetPS4FriendUidRsp::MergeFrom(const SeverGetPS4FriendUidRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SeverGetPS4FriendUidRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uid_id_list_.MergeFrom(from.uid_id_list_);
  friend_brief_list_.MergeFrom(from.friend_brief_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.request_reason() != 0) {
    set_request_reason(from.request_reason());
  }
}

void SeverGetPS4FriendUidRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SeverGetPS4FriendUidRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeverGetPS4FriendUidRsp::CopyFrom(const SeverGetPS4FriendUidRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SeverGetPS4FriendUidRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeverGetPS4FriendUidRsp::IsInitialized() const {
  return true;
}

void SeverGetPS4FriendUidRsp::Swap(SeverGetPS4FriendUidRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeverGetPS4FriendUidRsp::InternalSwap(SeverGetPS4FriendUidRsp* other) {
  using std::swap;
  uid_id_list_.InternalSwap(&other->uid_id_list_);
  friend_brief_list_.InternalSwap(&other->friend_brief_list_);
  swap(retcode_, other->retcode_);
  swap(request_reason_, other->request_reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SeverGetPS4FriendUidRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SeverGetPS4FriendUidRsp

// int32 retcode = 1;
void SeverGetPS4FriendUidRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SeverGetPS4FriendUidRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SeverGetPS4FriendUidRsp.retcode)
  return retcode_;
}
void SeverGetPS4FriendUidRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SeverGetPS4FriendUidRsp.retcode)
}

// repeated uint32 uid_id_list = 2;
int SeverGetPS4FriendUidRsp::uid_id_list_size() const {
  return uid_id_list_.size();
}
void SeverGetPS4FriendUidRsp::clear_uid_id_list() {
  uid_id_list_.Clear();
}
::google::protobuf::uint32 SeverGetPS4FriendUidRsp::uid_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SeverGetPS4FriendUidRsp.uid_id_list)
  return uid_id_list_.Get(index);
}
void SeverGetPS4FriendUidRsp::set_uid_id_list(int index, ::google::protobuf::uint32 value) {
  uid_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SeverGetPS4FriendUidRsp.uid_id_list)
}
void SeverGetPS4FriendUidRsp::add_uid_id_list(::google::protobuf::uint32 value) {
  uid_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SeverGetPS4FriendUidRsp.uid_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SeverGetPS4FriendUidRsp::uid_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SeverGetPS4FriendUidRsp.uid_id_list)
  return uid_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SeverGetPS4FriendUidRsp::mutable_uid_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SeverGetPS4FriendUidRsp.uid_id_list)
  return &uid_id_list_;
}

// .proto.PSRequstReason request_reason = 3;
void SeverGetPS4FriendUidRsp::clear_request_reason() {
  request_reason_ = 0;
}
::proto::PSRequstReason SeverGetPS4FriendUidRsp::request_reason() const {
  // @@protoc_insertion_point(field_get:proto.SeverGetPS4FriendUidRsp.request_reason)
  return static_cast< ::proto::PSRequstReason >(request_reason_);
}
void SeverGetPS4FriendUidRsp::set_request_reason(::proto::PSRequstReason value) {
  
  request_reason_ = value;
  // @@protoc_insertion_point(field_set:proto.SeverGetPS4FriendUidRsp.request_reason)
}

// repeated .proto.FriendBrief friend_brief_list = 4;
int SeverGetPS4FriendUidRsp::friend_brief_list_size() const {
  return friend_brief_list_.size();
}
void SeverGetPS4FriendUidRsp::clear_friend_brief_list() {
  friend_brief_list_.Clear();
}
const ::proto::FriendBrief& SeverGetPS4FriendUidRsp::friend_brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SeverGetPS4FriendUidRsp.friend_brief_list)
  return friend_brief_list_.Get(index);
}
::proto::FriendBrief* SeverGetPS4FriendUidRsp::mutable_friend_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SeverGetPS4FriendUidRsp.friend_brief_list)
  return friend_brief_list_.Mutable(index);
}
::proto::FriendBrief* SeverGetPS4FriendUidRsp::add_friend_brief_list() {
  // @@protoc_insertion_point(field_add:proto.SeverGetPS4FriendUidRsp.friend_brief_list)
  return friend_brief_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
SeverGetPS4FriendUidRsp::mutable_friend_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SeverGetPS4FriendUidRsp.friend_brief_list)
  return &friend_brief_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
SeverGetPS4FriendUidRsp::friend_brief_list() const {
  // @@protoc_insertion_point(field_list:proto.SeverGetPS4FriendUidRsp.friend_brief_list)
  return friend_brief_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncPlayerBriefNotify::kBasicBriefDataFieldNumber;
const int SyncPlayerBriefNotify::kMpBriefDataFieldNumber;
const int SyncPlayerBriefNotify::kSocialBriefDataFieldNumber;
const int SyncPlayerBriefNotify::kHomeBriefDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncPlayerBriefNotify::SyncPlayerBriefNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SyncPlayerBriefNotify)
}
SyncPlayerBriefNotify::SyncPlayerBriefNotify(const SyncPlayerBriefNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basic_brief_data()) {
    basic_brief_data_ = new ::proto::PlayerBasicBriefData(*from.basic_brief_data_);
  } else {
    basic_brief_data_ = NULL;
  }
  if (from.has_mp_brief_data()) {
    mp_brief_data_ = new ::proto::PlayerMpBriefData(*from.mp_brief_data_);
  } else {
    mp_brief_data_ = NULL;
  }
  if (from.has_social_brief_data()) {
    social_brief_data_ = new ::proto::PlayerSocialBriefData(*from.social_brief_data_);
  } else {
    social_brief_data_ = NULL;
  }
  if (from.has_home_brief_data()) {
    home_brief_data_ = new ::proto::PlayerHomeBriefData(*from.home_brief_data_);
  } else {
    home_brief_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SyncPlayerBriefNotify)
}

void SyncPlayerBriefNotify::SharedCtor() {
  ::memset(&basic_brief_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&home_brief_data_) -
      reinterpret_cast<char*>(&basic_brief_data_)) + sizeof(home_brief_data_));
  _cached_size_ = 0;
}

SyncPlayerBriefNotify::~SyncPlayerBriefNotify() {
  // @@protoc_insertion_point(destructor:proto.SyncPlayerBriefNotify)
  SharedDtor();
}

void SyncPlayerBriefNotify::SharedDtor() {
  if (this != internal_default_instance()) delete basic_brief_data_;
  if (this != internal_default_instance()) delete mp_brief_data_;
  if (this != internal_default_instance()) delete social_brief_data_;
  if (this != internal_default_instance()) delete home_brief_data_;
}

void SyncPlayerBriefNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncPlayerBriefNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncPlayerBriefNotify& SyncPlayerBriefNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SyncPlayerBriefNotify* SyncPlayerBriefNotify::New(::google::protobuf::Arena* arena) const {
  SyncPlayerBriefNotify* n = new SyncPlayerBriefNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncPlayerBriefNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SyncPlayerBriefNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && basic_brief_data_ != NULL) {
    delete basic_brief_data_;
  }
  basic_brief_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && mp_brief_data_ != NULL) {
    delete mp_brief_data_;
  }
  mp_brief_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && social_brief_data_ != NULL) {
    delete social_brief_data_;
  }
  social_brief_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && home_brief_data_ != NULL) {
    delete home_brief_data_;
  }
  home_brief_data_ = NULL;
  _internal_metadata_.Clear();
}

bool SyncPlayerBriefNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SyncPlayerBriefNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PlayerBasicBriefData basic_brief_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_brief_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlayerMpBriefData mp_brief_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mp_brief_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlayerSocialBriefData social_brief_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_social_brief_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlayerHomeBriefData home_brief_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_home_brief_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SyncPlayerBriefNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SyncPlayerBriefNotify)
  return false;
#undef DO_
}

void SyncPlayerBriefNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SyncPlayerBriefNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerBasicBriefData basic_brief_data = 1;
  if (this->has_basic_brief_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basic_brief_data_, output);
  }

  // .proto.PlayerMpBriefData mp_brief_data = 2;
  if (this->has_mp_brief_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->mp_brief_data_, output);
  }

  // .proto.PlayerSocialBriefData social_brief_data = 3;
  if (this->has_social_brief_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->social_brief_data_, output);
  }

  // .proto.PlayerHomeBriefData home_brief_data = 4;
  if (this->has_home_brief_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->home_brief_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SyncPlayerBriefNotify)
}

::google::protobuf::uint8* SyncPlayerBriefNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SyncPlayerBriefNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerBasicBriefData basic_brief_data = 1;
  if (this->has_basic_brief_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basic_brief_data_, deterministic, target);
  }

  // .proto.PlayerMpBriefData mp_brief_data = 2;
  if (this->has_mp_brief_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->mp_brief_data_, deterministic, target);
  }

  // .proto.PlayerSocialBriefData social_brief_data = 3;
  if (this->has_social_brief_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->social_brief_data_, deterministic, target);
  }

  // .proto.PlayerHomeBriefData home_brief_data = 4;
  if (this->has_home_brief_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->home_brief_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SyncPlayerBriefNotify)
  return target;
}

size_t SyncPlayerBriefNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SyncPlayerBriefNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.PlayerBasicBriefData basic_brief_data = 1;
  if (this->has_basic_brief_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->basic_brief_data_);
  }

  // .proto.PlayerMpBriefData mp_brief_data = 2;
  if (this->has_mp_brief_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mp_brief_data_);
  }

  // .proto.PlayerSocialBriefData social_brief_data = 3;
  if (this->has_social_brief_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->social_brief_data_);
  }

  // .proto.PlayerHomeBriefData home_brief_data = 4;
  if (this->has_home_brief_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->home_brief_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncPlayerBriefNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SyncPlayerBriefNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncPlayerBriefNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncPlayerBriefNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SyncPlayerBriefNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SyncPlayerBriefNotify)
    MergeFrom(*source);
  }
}

void SyncPlayerBriefNotify::MergeFrom(const SyncPlayerBriefNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SyncPlayerBriefNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_basic_brief_data()) {
    mutable_basic_brief_data()->::proto::PlayerBasicBriefData::MergeFrom(from.basic_brief_data());
  }
  if (from.has_mp_brief_data()) {
    mutable_mp_brief_data()->::proto::PlayerMpBriefData::MergeFrom(from.mp_brief_data());
  }
  if (from.has_social_brief_data()) {
    mutable_social_brief_data()->::proto::PlayerSocialBriefData::MergeFrom(from.social_brief_data());
  }
  if (from.has_home_brief_data()) {
    mutable_home_brief_data()->::proto::PlayerHomeBriefData::MergeFrom(from.home_brief_data());
  }
}

void SyncPlayerBriefNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SyncPlayerBriefNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncPlayerBriefNotify::CopyFrom(const SyncPlayerBriefNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SyncPlayerBriefNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncPlayerBriefNotify::IsInitialized() const {
  return true;
}

void SyncPlayerBriefNotify::Swap(SyncPlayerBriefNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncPlayerBriefNotify::InternalSwap(SyncPlayerBriefNotify* other) {
  using std::swap;
  swap(basic_brief_data_, other->basic_brief_data_);
  swap(mp_brief_data_, other->mp_brief_data_);
  swap(social_brief_data_, other->social_brief_data_);
  swap(home_brief_data_, other->home_brief_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncPlayerBriefNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncPlayerBriefNotify

// .proto.PlayerBasicBriefData basic_brief_data = 1;
bool SyncPlayerBriefNotify::has_basic_brief_data() const {
  return this != internal_default_instance() && basic_brief_data_ != NULL;
}
void SyncPlayerBriefNotify::clear_basic_brief_data() {
  if (GetArenaNoVirtual() == NULL && basic_brief_data_ != NULL) delete basic_brief_data_;
  basic_brief_data_ = NULL;
}
const ::proto::PlayerBasicBriefData& SyncPlayerBriefNotify::basic_brief_data() const {
  const ::proto::PlayerBasicBriefData* p = basic_brief_data_;
  // @@protoc_insertion_point(field_get:proto.SyncPlayerBriefNotify.basic_brief_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlayerBasicBriefData*>(
      &::proto::_PlayerBasicBriefData_default_instance_);
}
::proto::PlayerBasicBriefData* SyncPlayerBriefNotify::mutable_basic_brief_data() {
  
  if (basic_brief_data_ == NULL) {
    basic_brief_data_ = new ::proto::PlayerBasicBriefData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SyncPlayerBriefNotify.basic_brief_data)
  return basic_brief_data_;
}
::proto::PlayerBasicBriefData* SyncPlayerBriefNotify::release_basic_brief_data() {
  // @@protoc_insertion_point(field_release:proto.SyncPlayerBriefNotify.basic_brief_data)
  
  ::proto::PlayerBasicBriefData* temp = basic_brief_data_;
  basic_brief_data_ = NULL;
  return temp;
}
void SyncPlayerBriefNotify::set_allocated_basic_brief_data(::proto::PlayerBasicBriefData* basic_brief_data) {
  delete basic_brief_data_;
  basic_brief_data_ = basic_brief_data;
  if (basic_brief_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SyncPlayerBriefNotify.basic_brief_data)
}

// .proto.PlayerMpBriefData mp_brief_data = 2;
bool SyncPlayerBriefNotify::has_mp_brief_data() const {
  return this != internal_default_instance() && mp_brief_data_ != NULL;
}
void SyncPlayerBriefNotify::clear_mp_brief_data() {
  if (GetArenaNoVirtual() == NULL && mp_brief_data_ != NULL) delete mp_brief_data_;
  mp_brief_data_ = NULL;
}
const ::proto::PlayerMpBriefData& SyncPlayerBriefNotify::mp_brief_data() const {
  const ::proto::PlayerMpBriefData* p = mp_brief_data_;
  // @@protoc_insertion_point(field_get:proto.SyncPlayerBriefNotify.mp_brief_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlayerMpBriefData*>(
      &::proto::_PlayerMpBriefData_default_instance_);
}
::proto::PlayerMpBriefData* SyncPlayerBriefNotify::mutable_mp_brief_data() {
  
  if (mp_brief_data_ == NULL) {
    mp_brief_data_ = new ::proto::PlayerMpBriefData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SyncPlayerBriefNotify.mp_brief_data)
  return mp_brief_data_;
}
::proto::PlayerMpBriefData* SyncPlayerBriefNotify::release_mp_brief_data() {
  // @@protoc_insertion_point(field_release:proto.SyncPlayerBriefNotify.mp_brief_data)
  
  ::proto::PlayerMpBriefData* temp = mp_brief_data_;
  mp_brief_data_ = NULL;
  return temp;
}
void SyncPlayerBriefNotify::set_allocated_mp_brief_data(::proto::PlayerMpBriefData* mp_brief_data) {
  delete mp_brief_data_;
  mp_brief_data_ = mp_brief_data;
  if (mp_brief_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SyncPlayerBriefNotify.mp_brief_data)
}

// .proto.PlayerSocialBriefData social_brief_data = 3;
bool SyncPlayerBriefNotify::has_social_brief_data() const {
  return this != internal_default_instance() && social_brief_data_ != NULL;
}
void SyncPlayerBriefNotify::clear_social_brief_data() {
  if (GetArenaNoVirtual() == NULL && social_brief_data_ != NULL) delete social_brief_data_;
  social_brief_data_ = NULL;
}
const ::proto::PlayerSocialBriefData& SyncPlayerBriefNotify::social_brief_data() const {
  const ::proto::PlayerSocialBriefData* p = social_brief_data_;
  // @@protoc_insertion_point(field_get:proto.SyncPlayerBriefNotify.social_brief_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlayerSocialBriefData*>(
      &::proto::_PlayerSocialBriefData_default_instance_);
}
::proto::PlayerSocialBriefData* SyncPlayerBriefNotify::mutable_social_brief_data() {
  
  if (social_brief_data_ == NULL) {
    social_brief_data_ = new ::proto::PlayerSocialBriefData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SyncPlayerBriefNotify.social_brief_data)
  return social_brief_data_;
}
::proto::PlayerSocialBriefData* SyncPlayerBriefNotify::release_social_brief_data() {
  // @@protoc_insertion_point(field_release:proto.SyncPlayerBriefNotify.social_brief_data)
  
  ::proto::PlayerSocialBriefData* temp = social_brief_data_;
  social_brief_data_ = NULL;
  return temp;
}
void SyncPlayerBriefNotify::set_allocated_social_brief_data(::proto::PlayerSocialBriefData* social_brief_data) {
  delete social_brief_data_;
  social_brief_data_ = social_brief_data;
  if (social_brief_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SyncPlayerBriefNotify.social_brief_data)
}

// .proto.PlayerHomeBriefData home_brief_data = 4;
bool SyncPlayerBriefNotify::has_home_brief_data() const {
  return this != internal_default_instance() && home_brief_data_ != NULL;
}
void SyncPlayerBriefNotify::clear_home_brief_data() {
  if (GetArenaNoVirtual() == NULL && home_brief_data_ != NULL) delete home_brief_data_;
  home_brief_data_ = NULL;
}
const ::proto::PlayerHomeBriefData& SyncPlayerBriefNotify::home_brief_data() const {
  const ::proto::PlayerHomeBriefData* p = home_brief_data_;
  // @@protoc_insertion_point(field_get:proto.SyncPlayerBriefNotify.home_brief_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlayerHomeBriefData*>(
      &::proto::_PlayerHomeBriefData_default_instance_);
}
::proto::PlayerHomeBriefData* SyncPlayerBriefNotify::mutable_home_brief_data() {
  
  if (home_brief_data_ == NULL) {
    home_brief_data_ = new ::proto::PlayerHomeBriefData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SyncPlayerBriefNotify.home_brief_data)
  return home_brief_data_;
}
::proto::PlayerHomeBriefData* SyncPlayerBriefNotify::release_home_brief_data() {
  // @@protoc_insertion_point(field_release:proto.SyncPlayerBriefNotify.home_brief_data)
  
  ::proto::PlayerHomeBriefData* temp = home_brief_data_;
  home_brief_data_ = NULL;
  return temp;
}
void SyncPlayerBriefNotify::set_allocated_home_brief_data(::proto::PlayerHomeBriefData* home_brief_data) {
  delete home_brief_data_;
  home_brief_data_ = home_brief_data;
  if (home_brief_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SyncPlayerBriefNotify.home_brief_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAddBlacklistReq::kTargetUidFieldNumber;
const int ServerAddBlacklistReq::kIsFriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAddBlacklistReq::ServerAddBlacklistReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerAddBlacklistReq)
}
ServerAddBlacklistReq::ServerAddBlacklistReq(const ServerAddBlacklistReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&target_uid_, &from.target_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_friend_) -
    reinterpret_cast<char*>(&target_uid_)) + sizeof(is_friend_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerAddBlacklistReq)
}

void ServerAddBlacklistReq::SharedCtor() {
  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_friend_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(is_friend_));
  _cached_size_ = 0;
}

ServerAddBlacklistReq::~ServerAddBlacklistReq() {
  // @@protoc_insertion_point(destructor:proto.ServerAddBlacklistReq)
  SharedDtor();
}

void ServerAddBlacklistReq::SharedDtor() {
}

void ServerAddBlacklistReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAddBlacklistReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAddBlacklistReq& ServerAddBlacklistReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerAddBlacklistReq* ServerAddBlacklistReq::New(::google::protobuf::Arena* arena) const {
  ServerAddBlacklistReq* n = new ServerAddBlacklistReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAddBlacklistReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerAddBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&target_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_friend_) -
      reinterpret_cast<char*>(&target_uid_)) + sizeof(is_friend_));
  _internal_metadata_.Clear();
}

bool ServerAddBlacklistReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerAddBlacklistReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_friend = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_friend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerAddBlacklistReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerAddBlacklistReq)
  return false;
#undef DO_
}

void ServerAddBlacklistReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerAddBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  // bool is_friend = 2;
  if (this->is_friend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_friend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerAddBlacklistReq)
}

::google::protobuf::uint8* ServerAddBlacklistReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerAddBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  // bool is_friend = 2;
  if (this->is_friend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_friend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerAddBlacklistReq)
  return target;
}

size_t ServerAddBlacklistReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerAddBlacklistReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // bool is_friend = 2;
  if (this->is_friend() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAddBlacklistReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerAddBlacklistReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAddBlacklistReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAddBlacklistReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerAddBlacklistReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerAddBlacklistReq)
    MergeFrom(*source);
  }
}

void ServerAddBlacklistReq::MergeFrom(const ServerAddBlacklistReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerAddBlacklistReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.is_friend() != 0) {
    set_is_friend(from.is_friend());
  }
}

void ServerAddBlacklistReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerAddBlacklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAddBlacklistReq::CopyFrom(const ServerAddBlacklistReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerAddBlacklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAddBlacklistReq::IsInitialized() const {
  return true;
}

void ServerAddBlacklistReq::Swap(ServerAddBlacklistReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAddBlacklistReq::InternalSwap(ServerAddBlacklistReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  swap(is_friend_, other->is_friend_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAddBlacklistReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAddBlacklistReq

// uint32 target_uid = 1;
void ServerAddBlacklistReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerAddBlacklistReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerAddBlacklistReq.target_uid)
  return target_uid_;
}
void ServerAddBlacklistReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAddBlacklistReq.target_uid)
}

// bool is_friend = 2;
void ServerAddBlacklistReq::clear_is_friend() {
  is_friend_ = false;
}
bool ServerAddBlacklistReq::is_friend() const {
  // @@protoc_insertion_point(field_get:proto.ServerAddBlacklistReq.is_friend)
  return is_friend_;
}
void ServerAddBlacklistReq::set_is_friend(bool value) {
  
  is_friend_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAddBlacklistReq.is_friend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAddBlacklistRsp::kRetcodeFieldNumber;
const int ServerAddBlacklistRsp::kTargetFriendBriefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAddBlacklistRsp::ServerAddBlacklistRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerAddBlacklistRsp)
}
ServerAddBlacklistRsp::ServerAddBlacklistRsp(const ServerAddBlacklistRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_friend_brief()) {
    target_friend_brief_ = new ::proto::FriendBrief(*from.target_friend_brief_);
  } else {
    target_friend_brief_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerAddBlacklistRsp)
}

void ServerAddBlacklistRsp::SharedCtor() {
  ::memset(&target_friend_brief_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&target_friend_brief_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

ServerAddBlacklistRsp::~ServerAddBlacklistRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerAddBlacklistRsp)
  SharedDtor();
}

void ServerAddBlacklistRsp::SharedDtor() {
  if (this != internal_default_instance()) delete target_friend_brief_;
}

void ServerAddBlacklistRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAddBlacklistRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAddBlacklistRsp& ServerAddBlacklistRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerAddBlacklistRsp* ServerAddBlacklistRsp::New(::google::protobuf::Arena* arena) const {
  ServerAddBlacklistRsp* n = new ServerAddBlacklistRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAddBlacklistRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerAddBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) {
    delete target_friend_brief_;
  }
  target_friend_brief_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerAddBlacklistRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerAddBlacklistRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendBrief target_friend_brief = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_target_friend_brief()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerAddBlacklistRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerAddBlacklistRsp)
  return false;
#undef DO_
}

void ServerAddBlacklistRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerAddBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.FriendBrief target_friend_brief = 2;
  if (this->has_target_friend_brief()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->target_friend_brief_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerAddBlacklistRsp)
}

::google::protobuf::uint8* ServerAddBlacklistRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerAddBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.FriendBrief target_friend_brief = 2;
  if (this->has_target_friend_brief()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->target_friend_brief_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerAddBlacklistRsp)
  return target;
}

size_t ServerAddBlacklistRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerAddBlacklistRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FriendBrief target_friend_brief = 2;
  if (this->has_target_friend_brief()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->target_friend_brief_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAddBlacklistRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerAddBlacklistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAddBlacklistRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAddBlacklistRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerAddBlacklistRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerAddBlacklistRsp)
    MergeFrom(*source);
  }
}

void ServerAddBlacklistRsp::MergeFrom(const ServerAddBlacklistRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerAddBlacklistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_friend_brief()) {
    mutable_target_friend_brief()->::proto::FriendBrief::MergeFrom(from.target_friend_brief());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerAddBlacklistRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerAddBlacklistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAddBlacklistRsp::CopyFrom(const ServerAddBlacklistRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerAddBlacklistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAddBlacklistRsp::IsInitialized() const {
  return true;
}

void ServerAddBlacklistRsp::Swap(ServerAddBlacklistRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAddBlacklistRsp::InternalSwap(ServerAddBlacklistRsp* other) {
  using std::swap;
  swap(target_friend_brief_, other->target_friend_brief_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAddBlacklistRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAddBlacklistRsp

// int32 retcode = 1;
void ServerAddBlacklistRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerAddBlacklistRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerAddBlacklistRsp.retcode)
  return retcode_;
}
void ServerAddBlacklistRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAddBlacklistRsp.retcode)
}

// .proto.FriendBrief target_friend_brief = 2;
bool ServerAddBlacklistRsp::has_target_friend_brief() const {
  return this != internal_default_instance() && target_friend_brief_ != NULL;
}
void ServerAddBlacklistRsp::clear_target_friend_brief() {
  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) delete target_friend_brief_;
  target_friend_brief_ = NULL;
}
const ::proto::FriendBrief& ServerAddBlacklistRsp::target_friend_brief() const {
  const ::proto::FriendBrief* p = target_friend_brief_;
  // @@protoc_insertion_point(field_get:proto.ServerAddBlacklistRsp.target_friend_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FriendBrief*>(
      &::proto::_FriendBrief_default_instance_);
}
::proto::FriendBrief* ServerAddBlacklistRsp::mutable_target_friend_brief() {
  
  if (target_friend_brief_ == NULL) {
    target_friend_brief_ = new ::proto::FriendBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerAddBlacklistRsp.target_friend_brief)
  return target_friend_brief_;
}
::proto::FriendBrief* ServerAddBlacklistRsp::release_target_friend_brief() {
  // @@protoc_insertion_point(field_release:proto.ServerAddBlacklistRsp.target_friend_brief)
  
  ::proto::FriendBrief* temp = target_friend_brief_;
  target_friend_brief_ = NULL;
  return temp;
}
void ServerAddBlacklistRsp::set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief) {
  delete target_friend_brief_;
  target_friend_brief_ = target_friend_brief;
  if (target_friend_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerAddBlacklistRsp.target_friend_brief)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRemoveBlacklistReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRemoveBlacklistReq::ServerRemoveBlacklistReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerRemoveBlacklistReq)
}
ServerRemoveBlacklistReq::ServerRemoveBlacklistReq(const ServerRemoveBlacklistReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerRemoveBlacklistReq)
}

void ServerRemoveBlacklistReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

ServerRemoveBlacklistReq::~ServerRemoveBlacklistReq() {
  // @@protoc_insertion_point(destructor:proto.ServerRemoveBlacklistReq)
  SharedDtor();
}

void ServerRemoveBlacklistReq::SharedDtor() {
}

void ServerRemoveBlacklistReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRemoveBlacklistReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRemoveBlacklistReq& ServerRemoveBlacklistReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerRemoveBlacklistReq* ServerRemoveBlacklistReq::New(::google::protobuf::Arena* arena) const {
  ServerRemoveBlacklistReq* n = new ServerRemoveBlacklistReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerRemoveBlacklistReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerRemoveBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerRemoveBlacklistReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerRemoveBlacklistReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerRemoveBlacklistReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerRemoveBlacklistReq)
  return false;
#undef DO_
}

void ServerRemoveBlacklistReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerRemoveBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerRemoveBlacklistReq)
}

::google::protobuf::uint8* ServerRemoveBlacklistReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerRemoveBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerRemoveBlacklistReq)
  return target;
}

size_t ServerRemoveBlacklistReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerRemoveBlacklistReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRemoveBlacklistReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerRemoveBlacklistReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRemoveBlacklistReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRemoveBlacklistReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerRemoveBlacklistReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerRemoveBlacklistReq)
    MergeFrom(*source);
  }
}

void ServerRemoveBlacklistReq::MergeFrom(const ServerRemoveBlacklistReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerRemoveBlacklistReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ServerRemoveBlacklistReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerRemoveBlacklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRemoveBlacklistReq::CopyFrom(const ServerRemoveBlacklistReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerRemoveBlacklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRemoveBlacklistReq::IsInitialized() const {
  return true;
}

void ServerRemoveBlacklistReq::Swap(ServerRemoveBlacklistReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRemoveBlacklistReq::InternalSwap(ServerRemoveBlacklistReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerRemoveBlacklistReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerRemoveBlacklistReq

// uint32 target_uid = 1;
void ServerRemoveBlacklistReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerRemoveBlacklistReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerRemoveBlacklistReq.target_uid)
  return target_uid_;
}
void ServerRemoveBlacklistReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerRemoveBlacklistReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRemoveBlacklistRsp::kRetcodeFieldNumber;
const int ServerRemoveBlacklistRsp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRemoveBlacklistRsp::ServerRemoveBlacklistRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerRemoveBlacklistRsp)
}
ServerRemoveBlacklistRsp::ServerRemoveBlacklistRsp(const ServerRemoveBlacklistRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerRemoveBlacklistRsp)
}

void ServerRemoveBlacklistRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

ServerRemoveBlacklistRsp::~ServerRemoveBlacklistRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerRemoveBlacklistRsp)
  SharedDtor();
}

void ServerRemoveBlacklistRsp::SharedDtor() {
}

void ServerRemoveBlacklistRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRemoveBlacklistRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRemoveBlacklistRsp& ServerRemoveBlacklistRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerRemoveBlacklistRsp* ServerRemoveBlacklistRsp::New(::google::protobuf::Arena* arena) const {
  ServerRemoveBlacklistRsp* n = new ServerRemoveBlacklistRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerRemoveBlacklistRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerRemoveBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool ServerRemoveBlacklistRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerRemoveBlacklistRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerRemoveBlacklistRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerRemoveBlacklistRsp)
  return false;
#undef DO_
}

void ServerRemoveBlacklistRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerRemoveBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerRemoveBlacklistRsp)
}

::google::protobuf::uint8* ServerRemoveBlacklistRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerRemoveBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerRemoveBlacklistRsp)
  return target;
}

size_t ServerRemoveBlacklistRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerRemoveBlacklistRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRemoveBlacklistRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerRemoveBlacklistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRemoveBlacklistRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRemoveBlacklistRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerRemoveBlacklistRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerRemoveBlacklistRsp)
    MergeFrom(*source);
  }
}

void ServerRemoveBlacklistRsp::MergeFrom(const ServerRemoveBlacklistRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerRemoveBlacklistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ServerRemoveBlacklistRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerRemoveBlacklistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRemoveBlacklistRsp::CopyFrom(const ServerRemoveBlacklistRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerRemoveBlacklistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRemoveBlacklistRsp::IsInitialized() const {
  return true;
}

void ServerRemoveBlacklistRsp::Swap(ServerRemoveBlacklistRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRemoveBlacklistRsp::InternalSwap(ServerRemoveBlacklistRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerRemoveBlacklistRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerRemoveBlacklistRsp

// int32 retcode = 1;
void ServerRemoveBlacklistRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerRemoveBlacklistRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerRemoveBlacklistRsp.retcode)
  return retcode_;
}
void ServerRemoveBlacklistRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerRemoveBlacklistRsp.retcode)
}

// uint32 target_uid = 2;
void ServerRemoveBlacklistRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerRemoveBlacklistRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerRemoveBlacklistRsp.target_uid)
  return target_uid_;
}
void ServerRemoveBlacklistRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerRemoveBlacklistRsp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetRecentMpPlayerListReq::kRecentPlayerUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetRecentMpPlayerListReq::ServerGetRecentMpPlayerListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetRecentMpPlayerListReq)
}
ServerGetRecentMpPlayerListReq::ServerGetRecentMpPlayerListReq(const ServerGetRecentMpPlayerListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      recent_player_uid_list_(from.recent_player_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetRecentMpPlayerListReq)
}

void ServerGetRecentMpPlayerListReq::SharedCtor() {
  _cached_size_ = 0;
}

ServerGetRecentMpPlayerListReq::~ServerGetRecentMpPlayerListReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetRecentMpPlayerListReq)
  SharedDtor();
}

void ServerGetRecentMpPlayerListReq::SharedDtor() {
}

void ServerGetRecentMpPlayerListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetRecentMpPlayerListReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetRecentMpPlayerListReq& ServerGetRecentMpPlayerListReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetRecentMpPlayerListReq* ServerGetRecentMpPlayerListReq::New(::google::protobuf::Arena* arena) const {
  ServerGetRecentMpPlayerListReq* n = new ServerGetRecentMpPlayerListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetRecentMpPlayerListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetRecentMpPlayerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recent_player_uid_list_.Clear();
  _internal_metadata_.Clear();
}

bool ServerGetRecentMpPlayerListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetRecentMpPlayerListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 recent_player_uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_recent_player_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_recent_player_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetRecentMpPlayerListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetRecentMpPlayerListReq)
  return false;
#undef DO_
}

void ServerGetRecentMpPlayerListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetRecentMpPlayerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 recent_player_uid_list = 1;
  if (this->recent_player_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _recent_player_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->recent_player_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->recent_player_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetRecentMpPlayerListReq)
}

::google::protobuf::uint8* ServerGetRecentMpPlayerListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetRecentMpPlayerListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 recent_player_uid_list = 1;
  if (this->recent_player_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _recent_player_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->recent_player_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetRecentMpPlayerListReq)
  return target;
}

size_t ServerGetRecentMpPlayerListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetRecentMpPlayerListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 recent_player_uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->recent_player_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _recent_player_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetRecentMpPlayerListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetRecentMpPlayerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetRecentMpPlayerListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetRecentMpPlayerListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetRecentMpPlayerListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetRecentMpPlayerListReq)
    MergeFrom(*source);
  }
}

void ServerGetRecentMpPlayerListReq::MergeFrom(const ServerGetRecentMpPlayerListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetRecentMpPlayerListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recent_player_uid_list_.MergeFrom(from.recent_player_uid_list_);
}

void ServerGetRecentMpPlayerListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetRecentMpPlayerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetRecentMpPlayerListReq::CopyFrom(const ServerGetRecentMpPlayerListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetRecentMpPlayerListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetRecentMpPlayerListReq::IsInitialized() const {
  return true;
}

void ServerGetRecentMpPlayerListReq::Swap(ServerGetRecentMpPlayerListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetRecentMpPlayerListReq::InternalSwap(ServerGetRecentMpPlayerListReq* other) {
  using std::swap;
  recent_player_uid_list_.InternalSwap(&other->recent_player_uid_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetRecentMpPlayerListReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetRecentMpPlayerListReq

// repeated uint32 recent_player_uid_list = 1;
int ServerGetRecentMpPlayerListReq::recent_player_uid_list_size() const {
  return recent_player_uid_list_.size();
}
void ServerGetRecentMpPlayerListReq::clear_recent_player_uid_list() {
  recent_player_uid_list_.Clear();
}
::google::protobuf::uint32 ServerGetRecentMpPlayerListReq::recent_player_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetRecentMpPlayerListReq.recent_player_uid_list)
  return recent_player_uid_list_.Get(index);
}
void ServerGetRecentMpPlayerListReq::set_recent_player_uid_list(int index, ::google::protobuf::uint32 value) {
  recent_player_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetRecentMpPlayerListReq.recent_player_uid_list)
}
void ServerGetRecentMpPlayerListReq::add_recent_player_uid_list(::google::protobuf::uint32 value) {
  recent_player_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetRecentMpPlayerListReq.recent_player_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerGetRecentMpPlayerListReq::recent_player_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetRecentMpPlayerListReq.recent_player_uid_list)
  return recent_player_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerGetRecentMpPlayerListReq::mutable_recent_player_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetRecentMpPlayerListReq.recent_player_uid_list)
  return &recent_player_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetRecentMpPlayerListRsp::kRetcodeFieldNumber;
const int ServerGetRecentMpPlayerListRsp::kRecentMpPlayerBriefListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetRecentMpPlayerListRsp::ServerGetRecentMpPlayerListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetRecentMpPlayerListRsp)
}
ServerGetRecentMpPlayerListRsp::ServerGetRecentMpPlayerListRsp(const ServerGetRecentMpPlayerListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      recent_mp_player_brief_list_(from.recent_mp_player_brief_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetRecentMpPlayerListRsp)
}

void ServerGetRecentMpPlayerListRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ServerGetRecentMpPlayerListRsp::~ServerGetRecentMpPlayerListRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetRecentMpPlayerListRsp)
  SharedDtor();
}

void ServerGetRecentMpPlayerListRsp::SharedDtor() {
}

void ServerGetRecentMpPlayerListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetRecentMpPlayerListRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetRecentMpPlayerListRsp& ServerGetRecentMpPlayerListRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetRecentMpPlayerListRsp* ServerGetRecentMpPlayerListRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetRecentMpPlayerListRsp* n = new ServerGetRecentMpPlayerListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetRecentMpPlayerListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetRecentMpPlayerListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recent_mp_player_brief_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerGetRecentMpPlayerListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetRecentMpPlayerListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief recent_mp_player_brief_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_recent_mp_player_brief_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetRecentMpPlayerListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetRecentMpPlayerListRsp)
  return false;
#undef DO_
}

void ServerGetRecentMpPlayerListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetRecentMpPlayerListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.FriendBrief recent_mp_player_brief_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recent_mp_player_brief_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->recent_mp_player_brief_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetRecentMpPlayerListRsp)
}

::google::protobuf::uint8* ServerGetRecentMpPlayerListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetRecentMpPlayerListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.FriendBrief recent_mp_player_brief_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->recent_mp_player_brief_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->recent_mp_player_brief_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetRecentMpPlayerListRsp)
  return target;
}

size_t ServerGetRecentMpPlayerListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetRecentMpPlayerListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FriendBrief recent_mp_player_brief_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->recent_mp_player_brief_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->recent_mp_player_brief_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetRecentMpPlayerListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetRecentMpPlayerListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetRecentMpPlayerListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetRecentMpPlayerListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetRecentMpPlayerListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetRecentMpPlayerListRsp)
    MergeFrom(*source);
  }
}

void ServerGetRecentMpPlayerListRsp::MergeFrom(const ServerGetRecentMpPlayerListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetRecentMpPlayerListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recent_mp_player_brief_list_.MergeFrom(from.recent_mp_player_brief_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerGetRecentMpPlayerListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetRecentMpPlayerListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetRecentMpPlayerListRsp::CopyFrom(const ServerGetRecentMpPlayerListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetRecentMpPlayerListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetRecentMpPlayerListRsp::IsInitialized() const {
  return true;
}

void ServerGetRecentMpPlayerListRsp::Swap(ServerGetRecentMpPlayerListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetRecentMpPlayerListRsp::InternalSwap(ServerGetRecentMpPlayerListRsp* other) {
  using std::swap;
  recent_mp_player_brief_list_.InternalSwap(&other->recent_mp_player_brief_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetRecentMpPlayerListRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetRecentMpPlayerListRsp

// int32 retcode = 1;
void ServerGetRecentMpPlayerListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetRecentMpPlayerListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetRecentMpPlayerListRsp.retcode)
  return retcode_;
}
void ServerGetRecentMpPlayerListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetRecentMpPlayerListRsp.retcode)
}

// repeated .proto.FriendBrief recent_mp_player_brief_list = 2;
int ServerGetRecentMpPlayerListRsp::recent_mp_player_brief_list_size() const {
  return recent_mp_player_brief_list_.size();
}
void ServerGetRecentMpPlayerListRsp::clear_recent_mp_player_brief_list() {
  recent_mp_player_brief_list_.Clear();
}
const ::proto::FriendBrief& ServerGetRecentMpPlayerListRsp::recent_mp_player_brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return recent_mp_player_brief_list_.Get(index);
}
::proto::FriendBrief* ServerGetRecentMpPlayerListRsp::mutable_recent_mp_player_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return recent_mp_player_brief_list_.Mutable(index);
}
::proto::FriendBrief* ServerGetRecentMpPlayerListRsp::add_recent_mp_player_brief_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return recent_mp_player_brief_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
ServerGetRecentMpPlayerListRsp::mutable_recent_mp_player_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return &recent_mp_player_brief_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
ServerGetRecentMpPlayerListRsp::recent_mp_player_brief_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetRecentMpPlayerListRsp.recent_mp_player_brief_list)
  return recent_mp_player_brief_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetPlayerBlacklistReq::kBlacklistUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetPlayerBlacklistReq::ServerGetPlayerBlacklistReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetPlayerBlacklistReq)
}
ServerGetPlayerBlacklistReq::ServerGetPlayerBlacklistReq(const ServerGetPlayerBlacklistReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blacklist_uid_list_(from.blacklist_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetPlayerBlacklistReq)
}

void ServerGetPlayerBlacklistReq::SharedCtor() {
  _cached_size_ = 0;
}

ServerGetPlayerBlacklistReq::~ServerGetPlayerBlacklistReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetPlayerBlacklistReq)
  SharedDtor();
}

void ServerGetPlayerBlacklistReq::SharedDtor() {
}

void ServerGetPlayerBlacklistReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetPlayerBlacklistReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetPlayerBlacklistReq& ServerGetPlayerBlacklistReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetPlayerBlacklistReq* ServerGetPlayerBlacklistReq::New(::google::protobuf::Arena* arena) const {
  ServerGetPlayerBlacklistReq* n = new ServerGetPlayerBlacklistReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetPlayerBlacklistReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetPlayerBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blacklist_uid_list_.Clear();
  _internal_metadata_.Clear();
}

bool ServerGetPlayerBlacklistReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetPlayerBlacklistReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 blacklist_uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_blacklist_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_blacklist_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetPlayerBlacklistReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetPlayerBlacklistReq)
  return false;
#undef DO_
}

void ServerGetPlayerBlacklistReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetPlayerBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 blacklist_uid_list = 1;
  if (this->blacklist_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _blacklist_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->blacklist_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->blacklist_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetPlayerBlacklistReq)
}

::google::protobuf::uint8* ServerGetPlayerBlacklistReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetPlayerBlacklistReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 blacklist_uid_list = 1;
  if (this->blacklist_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _blacklist_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->blacklist_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetPlayerBlacklistReq)
  return target;
}

size_t ServerGetPlayerBlacklistReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetPlayerBlacklistReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 blacklist_uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->blacklist_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _blacklist_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetPlayerBlacklistReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetPlayerBlacklistReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetPlayerBlacklistReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetPlayerBlacklistReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetPlayerBlacklistReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetPlayerBlacklistReq)
    MergeFrom(*source);
  }
}

void ServerGetPlayerBlacklistReq::MergeFrom(const ServerGetPlayerBlacklistReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetPlayerBlacklistReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  blacklist_uid_list_.MergeFrom(from.blacklist_uid_list_);
}

void ServerGetPlayerBlacklistReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetPlayerBlacklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetPlayerBlacklistReq::CopyFrom(const ServerGetPlayerBlacklistReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetPlayerBlacklistReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetPlayerBlacklistReq::IsInitialized() const {
  return true;
}

void ServerGetPlayerBlacklistReq::Swap(ServerGetPlayerBlacklistReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetPlayerBlacklistReq::InternalSwap(ServerGetPlayerBlacklistReq* other) {
  using std::swap;
  blacklist_uid_list_.InternalSwap(&other->blacklist_uid_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetPlayerBlacklistReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetPlayerBlacklistReq

// repeated uint32 blacklist_uid_list = 1;
int ServerGetPlayerBlacklistReq::blacklist_uid_list_size() const {
  return blacklist_uid_list_.size();
}
void ServerGetPlayerBlacklistReq::clear_blacklist_uid_list() {
  blacklist_uid_list_.Clear();
}
::google::protobuf::uint32 ServerGetPlayerBlacklistReq::blacklist_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetPlayerBlacklistReq.blacklist_uid_list)
  return blacklist_uid_list_.Get(index);
}
void ServerGetPlayerBlacklistReq::set_blacklist_uid_list(int index, ::google::protobuf::uint32 value) {
  blacklist_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetPlayerBlacklistReq.blacklist_uid_list)
}
void ServerGetPlayerBlacklistReq::add_blacklist_uid_list(::google::protobuf::uint32 value) {
  blacklist_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetPlayerBlacklistReq.blacklist_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerGetPlayerBlacklistReq::blacklist_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetPlayerBlacklistReq.blacklist_uid_list)
  return blacklist_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerGetPlayerBlacklistReq::mutable_blacklist_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetPlayerBlacklistReq.blacklist_uid_list)
  return &blacklist_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetPlayerBlacklistRsp::kRetcodeFieldNumber;
const int ServerGetPlayerBlacklistRsp::kBlacklistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetPlayerBlacklistRsp::ServerGetPlayerBlacklistRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetPlayerBlacklistRsp)
}
ServerGetPlayerBlacklistRsp::ServerGetPlayerBlacklistRsp(const ServerGetPlayerBlacklistRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blacklist_(from.blacklist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetPlayerBlacklistRsp)
}

void ServerGetPlayerBlacklistRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ServerGetPlayerBlacklistRsp::~ServerGetPlayerBlacklistRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetPlayerBlacklistRsp)
  SharedDtor();
}

void ServerGetPlayerBlacklistRsp::SharedDtor() {
}

void ServerGetPlayerBlacklistRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetPlayerBlacklistRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetPlayerBlacklistRsp& ServerGetPlayerBlacklistRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetPlayerBlacklistRsp* ServerGetPlayerBlacklistRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetPlayerBlacklistRsp* n = new ServerGetPlayerBlacklistRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetPlayerBlacklistRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetPlayerBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blacklist_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerGetPlayerBlacklistRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetPlayerBlacklistRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief blacklist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_blacklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetPlayerBlacklistRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetPlayerBlacklistRsp)
  return false;
#undef DO_
}

void ServerGetPlayerBlacklistRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetPlayerBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.FriendBrief blacklist = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blacklist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->blacklist(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetPlayerBlacklistRsp)
}

::google::protobuf::uint8* ServerGetPlayerBlacklistRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetPlayerBlacklistRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.FriendBrief blacklist = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blacklist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->blacklist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetPlayerBlacklistRsp)
  return target;
}

size_t ServerGetPlayerBlacklistRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetPlayerBlacklistRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FriendBrief blacklist = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->blacklist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blacklist(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetPlayerBlacklistRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetPlayerBlacklistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetPlayerBlacklistRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetPlayerBlacklistRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetPlayerBlacklistRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetPlayerBlacklistRsp)
    MergeFrom(*source);
  }
}

void ServerGetPlayerBlacklistRsp::MergeFrom(const ServerGetPlayerBlacklistRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetPlayerBlacklistRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  blacklist_.MergeFrom(from.blacklist_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerGetPlayerBlacklistRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetPlayerBlacklistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetPlayerBlacklistRsp::CopyFrom(const ServerGetPlayerBlacklistRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetPlayerBlacklistRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetPlayerBlacklistRsp::IsInitialized() const {
  return true;
}

void ServerGetPlayerBlacklistRsp::Swap(ServerGetPlayerBlacklistRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetPlayerBlacklistRsp::InternalSwap(ServerGetPlayerBlacklistRsp* other) {
  using std::swap;
  blacklist_.InternalSwap(&other->blacklist_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetPlayerBlacklistRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetPlayerBlacklistRsp

// int32 retcode = 1;
void ServerGetPlayerBlacklistRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetPlayerBlacklistRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetPlayerBlacklistRsp.retcode)
  return retcode_;
}
void ServerGetPlayerBlacklistRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetPlayerBlacklistRsp.retcode)
}

// repeated .proto.FriendBrief blacklist = 2;
int ServerGetPlayerBlacklistRsp::blacklist_size() const {
  return blacklist_.size();
}
void ServerGetPlayerBlacklistRsp::clear_blacklist() {
  blacklist_.Clear();
}
const ::proto::FriendBrief& ServerGetPlayerBlacklistRsp::blacklist(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetPlayerBlacklistRsp.blacklist)
  return blacklist_.Get(index);
}
::proto::FriendBrief* ServerGetPlayerBlacklistRsp::mutable_blacklist(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGetPlayerBlacklistRsp.blacklist)
  return blacklist_.Mutable(index);
}
::proto::FriendBrief* ServerGetPlayerBlacklistRsp::add_blacklist() {
  // @@protoc_insertion_point(field_add:proto.ServerGetPlayerBlacklistRsp.blacklist)
  return blacklist_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
ServerGetPlayerBlacklistRsp::mutable_blacklist() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetPlayerBlacklistRsp.blacklist)
  return &blacklist_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
ServerGetPlayerBlacklistRsp::blacklist() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetPlayerBlacklistRsp.blacklist)
  return blacklist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPrivateChatReq::kChatInfoFieldNumber;
const int ServerPrivateChatReq::kIsPs4FriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPrivateChatReq::ServerPrivateChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerPrivateChatReq)
}
ServerPrivateChatReq::ServerPrivateChatReq(const ServerPrivateChatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_chat_info()) {
    chat_info_ = new ::proto::ChatInfo(*from.chat_info_);
  } else {
    chat_info_ = NULL;
  }
  is_ps4_friend_ = from.is_ps4_friend_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerPrivateChatReq)
}

void ServerPrivateChatReq::SharedCtor() {
  ::memset(&chat_info_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ps4_friend_) -
      reinterpret_cast<char*>(&chat_info_)) + sizeof(is_ps4_friend_));
  _cached_size_ = 0;
}

ServerPrivateChatReq::~ServerPrivateChatReq() {
  // @@protoc_insertion_point(destructor:proto.ServerPrivateChatReq)
  SharedDtor();
}

void ServerPrivateChatReq::SharedDtor() {
  if (this != internal_default_instance()) delete chat_info_;
}

void ServerPrivateChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerPrivateChatReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPrivateChatReq& ServerPrivateChatReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerPrivateChatReq* ServerPrivateChatReq::New(::google::protobuf::Arena* arena) const {
  ServerPrivateChatReq* n = new ServerPrivateChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerPrivateChatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) {
    delete chat_info_;
  }
  chat_info_ = NULL;
  is_ps4_friend_ = false;
  _internal_metadata_.Clear();
}

bool ServerPrivateChatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerPrivateChatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ChatInfo chat_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_chat_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_ps4_friend = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ps4_friend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerPrivateChatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerPrivateChatReq)
  return false;
#undef DO_
}

void ServerPrivateChatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ChatInfo chat_info = 1;
  if (this->has_chat_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->chat_info_, output);
  }

  // bool is_ps4_friend = 2;
  if (this->is_ps4_friend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_ps4_friend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerPrivateChatReq)
}

::google::protobuf::uint8* ServerPrivateChatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ChatInfo chat_info = 1;
  if (this->has_chat_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->chat_info_, deterministic, target);
  }

  // bool is_ps4_friend = 2;
  if (this->is_ps4_friend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_ps4_friend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerPrivateChatReq)
  return target;
}

size_t ServerPrivateChatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerPrivateChatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ChatInfo chat_info = 1;
  if (this->has_chat_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->chat_info_);
  }

  // bool is_ps4_friend = 2;
  if (this->is_ps4_friend() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerPrivateChatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerPrivateChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPrivateChatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPrivateChatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerPrivateChatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerPrivateChatReq)
    MergeFrom(*source);
  }
}

void ServerPrivateChatReq::MergeFrom(const ServerPrivateChatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerPrivateChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_chat_info()) {
    mutable_chat_info()->::proto::ChatInfo::MergeFrom(from.chat_info());
  }
  if (from.is_ps4_friend() != 0) {
    set_is_ps4_friend(from.is_ps4_friend());
  }
}

void ServerPrivateChatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerPrivateChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPrivateChatReq::CopyFrom(const ServerPrivateChatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerPrivateChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPrivateChatReq::IsInitialized() const {
  return true;
}

void ServerPrivateChatReq::Swap(ServerPrivateChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPrivateChatReq::InternalSwap(ServerPrivateChatReq* other) {
  using std::swap;
  swap(chat_info_, other->chat_info_);
  swap(is_ps4_friend_, other->is_ps4_friend_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerPrivateChatReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerPrivateChatReq

// .proto.ChatInfo chat_info = 1;
bool ServerPrivateChatReq::has_chat_info() const {
  return this != internal_default_instance() && chat_info_ != NULL;
}
void ServerPrivateChatReq::clear_chat_info() {
  if (GetArenaNoVirtual() == NULL && chat_info_ != NULL) delete chat_info_;
  chat_info_ = NULL;
}
const ::proto::ChatInfo& ServerPrivateChatReq::chat_info() const {
  const ::proto::ChatInfo* p = chat_info_;
  // @@protoc_insertion_point(field_get:proto.ServerPrivateChatReq.chat_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ChatInfo*>(
      &::proto::_ChatInfo_default_instance_);
}
::proto::ChatInfo* ServerPrivateChatReq::mutable_chat_info() {
  
  if (chat_info_ == NULL) {
    chat_info_ = new ::proto::ChatInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerPrivateChatReq.chat_info)
  return chat_info_;
}
::proto::ChatInfo* ServerPrivateChatReq::release_chat_info() {
  // @@protoc_insertion_point(field_release:proto.ServerPrivateChatReq.chat_info)
  
  ::proto::ChatInfo* temp = chat_info_;
  chat_info_ = NULL;
  return temp;
}
void ServerPrivateChatReq::set_allocated_chat_info(::proto::ChatInfo* chat_info) {
  delete chat_info_;
  chat_info_ = chat_info;
  if (chat_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerPrivateChatReq.chat_info)
}

// bool is_ps4_friend = 2;
void ServerPrivateChatReq::clear_is_ps4_friend() {
  is_ps4_friend_ = false;
}
bool ServerPrivateChatReq::is_ps4_friend() const {
  // @@protoc_insertion_point(field_get:proto.ServerPrivateChatReq.is_ps4_friend)
  return is_ps4_friend_;
}
void ServerPrivateChatReq::set_is_ps4_friend(bool value) {
  
  is_ps4_friend_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPrivateChatReq.is_ps4_friend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPrivateChatRsp::kRetcodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPrivateChatRsp::ServerPrivateChatRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerPrivateChatRsp)
}
ServerPrivateChatRsp::ServerPrivateChatRsp(const ServerPrivateChatRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerPrivateChatRsp)
}

void ServerPrivateChatRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ServerPrivateChatRsp::~ServerPrivateChatRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerPrivateChatRsp)
  SharedDtor();
}

void ServerPrivateChatRsp::SharedDtor() {
}

void ServerPrivateChatRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerPrivateChatRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPrivateChatRsp& ServerPrivateChatRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerPrivateChatRsp* ServerPrivateChatRsp::New(::google::protobuf::Arena* arena) const {
  ServerPrivateChatRsp* n = new ServerPrivateChatRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerPrivateChatRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerPrivateChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerPrivateChatRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerPrivateChatRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerPrivateChatRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerPrivateChatRsp)
  return false;
#undef DO_
}

void ServerPrivateChatRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerPrivateChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerPrivateChatRsp)
}

::google::protobuf::uint8* ServerPrivateChatRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerPrivateChatRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerPrivateChatRsp)
  return target;
}

size_t ServerPrivateChatRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerPrivateChatRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerPrivateChatRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerPrivateChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPrivateChatRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPrivateChatRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerPrivateChatRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerPrivateChatRsp)
    MergeFrom(*source);
  }
}

void ServerPrivateChatRsp::MergeFrom(const ServerPrivateChatRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerPrivateChatRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerPrivateChatRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerPrivateChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPrivateChatRsp::CopyFrom(const ServerPrivateChatRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerPrivateChatRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPrivateChatRsp::IsInitialized() const {
  return true;
}

void ServerPrivateChatRsp::Swap(ServerPrivateChatRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPrivateChatRsp::InternalSwap(ServerPrivateChatRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerPrivateChatRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerPrivateChatRsp

// int32 retcode = 1;
void ServerPrivateChatRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerPrivateChatRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerPrivateChatRsp.retcode)
  return retcode_;
}
void ServerPrivateChatRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPrivateChatRsp.retcode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPullPrivateChatReq::kFromUidFieldNumber;
const int ServerPullPrivateChatReq::kToUidFieldNumber;
const int ServerPullPrivateChatReq::kFromSequenceFieldNumber;
const int ServerPullPrivateChatReq::kPullNumFieldNumber;
const int ServerPullPrivateChatReq::kIsPs4FriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPullPrivateChatReq::ServerPullPrivateChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerPullPrivateChatReq)
}
ServerPullPrivateChatReq::ServerPullPrivateChatReq(const ServerPullPrivateChatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&from_uid_, &from.from_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_ps4_friend_) -
    reinterpret_cast<char*>(&from_uid_)) + sizeof(is_ps4_friend_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerPullPrivateChatReq)
}

void ServerPullPrivateChatReq::SharedCtor() {
  ::memset(&from_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ps4_friend_) -
      reinterpret_cast<char*>(&from_uid_)) + sizeof(is_ps4_friend_));
  _cached_size_ = 0;
}

ServerPullPrivateChatReq::~ServerPullPrivateChatReq() {
  // @@protoc_insertion_point(destructor:proto.ServerPullPrivateChatReq)
  SharedDtor();
}

void ServerPullPrivateChatReq::SharedDtor() {
}

void ServerPullPrivateChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerPullPrivateChatReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPullPrivateChatReq& ServerPullPrivateChatReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerPullPrivateChatReq* ServerPullPrivateChatReq::New(::google::protobuf::Arena* arena) const {
  ServerPullPrivateChatReq* n = new ServerPullPrivateChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerPullPrivateChatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerPullPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&from_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ps4_friend_) -
      reinterpret_cast<char*>(&from_uid_)) + sizeof(is_ps4_friend_));
  _internal_metadata_.Clear();
}

bool ServerPullPrivateChatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerPullPrivateChatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 from_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 to_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &to_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 from_sequence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pull_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pull_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_ps4_friend = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ps4_friend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerPullPrivateChatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerPullPrivateChatReq)
  return false;
#undef DO_
}

void ServerPullPrivateChatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerPullPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_uid = 1;
  if (this->from_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->from_uid(), output);
  }

  // uint32 to_uid = 2;
  if (this->to_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->to_uid(), output);
  }

  // uint32 from_sequence = 3;
  if (this->from_sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->from_sequence(), output);
  }

  // uint32 pull_num = 4;
  if (this->pull_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pull_num(), output);
  }

  // bool is_ps4_friend = 5;
  if (this->is_ps4_friend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_ps4_friend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerPullPrivateChatReq)
}

::google::protobuf::uint8* ServerPullPrivateChatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerPullPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_uid = 1;
  if (this->from_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->from_uid(), target);
  }

  // uint32 to_uid = 2;
  if (this->to_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->to_uid(), target);
  }

  // uint32 from_sequence = 3;
  if (this->from_sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->from_sequence(), target);
  }

  // uint32 pull_num = 4;
  if (this->pull_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pull_num(), target);
  }

  // bool is_ps4_friend = 5;
  if (this->is_ps4_friend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_ps4_friend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerPullPrivateChatReq)
  return target;
}

size_t ServerPullPrivateChatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerPullPrivateChatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 from_uid = 1;
  if (this->from_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_uid());
  }

  // uint32 to_uid = 2;
  if (this->to_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->to_uid());
  }

  // uint32 from_sequence = 3;
  if (this->from_sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_sequence());
  }

  // uint32 pull_num = 4;
  if (this->pull_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pull_num());
  }

  // bool is_ps4_friend = 5;
  if (this->is_ps4_friend() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerPullPrivateChatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerPullPrivateChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPullPrivateChatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPullPrivateChatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerPullPrivateChatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerPullPrivateChatReq)
    MergeFrom(*source);
  }
}

void ServerPullPrivateChatReq::MergeFrom(const ServerPullPrivateChatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerPullPrivateChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_uid() != 0) {
    set_from_uid(from.from_uid());
  }
  if (from.to_uid() != 0) {
    set_to_uid(from.to_uid());
  }
  if (from.from_sequence() != 0) {
    set_from_sequence(from.from_sequence());
  }
  if (from.pull_num() != 0) {
    set_pull_num(from.pull_num());
  }
  if (from.is_ps4_friend() != 0) {
    set_is_ps4_friend(from.is_ps4_friend());
  }
}

void ServerPullPrivateChatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerPullPrivateChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPullPrivateChatReq::CopyFrom(const ServerPullPrivateChatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerPullPrivateChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPullPrivateChatReq::IsInitialized() const {
  return true;
}

void ServerPullPrivateChatReq::Swap(ServerPullPrivateChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPullPrivateChatReq::InternalSwap(ServerPullPrivateChatReq* other) {
  using std::swap;
  swap(from_uid_, other->from_uid_);
  swap(to_uid_, other->to_uid_);
  swap(from_sequence_, other->from_sequence_);
  swap(pull_num_, other->pull_num_);
  swap(is_ps4_friend_, other->is_ps4_friend_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerPullPrivateChatReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerPullPrivateChatReq

// uint32 from_uid = 1;
void ServerPullPrivateChatReq::clear_from_uid() {
  from_uid_ = 0u;
}
::google::protobuf::uint32 ServerPullPrivateChatReq::from_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerPullPrivateChatReq.from_uid)
  return from_uid_;
}
void ServerPullPrivateChatReq::set_from_uid(::google::protobuf::uint32 value) {
  
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPullPrivateChatReq.from_uid)
}

// uint32 to_uid = 2;
void ServerPullPrivateChatReq::clear_to_uid() {
  to_uid_ = 0u;
}
::google::protobuf::uint32 ServerPullPrivateChatReq::to_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerPullPrivateChatReq.to_uid)
  return to_uid_;
}
void ServerPullPrivateChatReq::set_to_uid(::google::protobuf::uint32 value) {
  
  to_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPullPrivateChatReq.to_uid)
}

// uint32 from_sequence = 3;
void ServerPullPrivateChatReq::clear_from_sequence() {
  from_sequence_ = 0u;
}
::google::protobuf::uint32 ServerPullPrivateChatReq::from_sequence() const {
  // @@protoc_insertion_point(field_get:proto.ServerPullPrivateChatReq.from_sequence)
  return from_sequence_;
}
void ServerPullPrivateChatReq::set_from_sequence(::google::protobuf::uint32 value) {
  
  from_sequence_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPullPrivateChatReq.from_sequence)
}

// uint32 pull_num = 4;
void ServerPullPrivateChatReq::clear_pull_num() {
  pull_num_ = 0u;
}
::google::protobuf::uint32 ServerPullPrivateChatReq::pull_num() const {
  // @@protoc_insertion_point(field_get:proto.ServerPullPrivateChatReq.pull_num)
  return pull_num_;
}
void ServerPullPrivateChatReq::set_pull_num(::google::protobuf::uint32 value) {
  
  pull_num_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPullPrivateChatReq.pull_num)
}

// bool is_ps4_friend = 5;
void ServerPullPrivateChatReq::clear_is_ps4_friend() {
  is_ps4_friend_ = false;
}
bool ServerPullPrivateChatReq::is_ps4_friend() const {
  // @@protoc_insertion_point(field_get:proto.ServerPullPrivateChatReq.is_ps4_friend)
  return is_ps4_friend_;
}
void ServerPullPrivateChatReq::set_is_ps4_friend(bool value) {
  
  is_ps4_friend_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPullPrivateChatReq.is_ps4_friend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPullRecentChatReq::kFromSequenceFieldNumber;
const int ServerPullRecentChatReq::kPullNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPullRecentChatReq::ServerPullRecentChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerPullRecentChatReq)
}
ServerPullRecentChatReq::ServerPullRecentChatReq(const ServerPullRecentChatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&from_sequence_, &from.from_sequence_,
    static_cast<size_t>(reinterpret_cast<char*>(&pull_num_) -
    reinterpret_cast<char*>(&from_sequence_)) + sizeof(pull_num_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerPullRecentChatReq)
}

void ServerPullRecentChatReq::SharedCtor() {
  ::memset(&from_sequence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pull_num_) -
      reinterpret_cast<char*>(&from_sequence_)) + sizeof(pull_num_));
  _cached_size_ = 0;
}

ServerPullRecentChatReq::~ServerPullRecentChatReq() {
  // @@protoc_insertion_point(destructor:proto.ServerPullRecentChatReq)
  SharedDtor();
}

void ServerPullRecentChatReq::SharedDtor() {
}

void ServerPullRecentChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerPullRecentChatReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPullRecentChatReq& ServerPullRecentChatReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerPullRecentChatReq* ServerPullRecentChatReq::New(::google::protobuf::Arena* arena) const {
  ServerPullRecentChatReq* n = new ServerPullRecentChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerPullRecentChatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerPullRecentChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&from_sequence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pull_num_) -
      reinterpret_cast<char*>(&from_sequence_)) + sizeof(pull_num_));
  _internal_metadata_.Clear();
}

bool ServerPullRecentChatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerPullRecentChatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 from_sequence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 pull_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pull_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerPullRecentChatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerPullRecentChatReq)
  return false;
#undef DO_
}

void ServerPullRecentChatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerPullRecentChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_sequence = 1;
  if (this->from_sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->from_sequence(), output);
  }

  // uint32 pull_num = 2;
  if (this->pull_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pull_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerPullRecentChatReq)
}

::google::protobuf::uint8* ServerPullRecentChatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerPullRecentChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_sequence = 1;
  if (this->from_sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->from_sequence(), target);
  }

  // uint32 pull_num = 2;
  if (this->pull_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pull_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerPullRecentChatReq)
  return target;
}

size_t ServerPullRecentChatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerPullRecentChatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 from_sequence = 1;
  if (this->from_sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_sequence());
  }

  // uint32 pull_num = 2;
  if (this->pull_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pull_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerPullRecentChatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerPullRecentChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPullRecentChatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPullRecentChatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerPullRecentChatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerPullRecentChatReq)
    MergeFrom(*source);
  }
}

void ServerPullRecentChatReq::MergeFrom(const ServerPullRecentChatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerPullRecentChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_sequence() != 0) {
    set_from_sequence(from.from_sequence());
  }
  if (from.pull_num() != 0) {
    set_pull_num(from.pull_num());
  }
}

void ServerPullRecentChatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerPullRecentChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPullRecentChatReq::CopyFrom(const ServerPullRecentChatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerPullRecentChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPullRecentChatReq::IsInitialized() const {
  return true;
}

void ServerPullRecentChatReq::Swap(ServerPullRecentChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPullRecentChatReq::InternalSwap(ServerPullRecentChatReq* other) {
  using std::swap;
  swap(from_sequence_, other->from_sequence_);
  swap(pull_num_, other->pull_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerPullRecentChatReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerPullRecentChatReq

// uint32 from_sequence = 1;
void ServerPullRecentChatReq::clear_from_sequence() {
  from_sequence_ = 0u;
}
::google::protobuf::uint32 ServerPullRecentChatReq::from_sequence() const {
  // @@protoc_insertion_point(field_get:proto.ServerPullRecentChatReq.from_sequence)
  return from_sequence_;
}
void ServerPullRecentChatReq::set_from_sequence(::google::protobuf::uint32 value) {
  
  from_sequence_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPullRecentChatReq.from_sequence)
}

// uint32 pull_num = 2;
void ServerPullRecentChatReq::clear_pull_num() {
  pull_num_ = 0u;
}
::google::protobuf::uint32 ServerPullRecentChatReq::pull_num() const {
  // @@protoc_insertion_point(field_get:proto.ServerPullRecentChatReq.pull_num)
  return pull_num_;
}
void ServerPullRecentChatReq::set_pull_num(::google::protobuf::uint32 value) {
  
  pull_num_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPullRecentChatReq.pull_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerUpdateActivitySocialDataNotify::kSocialDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerUpdateActivitySocialDataNotify::ServerUpdateActivitySocialDataNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerUpdateActivitySocialDataNotify)
}
ServerUpdateActivitySocialDataNotify::ServerUpdateActivitySocialDataNotify(const ServerUpdateActivitySocialDataNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      social_data_list_(from.social_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ServerUpdateActivitySocialDataNotify)
}

void ServerUpdateActivitySocialDataNotify::SharedCtor() {
  _cached_size_ = 0;
}

ServerUpdateActivitySocialDataNotify::~ServerUpdateActivitySocialDataNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerUpdateActivitySocialDataNotify)
  SharedDtor();
}

void ServerUpdateActivitySocialDataNotify::SharedDtor() {
}

void ServerUpdateActivitySocialDataNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerUpdateActivitySocialDataNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerUpdateActivitySocialDataNotify& ServerUpdateActivitySocialDataNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerUpdateActivitySocialDataNotify* ServerUpdateActivitySocialDataNotify::New(::google::protobuf::Arena* arena) const {
  ServerUpdateActivitySocialDataNotify* n = new ServerUpdateActivitySocialDataNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerUpdateActivitySocialDataNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerUpdateActivitySocialDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  social_data_list_.Clear();
  _internal_metadata_.Clear();
}

bool ServerUpdateActivitySocialDataNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerUpdateActivitySocialDataNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ActivitySocialData social_data_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_social_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerUpdateActivitySocialDataNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerUpdateActivitySocialDataNotify)
  return false;
#undef DO_
}

void ServerUpdateActivitySocialDataNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerUpdateActivitySocialDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ActivitySocialData social_data_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->social_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->social_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerUpdateActivitySocialDataNotify)
}

::google::protobuf::uint8* ServerUpdateActivitySocialDataNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerUpdateActivitySocialDataNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ActivitySocialData social_data_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->social_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->social_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerUpdateActivitySocialDataNotify)
  return target;
}

size_t ServerUpdateActivitySocialDataNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerUpdateActivitySocialDataNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ActivitySocialData social_data_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->social_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->social_data_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerUpdateActivitySocialDataNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerUpdateActivitySocialDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerUpdateActivitySocialDataNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerUpdateActivitySocialDataNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerUpdateActivitySocialDataNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerUpdateActivitySocialDataNotify)
    MergeFrom(*source);
  }
}

void ServerUpdateActivitySocialDataNotify::MergeFrom(const ServerUpdateActivitySocialDataNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerUpdateActivitySocialDataNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  social_data_list_.MergeFrom(from.social_data_list_);
}

void ServerUpdateActivitySocialDataNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerUpdateActivitySocialDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerUpdateActivitySocialDataNotify::CopyFrom(const ServerUpdateActivitySocialDataNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerUpdateActivitySocialDataNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerUpdateActivitySocialDataNotify::IsInitialized() const {
  return true;
}

void ServerUpdateActivitySocialDataNotify::Swap(ServerUpdateActivitySocialDataNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerUpdateActivitySocialDataNotify::InternalSwap(ServerUpdateActivitySocialDataNotify* other) {
  using std::swap;
  social_data_list_.InternalSwap(&other->social_data_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerUpdateActivitySocialDataNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerUpdateActivitySocialDataNotify

// repeated .proto.ActivitySocialData social_data_list = 1;
int ServerUpdateActivitySocialDataNotify::social_data_list_size() const {
  return social_data_list_.size();
}
void ServerUpdateActivitySocialDataNotify::clear_social_data_list() {
  social_data_list_.Clear();
}
const ::proto::ActivitySocialData& ServerUpdateActivitySocialDataNotify::social_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerUpdateActivitySocialDataNotify.social_data_list)
  return social_data_list_.Get(index);
}
::proto::ActivitySocialData* ServerUpdateActivitySocialDataNotify::mutable_social_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerUpdateActivitySocialDataNotify.social_data_list)
  return social_data_list_.Mutable(index);
}
::proto::ActivitySocialData* ServerUpdateActivitySocialDataNotify::add_social_data_list() {
  // @@protoc_insertion_point(field_add:proto.ServerUpdateActivitySocialDataNotify.social_data_list)
  return social_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ActivitySocialData >*
ServerUpdateActivitySocialDataNotify::mutable_social_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerUpdateActivitySocialDataNotify.social_data_list)
  return &social_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ActivitySocialData >&
ServerUpdateActivitySocialDataNotify::social_data_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerUpdateActivitySocialDataNotify.social_data_list)
  return social_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerBlessingGetFriendPicListReq::kFriendUidListFieldNumber;
const int ServerBlessingGetFriendPicListReq::kScheduleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerBlessingGetFriendPicListReq::ServerBlessingGetFriendPicListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerBlessingGetFriendPicListReq)
}
ServerBlessingGetFriendPicListReq::ServerBlessingGetFriendPicListReq(const ServerBlessingGetFriendPicListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_uid_list_(from.friend_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  schedule_id_ = from.schedule_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerBlessingGetFriendPicListReq)
}

void ServerBlessingGetFriendPicListReq::SharedCtor() {
  schedule_id_ = 0u;
  _cached_size_ = 0;
}

ServerBlessingGetFriendPicListReq::~ServerBlessingGetFriendPicListReq() {
  // @@protoc_insertion_point(destructor:proto.ServerBlessingGetFriendPicListReq)
  SharedDtor();
}

void ServerBlessingGetFriendPicListReq::SharedDtor() {
}

void ServerBlessingGetFriendPicListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerBlessingGetFriendPicListReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerBlessingGetFriendPicListReq& ServerBlessingGetFriendPicListReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerBlessingGetFriendPicListReq* ServerBlessingGetFriendPicListReq::New(::google::protobuf::Arena* arena) const {
  ServerBlessingGetFriendPicListReq* n = new ServerBlessingGetFriendPicListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerBlessingGetFriendPicListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerBlessingGetFriendPicListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_uid_list_.Clear();
  schedule_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerBlessingGetFriendPicListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerBlessingGetFriendPicListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 friend_uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_friend_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_friend_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerBlessingGetFriendPicListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerBlessingGetFriendPicListReq)
  return false;
#undef DO_
}

void ServerBlessingGetFriendPicListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerBlessingGetFriendPicListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 friend_uid_list = 1;
  if (this->friend_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _friend_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->friend_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->friend_uid_list(i), output);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->schedule_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerBlessingGetFriendPicListReq)
}

::google::protobuf::uint8* ServerBlessingGetFriendPicListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerBlessingGetFriendPicListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 friend_uid_list = 1;
  if (this->friend_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _friend_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->friend_uid_list_, target);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->schedule_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerBlessingGetFriendPicListReq)
  return target;
}

size_t ServerBlessingGetFriendPicListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerBlessingGetFriendPicListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 friend_uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->friend_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _friend_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerBlessingGetFriendPicListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerBlessingGetFriendPicListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerBlessingGetFriendPicListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerBlessingGetFriendPicListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerBlessingGetFriendPicListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerBlessingGetFriendPicListReq)
    MergeFrom(*source);
  }
}

void ServerBlessingGetFriendPicListReq::MergeFrom(const ServerBlessingGetFriendPicListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerBlessingGetFriendPicListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_uid_list_.MergeFrom(from.friend_uid_list_);
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
}

void ServerBlessingGetFriendPicListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerBlessingGetFriendPicListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerBlessingGetFriendPicListReq::CopyFrom(const ServerBlessingGetFriendPicListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerBlessingGetFriendPicListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerBlessingGetFriendPicListReq::IsInitialized() const {
  return true;
}

void ServerBlessingGetFriendPicListReq::Swap(ServerBlessingGetFriendPicListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerBlessingGetFriendPicListReq::InternalSwap(ServerBlessingGetFriendPicListReq* other) {
  using std::swap;
  friend_uid_list_.InternalSwap(&other->friend_uid_list_);
  swap(schedule_id_, other->schedule_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerBlessingGetFriendPicListReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerBlessingGetFriendPicListReq

// repeated uint32 friend_uid_list = 1;
int ServerBlessingGetFriendPicListReq::friend_uid_list_size() const {
  return friend_uid_list_.size();
}
void ServerBlessingGetFriendPicListReq::clear_friend_uid_list() {
  friend_uid_list_.Clear();
}
::google::protobuf::uint32 ServerBlessingGetFriendPicListReq::friend_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerBlessingGetFriendPicListReq.friend_uid_list)
  return friend_uid_list_.Get(index);
}
void ServerBlessingGetFriendPicListReq::set_friend_uid_list(int index, ::google::protobuf::uint32 value) {
  friend_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerBlessingGetFriendPicListReq.friend_uid_list)
}
void ServerBlessingGetFriendPicListReq::add_friend_uid_list(::google::protobuf::uint32 value) {
  friend_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerBlessingGetFriendPicListReq.friend_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerBlessingGetFriendPicListReq::friend_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerBlessingGetFriendPicListReq.friend_uid_list)
  return friend_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerBlessingGetFriendPicListReq::mutable_friend_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerBlessingGetFriendPicListReq.friend_uid_list)
  return &friend_uid_list_;
}

// uint32 schedule_id = 2;
void ServerBlessingGetFriendPicListReq::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerBlessingGetFriendPicListReq::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerBlessingGetFriendPicListReq.schedule_id)
  return schedule_id_;
}
void ServerBlessingGetFriendPicListReq::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBlessingGetFriendPicListReq.schedule_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerBlessingGetFriendPicListRsp::kRetcodeFieldNumber;
const int ServerBlessingGetFriendPicListRsp::kFriendPicDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerBlessingGetFriendPicListRsp::ServerBlessingGetFriendPicListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerBlessingGetFriendPicListRsp)
}
ServerBlessingGetFriendPicListRsp::ServerBlessingGetFriendPicListRsp(const ServerBlessingGetFriendPicListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_pic_data_list_(from.friend_pic_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerBlessingGetFriendPicListRsp)
}

void ServerBlessingGetFriendPicListRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ServerBlessingGetFriendPicListRsp::~ServerBlessingGetFriendPicListRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerBlessingGetFriendPicListRsp)
  SharedDtor();
}

void ServerBlessingGetFriendPicListRsp::SharedDtor() {
}

void ServerBlessingGetFriendPicListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerBlessingGetFriendPicListRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerBlessingGetFriendPicListRsp& ServerBlessingGetFriendPicListRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerBlessingGetFriendPicListRsp* ServerBlessingGetFriendPicListRsp::New(::google::protobuf::Arena* arena) const {
  ServerBlessingGetFriendPicListRsp* n = new ServerBlessingGetFriendPicListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerBlessingGetFriendPicListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerBlessingGetFriendPicListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_pic_data_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerBlessingGetFriendPicListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerBlessingGetFriendPicListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.BlessingFriendPicData friend_pic_data_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_pic_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerBlessingGetFriendPicListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerBlessingGetFriendPicListRsp)
  return false;
#undef DO_
}

void ServerBlessingGetFriendPicListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerBlessingGetFriendPicListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.BlessingFriendPicData friend_pic_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_pic_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friend_pic_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerBlessingGetFriendPicListRsp)
}

::google::protobuf::uint8* ServerBlessingGetFriendPicListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerBlessingGetFriendPicListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.BlessingFriendPicData friend_pic_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_pic_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->friend_pic_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerBlessingGetFriendPicListRsp)
  return target;
}

size_t ServerBlessingGetFriendPicListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerBlessingGetFriendPicListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.BlessingFriendPicData friend_pic_data_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_pic_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_pic_data_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerBlessingGetFriendPicListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerBlessingGetFriendPicListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerBlessingGetFriendPicListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerBlessingGetFriendPicListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerBlessingGetFriendPicListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerBlessingGetFriendPicListRsp)
    MergeFrom(*source);
  }
}

void ServerBlessingGetFriendPicListRsp::MergeFrom(const ServerBlessingGetFriendPicListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerBlessingGetFriendPicListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_pic_data_list_.MergeFrom(from.friend_pic_data_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerBlessingGetFriendPicListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerBlessingGetFriendPicListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerBlessingGetFriendPicListRsp::CopyFrom(const ServerBlessingGetFriendPicListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerBlessingGetFriendPicListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerBlessingGetFriendPicListRsp::IsInitialized() const {
  return true;
}

void ServerBlessingGetFriendPicListRsp::Swap(ServerBlessingGetFriendPicListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerBlessingGetFriendPicListRsp::InternalSwap(ServerBlessingGetFriendPicListRsp* other) {
  using std::swap;
  friend_pic_data_list_.InternalSwap(&other->friend_pic_data_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerBlessingGetFriendPicListRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerBlessingGetFriendPicListRsp

// int32 retcode = 1;
void ServerBlessingGetFriendPicListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerBlessingGetFriendPicListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerBlessingGetFriendPicListRsp.retcode)
  return retcode_;
}
void ServerBlessingGetFriendPicListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBlessingGetFriendPicListRsp.retcode)
}

// repeated .proto.BlessingFriendPicData friend_pic_data_list = 2;
int ServerBlessingGetFriendPicListRsp::friend_pic_data_list_size() const {
  return friend_pic_data_list_.size();
}
void ServerBlessingGetFriendPicListRsp::clear_friend_pic_data_list() {
  friend_pic_data_list_.Clear();
}
const ::proto::BlessingFriendPicData& ServerBlessingGetFriendPicListRsp::friend_pic_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerBlessingGetFriendPicListRsp.friend_pic_data_list)
  return friend_pic_data_list_.Get(index);
}
::proto::BlessingFriendPicData* ServerBlessingGetFriendPicListRsp::mutable_friend_pic_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerBlessingGetFriendPicListRsp.friend_pic_data_list)
  return friend_pic_data_list_.Mutable(index);
}
::proto::BlessingFriendPicData* ServerBlessingGetFriendPicListRsp::add_friend_pic_data_list() {
  // @@protoc_insertion_point(field_add:proto.ServerBlessingGetFriendPicListRsp.friend_pic_data_list)
  return friend_pic_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::BlessingFriendPicData >*
ServerBlessingGetFriendPicListRsp::mutable_friend_pic_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerBlessingGetFriendPicListRsp.friend_pic_data_list)
  return &friend_pic_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::BlessingFriendPicData >&
ServerBlessingGetFriendPicListRsp::friend_pic_data_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerBlessingGetFriendPicListRsp.friend_pic_data_list)
  return friend_pic_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetFriendBriefReq::kUidListFieldNumber;
const int ServerGetFriendBriefReq::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetFriendBriefReq::ServerGetFriendBriefReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetFriendBriefReq)
}
ServerGetFriendBriefReq::ServerGetFriendBriefReq(const ServerGetFriendBriefReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uid_list_(from.uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetFriendBriefReq)
}

void ServerGetFriendBriefReq::SharedCtor() {
  reason_ = 0;
  _cached_size_ = 0;
}

ServerGetFriendBriefReq::~ServerGetFriendBriefReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetFriendBriefReq)
  SharedDtor();
}

void ServerGetFriendBriefReq::SharedDtor() {
}

void ServerGetFriendBriefReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetFriendBriefReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetFriendBriefReq& ServerGetFriendBriefReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetFriendBriefReq* ServerGetFriendBriefReq::New(::google::protobuf::Arena* arena) const {
  ServerGetFriendBriefReq* n = new ServerGetFriendBriefReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetFriendBriefReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetFriendBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_list_.Clear();
  reason_ = 0;
  _internal_metadata_.Clear();
}

bool ServerGetFriendBriefReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetFriendBriefReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendBriefRequestReason reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::FriendBriefRequestReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetFriendBriefReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetFriendBriefReq)
  return false;
#undef DO_
}

void ServerGetFriendBriefReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetFriendBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 uid_list = 1;
  if (this->uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->uid_list(i), output);
  }

  // .proto.FriendBriefRequestReason reason = 2;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetFriendBriefReq)
}

::google::protobuf::uint8* ServerGetFriendBriefReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetFriendBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 uid_list = 1;
  if (this->uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->uid_list_, target);
  }

  // .proto.FriendBriefRequestReason reason = 2;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetFriendBriefReq)
  return target;
}

size_t ServerGetFriendBriefReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetFriendBriefReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.FriendBriefRequestReason reason = 2;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetFriendBriefReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetFriendBriefReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetFriendBriefReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetFriendBriefReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetFriendBriefReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetFriendBriefReq)
    MergeFrom(*source);
  }
}

void ServerGetFriendBriefReq::MergeFrom(const ServerGetFriendBriefReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetFriendBriefReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uid_list_.MergeFrom(from.uid_list_);
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void ServerGetFriendBriefReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetFriendBriefReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetFriendBriefReq::CopyFrom(const ServerGetFriendBriefReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetFriendBriefReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetFriendBriefReq::IsInitialized() const {
  return true;
}

void ServerGetFriendBriefReq::Swap(ServerGetFriendBriefReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetFriendBriefReq::InternalSwap(ServerGetFriendBriefReq* other) {
  using std::swap;
  uid_list_.InternalSwap(&other->uid_list_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetFriendBriefReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetFriendBriefReq

// repeated uint32 uid_list = 1;
int ServerGetFriendBriefReq::uid_list_size() const {
  return uid_list_.size();
}
void ServerGetFriendBriefReq::clear_uid_list() {
  uid_list_.Clear();
}
::google::protobuf::uint32 ServerGetFriendBriefReq::uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendBriefReq.uid_list)
  return uid_list_.Get(index);
}
void ServerGetFriendBriefReq::set_uid_list(int index, ::google::protobuf::uint32 value) {
  uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetFriendBriefReq.uid_list)
}
void ServerGetFriendBriefReq::add_uid_list(::google::protobuf::uint32 value) {
  uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetFriendBriefReq.uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerGetFriendBriefReq::uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetFriendBriefReq.uid_list)
  return uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerGetFriendBriefReq::mutable_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetFriendBriefReq.uid_list)
  return &uid_list_;
}

// .proto.FriendBriefRequestReason reason = 2;
void ServerGetFriendBriefReq::clear_reason() {
  reason_ = 0;
}
::proto::FriendBriefRequestReason ServerGetFriendBriefReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendBriefReq.reason)
  return static_cast< ::proto::FriendBriefRequestReason >(reason_);
}
void ServerGetFriendBriefReq::set_reason(::proto::FriendBriefRequestReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetFriendBriefReq.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetFriendBriefRsp::kRetcodeFieldNumber;
const int ServerGetFriendBriefRsp::kFriendBriefListFieldNumber;
const int ServerGetFriendBriefRsp::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetFriendBriefRsp::ServerGetFriendBriefRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetFriendBriefRsp)
}
ServerGetFriendBriefRsp::ServerGetFriendBriefRsp(const ServerGetFriendBriefRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_brief_list_(from.friend_brief_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetFriendBriefRsp)
}

void ServerGetFriendBriefRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(reason_));
  _cached_size_ = 0;
}

ServerGetFriendBriefRsp::~ServerGetFriendBriefRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetFriendBriefRsp)
  SharedDtor();
}

void ServerGetFriendBriefRsp::SharedDtor() {
}

void ServerGetFriendBriefRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetFriendBriefRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetFriendBriefRsp& ServerGetFriendBriefRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetFriendBriefRsp* ServerGetFriendBriefRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetFriendBriefRsp* n = new ServerGetFriendBriefRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetFriendBriefRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetFriendBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_brief_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool ServerGetFriendBriefRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetFriendBriefRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief friend_brief_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_brief_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendBriefRequestReason reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::FriendBriefRequestReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetFriendBriefRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetFriendBriefRsp)
  return false;
#undef DO_
}

void ServerGetFriendBriefRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetFriendBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.FriendBrief friend_brief_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_brief_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friend_brief_list(static_cast<int>(i)), output);
  }

  // .proto.FriendBriefRequestReason reason = 3;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetFriendBriefRsp)
}

::google::protobuf::uint8* ServerGetFriendBriefRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetFriendBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.FriendBrief friend_brief_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_brief_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->friend_brief_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.FriendBriefRequestReason reason = 3;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetFriendBriefRsp)
  return target;
}

size_t ServerGetFriendBriefRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetFriendBriefRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FriendBrief friend_brief_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_brief_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_brief_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.FriendBriefRequestReason reason = 3;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetFriendBriefRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetFriendBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetFriendBriefRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetFriendBriefRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetFriendBriefRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetFriendBriefRsp)
    MergeFrom(*source);
  }
}

void ServerGetFriendBriefRsp::MergeFrom(const ServerGetFriendBriefRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetFriendBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_brief_list_.MergeFrom(from.friend_brief_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void ServerGetFriendBriefRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetFriendBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetFriendBriefRsp::CopyFrom(const ServerGetFriendBriefRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetFriendBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetFriendBriefRsp::IsInitialized() const {
  return true;
}

void ServerGetFriendBriefRsp::Swap(ServerGetFriendBriefRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetFriendBriefRsp::InternalSwap(ServerGetFriendBriefRsp* other) {
  using std::swap;
  friend_brief_list_.InternalSwap(&other->friend_brief_list_);
  swap(retcode_, other->retcode_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetFriendBriefRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetFriendBriefRsp

// int32 retcode = 1;
void ServerGetFriendBriefRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetFriendBriefRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendBriefRsp.retcode)
  return retcode_;
}
void ServerGetFriendBriefRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetFriendBriefRsp.retcode)
}

// repeated .proto.FriendBrief friend_brief_list = 2;
int ServerGetFriendBriefRsp::friend_brief_list_size() const {
  return friend_brief_list_.size();
}
void ServerGetFriendBriefRsp::clear_friend_brief_list() {
  friend_brief_list_.Clear();
}
const ::proto::FriendBrief& ServerGetFriendBriefRsp::friend_brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendBriefRsp.friend_brief_list)
  return friend_brief_list_.Get(index);
}
::proto::FriendBrief* ServerGetFriendBriefRsp::mutable_friend_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGetFriendBriefRsp.friend_brief_list)
  return friend_brief_list_.Mutable(index);
}
::proto::FriendBrief* ServerGetFriendBriefRsp::add_friend_brief_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGetFriendBriefRsp.friend_brief_list)
  return friend_brief_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
ServerGetFriendBriefRsp::mutable_friend_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetFriendBriefRsp.friend_brief_list)
  return &friend_brief_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
ServerGetFriendBriefRsp::friend_brief_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetFriendBriefRsp.friend_brief_list)
  return friend_brief_list_;
}

// .proto.FriendBriefRequestReason reason = 3;
void ServerGetFriendBriefRsp::clear_reason() {
  reason_ = 0;
}
::proto::FriendBriefRequestReason ServerGetFriendBriefRsp::reason() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendBriefRsp.reason)
  return static_cast< ::proto::FriendBriefRequestReason >(reason_);
}
void ServerGetFriendBriefRsp::set_reason(::proto::FriendBriefRequestReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetFriendBriefRsp.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerUpdateShowAvatarInfoNotify::kShowAvatarInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerUpdateShowAvatarInfoNotify::ServerUpdateShowAvatarInfoNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerUpdateShowAvatarInfoNotify)
}
ServerUpdateShowAvatarInfoNotify::ServerUpdateShowAvatarInfoNotify(const ServerUpdateShowAvatarInfoNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      show_avatar_info_list_(from.show_avatar_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ServerUpdateShowAvatarInfoNotify)
}

void ServerUpdateShowAvatarInfoNotify::SharedCtor() {
  _cached_size_ = 0;
}

ServerUpdateShowAvatarInfoNotify::~ServerUpdateShowAvatarInfoNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerUpdateShowAvatarInfoNotify)
  SharedDtor();
}

void ServerUpdateShowAvatarInfoNotify::SharedDtor() {
}

void ServerUpdateShowAvatarInfoNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerUpdateShowAvatarInfoNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerUpdateShowAvatarInfoNotify& ServerUpdateShowAvatarInfoNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerUpdateShowAvatarInfoNotify* ServerUpdateShowAvatarInfoNotify::New(::google::protobuf::Arena* arena) const {
  ServerUpdateShowAvatarInfoNotify* n = new ServerUpdateShowAvatarInfoNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerUpdateShowAvatarInfoNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerUpdateShowAvatarInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_avatar_info_list_.Clear();
  _internal_metadata_.Clear();
}

bool ServerUpdateShowAvatarInfoNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerUpdateShowAvatarInfoNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ShowAvatarInfo show_avatar_info_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_show_avatar_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerUpdateShowAvatarInfoNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerUpdateShowAvatarInfoNotify)
  return false;
#undef DO_
}

void ServerUpdateShowAvatarInfoNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerUpdateShowAvatarInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ShowAvatarInfo show_avatar_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->show_avatar_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->show_avatar_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerUpdateShowAvatarInfoNotify)
}

::google::protobuf::uint8* ServerUpdateShowAvatarInfoNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerUpdateShowAvatarInfoNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ShowAvatarInfo show_avatar_info_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->show_avatar_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->show_avatar_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerUpdateShowAvatarInfoNotify)
  return target;
}

size_t ServerUpdateShowAvatarInfoNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerUpdateShowAvatarInfoNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ShowAvatarInfo show_avatar_info_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->show_avatar_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->show_avatar_info_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerUpdateShowAvatarInfoNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerUpdateShowAvatarInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerUpdateShowAvatarInfoNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerUpdateShowAvatarInfoNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerUpdateShowAvatarInfoNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerUpdateShowAvatarInfoNotify)
    MergeFrom(*source);
  }
}

void ServerUpdateShowAvatarInfoNotify::MergeFrom(const ServerUpdateShowAvatarInfoNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerUpdateShowAvatarInfoNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  show_avatar_info_list_.MergeFrom(from.show_avatar_info_list_);
}

void ServerUpdateShowAvatarInfoNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerUpdateShowAvatarInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerUpdateShowAvatarInfoNotify::CopyFrom(const ServerUpdateShowAvatarInfoNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerUpdateShowAvatarInfoNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerUpdateShowAvatarInfoNotify::IsInitialized() const {
  return true;
}

void ServerUpdateShowAvatarInfoNotify::Swap(ServerUpdateShowAvatarInfoNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerUpdateShowAvatarInfoNotify::InternalSwap(ServerUpdateShowAvatarInfoNotify* other) {
  using std::swap;
  show_avatar_info_list_.InternalSwap(&other->show_avatar_info_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerUpdateShowAvatarInfoNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerUpdateShowAvatarInfoNotify

// repeated .proto.ShowAvatarInfo show_avatar_info_list = 1;
int ServerUpdateShowAvatarInfoNotify::show_avatar_info_list_size() const {
  return show_avatar_info_list_.size();
}
void ServerUpdateShowAvatarInfoNotify::clear_show_avatar_info_list() {
  show_avatar_info_list_.Clear();
}
const ::proto::ShowAvatarInfo& ServerUpdateShowAvatarInfoNotify::show_avatar_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerUpdateShowAvatarInfoNotify.show_avatar_info_list)
  return show_avatar_info_list_.Get(index);
}
::proto::ShowAvatarInfo* ServerUpdateShowAvatarInfoNotify::mutable_show_avatar_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerUpdateShowAvatarInfoNotify.show_avatar_info_list)
  return show_avatar_info_list_.Mutable(index);
}
::proto::ShowAvatarInfo* ServerUpdateShowAvatarInfoNotify::add_show_avatar_info_list() {
  // @@protoc_insertion_point(field_add:proto.ServerUpdateShowAvatarInfoNotify.show_avatar_info_list)
  return show_avatar_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ShowAvatarInfo >*
ServerUpdateShowAvatarInfoNotify::mutable_show_avatar_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerUpdateShowAvatarInfoNotify.show_avatar_info_list)
  return &show_avatar_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ShowAvatarInfo >&
ServerUpdateShowAvatarInfoNotify::show_avatar_info_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerUpdateShowAvatarInfoNotify.show_avatar_info_list)
  return show_avatar_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetFriendShowAvatarInfoReq::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetFriendShowAvatarInfoReq::ServerGetFriendShowAvatarInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetFriendShowAvatarInfoReq)
}
ServerGetFriendShowAvatarInfoReq::ServerGetFriendShowAvatarInfoReq(const ServerGetFriendShowAvatarInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetFriendShowAvatarInfoReq)
}

void ServerGetFriendShowAvatarInfoReq::SharedCtor() {
  uid_ = 0u;
  _cached_size_ = 0;
}

ServerGetFriendShowAvatarInfoReq::~ServerGetFriendShowAvatarInfoReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetFriendShowAvatarInfoReq)
  SharedDtor();
}

void ServerGetFriendShowAvatarInfoReq::SharedDtor() {
}

void ServerGetFriendShowAvatarInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetFriendShowAvatarInfoReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetFriendShowAvatarInfoReq& ServerGetFriendShowAvatarInfoReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetFriendShowAvatarInfoReq* ServerGetFriendShowAvatarInfoReq::New(::google::protobuf::Arena* arena) const {
  ServerGetFriendShowAvatarInfoReq* n = new ServerGetFriendShowAvatarInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetFriendShowAvatarInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetFriendShowAvatarInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerGetFriendShowAvatarInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetFriendShowAvatarInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetFriendShowAvatarInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetFriendShowAvatarInfoReq)
  return false;
#undef DO_
}

void ServerGetFriendShowAvatarInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetFriendShowAvatarInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetFriendShowAvatarInfoReq)
}

::google::protobuf::uint8* ServerGetFriendShowAvatarInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetFriendShowAvatarInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetFriendShowAvatarInfoReq)
  return target;
}

size_t ServerGetFriendShowAvatarInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetFriendShowAvatarInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetFriendShowAvatarInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetFriendShowAvatarInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetFriendShowAvatarInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetFriendShowAvatarInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetFriendShowAvatarInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetFriendShowAvatarInfoReq)
    MergeFrom(*source);
  }
}

void ServerGetFriendShowAvatarInfoReq::MergeFrom(const ServerGetFriendShowAvatarInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetFriendShowAvatarInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void ServerGetFriendShowAvatarInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetFriendShowAvatarInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetFriendShowAvatarInfoReq::CopyFrom(const ServerGetFriendShowAvatarInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetFriendShowAvatarInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetFriendShowAvatarInfoReq::IsInitialized() const {
  return true;
}

void ServerGetFriendShowAvatarInfoReq::Swap(ServerGetFriendShowAvatarInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetFriendShowAvatarInfoReq::InternalSwap(ServerGetFriendShowAvatarInfoReq* other) {
  using std::swap;
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetFriendShowAvatarInfoReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetFriendShowAvatarInfoReq

// uint32 uid = 1;
void ServerGetFriendShowAvatarInfoReq::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 ServerGetFriendShowAvatarInfoReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendShowAvatarInfoReq.uid)
  return uid_;
}
void ServerGetFriendShowAvatarInfoReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetFriendShowAvatarInfoReq.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetFriendShowAvatarInfoRsp::kRetcodeFieldNumber;
const int ServerGetFriendShowAvatarInfoRsp::kUidFieldNumber;
const int ServerGetFriendShowAvatarInfoRsp::kShowAvatarInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetFriendShowAvatarInfoRsp::ServerGetFriendShowAvatarInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetFriendShowAvatarInfoRsp)
}
ServerGetFriendShowAvatarInfoRsp::ServerGetFriendShowAvatarInfoRsp(const ServerGetFriendShowAvatarInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      show_avatar_info_list_(from.show_avatar_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetFriendShowAvatarInfoRsp)
}

void ServerGetFriendShowAvatarInfoRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(uid_));
  _cached_size_ = 0;
}

ServerGetFriendShowAvatarInfoRsp::~ServerGetFriendShowAvatarInfoRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetFriendShowAvatarInfoRsp)
  SharedDtor();
}

void ServerGetFriendShowAvatarInfoRsp::SharedDtor() {
}

void ServerGetFriendShowAvatarInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetFriendShowAvatarInfoRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetFriendShowAvatarInfoRsp& ServerGetFriendShowAvatarInfoRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetFriendShowAvatarInfoRsp* ServerGetFriendShowAvatarInfoRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetFriendShowAvatarInfoRsp* n = new ServerGetFriendShowAvatarInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetFriendShowAvatarInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetFriendShowAvatarInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_avatar_info_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

bool ServerGetFriendShowAvatarInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetFriendShowAvatarInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ShowAvatarInfo show_avatar_info_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_show_avatar_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetFriendShowAvatarInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetFriendShowAvatarInfoRsp)
  return false;
#undef DO_
}

void ServerGetFriendShowAvatarInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetFriendShowAvatarInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  // repeated .proto.ShowAvatarInfo show_avatar_info_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->show_avatar_info_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->show_avatar_info_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetFriendShowAvatarInfoRsp)
}

::google::protobuf::uint8* ServerGetFriendShowAvatarInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetFriendShowAvatarInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  // repeated .proto.ShowAvatarInfo show_avatar_info_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->show_avatar_info_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->show_avatar_info_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetFriendShowAvatarInfoRsp)
  return target;
}

size_t ServerGetFriendShowAvatarInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetFriendShowAvatarInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ShowAvatarInfo show_avatar_info_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->show_avatar_info_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->show_avatar_info_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetFriendShowAvatarInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetFriendShowAvatarInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetFriendShowAvatarInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetFriendShowAvatarInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetFriendShowAvatarInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetFriendShowAvatarInfoRsp)
    MergeFrom(*source);
  }
}

void ServerGetFriendShowAvatarInfoRsp::MergeFrom(const ServerGetFriendShowAvatarInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetFriendShowAvatarInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  show_avatar_info_list_.MergeFrom(from.show_avatar_info_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void ServerGetFriendShowAvatarInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetFriendShowAvatarInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetFriendShowAvatarInfoRsp::CopyFrom(const ServerGetFriendShowAvatarInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetFriendShowAvatarInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetFriendShowAvatarInfoRsp::IsInitialized() const {
  return true;
}

void ServerGetFriendShowAvatarInfoRsp::Swap(ServerGetFriendShowAvatarInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetFriendShowAvatarInfoRsp::InternalSwap(ServerGetFriendShowAvatarInfoRsp* other) {
  using std::swap;
  show_avatar_info_list_.InternalSwap(&other->show_avatar_info_list_);
  swap(retcode_, other->retcode_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetFriendShowAvatarInfoRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetFriendShowAvatarInfoRsp

// int32 retcode = 1;
void ServerGetFriendShowAvatarInfoRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetFriendShowAvatarInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendShowAvatarInfoRsp.retcode)
  return retcode_;
}
void ServerGetFriendShowAvatarInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetFriendShowAvatarInfoRsp.retcode)
}

// uint32 uid = 2;
void ServerGetFriendShowAvatarInfoRsp::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 ServerGetFriendShowAvatarInfoRsp::uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendShowAvatarInfoRsp.uid)
  return uid_;
}
void ServerGetFriendShowAvatarInfoRsp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetFriendShowAvatarInfoRsp.uid)
}

// repeated .proto.ShowAvatarInfo show_avatar_info_list = 3;
int ServerGetFriendShowAvatarInfoRsp::show_avatar_info_list_size() const {
  return show_avatar_info_list_.size();
}
void ServerGetFriendShowAvatarInfoRsp::clear_show_avatar_info_list() {
  show_avatar_info_list_.Clear();
}
const ::proto::ShowAvatarInfo& ServerGetFriendShowAvatarInfoRsp::show_avatar_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return show_avatar_info_list_.Get(index);
}
::proto::ShowAvatarInfo* ServerGetFriendShowAvatarInfoRsp::mutable_show_avatar_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return show_avatar_info_list_.Mutable(index);
}
::proto::ShowAvatarInfo* ServerGetFriendShowAvatarInfoRsp::add_show_avatar_info_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return show_avatar_info_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ShowAvatarInfo >*
ServerGetFriendShowAvatarInfoRsp::mutable_show_avatar_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return &show_avatar_info_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ShowAvatarInfo >&
ServerGetFriendShowAvatarInfoRsp::show_avatar_info_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetFriendShowAvatarInfoRsp.show_avatar_info_list)
  return show_avatar_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerReadPrivateChatReq::kFromUidFieldNumber;
const int ServerReadPrivateChatReq::kTargetUidFieldNumber;
const int ServerReadPrivateChatReq::kIsPs4FriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerReadPrivateChatReq::ServerReadPrivateChatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerReadPrivateChatReq)
}
ServerReadPrivateChatReq::ServerReadPrivateChatReq(const ServerReadPrivateChatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&from_uid_, &from.from_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_ps4_friend_) -
    reinterpret_cast<char*>(&from_uid_)) + sizeof(is_ps4_friend_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerReadPrivateChatReq)
}

void ServerReadPrivateChatReq::SharedCtor() {
  ::memset(&from_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ps4_friend_) -
      reinterpret_cast<char*>(&from_uid_)) + sizeof(is_ps4_friend_));
  _cached_size_ = 0;
}

ServerReadPrivateChatReq::~ServerReadPrivateChatReq() {
  // @@protoc_insertion_point(destructor:proto.ServerReadPrivateChatReq)
  SharedDtor();
}

void ServerReadPrivateChatReq::SharedDtor() {
}

void ServerReadPrivateChatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerReadPrivateChatReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerReadPrivateChatReq& ServerReadPrivateChatReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerReadPrivateChatReq* ServerReadPrivateChatReq::New(::google::protobuf::Arena* arena) const {
  ServerReadPrivateChatReq* n = new ServerReadPrivateChatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerReadPrivateChatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerReadPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&from_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ps4_friend_) -
      reinterpret_cast<char*>(&from_uid_)) + sizeof(is_ps4_friend_));
  _internal_metadata_.Clear();
}

bool ServerReadPrivateChatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerReadPrivateChatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 from_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &from_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_ps4_friend = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ps4_friend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerReadPrivateChatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerReadPrivateChatReq)
  return false;
#undef DO_
}

void ServerReadPrivateChatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerReadPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_uid = 1;
  if (this->from_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->from_uid(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  // bool is_ps4_friend = 3;
  if (this->is_ps4_friend() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_ps4_friend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerReadPrivateChatReq)
}

::google::protobuf::uint8* ServerReadPrivateChatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerReadPrivateChatReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 from_uid = 1;
  if (this->from_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->from_uid(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  // bool is_ps4_friend = 3;
  if (this->is_ps4_friend() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_ps4_friend(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerReadPrivateChatReq)
  return target;
}

size_t ServerReadPrivateChatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerReadPrivateChatReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 from_uid = 1;
  if (this->from_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->from_uid());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // bool is_ps4_friend = 3;
  if (this->is_ps4_friend() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerReadPrivateChatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerReadPrivateChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerReadPrivateChatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerReadPrivateChatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerReadPrivateChatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerReadPrivateChatReq)
    MergeFrom(*source);
  }
}

void ServerReadPrivateChatReq::MergeFrom(const ServerReadPrivateChatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerReadPrivateChatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_uid() != 0) {
    set_from_uid(from.from_uid());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.is_ps4_friend() != 0) {
    set_is_ps4_friend(from.is_ps4_friend());
  }
}

void ServerReadPrivateChatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerReadPrivateChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerReadPrivateChatReq::CopyFrom(const ServerReadPrivateChatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerReadPrivateChatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerReadPrivateChatReq::IsInitialized() const {
  return true;
}

void ServerReadPrivateChatReq::Swap(ServerReadPrivateChatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerReadPrivateChatReq::InternalSwap(ServerReadPrivateChatReq* other) {
  using std::swap;
  swap(from_uid_, other->from_uid_);
  swap(target_uid_, other->target_uid_);
  swap(is_ps4_friend_, other->is_ps4_friend_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerReadPrivateChatReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerReadPrivateChatReq

// uint32 from_uid = 1;
void ServerReadPrivateChatReq::clear_from_uid() {
  from_uid_ = 0u;
}
::google::protobuf::uint32 ServerReadPrivateChatReq::from_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerReadPrivateChatReq.from_uid)
  return from_uid_;
}
void ServerReadPrivateChatReq::set_from_uid(::google::protobuf::uint32 value) {
  
  from_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerReadPrivateChatReq.from_uid)
}

// uint32 target_uid = 2;
void ServerReadPrivateChatReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerReadPrivateChatReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerReadPrivateChatReq.target_uid)
  return target_uid_;
}
void ServerReadPrivateChatReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerReadPrivateChatReq.target_uid)
}

// bool is_ps4_friend = 3;
void ServerReadPrivateChatReq::clear_is_ps4_friend() {
  is_ps4_friend_ = false;
}
bool ServerReadPrivateChatReq::is_ps4_friend() const {
  // @@protoc_insertion_point(field_get:proto.ServerReadPrivateChatReq.is_ps4_friend)
  return is_ps4_friend_;
}
void ServerReadPrivateChatReq::set_is_ps4_friend(bool value) {
  
  is_ps4_friend_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerReadPrivateChatReq.is_ps4_friend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetFriendShowNameCardInfoReq::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetFriendShowNameCardInfoReq::ServerGetFriendShowNameCardInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetFriendShowNameCardInfoReq)
}
ServerGetFriendShowNameCardInfoReq::ServerGetFriendShowNameCardInfoReq(const ServerGetFriendShowNameCardInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetFriendShowNameCardInfoReq)
}

void ServerGetFriendShowNameCardInfoReq::SharedCtor() {
  uid_ = 0u;
  _cached_size_ = 0;
}

ServerGetFriendShowNameCardInfoReq::~ServerGetFriendShowNameCardInfoReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetFriendShowNameCardInfoReq)
  SharedDtor();
}

void ServerGetFriendShowNameCardInfoReq::SharedDtor() {
}

void ServerGetFriendShowNameCardInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetFriendShowNameCardInfoReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetFriendShowNameCardInfoReq& ServerGetFriendShowNameCardInfoReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetFriendShowNameCardInfoReq* ServerGetFriendShowNameCardInfoReq::New(::google::protobuf::Arena* arena) const {
  ServerGetFriendShowNameCardInfoReq* n = new ServerGetFriendShowNameCardInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetFriendShowNameCardInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetFriendShowNameCardInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerGetFriendShowNameCardInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetFriendShowNameCardInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetFriendShowNameCardInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetFriendShowNameCardInfoReq)
  return false;
#undef DO_
}

void ServerGetFriendShowNameCardInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetFriendShowNameCardInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetFriendShowNameCardInfoReq)
}

::google::protobuf::uint8* ServerGetFriendShowNameCardInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetFriendShowNameCardInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetFriendShowNameCardInfoReq)
  return target;
}

size_t ServerGetFriendShowNameCardInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetFriendShowNameCardInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetFriendShowNameCardInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetFriendShowNameCardInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetFriendShowNameCardInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetFriendShowNameCardInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetFriendShowNameCardInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetFriendShowNameCardInfoReq)
    MergeFrom(*source);
  }
}

void ServerGetFriendShowNameCardInfoReq::MergeFrom(const ServerGetFriendShowNameCardInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetFriendShowNameCardInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void ServerGetFriendShowNameCardInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetFriendShowNameCardInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetFriendShowNameCardInfoReq::CopyFrom(const ServerGetFriendShowNameCardInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetFriendShowNameCardInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetFriendShowNameCardInfoReq::IsInitialized() const {
  return true;
}

void ServerGetFriendShowNameCardInfoReq::Swap(ServerGetFriendShowNameCardInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetFriendShowNameCardInfoReq::InternalSwap(ServerGetFriendShowNameCardInfoReq* other) {
  using std::swap;
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetFriendShowNameCardInfoReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetFriendShowNameCardInfoReq

// uint32 uid = 1;
void ServerGetFriendShowNameCardInfoReq::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 ServerGetFriendShowNameCardInfoReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendShowNameCardInfoReq.uid)
  return uid_;
}
void ServerGetFriendShowNameCardInfoReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetFriendShowNameCardInfoReq.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetFriendShowNameCardInfoRsp::kRetcodeFieldNumber;
const int ServerGetFriendShowNameCardInfoRsp::kUidFieldNumber;
const int ServerGetFriendShowNameCardInfoRsp::kShowNameCardIdListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetFriendShowNameCardInfoRsp::ServerGetFriendShowNameCardInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetFriendShowNameCardInfoRsp)
}
ServerGetFriendShowNameCardInfoRsp::ServerGetFriendShowNameCardInfoRsp(const ServerGetFriendShowNameCardInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      show_name_card_id_list_(from.show_name_card_id_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetFriendShowNameCardInfoRsp)
}

void ServerGetFriendShowNameCardInfoRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(uid_));
  _cached_size_ = 0;
}

ServerGetFriendShowNameCardInfoRsp::~ServerGetFriendShowNameCardInfoRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetFriendShowNameCardInfoRsp)
  SharedDtor();
}

void ServerGetFriendShowNameCardInfoRsp::SharedDtor() {
}

void ServerGetFriendShowNameCardInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetFriendShowNameCardInfoRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetFriendShowNameCardInfoRsp& ServerGetFriendShowNameCardInfoRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetFriendShowNameCardInfoRsp* ServerGetFriendShowNameCardInfoRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetFriendShowNameCardInfoRsp* n = new ServerGetFriendShowNameCardInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetFriendShowNameCardInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetFriendShowNameCardInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  show_name_card_id_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(uid_));
  _internal_metadata_.Clear();
}

bool ServerGetFriendShowNameCardInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetFriendShowNameCardInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 show_name_card_id_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_show_name_card_id_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_show_name_card_id_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetFriendShowNameCardInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetFriendShowNameCardInfoRsp)
  return false;
#undef DO_
}

void ServerGetFriendShowNameCardInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetFriendShowNameCardInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  // repeated uint32 show_name_card_id_list = 3;
  if (this->show_name_card_id_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _show_name_card_id_list_cached_byte_size_));
  }
  for (int i = 0, n = this->show_name_card_id_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->show_name_card_id_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetFriendShowNameCardInfoRsp)
}

::google::protobuf::uint8* ServerGetFriendShowNameCardInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetFriendShowNameCardInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  // repeated uint32 show_name_card_id_list = 3;
  if (this->show_name_card_id_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _show_name_card_id_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->show_name_card_id_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetFriendShowNameCardInfoRsp)
  return target;
}

size_t ServerGetFriendShowNameCardInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetFriendShowNameCardInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 show_name_card_id_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->show_name_card_id_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _show_name_card_id_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetFriendShowNameCardInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetFriendShowNameCardInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetFriendShowNameCardInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetFriendShowNameCardInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetFriendShowNameCardInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetFriendShowNameCardInfoRsp)
    MergeFrom(*source);
  }
}

void ServerGetFriendShowNameCardInfoRsp::MergeFrom(const ServerGetFriendShowNameCardInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetFriendShowNameCardInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  show_name_card_id_list_.MergeFrom(from.show_name_card_id_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void ServerGetFriendShowNameCardInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetFriendShowNameCardInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetFriendShowNameCardInfoRsp::CopyFrom(const ServerGetFriendShowNameCardInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetFriendShowNameCardInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetFriendShowNameCardInfoRsp::IsInitialized() const {
  return true;
}

void ServerGetFriendShowNameCardInfoRsp::Swap(ServerGetFriendShowNameCardInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetFriendShowNameCardInfoRsp::InternalSwap(ServerGetFriendShowNameCardInfoRsp* other) {
  using std::swap;
  show_name_card_id_list_.InternalSwap(&other->show_name_card_id_list_);
  swap(retcode_, other->retcode_);
  swap(uid_, other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetFriendShowNameCardInfoRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetFriendShowNameCardInfoRsp

// int32 retcode = 1;
void ServerGetFriendShowNameCardInfoRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetFriendShowNameCardInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendShowNameCardInfoRsp.retcode)
  return retcode_;
}
void ServerGetFriendShowNameCardInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetFriendShowNameCardInfoRsp.retcode)
}

// uint32 uid = 2;
void ServerGetFriendShowNameCardInfoRsp::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 ServerGetFriendShowNameCardInfoRsp::uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendShowNameCardInfoRsp.uid)
  return uid_;
}
void ServerGetFriendShowNameCardInfoRsp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetFriendShowNameCardInfoRsp.uid)
}

// repeated uint32 show_name_card_id_list = 3;
int ServerGetFriendShowNameCardInfoRsp::show_name_card_id_list_size() const {
  return show_name_card_id_list_.size();
}
void ServerGetFriendShowNameCardInfoRsp::clear_show_name_card_id_list() {
  show_name_card_id_list_.Clear();
}
::google::protobuf::uint32 ServerGetFriendShowNameCardInfoRsp::show_name_card_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetFriendShowNameCardInfoRsp.show_name_card_id_list)
  return show_name_card_id_list_.Get(index);
}
void ServerGetFriendShowNameCardInfoRsp::set_show_name_card_id_list(int index, ::google::protobuf::uint32 value) {
  show_name_card_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetFriendShowNameCardInfoRsp.show_name_card_id_list)
}
void ServerGetFriendShowNameCardInfoRsp::add_show_name_card_id_list(::google::protobuf::uint32 value) {
  show_name_card_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetFriendShowNameCardInfoRsp.show_name_card_id_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerGetFriendShowNameCardInfoRsp::show_name_card_id_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetFriendShowNameCardInfoRsp.show_name_card_id_list)
  return show_name_card_id_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerGetFriendShowNameCardInfoRsp::mutable_show_name_card_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetFriendShowNameCardInfoRsp.show_name_card_id_list)
  return &show_name_card_id_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetAskFriendBriefReq::kAskAddFriendUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetAskFriendBriefReq::ServerGetAskFriendBriefReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetAskFriendBriefReq)
}
ServerGetAskFriendBriefReq::ServerGetAskFriendBriefReq(const ServerGetAskFriendBriefReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ask_add_friend_uid_list_(from.ask_add_friend_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetAskFriendBriefReq)
}

void ServerGetAskFriendBriefReq::SharedCtor() {
  _cached_size_ = 0;
}

ServerGetAskFriendBriefReq::~ServerGetAskFriendBriefReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetAskFriendBriefReq)
  SharedDtor();
}

void ServerGetAskFriendBriefReq::SharedDtor() {
}

void ServerGetAskFriendBriefReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetAskFriendBriefReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetAskFriendBriefReq& ServerGetAskFriendBriefReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetAskFriendBriefReq* ServerGetAskFriendBriefReq::New(::google::protobuf::Arena* arena) const {
  ServerGetAskFriendBriefReq* n = new ServerGetAskFriendBriefReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetAskFriendBriefReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetAskFriendBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ask_add_friend_uid_list_.Clear();
  _internal_metadata_.Clear();
}

bool ServerGetAskFriendBriefReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetAskFriendBriefReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 ask_add_friend_uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_ask_add_friend_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_ask_add_friend_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetAskFriendBriefReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetAskFriendBriefReq)
  return false;
#undef DO_
}

void ServerGetAskFriendBriefReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetAskFriendBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 ask_add_friend_uid_list = 1;
  if (this->ask_add_friend_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _ask_add_friend_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->ask_add_friend_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->ask_add_friend_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetAskFriendBriefReq)
}

::google::protobuf::uint8* ServerGetAskFriendBriefReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetAskFriendBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 ask_add_friend_uid_list = 1;
  if (this->ask_add_friend_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _ask_add_friend_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->ask_add_friend_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetAskFriendBriefReq)
  return target;
}

size_t ServerGetAskFriendBriefReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetAskFriendBriefReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 ask_add_friend_uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->ask_add_friend_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ask_add_friend_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetAskFriendBriefReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetAskFriendBriefReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetAskFriendBriefReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetAskFriendBriefReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetAskFriendBriefReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetAskFriendBriefReq)
    MergeFrom(*source);
  }
}

void ServerGetAskFriendBriefReq::MergeFrom(const ServerGetAskFriendBriefReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetAskFriendBriefReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ask_add_friend_uid_list_.MergeFrom(from.ask_add_friend_uid_list_);
}

void ServerGetAskFriendBriefReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetAskFriendBriefReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetAskFriendBriefReq::CopyFrom(const ServerGetAskFriendBriefReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetAskFriendBriefReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetAskFriendBriefReq::IsInitialized() const {
  return true;
}

void ServerGetAskFriendBriefReq::Swap(ServerGetAskFriendBriefReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetAskFriendBriefReq::InternalSwap(ServerGetAskFriendBriefReq* other) {
  using std::swap;
  ask_add_friend_uid_list_.InternalSwap(&other->ask_add_friend_uid_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetAskFriendBriefReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetAskFriendBriefReq

// repeated uint32 ask_add_friend_uid_list = 1;
int ServerGetAskFriendBriefReq::ask_add_friend_uid_list_size() const {
  return ask_add_friend_uid_list_.size();
}
void ServerGetAskFriendBriefReq::clear_ask_add_friend_uid_list() {
  ask_add_friend_uid_list_.Clear();
}
::google::protobuf::uint32 ServerGetAskFriendBriefReq::ask_add_friend_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetAskFriendBriefReq.ask_add_friend_uid_list)
  return ask_add_friend_uid_list_.Get(index);
}
void ServerGetAskFriendBriefReq::set_ask_add_friend_uid_list(int index, ::google::protobuf::uint32 value) {
  ask_add_friend_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetAskFriendBriefReq.ask_add_friend_uid_list)
}
void ServerGetAskFriendBriefReq::add_ask_add_friend_uid_list(::google::protobuf::uint32 value) {
  ask_add_friend_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetAskFriendBriefReq.ask_add_friend_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerGetAskFriendBriefReq::ask_add_friend_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetAskFriendBriefReq.ask_add_friend_uid_list)
  return ask_add_friend_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerGetAskFriendBriefReq::mutable_ask_add_friend_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetAskFriendBriefReq.ask_add_friend_uid_list)
  return &ask_add_friend_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetAskFriendBriefRsp::kRetcodeFieldNumber;
const int ServerGetAskFriendBriefRsp::kAskAddFriendBriefListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetAskFriendBriefRsp::ServerGetAskFriendBriefRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetAskFriendBriefRsp)
}
ServerGetAskFriendBriefRsp::ServerGetAskFriendBriefRsp(const ServerGetAskFriendBriefRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ask_add_friend_brief_list_(from.ask_add_friend_brief_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetAskFriendBriefRsp)
}

void ServerGetAskFriendBriefRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ServerGetAskFriendBriefRsp::~ServerGetAskFriendBriefRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetAskFriendBriefRsp)
  SharedDtor();
}

void ServerGetAskFriendBriefRsp::SharedDtor() {
}

void ServerGetAskFriendBriefRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetAskFriendBriefRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetAskFriendBriefRsp& ServerGetAskFriendBriefRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetAskFriendBriefRsp* ServerGetAskFriendBriefRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetAskFriendBriefRsp* n = new ServerGetAskFriendBriefRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetAskFriendBriefRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetAskFriendBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ask_add_friend_brief_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerGetAskFriendBriefRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetAskFriendBriefRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief ask_add_friend_brief_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ask_add_friend_brief_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetAskFriendBriefRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetAskFriendBriefRsp)
  return false;
#undef DO_
}

void ServerGetAskFriendBriefRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetAskFriendBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.FriendBrief ask_add_friend_brief_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ask_add_friend_brief_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->ask_add_friend_brief_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetAskFriendBriefRsp)
}

::google::protobuf::uint8* ServerGetAskFriendBriefRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetAskFriendBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.FriendBrief ask_add_friend_brief_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ask_add_friend_brief_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->ask_add_friend_brief_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetAskFriendBriefRsp)
  return target;
}

size_t ServerGetAskFriendBriefRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetAskFriendBriefRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.FriendBrief ask_add_friend_brief_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ask_add_friend_brief_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ask_add_friend_brief_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetAskFriendBriefRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetAskFriendBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetAskFriendBriefRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetAskFriendBriefRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetAskFriendBriefRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetAskFriendBriefRsp)
    MergeFrom(*source);
  }
}

void ServerGetAskFriendBriefRsp::MergeFrom(const ServerGetAskFriendBriefRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetAskFriendBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ask_add_friend_brief_list_.MergeFrom(from.ask_add_friend_brief_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerGetAskFriendBriefRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetAskFriendBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetAskFriendBriefRsp::CopyFrom(const ServerGetAskFriendBriefRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetAskFriendBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetAskFriendBriefRsp::IsInitialized() const {
  return true;
}

void ServerGetAskFriendBriefRsp::Swap(ServerGetAskFriendBriefRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetAskFriendBriefRsp::InternalSwap(ServerGetAskFriendBriefRsp* other) {
  using std::swap;
  ask_add_friend_brief_list_.InternalSwap(&other->ask_add_friend_brief_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetAskFriendBriefRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetAskFriendBriefRsp

// int32 retcode = 1;
void ServerGetAskFriendBriefRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetAskFriendBriefRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetAskFriendBriefRsp.retcode)
  return retcode_;
}
void ServerGetAskFriendBriefRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetAskFriendBriefRsp.retcode)
}

// repeated .proto.FriendBrief ask_add_friend_brief_list = 2;
int ServerGetAskFriendBriefRsp::ask_add_friend_brief_list_size() const {
  return ask_add_friend_brief_list_.size();
}
void ServerGetAskFriendBriefRsp::clear_ask_add_friend_brief_list() {
  ask_add_friend_brief_list_.Clear();
}
const ::proto::FriendBrief& ServerGetAskFriendBriefRsp::ask_add_friend_brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetAskFriendBriefRsp.ask_add_friend_brief_list)
  return ask_add_friend_brief_list_.Get(index);
}
::proto::FriendBrief* ServerGetAskFriendBriefRsp::mutable_ask_add_friend_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGetAskFriendBriefRsp.ask_add_friend_brief_list)
  return ask_add_friend_brief_list_.Mutable(index);
}
::proto::FriendBrief* ServerGetAskFriendBriefRsp::add_ask_add_friend_brief_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGetAskFriendBriefRsp.ask_add_friend_brief_list)
  return ask_add_friend_brief_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
ServerGetAskFriendBriefRsp::mutable_ask_add_friend_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetAskFriendBriefRsp.ask_add_friend_brief_list)
  return &ask_add_friend_brief_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
ServerGetAskFriendBriefRsp::ask_add_friend_brief_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetAskFriendBriefRsp.ask_add_friend_brief_list)
  return ask_add_friend_brief_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAddPsnFriendReq::kForceAddPsnFriendUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAddPsnFriendReq::ServerAddPsnFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerAddPsnFriendReq)
}
ServerAddPsnFriendReq::ServerAddPsnFriendReq(const ServerAddPsnFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      force_add_psn_friend_uid_list_(from.force_add_psn_friend_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ServerAddPsnFriendReq)
}

void ServerAddPsnFriendReq::SharedCtor() {
  _cached_size_ = 0;
}

ServerAddPsnFriendReq::~ServerAddPsnFriendReq() {
  // @@protoc_insertion_point(destructor:proto.ServerAddPsnFriendReq)
  SharedDtor();
}

void ServerAddPsnFriendReq::SharedDtor() {
}

void ServerAddPsnFriendReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAddPsnFriendReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAddPsnFriendReq& ServerAddPsnFriendReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerAddPsnFriendReq* ServerAddPsnFriendReq::New(::google::protobuf::Arena* arena) const {
  ServerAddPsnFriendReq* n = new ServerAddPsnFriendReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAddPsnFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerAddPsnFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  force_add_psn_friend_uid_list_.Clear();
  _internal_metadata_.Clear();
}

bool ServerAddPsnFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerAddPsnFriendReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 force_add_psn_friend_uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_force_add_psn_friend_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_force_add_psn_friend_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerAddPsnFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerAddPsnFriendReq)
  return false;
#undef DO_
}

void ServerAddPsnFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerAddPsnFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 force_add_psn_friend_uid_list = 1;
  if (this->force_add_psn_friend_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _force_add_psn_friend_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->force_add_psn_friend_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->force_add_psn_friend_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerAddPsnFriendReq)
}

::google::protobuf::uint8* ServerAddPsnFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerAddPsnFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 force_add_psn_friend_uid_list = 1;
  if (this->force_add_psn_friend_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _force_add_psn_friend_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->force_add_psn_friend_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerAddPsnFriendReq)
  return target;
}

size_t ServerAddPsnFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerAddPsnFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 force_add_psn_friend_uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->force_add_psn_friend_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _force_add_psn_friend_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAddPsnFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerAddPsnFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAddPsnFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAddPsnFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerAddPsnFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerAddPsnFriendReq)
    MergeFrom(*source);
  }
}

void ServerAddPsnFriendReq::MergeFrom(const ServerAddPsnFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerAddPsnFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  force_add_psn_friend_uid_list_.MergeFrom(from.force_add_psn_friend_uid_list_);
}

void ServerAddPsnFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerAddPsnFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAddPsnFriendReq::CopyFrom(const ServerAddPsnFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerAddPsnFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAddPsnFriendReq::IsInitialized() const {
  return true;
}

void ServerAddPsnFriendReq::Swap(ServerAddPsnFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAddPsnFriendReq::InternalSwap(ServerAddPsnFriendReq* other) {
  using std::swap;
  force_add_psn_friend_uid_list_.InternalSwap(&other->force_add_psn_friend_uid_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAddPsnFriendReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAddPsnFriendReq

// repeated uint32 force_add_psn_friend_uid_list = 1;
int ServerAddPsnFriendReq::force_add_psn_friend_uid_list_size() const {
  return force_add_psn_friend_uid_list_.size();
}
void ServerAddPsnFriendReq::clear_force_add_psn_friend_uid_list() {
  force_add_psn_friend_uid_list_.Clear();
}
::google::protobuf::uint32 ServerAddPsnFriendReq::force_add_psn_friend_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerAddPsnFriendReq.force_add_psn_friend_uid_list)
  return force_add_psn_friend_uid_list_.Get(index);
}
void ServerAddPsnFriendReq::set_force_add_psn_friend_uid_list(int index, ::google::protobuf::uint32 value) {
  force_add_psn_friend_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerAddPsnFriendReq.force_add_psn_friend_uid_list)
}
void ServerAddPsnFriendReq::add_force_add_psn_friend_uid_list(::google::protobuf::uint32 value) {
  force_add_psn_friend_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerAddPsnFriendReq.force_add_psn_friend_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerAddPsnFriendReq::force_add_psn_friend_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerAddPsnFriendReq.force_add_psn_friend_uid_list)
  return force_add_psn_friend_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerAddPsnFriendReq::mutable_force_add_psn_friend_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerAddPsnFriendReq.force_add_psn_friend_uid_list)
  return &force_add_psn_friend_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAddPsnFriendRsp::kRetcodeFieldNumber;
const int ServerAddPsnFriendRsp::kForceAddPsnFriendUidListFieldNumber;
const int ServerAddPsnFriendRsp::kForceAddPsnFriendBriefListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAddPsnFriendRsp::ServerAddPsnFriendRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerAddPsnFriendRsp)
}
ServerAddPsnFriendRsp::ServerAddPsnFriendRsp(const ServerAddPsnFriendRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      force_add_psn_friend_uid_list_(from.force_add_psn_friend_uid_list_),
      force_add_psn_friend_brief_list_(from.force_add_psn_friend_brief_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerAddPsnFriendRsp)
}

void ServerAddPsnFriendRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ServerAddPsnFriendRsp::~ServerAddPsnFriendRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerAddPsnFriendRsp)
  SharedDtor();
}

void ServerAddPsnFriendRsp::SharedDtor() {
}

void ServerAddPsnFriendRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAddPsnFriendRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAddPsnFriendRsp& ServerAddPsnFriendRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerAddPsnFriendRsp* ServerAddPsnFriendRsp::New(::google::protobuf::Arena* arena) const {
  ServerAddPsnFriendRsp* n = new ServerAddPsnFriendRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAddPsnFriendRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerAddPsnFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  force_add_psn_friend_uid_list_.Clear();
  force_add_psn_friend_brief_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerAddPsnFriendRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerAddPsnFriendRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 force_add_psn_friend_uid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_force_add_psn_friend_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_force_add_psn_friend_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.FriendBrief force_add_psn_friend_brief_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_force_add_psn_friend_brief_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerAddPsnFriendRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerAddPsnFriendRsp)
  return false;
#undef DO_
}

void ServerAddPsnFriendRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerAddPsnFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated uint32 force_add_psn_friend_uid_list = 2;
  if (this->force_add_psn_friend_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _force_add_psn_friend_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->force_add_psn_friend_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->force_add_psn_friend_uid_list(i), output);
  }

  // repeated .proto.FriendBrief force_add_psn_friend_brief_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->force_add_psn_friend_brief_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->force_add_psn_friend_brief_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerAddPsnFriendRsp)
}

::google::protobuf::uint8* ServerAddPsnFriendRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerAddPsnFriendRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated uint32 force_add_psn_friend_uid_list = 2;
  if (this->force_add_psn_friend_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _force_add_psn_friend_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->force_add_psn_friend_uid_list_, target);
  }

  // repeated .proto.FriendBrief force_add_psn_friend_brief_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->force_add_psn_friend_brief_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->force_add_psn_friend_brief_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerAddPsnFriendRsp)
  return target;
}

size_t ServerAddPsnFriendRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerAddPsnFriendRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 force_add_psn_friend_uid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->force_add_psn_friend_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _force_add_psn_friend_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.FriendBrief force_add_psn_friend_brief_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->force_add_psn_friend_brief_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->force_add_psn_friend_brief_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAddPsnFriendRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerAddPsnFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAddPsnFriendRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAddPsnFriendRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerAddPsnFriendRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerAddPsnFriendRsp)
    MergeFrom(*source);
  }
}

void ServerAddPsnFriendRsp::MergeFrom(const ServerAddPsnFriendRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerAddPsnFriendRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  force_add_psn_friend_uid_list_.MergeFrom(from.force_add_psn_friend_uid_list_);
  force_add_psn_friend_brief_list_.MergeFrom(from.force_add_psn_friend_brief_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerAddPsnFriendRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerAddPsnFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAddPsnFriendRsp::CopyFrom(const ServerAddPsnFriendRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerAddPsnFriendRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAddPsnFriendRsp::IsInitialized() const {
  return true;
}

void ServerAddPsnFriendRsp::Swap(ServerAddPsnFriendRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAddPsnFriendRsp::InternalSwap(ServerAddPsnFriendRsp* other) {
  using std::swap;
  force_add_psn_friend_uid_list_.InternalSwap(&other->force_add_psn_friend_uid_list_);
  force_add_psn_friend_brief_list_.InternalSwap(&other->force_add_psn_friend_brief_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAddPsnFriendRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAddPsnFriendRsp

// int32 retcode = 1;
void ServerAddPsnFriendRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerAddPsnFriendRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerAddPsnFriendRsp.retcode)
  return retcode_;
}
void ServerAddPsnFriendRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAddPsnFriendRsp.retcode)
}

// repeated uint32 force_add_psn_friend_uid_list = 2;
int ServerAddPsnFriendRsp::force_add_psn_friend_uid_list_size() const {
  return force_add_psn_friend_uid_list_.size();
}
void ServerAddPsnFriendRsp::clear_force_add_psn_friend_uid_list() {
  force_add_psn_friend_uid_list_.Clear();
}
::google::protobuf::uint32 ServerAddPsnFriendRsp::force_add_psn_friend_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerAddPsnFriendRsp.force_add_psn_friend_uid_list)
  return force_add_psn_friend_uid_list_.Get(index);
}
void ServerAddPsnFriendRsp::set_force_add_psn_friend_uid_list(int index, ::google::protobuf::uint32 value) {
  force_add_psn_friend_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerAddPsnFriendRsp.force_add_psn_friend_uid_list)
}
void ServerAddPsnFriendRsp::add_force_add_psn_friend_uid_list(::google::protobuf::uint32 value) {
  force_add_psn_friend_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerAddPsnFriendRsp.force_add_psn_friend_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerAddPsnFriendRsp::force_add_psn_friend_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerAddPsnFriendRsp.force_add_psn_friend_uid_list)
  return force_add_psn_friend_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerAddPsnFriendRsp::mutable_force_add_psn_friend_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerAddPsnFriendRsp.force_add_psn_friend_uid_list)
  return &force_add_psn_friend_uid_list_;
}

// repeated .proto.FriendBrief force_add_psn_friend_brief_list = 3;
int ServerAddPsnFriendRsp::force_add_psn_friend_brief_list_size() const {
  return force_add_psn_friend_brief_list_.size();
}
void ServerAddPsnFriendRsp::clear_force_add_psn_friend_brief_list() {
  force_add_psn_friend_brief_list_.Clear();
}
const ::proto::FriendBrief& ServerAddPsnFriendRsp::force_add_psn_friend_brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerAddPsnFriendRsp.force_add_psn_friend_brief_list)
  return force_add_psn_friend_brief_list_.Get(index);
}
::proto::FriendBrief* ServerAddPsnFriendRsp::mutable_force_add_psn_friend_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerAddPsnFriendRsp.force_add_psn_friend_brief_list)
  return force_add_psn_friend_brief_list_.Mutable(index);
}
::proto::FriendBrief* ServerAddPsnFriendRsp::add_force_add_psn_friend_brief_list() {
  // @@protoc_insertion_point(field_add:proto.ServerAddPsnFriendRsp.force_add_psn_friend_brief_list)
  return force_add_psn_friend_brief_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >*
ServerAddPsnFriendRsp::mutable_force_add_psn_friend_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerAddPsnFriendRsp.force_add_psn_friend_brief_list)
  return &force_add_psn_friend_brief_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::FriendBrief >&
ServerAddPsnFriendRsp::force_add_psn_friend_brief_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerAddPsnFriendRsp.force_add_psn_friend_brief_list)
  return force_add_psn_friend_brief_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAddPsnBlackReq::kForceAddPsnBlackUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAddPsnBlackReq::ServerAddPsnBlackReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerAddPsnBlackReq)
}
ServerAddPsnBlackReq::ServerAddPsnBlackReq(const ServerAddPsnBlackReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      force_add_psn_black_uid_list_(from.force_add_psn_black_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ServerAddPsnBlackReq)
}

void ServerAddPsnBlackReq::SharedCtor() {
  _cached_size_ = 0;
}

ServerAddPsnBlackReq::~ServerAddPsnBlackReq() {
  // @@protoc_insertion_point(destructor:proto.ServerAddPsnBlackReq)
  SharedDtor();
}

void ServerAddPsnBlackReq::SharedDtor() {
}

void ServerAddPsnBlackReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAddPsnBlackReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAddPsnBlackReq& ServerAddPsnBlackReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerAddPsnBlackReq* ServerAddPsnBlackReq::New(::google::protobuf::Arena* arena) const {
  ServerAddPsnBlackReq* n = new ServerAddPsnBlackReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAddPsnBlackReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerAddPsnBlackReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  force_add_psn_black_uid_list_.Clear();
  _internal_metadata_.Clear();
}

bool ServerAddPsnBlackReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerAddPsnBlackReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 force_add_psn_black_uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_force_add_psn_black_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_force_add_psn_black_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerAddPsnBlackReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerAddPsnBlackReq)
  return false;
#undef DO_
}

void ServerAddPsnBlackReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerAddPsnBlackReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 force_add_psn_black_uid_list = 1;
  if (this->force_add_psn_black_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _force_add_psn_black_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->force_add_psn_black_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->force_add_psn_black_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerAddPsnBlackReq)
}

::google::protobuf::uint8* ServerAddPsnBlackReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerAddPsnBlackReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 force_add_psn_black_uid_list = 1;
  if (this->force_add_psn_black_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _force_add_psn_black_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->force_add_psn_black_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerAddPsnBlackReq)
  return target;
}

size_t ServerAddPsnBlackReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerAddPsnBlackReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 force_add_psn_black_uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->force_add_psn_black_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _force_add_psn_black_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAddPsnBlackReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerAddPsnBlackReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAddPsnBlackReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAddPsnBlackReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerAddPsnBlackReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerAddPsnBlackReq)
    MergeFrom(*source);
  }
}

void ServerAddPsnBlackReq::MergeFrom(const ServerAddPsnBlackReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerAddPsnBlackReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  force_add_psn_black_uid_list_.MergeFrom(from.force_add_psn_black_uid_list_);
}

void ServerAddPsnBlackReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerAddPsnBlackReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAddPsnBlackReq::CopyFrom(const ServerAddPsnBlackReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerAddPsnBlackReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAddPsnBlackReq::IsInitialized() const {
  return true;
}

void ServerAddPsnBlackReq::Swap(ServerAddPsnBlackReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAddPsnBlackReq::InternalSwap(ServerAddPsnBlackReq* other) {
  using std::swap;
  force_add_psn_black_uid_list_.InternalSwap(&other->force_add_psn_black_uid_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAddPsnBlackReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAddPsnBlackReq

// repeated uint32 force_add_psn_black_uid_list = 1;
int ServerAddPsnBlackReq::force_add_psn_black_uid_list_size() const {
  return force_add_psn_black_uid_list_.size();
}
void ServerAddPsnBlackReq::clear_force_add_psn_black_uid_list() {
  force_add_psn_black_uid_list_.Clear();
}
::google::protobuf::uint32 ServerAddPsnBlackReq::force_add_psn_black_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerAddPsnBlackReq.force_add_psn_black_uid_list)
  return force_add_psn_black_uid_list_.Get(index);
}
void ServerAddPsnBlackReq::set_force_add_psn_black_uid_list(int index, ::google::protobuf::uint32 value) {
  force_add_psn_black_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerAddPsnBlackReq.force_add_psn_black_uid_list)
}
void ServerAddPsnBlackReq::add_force_add_psn_black_uid_list(::google::protobuf::uint32 value) {
  force_add_psn_black_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerAddPsnBlackReq.force_add_psn_black_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerAddPsnBlackReq::force_add_psn_black_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerAddPsnBlackReq.force_add_psn_black_uid_list)
  return force_add_psn_black_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerAddPsnBlackReq::mutable_force_add_psn_black_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerAddPsnBlackReq.force_add_psn_black_uid_list)
  return &force_add_psn_black_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAddPsnBlackRsp::kRetcodeFieldNumber;
const int ServerAddPsnBlackRsp::kForceAddPsnBlackUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAddPsnBlackRsp::ServerAddPsnBlackRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerAddPsnBlackRsp)
}
ServerAddPsnBlackRsp::ServerAddPsnBlackRsp(const ServerAddPsnBlackRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      force_add_psn_black_uid_list_(from.force_add_psn_black_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerAddPsnBlackRsp)
}

void ServerAddPsnBlackRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ServerAddPsnBlackRsp::~ServerAddPsnBlackRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerAddPsnBlackRsp)
  SharedDtor();
}

void ServerAddPsnBlackRsp::SharedDtor() {
}

void ServerAddPsnBlackRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAddPsnBlackRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAddPsnBlackRsp& ServerAddPsnBlackRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerAddPsnBlackRsp* ServerAddPsnBlackRsp::New(::google::protobuf::Arena* arena) const {
  ServerAddPsnBlackRsp* n = new ServerAddPsnBlackRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAddPsnBlackRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerAddPsnBlackRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  force_add_psn_black_uid_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerAddPsnBlackRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerAddPsnBlackRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 force_add_psn_black_uid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_force_add_psn_black_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_force_add_psn_black_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerAddPsnBlackRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerAddPsnBlackRsp)
  return false;
#undef DO_
}

void ServerAddPsnBlackRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerAddPsnBlackRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated uint32 force_add_psn_black_uid_list = 2;
  if (this->force_add_psn_black_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _force_add_psn_black_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->force_add_psn_black_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->force_add_psn_black_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerAddPsnBlackRsp)
}

::google::protobuf::uint8* ServerAddPsnBlackRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerAddPsnBlackRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated uint32 force_add_psn_black_uid_list = 2;
  if (this->force_add_psn_black_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _force_add_psn_black_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->force_add_psn_black_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerAddPsnBlackRsp)
  return target;
}

size_t ServerAddPsnBlackRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerAddPsnBlackRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 force_add_psn_black_uid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->force_add_psn_black_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _force_add_psn_black_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAddPsnBlackRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerAddPsnBlackRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAddPsnBlackRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAddPsnBlackRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerAddPsnBlackRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerAddPsnBlackRsp)
    MergeFrom(*source);
  }
}

void ServerAddPsnBlackRsp::MergeFrom(const ServerAddPsnBlackRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerAddPsnBlackRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  force_add_psn_black_uid_list_.MergeFrom(from.force_add_psn_black_uid_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerAddPsnBlackRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerAddPsnBlackRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAddPsnBlackRsp::CopyFrom(const ServerAddPsnBlackRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerAddPsnBlackRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAddPsnBlackRsp::IsInitialized() const {
  return true;
}

void ServerAddPsnBlackRsp::Swap(ServerAddPsnBlackRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAddPsnBlackRsp::InternalSwap(ServerAddPsnBlackRsp* other) {
  using std::swap;
  force_add_psn_black_uid_list_.InternalSwap(&other->force_add_psn_black_uid_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAddPsnBlackRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAddPsnBlackRsp

// int32 retcode = 1;
void ServerAddPsnBlackRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerAddPsnBlackRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerAddPsnBlackRsp.retcode)
  return retcode_;
}
void ServerAddPsnBlackRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAddPsnBlackRsp.retcode)
}

// repeated uint32 force_add_psn_black_uid_list = 2;
int ServerAddPsnBlackRsp::force_add_psn_black_uid_list_size() const {
  return force_add_psn_black_uid_list_.size();
}
void ServerAddPsnBlackRsp::clear_force_add_psn_black_uid_list() {
  force_add_psn_black_uid_list_.Clear();
}
::google::protobuf::uint32 ServerAddPsnBlackRsp::force_add_psn_black_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerAddPsnBlackRsp.force_add_psn_black_uid_list)
  return force_add_psn_black_uid_list_.Get(index);
}
void ServerAddPsnBlackRsp::set_force_add_psn_black_uid_list(int index, ::google::protobuf::uint32 value) {
  force_add_psn_black_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerAddPsnBlackRsp.force_add_psn_black_uid_list)
}
void ServerAddPsnBlackRsp::add_force_add_psn_black_uid_list(::google::protobuf::uint32 value) {
  force_add_psn_black_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerAddPsnBlackRsp.force_add_psn_black_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerAddPsnBlackRsp::force_add_psn_black_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerAddPsnBlackRsp.force_add_psn_black_uid_list)
  return force_add_psn_black_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerAddPsnBlackRsp::mutable_force_add_psn_black_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerAddPsnBlackRsp.force_add_psn_black_uid_list)
  return &force_add_psn_black_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerFriendInfoChangeNotify::kMyUidFieldNumber;
const int ServerFriendInfoChangeNotify::kMyOnlineIdFieldNumber;
const int ServerFriendInfoChangeNotify::kNotifyUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerFriendInfoChangeNotify::ServerFriendInfoChangeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerFriendInfoChangeNotify)
}
ServerFriendInfoChangeNotify::ServerFriendInfoChangeNotify(const ServerFriendInfoChangeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notify_uid_list_(from.notify_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  my_online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.my_online_id().size() > 0) {
    my_online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.my_online_id_);
  }
  my_uid_ = from.my_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerFriendInfoChangeNotify)
}

void ServerFriendInfoChangeNotify::SharedCtor() {
  my_online_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  my_uid_ = 0u;
  _cached_size_ = 0;
}

ServerFriendInfoChangeNotify::~ServerFriendInfoChangeNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerFriendInfoChangeNotify)
  SharedDtor();
}

void ServerFriendInfoChangeNotify::SharedDtor() {
  my_online_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ServerFriendInfoChangeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerFriendInfoChangeNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerFriendInfoChangeNotify& ServerFriendInfoChangeNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerFriendInfoChangeNotify* ServerFriendInfoChangeNotify::New(::google::protobuf::Arena* arena) const {
  ServerFriendInfoChangeNotify* n = new ServerFriendInfoChangeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerFriendInfoChangeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerFriendInfoChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notify_uid_list_.Clear();
  my_online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  my_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerFriendInfoChangeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerFriendInfoChangeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 my_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &my_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string my_online_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_my_online_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->my_online_id().data(), static_cast<int>(this->my_online_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ServerFriendInfoChangeNotify.my_online_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 notify_uid_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_notify_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_notify_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerFriendInfoChangeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerFriendInfoChangeNotify)
  return false;
#undef DO_
}

void ServerFriendInfoChangeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerFriendInfoChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 my_uid = 1;
  if (this->my_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->my_uid(), output);
  }

  // string my_online_id = 2;
  if (this->my_online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->my_online_id().data(), static_cast<int>(this->my_online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ServerFriendInfoChangeNotify.my_online_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->my_online_id(), output);
  }

  // repeated uint32 notify_uid_list = 3;
  if (this->notify_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _notify_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->notify_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->notify_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerFriendInfoChangeNotify)
}

::google::protobuf::uint8* ServerFriendInfoChangeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerFriendInfoChangeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 my_uid = 1;
  if (this->my_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->my_uid(), target);
  }

  // string my_online_id = 2;
  if (this->my_online_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->my_online_id().data(), static_cast<int>(this->my_online_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ServerFriendInfoChangeNotify.my_online_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->my_online_id(), target);
  }

  // repeated uint32 notify_uid_list = 3;
  if (this->notify_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _notify_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->notify_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerFriendInfoChangeNotify)
  return target;
}

size_t ServerFriendInfoChangeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerFriendInfoChangeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 notify_uid_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->notify_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _notify_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string my_online_id = 2;
  if (this->my_online_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->my_online_id());
  }

  // uint32 my_uid = 1;
  if (this->my_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->my_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerFriendInfoChangeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerFriendInfoChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerFriendInfoChangeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerFriendInfoChangeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerFriendInfoChangeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerFriendInfoChangeNotify)
    MergeFrom(*source);
  }
}

void ServerFriendInfoChangeNotify::MergeFrom(const ServerFriendInfoChangeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerFriendInfoChangeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notify_uid_list_.MergeFrom(from.notify_uid_list_);
  if (from.my_online_id().size() > 0) {

    my_online_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.my_online_id_);
  }
  if (from.my_uid() != 0) {
    set_my_uid(from.my_uid());
  }
}

void ServerFriendInfoChangeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerFriendInfoChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerFriendInfoChangeNotify::CopyFrom(const ServerFriendInfoChangeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerFriendInfoChangeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerFriendInfoChangeNotify::IsInitialized() const {
  return true;
}

void ServerFriendInfoChangeNotify::Swap(ServerFriendInfoChangeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerFriendInfoChangeNotify::InternalSwap(ServerFriendInfoChangeNotify* other) {
  using std::swap;
  notify_uid_list_.InternalSwap(&other->notify_uid_list_);
  my_online_id_.Swap(&other->my_online_id_);
  swap(my_uid_, other->my_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerFriendInfoChangeNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerFriendInfoChangeNotify

// uint32 my_uid = 1;
void ServerFriendInfoChangeNotify::clear_my_uid() {
  my_uid_ = 0u;
}
::google::protobuf::uint32 ServerFriendInfoChangeNotify::my_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerFriendInfoChangeNotify.my_uid)
  return my_uid_;
}
void ServerFriendInfoChangeNotify::set_my_uid(::google::protobuf::uint32 value) {
  
  my_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerFriendInfoChangeNotify.my_uid)
}

// string my_online_id = 2;
void ServerFriendInfoChangeNotify::clear_my_online_id() {
  my_online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServerFriendInfoChangeNotify::my_online_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerFriendInfoChangeNotify.my_online_id)
  return my_online_id_.GetNoArena();
}
void ServerFriendInfoChangeNotify::set_my_online_id(const ::std::string& value) {
  
  my_online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ServerFriendInfoChangeNotify.my_online_id)
}
#if LANG_CXX11
void ServerFriendInfoChangeNotify::set_my_online_id(::std::string&& value) {
  
  my_online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ServerFriendInfoChangeNotify.my_online_id)
}
#endif
void ServerFriendInfoChangeNotify::set_my_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  my_online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ServerFriendInfoChangeNotify.my_online_id)
}
void ServerFriendInfoChangeNotify::set_my_online_id(const char* value, size_t size) {
  
  my_online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ServerFriendInfoChangeNotify.my_online_id)
}
::std::string* ServerFriendInfoChangeNotify::mutable_my_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.ServerFriendInfoChangeNotify.my_online_id)
  return my_online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerFriendInfoChangeNotify::release_my_online_id() {
  // @@protoc_insertion_point(field_release:proto.ServerFriendInfoChangeNotify.my_online_id)
  
  return my_online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerFriendInfoChangeNotify::set_allocated_my_online_id(::std::string* my_online_id) {
  if (my_online_id != NULL) {
    
  } else {
    
  }
  my_online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), my_online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.ServerFriendInfoChangeNotify.my_online_id)
}

// repeated uint32 notify_uid_list = 3;
int ServerFriendInfoChangeNotify::notify_uid_list_size() const {
  return notify_uid_list_.size();
}
void ServerFriendInfoChangeNotify::clear_notify_uid_list() {
  notify_uid_list_.Clear();
}
::google::protobuf::uint32 ServerFriendInfoChangeNotify::notify_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerFriendInfoChangeNotify.notify_uid_list)
  return notify_uid_list_.Get(index);
}
void ServerFriendInfoChangeNotify::set_notify_uid_list(int index, ::google::protobuf::uint32 value) {
  notify_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerFriendInfoChangeNotify.notify_uid_list)
}
void ServerFriendInfoChangeNotify::add_notify_uid_list(::google::protobuf::uint32 value) {
  notify_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerFriendInfoChangeNotify.notify_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerFriendInfoChangeNotify::notify_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerFriendInfoChangeNotify.notify_uid_list)
  return notify_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerFriendInfoChangeNotify::mutable_notify_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerFriendInfoChangeNotify.notify_uid_list)
  return &notify_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ServerPlantFlowerGetFriendFlowerDataReq::ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry::ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry() {}
ServerPlantFlowerGetFriendFlowerDataReq::ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry::ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ServerPlantFlowerGetFriendFlowerDataReq::ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[48];
}
void ServerPlantFlowerGetFriendFlowerDataReq::ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ServerPlantFlowerGetFriendFlowerDataReq::ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry::MergeFrom(const ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPlantFlowerGetFriendFlowerDataReq::kScheduleIdFieldNumber;
const int ServerPlantFlowerGetFriendFlowerDataReq::kFriendUidFieldNumber;
const int ServerPlantFlowerGetFriendFlowerDataReq::kGiveFlowerNumMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPlantFlowerGetFriendFlowerDataReq::ServerPlantFlowerGetFriendFlowerDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerPlantFlowerGetFriendFlowerDataReq)
}
ServerPlantFlowerGetFriendFlowerDataReq::ServerPlantFlowerGetFriendFlowerDataReq(const ServerPlantFlowerGetFriendFlowerDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  give_flower_num_map_.MergeFrom(from.give_flower_num_map_);
  ::memcpy(&schedule_id_, &from.schedule_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_uid_) -
    reinterpret_cast<char*>(&schedule_id_)) + sizeof(friend_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerPlantFlowerGetFriendFlowerDataReq)
}

void ServerPlantFlowerGetFriendFlowerDataReq::SharedCtor() {
  ::memset(&schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_uid_) -
      reinterpret_cast<char*>(&schedule_id_)) + sizeof(friend_uid_));
  _cached_size_ = 0;
}

ServerPlantFlowerGetFriendFlowerDataReq::~ServerPlantFlowerGetFriendFlowerDataReq() {
  // @@protoc_insertion_point(destructor:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  SharedDtor();
}

void ServerPlantFlowerGetFriendFlowerDataReq::SharedDtor() {
}

void ServerPlantFlowerGetFriendFlowerDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerPlantFlowerGetFriendFlowerDataReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPlantFlowerGetFriendFlowerDataReq& ServerPlantFlowerGetFriendFlowerDataReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerPlantFlowerGetFriendFlowerDataReq* ServerPlantFlowerGetFriendFlowerDataReq::New(::google::protobuf::Arena* arena) const {
  ServerPlantFlowerGetFriendFlowerDataReq* n = new ServerPlantFlowerGetFriendFlowerDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerPlantFlowerGetFriendFlowerDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  give_flower_num_map_.Clear();
  ::memset(&schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_uid_) -
      reinterpret_cast<char*>(&schedule_id_)) + sizeof(friend_uid_));
  _internal_metadata_.Clear();
}

bool ServerPlantFlowerGetFriendFlowerDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 schedule_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> give_flower_num_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry::Parser< ::google::protobuf::internal::MapField<
              ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&give_flower_num_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  return false;
#undef DO_
}

void ServerPlantFlowerGetFriendFlowerDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->schedule_id(), output);
  }

  // uint32 friend_uid = 2;
  if (this->friend_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->friend_uid(), output);
  }

  // map<uint32, uint32> give_flower_num_map = 3;
  if (!this->give_flower_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->give_flower_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->give_flower_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_flower_num_map().begin();
          it != this->give_flower_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(give_flower_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_flower_num_map().begin();
          it != this->give_flower_num_map().end(); ++it) {
        entry.reset(give_flower_num_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerPlantFlowerGetFriendFlowerDataReq)
}

::google::protobuf::uint8* ServerPlantFlowerGetFriendFlowerDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->schedule_id(), target);
  }

  // uint32 friend_uid = 2;
  if (this->friend_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->friend_uid(), target);
  }

  // map<uint32, uint32> give_flower_num_map = 3;
  if (!this->give_flower_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->give_flower_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->give_flower_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_flower_num_map().begin();
          it != this->give_flower_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(give_flower_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_flower_num_map().begin();
          it != this->give_flower_num_map().end(); ++it) {
        entry.reset(give_flower_num_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  return target;
}

size_t ServerPlantFlowerGetFriendFlowerDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> give_flower_num_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->give_flower_num_map_size());
  {
    ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataReq_GiveFlowerNumMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->give_flower_num_map().begin();
        it != this->give_flower_num_map().end(); ++it) {
      entry.reset(give_flower_num_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  // uint32 friend_uid = 2;
  if (this->friend_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerPlantFlowerGetFriendFlowerDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPlantFlowerGetFriendFlowerDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPlantFlowerGetFriendFlowerDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerPlantFlowerGetFriendFlowerDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerPlantFlowerGetFriendFlowerDataReq)
    MergeFrom(*source);
  }
}

void ServerPlantFlowerGetFriendFlowerDataReq::MergeFrom(const ServerPlantFlowerGetFriendFlowerDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  give_flower_num_map_.MergeFrom(from.give_flower_num_map_);
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
  if (from.friend_uid() != 0) {
    set_friend_uid(from.friend_uid());
  }
}

void ServerPlantFlowerGetFriendFlowerDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPlantFlowerGetFriendFlowerDataReq::CopyFrom(const ServerPlantFlowerGetFriendFlowerDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerPlantFlowerGetFriendFlowerDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPlantFlowerGetFriendFlowerDataReq::IsInitialized() const {
  return true;
}

void ServerPlantFlowerGetFriendFlowerDataReq::Swap(ServerPlantFlowerGetFriendFlowerDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPlantFlowerGetFriendFlowerDataReq::InternalSwap(ServerPlantFlowerGetFriendFlowerDataReq* other) {
  using std::swap;
  give_flower_num_map_.Swap(&other->give_flower_num_map_);
  swap(schedule_id_, other->schedule_id_);
  swap(friend_uid_, other->friend_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerPlantFlowerGetFriendFlowerDataReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerPlantFlowerGetFriendFlowerDataReq

// uint32 schedule_id = 1;
void ServerPlantFlowerGetFriendFlowerDataReq::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerPlantFlowerGetFriendFlowerDataReq::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerPlantFlowerGetFriendFlowerDataReq.schedule_id)
  return schedule_id_;
}
void ServerPlantFlowerGetFriendFlowerDataReq::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPlantFlowerGetFriendFlowerDataReq.schedule_id)
}

// uint32 friend_uid = 2;
void ServerPlantFlowerGetFriendFlowerDataReq::clear_friend_uid() {
  friend_uid_ = 0u;
}
::google::protobuf::uint32 ServerPlantFlowerGetFriendFlowerDataReq::friend_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerPlantFlowerGetFriendFlowerDataReq.friend_uid)
  return friend_uid_;
}
void ServerPlantFlowerGetFriendFlowerDataReq::set_friend_uid(::google::protobuf::uint32 value) {
  
  friend_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPlantFlowerGetFriendFlowerDataReq.friend_uid)
}

// map<uint32, uint32> give_flower_num_map = 3;
int ServerPlantFlowerGetFriendFlowerDataReq::give_flower_num_map_size() const {
  return give_flower_num_map_.size();
}
void ServerPlantFlowerGetFriendFlowerDataReq::clear_give_flower_num_map() {
  give_flower_num_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
ServerPlantFlowerGetFriendFlowerDataReq::give_flower_num_map() const {
  // @@protoc_insertion_point(field_map:proto.ServerPlantFlowerGetFriendFlowerDataReq.give_flower_num_map)
  return give_flower_num_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
ServerPlantFlowerGetFriendFlowerDataReq::mutable_give_flower_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ServerPlantFlowerGetFriendFlowerDataReq.give_flower_num_map)
  return give_flower_num_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry::ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry() {}
ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry::ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[50];
}
void ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry::MergeFrom(const ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry::ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry() {}
ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry::ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[51];
}
void ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry::MergeFrom(const ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPlantFlowerGetFriendFlowerDataRsp::kRetcodeFieldNumber;
const int ServerPlantFlowerGetFriendFlowerDataRsp::kScheduleIdFieldNumber;
const int ServerPlantFlowerGetFriendFlowerDataRsp::kFriendUidFieldNumber;
const int ServerPlantFlowerGetFriendFlowerDataRsp::kGiveFlowerNumMapFieldNumber;
const int ServerPlantFlowerGetFriendFlowerDataRsp::kHaveFlowerNumMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
}
ServerPlantFlowerGetFriendFlowerDataRsp::ServerPlantFlowerGetFriendFlowerDataRsp(const ServerPlantFlowerGetFriendFlowerDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  give_flower_num_map_.MergeFrom(from.give_flower_num_map_);
  have_flower_num_map_.MergeFrom(from.have_flower_num_map_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(friend_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
}

void ServerPlantFlowerGetFriendFlowerDataRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(friend_uid_));
  _cached_size_ = 0;
}

ServerPlantFlowerGetFriendFlowerDataRsp::~ServerPlantFlowerGetFriendFlowerDataRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  SharedDtor();
}

void ServerPlantFlowerGetFriendFlowerDataRsp::SharedDtor() {
}

void ServerPlantFlowerGetFriendFlowerDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerPlantFlowerGetFriendFlowerDataRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPlantFlowerGetFriendFlowerDataRsp& ServerPlantFlowerGetFriendFlowerDataRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerPlantFlowerGetFriendFlowerDataRsp* ServerPlantFlowerGetFriendFlowerDataRsp::New(::google::protobuf::Arena* arena) const {
  ServerPlantFlowerGetFriendFlowerDataRsp* n = new ServerPlantFlowerGetFriendFlowerDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerPlantFlowerGetFriendFlowerDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  give_flower_num_map_.Clear();
  have_flower_num_map_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(friend_uid_));
  _internal_metadata_.Clear();
}

bool ServerPlantFlowerGetFriendFlowerDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> give_flower_num_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry::Parser< ::google::protobuf::internal::MapField<
              ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&give_flower_num_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> have_flower_num_map = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry::Parser< ::google::protobuf::internal::MapField<
              ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&have_flower_num_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  return false;
#undef DO_
}

void ServerPlantFlowerGetFriendFlowerDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->schedule_id(), output);
  }

  // uint32 friend_uid = 3;
  if (this->friend_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->friend_uid(), output);
  }

  // map<uint32, uint32> give_flower_num_map = 4;
  if (!this->give_flower_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->give_flower_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->give_flower_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_flower_num_map().begin();
          it != this->give_flower_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(give_flower_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_flower_num_map().begin();
          it != this->give_flower_num_map().end(); ++it) {
        entry.reset(give_flower_num_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  // map<uint32, uint32> have_flower_num_map = 5;
  if (!this->have_flower_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->have_flower_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->have_flower_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->have_flower_num_map().begin();
          it != this->have_flower_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(have_flower_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->have_flower_num_map().begin();
          it != this->have_flower_num_map().end(); ++it) {
        entry.reset(have_flower_num_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
}

::google::protobuf::uint8* ServerPlantFlowerGetFriendFlowerDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->schedule_id(), target);
  }

  // uint32 friend_uid = 3;
  if (this->friend_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->friend_uid(), target);
  }

  // map<uint32, uint32> give_flower_num_map = 4;
  if (!this->give_flower_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->give_flower_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->give_flower_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_flower_num_map().begin();
          it != this->give_flower_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(give_flower_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_flower_num_map().begin();
          it != this->give_flower_num_map().end(); ++it) {
        entry.reset(give_flower_num_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, uint32> have_flower_num_map = 5;
  if (!this->have_flower_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->have_flower_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->have_flower_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->have_flower_num_map().begin();
          it != this->have_flower_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(have_flower_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->have_flower_num_map().begin();
          it != this->have_flower_num_map().end(); ++it) {
        entry.reset(have_flower_num_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  return target;
}

size_t ServerPlantFlowerGetFriendFlowerDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> give_flower_num_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->give_flower_num_map_size());
  {
    ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataRsp_GiveFlowerNumMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->give_flower_num_map().begin();
        it != this->give_flower_num_map().end(); ++it) {
      entry.reset(give_flower_num_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint32> have_flower_num_map = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->have_flower_num_map_size());
  {
    ::google::protobuf::scoped_ptr<ServerPlantFlowerGetFriendFlowerDataRsp_HaveFlowerNumMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->have_flower_num_map().begin();
        it != this->have_flower_num_map().end(); ++it) {
      entry.reset(have_flower_num_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  // uint32 friend_uid = 3;
  if (this->friend_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerPlantFlowerGetFriendFlowerDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPlantFlowerGetFriendFlowerDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPlantFlowerGetFriendFlowerDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
    MergeFrom(*source);
  }
}

void ServerPlantFlowerGetFriendFlowerDataRsp::MergeFrom(const ServerPlantFlowerGetFriendFlowerDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  give_flower_num_map_.MergeFrom(from.give_flower_num_map_);
  have_flower_num_map_.MergeFrom(from.have_flower_num_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
  if (from.friend_uid() != 0) {
    set_friend_uid(from.friend_uid());
  }
}

void ServerPlantFlowerGetFriendFlowerDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPlantFlowerGetFriendFlowerDataRsp::CopyFrom(const ServerPlantFlowerGetFriendFlowerDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerPlantFlowerGetFriendFlowerDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPlantFlowerGetFriendFlowerDataRsp::IsInitialized() const {
  return true;
}

void ServerPlantFlowerGetFriendFlowerDataRsp::Swap(ServerPlantFlowerGetFriendFlowerDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPlantFlowerGetFriendFlowerDataRsp::InternalSwap(ServerPlantFlowerGetFriendFlowerDataRsp* other) {
  using std::swap;
  give_flower_num_map_.Swap(&other->give_flower_num_map_);
  have_flower_num_map_.Swap(&other->have_flower_num_map_);
  swap(retcode_, other->retcode_);
  swap(schedule_id_, other->schedule_id_);
  swap(friend_uid_, other->friend_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerPlantFlowerGetFriendFlowerDataRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerPlantFlowerGetFriendFlowerDataRsp

// int32 retcode = 1;
void ServerPlantFlowerGetFriendFlowerDataRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerPlantFlowerGetFriendFlowerDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerPlantFlowerGetFriendFlowerDataRsp.retcode)
  return retcode_;
}
void ServerPlantFlowerGetFriendFlowerDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPlantFlowerGetFriendFlowerDataRsp.retcode)
}

// uint32 schedule_id = 2;
void ServerPlantFlowerGetFriendFlowerDataRsp::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerPlantFlowerGetFriendFlowerDataRsp::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerPlantFlowerGetFriendFlowerDataRsp.schedule_id)
  return schedule_id_;
}
void ServerPlantFlowerGetFriendFlowerDataRsp::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPlantFlowerGetFriendFlowerDataRsp.schedule_id)
}

// uint32 friend_uid = 3;
void ServerPlantFlowerGetFriendFlowerDataRsp::clear_friend_uid() {
  friend_uid_ = 0u;
}
::google::protobuf::uint32 ServerPlantFlowerGetFriendFlowerDataRsp::friend_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerPlantFlowerGetFriendFlowerDataRsp.friend_uid)
  return friend_uid_;
}
void ServerPlantFlowerGetFriendFlowerDataRsp::set_friend_uid(::google::protobuf::uint32 value) {
  
  friend_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPlantFlowerGetFriendFlowerDataRsp.friend_uid)
}

// map<uint32, uint32> give_flower_num_map = 4;
int ServerPlantFlowerGetFriendFlowerDataRsp::give_flower_num_map_size() const {
  return give_flower_num_map_.size();
}
void ServerPlantFlowerGetFriendFlowerDataRsp::clear_give_flower_num_map() {
  give_flower_num_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
ServerPlantFlowerGetFriendFlowerDataRsp::give_flower_num_map() const {
  // @@protoc_insertion_point(field_map:proto.ServerPlantFlowerGetFriendFlowerDataRsp.give_flower_num_map)
  return give_flower_num_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
ServerPlantFlowerGetFriendFlowerDataRsp::mutable_give_flower_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ServerPlantFlowerGetFriendFlowerDataRsp.give_flower_num_map)
  return give_flower_num_map_.MutableMap();
}

// map<uint32, uint32> have_flower_num_map = 5;
int ServerPlantFlowerGetFriendFlowerDataRsp::have_flower_num_map_size() const {
  return have_flower_num_map_.size();
}
void ServerPlantFlowerGetFriendFlowerDataRsp::clear_have_flower_num_map() {
  have_flower_num_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
ServerPlantFlowerGetFriendFlowerDataRsp::have_flower_num_map() const {
  // @@protoc_insertion_point(field_map:proto.ServerPlantFlowerGetFriendFlowerDataRsp.have_flower_num_map)
  return have_flower_num_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
ServerPlantFlowerGetFriendFlowerDataRsp::mutable_have_flower_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ServerPlantFlowerGetFriendFlowerDataRsp.have_flower_num_map)
  return have_flower_num_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPlantFlowerGetFriendFlowerWishListReq::kScheduleIdFieldNumber;
const int ServerPlantFlowerGetFriendFlowerWishListReq::kFriendUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPlantFlowerGetFriendFlowerWishListReq::ServerPlantFlowerGetFriendFlowerWishListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
}
ServerPlantFlowerGetFriendFlowerWishListReq::ServerPlantFlowerGetFriendFlowerWishListReq(const ServerPlantFlowerGetFriendFlowerWishListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_uid_list_(from.friend_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  schedule_id_ = from.schedule_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
}

void ServerPlantFlowerGetFriendFlowerWishListReq::SharedCtor() {
  schedule_id_ = 0u;
  _cached_size_ = 0;
}

ServerPlantFlowerGetFriendFlowerWishListReq::~ServerPlantFlowerGetFriendFlowerWishListReq() {
  // @@protoc_insertion_point(destructor:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  SharedDtor();
}

void ServerPlantFlowerGetFriendFlowerWishListReq::SharedDtor() {
}

void ServerPlantFlowerGetFriendFlowerWishListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerPlantFlowerGetFriendFlowerWishListReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPlantFlowerGetFriendFlowerWishListReq& ServerPlantFlowerGetFriendFlowerWishListReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerPlantFlowerGetFriendFlowerWishListReq* ServerPlantFlowerGetFriendFlowerWishListReq::New(::google::protobuf::Arena* arena) const {
  ServerPlantFlowerGetFriendFlowerWishListReq* n = new ServerPlantFlowerGetFriendFlowerWishListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerPlantFlowerGetFriendFlowerWishListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_uid_list_.Clear();
  schedule_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerPlantFlowerGetFriendFlowerWishListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 schedule_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 friend_uid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_friend_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_friend_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  return false;
#undef DO_
}

void ServerPlantFlowerGetFriendFlowerWishListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->schedule_id(), output);
  }

  // repeated uint32 friend_uid_list = 2;
  if (this->friend_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _friend_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->friend_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->friend_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
}

::google::protobuf::uint8* ServerPlantFlowerGetFriendFlowerWishListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->schedule_id(), target);
  }

  // repeated uint32 friend_uid_list = 2;
  if (this->friend_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _friend_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->friend_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  return target;
}

size_t ServerPlantFlowerGetFriendFlowerWishListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 friend_uid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->friend_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _friend_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerPlantFlowerGetFriendFlowerWishListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPlantFlowerGetFriendFlowerWishListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPlantFlowerGetFriendFlowerWishListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
    MergeFrom(*source);
  }
}

void ServerPlantFlowerGetFriendFlowerWishListReq::MergeFrom(const ServerPlantFlowerGetFriendFlowerWishListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_uid_list_.MergeFrom(from.friend_uid_list_);
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
}

void ServerPlantFlowerGetFriendFlowerWishListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPlantFlowerGetFriendFlowerWishListReq::CopyFrom(const ServerPlantFlowerGetFriendFlowerWishListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerPlantFlowerGetFriendFlowerWishListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPlantFlowerGetFriendFlowerWishListReq::IsInitialized() const {
  return true;
}

void ServerPlantFlowerGetFriendFlowerWishListReq::Swap(ServerPlantFlowerGetFriendFlowerWishListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPlantFlowerGetFriendFlowerWishListReq::InternalSwap(ServerPlantFlowerGetFriendFlowerWishListReq* other) {
  using std::swap;
  friend_uid_list_.InternalSwap(&other->friend_uid_list_);
  swap(schedule_id_, other->schedule_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerPlantFlowerGetFriendFlowerWishListReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerPlantFlowerGetFriendFlowerWishListReq

// uint32 schedule_id = 1;
void ServerPlantFlowerGetFriendFlowerWishListReq::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerPlantFlowerGetFriendFlowerWishListReq::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerPlantFlowerGetFriendFlowerWishListReq.schedule_id)
  return schedule_id_;
}
void ServerPlantFlowerGetFriendFlowerWishListReq::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPlantFlowerGetFriendFlowerWishListReq.schedule_id)
}

// repeated uint32 friend_uid_list = 2;
int ServerPlantFlowerGetFriendFlowerWishListReq::friend_uid_list_size() const {
  return friend_uid_list_.size();
}
void ServerPlantFlowerGetFriendFlowerWishListReq::clear_friend_uid_list() {
  friend_uid_list_.Clear();
}
::google::protobuf::uint32 ServerPlantFlowerGetFriendFlowerWishListReq::friend_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerPlantFlowerGetFriendFlowerWishListReq.friend_uid_list)
  return friend_uid_list_.Get(index);
}
void ServerPlantFlowerGetFriendFlowerWishListReq::set_friend_uid_list(int index, ::google::protobuf::uint32 value) {
  friend_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerPlantFlowerGetFriendFlowerWishListReq.friend_uid_list)
}
void ServerPlantFlowerGetFriendFlowerWishListReq::add_friend_uid_list(::google::protobuf::uint32 value) {
  friend_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerPlantFlowerGetFriendFlowerWishListReq.friend_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerPlantFlowerGetFriendFlowerWishListReq::friend_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerPlantFlowerGetFriendFlowerWishListReq.friend_uid_list)
  return friend_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerPlantFlowerGetFriendFlowerWishListReq::mutable_friend_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerPlantFlowerGetFriendFlowerWishListReq.friend_uid_list)
  return &friend_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPlantFlowerGetFriendFlowerWishListRsp::kRetcodeFieldNumber;
const int ServerPlantFlowerGetFriendFlowerWishListRsp::kScheduleIdFieldNumber;
const int ServerPlantFlowerGetFriendFlowerWishListRsp::kFriendFlowerWishListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPlantFlowerGetFriendFlowerWishListRsp::ServerPlantFlowerGetFriendFlowerWishListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
}
ServerPlantFlowerGetFriendFlowerWishListRsp::ServerPlantFlowerGetFriendFlowerWishListRsp(const ServerPlantFlowerGetFriendFlowerWishListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_flower_wish_list_(from.friend_flower_wish_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&schedule_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(schedule_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
}

void ServerPlantFlowerGetFriendFlowerWishListRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(schedule_id_));
  _cached_size_ = 0;
}

ServerPlantFlowerGetFriendFlowerWishListRsp::~ServerPlantFlowerGetFriendFlowerWishListRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  SharedDtor();
}

void ServerPlantFlowerGetFriendFlowerWishListRsp::SharedDtor() {
}

void ServerPlantFlowerGetFriendFlowerWishListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerPlantFlowerGetFriendFlowerWishListRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPlantFlowerGetFriendFlowerWishListRsp& ServerPlantFlowerGetFriendFlowerWishListRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerPlantFlowerGetFriendFlowerWishListRsp* ServerPlantFlowerGetFriendFlowerWishListRsp::New(::google::protobuf::Arena* arena) const {
  ServerPlantFlowerGetFriendFlowerWishListRsp* n = new ServerPlantFlowerGetFriendFlowerWishListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerPlantFlowerGetFriendFlowerWishListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_flower_wish_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(schedule_id_));
  _internal_metadata_.Clear();
}

bool ServerPlantFlowerGetFriendFlowerWishListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.PlantFlowerFriendFlowerWishData friend_flower_wish_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_flower_wish_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  return false;
#undef DO_
}

void ServerPlantFlowerGetFriendFlowerWishListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->schedule_id(), output);
  }

  // repeated .proto.PlantFlowerFriendFlowerWishData friend_flower_wish_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_flower_wish_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->friend_flower_wish_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
}

::google::protobuf::uint8* ServerPlantFlowerGetFriendFlowerWishListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->schedule_id(), target);
  }

  // repeated .proto.PlantFlowerFriendFlowerWishData friend_flower_wish_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_flower_wish_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->friend_flower_wish_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  return target;
}

size_t ServerPlantFlowerGetFriendFlowerWishListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.PlantFlowerFriendFlowerWishData friend_flower_wish_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_flower_wish_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_flower_wish_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerPlantFlowerGetFriendFlowerWishListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPlantFlowerGetFriendFlowerWishListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPlantFlowerGetFriendFlowerWishListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
    MergeFrom(*source);
  }
}

void ServerPlantFlowerGetFriendFlowerWishListRsp::MergeFrom(const ServerPlantFlowerGetFriendFlowerWishListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_flower_wish_list_.MergeFrom(from.friend_flower_wish_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
}

void ServerPlantFlowerGetFriendFlowerWishListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPlantFlowerGetFriendFlowerWishListRsp::CopyFrom(const ServerPlantFlowerGetFriendFlowerWishListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerPlantFlowerGetFriendFlowerWishListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPlantFlowerGetFriendFlowerWishListRsp::IsInitialized() const {
  return true;
}

void ServerPlantFlowerGetFriendFlowerWishListRsp::Swap(ServerPlantFlowerGetFriendFlowerWishListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPlantFlowerGetFriendFlowerWishListRsp::InternalSwap(ServerPlantFlowerGetFriendFlowerWishListRsp* other) {
  using std::swap;
  friend_flower_wish_list_.InternalSwap(&other->friend_flower_wish_list_);
  swap(retcode_, other->retcode_);
  swap(schedule_id_, other->schedule_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerPlantFlowerGetFriendFlowerWishListRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerPlantFlowerGetFriendFlowerWishListRsp

// int32 retcode = 1;
void ServerPlantFlowerGetFriendFlowerWishListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerPlantFlowerGetFriendFlowerWishListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerPlantFlowerGetFriendFlowerWishListRsp.retcode)
  return retcode_;
}
void ServerPlantFlowerGetFriendFlowerWishListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPlantFlowerGetFriendFlowerWishListRsp.retcode)
}

// uint32 schedule_id = 2;
void ServerPlantFlowerGetFriendFlowerWishListRsp::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerPlantFlowerGetFriendFlowerWishListRsp::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerPlantFlowerGetFriendFlowerWishListRsp.schedule_id)
  return schedule_id_;
}
void ServerPlantFlowerGetFriendFlowerWishListRsp::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPlantFlowerGetFriendFlowerWishListRsp.schedule_id)
}

// repeated .proto.PlantFlowerFriendFlowerWishData friend_flower_wish_list = 3;
int ServerPlantFlowerGetFriendFlowerWishListRsp::friend_flower_wish_list_size() const {
  return friend_flower_wish_list_.size();
}
void ServerPlantFlowerGetFriendFlowerWishListRsp::clear_friend_flower_wish_list() {
  friend_flower_wish_list_.Clear();
}
const ::proto::PlantFlowerFriendFlowerWishData& ServerPlantFlowerGetFriendFlowerWishListRsp::friend_flower_wish_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerPlantFlowerGetFriendFlowerWishListRsp.friend_flower_wish_list)
  return friend_flower_wish_list_.Get(index);
}
::proto::PlantFlowerFriendFlowerWishData* ServerPlantFlowerGetFriendFlowerWishListRsp::mutable_friend_flower_wish_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerPlantFlowerGetFriendFlowerWishListRsp.friend_flower_wish_list)
  return friend_flower_wish_list_.Mutable(index);
}
::proto::PlantFlowerFriendFlowerWishData* ServerPlantFlowerGetFriendFlowerWishListRsp::add_friend_flower_wish_list() {
  // @@protoc_insertion_point(field_add:proto.ServerPlantFlowerGetFriendFlowerWishListRsp.friend_flower_wish_list)
  return friend_flower_wish_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::PlantFlowerFriendFlowerWishData >*
ServerPlantFlowerGetFriendFlowerWishListRsp::mutable_friend_flower_wish_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerPlantFlowerGetFriendFlowerWishListRsp.friend_flower_wish_list)
  return &friend_flower_wish_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::PlantFlowerFriendFlowerWishData >&
ServerPlantFlowerGetFriendFlowerWishListRsp::friend_flower_wish_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerPlantFlowerGetFriendFlowerWishListRsp.friend_flower_wish_list)
  return friend_flower_wish_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerWinterCampGetFriendItemDataReq::kScheduleIdFieldNumber;
const int ServerWinterCampGetFriendItemDataReq::kFriendUidFieldNumber;
const int ServerWinterCampGetFriendItemDataReq::kGiveItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerWinterCampGetFriendItemDataReq::ServerWinterCampGetFriendItemDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerWinterCampGetFriendItemDataReq)
}
ServerWinterCampGetFriendItemDataReq::ServerWinterCampGetFriendItemDataReq(const ServerWinterCampGetFriendItemDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      give_item_list_(from.give_item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&schedule_id_, &from.schedule_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_uid_) -
    reinterpret_cast<char*>(&schedule_id_)) + sizeof(friend_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerWinterCampGetFriendItemDataReq)
}

void ServerWinterCampGetFriendItemDataReq::SharedCtor() {
  ::memset(&schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_uid_) -
      reinterpret_cast<char*>(&schedule_id_)) + sizeof(friend_uid_));
  _cached_size_ = 0;
}

ServerWinterCampGetFriendItemDataReq::~ServerWinterCampGetFriendItemDataReq() {
  // @@protoc_insertion_point(destructor:proto.ServerWinterCampGetFriendItemDataReq)
  SharedDtor();
}

void ServerWinterCampGetFriendItemDataReq::SharedDtor() {
}

void ServerWinterCampGetFriendItemDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerWinterCampGetFriendItemDataReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerWinterCampGetFriendItemDataReq& ServerWinterCampGetFriendItemDataReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerWinterCampGetFriendItemDataReq* ServerWinterCampGetFriendItemDataReq::New(::google::protobuf::Arena* arena) const {
  ServerWinterCampGetFriendItemDataReq* n = new ServerWinterCampGetFriendItemDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerWinterCampGetFriendItemDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerWinterCampGetFriendItemDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  give_item_list_.Clear();
  ::memset(&schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_uid_) -
      reinterpret_cast<char*>(&schedule_id_)) + sizeof(friend_uid_));
  _internal_metadata_.Clear();
}

bool ServerWinterCampGetFriendItemDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerWinterCampGetFriendItemDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 schedule_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam give_item_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_give_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerWinterCampGetFriendItemDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerWinterCampGetFriendItemDataReq)
  return false;
#undef DO_
}

void ServerWinterCampGetFriendItemDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerWinterCampGetFriendItemDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->schedule_id(), output);
  }

  // uint32 friend_uid = 2;
  if (this->friend_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->friend_uid(), output);
  }

  // repeated .proto.ItemParam give_item_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->give_item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->give_item_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerWinterCampGetFriendItemDataReq)
}

::google::protobuf::uint8* ServerWinterCampGetFriendItemDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerWinterCampGetFriendItemDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->schedule_id(), target);
  }

  // uint32 friend_uid = 2;
  if (this->friend_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->friend_uid(), target);
  }

  // repeated .proto.ItemParam give_item_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->give_item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->give_item_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerWinterCampGetFriendItemDataReq)
  return target;
}

size_t ServerWinterCampGetFriendItemDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerWinterCampGetFriendItemDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam give_item_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->give_item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->give_item_list(static_cast<int>(i)));
    }
  }

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  // uint32 friend_uid = 2;
  if (this->friend_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerWinterCampGetFriendItemDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerWinterCampGetFriendItemDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerWinterCampGetFriendItemDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerWinterCampGetFriendItemDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerWinterCampGetFriendItemDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerWinterCampGetFriendItemDataReq)
    MergeFrom(*source);
  }
}

void ServerWinterCampGetFriendItemDataReq::MergeFrom(const ServerWinterCampGetFriendItemDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerWinterCampGetFriendItemDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  give_item_list_.MergeFrom(from.give_item_list_);
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
  if (from.friend_uid() != 0) {
    set_friend_uid(from.friend_uid());
  }
}

void ServerWinterCampGetFriendItemDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerWinterCampGetFriendItemDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerWinterCampGetFriendItemDataReq::CopyFrom(const ServerWinterCampGetFriendItemDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerWinterCampGetFriendItemDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerWinterCampGetFriendItemDataReq::IsInitialized() const {
  return true;
}

void ServerWinterCampGetFriendItemDataReq::Swap(ServerWinterCampGetFriendItemDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerWinterCampGetFriendItemDataReq::InternalSwap(ServerWinterCampGetFriendItemDataReq* other) {
  using std::swap;
  give_item_list_.InternalSwap(&other->give_item_list_);
  swap(schedule_id_, other->schedule_id_);
  swap(friend_uid_, other->friend_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerWinterCampGetFriendItemDataReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerWinterCampGetFriendItemDataReq

// uint32 schedule_id = 1;
void ServerWinterCampGetFriendItemDataReq::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerWinterCampGetFriendItemDataReq::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendItemDataReq.schedule_id)
  return schedule_id_;
}
void ServerWinterCampGetFriendItemDataReq::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerWinterCampGetFriendItemDataReq.schedule_id)
}

// uint32 friend_uid = 2;
void ServerWinterCampGetFriendItemDataReq::clear_friend_uid() {
  friend_uid_ = 0u;
}
::google::protobuf::uint32 ServerWinterCampGetFriendItemDataReq::friend_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendItemDataReq.friend_uid)
  return friend_uid_;
}
void ServerWinterCampGetFriendItemDataReq::set_friend_uid(::google::protobuf::uint32 value) {
  
  friend_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerWinterCampGetFriendItemDataReq.friend_uid)
}

// repeated .proto.ItemParam give_item_list = 3;
int ServerWinterCampGetFriendItemDataReq::give_item_list_size() const {
  return give_item_list_.size();
}
void ServerWinterCampGetFriendItemDataReq::clear_give_item_list() {
  give_item_list_.Clear();
}
const ::proto::ItemParam& ServerWinterCampGetFriendItemDataReq::give_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendItemDataReq.give_item_list)
  return give_item_list_.Get(index);
}
::proto::ItemParam* ServerWinterCampGetFriendItemDataReq::mutable_give_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerWinterCampGetFriendItemDataReq.give_item_list)
  return give_item_list_.Mutable(index);
}
::proto::ItemParam* ServerWinterCampGetFriendItemDataReq::add_give_item_list() {
  // @@protoc_insertion_point(field_add:proto.ServerWinterCampGetFriendItemDataReq.give_item_list)
  return give_item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
ServerWinterCampGetFriendItemDataReq::mutable_give_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerWinterCampGetFriendItemDataReq.give_item_list)
  return &give_item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
ServerWinterCampGetFriendItemDataReq::give_item_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerWinterCampGetFriendItemDataReq.give_item_list)
  return give_item_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerWinterCampGetFriendItemDataRsp::kRetcodeFieldNumber;
const int ServerWinterCampGetFriendItemDataRsp::kScheduleIdFieldNumber;
const int ServerWinterCampGetFriendItemDataRsp::kFriendUidFieldNumber;
const int ServerWinterCampGetFriendItemDataRsp::kGiveItemListFieldNumber;
const int ServerWinterCampGetFriendItemDataRsp::kFriendItemListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerWinterCampGetFriendItemDataRsp::ServerWinterCampGetFriendItemDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerWinterCampGetFriendItemDataRsp)
}
ServerWinterCampGetFriendItemDataRsp::ServerWinterCampGetFriendItemDataRsp(const ServerWinterCampGetFriendItemDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      give_item_list_(from.give_item_list_),
      friend_item_list_(from.friend_item_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(friend_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerWinterCampGetFriendItemDataRsp)
}

void ServerWinterCampGetFriendItemDataRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(friend_uid_));
  _cached_size_ = 0;
}

ServerWinterCampGetFriendItemDataRsp::~ServerWinterCampGetFriendItemDataRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerWinterCampGetFriendItemDataRsp)
  SharedDtor();
}

void ServerWinterCampGetFriendItemDataRsp::SharedDtor() {
}

void ServerWinterCampGetFriendItemDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerWinterCampGetFriendItemDataRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerWinterCampGetFriendItemDataRsp& ServerWinterCampGetFriendItemDataRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerWinterCampGetFriendItemDataRsp* ServerWinterCampGetFriendItemDataRsp::New(::google::protobuf::Arena* arena) const {
  ServerWinterCampGetFriendItemDataRsp* n = new ServerWinterCampGetFriendItemDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerWinterCampGetFriendItemDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerWinterCampGetFriendItemDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  give_item_list_.Clear();
  friend_item_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(friend_uid_));
  _internal_metadata_.Clear();
}

bool ServerWinterCampGetFriendItemDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerWinterCampGetFriendItemDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam give_item_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_give_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ItemParam friend_item_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_item_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerWinterCampGetFriendItemDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerWinterCampGetFriendItemDataRsp)
  return false;
#undef DO_
}

void ServerWinterCampGetFriendItemDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerWinterCampGetFriendItemDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->schedule_id(), output);
  }

  // uint32 friend_uid = 3;
  if (this->friend_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->friend_uid(), output);
  }

  // repeated .proto.ItemParam give_item_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->give_item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->give_item_list(static_cast<int>(i)), output);
  }

  // repeated .proto.ItemParam friend_item_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_item_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->friend_item_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerWinterCampGetFriendItemDataRsp)
}

::google::protobuf::uint8* ServerWinterCampGetFriendItemDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerWinterCampGetFriendItemDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->schedule_id(), target);
  }

  // uint32 friend_uid = 3;
  if (this->friend_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->friend_uid(), target);
  }

  // repeated .proto.ItemParam give_item_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->give_item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->give_item_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .proto.ItemParam friend_item_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_item_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->friend_item_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerWinterCampGetFriendItemDataRsp)
  return target;
}

size_t ServerWinterCampGetFriendItemDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerWinterCampGetFriendItemDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ItemParam give_item_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->give_item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->give_item_list(static_cast<int>(i)));
    }
  }

  // repeated .proto.ItemParam friend_item_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_item_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_item_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  // uint32 friend_uid = 3;
  if (this->friend_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerWinterCampGetFriendItemDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerWinterCampGetFriendItemDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerWinterCampGetFriendItemDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerWinterCampGetFriendItemDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerWinterCampGetFriendItemDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerWinterCampGetFriendItemDataRsp)
    MergeFrom(*source);
  }
}

void ServerWinterCampGetFriendItemDataRsp::MergeFrom(const ServerWinterCampGetFriendItemDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerWinterCampGetFriendItemDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  give_item_list_.MergeFrom(from.give_item_list_);
  friend_item_list_.MergeFrom(from.friend_item_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
  if (from.friend_uid() != 0) {
    set_friend_uid(from.friend_uid());
  }
}

void ServerWinterCampGetFriendItemDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerWinterCampGetFriendItemDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerWinterCampGetFriendItemDataRsp::CopyFrom(const ServerWinterCampGetFriendItemDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerWinterCampGetFriendItemDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerWinterCampGetFriendItemDataRsp::IsInitialized() const {
  return true;
}

void ServerWinterCampGetFriendItemDataRsp::Swap(ServerWinterCampGetFriendItemDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerWinterCampGetFriendItemDataRsp::InternalSwap(ServerWinterCampGetFriendItemDataRsp* other) {
  using std::swap;
  give_item_list_.InternalSwap(&other->give_item_list_);
  friend_item_list_.InternalSwap(&other->friend_item_list_);
  swap(retcode_, other->retcode_);
  swap(schedule_id_, other->schedule_id_);
  swap(friend_uid_, other->friend_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerWinterCampGetFriendItemDataRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerWinterCampGetFriendItemDataRsp

// int32 retcode = 1;
void ServerWinterCampGetFriendItemDataRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerWinterCampGetFriendItemDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendItemDataRsp.retcode)
  return retcode_;
}
void ServerWinterCampGetFriendItemDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerWinterCampGetFriendItemDataRsp.retcode)
}

// uint32 schedule_id = 2;
void ServerWinterCampGetFriendItemDataRsp::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerWinterCampGetFriendItemDataRsp::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendItemDataRsp.schedule_id)
  return schedule_id_;
}
void ServerWinterCampGetFriendItemDataRsp::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerWinterCampGetFriendItemDataRsp.schedule_id)
}

// uint32 friend_uid = 3;
void ServerWinterCampGetFriendItemDataRsp::clear_friend_uid() {
  friend_uid_ = 0u;
}
::google::protobuf::uint32 ServerWinterCampGetFriendItemDataRsp::friend_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendItemDataRsp.friend_uid)
  return friend_uid_;
}
void ServerWinterCampGetFriendItemDataRsp::set_friend_uid(::google::protobuf::uint32 value) {
  
  friend_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerWinterCampGetFriendItemDataRsp.friend_uid)
}

// repeated .proto.ItemParam give_item_list = 4;
int ServerWinterCampGetFriendItemDataRsp::give_item_list_size() const {
  return give_item_list_.size();
}
void ServerWinterCampGetFriendItemDataRsp::clear_give_item_list() {
  give_item_list_.Clear();
}
const ::proto::ItemParam& ServerWinterCampGetFriendItemDataRsp::give_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendItemDataRsp.give_item_list)
  return give_item_list_.Get(index);
}
::proto::ItemParam* ServerWinterCampGetFriendItemDataRsp::mutable_give_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerWinterCampGetFriendItemDataRsp.give_item_list)
  return give_item_list_.Mutable(index);
}
::proto::ItemParam* ServerWinterCampGetFriendItemDataRsp::add_give_item_list() {
  // @@protoc_insertion_point(field_add:proto.ServerWinterCampGetFriendItemDataRsp.give_item_list)
  return give_item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
ServerWinterCampGetFriendItemDataRsp::mutable_give_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerWinterCampGetFriendItemDataRsp.give_item_list)
  return &give_item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
ServerWinterCampGetFriendItemDataRsp::give_item_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerWinterCampGetFriendItemDataRsp.give_item_list)
  return give_item_list_;
}

// repeated .proto.ItemParam friend_item_list = 5;
int ServerWinterCampGetFriendItemDataRsp::friend_item_list_size() const {
  return friend_item_list_.size();
}
void ServerWinterCampGetFriendItemDataRsp::clear_friend_item_list() {
  friend_item_list_.Clear();
}
const ::proto::ItemParam& ServerWinterCampGetFriendItemDataRsp::friend_item_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendItemDataRsp.friend_item_list)
  return friend_item_list_.Get(index);
}
::proto::ItemParam* ServerWinterCampGetFriendItemDataRsp::mutable_friend_item_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerWinterCampGetFriendItemDataRsp.friend_item_list)
  return friend_item_list_.Mutable(index);
}
::proto::ItemParam* ServerWinterCampGetFriendItemDataRsp::add_friend_item_list() {
  // @@protoc_insertion_point(field_add:proto.ServerWinterCampGetFriendItemDataRsp.friend_item_list)
  return friend_item_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ItemParam >*
ServerWinterCampGetFriendItemDataRsp::mutable_friend_item_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerWinterCampGetFriendItemDataRsp.friend_item_list)
  return &friend_item_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ItemParam >&
ServerWinterCampGetFriendItemDataRsp::friend_item_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerWinterCampGetFriendItemDataRsp.friend_item_list)
  return friend_item_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerWinterCampGetFriendWishListReq::kScheduleIdFieldNumber;
const int ServerWinterCampGetFriendWishListReq::kFriendUidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerWinterCampGetFriendWishListReq::ServerWinterCampGetFriendWishListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerWinterCampGetFriendWishListReq)
}
ServerWinterCampGetFriendWishListReq::ServerWinterCampGetFriendWishListReq(const ServerWinterCampGetFriendWishListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_uid_list_(from.friend_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  schedule_id_ = from.schedule_id_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerWinterCampGetFriendWishListReq)
}

void ServerWinterCampGetFriendWishListReq::SharedCtor() {
  schedule_id_ = 0u;
  _cached_size_ = 0;
}

ServerWinterCampGetFriendWishListReq::~ServerWinterCampGetFriendWishListReq() {
  // @@protoc_insertion_point(destructor:proto.ServerWinterCampGetFriendWishListReq)
  SharedDtor();
}

void ServerWinterCampGetFriendWishListReq::SharedDtor() {
}

void ServerWinterCampGetFriendWishListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerWinterCampGetFriendWishListReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerWinterCampGetFriendWishListReq& ServerWinterCampGetFriendWishListReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerWinterCampGetFriendWishListReq* ServerWinterCampGetFriendWishListReq::New(::google::protobuf::Arena* arena) const {
  ServerWinterCampGetFriendWishListReq* n = new ServerWinterCampGetFriendWishListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerWinterCampGetFriendWishListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerWinterCampGetFriendWishListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_uid_list_.Clear();
  schedule_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerWinterCampGetFriendWishListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerWinterCampGetFriendWishListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 schedule_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 friend_uid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_friend_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_friend_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerWinterCampGetFriendWishListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerWinterCampGetFriendWishListReq)
  return false;
#undef DO_
}

void ServerWinterCampGetFriendWishListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerWinterCampGetFriendWishListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->schedule_id(), output);
  }

  // repeated uint32 friend_uid_list = 2;
  if (this->friend_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _friend_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->friend_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->friend_uid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerWinterCampGetFriendWishListReq)
}

::google::protobuf::uint8* ServerWinterCampGetFriendWishListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerWinterCampGetFriendWishListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->schedule_id(), target);
  }

  // repeated uint32 friend_uid_list = 2;
  if (this->friend_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _friend_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->friend_uid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerWinterCampGetFriendWishListReq)
  return target;
}

size_t ServerWinterCampGetFriendWishListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerWinterCampGetFriendWishListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 friend_uid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->friend_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _friend_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerWinterCampGetFriendWishListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerWinterCampGetFriendWishListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerWinterCampGetFriendWishListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerWinterCampGetFriendWishListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerWinterCampGetFriendWishListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerWinterCampGetFriendWishListReq)
    MergeFrom(*source);
  }
}

void ServerWinterCampGetFriendWishListReq::MergeFrom(const ServerWinterCampGetFriendWishListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerWinterCampGetFriendWishListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_uid_list_.MergeFrom(from.friend_uid_list_);
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
}

void ServerWinterCampGetFriendWishListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerWinterCampGetFriendWishListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerWinterCampGetFriendWishListReq::CopyFrom(const ServerWinterCampGetFriendWishListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerWinterCampGetFriendWishListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerWinterCampGetFriendWishListReq::IsInitialized() const {
  return true;
}

void ServerWinterCampGetFriendWishListReq::Swap(ServerWinterCampGetFriendWishListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerWinterCampGetFriendWishListReq::InternalSwap(ServerWinterCampGetFriendWishListReq* other) {
  using std::swap;
  friend_uid_list_.InternalSwap(&other->friend_uid_list_);
  swap(schedule_id_, other->schedule_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerWinterCampGetFriendWishListReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerWinterCampGetFriendWishListReq

// uint32 schedule_id = 1;
void ServerWinterCampGetFriendWishListReq::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerWinterCampGetFriendWishListReq::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendWishListReq.schedule_id)
  return schedule_id_;
}
void ServerWinterCampGetFriendWishListReq::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerWinterCampGetFriendWishListReq.schedule_id)
}

// repeated uint32 friend_uid_list = 2;
int ServerWinterCampGetFriendWishListReq::friend_uid_list_size() const {
  return friend_uid_list_.size();
}
void ServerWinterCampGetFriendWishListReq::clear_friend_uid_list() {
  friend_uid_list_.Clear();
}
::google::protobuf::uint32 ServerWinterCampGetFriendWishListReq::friend_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendWishListReq.friend_uid_list)
  return friend_uid_list_.Get(index);
}
void ServerWinterCampGetFriendWishListReq::set_friend_uid_list(int index, ::google::protobuf::uint32 value) {
  friend_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerWinterCampGetFriendWishListReq.friend_uid_list)
}
void ServerWinterCampGetFriendWishListReq::add_friend_uid_list(::google::protobuf::uint32 value) {
  friend_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerWinterCampGetFriendWishListReq.friend_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerWinterCampGetFriendWishListReq::friend_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerWinterCampGetFriendWishListReq.friend_uid_list)
  return friend_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerWinterCampGetFriendWishListReq::mutable_friend_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerWinterCampGetFriendWishListReq.friend_uid_list)
  return &friend_uid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerWinterCampGetFriendWishListRsp::kRetcodeFieldNumber;
const int ServerWinterCampGetFriendWishListRsp::kScheduleIdFieldNumber;
const int ServerWinterCampGetFriendWishListRsp::kWishDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerWinterCampGetFriendWishListRsp::ServerWinterCampGetFriendWishListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerWinterCampGetFriendWishListRsp)
}
ServerWinterCampGetFriendWishListRsp::ServerWinterCampGetFriendWishListRsp(const ServerWinterCampGetFriendWishListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      wish_data_list_(from.wish_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&schedule_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(schedule_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerWinterCampGetFriendWishListRsp)
}

void ServerWinterCampGetFriendWishListRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(schedule_id_));
  _cached_size_ = 0;
}

ServerWinterCampGetFriendWishListRsp::~ServerWinterCampGetFriendWishListRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerWinterCampGetFriendWishListRsp)
  SharedDtor();
}

void ServerWinterCampGetFriendWishListRsp::SharedDtor() {
}

void ServerWinterCampGetFriendWishListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerWinterCampGetFriendWishListRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerWinterCampGetFriendWishListRsp& ServerWinterCampGetFriendWishListRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerWinterCampGetFriendWishListRsp* ServerWinterCampGetFriendWishListRsp::New(::google::protobuf::Arena* arena) const {
  ServerWinterCampGetFriendWishListRsp* n = new ServerWinterCampGetFriendWishListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerWinterCampGetFriendWishListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerWinterCampGetFriendWishListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  wish_data_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(schedule_id_));
  _internal_metadata_.Clear();
}

bool ServerWinterCampGetFriendWishListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerWinterCampGetFriendWishListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.WinterCampFriendWishData wish_data_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wish_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerWinterCampGetFriendWishListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerWinterCampGetFriendWishListRsp)
  return false;
#undef DO_
}

void ServerWinterCampGetFriendWishListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerWinterCampGetFriendWishListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->schedule_id(), output);
  }

  // repeated .proto.WinterCampFriendWishData wish_data_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wish_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->wish_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerWinterCampGetFriendWishListRsp)
}

::google::protobuf::uint8* ServerWinterCampGetFriendWishListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerWinterCampGetFriendWishListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->schedule_id(), target);
  }

  // repeated .proto.WinterCampFriendWishData wish_data_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->wish_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->wish_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerWinterCampGetFriendWishListRsp)
  return target;
}

size_t ServerWinterCampGetFriendWishListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerWinterCampGetFriendWishListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.WinterCampFriendWishData wish_data_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->wish_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->wish_data_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerWinterCampGetFriendWishListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerWinterCampGetFriendWishListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerWinterCampGetFriendWishListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerWinterCampGetFriendWishListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerWinterCampGetFriendWishListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerWinterCampGetFriendWishListRsp)
    MergeFrom(*source);
  }
}

void ServerWinterCampGetFriendWishListRsp::MergeFrom(const ServerWinterCampGetFriendWishListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerWinterCampGetFriendWishListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  wish_data_list_.MergeFrom(from.wish_data_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
}

void ServerWinterCampGetFriendWishListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerWinterCampGetFriendWishListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerWinterCampGetFriendWishListRsp::CopyFrom(const ServerWinterCampGetFriendWishListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerWinterCampGetFriendWishListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerWinterCampGetFriendWishListRsp::IsInitialized() const {
  return true;
}

void ServerWinterCampGetFriendWishListRsp::Swap(ServerWinterCampGetFriendWishListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerWinterCampGetFriendWishListRsp::InternalSwap(ServerWinterCampGetFriendWishListRsp* other) {
  using std::swap;
  wish_data_list_.InternalSwap(&other->wish_data_list_);
  swap(retcode_, other->retcode_);
  swap(schedule_id_, other->schedule_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerWinterCampGetFriendWishListRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerWinterCampGetFriendWishListRsp

// int32 retcode = 1;
void ServerWinterCampGetFriendWishListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerWinterCampGetFriendWishListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendWishListRsp.retcode)
  return retcode_;
}
void ServerWinterCampGetFriendWishListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerWinterCampGetFriendWishListRsp.retcode)
}

// uint32 schedule_id = 2;
void ServerWinterCampGetFriendWishListRsp::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerWinterCampGetFriendWishListRsp::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendWishListRsp.schedule_id)
  return schedule_id_;
}
void ServerWinterCampGetFriendWishListRsp::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerWinterCampGetFriendWishListRsp.schedule_id)
}

// repeated .proto.WinterCampFriendWishData wish_data_list = 3;
int ServerWinterCampGetFriendWishListRsp::wish_data_list_size() const {
  return wish_data_list_.size();
}
void ServerWinterCampGetFriendWishListRsp::clear_wish_data_list() {
  wish_data_list_.Clear();
}
const ::proto::WinterCampFriendWishData& ServerWinterCampGetFriendWishListRsp::wish_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerWinterCampGetFriendWishListRsp.wish_data_list)
  return wish_data_list_.Get(index);
}
::proto::WinterCampFriendWishData* ServerWinterCampGetFriendWishListRsp::mutable_wish_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerWinterCampGetFriendWishListRsp.wish_data_list)
  return wish_data_list_.Mutable(index);
}
::proto::WinterCampFriendWishData* ServerWinterCampGetFriendWishListRsp::add_wish_data_list() {
  // @@protoc_insertion_point(field_add:proto.ServerWinterCampGetFriendWishListRsp.wish_data_list)
  return wish_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::WinterCampFriendWishData >*
ServerWinterCampGetFriendWishListRsp::mutable_wish_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerWinterCampGetFriendWishListRsp.wish_data_list)
  return &wish_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::WinterCampFriendWishData >&
ServerWinterCampGetFriendWishListRsp::wish_data_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerWinterCampGetFriendWishListRsp.wish_data_list)
  return wish_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetCustomDungeonReq::kDungeonGuidFieldNumber;
const int ServerGetCustomDungeonReq::kIsSelfDungeonFieldNumber;
const int ServerGetCustomDungeonReq::kEnterTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetCustomDungeonReq::ServerGetCustomDungeonReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetCustomDungeonReq)
}
ServerGetCustomDungeonReq::ServerGetCustomDungeonReq(const ServerGetCustomDungeonReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dungeon_guid_, &from.dungeon_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&enter_type_) -
    reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(enter_type_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetCustomDungeonReq)
}

void ServerGetCustomDungeonReq::SharedCtor() {
  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enter_type_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(enter_type_));
  _cached_size_ = 0;
}

ServerGetCustomDungeonReq::~ServerGetCustomDungeonReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetCustomDungeonReq)
  SharedDtor();
}

void ServerGetCustomDungeonReq::SharedDtor() {
}

void ServerGetCustomDungeonReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetCustomDungeonReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetCustomDungeonReq& ServerGetCustomDungeonReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetCustomDungeonReq* ServerGetCustomDungeonReq::New(::google::protobuf::Arena* arena) const {
  ServerGetCustomDungeonReq* n = new ServerGetCustomDungeonReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetCustomDungeonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enter_type_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(enter_type_));
  _internal_metadata_.Clear();
}

bool ServerGetCustomDungeonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetCustomDungeonReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dungeon_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dungeon_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_self_dungeon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_self_dungeon_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 enter_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enter_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetCustomDungeonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetCustomDungeonReq)
  return false;
#undef DO_
}

void ServerGetCustomDungeonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dungeon_guid(), output);
  }

  // bool is_self_dungeon = 2;
  if (this->is_self_dungeon() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_self_dungeon(), output);
  }

  // uint32 enter_type = 3;
  if (this->enter_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->enter_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetCustomDungeonReq)
}

::google::protobuf::uint8* ServerGetCustomDungeonReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dungeon_guid(), target);
  }

  // bool is_self_dungeon = 2;
  if (this->is_self_dungeon() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_self_dungeon(), target);
  }

  // uint32 enter_type = 3;
  if (this->enter_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->enter_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetCustomDungeonReq)
  return target;
}

size_t ServerGetCustomDungeonReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetCustomDungeonReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dungeon_guid());
  }

  // bool is_self_dungeon = 2;
  if (this->is_self_dungeon() != 0) {
    total_size += 1 + 1;
  }

  // uint32 enter_type = 3;
  if (this->enter_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->enter_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetCustomDungeonReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetCustomDungeonReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetCustomDungeonReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetCustomDungeonReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetCustomDungeonReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetCustomDungeonReq)
    MergeFrom(*source);
  }
}

void ServerGetCustomDungeonReq::MergeFrom(const ServerGetCustomDungeonReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetCustomDungeonReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dungeon_guid() != 0) {
    set_dungeon_guid(from.dungeon_guid());
  }
  if (from.is_self_dungeon() != 0) {
    set_is_self_dungeon(from.is_self_dungeon());
  }
  if (from.enter_type() != 0) {
    set_enter_type(from.enter_type());
  }
}

void ServerGetCustomDungeonReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetCustomDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetCustomDungeonReq::CopyFrom(const ServerGetCustomDungeonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetCustomDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetCustomDungeonReq::IsInitialized() const {
  return true;
}

void ServerGetCustomDungeonReq::Swap(ServerGetCustomDungeonReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetCustomDungeonReq::InternalSwap(ServerGetCustomDungeonReq* other) {
  using std::swap;
  swap(dungeon_guid_, other->dungeon_guid_);
  swap(is_self_dungeon_, other->is_self_dungeon_);
  swap(enter_type_, other->enter_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetCustomDungeonReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetCustomDungeonReq

// uint64 dungeon_guid = 1;
void ServerGetCustomDungeonReq::clear_dungeon_guid() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerGetCustomDungeonReq::dungeon_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonReq.dungeon_guid)
  return dungeon_guid_;
}
void ServerGetCustomDungeonReq::set_dungeon_guid(::google::protobuf::uint64 value) {
  
  dungeon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetCustomDungeonReq.dungeon_guid)
}

// bool is_self_dungeon = 2;
void ServerGetCustomDungeonReq::clear_is_self_dungeon() {
  is_self_dungeon_ = false;
}
bool ServerGetCustomDungeonReq::is_self_dungeon() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonReq.is_self_dungeon)
  return is_self_dungeon_;
}
void ServerGetCustomDungeonReq::set_is_self_dungeon(bool value) {
  
  is_self_dungeon_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetCustomDungeonReq.is_self_dungeon)
}

// uint32 enter_type = 3;
void ServerGetCustomDungeonReq::clear_enter_type() {
  enter_type_ = 0u;
}
::google::protobuf::uint32 ServerGetCustomDungeonReq::enter_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonReq.enter_type)
  return enter_type_;
}
void ServerGetCustomDungeonReq::set_enter_type(::google::protobuf::uint32 value) {
  
  enter_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetCustomDungeonReq.enter_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerCustomDungeon::kDungeonGuidFieldNumber;
const int ServerCustomDungeon::kDungeonIdFieldNumber;
const int ServerCustomDungeon::kRoomListFieldNumber;
const int ServerCustomDungeon::kSettingFieldNumber;
const int ServerCustomDungeon::kVersionFieldNumber;
const int ServerCustomDungeon::kIsLikedFieldNumber;
const int ServerCustomDungeon::kFirstPublishTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerCustomDungeon::ServerCustomDungeon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerCustomDungeon)
}
ServerCustomDungeon::ServerCustomDungeon(const ServerCustomDungeon& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      room_list_(from.room_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_setting()) {
    setting_ = new ::proto::CustomDungeonSettingBin(*from.setting_);
  } else {
    setting_ = NULL;
  }
  ::memcpy(&dungeon_guid_, &from.dungeon_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&first_publish_time_) -
    reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(first_publish_time_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerCustomDungeon)
}

void ServerCustomDungeon::SharedCtor() {
  ::memset(&setting_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&first_publish_time_) -
      reinterpret_cast<char*>(&setting_)) + sizeof(first_publish_time_));
  _cached_size_ = 0;
}

ServerCustomDungeon::~ServerCustomDungeon() {
  // @@protoc_insertion_point(destructor:proto.ServerCustomDungeon)
  SharedDtor();
}

void ServerCustomDungeon::SharedDtor() {
  if (this != internal_default_instance()) delete setting_;
}

void ServerCustomDungeon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerCustomDungeon::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerCustomDungeon& ServerCustomDungeon::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerCustomDungeon* ServerCustomDungeon::New(::google::protobuf::Arena* arena) const {
  ServerCustomDungeon* n = new ServerCustomDungeon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerCustomDungeon::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerCustomDungeon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  room_list_.Clear();
  if (GetArenaNoVirtual() == NULL && setting_ != NULL) {
    delete setting_;
  }
  setting_ = NULL;
  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&first_publish_time_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(first_publish_time_));
  _internal_metadata_.Clear();
}

bool ServerCustomDungeon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerCustomDungeon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dungeon_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dungeon_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dungeon_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dungeon_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.CustomDungeonRoomRedisData room_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_room_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CustomDungeonSettingBin setting = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_liked = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_liked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 first_publish_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &first_publish_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerCustomDungeon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerCustomDungeon)
  return false;
#undef DO_
}

void ServerCustomDungeon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerCustomDungeon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dungeon_guid(), output);
  }

  // uint32 dungeon_id = 2;
  if (this->dungeon_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->dungeon_id(), output);
  }

  // repeated .proto.CustomDungeonRoomRedisData room_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->room_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->room_list(static_cast<int>(i)), output);
  }

  // .proto.CustomDungeonSettingBin setting = 4;
  if (this->has_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->setting_, output);
  }

  // uint32 version = 5;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->version(), output);
  }

  // bool is_liked = 6;
  if (this->is_liked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_liked(), output);
  }

  // uint32 first_publish_time = 7;
  if (this->first_publish_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->first_publish_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerCustomDungeon)
}

::google::protobuf::uint8* ServerCustomDungeon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerCustomDungeon)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dungeon_guid(), target);
  }

  // uint32 dungeon_id = 2;
  if (this->dungeon_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->dungeon_id(), target);
  }

  // repeated .proto.CustomDungeonRoomRedisData room_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->room_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->room_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.CustomDungeonSettingBin setting = 4;
  if (this->has_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->setting_, deterministic, target);
  }

  // uint32 version = 5;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->version(), target);
  }

  // bool is_liked = 6;
  if (this->is_liked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_liked(), target);
  }

  // uint32 first_publish_time = 7;
  if (this->first_publish_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->first_publish_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerCustomDungeon)
  return target;
}

size_t ServerCustomDungeon::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerCustomDungeon)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.CustomDungeonRoomRedisData room_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->room_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->room_list(static_cast<int>(i)));
    }
  }

  // .proto.CustomDungeonSettingBin setting = 4;
  if (this->has_setting()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->setting_);
  }

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dungeon_guid());
  }

  // uint32 dungeon_id = 2;
  if (this->dungeon_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dungeon_id());
  }

  // uint32 version = 5;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // bool is_liked = 6;
  if (this->is_liked() != 0) {
    total_size += 1 + 1;
  }

  // uint32 first_publish_time = 7;
  if (this->first_publish_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->first_publish_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerCustomDungeon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerCustomDungeon)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerCustomDungeon* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerCustomDungeon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerCustomDungeon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerCustomDungeon)
    MergeFrom(*source);
  }
}

void ServerCustomDungeon::MergeFrom(const ServerCustomDungeon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerCustomDungeon)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  room_list_.MergeFrom(from.room_list_);
  if (from.has_setting()) {
    mutable_setting()->::proto::CustomDungeonSettingBin::MergeFrom(from.setting());
  }
  if (from.dungeon_guid() != 0) {
    set_dungeon_guid(from.dungeon_guid());
  }
  if (from.dungeon_id() != 0) {
    set_dungeon_id(from.dungeon_id());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.is_liked() != 0) {
    set_is_liked(from.is_liked());
  }
  if (from.first_publish_time() != 0) {
    set_first_publish_time(from.first_publish_time());
  }
}

void ServerCustomDungeon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerCustomDungeon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerCustomDungeon::CopyFrom(const ServerCustomDungeon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerCustomDungeon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerCustomDungeon::IsInitialized() const {
  return true;
}

void ServerCustomDungeon::Swap(ServerCustomDungeon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerCustomDungeon::InternalSwap(ServerCustomDungeon* other) {
  using std::swap;
  room_list_.InternalSwap(&other->room_list_);
  swap(setting_, other->setting_);
  swap(dungeon_guid_, other->dungeon_guid_);
  swap(dungeon_id_, other->dungeon_id_);
  swap(version_, other->version_);
  swap(is_liked_, other->is_liked_);
  swap(first_publish_time_, other->first_publish_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerCustomDungeon::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerCustomDungeon

// uint64 dungeon_guid = 1;
void ServerCustomDungeon::clear_dungeon_guid() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerCustomDungeon::dungeon_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerCustomDungeon.dungeon_guid)
  return dungeon_guid_;
}
void ServerCustomDungeon::set_dungeon_guid(::google::protobuf::uint64 value) {
  
  dungeon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerCustomDungeon.dungeon_guid)
}

// uint32 dungeon_id = 2;
void ServerCustomDungeon::clear_dungeon_id() {
  dungeon_id_ = 0u;
}
::google::protobuf::uint32 ServerCustomDungeon::dungeon_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerCustomDungeon.dungeon_id)
  return dungeon_id_;
}
void ServerCustomDungeon::set_dungeon_id(::google::protobuf::uint32 value) {
  
  dungeon_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerCustomDungeon.dungeon_id)
}

// repeated .proto.CustomDungeonRoomRedisData room_list = 3;
int ServerCustomDungeon::room_list_size() const {
  return room_list_.size();
}
void ServerCustomDungeon::clear_room_list() {
  room_list_.Clear();
}
const ::proto::CustomDungeonRoomRedisData& ServerCustomDungeon::room_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerCustomDungeon.room_list)
  return room_list_.Get(index);
}
::proto::CustomDungeonRoomRedisData* ServerCustomDungeon::mutable_room_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerCustomDungeon.room_list)
  return room_list_.Mutable(index);
}
::proto::CustomDungeonRoomRedisData* ServerCustomDungeon::add_room_list() {
  // @@protoc_insertion_point(field_add:proto.ServerCustomDungeon.room_list)
  return room_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonRoomRedisData >*
ServerCustomDungeon::mutable_room_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerCustomDungeon.room_list)
  return &room_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonRoomRedisData >&
ServerCustomDungeon::room_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerCustomDungeon.room_list)
  return room_list_;
}

// .proto.CustomDungeonSettingBin setting = 4;
bool ServerCustomDungeon::has_setting() const {
  return this != internal_default_instance() && setting_ != NULL;
}
void ServerCustomDungeon::clear_setting() {
  if (GetArenaNoVirtual() == NULL && setting_ != NULL) delete setting_;
  setting_ = NULL;
}
const ::proto::CustomDungeonSettingBin& ServerCustomDungeon::setting() const {
  const ::proto::CustomDungeonSettingBin* p = setting_;
  // @@protoc_insertion_point(field_get:proto.ServerCustomDungeon.setting)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CustomDungeonSettingBin*>(
      &::proto::_CustomDungeonSettingBin_default_instance_);
}
::proto::CustomDungeonSettingBin* ServerCustomDungeon::mutable_setting() {
  
  if (setting_ == NULL) {
    setting_ = new ::proto::CustomDungeonSettingBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerCustomDungeon.setting)
  return setting_;
}
::proto::CustomDungeonSettingBin* ServerCustomDungeon::release_setting() {
  // @@protoc_insertion_point(field_release:proto.ServerCustomDungeon.setting)
  
  ::proto::CustomDungeonSettingBin* temp = setting_;
  setting_ = NULL;
  return temp;
}
void ServerCustomDungeon::set_allocated_setting(::proto::CustomDungeonSettingBin* setting) {
  delete setting_;
  setting_ = setting;
  if (setting) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerCustomDungeon.setting)
}

// uint32 version = 5;
void ServerCustomDungeon::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 ServerCustomDungeon::version() const {
  // @@protoc_insertion_point(field_get:proto.ServerCustomDungeon.version)
  return version_;
}
void ServerCustomDungeon::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerCustomDungeon.version)
}

// bool is_liked = 6;
void ServerCustomDungeon::clear_is_liked() {
  is_liked_ = false;
}
bool ServerCustomDungeon::is_liked() const {
  // @@protoc_insertion_point(field_get:proto.ServerCustomDungeon.is_liked)
  return is_liked_;
}
void ServerCustomDungeon::set_is_liked(bool value) {
  
  is_liked_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerCustomDungeon.is_liked)
}

// uint32 first_publish_time = 7;
void ServerCustomDungeon::clear_first_publish_time() {
  first_publish_time_ = 0u;
}
::google::protobuf::uint32 ServerCustomDungeon::first_publish_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerCustomDungeon.first_publish_time)
  return first_publish_time_;
}
void ServerCustomDungeon::set_first_publish_time(::google::protobuf::uint32 value) {
  
  first_publish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerCustomDungeon.first_publish_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomDungeonAdventure::kCustomDungeonFieldNumber;
const int CustomDungeonAdventure::kDungeonBriefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomDungeonAdventure::CustomDungeonAdventure()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CustomDungeonAdventure)
}
CustomDungeonAdventure::CustomDungeonAdventure(const CustomDungeonAdventure& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_custom_dungeon()) {
    custom_dungeon_ = new ::proto::ServerCustomDungeon(*from.custom_dungeon_);
  } else {
    custom_dungeon_ = NULL;
  }
  if (from.has_dungeon_brief()) {
    dungeon_brief_ = new ::proto::CustomDungeonBriefRedisData(*from.dungeon_brief_);
  } else {
    dungeon_brief_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.CustomDungeonAdventure)
}

void CustomDungeonAdventure::SharedCtor() {
  ::memset(&custom_dungeon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dungeon_brief_) -
      reinterpret_cast<char*>(&custom_dungeon_)) + sizeof(dungeon_brief_));
  _cached_size_ = 0;
}

CustomDungeonAdventure::~CustomDungeonAdventure() {
  // @@protoc_insertion_point(destructor:proto.CustomDungeonAdventure)
  SharedDtor();
}

void CustomDungeonAdventure::SharedDtor() {
  if (this != internal_default_instance()) delete custom_dungeon_;
  if (this != internal_default_instance()) delete dungeon_brief_;
}

void CustomDungeonAdventure::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CustomDungeonAdventure::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CustomDungeonAdventure& CustomDungeonAdventure::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CustomDungeonAdventure* CustomDungeonAdventure::New(::google::protobuf::Arena* arena) const {
  CustomDungeonAdventure* n = new CustomDungeonAdventure;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CustomDungeonAdventure::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CustomDungeonAdventure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && custom_dungeon_ != NULL) {
    delete custom_dungeon_;
  }
  custom_dungeon_ = NULL;
  if (GetArenaNoVirtual() == NULL && dungeon_brief_ != NULL) {
    delete dungeon_brief_;
  }
  dungeon_brief_ = NULL;
  _internal_metadata_.Clear();
}

bool CustomDungeonAdventure::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CustomDungeonAdventure)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ServerCustomDungeon custom_dungeon = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_custom_dungeon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CustomDungeonBriefRedisData dungeon_brief = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dungeon_brief()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CustomDungeonAdventure)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CustomDungeonAdventure)
  return false;
#undef DO_
}

void CustomDungeonAdventure::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CustomDungeonAdventure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ServerCustomDungeon custom_dungeon = 1;
  if (this->has_custom_dungeon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->custom_dungeon_, output);
  }

  // .proto.CustomDungeonBriefRedisData dungeon_brief = 2;
  if (this->has_dungeon_brief()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->dungeon_brief_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CustomDungeonAdventure)
}

::google::protobuf::uint8* CustomDungeonAdventure::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CustomDungeonAdventure)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ServerCustomDungeon custom_dungeon = 1;
  if (this->has_custom_dungeon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->custom_dungeon_, deterministic, target);
  }

  // .proto.CustomDungeonBriefRedisData dungeon_brief = 2;
  if (this->has_dungeon_brief()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->dungeon_brief_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CustomDungeonAdventure)
  return target;
}

size_t CustomDungeonAdventure::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CustomDungeonAdventure)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ServerCustomDungeon custom_dungeon = 1;
  if (this->has_custom_dungeon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->custom_dungeon_);
  }

  // .proto.CustomDungeonBriefRedisData dungeon_brief = 2;
  if (this->has_dungeon_brief()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dungeon_brief_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CustomDungeonAdventure::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CustomDungeonAdventure)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomDungeonAdventure* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomDungeonAdventure>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CustomDungeonAdventure)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CustomDungeonAdventure)
    MergeFrom(*source);
  }
}

void CustomDungeonAdventure::MergeFrom(const CustomDungeonAdventure& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CustomDungeonAdventure)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_custom_dungeon()) {
    mutable_custom_dungeon()->::proto::ServerCustomDungeon::MergeFrom(from.custom_dungeon());
  }
  if (from.has_dungeon_brief()) {
    mutable_dungeon_brief()->::proto::CustomDungeonBriefRedisData::MergeFrom(from.dungeon_brief());
  }
}

void CustomDungeonAdventure::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CustomDungeonAdventure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomDungeonAdventure::CopyFrom(const CustomDungeonAdventure& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CustomDungeonAdventure)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomDungeonAdventure::IsInitialized() const {
  return true;
}

void CustomDungeonAdventure::Swap(CustomDungeonAdventure* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomDungeonAdventure::InternalSwap(CustomDungeonAdventure* other) {
  using std::swap;
  swap(custom_dungeon_, other->custom_dungeon_);
  swap(dungeon_brief_, other->dungeon_brief_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CustomDungeonAdventure::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CustomDungeonAdventure

// .proto.ServerCustomDungeon custom_dungeon = 1;
bool CustomDungeonAdventure::has_custom_dungeon() const {
  return this != internal_default_instance() && custom_dungeon_ != NULL;
}
void CustomDungeonAdventure::clear_custom_dungeon() {
  if (GetArenaNoVirtual() == NULL && custom_dungeon_ != NULL) delete custom_dungeon_;
  custom_dungeon_ = NULL;
}
const ::proto::ServerCustomDungeon& CustomDungeonAdventure::custom_dungeon() const {
  const ::proto::ServerCustomDungeon* p = custom_dungeon_;
  // @@protoc_insertion_point(field_get:proto.CustomDungeonAdventure.custom_dungeon)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ServerCustomDungeon*>(
      &::proto::_ServerCustomDungeon_default_instance_);
}
::proto::ServerCustomDungeon* CustomDungeonAdventure::mutable_custom_dungeon() {
  
  if (custom_dungeon_ == NULL) {
    custom_dungeon_ = new ::proto::ServerCustomDungeon;
  }
  // @@protoc_insertion_point(field_mutable:proto.CustomDungeonAdventure.custom_dungeon)
  return custom_dungeon_;
}
::proto::ServerCustomDungeon* CustomDungeonAdventure::release_custom_dungeon() {
  // @@protoc_insertion_point(field_release:proto.CustomDungeonAdventure.custom_dungeon)
  
  ::proto::ServerCustomDungeon* temp = custom_dungeon_;
  custom_dungeon_ = NULL;
  return temp;
}
void CustomDungeonAdventure::set_allocated_custom_dungeon(::proto::ServerCustomDungeon* custom_dungeon) {
  delete custom_dungeon_;
  custom_dungeon_ = custom_dungeon;
  if (custom_dungeon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CustomDungeonAdventure.custom_dungeon)
}

// .proto.CustomDungeonBriefRedisData dungeon_brief = 2;
bool CustomDungeonAdventure::has_dungeon_brief() const {
  return this != internal_default_instance() && dungeon_brief_ != NULL;
}
void CustomDungeonAdventure::clear_dungeon_brief() {
  if (GetArenaNoVirtual() == NULL && dungeon_brief_ != NULL) delete dungeon_brief_;
  dungeon_brief_ = NULL;
}
const ::proto::CustomDungeonBriefRedisData& CustomDungeonAdventure::dungeon_brief() const {
  const ::proto::CustomDungeonBriefRedisData* p = dungeon_brief_;
  // @@protoc_insertion_point(field_get:proto.CustomDungeonAdventure.dungeon_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CustomDungeonBriefRedisData*>(
      &::proto::_CustomDungeonBriefRedisData_default_instance_);
}
::proto::CustomDungeonBriefRedisData* CustomDungeonAdventure::mutable_dungeon_brief() {
  
  if (dungeon_brief_ == NULL) {
    dungeon_brief_ = new ::proto::CustomDungeonBriefRedisData;
  }
  // @@protoc_insertion_point(field_mutable:proto.CustomDungeonAdventure.dungeon_brief)
  return dungeon_brief_;
}
::proto::CustomDungeonBriefRedisData* CustomDungeonAdventure::release_dungeon_brief() {
  // @@protoc_insertion_point(field_release:proto.CustomDungeonAdventure.dungeon_brief)
  
  ::proto::CustomDungeonBriefRedisData* temp = dungeon_brief_;
  dungeon_brief_ = NULL;
  return temp;
}
void CustomDungeonAdventure::set_allocated_dungeon_brief(::proto::CustomDungeonBriefRedisData* dungeon_brief) {
  delete dungeon_brief_;
  dungeon_brief_ = dungeon_brief;
  if (dungeon_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CustomDungeonAdventure.dungeon_brief)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetCustomDungeonRsp::kRetcodeFieldNumber;
const int ServerGetCustomDungeonRsp::kIsExistFieldNumber;
const int ServerGetCustomDungeonRsp::kCustomDungeonFieldNumber;
const int ServerGetCustomDungeonRsp::kEnterTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetCustomDungeonRsp::ServerGetCustomDungeonRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetCustomDungeonRsp)
}
ServerGetCustomDungeonRsp::ServerGetCustomDungeonRsp(const ServerGetCustomDungeonRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_custom_dungeon()) {
    custom_dungeon_ = new ::proto::ServerCustomDungeon(*from.custom_dungeon_);
  } else {
    custom_dungeon_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&enter_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(enter_type_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetCustomDungeonRsp)
}

void ServerGetCustomDungeonRsp::SharedCtor() {
  ::memset(&custom_dungeon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enter_type_) -
      reinterpret_cast<char*>(&custom_dungeon_)) + sizeof(enter_type_));
  _cached_size_ = 0;
}

ServerGetCustomDungeonRsp::~ServerGetCustomDungeonRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetCustomDungeonRsp)
  SharedDtor();
}

void ServerGetCustomDungeonRsp::SharedDtor() {
  if (this != internal_default_instance()) delete custom_dungeon_;
}

void ServerGetCustomDungeonRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetCustomDungeonRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetCustomDungeonRsp& ServerGetCustomDungeonRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetCustomDungeonRsp* ServerGetCustomDungeonRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetCustomDungeonRsp* n = new ServerGetCustomDungeonRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetCustomDungeonRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && custom_dungeon_ != NULL) {
    delete custom_dungeon_;
  }
  custom_dungeon_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enter_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(enter_type_));
  _internal_metadata_.Clear();
}

bool ServerGetCustomDungeonRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetCustomDungeonRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_exist = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_exist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ServerCustomDungeon custom_dungeon = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_custom_dungeon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 enter_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enter_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetCustomDungeonRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetCustomDungeonRsp)
  return false;
#undef DO_
}

void ServerGetCustomDungeonRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // bool is_exist = 2;
  if (this->is_exist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_exist(), output);
  }

  // .proto.ServerCustomDungeon custom_dungeon = 3;
  if (this->has_custom_dungeon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->custom_dungeon_, output);
  }

  // uint32 enter_type = 4;
  if (this->enter_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->enter_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetCustomDungeonRsp)
}

::google::protobuf::uint8* ServerGetCustomDungeonRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // bool is_exist = 2;
  if (this->is_exist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_exist(), target);
  }

  // .proto.ServerCustomDungeon custom_dungeon = 3;
  if (this->has_custom_dungeon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->custom_dungeon_, deterministic, target);
  }

  // uint32 enter_type = 4;
  if (this->enter_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->enter_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetCustomDungeonRsp)
  return target;
}

size_t ServerGetCustomDungeonRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetCustomDungeonRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ServerCustomDungeon custom_dungeon = 3;
  if (this->has_custom_dungeon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->custom_dungeon_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // bool is_exist = 2;
  if (this->is_exist() != 0) {
    total_size += 1 + 1;
  }

  // uint32 enter_type = 4;
  if (this->enter_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->enter_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetCustomDungeonRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetCustomDungeonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetCustomDungeonRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetCustomDungeonRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetCustomDungeonRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetCustomDungeonRsp)
    MergeFrom(*source);
  }
}

void ServerGetCustomDungeonRsp::MergeFrom(const ServerGetCustomDungeonRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetCustomDungeonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_custom_dungeon()) {
    mutable_custom_dungeon()->::proto::ServerCustomDungeon::MergeFrom(from.custom_dungeon());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.is_exist() != 0) {
    set_is_exist(from.is_exist());
  }
  if (from.enter_type() != 0) {
    set_enter_type(from.enter_type());
  }
}

void ServerGetCustomDungeonRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetCustomDungeonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetCustomDungeonRsp::CopyFrom(const ServerGetCustomDungeonRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetCustomDungeonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetCustomDungeonRsp::IsInitialized() const {
  return true;
}

void ServerGetCustomDungeonRsp::Swap(ServerGetCustomDungeonRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetCustomDungeonRsp::InternalSwap(ServerGetCustomDungeonRsp* other) {
  using std::swap;
  swap(custom_dungeon_, other->custom_dungeon_);
  swap(retcode_, other->retcode_);
  swap(is_exist_, other->is_exist_);
  swap(enter_type_, other->enter_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetCustomDungeonRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetCustomDungeonRsp

// int32 retcode = 1;
void ServerGetCustomDungeonRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetCustomDungeonRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonRsp.retcode)
  return retcode_;
}
void ServerGetCustomDungeonRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetCustomDungeonRsp.retcode)
}

// bool is_exist = 2;
void ServerGetCustomDungeonRsp::clear_is_exist() {
  is_exist_ = false;
}
bool ServerGetCustomDungeonRsp::is_exist() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonRsp.is_exist)
  return is_exist_;
}
void ServerGetCustomDungeonRsp::set_is_exist(bool value) {
  
  is_exist_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetCustomDungeonRsp.is_exist)
}

// .proto.ServerCustomDungeon custom_dungeon = 3;
bool ServerGetCustomDungeonRsp::has_custom_dungeon() const {
  return this != internal_default_instance() && custom_dungeon_ != NULL;
}
void ServerGetCustomDungeonRsp::clear_custom_dungeon() {
  if (GetArenaNoVirtual() == NULL && custom_dungeon_ != NULL) delete custom_dungeon_;
  custom_dungeon_ = NULL;
}
const ::proto::ServerCustomDungeon& ServerGetCustomDungeonRsp::custom_dungeon() const {
  const ::proto::ServerCustomDungeon* p = custom_dungeon_;
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonRsp.custom_dungeon)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ServerCustomDungeon*>(
      &::proto::_ServerCustomDungeon_default_instance_);
}
::proto::ServerCustomDungeon* ServerGetCustomDungeonRsp::mutable_custom_dungeon() {
  
  if (custom_dungeon_ == NULL) {
    custom_dungeon_ = new ::proto::ServerCustomDungeon;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGetCustomDungeonRsp.custom_dungeon)
  return custom_dungeon_;
}
::proto::ServerCustomDungeon* ServerGetCustomDungeonRsp::release_custom_dungeon() {
  // @@protoc_insertion_point(field_release:proto.ServerGetCustomDungeonRsp.custom_dungeon)
  
  ::proto::ServerCustomDungeon* temp = custom_dungeon_;
  custom_dungeon_ = NULL;
  return temp;
}
void ServerGetCustomDungeonRsp::set_allocated_custom_dungeon(::proto::ServerCustomDungeon* custom_dungeon) {
  delete custom_dungeon_;
  custom_dungeon_ = custom_dungeon;
  if (custom_dungeon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGetCustomDungeonRsp.custom_dungeon)
}

// uint32 enter_type = 4;
void ServerGetCustomDungeonRsp::clear_enter_type() {
  enter_type_ = 0u;
}
::google::protobuf::uint32 ServerGetCustomDungeonRsp::enter_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonRsp.enter_type)
  return enter_type_;
}
void ServerGetCustomDungeonRsp::set_enter_type(::google::protobuf::uint32 value) {
  
  enter_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetCustomDungeonRsp.enter_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerSaveCustomDungeonReq::kCustomDungeonFieldNumber;
const int ServerSaveCustomDungeonReq::kRoomIdFieldNumber;
const int ServerSaveCustomDungeonReq::kIsEverPublishedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerSaveCustomDungeonReq::ServerSaveCustomDungeonReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerSaveCustomDungeonReq)
}
ServerSaveCustomDungeonReq::ServerSaveCustomDungeonReq(const ServerSaveCustomDungeonReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_custom_dungeon()) {
    custom_dungeon_ = new ::proto::ServerCustomDungeon(*from.custom_dungeon_);
  } else {
    custom_dungeon_ = NULL;
  }
  ::memcpy(&room_id_, &from.room_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_ever_published_) -
    reinterpret_cast<char*>(&room_id_)) + sizeof(is_ever_published_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerSaveCustomDungeonReq)
}

void ServerSaveCustomDungeonReq::SharedCtor() {
  ::memset(&custom_dungeon_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ever_published_) -
      reinterpret_cast<char*>(&custom_dungeon_)) + sizeof(is_ever_published_));
  _cached_size_ = 0;
}

ServerSaveCustomDungeonReq::~ServerSaveCustomDungeonReq() {
  // @@protoc_insertion_point(destructor:proto.ServerSaveCustomDungeonReq)
  SharedDtor();
}

void ServerSaveCustomDungeonReq::SharedDtor() {
  if (this != internal_default_instance()) delete custom_dungeon_;
}

void ServerSaveCustomDungeonReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerSaveCustomDungeonReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerSaveCustomDungeonReq& ServerSaveCustomDungeonReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerSaveCustomDungeonReq* ServerSaveCustomDungeonReq::New(::google::protobuf::Arena* arena) const {
  ServerSaveCustomDungeonReq* n = new ServerSaveCustomDungeonReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerSaveCustomDungeonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerSaveCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && custom_dungeon_ != NULL) {
    delete custom_dungeon_;
  }
  custom_dungeon_ = NULL;
  ::memset(&room_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ever_published_) -
      reinterpret_cast<char*>(&room_id_)) + sizeof(is_ever_published_));
  _internal_metadata_.Clear();
}

bool ServerSaveCustomDungeonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerSaveCustomDungeonReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.ServerCustomDungeon custom_dungeon = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_custom_dungeon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 room_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_ever_published = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ever_published_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerSaveCustomDungeonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerSaveCustomDungeonReq)
  return false;
#undef DO_
}

void ServerSaveCustomDungeonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerSaveCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ServerCustomDungeon custom_dungeon = 1;
  if (this->has_custom_dungeon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->custom_dungeon_, output);
  }

  // uint32 room_id = 2;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->room_id(), output);
  }

  // bool is_ever_published = 3;
  if (this->is_ever_published() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_ever_published(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerSaveCustomDungeonReq)
}

::google::protobuf::uint8* ServerSaveCustomDungeonReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerSaveCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ServerCustomDungeon custom_dungeon = 1;
  if (this->has_custom_dungeon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->custom_dungeon_, deterministic, target);
  }

  // uint32 room_id = 2;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->room_id(), target);
  }

  // bool is_ever_published = 3;
  if (this->is_ever_published() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_ever_published(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerSaveCustomDungeonReq)
  return target;
}

size_t ServerSaveCustomDungeonReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerSaveCustomDungeonReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.ServerCustomDungeon custom_dungeon = 1;
  if (this->has_custom_dungeon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->custom_dungeon_);
  }

  // uint32 room_id = 2;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // bool is_ever_published = 3;
  if (this->is_ever_published() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerSaveCustomDungeonReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerSaveCustomDungeonReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerSaveCustomDungeonReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerSaveCustomDungeonReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerSaveCustomDungeonReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerSaveCustomDungeonReq)
    MergeFrom(*source);
  }
}

void ServerSaveCustomDungeonReq::MergeFrom(const ServerSaveCustomDungeonReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerSaveCustomDungeonReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_custom_dungeon()) {
    mutable_custom_dungeon()->::proto::ServerCustomDungeon::MergeFrom(from.custom_dungeon());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.is_ever_published() != 0) {
    set_is_ever_published(from.is_ever_published());
  }
}

void ServerSaveCustomDungeonReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerSaveCustomDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerSaveCustomDungeonReq::CopyFrom(const ServerSaveCustomDungeonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerSaveCustomDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerSaveCustomDungeonReq::IsInitialized() const {
  return true;
}

void ServerSaveCustomDungeonReq::Swap(ServerSaveCustomDungeonReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerSaveCustomDungeonReq::InternalSwap(ServerSaveCustomDungeonReq* other) {
  using std::swap;
  swap(custom_dungeon_, other->custom_dungeon_);
  swap(room_id_, other->room_id_);
  swap(is_ever_published_, other->is_ever_published_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerSaveCustomDungeonReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerSaveCustomDungeonReq

// .proto.ServerCustomDungeon custom_dungeon = 1;
bool ServerSaveCustomDungeonReq::has_custom_dungeon() const {
  return this != internal_default_instance() && custom_dungeon_ != NULL;
}
void ServerSaveCustomDungeonReq::clear_custom_dungeon() {
  if (GetArenaNoVirtual() == NULL && custom_dungeon_ != NULL) delete custom_dungeon_;
  custom_dungeon_ = NULL;
}
const ::proto::ServerCustomDungeon& ServerSaveCustomDungeonReq::custom_dungeon() const {
  const ::proto::ServerCustomDungeon* p = custom_dungeon_;
  // @@protoc_insertion_point(field_get:proto.ServerSaveCustomDungeonReq.custom_dungeon)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ServerCustomDungeon*>(
      &::proto::_ServerCustomDungeon_default_instance_);
}
::proto::ServerCustomDungeon* ServerSaveCustomDungeonReq::mutable_custom_dungeon() {
  
  if (custom_dungeon_ == NULL) {
    custom_dungeon_ = new ::proto::ServerCustomDungeon;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerSaveCustomDungeonReq.custom_dungeon)
  return custom_dungeon_;
}
::proto::ServerCustomDungeon* ServerSaveCustomDungeonReq::release_custom_dungeon() {
  // @@protoc_insertion_point(field_release:proto.ServerSaveCustomDungeonReq.custom_dungeon)
  
  ::proto::ServerCustomDungeon* temp = custom_dungeon_;
  custom_dungeon_ = NULL;
  return temp;
}
void ServerSaveCustomDungeonReq::set_allocated_custom_dungeon(::proto::ServerCustomDungeon* custom_dungeon) {
  delete custom_dungeon_;
  custom_dungeon_ = custom_dungeon;
  if (custom_dungeon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerSaveCustomDungeonReq.custom_dungeon)
}

// uint32 room_id = 2;
void ServerSaveCustomDungeonReq::clear_room_id() {
  room_id_ = 0u;
}
::google::protobuf::uint32 ServerSaveCustomDungeonReq::room_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerSaveCustomDungeonReq.room_id)
  return room_id_;
}
void ServerSaveCustomDungeonReq::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerSaveCustomDungeonReq.room_id)
}

// bool is_ever_published = 3;
void ServerSaveCustomDungeonReq::clear_is_ever_published() {
  is_ever_published_ = false;
}
bool ServerSaveCustomDungeonReq::is_ever_published() const {
  // @@protoc_insertion_point(field_get:proto.ServerSaveCustomDungeonReq.is_ever_published)
  return is_ever_published_;
}
void ServerSaveCustomDungeonReq::set_is_ever_published(bool value) {
  
  is_ever_published_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerSaveCustomDungeonReq.is_ever_published)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerSaveCustomDungeonRsp::kRetcodeFieldNumber;
const int ServerSaveCustomDungeonRsp::kDungeonGuidFieldNumber;
const int ServerSaveCustomDungeonRsp::kRoomIdFieldNumber;
const int ServerSaveCustomDungeonRsp::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerSaveCustomDungeonRsp::ServerSaveCustomDungeonRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerSaveCustomDungeonRsp)
}
ServerSaveCustomDungeonRsp::ServerSaveCustomDungeonRsp(const ServerSaveCustomDungeonRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dungeon_guid_, &from.dungeon_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerSaveCustomDungeonRsp)
}

void ServerSaveCustomDungeonRsp::SharedCtor() {
  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(version_));
  _cached_size_ = 0;
}

ServerSaveCustomDungeonRsp::~ServerSaveCustomDungeonRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerSaveCustomDungeonRsp)
  SharedDtor();
}

void ServerSaveCustomDungeonRsp::SharedDtor() {
}

void ServerSaveCustomDungeonRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerSaveCustomDungeonRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerSaveCustomDungeonRsp& ServerSaveCustomDungeonRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerSaveCustomDungeonRsp* ServerSaveCustomDungeonRsp::New(::google::protobuf::Arena* arena) const {
  ServerSaveCustomDungeonRsp* n = new ServerSaveCustomDungeonRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerSaveCustomDungeonRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerSaveCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool ServerSaveCustomDungeonRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerSaveCustomDungeonRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dungeon_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dungeon_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 room_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerSaveCustomDungeonRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerSaveCustomDungeonRsp)
  return false;
#undef DO_
}

void ServerSaveCustomDungeonRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerSaveCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint64 dungeon_guid = 2;
  if (this->dungeon_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dungeon_guid(), output);
  }

  // uint32 room_id = 3;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->room_id(), output);
  }

  // uint32 version = 4;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerSaveCustomDungeonRsp)
}

::google::protobuf::uint8* ServerSaveCustomDungeonRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerSaveCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint64 dungeon_guid = 2;
  if (this->dungeon_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dungeon_guid(), target);
  }

  // uint32 room_id = 3;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->room_id(), target);
  }

  // uint32 version = 4;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerSaveCustomDungeonRsp)
  return target;
}

size_t ServerSaveCustomDungeonRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerSaveCustomDungeonRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 dungeon_guid = 2;
  if (this->dungeon_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dungeon_guid());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 room_id = 3;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 version = 4;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerSaveCustomDungeonRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerSaveCustomDungeonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerSaveCustomDungeonRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerSaveCustomDungeonRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerSaveCustomDungeonRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerSaveCustomDungeonRsp)
    MergeFrom(*source);
  }
}

void ServerSaveCustomDungeonRsp::MergeFrom(const ServerSaveCustomDungeonRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerSaveCustomDungeonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dungeon_guid() != 0) {
    set_dungeon_guid(from.dungeon_guid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void ServerSaveCustomDungeonRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerSaveCustomDungeonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerSaveCustomDungeonRsp::CopyFrom(const ServerSaveCustomDungeonRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerSaveCustomDungeonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerSaveCustomDungeonRsp::IsInitialized() const {
  return true;
}

void ServerSaveCustomDungeonRsp::Swap(ServerSaveCustomDungeonRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerSaveCustomDungeonRsp::InternalSwap(ServerSaveCustomDungeonRsp* other) {
  using std::swap;
  swap(dungeon_guid_, other->dungeon_guid_);
  swap(retcode_, other->retcode_);
  swap(room_id_, other->room_id_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerSaveCustomDungeonRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerSaveCustomDungeonRsp

// int32 retcode = 1;
void ServerSaveCustomDungeonRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerSaveCustomDungeonRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerSaveCustomDungeonRsp.retcode)
  return retcode_;
}
void ServerSaveCustomDungeonRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerSaveCustomDungeonRsp.retcode)
}

// uint64 dungeon_guid = 2;
void ServerSaveCustomDungeonRsp::clear_dungeon_guid() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerSaveCustomDungeonRsp::dungeon_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerSaveCustomDungeonRsp.dungeon_guid)
  return dungeon_guid_;
}
void ServerSaveCustomDungeonRsp::set_dungeon_guid(::google::protobuf::uint64 value) {
  
  dungeon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerSaveCustomDungeonRsp.dungeon_guid)
}

// uint32 room_id = 3;
void ServerSaveCustomDungeonRsp::clear_room_id() {
  room_id_ = 0u;
}
::google::protobuf::uint32 ServerSaveCustomDungeonRsp::room_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerSaveCustomDungeonRsp.room_id)
  return room_id_;
}
void ServerSaveCustomDungeonRsp::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerSaveCustomDungeonRsp.room_id)
}

// uint32 version = 4;
void ServerSaveCustomDungeonRsp::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 ServerSaveCustomDungeonRsp::version() const {
  // @@protoc_insertion_point(field_get:proto.ServerSaveCustomDungeonRsp.version)
  return version_;
}
void ServerSaveCustomDungeonRsp::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerSaveCustomDungeonRsp.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPublishCustomDungeonReq::kDungeonGuidFieldNumber;
const int ServerPublishCustomDungeonReq::kAbstractFieldNumber;
const int ServerPublishCustomDungeonReq::kDeployScoreFieldNumber;
const int ServerPublishCustomDungeonReq::kCreatorNicknameFieldNumber;
const int ServerPublishCustomDungeonReq::kGroupIdFieldNumber;
const int ServerPublishCustomDungeonReq::kUidFieldNumber;
const int ServerPublishCustomDungeonReq::kLangFieldNumber;
const int ServerPublishCustomDungeonReq::kTagListFieldNumber;
const int ServerPublishCustomDungeonReq::kIsPsnPlatformFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPublishCustomDungeonReq::ServerPublishCustomDungeonReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerPublishCustomDungeonReq)
}
ServerPublishCustomDungeonReq::ServerPublishCustomDungeonReq(const ServerPublishCustomDungeonReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tag_list_(from.tag_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  creator_nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.creator_nickname().size() > 0) {
    creator_nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creator_nickname_);
  }
  if (from.has_abstract()) {
    abstract_ = new ::proto::CustomDungeonAbstractBin(*from.abstract_);
  } else {
    abstract_ = NULL;
  }
  ::memcpy(&dungeon_guid_, &from.dungeon_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_psn_platform_) -
    reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(is_psn_platform_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerPublishCustomDungeonReq)
}

void ServerPublishCustomDungeonReq::SharedCtor() {
  creator_nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&abstract_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_psn_platform_) -
      reinterpret_cast<char*>(&abstract_)) + sizeof(is_psn_platform_));
  _cached_size_ = 0;
}

ServerPublishCustomDungeonReq::~ServerPublishCustomDungeonReq() {
  // @@protoc_insertion_point(destructor:proto.ServerPublishCustomDungeonReq)
  SharedDtor();
}

void ServerPublishCustomDungeonReq::SharedDtor() {
  creator_nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete abstract_;
}

void ServerPublishCustomDungeonReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerPublishCustomDungeonReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPublishCustomDungeonReq& ServerPublishCustomDungeonReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerPublishCustomDungeonReq* ServerPublishCustomDungeonReq::New(::google::protobuf::Arena* arena) const {
  ServerPublishCustomDungeonReq* n = new ServerPublishCustomDungeonReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerPublishCustomDungeonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerPublishCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tag_list_.Clear();
  creator_nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && abstract_ != NULL) {
    delete abstract_;
  }
  abstract_ = NULL;
  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_psn_platform_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(is_psn_platform_));
  _internal_metadata_.Clear();
}

bool ServerPublishCustomDungeonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerPublishCustomDungeonReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dungeon_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dungeon_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CustomDungeonAbstractBin abstract = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_abstract()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 deploy_score = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deploy_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string creator_nickname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creator_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->creator_nickname().data(), static_cast<int>(this->creator_nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.ServerPublishCustomDungeonReq.creator_nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 lang = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lang_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 tag_list = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_tag_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 66u, input, this->mutable_tag_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_psn_platform = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_psn_platform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerPublishCustomDungeonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerPublishCustomDungeonReq)
  return false;
#undef DO_
}

void ServerPublishCustomDungeonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerPublishCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dungeon_guid(), output);
  }

  // .proto.CustomDungeonAbstractBin abstract = 2;
  if (this->has_abstract()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->abstract_, output);
  }

  // uint32 deploy_score = 3;
  if (this->deploy_score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->deploy_score(), output);
  }

  // string creator_nickname = 4;
  if (this->creator_nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->creator_nickname().data(), static_cast<int>(this->creator_nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ServerPublishCustomDungeonReq.creator_nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->creator_nickname(), output);
  }

  // uint32 group_id = 5;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->group_id(), output);
  }

  // uint32 uid = 6;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->uid(), output);
  }

  // uint32 lang = 7;
  if (this->lang() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->lang(), output);
  }

  // repeated uint32 tag_list = 8;
  if (this->tag_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _tag_list_cached_byte_size_));
  }
  for (int i = 0, n = this->tag_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->tag_list(i), output);
  }

  // bool is_psn_platform = 9;
  if (this->is_psn_platform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_psn_platform(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerPublishCustomDungeonReq)
}

::google::protobuf::uint8* ServerPublishCustomDungeonReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerPublishCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dungeon_guid(), target);
  }

  // .proto.CustomDungeonAbstractBin abstract = 2;
  if (this->has_abstract()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->abstract_, deterministic, target);
  }

  // uint32 deploy_score = 3;
  if (this->deploy_score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->deploy_score(), target);
  }

  // string creator_nickname = 4;
  if (this->creator_nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->creator_nickname().data(), static_cast<int>(this->creator_nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.ServerPublishCustomDungeonReq.creator_nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->creator_nickname(), target);
  }

  // uint32 group_id = 5;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->group_id(), target);
  }

  // uint32 uid = 6;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->uid(), target);
  }

  // uint32 lang = 7;
  if (this->lang() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->lang(), target);
  }

  // repeated uint32 tag_list = 8;
  if (this->tag_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _tag_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->tag_list_, target);
  }

  // bool is_psn_platform = 9;
  if (this->is_psn_platform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_psn_platform(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerPublishCustomDungeonReq)
  return target;
}

size_t ServerPublishCustomDungeonReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerPublishCustomDungeonReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 tag_list = 8;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->tag_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tag_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string creator_nickname = 4;
  if (this->creator_nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creator_nickname());
  }

  // .proto.CustomDungeonAbstractBin abstract = 2;
  if (this->has_abstract()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->abstract_);
  }

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dungeon_guid());
  }

  // uint32 deploy_score = 3;
  if (this->deploy_score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->deploy_score());
  }

  // uint32 group_id = 5;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 uid = 6;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 lang = 7;
  if (this->lang() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lang());
  }

  // bool is_psn_platform = 9;
  if (this->is_psn_platform() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerPublishCustomDungeonReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerPublishCustomDungeonReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPublishCustomDungeonReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPublishCustomDungeonReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerPublishCustomDungeonReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerPublishCustomDungeonReq)
    MergeFrom(*source);
  }
}

void ServerPublishCustomDungeonReq::MergeFrom(const ServerPublishCustomDungeonReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerPublishCustomDungeonReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tag_list_.MergeFrom(from.tag_list_);
  if (from.creator_nickname().size() > 0) {

    creator_nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creator_nickname_);
  }
  if (from.has_abstract()) {
    mutable_abstract()->::proto::CustomDungeonAbstractBin::MergeFrom(from.abstract());
  }
  if (from.dungeon_guid() != 0) {
    set_dungeon_guid(from.dungeon_guid());
  }
  if (from.deploy_score() != 0) {
    set_deploy_score(from.deploy_score());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.lang() != 0) {
    set_lang(from.lang());
  }
  if (from.is_psn_platform() != 0) {
    set_is_psn_platform(from.is_psn_platform());
  }
}

void ServerPublishCustomDungeonReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerPublishCustomDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPublishCustomDungeonReq::CopyFrom(const ServerPublishCustomDungeonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerPublishCustomDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPublishCustomDungeonReq::IsInitialized() const {
  return true;
}

void ServerPublishCustomDungeonReq::Swap(ServerPublishCustomDungeonReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPublishCustomDungeonReq::InternalSwap(ServerPublishCustomDungeonReq* other) {
  using std::swap;
  tag_list_.InternalSwap(&other->tag_list_);
  creator_nickname_.Swap(&other->creator_nickname_);
  swap(abstract_, other->abstract_);
  swap(dungeon_guid_, other->dungeon_guid_);
  swap(deploy_score_, other->deploy_score_);
  swap(group_id_, other->group_id_);
  swap(uid_, other->uid_);
  swap(lang_, other->lang_);
  swap(is_psn_platform_, other->is_psn_platform_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerPublishCustomDungeonReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerPublishCustomDungeonReq

// uint64 dungeon_guid = 1;
void ServerPublishCustomDungeonReq::clear_dungeon_guid() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerPublishCustomDungeonReq::dungeon_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishCustomDungeonReq.dungeon_guid)
  return dungeon_guid_;
}
void ServerPublishCustomDungeonReq::set_dungeon_guid(::google::protobuf::uint64 value) {
  
  dungeon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishCustomDungeonReq.dungeon_guid)
}

// .proto.CustomDungeonAbstractBin abstract = 2;
bool ServerPublishCustomDungeonReq::has_abstract() const {
  return this != internal_default_instance() && abstract_ != NULL;
}
void ServerPublishCustomDungeonReq::clear_abstract() {
  if (GetArenaNoVirtual() == NULL && abstract_ != NULL) delete abstract_;
  abstract_ = NULL;
}
const ::proto::CustomDungeonAbstractBin& ServerPublishCustomDungeonReq::abstract() const {
  const ::proto::CustomDungeonAbstractBin* p = abstract_;
  // @@protoc_insertion_point(field_get:proto.ServerPublishCustomDungeonReq.abstract)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CustomDungeonAbstractBin*>(
      &::proto::_CustomDungeonAbstractBin_default_instance_);
}
::proto::CustomDungeonAbstractBin* ServerPublishCustomDungeonReq::mutable_abstract() {
  
  if (abstract_ == NULL) {
    abstract_ = new ::proto::CustomDungeonAbstractBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerPublishCustomDungeonReq.abstract)
  return abstract_;
}
::proto::CustomDungeonAbstractBin* ServerPublishCustomDungeonReq::release_abstract() {
  // @@protoc_insertion_point(field_release:proto.ServerPublishCustomDungeonReq.abstract)
  
  ::proto::CustomDungeonAbstractBin* temp = abstract_;
  abstract_ = NULL;
  return temp;
}
void ServerPublishCustomDungeonReq::set_allocated_abstract(::proto::CustomDungeonAbstractBin* abstract) {
  delete abstract_;
  abstract_ = abstract;
  if (abstract) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerPublishCustomDungeonReq.abstract)
}

// uint32 deploy_score = 3;
void ServerPublishCustomDungeonReq::clear_deploy_score() {
  deploy_score_ = 0u;
}
::google::protobuf::uint32 ServerPublishCustomDungeonReq::deploy_score() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishCustomDungeonReq.deploy_score)
  return deploy_score_;
}
void ServerPublishCustomDungeonReq::set_deploy_score(::google::protobuf::uint32 value) {
  
  deploy_score_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishCustomDungeonReq.deploy_score)
}

// string creator_nickname = 4;
void ServerPublishCustomDungeonReq::clear_creator_nickname() {
  creator_nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ServerPublishCustomDungeonReq::creator_nickname() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishCustomDungeonReq.creator_nickname)
  return creator_nickname_.GetNoArena();
}
void ServerPublishCustomDungeonReq::set_creator_nickname(const ::std::string& value) {
  
  creator_nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ServerPublishCustomDungeonReq.creator_nickname)
}
#if LANG_CXX11
void ServerPublishCustomDungeonReq::set_creator_nickname(::std::string&& value) {
  
  creator_nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ServerPublishCustomDungeonReq.creator_nickname)
}
#endif
void ServerPublishCustomDungeonReq::set_creator_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  creator_nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ServerPublishCustomDungeonReq.creator_nickname)
}
void ServerPublishCustomDungeonReq::set_creator_nickname(const char* value, size_t size) {
  
  creator_nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ServerPublishCustomDungeonReq.creator_nickname)
}
::std::string* ServerPublishCustomDungeonReq::mutable_creator_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.ServerPublishCustomDungeonReq.creator_nickname)
  return creator_nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ServerPublishCustomDungeonReq::release_creator_nickname() {
  // @@protoc_insertion_point(field_release:proto.ServerPublishCustomDungeonReq.creator_nickname)
  
  return creator_nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ServerPublishCustomDungeonReq::set_allocated_creator_nickname(::std::string* creator_nickname) {
  if (creator_nickname != NULL) {
    
  } else {
    
  }
  creator_nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creator_nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.ServerPublishCustomDungeonReq.creator_nickname)
}

// uint32 group_id = 5;
void ServerPublishCustomDungeonReq::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 ServerPublishCustomDungeonReq::group_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishCustomDungeonReq.group_id)
  return group_id_;
}
void ServerPublishCustomDungeonReq::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishCustomDungeonReq.group_id)
}

// uint32 uid = 6;
void ServerPublishCustomDungeonReq::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 ServerPublishCustomDungeonReq::uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishCustomDungeonReq.uid)
  return uid_;
}
void ServerPublishCustomDungeonReq::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishCustomDungeonReq.uid)
}

// uint32 lang = 7;
void ServerPublishCustomDungeonReq::clear_lang() {
  lang_ = 0u;
}
::google::protobuf::uint32 ServerPublishCustomDungeonReq::lang() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishCustomDungeonReq.lang)
  return lang_;
}
void ServerPublishCustomDungeonReq::set_lang(::google::protobuf::uint32 value) {
  
  lang_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishCustomDungeonReq.lang)
}

// repeated uint32 tag_list = 8;
int ServerPublishCustomDungeonReq::tag_list_size() const {
  return tag_list_.size();
}
void ServerPublishCustomDungeonReq::clear_tag_list() {
  tag_list_.Clear();
}
::google::protobuf::uint32 ServerPublishCustomDungeonReq::tag_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishCustomDungeonReq.tag_list)
  return tag_list_.Get(index);
}
void ServerPublishCustomDungeonReq::set_tag_list(int index, ::google::protobuf::uint32 value) {
  tag_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerPublishCustomDungeonReq.tag_list)
}
void ServerPublishCustomDungeonReq::add_tag_list(::google::protobuf::uint32 value) {
  tag_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerPublishCustomDungeonReq.tag_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerPublishCustomDungeonReq::tag_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerPublishCustomDungeonReq.tag_list)
  return tag_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerPublishCustomDungeonReq::mutable_tag_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerPublishCustomDungeonReq.tag_list)
  return &tag_list_;
}

// bool is_psn_platform = 9;
void ServerPublishCustomDungeonReq::clear_is_psn_platform() {
  is_psn_platform_ = false;
}
bool ServerPublishCustomDungeonReq::is_psn_platform() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishCustomDungeonReq.is_psn_platform)
  return is_psn_platform_;
}
void ServerPublishCustomDungeonReq::set_is_psn_platform(bool value) {
  
  is_psn_platform_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishCustomDungeonReq.is_psn_platform)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPublishCustomDungeonRsp::kRetcodeFieldNumber;
const int ServerPublishCustomDungeonRsp::kDungeonGuidFieldNumber;
const int ServerPublishCustomDungeonRsp::kPublishTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPublishCustomDungeonRsp::ServerPublishCustomDungeonRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerPublishCustomDungeonRsp)
}
ServerPublishCustomDungeonRsp::ServerPublishCustomDungeonRsp(const ServerPublishCustomDungeonRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dungeon_guid_, &from.dungeon_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&publish_time_) -
    reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(publish_time_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerPublishCustomDungeonRsp)
}

void ServerPublishCustomDungeonRsp::SharedCtor() {
  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&publish_time_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(publish_time_));
  _cached_size_ = 0;
}

ServerPublishCustomDungeonRsp::~ServerPublishCustomDungeonRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerPublishCustomDungeonRsp)
  SharedDtor();
}

void ServerPublishCustomDungeonRsp::SharedDtor() {
}

void ServerPublishCustomDungeonRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerPublishCustomDungeonRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPublishCustomDungeonRsp& ServerPublishCustomDungeonRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerPublishCustomDungeonRsp* ServerPublishCustomDungeonRsp::New(::google::protobuf::Arena* arena) const {
  ServerPublishCustomDungeonRsp* n = new ServerPublishCustomDungeonRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerPublishCustomDungeonRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerPublishCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&publish_time_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(publish_time_));
  _internal_metadata_.Clear();
}

bool ServerPublishCustomDungeonRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerPublishCustomDungeonRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dungeon_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dungeon_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 publish_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &publish_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerPublishCustomDungeonRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerPublishCustomDungeonRsp)
  return false;
#undef DO_
}

void ServerPublishCustomDungeonRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerPublishCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint64 dungeon_guid = 2;
  if (this->dungeon_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dungeon_guid(), output);
  }

  // uint32 publish_time = 3;
  if (this->publish_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->publish_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerPublishCustomDungeonRsp)
}

::google::protobuf::uint8* ServerPublishCustomDungeonRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerPublishCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint64 dungeon_guid = 2;
  if (this->dungeon_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dungeon_guid(), target);
  }

  // uint32 publish_time = 3;
  if (this->publish_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->publish_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerPublishCustomDungeonRsp)
  return target;
}

size_t ServerPublishCustomDungeonRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerPublishCustomDungeonRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 dungeon_guid = 2;
  if (this->dungeon_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dungeon_guid());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 publish_time = 3;
  if (this->publish_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->publish_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerPublishCustomDungeonRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerPublishCustomDungeonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPublishCustomDungeonRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPublishCustomDungeonRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerPublishCustomDungeonRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerPublishCustomDungeonRsp)
    MergeFrom(*source);
  }
}

void ServerPublishCustomDungeonRsp::MergeFrom(const ServerPublishCustomDungeonRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerPublishCustomDungeonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dungeon_guid() != 0) {
    set_dungeon_guid(from.dungeon_guid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.publish_time() != 0) {
    set_publish_time(from.publish_time());
  }
}

void ServerPublishCustomDungeonRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerPublishCustomDungeonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPublishCustomDungeonRsp::CopyFrom(const ServerPublishCustomDungeonRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerPublishCustomDungeonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPublishCustomDungeonRsp::IsInitialized() const {
  return true;
}

void ServerPublishCustomDungeonRsp::Swap(ServerPublishCustomDungeonRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPublishCustomDungeonRsp::InternalSwap(ServerPublishCustomDungeonRsp* other) {
  using std::swap;
  swap(dungeon_guid_, other->dungeon_guid_);
  swap(retcode_, other->retcode_);
  swap(publish_time_, other->publish_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerPublishCustomDungeonRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerPublishCustomDungeonRsp

// int32 retcode = 1;
void ServerPublishCustomDungeonRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerPublishCustomDungeonRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishCustomDungeonRsp.retcode)
  return retcode_;
}
void ServerPublishCustomDungeonRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishCustomDungeonRsp.retcode)
}

// uint64 dungeon_guid = 2;
void ServerPublishCustomDungeonRsp::clear_dungeon_guid() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerPublishCustomDungeonRsp::dungeon_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishCustomDungeonRsp.dungeon_guid)
  return dungeon_guid_;
}
void ServerPublishCustomDungeonRsp::set_dungeon_guid(::google::protobuf::uint64 value) {
  
  dungeon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishCustomDungeonRsp.dungeon_guid)
}

// uint32 publish_time = 3;
void ServerPublishCustomDungeonRsp::clear_publish_time() {
  publish_time_ = 0u;
}
::google::protobuf::uint32 ServerPublishCustomDungeonRsp::publish_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishCustomDungeonRsp.publish_time)
  return publish_time_;
}
void ServerPublishCustomDungeonRsp::set_publish_time(::google::protobuf::uint32 value) {
  
  publish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishCustomDungeonRsp.publish_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRemoveCustomDungeonReq::kDungeonGuidFieldNumber;
const int ServerRemoveCustomDungeonReq::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRemoveCustomDungeonReq::ServerRemoveCustomDungeonReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerRemoveCustomDungeonReq)
}
ServerRemoveCustomDungeonReq::ServerRemoveCustomDungeonReq(const ServerRemoveCustomDungeonReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dungeon_guid_, &from.dungeon_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&group_id_) -
    reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(group_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerRemoveCustomDungeonReq)
}

void ServerRemoveCustomDungeonReq::SharedCtor() {
  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(group_id_));
  _cached_size_ = 0;
}

ServerRemoveCustomDungeonReq::~ServerRemoveCustomDungeonReq() {
  // @@protoc_insertion_point(destructor:proto.ServerRemoveCustomDungeonReq)
  SharedDtor();
}

void ServerRemoveCustomDungeonReq::SharedDtor() {
}

void ServerRemoveCustomDungeonReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRemoveCustomDungeonReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRemoveCustomDungeonReq& ServerRemoveCustomDungeonReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerRemoveCustomDungeonReq* ServerRemoveCustomDungeonReq::New(::google::protobuf::Arena* arena) const {
  ServerRemoveCustomDungeonReq* n = new ServerRemoveCustomDungeonReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerRemoveCustomDungeonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerRemoveCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&group_id_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(group_id_));
  _internal_metadata_.Clear();
}

bool ServerRemoveCustomDungeonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerRemoveCustomDungeonReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dungeon_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dungeon_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerRemoveCustomDungeonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerRemoveCustomDungeonReq)
  return false;
#undef DO_
}

void ServerRemoveCustomDungeonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerRemoveCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dungeon_guid(), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerRemoveCustomDungeonReq)
}

::google::protobuf::uint8* ServerRemoveCustomDungeonReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerRemoveCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dungeon_guid(), target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerRemoveCustomDungeonReq)
  return target;
}

size_t ServerRemoveCustomDungeonReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerRemoveCustomDungeonReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dungeon_guid());
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRemoveCustomDungeonReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerRemoveCustomDungeonReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRemoveCustomDungeonReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRemoveCustomDungeonReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerRemoveCustomDungeonReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerRemoveCustomDungeonReq)
    MergeFrom(*source);
  }
}

void ServerRemoveCustomDungeonReq::MergeFrom(const ServerRemoveCustomDungeonReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerRemoveCustomDungeonReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dungeon_guid() != 0) {
    set_dungeon_guid(from.dungeon_guid());
  }
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
}

void ServerRemoveCustomDungeonReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerRemoveCustomDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRemoveCustomDungeonReq::CopyFrom(const ServerRemoveCustomDungeonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerRemoveCustomDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRemoveCustomDungeonReq::IsInitialized() const {
  return true;
}

void ServerRemoveCustomDungeonReq::Swap(ServerRemoveCustomDungeonReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRemoveCustomDungeonReq::InternalSwap(ServerRemoveCustomDungeonReq* other) {
  using std::swap;
  swap(dungeon_guid_, other->dungeon_guid_);
  swap(group_id_, other->group_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerRemoveCustomDungeonReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerRemoveCustomDungeonReq

// uint64 dungeon_guid = 1;
void ServerRemoveCustomDungeonReq::clear_dungeon_guid() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerRemoveCustomDungeonReq::dungeon_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerRemoveCustomDungeonReq.dungeon_guid)
  return dungeon_guid_;
}
void ServerRemoveCustomDungeonReq::set_dungeon_guid(::google::protobuf::uint64 value) {
  
  dungeon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerRemoveCustomDungeonReq.dungeon_guid)
}

// uint32 group_id = 2;
void ServerRemoveCustomDungeonReq::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 ServerRemoveCustomDungeonReq::group_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerRemoveCustomDungeonReq.group_id)
  return group_id_;
}
void ServerRemoveCustomDungeonReq::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerRemoveCustomDungeonReq.group_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerRemoveCustomDungeonRsp::kRetcodeFieldNumber;
const int ServerRemoveCustomDungeonRsp::kDungeonGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerRemoveCustomDungeonRsp::ServerRemoveCustomDungeonRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerRemoveCustomDungeonRsp)
}
ServerRemoveCustomDungeonRsp::ServerRemoveCustomDungeonRsp(const ServerRemoveCustomDungeonRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dungeon_guid_, &from.dungeon_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(retcode_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerRemoveCustomDungeonRsp)
}

void ServerRemoveCustomDungeonRsp::SharedCtor() {
  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

ServerRemoveCustomDungeonRsp::~ServerRemoveCustomDungeonRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerRemoveCustomDungeonRsp)
  SharedDtor();
}

void ServerRemoveCustomDungeonRsp::SharedDtor() {
}

void ServerRemoveCustomDungeonRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerRemoveCustomDungeonRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerRemoveCustomDungeonRsp& ServerRemoveCustomDungeonRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerRemoveCustomDungeonRsp* ServerRemoveCustomDungeonRsp::New(::google::protobuf::Arena* arena) const {
  ServerRemoveCustomDungeonRsp* n = new ServerRemoveCustomDungeonRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerRemoveCustomDungeonRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerRemoveCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(retcode_));
  _internal_metadata_.Clear();
}

bool ServerRemoveCustomDungeonRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerRemoveCustomDungeonRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 dungeon_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dungeon_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerRemoveCustomDungeonRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerRemoveCustomDungeonRsp)
  return false;
#undef DO_
}

void ServerRemoveCustomDungeonRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerRemoveCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint64 dungeon_guid = 2;
  if (this->dungeon_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->dungeon_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerRemoveCustomDungeonRsp)
}

::google::protobuf::uint8* ServerRemoveCustomDungeonRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerRemoveCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint64 dungeon_guid = 2;
  if (this->dungeon_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->dungeon_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerRemoveCustomDungeonRsp)
  return target;
}

size_t ServerRemoveCustomDungeonRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerRemoveCustomDungeonRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 dungeon_guid = 2;
  if (this->dungeon_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dungeon_guid());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerRemoveCustomDungeonRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerRemoveCustomDungeonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerRemoveCustomDungeonRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerRemoveCustomDungeonRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerRemoveCustomDungeonRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerRemoveCustomDungeonRsp)
    MergeFrom(*source);
  }
}

void ServerRemoveCustomDungeonRsp::MergeFrom(const ServerRemoveCustomDungeonRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerRemoveCustomDungeonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dungeon_guid() != 0) {
    set_dungeon_guid(from.dungeon_guid());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerRemoveCustomDungeonRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerRemoveCustomDungeonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerRemoveCustomDungeonRsp::CopyFrom(const ServerRemoveCustomDungeonRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerRemoveCustomDungeonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerRemoveCustomDungeonRsp::IsInitialized() const {
  return true;
}

void ServerRemoveCustomDungeonRsp::Swap(ServerRemoveCustomDungeonRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerRemoveCustomDungeonRsp::InternalSwap(ServerRemoveCustomDungeonRsp* other) {
  using std::swap;
  swap(dungeon_guid_, other->dungeon_guid_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerRemoveCustomDungeonRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerRemoveCustomDungeonRsp

// int32 retcode = 1;
void ServerRemoveCustomDungeonRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerRemoveCustomDungeonRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerRemoveCustomDungeonRsp.retcode)
  return retcode_;
}
void ServerRemoveCustomDungeonRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerRemoveCustomDungeonRsp.retcode)
}

// uint64 dungeon_guid = 2;
void ServerRemoveCustomDungeonRsp::clear_dungeon_guid() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerRemoveCustomDungeonRsp::dungeon_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerRemoveCustomDungeonRsp.dungeon_guid)
  return dungeon_guid_;
}
void ServerRemoveCustomDungeonRsp::set_dungeon_guid(::google::protobuf::uint64 value) {
  
  dungeon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerRemoveCustomDungeonRsp.dungeon_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerUpdateCustomDungeonSocialNotify::kDungeonGuidFieldNumber;
const int ServerUpdateCustomDungeonSocialNotify::kUpdateTypeFieldNumber;
const int ServerUpdateCustomDungeonSocialNotify::kIsCancelStoreFieldNumber;
const int ServerUpdateCustomDungeonSocialNotify::kIsCancelLikeFieldNumber;
const int ServerUpdateCustomDungeonSocialNotify::kIsWinFieldNumber;
const int ServerUpdateCustomDungeonSocialNotify::kIsEverLikedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerUpdateCustomDungeonSocialNotify::ServerUpdateCustomDungeonSocialNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerUpdateCustomDungeonSocialNotify)
}
ServerUpdateCustomDungeonSocialNotify::ServerUpdateCustomDungeonSocialNotify(const ServerUpdateCustomDungeonSocialNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dungeon_guid_, &from.dungeon_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_ever_liked_) -
    reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(is_ever_liked_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerUpdateCustomDungeonSocialNotify)
}

void ServerUpdateCustomDungeonSocialNotify::SharedCtor() {
  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ever_liked_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(is_ever_liked_));
  _cached_size_ = 0;
}

ServerUpdateCustomDungeonSocialNotify::~ServerUpdateCustomDungeonSocialNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerUpdateCustomDungeonSocialNotify)
  SharedDtor();
}

void ServerUpdateCustomDungeonSocialNotify::SharedDtor() {
}

void ServerUpdateCustomDungeonSocialNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerUpdateCustomDungeonSocialNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerUpdateCustomDungeonSocialNotify& ServerUpdateCustomDungeonSocialNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerUpdateCustomDungeonSocialNotify* ServerUpdateCustomDungeonSocialNotify::New(::google::protobuf::Arena* arena) const {
  ServerUpdateCustomDungeonSocialNotify* n = new ServerUpdateCustomDungeonSocialNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerUpdateCustomDungeonSocialNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerUpdateCustomDungeonSocialNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_ever_liked_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(is_ever_liked_));
  _internal_metadata_.Clear();
}

bool ServerUpdateCustomDungeonSocialNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerUpdateCustomDungeonSocialNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dungeon_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dungeon_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CustomDungeonSocialUpdateType update_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_update_type(static_cast< ::proto::CustomDungeonSocialUpdateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_cancel_store = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_cancel_store_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_cancel_like = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_cancel_like_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_win = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_win_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_ever_liked = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ever_liked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerUpdateCustomDungeonSocialNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerUpdateCustomDungeonSocialNotify)
  return false;
#undef DO_
}

void ServerUpdateCustomDungeonSocialNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerUpdateCustomDungeonSocialNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dungeon_guid(), output);
  }

  // .proto.CustomDungeonSocialUpdateType update_type = 2;
  if (this->update_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->update_type(), output);
  }

  // bool is_cancel_store = 3;
  if (this->is_cancel_store() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_cancel_store(), output);
  }

  // bool is_cancel_like = 4;
  if (this->is_cancel_like() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_cancel_like(), output);
  }

  // bool is_win = 5;
  if (this->is_win() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_win(), output);
  }

  // bool is_ever_liked = 6;
  if (this->is_ever_liked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_ever_liked(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerUpdateCustomDungeonSocialNotify)
}

::google::protobuf::uint8* ServerUpdateCustomDungeonSocialNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerUpdateCustomDungeonSocialNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dungeon_guid(), target);
  }

  // .proto.CustomDungeonSocialUpdateType update_type = 2;
  if (this->update_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->update_type(), target);
  }

  // bool is_cancel_store = 3;
  if (this->is_cancel_store() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_cancel_store(), target);
  }

  // bool is_cancel_like = 4;
  if (this->is_cancel_like() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_cancel_like(), target);
  }

  // bool is_win = 5;
  if (this->is_win() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_win(), target);
  }

  // bool is_ever_liked = 6;
  if (this->is_ever_liked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_ever_liked(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerUpdateCustomDungeonSocialNotify)
  return target;
}

size_t ServerUpdateCustomDungeonSocialNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerUpdateCustomDungeonSocialNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dungeon_guid());
  }

  // .proto.CustomDungeonSocialUpdateType update_type = 2;
  if (this->update_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->update_type());
  }

  // bool is_cancel_store = 3;
  if (this->is_cancel_store() != 0) {
    total_size += 1 + 1;
  }

  // bool is_cancel_like = 4;
  if (this->is_cancel_like() != 0) {
    total_size += 1 + 1;
  }

  // bool is_win = 5;
  if (this->is_win() != 0) {
    total_size += 1 + 1;
  }

  // bool is_ever_liked = 6;
  if (this->is_ever_liked() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerUpdateCustomDungeonSocialNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerUpdateCustomDungeonSocialNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerUpdateCustomDungeonSocialNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerUpdateCustomDungeonSocialNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerUpdateCustomDungeonSocialNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerUpdateCustomDungeonSocialNotify)
    MergeFrom(*source);
  }
}

void ServerUpdateCustomDungeonSocialNotify::MergeFrom(const ServerUpdateCustomDungeonSocialNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerUpdateCustomDungeonSocialNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dungeon_guid() != 0) {
    set_dungeon_guid(from.dungeon_guid());
  }
  if (from.update_type() != 0) {
    set_update_type(from.update_type());
  }
  if (from.is_cancel_store() != 0) {
    set_is_cancel_store(from.is_cancel_store());
  }
  if (from.is_cancel_like() != 0) {
    set_is_cancel_like(from.is_cancel_like());
  }
  if (from.is_win() != 0) {
    set_is_win(from.is_win());
  }
  if (from.is_ever_liked() != 0) {
    set_is_ever_liked(from.is_ever_liked());
  }
}

void ServerUpdateCustomDungeonSocialNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerUpdateCustomDungeonSocialNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerUpdateCustomDungeonSocialNotify::CopyFrom(const ServerUpdateCustomDungeonSocialNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerUpdateCustomDungeonSocialNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerUpdateCustomDungeonSocialNotify::IsInitialized() const {
  return true;
}

void ServerUpdateCustomDungeonSocialNotify::Swap(ServerUpdateCustomDungeonSocialNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerUpdateCustomDungeonSocialNotify::InternalSwap(ServerUpdateCustomDungeonSocialNotify* other) {
  using std::swap;
  swap(dungeon_guid_, other->dungeon_guid_);
  swap(update_type_, other->update_type_);
  swap(is_cancel_store_, other->is_cancel_store_);
  swap(is_cancel_like_, other->is_cancel_like_);
  swap(is_win_, other->is_win_);
  swap(is_ever_liked_, other->is_ever_liked_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerUpdateCustomDungeonSocialNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerUpdateCustomDungeonSocialNotify

// uint64 dungeon_guid = 1;
void ServerUpdateCustomDungeonSocialNotify::clear_dungeon_guid() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerUpdateCustomDungeonSocialNotify::dungeon_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerUpdateCustomDungeonSocialNotify.dungeon_guid)
  return dungeon_guid_;
}
void ServerUpdateCustomDungeonSocialNotify::set_dungeon_guid(::google::protobuf::uint64 value) {
  
  dungeon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerUpdateCustomDungeonSocialNotify.dungeon_guid)
}

// .proto.CustomDungeonSocialUpdateType update_type = 2;
void ServerUpdateCustomDungeonSocialNotify::clear_update_type() {
  update_type_ = 0;
}
::proto::CustomDungeonSocialUpdateType ServerUpdateCustomDungeonSocialNotify::update_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerUpdateCustomDungeonSocialNotify.update_type)
  return static_cast< ::proto::CustomDungeonSocialUpdateType >(update_type_);
}
void ServerUpdateCustomDungeonSocialNotify::set_update_type(::proto::CustomDungeonSocialUpdateType value) {
  
  update_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerUpdateCustomDungeonSocialNotify.update_type)
}

// bool is_cancel_store = 3;
void ServerUpdateCustomDungeonSocialNotify::clear_is_cancel_store() {
  is_cancel_store_ = false;
}
bool ServerUpdateCustomDungeonSocialNotify::is_cancel_store() const {
  // @@protoc_insertion_point(field_get:proto.ServerUpdateCustomDungeonSocialNotify.is_cancel_store)
  return is_cancel_store_;
}
void ServerUpdateCustomDungeonSocialNotify::set_is_cancel_store(bool value) {
  
  is_cancel_store_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerUpdateCustomDungeonSocialNotify.is_cancel_store)
}

// bool is_cancel_like = 4;
void ServerUpdateCustomDungeonSocialNotify::clear_is_cancel_like() {
  is_cancel_like_ = false;
}
bool ServerUpdateCustomDungeonSocialNotify::is_cancel_like() const {
  // @@protoc_insertion_point(field_get:proto.ServerUpdateCustomDungeonSocialNotify.is_cancel_like)
  return is_cancel_like_;
}
void ServerUpdateCustomDungeonSocialNotify::set_is_cancel_like(bool value) {
  
  is_cancel_like_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerUpdateCustomDungeonSocialNotify.is_cancel_like)
}

// bool is_win = 5;
void ServerUpdateCustomDungeonSocialNotify::clear_is_win() {
  is_win_ = false;
}
bool ServerUpdateCustomDungeonSocialNotify::is_win() const {
  // @@protoc_insertion_point(field_get:proto.ServerUpdateCustomDungeonSocialNotify.is_win)
  return is_win_;
}
void ServerUpdateCustomDungeonSocialNotify::set_is_win(bool value) {
  
  is_win_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerUpdateCustomDungeonSocialNotify.is_win)
}

// bool is_ever_liked = 6;
void ServerUpdateCustomDungeonSocialNotify::clear_is_ever_liked() {
  is_ever_liked_ = false;
}
bool ServerUpdateCustomDungeonSocialNotify::is_ever_liked() const {
  // @@protoc_insertion_point(field_get:proto.ServerUpdateCustomDungeonSocialNotify.is_ever_liked)
  return is_ever_liked_;
}
void ServerUpdateCustomDungeonSocialNotify::set_is_ever_liked(bool value) {
  
  is_ever_liked_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerUpdateCustomDungeonSocialNotify.is_ever_liked)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetCustomDungeonBriefReq::kDungeonGuidListFieldNumber;
const int ServerGetCustomDungeonBriefReq::kGetTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetCustomDungeonBriefReq::ServerGetCustomDungeonBriefReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetCustomDungeonBriefReq)
}
ServerGetCustomDungeonBriefReq::ServerGetCustomDungeonBriefReq(const ServerGetCustomDungeonBriefReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dungeon_guid_list_(from.dungeon_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  get_type_ = from.get_type_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetCustomDungeonBriefReq)
}

void ServerGetCustomDungeonBriefReq::SharedCtor() {
  get_type_ = 0;
  _cached_size_ = 0;
}

ServerGetCustomDungeonBriefReq::~ServerGetCustomDungeonBriefReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetCustomDungeonBriefReq)
  SharedDtor();
}

void ServerGetCustomDungeonBriefReq::SharedDtor() {
}

void ServerGetCustomDungeonBriefReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetCustomDungeonBriefReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetCustomDungeonBriefReq& ServerGetCustomDungeonBriefReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetCustomDungeonBriefReq* ServerGetCustomDungeonBriefReq::New(::google::protobuf::Arena* arena) const {
  ServerGetCustomDungeonBriefReq* n = new ServerGetCustomDungeonBriefReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetCustomDungeonBriefReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetCustomDungeonBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dungeon_guid_list_.Clear();
  get_type_ = 0;
  _internal_metadata_.Clear();
}

bool ServerGetCustomDungeonBriefReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetCustomDungeonBriefReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 dungeon_guid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_dungeon_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_dungeon_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CustomDungeonBriefGetType get_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_get_type(static_cast< ::proto::CustomDungeonBriefGetType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetCustomDungeonBriefReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetCustomDungeonBriefReq)
  return false;
#undef DO_
}

void ServerGetCustomDungeonBriefReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetCustomDungeonBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 dungeon_guid_list = 1;
  if (this->dungeon_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dungeon_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->dungeon_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->dungeon_guid_list(i), output);
  }

  // .proto.CustomDungeonBriefGetType get_type = 2;
  if (this->get_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->get_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetCustomDungeonBriefReq)
}

::google::protobuf::uint8* ServerGetCustomDungeonBriefReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetCustomDungeonBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 dungeon_guid_list = 1;
  if (this->dungeon_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _dungeon_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->dungeon_guid_list_, target);
  }

  // .proto.CustomDungeonBriefGetType get_type = 2;
  if (this->get_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->get_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetCustomDungeonBriefReq)
  return target;
}

size_t ServerGetCustomDungeonBriefReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetCustomDungeonBriefReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 dungeon_guid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->dungeon_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dungeon_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.CustomDungeonBriefGetType get_type = 2;
  if (this->get_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->get_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetCustomDungeonBriefReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetCustomDungeonBriefReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetCustomDungeonBriefReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetCustomDungeonBriefReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetCustomDungeonBriefReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetCustomDungeonBriefReq)
    MergeFrom(*source);
  }
}

void ServerGetCustomDungeonBriefReq::MergeFrom(const ServerGetCustomDungeonBriefReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetCustomDungeonBriefReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dungeon_guid_list_.MergeFrom(from.dungeon_guid_list_);
  if (from.get_type() != 0) {
    set_get_type(from.get_type());
  }
}

void ServerGetCustomDungeonBriefReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetCustomDungeonBriefReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetCustomDungeonBriefReq::CopyFrom(const ServerGetCustomDungeonBriefReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetCustomDungeonBriefReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetCustomDungeonBriefReq::IsInitialized() const {
  return true;
}

void ServerGetCustomDungeonBriefReq::Swap(ServerGetCustomDungeonBriefReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetCustomDungeonBriefReq::InternalSwap(ServerGetCustomDungeonBriefReq* other) {
  using std::swap;
  dungeon_guid_list_.InternalSwap(&other->dungeon_guid_list_);
  swap(get_type_, other->get_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetCustomDungeonBriefReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetCustomDungeonBriefReq

// repeated uint64 dungeon_guid_list = 1;
int ServerGetCustomDungeonBriefReq::dungeon_guid_list_size() const {
  return dungeon_guid_list_.size();
}
void ServerGetCustomDungeonBriefReq::clear_dungeon_guid_list() {
  dungeon_guid_list_.Clear();
}
::google::protobuf::uint64 ServerGetCustomDungeonBriefReq::dungeon_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonBriefReq.dungeon_guid_list)
  return dungeon_guid_list_.Get(index);
}
void ServerGetCustomDungeonBriefReq::set_dungeon_guid_list(int index, ::google::protobuf::uint64 value) {
  dungeon_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetCustomDungeonBriefReq.dungeon_guid_list)
}
void ServerGetCustomDungeonBriefReq::add_dungeon_guid_list(::google::protobuf::uint64 value) {
  dungeon_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetCustomDungeonBriefReq.dungeon_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ServerGetCustomDungeonBriefReq::dungeon_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetCustomDungeonBriefReq.dungeon_guid_list)
  return dungeon_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ServerGetCustomDungeonBriefReq::mutable_dungeon_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetCustomDungeonBriefReq.dungeon_guid_list)
  return &dungeon_guid_list_;
}

// .proto.CustomDungeonBriefGetType get_type = 2;
void ServerGetCustomDungeonBriefReq::clear_get_type() {
  get_type_ = 0;
}
::proto::CustomDungeonBriefGetType ServerGetCustomDungeonBriefReq::get_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonBriefReq.get_type)
  return static_cast< ::proto::CustomDungeonBriefGetType >(get_type_);
}
void ServerGetCustomDungeonBriefReq::set_get_type(::proto::CustomDungeonBriefGetType value) {
  
  get_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetCustomDungeonBriefReq.get_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetCustomDungeonBriefRsp::kRetcodeFieldNumber;
const int ServerGetCustomDungeonBriefRsp::kDungeonGuidListFieldNumber;
const int ServerGetCustomDungeonBriefRsp::kDungeonBriefListFieldNumber;
const int ServerGetCustomDungeonBriefRsp::kGetTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetCustomDungeonBriefRsp::ServerGetCustomDungeonBriefRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetCustomDungeonBriefRsp)
}
ServerGetCustomDungeonBriefRsp::ServerGetCustomDungeonBriefRsp(const ServerGetCustomDungeonBriefRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dungeon_guid_list_(from.dungeon_guid_list_),
      dungeon_brief_list_(from.dungeon_brief_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&get_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(get_type_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetCustomDungeonBriefRsp)
}

void ServerGetCustomDungeonBriefRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&get_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(get_type_));
  _cached_size_ = 0;
}

ServerGetCustomDungeonBriefRsp::~ServerGetCustomDungeonBriefRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetCustomDungeonBriefRsp)
  SharedDtor();
}

void ServerGetCustomDungeonBriefRsp::SharedDtor() {
}

void ServerGetCustomDungeonBriefRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetCustomDungeonBriefRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetCustomDungeonBriefRsp& ServerGetCustomDungeonBriefRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetCustomDungeonBriefRsp* ServerGetCustomDungeonBriefRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetCustomDungeonBriefRsp* n = new ServerGetCustomDungeonBriefRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetCustomDungeonBriefRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetCustomDungeonBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dungeon_guid_list_.Clear();
  dungeon_brief_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&get_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(get_type_));
  _internal_metadata_.Clear();
}

bool ServerGetCustomDungeonBriefRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetCustomDungeonBriefRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 dungeon_guid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_dungeon_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_dungeon_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.CustomDungeonBriefRedisData dungeon_brief_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dungeon_brief_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CustomDungeonBriefGetType get_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_get_type(static_cast< ::proto::CustomDungeonBriefGetType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetCustomDungeonBriefRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetCustomDungeonBriefRsp)
  return false;
#undef DO_
}

void ServerGetCustomDungeonBriefRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetCustomDungeonBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated uint64 dungeon_guid_list = 2;
  if (this->dungeon_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dungeon_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->dungeon_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->dungeon_guid_list(i), output);
  }

  // repeated .proto.CustomDungeonBriefRedisData dungeon_brief_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dungeon_brief_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dungeon_brief_list(static_cast<int>(i)), output);
  }

  // .proto.CustomDungeonBriefGetType get_type = 4;
  if (this->get_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->get_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetCustomDungeonBriefRsp)
}

::google::protobuf::uint8* ServerGetCustomDungeonBriefRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetCustomDungeonBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated uint64 dungeon_guid_list = 2;
  if (this->dungeon_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _dungeon_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->dungeon_guid_list_, target);
  }

  // repeated .proto.CustomDungeonBriefRedisData dungeon_brief_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dungeon_brief_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->dungeon_brief_list(static_cast<int>(i)), deterministic, target);
  }

  // .proto.CustomDungeonBriefGetType get_type = 4;
  if (this->get_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->get_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetCustomDungeonBriefRsp)
  return target;
}

size_t ServerGetCustomDungeonBriefRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetCustomDungeonBriefRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 dungeon_guid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->dungeon_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dungeon_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.CustomDungeonBriefRedisData dungeon_brief_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->dungeon_brief_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dungeon_brief_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.CustomDungeonBriefGetType get_type = 4;
  if (this->get_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->get_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetCustomDungeonBriefRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetCustomDungeonBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetCustomDungeonBriefRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetCustomDungeonBriefRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetCustomDungeonBriefRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetCustomDungeonBriefRsp)
    MergeFrom(*source);
  }
}

void ServerGetCustomDungeonBriefRsp::MergeFrom(const ServerGetCustomDungeonBriefRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetCustomDungeonBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dungeon_guid_list_.MergeFrom(from.dungeon_guid_list_);
  dungeon_brief_list_.MergeFrom(from.dungeon_brief_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.get_type() != 0) {
    set_get_type(from.get_type());
  }
}

void ServerGetCustomDungeonBriefRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetCustomDungeonBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetCustomDungeonBriefRsp::CopyFrom(const ServerGetCustomDungeonBriefRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetCustomDungeonBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetCustomDungeonBriefRsp::IsInitialized() const {
  return true;
}

void ServerGetCustomDungeonBriefRsp::Swap(ServerGetCustomDungeonBriefRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetCustomDungeonBriefRsp::InternalSwap(ServerGetCustomDungeonBriefRsp* other) {
  using std::swap;
  dungeon_guid_list_.InternalSwap(&other->dungeon_guid_list_);
  dungeon_brief_list_.InternalSwap(&other->dungeon_brief_list_);
  swap(retcode_, other->retcode_);
  swap(get_type_, other->get_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetCustomDungeonBriefRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetCustomDungeonBriefRsp

// int32 retcode = 1;
void ServerGetCustomDungeonBriefRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetCustomDungeonBriefRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonBriefRsp.retcode)
  return retcode_;
}
void ServerGetCustomDungeonBriefRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetCustomDungeonBriefRsp.retcode)
}

// repeated uint64 dungeon_guid_list = 2;
int ServerGetCustomDungeonBriefRsp::dungeon_guid_list_size() const {
  return dungeon_guid_list_.size();
}
void ServerGetCustomDungeonBriefRsp::clear_dungeon_guid_list() {
  dungeon_guid_list_.Clear();
}
::google::protobuf::uint64 ServerGetCustomDungeonBriefRsp::dungeon_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonBriefRsp.dungeon_guid_list)
  return dungeon_guid_list_.Get(index);
}
void ServerGetCustomDungeonBriefRsp::set_dungeon_guid_list(int index, ::google::protobuf::uint64 value) {
  dungeon_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetCustomDungeonBriefRsp.dungeon_guid_list)
}
void ServerGetCustomDungeonBriefRsp::add_dungeon_guid_list(::google::protobuf::uint64 value) {
  dungeon_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetCustomDungeonBriefRsp.dungeon_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ServerGetCustomDungeonBriefRsp::dungeon_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetCustomDungeonBriefRsp.dungeon_guid_list)
  return dungeon_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ServerGetCustomDungeonBriefRsp::mutable_dungeon_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetCustomDungeonBriefRsp.dungeon_guid_list)
  return &dungeon_guid_list_;
}

// repeated .proto.CustomDungeonBriefRedisData dungeon_brief_list = 3;
int ServerGetCustomDungeonBriefRsp::dungeon_brief_list_size() const {
  return dungeon_brief_list_.size();
}
void ServerGetCustomDungeonBriefRsp::clear_dungeon_brief_list() {
  dungeon_brief_list_.Clear();
}
const ::proto::CustomDungeonBriefRedisData& ServerGetCustomDungeonBriefRsp::dungeon_brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonBriefRsp.dungeon_brief_list)
  return dungeon_brief_list_.Get(index);
}
::proto::CustomDungeonBriefRedisData* ServerGetCustomDungeonBriefRsp::mutable_dungeon_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGetCustomDungeonBriefRsp.dungeon_brief_list)
  return dungeon_brief_list_.Mutable(index);
}
::proto::CustomDungeonBriefRedisData* ServerGetCustomDungeonBriefRsp::add_dungeon_brief_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGetCustomDungeonBriefRsp.dungeon_brief_list)
  return dungeon_brief_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBriefRedisData >*
ServerGetCustomDungeonBriefRsp::mutable_dungeon_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetCustomDungeonBriefRsp.dungeon_brief_list)
  return &dungeon_brief_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBriefRedisData >&
ServerGetCustomDungeonBriefRsp::dungeon_brief_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetCustomDungeonBriefRsp.dungeon_brief_list)
  return dungeon_brief_list_;
}

// .proto.CustomDungeonBriefGetType get_type = 4;
void ServerGetCustomDungeonBriefRsp::clear_get_type() {
  get_type_ = 0;
}
::proto::CustomDungeonBriefGetType ServerGetCustomDungeonBriefRsp::get_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetCustomDungeonBriefRsp.get_type)
  return static_cast< ::proto::CustomDungeonBriefGetType >(get_type_);
}
void ServerGetCustomDungeonBriefRsp::set_get_type(::proto::CustomDungeonBriefGetType value) {
  
  get_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetCustomDungeonBriefRsp.get_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetRecommendCustomDungeonReq::kDungeonGuidListFieldNumber;
const int ServerGetRecommendCustomDungeonReq::kGroupIdFieldNumber;
const int ServerGetRecommendCustomDungeonReq::kRecommendIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetRecommendCustomDungeonReq::ServerGetRecommendCustomDungeonReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetRecommendCustomDungeonReq)
}
ServerGetRecommendCustomDungeonReq::ServerGetRecommendCustomDungeonReq(const ServerGetRecommendCustomDungeonReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dungeon_guid_list_(from.dungeon_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&group_id_, &from.group_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&recommend_interval_) -
    reinterpret_cast<char*>(&group_id_)) + sizeof(recommend_interval_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetRecommendCustomDungeonReq)
}

void ServerGetRecommendCustomDungeonReq::SharedCtor() {
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recommend_interval_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(recommend_interval_));
  _cached_size_ = 0;
}

ServerGetRecommendCustomDungeonReq::~ServerGetRecommendCustomDungeonReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetRecommendCustomDungeonReq)
  SharedDtor();
}

void ServerGetRecommendCustomDungeonReq::SharedDtor() {
}

void ServerGetRecommendCustomDungeonReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetRecommendCustomDungeonReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetRecommendCustomDungeonReq& ServerGetRecommendCustomDungeonReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetRecommendCustomDungeonReq* ServerGetRecommendCustomDungeonReq::New(::google::protobuf::Arena* arena) const {
  ServerGetRecommendCustomDungeonReq* n = new ServerGetRecommendCustomDungeonReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetRecommendCustomDungeonReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetRecommendCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dungeon_guid_list_.Clear();
  ::memset(&group_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recommend_interval_) -
      reinterpret_cast<char*>(&group_id_)) + sizeof(recommend_interval_));
  _internal_metadata_.Clear();
}

bool ServerGetRecommendCustomDungeonReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetRecommendCustomDungeonReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 dungeon_guid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_dungeon_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 10u, input, this->mutable_dungeon_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 group_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &group_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 recommend_interval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recommend_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetRecommendCustomDungeonReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetRecommendCustomDungeonReq)
  return false;
#undef DO_
}

void ServerGetRecommendCustomDungeonReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetRecommendCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 dungeon_guid_list = 1;
  if (this->dungeon_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _dungeon_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->dungeon_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->dungeon_guid_list(i), output);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->group_id(), output);
  }

  // uint32 recommend_interval = 3;
  if (this->recommend_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->recommend_interval(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetRecommendCustomDungeonReq)
}

::google::protobuf::uint8* ServerGetRecommendCustomDungeonReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetRecommendCustomDungeonReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 dungeon_guid_list = 1;
  if (this->dungeon_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _dungeon_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->dungeon_guid_list_, target);
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->group_id(), target);
  }

  // uint32 recommend_interval = 3;
  if (this->recommend_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->recommend_interval(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetRecommendCustomDungeonReq)
  return target;
}

size_t ServerGetRecommendCustomDungeonReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetRecommendCustomDungeonReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 dungeon_guid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->dungeon_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _dungeon_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 group_id = 2;
  if (this->group_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->group_id());
  }

  // uint32 recommend_interval = 3;
  if (this->recommend_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recommend_interval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetRecommendCustomDungeonReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetRecommendCustomDungeonReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetRecommendCustomDungeonReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetRecommendCustomDungeonReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetRecommendCustomDungeonReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetRecommendCustomDungeonReq)
    MergeFrom(*source);
  }
}

void ServerGetRecommendCustomDungeonReq::MergeFrom(const ServerGetRecommendCustomDungeonReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetRecommendCustomDungeonReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dungeon_guid_list_.MergeFrom(from.dungeon_guid_list_);
  if (from.group_id() != 0) {
    set_group_id(from.group_id());
  }
  if (from.recommend_interval() != 0) {
    set_recommend_interval(from.recommend_interval());
  }
}

void ServerGetRecommendCustomDungeonReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetRecommendCustomDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetRecommendCustomDungeonReq::CopyFrom(const ServerGetRecommendCustomDungeonReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetRecommendCustomDungeonReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetRecommendCustomDungeonReq::IsInitialized() const {
  return true;
}

void ServerGetRecommendCustomDungeonReq::Swap(ServerGetRecommendCustomDungeonReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetRecommendCustomDungeonReq::InternalSwap(ServerGetRecommendCustomDungeonReq* other) {
  using std::swap;
  dungeon_guid_list_.InternalSwap(&other->dungeon_guid_list_);
  swap(group_id_, other->group_id_);
  swap(recommend_interval_, other->recommend_interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetRecommendCustomDungeonReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetRecommendCustomDungeonReq

// repeated uint64 dungeon_guid_list = 1;
int ServerGetRecommendCustomDungeonReq::dungeon_guid_list_size() const {
  return dungeon_guid_list_.size();
}
void ServerGetRecommendCustomDungeonReq::clear_dungeon_guid_list() {
  dungeon_guid_list_.Clear();
}
::google::protobuf::uint64 ServerGetRecommendCustomDungeonReq::dungeon_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetRecommendCustomDungeonReq.dungeon_guid_list)
  return dungeon_guid_list_.Get(index);
}
void ServerGetRecommendCustomDungeonReq::set_dungeon_guid_list(int index, ::google::protobuf::uint64 value) {
  dungeon_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerGetRecommendCustomDungeonReq.dungeon_guid_list)
}
void ServerGetRecommendCustomDungeonReq::add_dungeon_guid_list(::google::protobuf::uint64 value) {
  dungeon_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerGetRecommendCustomDungeonReq.dungeon_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ServerGetRecommendCustomDungeonReq::dungeon_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetRecommendCustomDungeonReq.dungeon_guid_list)
  return dungeon_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ServerGetRecommendCustomDungeonReq::mutable_dungeon_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetRecommendCustomDungeonReq.dungeon_guid_list)
  return &dungeon_guid_list_;
}

// uint32 group_id = 2;
void ServerGetRecommendCustomDungeonReq::clear_group_id() {
  group_id_ = 0u;
}
::google::protobuf::uint32 ServerGetRecommendCustomDungeonReq::group_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetRecommendCustomDungeonReq.group_id)
  return group_id_;
}
void ServerGetRecommendCustomDungeonReq::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetRecommendCustomDungeonReq.group_id)
}

// uint32 recommend_interval = 3;
void ServerGetRecommendCustomDungeonReq::clear_recommend_interval() {
  recommend_interval_ = 0u;
}
::google::protobuf::uint32 ServerGetRecommendCustomDungeonReq::recommend_interval() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetRecommendCustomDungeonReq.recommend_interval)
  return recommend_interval_;
}
void ServerGetRecommendCustomDungeonReq::set_recommend_interval(::google::protobuf::uint32 value) {
  
  recommend_interval_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetRecommendCustomDungeonReq.recommend_interval)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetRecommendCustomDungeonRsp::kRetcodeFieldNumber;
const int ServerGetRecommendCustomDungeonRsp::kDungeonBriefListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetRecommendCustomDungeonRsp::ServerGetRecommendCustomDungeonRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetRecommendCustomDungeonRsp)
}
ServerGetRecommendCustomDungeonRsp::ServerGetRecommendCustomDungeonRsp(const ServerGetRecommendCustomDungeonRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dungeon_brief_list_(from.dungeon_brief_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetRecommendCustomDungeonRsp)
}

void ServerGetRecommendCustomDungeonRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

ServerGetRecommendCustomDungeonRsp::~ServerGetRecommendCustomDungeonRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetRecommendCustomDungeonRsp)
  SharedDtor();
}

void ServerGetRecommendCustomDungeonRsp::SharedDtor() {
}

void ServerGetRecommendCustomDungeonRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetRecommendCustomDungeonRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetRecommendCustomDungeonRsp& ServerGetRecommendCustomDungeonRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetRecommendCustomDungeonRsp* ServerGetRecommendCustomDungeonRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetRecommendCustomDungeonRsp* n = new ServerGetRecommendCustomDungeonRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetRecommendCustomDungeonRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetRecommendCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dungeon_brief_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool ServerGetRecommendCustomDungeonRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetRecommendCustomDungeonRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.CustomDungeonBriefRedisData dungeon_brief_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dungeon_brief_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetRecommendCustomDungeonRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetRecommendCustomDungeonRsp)
  return false;
#undef DO_
}

void ServerGetRecommendCustomDungeonRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetRecommendCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.CustomDungeonBriefRedisData dungeon_brief_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dungeon_brief_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dungeon_brief_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetRecommendCustomDungeonRsp)
}

::google::protobuf::uint8* ServerGetRecommendCustomDungeonRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetRecommendCustomDungeonRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.CustomDungeonBriefRedisData dungeon_brief_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->dungeon_brief_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->dungeon_brief_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetRecommendCustomDungeonRsp)
  return target;
}

size_t ServerGetRecommendCustomDungeonRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetRecommendCustomDungeonRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.CustomDungeonBriefRedisData dungeon_brief_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->dungeon_brief_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dungeon_brief_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetRecommendCustomDungeonRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetRecommendCustomDungeonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetRecommendCustomDungeonRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetRecommendCustomDungeonRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetRecommendCustomDungeonRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetRecommendCustomDungeonRsp)
    MergeFrom(*source);
  }
}

void ServerGetRecommendCustomDungeonRsp::MergeFrom(const ServerGetRecommendCustomDungeonRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetRecommendCustomDungeonRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dungeon_brief_list_.MergeFrom(from.dungeon_brief_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void ServerGetRecommendCustomDungeonRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetRecommendCustomDungeonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetRecommendCustomDungeonRsp::CopyFrom(const ServerGetRecommendCustomDungeonRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetRecommendCustomDungeonRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetRecommendCustomDungeonRsp::IsInitialized() const {
  return true;
}

void ServerGetRecommendCustomDungeonRsp::Swap(ServerGetRecommendCustomDungeonRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetRecommendCustomDungeonRsp::InternalSwap(ServerGetRecommendCustomDungeonRsp* other) {
  using std::swap;
  dungeon_brief_list_.InternalSwap(&other->dungeon_brief_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetRecommendCustomDungeonRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetRecommendCustomDungeonRsp

// int32 retcode = 1;
void ServerGetRecommendCustomDungeonRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetRecommendCustomDungeonRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetRecommendCustomDungeonRsp.retcode)
  return retcode_;
}
void ServerGetRecommendCustomDungeonRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetRecommendCustomDungeonRsp.retcode)
}

// repeated .proto.CustomDungeonBriefRedisData dungeon_brief_list = 2;
int ServerGetRecommendCustomDungeonRsp::dungeon_brief_list_size() const {
  return dungeon_brief_list_.size();
}
void ServerGetRecommendCustomDungeonRsp::clear_dungeon_brief_list() {
  dungeon_brief_list_.Clear();
}
const ::proto::CustomDungeonBriefRedisData& ServerGetRecommendCustomDungeonRsp::dungeon_brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerGetRecommendCustomDungeonRsp.dungeon_brief_list)
  return dungeon_brief_list_.Get(index);
}
::proto::CustomDungeonBriefRedisData* ServerGetRecommendCustomDungeonRsp::mutable_dungeon_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerGetRecommendCustomDungeonRsp.dungeon_brief_list)
  return dungeon_brief_list_.Mutable(index);
}
::proto::CustomDungeonBriefRedisData* ServerGetRecommendCustomDungeonRsp::add_dungeon_brief_list() {
  // @@protoc_insertion_point(field_add:proto.ServerGetRecommendCustomDungeonRsp.dungeon_brief_list)
  return dungeon_brief_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBriefRedisData >*
ServerGetRecommendCustomDungeonRsp::mutable_dungeon_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerGetRecommendCustomDungeonRsp.dungeon_brief_list)
  return &dungeon_brief_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::CustomDungeonBriefRedisData >&
ServerGetRecommendCustomDungeonRsp::dungeon_brief_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerGetRecommendCustomDungeonRsp.dungeon_brief_list)
  return dungeon_brief_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAddFriendByMuipReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAddFriendByMuipReq::ServerAddFriendByMuipReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerAddFriendByMuipReq)
}
ServerAddFriendByMuipReq::ServerAddFriendByMuipReq(const ServerAddFriendByMuipReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerAddFriendByMuipReq)
}

void ServerAddFriendByMuipReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

ServerAddFriendByMuipReq::~ServerAddFriendByMuipReq() {
  // @@protoc_insertion_point(destructor:proto.ServerAddFriendByMuipReq)
  SharedDtor();
}

void ServerAddFriendByMuipReq::SharedDtor() {
}

void ServerAddFriendByMuipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAddFriendByMuipReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAddFriendByMuipReq& ServerAddFriendByMuipReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerAddFriendByMuipReq* ServerAddFriendByMuipReq::New(::google::protobuf::Arena* arena) const {
  ServerAddFriendByMuipReq* n = new ServerAddFriendByMuipReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAddFriendByMuipReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerAddFriendByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerAddFriendByMuipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerAddFriendByMuipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerAddFriendByMuipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerAddFriendByMuipReq)
  return false;
#undef DO_
}

void ServerAddFriendByMuipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerAddFriendByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerAddFriendByMuipReq)
}

::google::protobuf::uint8* ServerAddFriendByMuipReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerAddFriendByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerAddFriendByMuipReq)
  return target;
}

size_t ServerAddFriendByMuipReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerAddFriendByMuipReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAddFriendByMuipReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerAddFriendByMuipReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAddFriendByMuipReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAddFriendByMuipReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerAddFriendByMuipReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerAddFriendByMuipReq)
    MergeFrom(*source);
  }
}

void ServerAddFriendByMuipReq::MergeFrom(const ServerAddFriendByMuipReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerAddFriendByMuipReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ServerAddFriendByMuipReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerAddFriendByMuipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAddFriendByMuipReq::CopyFrom(const ServerAddFriendByMuipReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerAddFriendByMuipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAddFriendByMuipReq::IsInitialized() const {
  return true;
}

void ServerAddFriendByMuipReq::Swap(ServerAddFriendByMuipReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAddFriendByMuipReq::InternalSwap(ServerAddFriendByMuipReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAddFriendByMuipReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAddFriendByMuipReq

// uint32 target_uid = 1;
void ServerAddFriendByMuipReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerAddFriendByMuipReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerAddFriendByMuipReq.target_uid)
  return target_uid_;
}
void ServerAddFriendByMuipReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAddFriendByMuipReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAddFriendByMuipRsp::kRetcodeFieldNumber;
const int ServerAddFriendByMuipRsp::kTargetUidFieldNumber;
const int ServerAddFriendByMuipRsp::kTargetFriendNumFieldNumber;
const int ServerAddFriendByMuipRsp::kTargetFriendBriefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAddFriendByMuipRsp::ServerAddFriendByMuipRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerAddFriendByMuipRsp)
}
ServerAddFriendByMuipRsp::ServerAddFriendByMuipRsp(const ServerAddFriendByMuipRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_friend_brief()) {
    target_friend_brief_ = new ::proto::FriendBrief(*from.target_friend_brief_);
  } else {
    target_friend_brief_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_friend_num_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_friend_num_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerAddFriendByMuipRsp)
}

void ServerAddFriendByMuipRsp::SharedCtor() {
  ::memset(&target_friend_brief_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_friend_num_) -
      reinterpret_cast<char*>(&target_friend_brief_)) + sizeof(target_friend_num_));
  _cached_size_ = 0;
}

ServerAddFriendByMuipRsp::~ServerAddFriendByMuipRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerAddFriendByMuipRsp)
  SharedDtor();
}

void ServerAddFriendByMuipRsp::SharedDtor() {
  if (this != internal_default_instance()) delete target_friend_brief_;
}

void ServerAddFriendByMuipRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAddFriendByMuipRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAddFriendByMuipRsp& ServerAddFriendByMuipRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerAddFriendByMuipRsp* ServerAddFriendByMuipRsp::New(::google::protobuf::Arena* arena) const {
  ServerAddFriendByMuipRsp* n = new ServerAddFriendByMuipRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAddFriendByMuipRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerAddFriendByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) {
    delete target_friend_brief_;
  }
  target_friend_brief_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_friend_num_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_friend_num_));
  _internal_metadata_.Clear();
}

bool ServerAddFriendByMuipRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerAddFriendByMuipRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_friend_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_friend_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendBrief target_friend_brief = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_target_friend_brief()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerAddFriendByMuipRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerAddFriendByMuipRsp)
  return false;
#undef DO_
}

void ServerAddFriendByMuipRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerAddFriendByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  // uint32 target_friend_num = 3;
  if (this->target_friend_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_friend_num(), output);
  }

  // .proto.FriendBrief target_friend_brief = 4;
  if (this->has_target_friend_brief()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->target_friend_brief_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerAddFriendByMuipRsp)
}

::google::protobuf::uint8* ServerAddFriendByMuipRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerAddFriendByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  // uint32 target_friend_num = 3;
  if (this->target_friend_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_friend_num(), target);
  }

  // .proto.FriendBrief target_friend_brief = 4;
  if (this->has_target_friend_brief()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->target_friend_brief_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerAddFriendByMuipRsp)
  return target;
}

size_t ServerAddFriendByMuipRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerAddFriendByMuipRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.FriendBrief target_friend_brief = 4;
  if (this->has_target_friend_brief()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->target_friend_brief_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 target_friend_num = 3;
  if (this->target_friend_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_friend_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAddFriendByMuipRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerAddFriendByMuipRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAddFriendByMuipRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAddFriendByMuipRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerAddFriendByMuipRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerAddFriendByMuipRsp)
    MergeFrom(*source);
  }
}

void ServerAddFriendByMuipRsp::MergeFrom(const ServerAddFriendByMuipRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerAddFriendByMuipRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_friend_brief()) {
    mutable_target_friend_brief()->::proto::FriendBrief::MergeFrom(from.target_friend_brief());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.target_friend_num() != 0) {
    set_target_friend_num(from.target_friend_num());
  }
}

void ServerAddFriendByMuipRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerAddFriendByMuipRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAddFriendByMuipRsp::CopyFrom(const ServerAddFriendByMuipRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerAddFriendByMuipRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAddFriendByMuipRsp::IsInitialized() const {
  return true;
}

void ServerAddFriendByMuipRsp::Swap(ServerAddFriendByMuipRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAddFriendByMuipRsp::InternalSwap(ServerAddFriendByMuipRsp* other) {
  using std::swap;
  swap(target_friend_brief_, other->target_friend_brief_);
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  swap(target_friend_num_, other->target_friend_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAddFriendByMuipRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAddFriendByMuipRsp

// int32 retcode = 1;
void ServerAddFriendByMuipRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerAddFriendByMuipRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerAddFriendByMuipRsp.retcode)
  return retcode_;
}
void ServerAddFriendByMuipRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAddFriendByMuipRsp.retcode)
}

// uint32 target_uid = 2;
void ServerAddFriendByMuipRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerAddFriendByMuipRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerAddFriendByMuipRsp.target_uid)
  return target_uid_;
}
void ServerAddFriendByMuipRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAddFriendByMuipRsp.target_uid)
}

// uint32 target_friend_num = 3;
void ServerAddFriendByMuipRsp::clear_target_friend_num() {
  target_friend_num_ = 0u;
}
::google::protobuf::uint32 ServerAddFriendByMuipRsp::target_friend_num() const {
  // @@protoc_insertion_point(field_get:proto.ServerAddFriendByMuipRsp.target_friend_num)
  return target_friend_num_;
}
void ServerAddFriendByMuipRsp::set_target_friend_num(::google::protobuf::uint32 value) {
  
  target_friend_num_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAddFriendByMuipRsp.target_friend_num)
}

// .proto.FriendBrief target_friend_brief = 4;
bool ServerAddFriendByMuipRsp::has_target_friend_brief() const {
  return this != internal_default_instance() && target_friend_brief_ != NULL;
}
void ServerAddFriendByMuipRsp::clear_target_friend_brief() {
  if (GetArenaNoVirtual() == NULL && target_friend_brief_ != NULL) delete target_friend_brief_;
  target_friend_brief_ = NULL;
}
const ::proto::FriendBrief& ServerAddFriendByMuipRsp::target_friend_brief() const {
  const ::proto::FriendBrief* p = target_friend_brief_;
  // @@protoc_insertion_point(field_get:proto.ServerAddFriendByMuipRsp.target_friend_brief)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FriendBrief*>(
      &::proto::_FriendBrief_default_instance_);
}
::proto::FriendBrief* ServerAddFriendByMuipRsp::mutable_target_friend_brief() {
  
  if (target_friend_brief_ == NULL) {
    target_friend_brief_ = new ::proto::FriendBrief;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerAddFriendByMuipRsp.target_friend_brief)
  return target_friend_brief_;
}
::proto::FriendBrief* ServerAddFriendByMuipRsp::release_target_friend_brief() {
  // @@protoc_insertion_point(field_release:proto.ServerAddFriendByMuipRsp.target_friend_brief)
  
  ::proto::FriendBrief* temp = target_friend_brief_;
  target_friend_brief_ = NULL;
  return temp;
}
void ServerAddFriendByMuipRsp::set_allocated_target_friend_brief(::proto::FriendBrief* target_friend_brief) {
  delete target_friend_brief_;
  target_friend_brief_ = target_friend_brief;
  if (target_friend_brief) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerAddFriendByMuipRsp.target_friend_brief)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerDelFriendByMuipReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerDelFriendByMuipReq::ServerDelFriendByMuipReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerDelFriendByMuipReq)
}
ServerDelFriendByMuipReq::ServerDelFriendByMuipReq(const ServerDelFriendByMuipReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerDelFriendByMuipReq)
}

void ServerDelFriendByMuipReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

ServerDelFriendByMuipReq::~ServerDelFriendByMuipReq() {
  // @@protoc_insertion_point(destructor:proto.ServerDelFriendByMuipReq)
  SharedDtor();
}

void ServerDelFriendByMuipReq::SharedDtor() {
}

void ServerDelFriendByMuipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDelFriendByMuipReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerDelFriendByMuipReq& ServerDelFriendByMuipReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerDelFriendByMuipReq* ServerDelFriendByMuipReq::New(::google::protobuf::Arena* arena) const {
  ServerDelFriendByMuipReq* n = new ServerDelFriendByMuipReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerDelFriendByMuipReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerDelFriendByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerDelFriendByMuipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerDelFriendByMuipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerDelFriendByMuipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerDelFriendByMuipReq)
  return false;
#undef DO_
}

void ServerDelFriendByMuipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerDelFriendByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerDelFriendByMuipReq)
}

::google::protobuf::uint8* ServerDelFriendByMuipReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerDelFriendByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerDelFriendByMuipReq)
  return target;
}

size_t ServerDelFriendByMuipReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerDelFriendByMuipReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDelFriendByMuipReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerDelFriendByMuipReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerDelFriendByMuipReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerDelFriendByMuipReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerDelFriendByMuipReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerDelFriendByMuipReq)
    MergeFrom(*source);
  }
}

void ServerDelFriendByMuipReq::MergeFrom(const ServerDelFriendByMuipReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerDelFriendByMuipReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ServerDelFriendByMuipReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerDelFriendByMuipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDelFriendByMuipReq::CopyFrom(const ServerDelFriendByMuipReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerDelFriendByMuipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDelFriendByMuipReq::IsInitialized() const {
  return true;
}

void ServerDelFriendByMuipReq::Swap(ServerDelFriendByMuipReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerDelFriendByMuipReq::InternalSwap(ServerDelFriendByMuipReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerDelFriendByMuipReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerDelFriendByMuipReq

// uint32 target_uid = 1;
void ServerDelFriendByMuipReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerDelFriendByMuipReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerDelFriendByMuipReq.target_uid)
  return target_uid_;
}
void ServerDelFriendByMuipReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDelFriendByMuipReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerDelFriendByMuipRsp::kRetcodeFieldNumber;
const int ServerDelFriendByMuipRsp::kTargetUidFieldNumber;
const int ServerDelFriendByMuipRsp::kTargetFriendNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerDelFriendByMuipRsp::ServerDelFriendByMuipRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerDelFriendByMuipRsp)
}
ServerDelFriendByMuipRsp::ServerDelFriendByMuipRsp(const ServerDelFriendByMuipRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_friend_num_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_friend_num_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerDelFriendByMuipRsp)
}

void ServerDelFriendByMuipRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_friend_num_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_friend_num_));
  _cached_size_ = 0;
}

ServerDelFriendByMuipRsp::~ServerDelFriendByMuipRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerDelFriendByMuipRsp)
  SharedDtor();
}

void ServerDelFriendByMuipRsp::SharedDtor() {
}

void ServerDelFriendByMuipRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDelFriendByMuipRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerDelFriendByMuipRsp& ServerDelFriendByMuipRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerDelFriendByMuipRsp* ServerDelFriendByMuipRsp::New(::google::protobuf::Arena* arena) const {
  ServerDelFriendByMuipRsp* n = new ServerDelFriendByMuipRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerDelFriendByMuipRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerDelFriendByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_friend_num_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_friend_num_));
  _internal_metadata_.Clear();
}

bool ServerDelFriendByMuipRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerDelFriendByMuipRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_friend_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_friend_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerDelFriendByMuipRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerDelFriendByMuipRsp)
  return false;
#undef DO_
}

void ServerDelFriendByMuipRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerDelFriendByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  // uint32 target_friend_num = 3;
  if (this->target_friend_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_friend_num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerDelFriendByMuipRsp)
}

::google::protobuf::uint8* ServerDelFriendByMuipRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerDelFriendByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  // uint32 target_friend_num = 3;
  if (this->target_friend_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_friend_num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerDelFriendByMuipRsp)
  return target;
}

size_t ServerDelFriendByMuipRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerDelFriendByMuipRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 target_friend_num = 3;
  if (this->target_friend_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_friend_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDelFriendByMuipRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerDelFriendByMuipRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerDelFriendByMuipRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerDelFriendByMuipRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerDelFriendByMuipRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerDelFriendByMuipRsp)
    MergeFrom(*source);
  }
}

void ServerDelFriendByMuipRsp::MergeFrom(const ServerDelFriendByMuipRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerDelFriendByMuipRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.target_friend_num() != 0) {
    set_target_friend_num(from.target_friend_num());
  }
}

void ServerDelFriendByMuipRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerDelFriendByMuipRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDelFriendByMuipRsp::CopyFrom(const ServerDelFriendByMuipRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerDelFriendByMuipRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDelFriendByMuipRsp::IsInitialized() const {
  return true;
}

void ServerDelFriendByMuipRsp::Swap(ServerDelFriendByMuipRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerDelFriendByMuipRsp::InternalSwap(ServerDelFriendByMuipRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  swap(target_friend_num_, other->target_friend_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerDelFriendByMuipRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerDelFriendByMuipRsp

// int32 retcode = 1;
void ServerDelFriendByMuipRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerDelFriendByMuipRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerDelFriendByMuipRsp.retcode)
  return retcode_;
}
void ServerDelFriendByMuipRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDelFriendByMuipRsp.retcode)
}

// uint32 target_uid = 2;
void ServerDelFriendByMuipRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerDelFriendByMuipRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerDelFriendByMuipRsp.target_uid)
  return target_uid_;
}
void ServerDelFriendByMuipRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDelFriendByMuipRsp.target_uid)
}

// uint32 target_friend_num = 3;
void ServerDelFriendByMuipRsp::clear_target_friend_num() {
  target_friend_num_ = 0u;
}
::google::protobuf::uint32 ServerDelFriendByMuipRsp::target_friend_num() const {
  // @@protoc_insertion_point(field_get:proto.ServerDelFriendByMuipRsp.target_friend_num)
  return target_friend_num_;
}
void ServerDelFriendByMuipRsp::set_target_friend_num(::google::protobuf::uint32 value) {
  
  target_friend_num_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDelFriendByMuipRsp.target_friend_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAddFriendAskByMuipReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAddFriendAskByMuipReq::ServerAddFriendAskByMuipReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerAddFriendAskByMuipReq)
}
ServerAddFriendAskByMuipReq::ServerAddFriendAskByMuipReq(const ServerAddFriendAskByMuipReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerAddFriendAskByMuipReq)
}

void ServerAddFriendAskByMuipReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

ServerAddFriendAskByMuipReq::~ServerAddFriendAskByMuipReq() {
  // @@protoc_insertion_point(destructor:proto.ServerAddFriendAskByMuipReq)
  SharedDtor();
}

void ServerAddFriendAskByMuipReq::SharedDtor() {
}

void ServerAddFriendAskByMuipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAddFriendAskByMuipReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAddFriendAskByMuipReq& ServerAddFriendAskByMuipReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerAddFriendAskByMuipReq* ServerAddFriendAskByMuipReq::New(::google::protobuf::Arena* arena) const {
  ServerAddFriendAskByMuipReq* n = new ServerAddFriendAskByMuipReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAddFriendAskByMuipReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerAddFriendAskByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerAddFriendAskByMuipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerAddFriendAskByMuipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerAddFriendAskByMuipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerAddFriendAskByMuipReq)
  return false;
#undef DO_
}

void ServerAddFriendAskByMuipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerAddFriendAskByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerAddFriendAskByMuipReq)
}

::google::protobuf::uint8* ServerAddFriendAskByMuipReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerAddFriendAskByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerAddFriendAskByMuipReq)
  return target;
}

size_t ServerAddFriendAskByMuipReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerAddFriendAskByMuipReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAddFriendAskByMuipReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerAddFriendAskByMuipReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAddFriendAskByMuipReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAddFriendAskByMuipReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerAddFriendAskByMuipReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerAddFriendAskByMuipReq)
    MergeFrom(*source);
  }
}

void ServerAddFriendAskByMuipReq::MergeFrom(const ServerAddFriendAskByMuipReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerAddFriendAskByMuipReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ServerAddFriendAskByMuipReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerAddFriendAskByMuipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAddFriendAskByMuipReq::CopyFrom(const ServerAddFriendAskByMuipReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerAddFriendAskByMuipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAddFriendAskByMuipReq::IsInitialized() const {
  return true;
}

void ServerAddFriendAskByMuipReq::Swap(ServerAddFriendAskByMuipReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAddFriendAskByMuipReq::InternalSwap(ServerAddFriendAskByMuipReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAddFriendAskByMuipReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAddFriendAskByMuipReq

// uint32 target_uid = 1;
void ServerAddFriendAskByMuipReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerAddFriendAskByMuipReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerAddFriendAskByMuipReq.target_uid)
  return target_uid_;
}
void ServerAddFriendAskByMuipReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAddFriendAskByMuipReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerAddFriendAskByMuipRsp::kRetcodeFieldNumber;
const int ServerAddFriendAskByMuipRsp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerAddFriendAskByMuipRsp::ServerAddFriendAskByMuipRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerAddFriendAskByMuipRsp)
}
ServerAddFriendAskByMuipRsp::ServerAddFriendAskByMuipRsp(const ServerAddFriendAskByMuipRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerAddFriendAskByMuipRsp)
}

void ServerAddFriendAskByMuipRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

ServerAddFriendAskByMuipRsp::~ServerAddFriendAskByMuipRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerAddFriendAskByMuipRsp)
  SharedDtor();
}

void ServerAddFriendAskByMuipRsp::SharedDtor() {
}

void ServerAddFriendAskByMuipRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerAddFriendAskByMuipRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerAddFriendAskByMuipRsp& ServerAddFriendAskByMuipRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerAddFriendAskByMuipRsp* ServerAddFriendAskByMuipRsp::New(::google::protobuf::Arena* arena) const {
  ServerAddFriendAskByMuipRsp* n = new ServerAddFriendAskByMuipRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerAddFriendAskByMuipRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerAddFriendAskByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool ServerAddFriendAskByMuipRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerAddFriendAskByMuipRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerAddFriendAskByMuipRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerAddFriendAskByMuipRsp)
  return false;
#undef DO_
}

void ServerAddFriendAskByMuipRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerAddFriendAskByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerAddFriendAskByMuipRsp)
}

::google::protobuf::uint8* ServerAddFriendAskByMuipRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerAddFriendAskByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerAddFriendAskByMuipRsp)
  return target;
}

size_t ServerAddFriendAskByMuipRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerAddFriendAskByMuipRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerAddFriendAskByMuipRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerAddFriendAskByMuipRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerAddFriendAskByMuipRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerAddFriendAskByMuipRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerAddFriendAskByMuipRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerAddFriendAskByMuipRsp)
    MergeFrom(*source);
  }
}

void ServerAddFriendAskByMuipRsp::MergeFrom(const ServerAddFriendAskByMuipRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerAddFriendAskByMuipRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ServerAddFriendAskByMuipRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerAddFriendAskByMuipRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerAddFriendAskByMuipRsp::CopyFrom(const ServerAddFriendAskByMuipRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerAddFriendAskByMuipRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerAddFriendAskByMuipRsp::IsInitialized() const {
  return true;
}

void ServerAddFriendAskByMuipRsp::Swap(ServerAddFriendAskByMuipRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerAddFriendAskByMuipRsp::InternalSwap(ServerAddFriendAskByMuipRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerAddFriendAskByMuipRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerAddFriendAskByMuipRsp

// int32 retcode = 1;
void ServerAddFriendAskByMuipRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerAddFriendAskByMuipRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerAddFriendAskByMuipRsp.retcode)
  return retcode_;
}
void ServerAddFriendAskByMuipRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAddFriendAskByMuipRsp.retcode)
}

// uint32 target_uid = 2;
void ServerAddFriendAskByMuipRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerAddFriendAskByMuipRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerAddFriendAskByMuipRsp.target_uid)
  return target_uid_;
}
void ServerAddFriendAskByMuipRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerAddFriendAskByMuipRsp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerDelFriendAskByMuipReq::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerDelFriendAskByMuipReq::ServerDelFriendAskByMuipReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerDelFriendAskByMuipReq)
}
ServerDelFriendAskByMuipReq::ServerDelFriendAskByMuipReq(const ServerDelFriendAskByMuipReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  target_uid_ = from.target_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerDelFriendAskByMuipReq)
}

void ServerDelFriendAskByMuipReq::SharedCtor() {
  target_uid_ = 0u;
  _cached_size_ = 0;
}

ServerDelFriendAskByMuipReq::~ServerDelFriendAskByMuipReq() {
  // @@protoc_insertion_point(destructor:proto.ServerDelFriendAskByMuipReq)
  SharedDtor();
}

void ServerDelFriendAskByMuipReq::SharedDtor() {
}

void ServerDelFriendAskByMuipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDelFriendAskByMuipReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerDelFriendAskByMuipReq& ServerDelFriendAskByMuipReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerDelFriendAskByMuipReq* ServerDelFriendAskByMuipReq::New(::google::protobuf::Arena* arena) const {
  ServerDelFriendAskByMuipReq* n = new ServerDelFriendAskByMuipReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerDelFriendAskByMuipReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerDelFriendAskByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  target_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool ServerDelFriendAskByMuipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerDelFriendAskByMuipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 target_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerDelFriendAskByMuipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerDelFriendAskByMuipReq)
  return false;
#undef DO_
}

void ServerDelFriendAskByMuipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerDelFriendAskByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerDelFriendAskByMuipReq)
}

::google::protobuf::uint8* ServerDelFriendAskByMuipReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerDelFriendAskByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerDelFriendAskByMuipReq)
  return target;
}

size_t ServerDelFriendAskByMuipReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerDelFriendAskByMuipReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 target_uid = 1;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDelFriendAskByMuipReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerDelFriendAskByMuipReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerDelFriendAskByMuipReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerDelFriendAskByMuipReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerDelFriendAskByMuipReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerDelFriendAskByMuipReq)
    MergeFrom(*source);
  }
}

void ServerDelFriendAskByMuipReq::MergeFrom(const ServerDelFriendAskByMuipReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerDelFriendAskByMuipReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ServerDelFriendAskByMuipReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerDelFriendAskByMuipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDelFriendAskByMuipReq::CopyFrom(const ServerDelFriendAskByMuipReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerDelFriendAskByMuipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDelFriendAskByMuipReq::IsInitialized() const {
  return true;
}

void ServerDelFriendAskByMuipReq::Swap(ServerDelFriendAskByMuipReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerDelFriendAskByMuipReq::InternalSwap(ServerDelFriendAskByMuipReq* other) {
  using std::swap;
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerDelFriendAskByMuipReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerDelFriendAskByMuipReq

// uint32 target_uid = 1;
void ServerDelFriendAskByMuipReq::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerDelFriendAskByMuipReq::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerDelFriendAskByMuipReq.target_uid)
  return target_uid_;
}
void ServerDelFriendAskByMuipReq::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDelFriendAskByMuipReq.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerDelFriendAskByMuipRsp::kRetcodeFieldNumber;
const int ServerDelFriendAskByMuipRsp::kTargetUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerDelFriendAskByMuipRsp::ServerDelFriendAskByMuipRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerDelFriendAskByMuipRsp)
}
ServerDelFriendAskByMuipRsp::ServerDelFriendAskByMuipRsp(const ServerDelFriendAskByMuipRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerDelFriendAskByMuipRsp)
}

void ServerDelFriendAskByMuipRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _cached_size_ = 0;
}

ServerDelFriendAskByMuipRsp::~ServerDelFriendAskByMuipRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerDelFriendAskByMuipRsp)
  SharedDtor();
}

void ServerDelFriendAskByMuipRsp::SharedDtor() {
}

void ServerDelFriendAskByMuipRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerDelFriendAskByMuipRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerDelFriendAskByMuipRsp& ServerDelFriendAskByMuipRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerDelFriendAskByMuipRsp* ServerDelFriendAskByMuipRsp::New(::google::protobuf::Arena* arena) const {
  ServerDelFriendAskByMuipRsp* n = new ServerDelFriendAskByMuipRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerDelFriendAskByMuipRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerDelFriendAskByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(target_uid_));
  _internal_metadata_.Clear();
}

bool ServerDelFriendAskByMuipRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerDelFriendAskByMuipRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerDelFriendAskByMuipRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerDelFriendAskByMuipRsp)
  return false;
#undef DO_
}

void ServerDelFriendAskByMuipRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerDelFriendAskByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerDelFriendAskByMuipRsp)
}

::google::protobuf::uint8* ServerDelFriendAskByMuipRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerDelFriendAskByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerDelFriendAskByMuipRsp)
  return target;
}

size_t ServerDelFriendAskByMuipRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerDelFriendAskByMuipRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerDelFriendAskByMuipRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerDelFriendAskByMuipRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerDelFriendAskByMuipRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerDelFriendAskByMuipRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerDelFriendAskByMuipRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerDelFriendAskByMuipRsp)
    MergeFrom(*source);
  }
}

void ServerDelFriendAskByMuipRsp::MergeFrom(const ServerDelFriendAskByMuipRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerDelFriendAskByMuipRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
}

void ServerDelFriendAskByMuipRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerDelFriendAskByMuipRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerDelFriendAskByMuipRsp::CopyFrom(const ServerDelFriendAskByMuipRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerDelFriendAskByMuipRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerDelFriendAskByMuipRsp::IsInitialized() const {
  return true;
}

void ServerDelFriendAskByMuipRsp::Swap(ServerDelFriendAskByMuipRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerDelFriendAskByMuipRsp::InternalSwap(ServerDelFriendAskByMuipRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(target_uid_, other->target_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerDelFriendAskByMuipRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerDelFriendAskByMuipRsp

// int32 retcode = 1;
void ServerDelFriendAskByMuipRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerDelFriendAskByMuipRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerDelFriendAskByMuipRsp.retcode)
  return retcode_;
}
void ServerDelFriendAskByMuipRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDelFriendAskByMuipRsp.retcode)
}

// uint32 target_uid = 2;
void ServerDelFriendAskByMuipRsp::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 ServerDelFriendAskByMuipRsp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerDelFriendAskByMuipRsp.target_uid)
  return target_uid_;
}
void ServerDelFriendAskByMuipRsp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerDelFriendAskByMuipRsp.target_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerCustomDungeonCacheInvalidNotify::kDungeonGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerCustomDungeonCacheInvalidNotify::ServerCustomDungeonCacheInvalidNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerCustomDungeonCacheInvalidNotify)
}
ServerCustomDungeonCacheInvalidNotify::ServerCustomDungeonCacheInvalidNotify(const ServerCustomDungeonCacheInvalidNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dungeon_guid_ = from.dungeon_guid_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerCustomDungeonCacheInvalidNotify)
}

void ServerCustomDungeonCacheInvalidNotify::SharedCtor() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

ServerCustomDungeonCacheInvalidNotify::~ServerCustomDungeonCacheInvalidNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerCustomDungeonCacheInvalidNotify)
  SharedDtor();
}

void ServerCustomDungeonCacheInvalidNotify::SharedDtor() {
}

void ServerCustomDungeonCacheInvalidNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerCustomDungeonCacheInvalidNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerCustomDungeonCacheInvalidNotify& ServerCustomDungeonCacheInvalidNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerCustomDungeonCacheInvalidNotify* ServerCustomDungeonCacheInvalidNotify::New(::google::protobuf::Arena* arena) const {
  ServerCustomDungeonCacheInvalidNotify* n = new ServerCustomDungeonCacheInvalidNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerCustomDungeonCacheInvalidNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerCustomDungeonCacheInvalidNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dungeon_guid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ServerCustomDungeonCacheInvalidNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerCustomDungeonCacheInvalidNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dungeon_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dungeon_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerCustomDungeonCacheInvalidNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerCustomDungeonCacheInvalidNotify)
  return false;
#undef DO_
}

void ServerCustomDungeonCacheInvalidNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerCustomDungeonCacheInvalidNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dungeon_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerCustomDungeonCacheInvalidNotify)
}

::google::protobuf::uint8* ServerCustomDungeonCacheInvalidNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerCustomDungeonCacheInvalidNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dungeon_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerCustomDungeonCacheInvalidNotify)
  return target;
}

size_t ServerCustomDungeonCacheInvalidNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerCustomDungeonCacheInvalidNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dungeon_guid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerCustomDungeonCacheInvalidNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerCustomDungeonCacheInvalidNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerCustomDungeonCacheInvalidNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerCustomDungeonCacheInvalidNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerCustomDungeonCacheInvalidNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerCustomDungeonCacheInvalidNotify)
    MergeFrom(*source);
  }
}

void ServerCustomDungeonCacheInvalidNotify::MergeFrom(const ServerCustomDungeonCacheInvalidNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerCustomDungeonCacheInvalidNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dungeon_guid() != 0) {
    set_dungeon_guid(from.dungeon_guid());
  }
}

void ServerCustomDungeonCacheInvalidNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerCustomDungeonCacheInvalidNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerCustomDungeonCacheInvalidNotify::CopyFrom(const ServerCustomDungeonCacheInvalidNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerCustomDungeonCacheInvalidNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerCustomDungeonCacheInvalidNotify::IsInitialized() const {
  return true;
}

void ServerCustomDungeonCacheInvalidNotify::Swap(ServerCustomDungeonCacheInvalidNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerCustomDungeonCacheInvalidNotify::InternalSwap(ServerCustomDungeonCacheInvalidNotify* other) {
  using std::swap;
  swap(dungeon_guid_, other->dungeon_guid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerCustomDungeonCacheInvalidNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerCustomDungeonCacheInvalidNotify

// uint64 dungeon_guid = 1;
void ServerCustomDungeonCacheInvalidNotify::clear_dungeon_guid() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerCustomDungeonCacheInvalidNotify::dungeon_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerCustomDungeonCacheInvalidNotify.dungeon_guid)
  return dungeon_guid_;
}
void ServerCustomDungeonCacheInvalidNotify::set_dungeon_guid(::google::protobuf::uint64 value) {
  
  dungeon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerCustomDungeonCacheInvalidNotify.dungeon_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerCustomDungeonSocialGmNotify::kDungeonGuidFieldNumber;
const int ServerCustomDungeonSocialGmNotify::kUpdateTypeFieldNumber;
const int ServerCustomDungeonSocialGmNotify::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerCustomDungeonSocialGmNotify::ServerCustomDungeonSocialGmNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerCustomDungeonSocialGmNotify)
}
ServerCustomDungeonSocialGmNotify::ServerCustomDungeonSocialGmNotify(const ServerCustomDungeonSocialGmNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&dungeon_guid_, &from.dungeon_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerCustomDungeonSocialGmNotify)
}

void ServerCustomDungeonSocialGmNotify::SharedCtor() {
  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(num_));
  _cached_size_ = 0;
}

ServerCustomDungeonSocialGmNotify::~ServerCustomDungeonSocialGmNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerCustomDungeonSocialGmNotify)
  SharedDtor();
}

void ServerCustomDungeonSocialGmNotify::SharedDtor() {
}

void ServerCustomDungeonSocialGmNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerCustomDungeonSocialGmNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerCustomDungeonSocialGmNotify& ServerCustomDungeonSocialGmNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerCustomDungeonSocialGmNotify* ServerCustomDungeonSocialGmNotify::New(::google::protobuf::Arena* arena) const {
  ServerCustomDungeonSocialGmNotify* n = new ServerCustomDungeonSocialGmNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerCustomDungeonSocialGmNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerCustomDungeonSocialGmNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&dungeon_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&dungeon_guid_)) + sizeof(num_));
  _internal_metadata_.Clear();
}

bool ServerCustomDungeonSocialGmNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerCustomDungeonSocialGmNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 dungeon_guid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &dungeon_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 update_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerCustomDungeonSocialGmNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerCustomDungeonSocialGmNotify)
  return false;
#undef DO_
}

void ServerCustomDungeonSocialGmNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerCustomDungeonSocialGmNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->dungeon_guid(), output);
  }

  // uint32 update_type = 2;
  if (this->update_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->update_type(), output);
  }

  // uint32 num = 3;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerCustomDungeonSocialGmNotify)
}

::google::protobuf::uint8* ServerCustomDungeonSocialGmNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerCustomDungeonSocialGmNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->dungeon_guid(), target);
  }

  // uint32 update_type = 2;
  if (this->update_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->update_type(), target);
  }

  // uint32 num = 3;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerCustomDungeonSocialGmNotify)
  return target;
}

size_t ServerCustomDungeonSocialGmNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerCustomDungeonSocialGmNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 dungeon_guid = 1;
  if (this->dungeon_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->dungeon_guid());
  }

  // uint32 update_type = 2;
  if (this->update_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->update_type());
  }

  // uint32 num = 3;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerCustomDungeonSocialGmNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerCustomDungeonSocialGmNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerCustomDungeonSocialGmNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerCustomDungeonSocialGmNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerCustomDungeonSocialGmNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerCustomDungeonSocialGmNotify)
    MergeFrom(*source);
  }
}

void ServerCustomDungeonSocialGmNotify::MergeFrom(const ServerCustomDungeonSocialGmNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerCustomDungeonSocialGmNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dungeon_guid() != 0) {
    set_dungeon_guid(from.dungeon_guid());
  }
  if (from.update_type() != 0) {
    set_update_type(from.update_type());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void ServerCustomDungeonSocialGmNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerCustomDungeonSocialGmNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerCustomDungeonSocialGmNotify::CopyFrom(const ServerCustomDungeonSocialGmNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerCustomDungeonSocialGmNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerCustomDungeonSocialGmNotify::IsInitialized() const {
  return true;
}

void ServerCustomDungeonSocialGmNotify::Swap(ServerCustomDungeonSocialGmNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerCustomDungeonSocialGmNotify::InternalSwap(ServerCustomDungeonSocialGmNotify* other) {
  using std::swap;
  swap(dungeon_guid_, other->dungeon_guid_);
  swap(update_type_, other->update_type_);
  swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerCustomDungeonSocialGmNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerCustomDungeonSocialGmNotify

// uint64 dungeon_guid = 1;
void ServerCustomDungeonSocialGmNotify::clear_dungeon_guid() {
  dungeon_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerCustomDungeonSocialGmNotify::dungeon_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerCustomDungeonSocialGmNotify.dungeon_guid)
  return dungeon_guid_;
}
void ServerCustomDungeonSocialGmNotify::set_dungeon_guid(::google::protobuf::uint64 value) {
  
  dungeon_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerCustomDungeonSocialGmNotify.dungeon_guid)
}

// uint32 update_type = 2;
void ServerCustomDungeonSocialGmNotify::clear_update_type() {
  update_type_ = 0u;
}
::google::protobuf::uint32 ServerCustomDungeonSocialGmNotify::update_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerCustomDungeonSocialGmNotify.update_type)
  return update_type_;
}
void ServerCustomDungeonSocialGmNotify::set_update_type(::google::protobuf::uint32 value) {
  
  update_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerCustomDungeonSocialGmNotify.update_type)
}

// uint32 num = 3;
void ServerCustomDungeonSocialGmNotify::clear_num() {
  num_ = 0u;
}
::google::protobuf::uint32 ServerCustomDungeonSocialGmNotify::num() const {
  // @@protoc_insertion_point(field_get:proto.ServerCustomDungeonSocialGmNotify.num)
  return num_;
}
void ServerCustomDungeonSocialGmNotify::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerCustomDungeonSocialGmNotify.num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerCustomDungeonFirstLikeNotify::ServerCustomDungeonFirstLikeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerCustomDungeonFirstLikeNotify)
}
ServerCustomDungeonFirstLikeNotify::ServerCustomDungeonFirstLikeNotify(const ServerCustomDungeonFirstLikeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ServerCustomDungeonFirstLikeNotify)
}

void ServerCustomDungeonFirstLikeNotify::SharedCtor() {
  _cached_size_ = 0;
}

ServerCustomDungeonFirstLikeNotify::~ServerCustomDungeonFirstLikeNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerCustomDungeonFirstLikeNotify)
  SharedDtor();
}

void ServerCustomDungeonFirstLikeNotify::SharedDtor() {
}

void ServerCustomDungeonFirstLikeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerCustomDungeonFirstLikeNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerCustomDungeonFirstLikeNotify& ServerCustomDungeonFirstLikeNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerCustomDungeonFirstLikeNotify* ServerCustomDungeonFirstLikeNotify::New(::google::protobuf::Arena* arena) const {
  ServerCustomDungeonFirstLikeNotify* n = new ServerCustomDungeonFirstLikeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerCustomDungeonFirstLikeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerCustomDungeonFirstLikeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ServerCustomDungeonFirstLikeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerCustomDungeonFirstLikeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerCustomDungeonFirstLikeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerCustomDungeonFirstLikeNotify)
  return false;
#undef DO_
}

void ServerCustomDungeonFirstLikeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerCustomDungeonFirstLikeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerCustomDungeonFirstLikeNotify)
}

::google::protobuf::uint8* ServerCustomDungeonFirstLikeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerCustomDungeonFirstLikeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerCustomDungeonFirstLikeNotify)
  return target;
}

size_t ServerCustomDungeonFirstLikeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerCustomDungeonFirstLikeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerCustomDungeonFirstLikeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerCustomDungeonFirstLikeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerCustomDungeonFirstLikeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerCustomDungeonFirstLikeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerCustomDungeonFirstLikeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerCustomDungeonFirstLikeNotify)
    MergeFrom(*source);
  }
}

void ServerCustomDungeonFirstLikeNotify::MergeFrom(const ServerCustomDungeonFirstLikeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerCustomDungeonFirstLikeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServerCustomDungeonFirstLikeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerCustomDungeonFirstLikeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerCustomDungeonFirstLikeNotify::CopyFrom(const ServerCustomDungeonFirstLikeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerCustomDungeonFirstLikeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerCustomDungeonFirstLikeNotify::IsInitialized() const {
  return true;
}

void ServerCustomDungeonFirstLikeNotify::Swap(ServerCustomDungeonFirstLikeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerCustomDungeonFirstLikeNotify::InternalSwap(ServerCustomDungeonFirstLikeNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerCustomDungeonFirstLikeNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerCustomDungeonFirstLikeNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetUgcReq::kUgcTypeFieldNumber;
const int ServerGetUgcReq::kUgcGuidFieldNumber;
const int ServerGetUgcReq::kIsEditFieldNumber;
const int ServerGetUgcReq::kIsRequireBriefFieldNumber;
const int ServerGetUgcReq::kUgcRecordUsageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetUgcReq::ServerGetUgcReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetUgcReq)
}
ServerGetUgcReq::ServerGetUgcReq(const ServerGetUgcReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ugc_guid_, &from.ugc_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ugc_record_usage_) -
    reinterpret_cast<char*>(&ugc_guid_)) + sizeof(ugc_record_usage_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetUgcReq)
}

void ServerGetUgcReq::SharedCtor() {
  ::memset(&ugc_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_record_usage_) -
      reinterpret_cast<char*>(&ugc_guid_)) + sizeof(ugc_record_usage_));
  _cached_size_ = 0;
}

ServerGetUgcReq::~ServerGetUgcReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetUgcReq)
  SharedDtor();
}

void ServerGetUgcReq::SharedDtor() {
}

void ServerGetUgcReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetUgcReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetUgcReq& ServerGetUgcReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetUgcReq* ServerGetUgcReq::New(::google::protobuf::Arena* arena) const {
  ServerGetUgcReq* n = new ServerGetUgcReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetUgcReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetUgcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ugc_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_record_usage_) -
      reinterpret_cast<char*>(&ugc_guid_)) + sizeof(ugc_record_usage_));
  _internal_metadata_.Clear();
}

bool ServerGetUgcReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetUgcReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.UgcType ugc_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_type(static_cast< ::proto::UgcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ugc_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ugc_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_edit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_edit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_require_brief = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_require_brief_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RecordUsage ugc_record_usage = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_record_usage(static_cast< ::proto::RecordUsage >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetUgcReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetUgcReq)
  return false;
#undef DO_
}

void ServerGetUgcReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetUgcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ugc_type(), output);
  }

  // uint64 ugc_guid = 2;
  if (this->ugc_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ugc_guid(), output);
  }

  // bool is_edit = 3;
  if (this->is_edit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_edit(), output);
  }

  // bool is_require_brief = 4;
  if (this->is_require_brief() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_require_brief(), output);
  }

  // .proto.RecordUsage ugc_record_usage = 5;
  if (this->ugc_record_usage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->ugc_record_usage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetUgcReq)
}

::google::protobuf::uint8* ServerGetUgcReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetUgcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ugc_type(), target);
  }

  // uint64 ugc_guid = 2;
  if (this->ugc_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ugc_guid(), target);
  }

  // bool is_edit = 3;
  if (this->is_edit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_edit(), target);
  }

  // bool is_require_brief = 4;
  if (this->is_require_brief() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_require_brief(), target);
  }

  // .proto.RecordUsage ugc_record_usage = 5;
  if (this->ugc_record_usage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->ugc_record_usage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetUgcReq)
  return target;
}

size_t ServerGetUgcReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetUgcReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ugc_guid = 2;
  if (this->ugc_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ugc_guid());
  }

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_type());
  }

  // bool is_edit = 3;
  if (this->is_edit() != 0) {
    total_size += 1 + 1;
  }

  // bool is_require_brief = 4;
  if (this->is_require_brief() != 0) {
    total_size += 1 + 1;
  }

  // .proto.RecordUsage ugc_record_usage = 5;
  if (this->ugc_record_usage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_record_usage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetUgcReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetUgcReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetUgcReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetUgcReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetUgcReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetUgcReq)
    MergeFrom(*source);
  }
}

void ServerGetUgcReq::MergeFrom(const ServerGetUgcReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetUgcReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ugc_guid() != 0) {
    set_ugc_guid(from.ugc_guid());
  }
  if (from.ugc_type() != 0) {
    set_ugc_type(from.ugc_type());
  }
  if (from.is_edit() != 0) {
    set_is_edit(from.is_edit());
  }
  if (from.is_require_brief() != 0) {
    set_is_require_brief(from.is_require_brief());
  }
  if (from.ugc_record_usage() != 0) {
    set_ugc_record_usage(from.ugc_record_usage());
  }
}

void ServerGetUgcReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetUgcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetUgcReq::CopyFrom(const ServerGetUgcReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetUgcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetUgcReq::IsInitialized() const {
  return true;
}

void ServerGetUgcReq::Swap(ServerGetUgcReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetUgcReq::InternalSwap(ServerGetUgcReq* other) {
  using std::swap;
  swap(ugc_guid_, other->ugc_guid_);
  swap(ugc_type_, other->ugc_type_);
  swap(is_edit_, other->is_edit_);
  swap(is_require_brief_, other->is_require_brief_);
  swap(ugc_record_usage_, other->ugc_record_usage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetUgcReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetUgcReq

// .proto.UgcType ugc_type = 1;
void ServerGetUgcReq::clear_ugc_type() {
  ugc_type_ = 0;
}
::proto::UgcType ServerGetUgcReq::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcReq.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
void ServerGetUgcReq::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcReq.ugc_type)
}

// uint64 ugc_guid = 2;
void ServerGetUgcReq::clear_ugc_guid() {
  ugc_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerGetUgcReq::ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcReq.ugc_guid)
  return ugc_guid_;
}
void ServerGetUgcReq::set_ugc_guid(::google::protobuf::uint64 value) {
  
  ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcReq.ugc_guid)
}

// bool is_edit = 3;
void ServerGetUgcReq::clear_is_edit() {
  is_edit_ = false;
}
bool ServerGetUgcReq::is_edit() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcReq.is_edit)
  return is_edit_;
}
void ServerGetUgcReq::set_is_edit(bool value) {
  
  is_edit_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcReq.is_edit)
}

// bool is_require_brief = 4;
void ServerGetUgcReq::clear_is_require_brief() {
  is_require_brief_ = false;
}
bool ServerGetUgcReq::is_require_brief() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcReq.is_require_brief)
  return is_require_brief_;
}
void ServerGetUgcReq::set_is_require_brief(bool value) {
  
  is_require_brief_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcReq.is_require_brief)
}

// .proto.RecordUsage ugc_record_usage = 5;
void ServerGetUgcReq::clear_ugc_record_usage() {
  ugc_record_usage_ = 0;
}
::proto::RecordUsage ServerGetUgcReq::ugc_record_usage() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcReq.ugc_record_usage)
  return static_cast< ::proto::RecordUsage >(ugc_record_usage_);
}
void ServerGetUgcReq::set_ugc_record_usage(::proto::RecordUsage value) {
  
  ugc_record_usage_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcReq.ugc_record_usage)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetUgcRsp::kRetcodeFieldNumber;
const int ServerGetUgcRsp::kUgcTypeFieldNumber;
const int ServerGetUgcRsp::kUgcGuidFieldNumber;
const int ServerGetUgcRsp::kIsEditFieldNumber;
const int ServerGetUgcRsp::kIsExistFieldNumber;
const int ServerGetUgcRsp::kUgcRecordUsageFieldNumber;
const int ServerGetUgcRsp::kUgcRedisDataFieldNumber;
const int ServerGetUgcRsp::kUgcBriefRedisDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetUgcRsp::ServerGetUgcRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetUgcRsp)
}
ServerGetUgcRsp::ServerGetUgcRsp(const ServerGetUgcRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ugc_redis_data()) {
    ugc_redis_data_ = new ::proto::UgcRedisData(*from.ugc_redis_data_);
  } else {
    ugc_redis_data_ = NULL;
  }
  if (from.has_ugc_brief_redis_data()) {
    ugc_brief_redis_data_ = new ::proto::UgcBriefRedisData(*from.ugc_brief_redis_data_);
  } else {
    ugc_brief_redis_data_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&ugc_record_usage_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(ugc_record_usage_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetUgcRsp)
}

void ServerGetUgcRsp::SharedCtor() {
  ::memset(&ugc_redis_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_record_usage_) -
      reinterpret_cast<char*>(&ugc_redis_data_)) + sizeof(ugc_record_usage_));
  _cached_size_ = 0;
}

ServerGetUgcRsp::~ServerGetUgcRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetUgcRsp)
  SharedDtor();
}

void ServerGetUgcRsp::SharedDtor() {
  if (this != internal_default_instance()) delete ugc_redis_data_;
  if (this != internal_default_instance()) delete ugc_brief_redis_data_;
}

void ServerGetUgcRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetUgcRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetUgcRsp& ServerGetUgcRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetUgcRsp* ServerGetUgcRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetUgcRsp* n = new ServerGetUgcRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetUgcRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetUgcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ugc_redis_data_ != NULL) {
    delete ugc_redis_data_;
  }
  ugc_redis_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && ugc_brief_redis_data_ != NULL) {
    delete ugc_brief_redis_data_;
  }
  ugc_brief_redis_data_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_record_usage_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(ugc_record_usage_));
  _internal_metadata_.Clear();
}

bool ServerGetUgcRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetUgcRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcType ugc_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_type(static_cast< ::proto::UgcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ugc_guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ugc_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_edit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_edit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_exist = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_exist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.RecordUsage ugc_record_usage = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_record_usage(static_cast< ::proto::RecordUsage >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcRedisData ugc_redis_data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ugc_redis_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcBriefRedisData ugc_brief_redis_data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ugc_brief_redis_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetUgcRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetUgcRsp)
  return false;
#undef DO_
}

void ServerGetUgcRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetUgcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ugc_type(), output);
  }

  // uint64 ugc_guid = 3;
  if (this->ugc_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ugc_guid(), output);
  }

  // bool is_edit = 4;
  if (this->is_edit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_edit(), output);
  }

  // bool is_exist = 5;
  if (this->is_exist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_exist(), output);
  }

  // .proto.RecordUsage ugc_record_usage = 6;
  if (this->ugc_record_usage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->ugc_record_usage(), output);
  }

  // .proto.UgcRedisData ugc_redis_data = 7;
  if (this->has_ugc_redis_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->ugc_redis_data_, output);
  }

  // .proto.UgcBriefRedisData ugc_brief_redis_data = 8;
  if (this->has_ugc_brief_redis_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->ugc_brief_redis_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetUgcRsp)
}

::google::protobuf::uint8* ServerGetUgcRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetUgcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ugc_type(), target);
  }

  // uint64 ugc_guid = 3;
  if (this->ugc_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ugc_guid(), target);
  }

  // bool is_edit = 4;
  if (this->is_edit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_edit(), target);
  }

  // bool is_exist = 5;
  if (this->is_exist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_exist(), target);
  }

  // .proto.RecordUsage ugc_record_usage = 6;
  if (this->ugc_record_usage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->ugc_record_usage(), target);
  }

  // .proto.UgcRedisData ugc_redis_data = 7;
  if (this->has_ugc_redis_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->ugc_redis_data_, deterministic, target);
  }

  // .proto.UgcBriefRedisData ugc_brief_redis_data = 8;
  if (this->has_ugc_brief_redis_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->ugc_brief_redis_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetUgcRsp)
  return target;
}

size_t ServerGetUgcRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetUgcRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.UgcRedisData ugc_redis_data = 7;
  if (this->has_ugc_redis_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ugc_redis_data_);
  }

  // .proto.UgcBriefRedisData ugc_brief_redis_data = 8;
  if (this->has_ugc_brief_redis_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ugc_brief_redis_data_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_type());
  }

  // uint64 ugc_guid = 3;
  if (this->ugc_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ugc_guid());
  }

  // bool is_edit = 4;
  if (this->is_edit() != 0) {
    total_size += 1 + 1;
  }

  // bool is_exist = 5;
  if (this->is_exist() != 0) {
    total_size += 1 + 1;
  }

  // .proto.RecordUsage ugc_record_usage = 6;
  if (this->ugc_record_usage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_record_usage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetUgcRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetUgcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetUgcRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetUgcRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetUgcRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetUgcRsp)
    MergeFrom(*source);
  }
}

void ServerGetUgcRsp::MergeFrom(const ServerGetUgcRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetUgcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ugc_redis_data()) {
    mutable_ugc_redis_data()->::proto::UgcRedisData::MergeFrom(from.ugc_redis_data());
  }
  if (from.has_ugc_brief_redis_data()) {
    mutable_ugc_brief_redis_data()->::proto::UgcBriefRedisData::MergeFrom(from.ugc_brief_redis_data());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.ugc_type() != 0) {
    set_ugc_type(from.ugc_type());
  }
  if (from.ugc_guid() != 0) {
    set_ugc_guid(from.ugc_guid());
  }
  if (from.is_edit() != 0) {
    set_is_edit(from.is_edit());
  }
  if (from.is_exist() != 0) {
    set_is_exist(from.is_exist());
  }
  if (from.ugc_record_usage() != 0) {
    set_ugc_record_usage(from.ugc_record_usage());
  }
}

void ServerGetUgcRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetUgcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetUgcRsp::CopyFrom(const ServerGetUgcRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetUgcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetUgcRsp::IsInitialized() const {
  return true;
}

void ServerGetUgcRsp::Swap(ServerGetUgcRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetUgcRsp::InternalSwap(ServerGetUgcRsp* other) {
  using std::swap;
  swap(ugc_redis_data_, other->ugc_redis_data_);
  swap(ugc_brief_redis_data_, other->ugc_brief_redis_data_);
  swap(retcode_, other->retcode_);
  swap(ugc_type_, other->ugc_type_);
  swap(ugc_guid_, other->ugc_guid_);
  swap(is_edit_, other->is_edit_);
  swap(is_exist_, other->is_exist_);
  swap(ugc_record_usage_, other->ugc_record_usage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetUgcRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetUgcRsp

// int32 retcode = 1;
void ServerGetUgcRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetUgcRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcRsp.retcode)
  return retcode_;
}
void ServerGetUgcRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcRsp.retcode)
}

// .proto.UgcType ugc_type = 2;
void ServerGetUgcRsp::clear_ugc_type() {
  ugc_type_ = 0;
}
::proto::UgcType ServerGetUgcRsp::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcRsp.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
void ServerGetUgcRsp::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcRsp.ugc_type)
}

// uint64 ugc_guid = 3;
void ServerGetUgcRsp::clear_ugc_guid() {
  ugc_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerGetUgcRsp::ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcRsp.ugc_guid)
  return ugc_guid_;
}
void ServerGetUgcRsp::set_ugc_guid(::google::protobuf::uint64 value) {
  
  ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcRsp.ugc_guid)
}

// bool is_edit = 4;
void ServerGetUgcRsp::clear_is_edit() {
  is_edit_ = false;
}
bool ServerGetUgcRsp::is_edit() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcRsp.is_edit)
  return is_edit_;
}
void ServerGetUgcRsp::set_is_edit(bool value) {
  
  is_edit_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcRsp.is_edit)
}

// bool is_exist = 5;
void ServerGetUgcRsp::clear_is_exist() {
  is_exist_ = false;
}
bool ServerGetUgcRsp::is_exist() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcRsp.is_exist)
  return is_exist_;
}
void ServerGetUgcRsp::set_is_exist(bool value) {
  
  is_exist_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcRsp.is_exist)
}

// .proto.RecordUsage ugc_record_usage = 6;
void ServerGetUgcRsp::clear_ugc_record_usage() {
  ugc_record_usage_ = 0;
}
::proto::RecordUsage ServerGetUgcRsp::ugc_record_usage() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcRsp.ugc_record_usage)
  return static_cast< ::proto::RecordUsage >(ugc_record_usage_);
}
void ServerGetUgcRsp::set_ugc_record_usage(::proto::RecordUsage value) {
  
  ugc_record_usage_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcRsp.ugc_record_usage)
}

// .proto.UgcRedisData ugc_redis_data = 7;
bool ServerGetUgcRsp::has_ugc_redis_data() const {
  return this != internal_default_instance() && ugc_redis_data_ != NULL;
}
void ServerGetUgcRsp::clear_ugc_redis_data() {
  if (GetArenaNoVirtual() == NULL && ugc_redis_data_ != NULL) delete ugc_redis_data_;
  ugc_redis_data_ = NULL;
}
const ::proto::UgcRedisData& ServerGetUgcRsp::ugc_redis_data() const {
  const ::proto::UgcRedisData* p = ugc_redis_data_;
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcRsp.ugc_redis_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::UgcRedisData*>(
      &::proto::_UgcRedisData_default_instance_);
}
::proto::UgcRedisData* ServerGetUgcRsp::mutable_ugc_redis_data() {
  
  if (ugc_redis_data_ == NULL) {
    ugc_redis_data_ = new ::proto::UgcRedisData;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGetUgcRsp.ugc_redis_data)
  return ugc_redis_data_;
}
::proto::UgcRedisData* ServerGetUgcRsp::release_ugc_redis_data() {
  // @@protoc_insertion_point(field_release:proto.ServerGetUgcRsp.ugc_redis_data)
  
  ::proto::UgcRedisData* temp = ugc_redis_data_;
  ugc_redis_data_ = NULL;
  return temp;
}
void ServerGetUgcRsp::set_allocated_ugc_redis_data(::proto::UgcRedisData* ugc_redis_data) {
  delete ugc_redis_data_;
  ugc_redis_data_ = ugc_redis_data;
  if (ugc_redis_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGetUgcRsp.ugc_redis_data)
}

// .proto.UgcBriefRedisData ugc_brief_redis_data = 8;
bool ServerGetUgcRsp::has_ugc_brief_redis_data() const {
  return this != internal_default_instance() && ugc_brief_redis_data_ != NULL;
}
void ServerGetUgcRsp::clear_ugc_brief_redis_data() {
  if (GetArenaNoVirtual() == NULL && ugc_brief_redis_data_ != NULL) delete ugc_brief_redis_data_;
  ugc_brief_redis_data_ = NULL;
}
const ::proto::UgcBriefRedisData& ServerGetUgcRsp::ugc_brief_redis_data() const {
  const ::proto::UgcBriefRedisData* p = ugc_brief_redis_data_;
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcRsp.ugc_brief_redis_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::UgcBriefRedisData*>(
      &::proto::_UgcBriefRedisData_default_instance_);
}
::proto::UgcBriefRedisData* ServerGetUgcRsp::mutable_ugc_brief_redis_data() {
  
  if (ugc_brief_redis_data_ == NULL) {
    ugc_brief_redis_data_ = new ::proto::UgcBriefRedisData;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGetUgcRsp.ugc_brief_redis_data)
  return ugc_brief_redis_data_;
}
::proto::UgcBriefRedisData* ServerGetUgcRsp::release_ugc_brief_redis_data() {
  // @@protoc_insertion_point(field_release:proto.ServerGetUgcRsp.ugc_brief_redis_data)
  
  ::proto::UgcBriefRedisData* temp = ugc_brief_redis_data_;
  ugc_brief_redis_data_ = NULL;
  return temp;
}
void ServerGetUgcRsp::set_allocated_ugc_brief_redis_data(::proto::UgcBriefRedisData* ugc_brief_redis_data) {
  delete ugc_brief_redis_data_;
  ugc_brief_redis_data_ = ugc_brief_redis_data;
  if (ugc_brief_redis_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGetUgcRsp.ugc_brief_redis_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetUgcBriefReq::kUgcTypeFieldNumber;
const int ServerGetUgcBriefReq::kUgcGuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetUgcBriefReq::ServerGetUgcBriefReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetUgcBriefReq)
}
ServerGetUgcBriefReq::ServerGetUgcBriefReq(const ServerGetUgcBriefReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ugc_guid_, &from.ugc_guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ugc_type_) -
    reinterpret_cast<char*>(&ugc_guid_)) + sizeof(ugc_type_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetUgcBriefReq)
}

void ServerGetUgcBriefReq::SharedCtor() {
  ::memset(&ugc_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_type_) -
      reinterpret_cast<char*>(&ugc_guid_)) + sizeof(ugc_type_));
  _cached_size_ = 0;
}

ServerGetUgcBriefReq::~ServerGetUgcBriefReq() {
  // @@protoc_insertion_point(destructor:proto.ServerGetUgcBriefReq)
  SharedDtor();
}

void ServerGetUgcBriefReq::SharedDtor() {
}

void ServerGetUgcBriefReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetUgcBriefReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetUgcBriefReq& ServerGetUgcBriefReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetUgcBriefReq* ServerGetUgcBriefReq::New(::google::protobuf::Arena* arena) const {
  ServerGetUgcBriefReq* n = new ServerGetUgcBriefReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetUgcBriefReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetUgcBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ugc_guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_type_) -
      reinterpret_cast<char*>(&ugc_guid_)) + sizeof(ugc_type_));
  _internal_metadata_.Clear();
}

bool ServerGetUgcBriefReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetUgcBriefReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.UgcType ugc_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_type(static_cast< ::proto::UgcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ugc_guid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ugc_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetUgcBriefReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetUgcBriefReq)
  return false;
#undef DO_
}

void ServerGetUgcBriefReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetUgcBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ugc_type(), output);
  }

  // uint64 ugc_guid = 2;
  if (this->ugc_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->ugc_guid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetUgcBriefReq)
}

::google::protobuf::uint8* ServerGetUgcBriefReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetUgcBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ugc_type(), target);
  }

  // uint64 ugc_guid = 2;
  if (this->ugc_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->ugc_guid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetUgcBriefReq)
  return target;
}

size_t ServerGetUgcBriefReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetUgcBriefReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ugc_guid = 2;
  if (this->ugc_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ugc_guid());
  }

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetUgcBriefReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetUgcBriefReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetUgcBriefReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetUgcBriefReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetUgcBriefReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetUgcBriefReq)
    MergeFrom(*source);
  }
}

void ServerGetUgcBriefReq::MergeFrom(const ServerGetUgcBriefReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetUgcBriefReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ugc_guid() != 0) {
    set_ugc_guid(from.ugc_guid());
  }
  if (from.ugc_type() != 0) {
    set_ugc_type(from.ugc_type());
  }
}

void ServerGetUgcBriefReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetUgcBriefReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetUgcBriefReq::CopyFrom(const ServerGetUgcBriefReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetUgcBriefReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetUgcBriefReq::IsInitialized() const {
  return true;
}

void ServerGetUgcBriefReq::Swap(ServerGetUgcBriefReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetUgcBriefReq::InternalSwap(ServerGetUgcBriefReq* other) {
  using std::swap;
  swap(ugc_guid_, other->ugc_guid_);
  swap(ugc_type_, other->ugc_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetUgcBriefReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetUgcBriefReq

// .proto.UgcType ugc_type = 1;
void ServerGetUgcBriefReq::clear_ugc_type() {
  ugc_type_ = 0;
}
::proto::UgcType ServerGetUgcBriefReq::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcBriefReq.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
void ServerGetUgcBriefReq::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcBriefReq.ugc_type)
}

// uint64 ugc_guid = 2;
void ServerGetUgcBriefReq::clear_ugc_guid() {
  ugc_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerGetUgcBriefReq::ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcBriefReq.ugc_guid)
  return ugc_guid_;
}
void ServerGetUgcBriefReq::set_ugc_guid(::google::protobuf::uint64 value) {
  
  ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcBriefReq.ugc_guid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerGetUgcBriefRsp::kRetcodeFieldNumber;
const int ServerGetUgcBriefRsp::kUgcTypeFieldNumber;
const int ServerGetUgcBriefRsp::kIsExistFieldNumber;
const int ServerGetUgcBriefRsp::kUgcBriefRedisDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerGetUgcBriefRsp::ServerGetUgcBriefRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerGetUgcBriefRsp)
}
ServerGetUgcBriefRsp::ServerGetUgcBriefRsp(const ServerGetUgcBriefRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ugc_brief_redis_data()) {
    ugc_brief_redis_data_ = new ::proto::UgcBriefRedisData(*from.ugc_brief_redis_data_);
  } else {
    ugc_brief_redis_data_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_exist_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(is_exist_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerGetUgcBriefRsp)
}

void ServerGetUgcBriefRsp::SharedCtor() {
  ::memset(&ugc_brief_redis_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_exist_) -
      reinterpret_cast<char*>(&ugc_brief_redis_data_)) + sizeof(is_exist_));
  _cached_size_ = 0;
}

ServerGetUgcBriefRsp::~ServerGetUgcBriefRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerGetUgcBriefRsp)
  SharedDtor();
}

void ServerGetUgcBriefRsp::SharedDtor() {
  if (this != internal_default_instance()) delete ugc_brief_redis_data_;
}

void ServerGetUgcBriefRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerGetUgcBriefRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerGetUgcBriefRsp& ServerGetUgcBriefRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerGetUgcBriefRsp* ServerGetUgcBriefRsp::New(::google::protobuf::Arena* arena) const {
  ServerGetUgcBriefRsp* n = new ServerGetUgcBriefRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerGetUgcBriefRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerGetUgcBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ugc_brief_redis_data_ != NULL) {
    delete ugc_brief_redis_data_;
  }
  ugc_brief_redis_data_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_exist_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_exist_));
  _internal_metadata_.Clear();
}

bool ServerGetUgcBriefRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerGetUgcBriefRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcType ugc_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_type(static_cast< ::proto::UgcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_exist = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_exist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcBriefRedisData ugc_brief_redis_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ugc_brief_redis_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerGetUgcBriefRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerGetUgcBriefRsp)
  return false;
#undef DO_
}

void ServerGetUgcBriefRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerGetUgcBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ugc_type(), output);
  }

  // bool is_exist = 3;
  if (this->is_exist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_exist(), output);
  }

  // .proto.UgcBriefRedisData ugc_brief_redis_data = 4;
  if (this->has_ugc_brief_redis_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->ugc_brief_redis_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerGetUgcBriefRsp)
}

::google::protobuf::uint8* ServerGetUgcBriefRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerGetUgcBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ugc_type(), target);
  }

  // bool is_exist = 3;
  if (this->is_exist() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_exist(), target);
  }

  // .proto.UgcBriefRedisData ugc_brief_redis_data = 4;
  if (this->has_ugc_brief_redis_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->ugc_brief_redis_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerGetUgcBriefRsp)
  return target;
}

size_t ServerGetUgcBriefRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerGetUgcBriefRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.UgcBriefRedisData ugc_brief_redis_data = 4;
  if (this->has_ugc_brief_redis_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ugc_brief_redis_data_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_type());
  }

  // bool is_exist = 3;
  if (this->is_exist() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerGetUgcBriefRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerGetUgcBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerGetUgcBriefRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerGetUgcBriefRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerGetUgcBriefRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerGetUgcBriefRsp)
    MergeFrom(*source);
  }
}

void ServerGetUgcBriefRsp::MergeFrom(const ServerGetUgcBriefRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerGetUgcBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ugc_brief_redis_data()) {
    mutable_ugc_brief_redis_data()->::proto::UgcBriefRedisData::MergeFrom(from.ugc_brief_redis_data());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.ugc_type() != 0) {
    set_ugc_type(from.ugc_type());
  }
  if (from.is_exist() != 0) {
    set_is_exist(from.is_exist());
  }
}

void ServerGetUgcBriefRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerGetUgcBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerGetUgcBriefRsp::CopyFrom(const ServerGetUgcBriefRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerGetUgcBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerGetUgcBriefRsp::IsInitialized() const {
  return true;
}

void ServerGetUgcBriefRsp::Swap(ServerGetUgcBriefRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerGetUgcBriefRsp::InternalSwap(ServerGetUgcBriefRsp* other) {
  using std::swap;
  swap(ugc_brief_redis_data_, other->ugc_brief_redis_data_);
  swap(retcode_, other->retcode_);
  swap(ugc_type_, other->ugc_type_);
  swap(is_exist_, other->is_exist_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerGetUgcBriefRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerGetUgcBriefRsp

// int32 retcode = 1;
void ServerGetUgcBriefRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerGetUgcBriefRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcBriefRsp.retcode)
  return retcode_;
}
void ServerGetUgcBriefRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcBriefRsp.retcode)
}

// .proto.UgcType ugc_type = 2;
void ServerGetUgcBriefRsp::clear_ugc_type() {
  ugc_type_ = 0;
}
::proto::UgcType ServerGetUgcBriefRsp::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcBriefRsp.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
void ServerGetUgcBriefRsp::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcBriefRsp.ugc_type)
}

// bool is_exist = 3;
void ServerGetUgcBriefRsp::clear_is_exist() {
  is_exist_ = false;
}
bool ServerGetUgcBriefRsp::is_exist() const {
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcBriefRsp.is_exist)
  return is_exist_;
}
void ServerGetUgcBriefRsp::set_is_exist(bool value) {
  
  is_exist_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerGetUgcBriefRsp.is_exist)
}

// .proto.UgcBriefRedisData ugc_brief_redis_data = 4;
bool ServerGetUgcBriefRsp::has_ugc_brief_redis_data() const {
  return this != internal_default_instance() && ugc_brief_redis_data_ != NULL;
}
void ServerGetUgcBriefRsp::clear_ugc_brief_redis_data() {
  if (GetArenaNoVirtual() == NULL && ugc_brief_redis_data_ != NULL) delete ugc_brief_redis_data_;
  ugc_brief_redis_data_ = NULL;
}
const ::proto::UgcBriefRedisData& ServerGetUgcBriefRsp::ugc_brief_redis_data() const {
  const ::proto::UgcBriefRedisData* p = ugc_brief_redis_data_;
  // @@protoc_insertion_point(field_get:proto.ServerGetUgcBriefRsp.ugc_brief_redis_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::UgcBriefRedisData*>(
      &::proto::_UgcBriefRedisData_default_instance_);
}
::proto::UgcBriefRedisData* ServerGetUgcBriefRsp::mutable_ugc_brief_redis_data() {
  
  if (ugc_brief_redis_data_ == NULL) {
    ugc_brief_redis_data_ = new ::proto::UgcBriefRedisData;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerGetUgcBriefRsp.ugc_brief_redis_data)
  return ugc_brief_redis_data_;
}
::proto::UgcBriefRedisData* ServerGetUgcBriefRsp::release_ugc_brief_redis_data() {
  // @@protoc_insertion_point(field_release:proto.ServerGetUgcBriefRsp.ugc_brief_redis_data)
  
  ::proto::UgcBriefRedisData* temp = ugc_brief_redis_data_;
  ugc_brief_redis_data_ = NULL;
  return temp;
}
void ServerGetUgcBriefRsp::set_allocated_ugc_brief_redis_data(::proto::UgcBriefRedisData* ugc_brief_redis_data) {
  delete ugc_brief_redis_data_;
  ugc_brief_redis_data_ = ugc_brief_redis_data;
  if (ugc_brief_redis_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerGetUgcBriefRsp.ugc_brief_redis_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMultiGetUgcBriefReq::kUgcTypeFieldNumber;
const int ServerMultiGetUgcBriefReq::kUgcGuidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMultiGetUgcBriefReq::ServerMultiGetUgcBriefReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerMultiGetUgcBriefReq)
}
ServerMultiGetUgcBriefReq::ServerMultiGetUgcBriefReq(const ServerMultiGetUgcBriefReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ugc_guid_list_(from.ugc_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ugc_type_ = from.ugc_type_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerMultiGetUgcBriefReq)
}

void ServerMultiGetUgcBriefReq::SharedCtor() {
  ugc_type_ = 0;
  _cached_size_ = 0;
}

ServerMultiGetUgcBriefReq::~ServerMultiGetUgcBriefReq() {
  // @@protoc_insertion_point(destructor:proto.ServerMultiGetUgcBriefReq)
  SharedDtor();
}

void ServerMultiGetUgcBriefReq::SharedDtor() {
}

void ServerMultiGetUgcBriefReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerMultiGetUgcBriefReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerMultiGetUgcBriefReq& ServerMultiGetUgcBriefReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerMultiGetUgcBriefReq* ServerMultiGetUgcBriefReq::New(::google::protobuf::Arena* arena) const {
  ServerMultiGetUgcBriefReq* n = new ServerMultiGetUgcBriefReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerMultiGetUgcBriefReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerMultiGetUgcBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ugc_guid_list_.Clear();
  ugc_type_ = 0;
  _internal_metadata_.Clear();
}

bool ServerMultiGetUgcBriefReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerMultiGetUgcBriefReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.UgcType ugc_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_type(static_cast< ::proto::UgcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 ugc_guid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_ugc_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_ugc_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerMultiGetUgcBriefReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerMultiGetUgcBriefReq)
  return false;
#undef DO_
}

void ServerMultiGetUgcBriefReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerMultiGetUgcBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ugc_type(), output);
  }

  // repeated uint64 ugc_guid_list = 2;
  if (this->ugc_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _ugc_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->ugc_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->ugc_guid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerMultiGetUgcBriefReq)
}

::google::protobuf::uint8* ServerMultiGetUgcBriefReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerMultiGetUgcBriefReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ugc_type(), target);
  }

  // repeated uint64 ugc_guid_list = 2;
  if (this->ugc_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _ugc_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->ugc_guid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerMultiGetUgcBriefReq)
  return target;
}

size_t ServerMultiGetUgcBriefReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerMultiGetUgcBriefReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 ugc_guid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->ugc_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _ugc_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerMultiGetUgcBriefReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerMultiGetUgcBriefReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMultiGetUgcBriefReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMultiGetUgcBriefReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerMultiGetUgcBriefReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerMultiGetUgcBriefReq)
    MergeFrom(*source);
  }
}

void ServerMultiGetUgcBriefReq::MergeFrom(const ServerMultiGetUgcBriefReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerMultiGetUgcBriefReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ugc_guid_list_.MergeFrom(from.ugc_guid_list_);
  if (from.ugc_type() != 0) {
    set_ugc_type(from.ugc_type());
  }
}

void ServerMultiGetUgcBriefReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerMultiGetUgcBriefReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMultiGetUgcBriefReq::CopyFrom(const ServerMultiGetUgcBriefReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerMultiGetUgcBriefReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMultiGetUgcBriefReq::IsInitialized() const {
  return true;
}

void ServerMultiGetUgcBriefReq::Swap(ServerMultiGetUgcBriefReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMultiGetUgcBriefReq::InternalSwap(ServerMultiGetUgcBriefReq* other) {
  using std::swap;
  ugc_guid_list_.InternalSwap(&other->ugc_guid_list_);
  swap(ugc_type_, other->ugc_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerMultiGetUgcBriefReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerMultiGetUgcBriefReq

// .proto.UgcType ugc_type = 1;
void ServerMultiGetUgcBriefReq::clear_ugc_type() {
  ugc_type_ = 0;
}
::proto::UgcType ServerMultiGetUgcBriefReq::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerMultiGetUgcBriefReq.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
void ServerMultiGetUgcBriefReq::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMultiGetUgcBriefReq.ugc_type)
}

// repeated uint64 ugc_guid_list = 2;
int ServerMultiGetUgcBriefReq::ugc_guid_list_size() const {
  return ugc_guid_list_.size();
}
void ServerMultiGetUgcBriefReq::clear_ugc_guid_list() {
  ugc_guid_list_.Clear();
}
::google::protobuf::uint64 ServerMultiGetUgcBriefReq::ugc_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerMultiGetUgcBriefReq.ugc_guid_list)
  return ugc_guid_list_.Get(index);
}
void ServerMultiGetUgcBriefReq::set_ugc_guid_list(int index, ::google::protobuf::uint64 value) {
  ugc_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerMultiGetUgcBriefReq.ugc_guid_list)
}
void ServerMultiGetUgcBriefReq::add_ugc_guid_list(::google::protobuf::uint64 value) {
  ugc_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerMultiGetUgcBriefReq.ugc_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ServerMultiGetUgcBriefReq::ugc_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerMultiGetUgcBriefReq.ugc_guid_list)
  return ugc_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ServerMultiGetUgcBriefReq::mutable_ugc_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerMultiGetUgcBriefReq.ugc_guid_list)
  return &ugc_guid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerMultiGetUgcBriefRsp::kRetcodeFieldNumber;
const int ServerMultiGetUgcBriefRsp::kUgcTypeFieldNumber;
const int ServerMultiGetUgcBriefRsp::kUgcBriefListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerMultiGetUgcBriefRsp::ServerMultiGetUgcBriefRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerMultiGetUgcBriefRsp)
}
ServerMultiGetUgcBriefRsp::ServerMultiGetUgcBriefRsp(const ServerMultiGetUgcBriefRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ugc_brief_list_(from.ugc_brief_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&ugc_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(ugc_type_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerMultiGetUgcBriefRsp)
}

void ServerMultiGetUgcBriefRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(ugc_type_));
  _cached_size_ = 0;
}

ServerMultiGetUgcBriefRsp::~ServerMultiGetUgcBriefRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerMultiGetUgcBriefRsp)
  SharedDtor();
}

void ServerMultiGetUgcBriefRsp::SharedDtor() {
}

void ServerMultiGetUgcBriefRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerMultiGetUgcBriefRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerMultiGetUgcBriefRsp& ServerMultiGetUgcBriefRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerMultiGetUgcBriefRsp* ServerMultiGetUgcBriefRsp::New(::google::protobuf::Arena* arena) const {
  ServerMultiGetUgcBriefRsp* n = new ServerMultiGetUgcBriefRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerMultiGetUgcBriefRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerMultiGetUgcBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ugc_brief_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(ugc_type_));
  _internal_metadata_.Clear();
}

bool ServerMultiGetUgcBriefRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerMultiGetUgcBriefRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcType ugc_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_type(static_cast< ::proto::UgcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.UgcBriefRedisData ugc_brief_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ugc_brief_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerMultiGetUgcBriefRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerMultiGetUgcBriefRsp)
  return false;
#undef DO_
}

void ServerMultiGetUgcBriefRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerMultiGetUgcBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ugc_type(), output);
  }

  // repeated .proto.UgcBriefRedisData ugc_brief_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ugc_brief_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ugc_brief_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerMultiGetUgcBriefRsp)
}

::google::protobuf::uint8* ServerMultiGetUgcBriefRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerMultiGetUgcBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ugc_type(), target);
  }

  // repeated .proto.UgcBriefRedisData ugc_brief_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ugc_brief_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->ugc_brief_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerMultiGetUgcBriefRsp)
  return target;
}

size_t ServerMultiGetUgcBriefRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerMultiGetUgcBriefRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.UgcBriefRedisData ugc_brief_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->ugc_brief_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ugc_brief_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerMultiGetUgcBriefRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerMultiGetUgcBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerMultiGetUgcBriefRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerMultiGetUgcBriefRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerMultiGetUgcBriefRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerMultiGetUgcBriefRsp)
    MergeFrom(*source);
  }
}

void ServerMultiGetUgcBriefRsp::MergeFrom(const ServerMultiGetUgcBriefRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerMultiGetUgcBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ugc_brief_list_.MergeFrom(from.ugc_brief_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.ugc_type() != 0) {
    set_ugc_type(from.ugc_type());
  }
}

void ServerMultiGetUgcBriefRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerMultiGetUgcBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerMultiGetUgcBriefRsp::CopyFrom(const ServerMultiGetUgcBriefRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerMultiGetUgcBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerMultiGetUgcBriefRsp::IsInitialized() const {
  return true;
}

void ServerMultiGetUgcBriefRsp::Swap(ServerMultiGetUgcBriefRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerMultiGetUgcBriefRsp::InternalSwap(ServerMultiGetUgcBriefRsp* other) {
  using std::swap;
  ugc_brief_list_.InternalSwap(&other->ugc_brief_list_);
  swap(retcode_, other->retcode_);
  swap(ugc_type_, other->ugc_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerMultiGetUgcBriefRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerMultiGetUgcBriefRsp

// int32 retcode = 1;
void ServerMultiGetUgcBriefRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerMultiGetUgcBriefRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerMultiGetUgcBriefRsp.retcode)
  return retcode_;
}
void ServerMultiGetUgcBriefRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMultiGetUgcBriefRsp.retcode)
}

// .proto.UgcType ugc_type = 2;
void ServerMultiGetUgcBriefRsp::clear_ugc_type() {
  ugc_type_ = 0;
}
::proto::UgcType ServerMultiGetUgcBriefRsp::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerMultiGetUgcBriefRsp.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
void ServerMultiGetUgcBriefRsp::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerMultiGetUgcBriefRsp.ugc_type)
}

// repeated .proto.UgcBriefRedisData ugc_brief_list = 3;
int ServerMultiGetUgcBriefRsp::ugc_brief_list_size() const {
  return ugc_brief_list_.size();
}
void ServerMultiGetUgcBriefRsp::clear_ugc_brief_list() {
  ugc_brief_list_.Clear();
}
const ::proto::UgcBriefRedisData& ServerMultiGetUgcBriefRsp::ugc_brief_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerMultiGetUgcBriefRsp.ugc_brief_list)
  return ugc_brief_list_.Get(index);
}
::proto::UgcBriefRedisData* ServerMultiGetUgcBriefRsp::mutable_ugc_brief_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerMultiGetUgcBriefRsp.ugc_brief_list)
  return ugc_brief_list_.Mutable(index);
}
::proto::UgcBriefRedisData* ServerMultiGetUgcBriefRsp::add_ugc_brief_list() {
  // @@protoc_insertion_point(field_add:proto.ServerMultiGetUgcBriefRsp.ugc_brief_list)
  return ugc_brief_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::UgcBriefRedisData >*
ServerMultiGetUgcBriefRsp::mutable_ugc_brief_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerMultiGetUgcBriefRsp.ugc_brief_list)
  return &ugc_brief_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::UgcBriefRedisData >&
ServerMultiGetUgcBriefRsp::ugc_brief_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerMultiGetUgcBriefRsp.ugc_brief_list)
  return ugc_brief_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerSaveUgcReq::kUgcTypeFieldNumber;
const int ServerSaveUgcReq::kUgcRedisDataFieldNumber;
const int ServerSaveUgcReq::kUgcBriefRedisDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerSaveUgcReq::ServerSaveUgcReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerSaveUgcReq)
}
ServerSaveUgcReq::ServerSaveUgcReq(const ServerSaveUgcReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ugc_redis_data()) {
    ugc_redis_data_ = new ::proto::UgcRedisData(*from.ugc_redis_data_);
  } else {
    ugc_redis_data_ = NULL;
  }
  if (from.has_ugc_brief_redis_data()) {
    ugc_brief_redis_data_ = new ::proto::UgcBriefRedisData(*from.ugc_brief_redis_data_);
  } else {
    ugc_brief_redis_data_ = NULL;
  }
  ugc_type_ = from.ugc_type_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerSaveUgcReq)
}

void ServerSaveUgcReq::SharedCtor() {
  ::memset(&ugc_redis_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_type_) -
      reinterpret_cast<char*>(&ugc_redis_data_)) + sizeof(ugc_type_));
  _cached_size_ = 0;
}

ServerSaveUgcReq::~ServerSaveUgcReq() {
  // @@protoc_insertion_point(destructor:proto.ServerSaveUgcReq)
  SharedDtor();
}

void ServerSaveUgcReq::SharedDtor() {
  if (this != internal_default_instance()) delete ugc_redis_data_;
  if (this != internal_default_instance()) delete ugc_brief_redis_data_;
}

void ServerSaveUgcReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerSaveUgcReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerSaveUgcReq& ServerSaveUgcReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerSaveUgcReq* ServerSaveUgcReq::New(::google::protobuf::Arena* arena) const {
  ServerSaveUgcReq* n = new ServerSaveUgcReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerSaveUgcReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerSaveUgcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ugc_redis_data_ != NULL) {
    delete ugc_redis_data_;
  }
  ugc_redis_data_ = NULL;
  if (GetArenaNoVirtual() == NULL && ugc_brief_redis_data_ != NULL) {
    delete ugc_brief_redis_data_;
  }
  ugc_brief_redis_data_ = NULL;
  ugc_type_ = 0;
  _internal_metadata_.Clear();
}

bool ServerSaveUgcReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerSaveUgcReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.UgcType ugc_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_type(static_cast< ::proto::UgcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcRedisData ugc_redis_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ugc_redis_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcBriefRedisData ugc_brief_redis_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ugc_brief_redis_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerSaveUgcReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerSaveUgcReq)
  return false;
#undef DO_
}

void ServerSaveUgcReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerSaveUgcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ugc_type(), output);
  }

  // .proto.UgcRedisData ugc_redis_data = 2;
  if (this->has_ugc_redis_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->ugc_redis_data_, output);
  }

  // .proto.UgcBriefRedisData ugc_brief_redis_data = 3;
  if (this->has_ugc_brief_redis_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ugc_brief_redis_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerSaveUgcReq)
}

::google::protobuf::uint8* ServerSaveUgcReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerSaveUgcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ugc_type(), target);
  }

  // .proto.UgcRedisData ugc_redis_data = 2;
  if (this->has_ugc_redis_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->ugc_redis_data_, deterministic, target);
  }

  // .proto.UgcBriefRedisData ugc_brief_redis_data = 3;
  if (this->has_ugc_brief_redis_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ugc_brief_redis_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerSaveUgcReq)
  return target;
}

size_t ServerSaveUgcReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerSaveUgcReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.UgcRedisData ugc_redis_data = 2;
  if (this->has_ugc_redis_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ugc_redis_data_);
  }

  // .proto.UgcBriefRedisData ugc_brief_redis_data = 3;
  if (this->has_ugc_brief_redis_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ugc_brief_redis_data_);
  }

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerSaveUgcReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerSaveUgcReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerSaveUgcReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerSaveUgcReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerSaveUgcReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerSaveUgcReq)
    MergeFrom(*source);
  }
}

void ServerSaveUgcReq::MergeFrom(const ServerSaveUgcReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerSaveUgcReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ugc_redis_data()) {
    mutable_ugc_redis_data()->::proto::UgcRedisData::MergeFrom(from.ugc_redis_data());
  }
  if (from.has_ugc_brief_redis_data()) {
    mutable_ugc_brief_redis_data()->::proto::UgcBriefRedisData::MergeFrom(from.ugc_brief_redis_data());
  }
  if (from.ugc_type() != 0) {
    set_ugc_type(from.ugc_type());
  }
}

void ServerSaveUgcReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerSaveUgcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerSaveUgcReq::CopyFrom(const ServerSaveUgcReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerSaveUgcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerSaveUgcReq::IsInitialized() const {
  return true;
}

void ServerSaveUgcReq::Swap(ServerSaveUgcReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerSaveUgcReq::InternalSwap(ServerSaveUgcReq* other) {
  using std::swap;
  swap(ugc_redis_data_, other->ugc_redis_data_);
  swap(ugc_brief_redis_data_, other->ugc_brief_redis_data_);
  swap(ugc_type_, other->ugc_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerSaveUgcReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerSaveUgcReq

// .proto.UgcType ugc_type = 1;
void ServerSaveUgcReq::clear_ugc_type() {
  ugc_type_ = 0;
}
::proto::UgcType ServerSaveUgcReq::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerSaveUgcReq.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
void ServerSaveUgcReq::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerSaveUgcReq.ugc_type)
}

// .proto.UgcRedisData ugc_redis_data = 2;
bool ServerSaveUgcReq::has_ugc_redis_data() const {
  return this != internal_default_instance() && ugc_redis_data_ != NULL;
}
void ServerSaveUgcReq::clear_ugc_redis_data() {
  if (GetArenaNoVirtual() == NULL && ugc_redis_data_ != NULL) delete ugc_redis_data_;
  ugc_redis_data_ = NULL;
}
const ::proto::UgcRedisData& ServerSaveUgcReq::ugc_redis_data() const {
  const ::proto::UgcRedisData* p = ugc_redis_data_;
  // @@protoc_insertion_point(field_get:proto.ServerSaveUgcReq.ugc_redis_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::UgcRedisData*>(
      &::proto::_UgcRedisData_default_instance_);
}
::proto::UgcRedisData* ServerSaveUgcReq::mutable_ugc_redis_data() {
  
  if (ugc_redis_data_ == NULL) {
    ugc_redis_data_ = new ::proto::UgcRedisData;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerSaveUgcReq.ugc_redis_data)
  return ugc_redis_data_;
}
::proto::UgcRedisData* ServerSaveUgcReq::release_ugc_redis_data() {
  // @@protoc_insertion_point(field_release:proto.ServerSaveUgcReq.ugc_redis_data)
  
  ::proto::UgcRedisData* temp = ugc_redis_data_;
  ugc_redis_data_ = NULL;
  return temp;
}
void ServerSaveUgcReq::set_allocated_ugc_redis_data(::proto::UgcRedisData* ugc_redis_data) {
  delete ugc_redis_data_;
  ugc_redis_data_ = ugc_redis_data;
  if (ugc_redis_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerSaveUgcReq.ugc_redis_data)
}

// .proto.UgcBriefRedisData ugc_brief_redis_data = 3;
bool ServerSaveUgcReq::has_ugc_brief_redis_data() const {
  return this != internal_default_instance() && ugc_brief_redis_data_ != NULL;
}
void ServerSaveUgcReq::clear_ugc_brief_redis_data() {
  if (GetArenaNoVirtual() == NULL && ugc_brief_redis_data_ != NULL) delete ugc_brief_redis_data_;
  ugc_brief_redis_data_ = NULL;
}
const ::proto::UgcBriefRedisData& ServerSaveUgcReq::ugc_brief_redis_data() const {
  const ::proto::UgcBriefRedisData* p = ugc_brief_redis_data_;
  // @@protoc_insertion_point(field_get:proto.ServerSaveUgcReq.ugc_brief_redis_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::UgcBriefRedisData*>(
      &::proto::_UgcBriefRedisData_default_instance_);
}
::proto::UgcBriefRedisData* ServerSaveUgcReq::mutable_ugc_brief_redis_data() {
  
  if (ugc_brief_redis_data_ == NULL) {
    ugc_brief_redis_data_ = new ::proto::UgcBriefRedisData;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerSaveUgcReq.ugc_brief_redis_data)
  return ugc_brief_redis_data_;
}
::proto::UgcBriefRedisData* ServerSaveUgcReq::release_ugc_brief_redis_data() {
  // @@protoc_insertion_point(field_release:proto.ServerSaveUgcReq.ugc_brief_redis_data)
  
  ::proto::UgcBriefRedisData* temp = ugc_brief_redis_data_;
  ugc_brief_redis_data_ = NULL;
  return temp;
}
void ServerSaveUgcReq::set_allocated_ugc_brief_redis_data(::proto::UgcBriefRedisData* ugc_brief_redis_data) {
  delete ugc_brief_redis_data_;
  ugc_brief_redis_data_ = ugc_brief_redis_data;
  if (ugc_brief_redis_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerSaveUgcReq.ugc_brief_redis_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerSaveUgcRsp::kRetcodeFieldNumber;
const int ServerSaveUgcRsp::kUgcTypeFieldNumber;
const int ServerSaveUgcRsp::kUgcBriefRedisDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerSaveUgcRsp::ServerSaveUgcRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerSaveUgcRsp)
}
ServerSaveUgcRsp::ServerSaveUgcRsp(const ServerSaveUgcRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ugc_brief_redis_data()) {
    ugc_brief_redis_data_ = new ::proto::UgcBriefRedisData(*from.ugc_brief_redis_data_);
  } else {
    ugc_brief_redis_data_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&ugc_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(ugc_type_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerSaveUgcRsp)
}

void ServerSaveUgcRsp::SharedCtor() {
  ::memset(&ugc_brief_redis_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_type_) -
      reinterpret_cast<char*>(&ugc_brief_redis_data_)) + sizeof(ugc_type_));
  _cached_size_ = 0;
}

ServerSaveUgcRsp::~ServerSaveUgcRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerSaveUgcRsp)
  SharedDtor();
}

void ServerSaveUgcRsp::SharedDtor() {
  if (this != internal_default_instance()) delete ugc_brief_redis_data_;
}

void ServerSaveUgcRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerSaveUgcRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerSaveUgcRsp& ServerSaveUgcRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerSaveUgcRsp* ServerSaveUgcRsp::New(::google::protobuf::Arena* arena) const {
  ServerSaveUgcRsp* n = new ServerSaveUgcRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerSaveUgcRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerSaveUgcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ugc_brief_redis_data_ != NULL) {
    delete ugc_brief_redis_data_;
  }
  ugc_brief_redis_data_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(ugc_type_));
  _internal_metadata_.Clear();
}

bool ServerSaveUgcRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerSaveUgcRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcType ugc_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_type(static_cast< ::proto::UgcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcBriefRedisData ugc_brief_redis_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ugc_brief_redis_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerSaveUgcRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerSaveUgcRsp)
  return false;
#undef DO_
}

void ServerSaveUgcRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerSaveUgcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ugc_type(), output);
  }

  // .proto.UgcBriefRedisData ugc_brief_redis_data = 3;
  if (this->has_ugc_brief_redis_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ugc_brief_redis_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerSaveUgcRsp)
}

::google::protobuf::uint8* ServerSaveUgcRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerSaveUgcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ugc_type(), target);
  }

  // .proto.UgcBriefRedisData ugc_brief_redis_data = 3;
  if (this->has_ugc_brief_redis_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->ugc_brief_redis_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerSaveUgcRsp)
  return target;
}

size_t ServerSaveUgcRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerSaveUgcRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.UgcBriefRedisData ugc_brief_redis_data = 3;
  if (this->has_ugc_brief_redis_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ugc_brief_redis_data_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerSaveUgcRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerSaveUgcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerSaveUgcRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerSaveUgcRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerSaveUgcRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerSaveUgcRsp)
    MergeFrom(*source);
  }
}

void ServerSaveUgcRsp::MergeFrom(const ServerSaveUgcRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerSaveUgcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ugc_brief_redis_data()) {
    mutable_ugc_brief_redis_data()->::proto::UgcBriefRedisData::MergeFrom(from.ugc_brief_redis_data());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.ugc_type() != 0) {
    set_ugc_type(from.ugc_type());
  }
}

void ServerSaveUgcRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerSaveUgcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerSaveUgcRsp::CopyFrom(const ServerSaveUgcRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerSaveUgcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerSaveUgcRsp::IsInitialized() const {
  return true;
}

void ServerSaveUgcRsp::Swap(ServerSaveUgcRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerSaveUgcRsp::InternalSwap(ServerSaveUgcRsp* other) {
  using std::swap;
  swap(ugc_brief_redis_data_, other->ugc_brief_redis_data_);
  swap(retcode_, other->retcode_);
  swap(ugc_type_, other->ugc_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerSaveUgcRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerSaveUgcRsp

// int32 retcode = 1;
void ServerSaveUgcRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerSaveUgcRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerSaveUgcRsp.retcode)
  return retcode_;
}
void ServerSaveUgcRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerSaveUgcRsp.retcode)
}

// .proto.UgcType ugc_type = 2;
void ServerSaveUgcRsp::clear_ugc_type() {
  ugc_type_ = 0;
}
::proto::UgcType ServerSaveUgcRsp::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerSaveUgcRsp.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
void ServerSaveUgcRsp::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerSaveUgcRsp.ugc_type)
}

// .proto.UgcBriefRedisData ugc_brief_redis_data = 3;
bool ServerSaveUgcRsp::has_ugc_brief_redis_data() const {
  return this != internal_default_instance() && ugc_brief_redis_data_ != NULL;
}
void ServerSaveUgcRsp::clear_ugc_brief_redis_data() {
  if (GetArenaNoVirtual() == NULL && ugc_brief_redis_data_ != NULL) delete ugc_brief_redis_data_;
  ugc_brief_redis_data_ = NULL;
}
const ::proto::UgcBriefRedisData& ServerSaveUgcRsp::ugc_brief_redis_data() const {
  const ::proto::UgcBriefRedisData* p = ugc_brief_redis_data_;
  // @@protoc_insertion_point(field_get:proto.ServerSaveUgcRsp.ugc_brief_redis_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::UgcBriefRedisData*>(
      &::proto::_UgcBriefRedisData_default_instance_);
}
::proto::UgcBriefRedisData* ServerSaveUgcRsp::mutable_ugc_brief_redis_data() {
  
  if (ugc_brief_redis_data_ == NULL) {
    ugc_brief_redis_data_ = new ::proto::UgcBriefRedisData;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerSaveUgcRsp.ugc_brief_redis_data)
  return ugc_brief_redis_data_;
}
::proto::UgcBriefRedisData* ServerSaveUgcRsp::release_ugc_brief_redis_data() {
  // @@protoc_insertion_point(field_release:proto.ServerSaveUgcRsp.ugc_brief_redis_data)
  
  ::proto::UgcBriefRedisData* temp = ugc_brief_redis_data_;
  ugc_brief_redis_data_ = NULL;
  return temp;
}
void ServerSaveUgcRsp::set_allocated_ugc_brief_redis_data(::proto::UgcBriefRedisData* ugc_brief_redis_data) {
  delete ugc_brief_redis_data_;
  ugc_brief_redis_data_ = ugc_brief_redis_data;
  if (ugc_brief_redis_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerSaveUgcRsp.ugc_brief_redis_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPublishUgcReq::kUgcTypeFieldNumber;
const int ServerPublishUgcReq::kUgcBriefRedisDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPublishUgcReq::ServerPublishUgcReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerPublishUgcReq)
}
ServerPublishUgcReq::ServerPublishUgcReq(const ServerPublishUgcReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ugc_brief_redis_data()) {
    ugc_brief_redis_data_ = new ::proto::UgcBriefRedisData(*from.ugc_brief_redis_data_);
  } else {
    ugc_brief_redis_data_ = NULL;
  }
  ugc_type_ = from.ugc_type_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerPublishUgcReq)
}

void ServerPublishUgcReq::SharedCtor() {
  ::memset(&ugc_brief_redis_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_type_) -
      reinterpret_cast<char*>(&ugc_brief_redis_data_)) + sizeof(ugc_type_));
  _cached_size_ = 0;
}

ServerPublishUgcReq::~ServerPublishUgcReq() {
  // @@protoc_insertion_point(destructor:proto.ServerPublishUgcReq)
  SharedDtor();
}

void ServerPublishUgcReq::SharedDtor() {
  if (this != internal_default_instance()) delete ugc_brief_redis_data_;
}

void ServerPublishUgcReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerPublishUgcReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPublishUgcReq& ServerPublishUgcReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerPublishUgcReq* ServerPublishUgcReq::New(::google::protobuf::Arena* arena) const {
  ServerPublishUgcReq* n = new ServerPublishUgcReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerPublishUgcReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerPublishUgcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && ugc_brief_redis_data_ != NULL) {
    delete ugc_brief_redis_data_;
  }
  ugc_brief_redis_data_ = NULL;
  ugc_type_ = 0;
  _internal_metadata_.Clear();
}

bool ServerPublishUgcReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerPublishUgcReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.UgcType ugc_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_type(static_cast< ::proto::UgcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcBriefRedisData ugc_brief_redis_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ugc_brief_redis_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerPublishUgcReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerPublishUgcReq)
  return false;
#undef DO_
}

void ServerPublishUgcReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerPublishUgcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ugc_type(), output);
  }

  // .proto.UgcBriefRedisData ugc_brief_redis_data = 2;
  if (this->has_ugc_brief_redis_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->ugc_brief_redis_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerPublishUgcReq)
}

::google::protobuf::uint8* ServerPublishUgcReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerPublishUgcReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ugc_type(), target);
  }

  // .proto.UgcBriefRedisData ugc_brief_redis_data = 2;
  if (this->has_ugc_brief_redis_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->ugc_brief_redis_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerPublishUgcReq)
  return target;
}

size_t ServerPublishUgcReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerPublishUgcReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.UgcBriefRedisData ugc_brief_redis_data = 2;
  if (this->has_ugc_brief_redis_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ugc_brief_redis_data_);
  }

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerPublishUgcReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerPublishUgcReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPublishUgcReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPublishUgcReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerPublishUgcReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerPublishUgcReq)
    MergeFrom(*source);
  }
}

void ServerPublishUgcReq::MergeFrom(const ServerPublishUgcReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerPublishUgcReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_ugc_brief_redis_data()) {
    mutable_ugc_brief_redis_data()->::proto::UgcBriefRedisData::MergeFrom(from.ugc_brief_redis_data());
  }
  if (from.ugc_type() != 0) {
    set_ugc_type(from.ugc_type());
  }
}

void ServerPublishUgcReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerPublishUgcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPublishUgcReq::CopyFrom(const ServerPublishUgcReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerPublishUgcReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPublishUgcReq::IsInitialized() const {
  return true;
}

void ServerPublishUgcReq::Swap(ServerPublishUgcReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPublishUgcReq::InternalSwap(ServerPublishUgcReq* other) {
  using std::swap;
  swap(ugc_brief_redis_data_, other->ugc_brief_redis_data_);
  swap(ugc_type_, other->ugc_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerPublishUgcReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerPublishUgcReq

// .proto.UgcType ugc_type = 1;
void ServerPublishUgcReq::clear_ugc_type() {
  ugc_type_ = 0;
}
::proto::UgcType ServerPublishUgcReq::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishUgcReq.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
void ServerPublishUgcReq::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishUgcReq.ugc_type)
}

// .proto.UgcBriefRedisData ugc_brief_redis_data = 2;
bool ServerPublishUgcReq::has_ugc_brief_redis_data() const {
  return this != internal_default_instance() && ugc_brief_redis_data_ != NULL;
}
void ServerPublishUgcReq::clear_ugc_brief_redis_data() {
  if (GetArenaNoVirtual() == NULL && ugc_brief_redis_data_ != NULL) delete ugc_brief_redis_data_;
  ugc_brief_redis_data_ = NULL;
}
const ::proto::UgcBriefRedisData& ServerPublishUgcReq::ugc_brief_redis_data() const {
  const ::proto::UgcBriefRedisData* p = ugc_brief_redis_data_;
  // @@protoc_insertion_point(field_get:proto.ServerPublishUgcReq.ugc_brief_redis_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::UgcBriefRedisData*>(
      &::proto::_UgcBriefRedisData_default_instance_);
}
::proto::UgcBriefRedisData* ServerPublishUgcReq::mutable_ugc_brief_redis_data() {
  
  if (ugc_brief_redis_data_ == NULL) {
    ugc_brief_redis_data_ = new ::proto::UgcBriefRedisData;
  }
  // @@protoc_insertion_point(field_mutable:proto.ServerPublishUgcReq.ugc_brief_redis_data)
  return ugc_brief_redis_data_;
}
::proto::UgcBriefRedisData* ServerPublishUgcReq::release_ugc_brief_redis_data() {
  // @@protoc_insertion_point(field_release:proto.ServerPublishUgcReq.ugc_brief_redis_data)
  
  ::proto::UgcBriefRedisData* temp = ugc_brief_redis_data_;
  ugc_brief_redis_data_ = NULL;
  return temp;
}
void ServerPublishUgcReq::set_allocated_ugc_brief_redis_data(::proto::UgcBriefRedisData* ugc_brief_redis_data) {
  delete ugc_brief_redis_data_;
  ugc_brief_redis_data_ = ugc_brief_redis_data;
  if (ugc_brief_redis_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ServerPublishUgcReq.ugc_brief_redis_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerPublishUgcRsp::kRetcodeFieldNumber;
const int ServerPublishUgcRsp::kUgcTypeFieldNumber;
const int ServerPublishUgcRsp::kUgcGuidFieldNumber;
const int ServerPublishUgcRsp::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerPublishUgcRsp::ServerPublishUgcRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerPublishUgcRsp)
}
ServerPublishUgcRsp::ServerPublishUgcRsp(const ServerPublishUgcRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&version_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(version_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerPublishUgcRsp)
}

void ServerPublishUgcRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(version_));
  _cached_size_ = 0;
}

ServerPublishUgcRsp::~ServerPublishUgcRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerPublishUgcRsp)
  SharedDtor();
}

void ServerPublishUgcRsp::SharedDtor() {
}

void ServerPublishUgcRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerPublishUgcRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerPublishUgcRsp& ServerPublishUgcRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerPublishUgcRsp* ServerPublishUgcRsp::New(::google::protobuf::Arena* arena) const {
  ServerPublishUgcRsp* n = new ServerPublishUgcRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerPublishUgcRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerPublishUgcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&version_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(version_));
  _internal_metadata_.Clear();
}

bool ServerPublishUgcRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerPublishUgcRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcType ugc_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_type(static_cast< ::proto::UgcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ugc_guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ugc_guid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerPublishUgcRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerPublishUgcRsp)
  return false;
#undef DO_
}

void ServerPublishUgcRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerPublishUgcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ugc_type(), output);
  }

  // uint64 ugc_guid = 3;
  if (this->ugc_guid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->ugc_guid(), output);
  }

  // uint32 version = 4;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerPublishUgcRsp)
}

::google::protobuf::uint8* ServerPublishUgcRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerPublishUgcRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ugc_type(), target);
  }

  // uint64 ugc_guid = 3;
  if (this->ugc_guid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->ugc_guid(), target);
  }

  // uint32 version = 4;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerPublishUgcRsp)
  return target;
}

size_t ServerPublishUgcRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerPublishUgcRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_type());
  }

  // uint64 ugc_guid = 3;
  if (this->ugc_guid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ugc_guid());
  }

  // uint32 version = 4;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerPublishUgcRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerPublishUgcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerPublishUgcRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerPublishUgcRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerPublishUgcRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerPublishUgcRsp)
    MergeFrom(*source);
  }
}

void ServerPublishUgcRsp::MergeFrom(const ServerPublishUgcRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerPublishUgcRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.ugc_type() != 0) {
    set_ugc_type(from.ugc_type());
  }
  if (from.ugc_guid() != 0) {
    set_ugc_guid(from.ugc_guid());
  }
  if (from.version() != 0) {
    set_version(from.version());
  }
}

void ServerPublishUgcRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerPublishUgcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerPublishUgcRsp::CopyFrom(const ServerPublishUgcRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerPublishUgcRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerPublishUgcRsp::IsInitialized() const {
  return true;
}

void ServerPublishUgcRsp::Swap(ServerPublishUgcRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerPublishUgcRsp::InternalSwap(ServerPublishUgcRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(ugc_type_, other->ugc_type_);
  swap(ugc_guid_, other->ugc_guid_);
  swap(version_, other->version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerPublishUgcRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerPublishUgcRsp

// int32 retcode = 1;
void ServerPublishUgcRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerPublishUgcRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishUgcRsp.retcode)
  return retcode_;
}
void ServerPublishUgcRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishUgcRsp.retcode)
}

// .proto.UgcType ugc_type = 2;
void ServerPublishUgcRsp::clear_ugc_type() {
  ugc_type_ = 0;
}
::proto::UgcType ServerPublishUgcRsp::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishUgcRsp.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
void ServerPublishUgcRsp::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishUgcRsp.ugc_type)
}

// uint64 ugc_guid = 3;
void ServerPublishUgcRsp::clear_ugc_guid() {
  ugc_guid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ServerPublishUgcRsp::ugc_guid() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishUgcRsp.ugc_guid)
  return ugc_guid_;
}
void ServerPublishUgcRsp::set_ugc_guid(::google::protobuf::uint64 value) {
  
  ugc_guid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishUgcRsp.ugc_guid)
}

// uint32 version = 4;
void ServerPublishUgcRsp::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 ServerPublishUgcRsp::version() const {
  // @@protoc_insertion_point(field_get:proto.ServerPublishUgcRsp.version)
  return version_;
}
void ServerPublishUgcRsp::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerPublishUgcRsp.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ServerCheckUgcUpdateReq::ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry::ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry() {}
ServerCheckUgcUpdateReq::ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry::ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ServerCheckUgcUpdateReq::ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[95];
}
void ServerCheckUgcUpdateReq::ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ServerCheckUgcUpdateReq::ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry::MergeFrom(const ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerCheckUgcUpdateReq::kUgcTypeFieldNumber;
const int ServerCheckUgcUpdateReq::kUgcGuidVersionMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerCheckUgcUpdateReq::ServerCheckUgcUpdateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerCheckUgcUpdateReq)
}
ServerCheckUgcUpdateReq::ServerCheckUgcUpdateReq(const ServerCheckUgcUpdateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ugc_guid_version_map_.MergeFrom(from.ugc_guid_version_map_);
  ugc_type_ = from.ugc_type_;
  // @@protoc_insertion_point(copy_constructor:proto.ServerCheckUgcUpdateReq)
}

void ServerCheckUgcUpdateReq::SharedCtor() {
  ugc_type_ = 0;
  _cached_size_ = 0;
}

ServerCheckUgcUpdateReq::~ServerCheckUgcUpdateReq() {
  // @@protoc_insertion_point(destructor:proto.ServerCheckUgcUpdateReq)
  SharedDtor();
}

void ServerCheckUgcUpdateReq::SharedDtor() {
}

void ServerCheckUgcUpdateReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerCheckUgcUpdateReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerCheckUgcUpdateReq& ServerCheckUgcUpdateReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerCheckUgcUpdateReq* ServerCheckUgcUpdateReq::New(::google::protobuf::Arena* arena) const {
  ServerCheckUgcUpdateReq* n = new ServerCheckUgcUpdateReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerCheckUgcUpdateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerCheckUgcUpdateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ugc_guid_version_map_.Clear();
  ugc_type_ = 0;
  _internal_metadata_.Clear();
}

bool ServerCheckUgcUpdateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerCheckUgcUpdateReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.UgcType ugc_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_type(static_cast< ::proto::UgcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint64, uint32> ugc_guid_version_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry::Parser< ::google::protobuf::internal::MapField<
              ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry,
              ::google::protobuf::uint64, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 > > parser(&ugc_guid_version_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerCheckUgcUpdateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerCheckUgcUpdateReq)
  return false;
#undef DO_
}

void ServerCheckUgcUpdateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerCheckUgcUpdateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ugc_type(), output);
  }

  // map<uint64, uint32> ugc_guid_version_map = 2;
  if (!this->ugc_guid_version_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->ugc_guid_version_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ugc_guid_version_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->ugc_guid_version_map().begin();
          it != this->ugc_guid_version_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ugc_guid_version_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->ugc_guid_version_map().begin();
          it != this->ugc_guid_version_map().end(); ++it) {
        entry.reset(ugc_guid_version_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerCheckUgcUpdateReq)
}

::google::protobuf::uint8* ServerCheckUgcUpdateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerCheckUgcUpdateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ugc_type(), target);
  }

  // map<uint64, uint32> ugc_guid_version_map = 2;
  if (!this->ugc_guid_version_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->ugc_guid_version_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->ugc_guid_version_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->ugc_guid_version_map().begin();
          it != this->ugc_guid_version_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(ugc_guid_version_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
          it = this->ugc_guid_version_map().begin();
          it != this->ugc_guid_version_map().end(); ++it) {
        entry.reset(ugc_guid_version_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerCheckUgcUpdateReq)
  return target;
}

size_t ServerCheckUgcUpdateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerCheckUgcUpdateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint64, uint32> ugc_guid_version_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->ugc_guid_version_map_size());
  {
    ::google::protobuf::scoped_ptr<ServerCheckUgcUpdateReq_UgcGuidVersionMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >::const_iterator
        it = this->ugc_guid_version_map().begin();
        it != this->ugc_guid_version_map().end(); ++it) {
      entry.reset(ugc_guid_version_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .proto.UgcType ugc_type = 1;
  if (this->ugc_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerCheckUgcUpdateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerCheckUgcUpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerCheckUgcUpdateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerCheckUgcUpdateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerCheckUgcUpdateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerCheckUgcUpdateReq)
    MergeFrom(*source);
  }
}

void ServerCheckUgcUpdateReq::MergeFrom(const ServerCheckUgcUpdateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerCheckUgcUpdateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ugc_guid_version_map_.MergeFrom(from.ugc_guid_version_map_);
  if (from.ugc_type() != 0) {
    set_ugc_type(from.ugc_type());
  }
}

void ServerCheckUgcUpdateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerCheckUgcUpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerCheckUgcUpdateReq::CopyFrom(const ServerCheckUgcUpdateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerCheckUgcUpdateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerCheckUgcUpdateReq::IsInitialized() const {
  return true;
}

void ServerCheckUgcUpdateReq::Swap(ServerCheckUgcUpdateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerCheckUgcUpdateReq::InternalSwap(ServerCheckUgcUpdateReq* other) {
  using std::swap;
  ugc_guid_version_map_.Swap(&other->ugc_guid_version_map_);
  swap(ugc_type_, other->ugc_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerCheckUgcUpdateReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerCheckUgcUpdateReq

// .proto.UgcType ugc_type = 1;
void ServerCheckUgcUpdateReq::clear_ugc_type() {
  ugc_type_ = 0;
}
::proto::UgcType ServerCheckUgcUpdateReq::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerCheckUgcUpdateReq.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
void ServerCheckUgcUpdateReq::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerCheckUgcUpdateReq.ugc_type)
}

// map<uint64, uint32> ugc_guid_version_map = 2;
int ServerCheckUgcUpdateReq::ugc_guid_version_map_size() const {
  return ugc_guid_version_map_.size();
}
void ServerCheckUgcUpdateReq::clear_ugc_guid_version_map() {
  ugc_guid_version_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >&
ServerCheckUgcUpdateReq::ugc_guid_version_map() const {
  // @@protoc_insertion_point(field_map:proto.ServerCheckUgcUpdateReq.ugc_guid_version_map)
  return ugc_guid_version_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint64, ::google::protobuf::uint32 >*
ServerCheckUgcUpdateReq::mutable_ugc_guid_version_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ServerCheckUgcUpdateReq.ugc_guid_version_map)
  return ugc_guid_version_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerCheckUgcUpdateRsp::kRetcodeFieldNumber;
const int ServerCheckUgcUpdateRsp::kUgcTypeFieldNumber;
const int ServerCheckUgcUpdateRsp::kUpdateUgcGuidListFieldNumber;
const int ServerCheckUgcUpdateRsp::kNotFindUgcGuidListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerCheckUgcUpdateRsp::ServerCheckUgcUpdateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerCheckUgcUpdateRsp)
}
ServerCheckUgcUpdateRsp::ServerCheckUgcUpdateRsp(const ServerCheckUgcUpdateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      update_ugc_guid_list_(from.update_ugc_guid_list_),
      not_find_ugc_guid_list_(from.not_find_ugc_guid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&ugc_type_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(ugc_type_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerCheckUgcUpdateRsp)
}

void ServerCheckUgcUpdateRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(ugc_type_));
  _cached_size_ = 0;
}

ServerCheckUgcUpdateRsp::~ServerCheckUgcUpdateRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerCheckUgcUpdateRsp)
  SharedDtor();
}

void ServerCheckUgcUpdateRsp::SharedDtor() {
}

void ServerCheckUgcUpdateRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerCheckUgcUpdateRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerCheckUgcUpdateRsp& ServerCheckUgcUpdateRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerCheckUgcUpdateRsp* ServerCheckUgcUpdateRsp::New(::google::protobuf::Arena* arena) const {
  ServerCheckUgcUpdateRsp* n = new ServerCheckUgcUpdateRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerCheckUgcUpdateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerCheckUgcUpdateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  update_ugc_guid_list_.Clear();
  not_find_ugc_guid_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ugc_type_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(ugc_type_));
  _internal_metadata_.Clear();
}

bool ServerCheckUgcUpdateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerCheckUgcUpdateRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.UgcType ugc_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ugc_type(static_cast< ::proto::UgcType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 update_ugc_guid_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_update_ugc_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 26u, input, this->mutable_update_ugc_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 not_find_ugc_guid_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_not_find_ugc_guid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 34u, input, this->mutable_not_find_ugc_guid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerCheckUgcUpdateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerCheckUgcUpdateRsp)
  return false;
#undef DO_
}

void ServerCheckUgcUpdateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerCheckUgcUpdateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ugc_type(), output);
  }

  // repeated uint64 update_ugc_guid_list = 3;
  if (this->update_ugc_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _update_ugc_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->update_ugc_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->update_ugc_guid_list(i), output);
  }

  // repeated uint64 not_find_ugc_guid_list = 4;
  if (this->not_find_ugc_guid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _not_find_ugc_guid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->not_find_ugc_guid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->not_find_ugc_guid_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerCheckUgcUpdateRsp)
}

::google::protobuf::uint8* ServerCheckUgcUpdateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerCheckUgcUpdateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ugc_type(), target);
  }

  // repeated uint64 update_ugc_guid_list = 3;
  if (this->update_ugc_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _update_ugc_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->update_ugc_guid_list_, target);
  }

  // repeated uint64 not_find_ugc_guid_list = 4;
  if (this->not_find_ugc_guid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _not_find_ugc_guid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->not_find_ugc_guid_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerCheckUgcUpdateRsp)
  return target;
}

size_t ServerCheckUgcUpdateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerCheckUgcUpdateRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 update_ugc_guid_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->update_ugc_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _update_ugc_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 not_find_ugc_guid_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->not_find_ugc_guid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _not_find_ugc_guid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // .proto.UgcType ugc_type = 2;
  if (this->ugc_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ugc_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerCheckUgcUpdateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerCheckUgcUpdateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerCheckUgcUpdateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerCheckUgcUpdateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerCheckUgcUpdateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerCheckUgcUpdateRsp)
    MergeFrom(*source);
  }
}

void ServerCheckUgcUpdateRsp::MergeFrom(const ServerCheckUgcUpdateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerCheckUgcUpdateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  update_ugc_guid_list_.MergeFrom(from.update_ugc_guid_list_);
  not_find_ugc_guid_list_.MergeFrom(from.not_find_ugc_guid_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.ugc_type() != 0) {
    set_ugc_type(from.ugc_type());
  }
}

void ServerCheckUgcUpdateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerCheckUgcUpdateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerCheckUgcUpdateRsp::CopyFrom(const ServerCheckUgcUpdateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerCheckUgcUpdateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerCheckUgcUpdateRsp::IsInitialized() const {
  return true;
}

void ServerCheckUgcUpdateRsp::Swap(ServerCheckUgcUpdateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerCheckUgcUpdateRsp::InternalSwap(ServerCheckUgcUpdateRsp* other) {
  using std::swap;
  update_ugc_guid_list_.InternalSwap(&other->update_ugc_guid_list_);
  not_find_ugc_guid_list_.InternalSwap(&other->not_find_ugc_guid_list_);
  swap(retcode_, other->retcode_);
  swap(ugc_type_, other->ugc_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerCheckUgcUpdateRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerCheckUgcUpdateRsp

// int32 retcode = 1;
void ServerCheckUgcUpdateRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerCheckUgcUpdateRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerCheckUgcUpdateRsp.retcode)
  return retcode_;
}
void ServerCheckUgcUpdateRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerCheckUgcUpdateRsp.retcode)
}

// .proto.UgcType ugc_type = 2;
void ServerCheckUgcUpdateRsp::clear_ugc_type() {
  ugc_type_ = 0;
}
::proto::UgcType ServerCheckUgcUpdateRsp::ugc_type() const {
  // @@protoc_insertion_point(field_get:proto.ServerCheckUgcUpdateRsp.ugc_type)
  return static_cast< ::proto::UgcType >(ugc_type_);
}
void ServerCheckUgcUpdateRsp::set_ugc_type(::proto::UgcType value) {
  
  ugc_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerCheckUgcUpdateRsp.ugc_type)
}

// repeated uint64 update_ugc_guid_list = 3;
int ServerCheckUgcUpdateRsp::update_ugc_guid_list_size() const {
  return update_ugc_guid_list_.size();
}
void ServerCheckUgcUpdateRsp::clear_update_ugc_guid_list() {
  update_ugc_guid_list_.Clear();
}
::google::protobuf::uint64 ServerCheckUgcUpdateRsp::update_ugc_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerCheckUgcUpdateRsp.update_ugc_guid_list)
  return update_ugc_guid_list_.Get(index);
}
void ServerCheckUgcUpdateRsp::set_update_ugc_guid_list(int index, ::google::protobuf::uint64 value) {
  update_ugc_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerCheckUgcUpdateRsp.update_ugc_guid_list)
}
void ServerCheckUgcUpdateRsp::add_update_ugc_guid_list(::google::protobuf::uint64 value) {
  update_ugc_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerCheckUgcUpdateRsp.update_ugc_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ServerCheckUgcUpdateRsp::update_ugc_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerCheckUgcUpdateRsp.update_ugc_guid_list)
  return update_ugc_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ServerCheckUgcUpdateRsp::mutable_update_ugc_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerCheckUgcUpdateRsp.update_ugc_guid_list)
  return &update_ugc_guid_list_;
}

// repeated uint64 not_find_ugc_guid_list = 4;
int ServerCheckUgcUpdateRsp::not_find_ugc_guid_list_size() const {
  return not_find_ugc_guid_list_.size();
}
void ServerCheckUgcUpdateRsp::clear_not_find_ugc_guid_list() {
  not_find_ugc_guid_list_.Clear();
}
::google::protobuf::uint64 ServerCheckUgcUpdateRsp::not_find_ugc_guid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerCheckUgcUpdateRsp.not_find_ugc_guid_list)
  return not_find_ugc_guid_list_.Get(index);
}
void ServerCheckUgcUpdateRsp::set_not_find_ugc_guid_list(int index, ::google::protobuf::uint64 value) {
  not_find_ugc_guid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerCheckUgcUpdateRsp.not_find_ugc_guid_list)
}
void ServerCheckUgcUpdateRsp::add_not_find_ugc_guid_list(::google::protobuf::uint64 value) {
  not_find_ugc_guid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerCheckUgcUpdateRsp.not_find_ugc_guid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
ServerCheckUgcUpdateRsp::not_find_ugc_guid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerCheckUgcUpdateRsp.not_find_ugc_guid_list)
  return not_find_ugc_guid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
ServerCheckUgcUpdateRsp::mutable_not_find_ugc_guid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerCheckUgcUpdateRsp.not_find_ugc_guid_list)
  return &not_find_ugc_guid_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ServerActivityGetFriendGiftDataReq::ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry::ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry() {}
ServerActivityGetFriendGiftDataReq::ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry::ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ServerActivityGetFriendGiftDataReq::ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[98];
}
void ServerActivityGetFriendGiftDataReq::ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ServerActivityGetFriendGiftDataReq::ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry::MergeFrom(const ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerActivityGetFriendGiftDataReq::kScheduleIdFieldNumber;
const int ServerActivityGetFriendGiftDataReq::kFriendUidFieldNumber;
const int ServerActivityGetFriendGiftDataReq::kGiveGiftNumMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerActivityGetFriendGiftDataReq::ServerActivityGetFriendGiftDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerActivityGetFriendGiftDataReq)
}
ServerActivityGetFriendGiftDataReq::ServerActivityGetFriendGiftDataReq(const ServerActivityGetFriendGiftDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  give_gift_num_map_.MergeFrom(from.give_gift_num_map_);
  ::memcpy(&schedule_id_, &from.schedule_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_uid_) -
    reinterpret_cast<char*>(&schedule_id_)) + sizeof(friend_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerActivityGetFriendGiftDataReq)
}

void ServerActivityGetFriendGiftDataReq::SharedCtor() {
  ::memset(&schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_uid_) -
      reinterpret_cast<char*>(&schedule_id_)) + sizeof(friend_uid_));
  _cached_size_ = 0;
}

ServerActivityGetFriendGiftDataReq::~ServerActivityGetFriendGiftDataReq() {
  // @@protoc_insertion_point(destructor:proto.ServerActivityGetFriendGiftDataReq)
  SharedDtor();
}

void ServerActivityGetFriendGiftDataReq::SharedDtor() {
}

void ServerActivityGetFriendGiftDataReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerActivityGetFriendGiftDataReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerActivityGetFriendGiftDataReq& ServerActivityGetFriendGiftDataReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerActivityGetFriendGiftDataReq* ServerActivityGetFriendGiftDataReq::New(::google::protobuf::Arena* arena) const {
  ServerActivityGetFriendGiftDataReq* n = new ServerActivityGetFriendGiftDataReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerActivityGetFriendGiftDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerActivityGetFriendGiftDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  give_gift_num_map_.Clear();
  ::memset(&schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_uid_) -
      reinterpret_cast<char*>(&schedule_id_)) + sizeof(friend_uid_));
  _internal_metadata_.Clear();
}

bool ServerActivityGetFriendGiftDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerActivityGetFriendGiftDataReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 schedule_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> give_gift_num_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry::Parser< ::google::protobuf::internal::MapField<
              ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&give_gift_num_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerActivityGetFriendGiftDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerActivityGetFriendGiftDataReq)
  return false;
#undef DO_
}

void ServerActivityGetFriendGiftDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerActivityGetFriendGiftDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->schedule_id(), output);
  }

  // uint32 friend_uid = 2;
  if (this->friend_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->friend_uid(), output);
  }

  // map<uint32, uint32> give_gift_num_map = 3;
  if (!this->give_gift_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->give_gift_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->give_gift_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_gift_num_map().begin();
          it != this->give_gift_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(give_gift_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_gift_num_map().begin();
          it != this->give_gift_num_map().end(); ++it) {
        entry.reset(give_gift_num_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerActivityGetFriendGiftDataReq)
}

::google::protobuf::uint8* ServerActivityGetFriendGiftDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerActivityGetFriendGiftDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->schedule_id(), target);
  }

  // uint32 friend_uid = 2;
  if (this->friend_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->friend_uid(), target);
  }

  // map<uint32, uint32> give_gift_num_map = 3;
  if (!this->give_gift_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->give_gift_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->give_gift_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_gift_num_map().begin();
          it != this->give_gift_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(give_gift_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_gift_num_map().begin();
          it != this->give_gift_num_map().end(); ++it) {
        entry.reset(give_gift_num_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerActivityGetFriendGiftDataReq)
  return target;
}

size_t ServerActivityGetFriendGiftDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerActivityGetFriendGiftDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> give_gift_num_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->give_gift_num_map_size());
  {
    ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataReq_GiveGiftNumMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->give_gift_num_map().begin();
        it != this->give_gift_num_map().end(); ++it) {
      entry.reset(give_gift_num_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  // uint32 friend_uid = 2;
  if (this->friend_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerActivityGetFriendGiftDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerActivityGetFriendGiftDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerActivityGetFriendGiftDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerActivityGetFriendGiftDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerActivityGetFriendGiftDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerActivityGetFriendGiftDataReq)
    MergeFrom(*source);
  }
}

void ServerActivityGetFriendGiftDataReq::MergeFrom(const ServerActivityGetFriendGiftDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerActivityGetFriendGiftDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  give_gift_num_map_.MergeFrom(from.give_gift_num_map_);
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
  if (from.friend_uid() != 0) {
    set_friend_uid(from.friend_uid());
  }
}

void ServerActivityGetFriendGiftDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerActivityGetFriendGiftDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerActivityGetFriendGiftDataReq::CopyFrom(const ServerActivityGetFriendGiftDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerActivityGetFriendGiftDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerActivityGetFriendGiftDataReq::IsInitialized() const {
  return true;
}

void ServerActivityGetFriendGiftDataReq::Swap(ServerActivityGetFriendGiftDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerActivityGetFriendGiftDataReq::InternalSwap(ServerActivityGetFriendGiftDataReq* other) {
  using std::swap;
  give_gift_num_map_.Swap(&other->give_gift_num_map_);
  swap(schedule_id_, other->schedule_id_);
  swap(friend_uid_, other->friend_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerActivityGetFriendGiftDataReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerActivityGetFriendGiftDataReq

// uint32 schedule_id = 1;
void ServerActivityGetFriendGiftDataReq::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerActivityGetFriendGiftDataReq::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerActivityGetFriendGiftDataReq.schedule_id)
  return schedule_id_;
}
void ServerActivityGetFriendGiftDataReq::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerActivityGetFriendGiftDataReq.schedule_id)
}

// uint32 friend_uid = 2;
void ServerActivityGetFriendGiftDataReq::clear_friend_uid() {
  friend_uid_ = 0u;
}
::google::protobuf::uint32 ServerActivityGetFriendGiftDataReq::friend_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerActivityGetFriendGiftDataReq.friend_uid)
  return friend_uid_;
}
void ServerActivityGetFriendGiftDataReq::set_friend_uid(::google::protobuf::uint32 value) {
  
  friend_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerActivityGetFriendGiftDataReq.friend_uid)
}

// map<uint32, uint32> give_gift_num_map = 3;
int ServerActivityGetFriendGiftDataReq::give_gift_num_map_size() const {
  return give_gift_num_map_.size();
}
void ServerActivityGetFriendGiftDataReq::clear_give_gift_num_map() {
  give_gift_num_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
ServerActivityGetFriendGiftDataReq::give_gift_num_map() const {
  // @@protoc_insertion_point(field_map:proto.ServerActivityGetFriendGiftDataReq.give_gift_num_map)
  return give_gift_num_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
ServerActivityGetFriendGiftDataReq::mutable_give_gift_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ServerActivityGetFriendGiftDataReq.give_gift_num_map)
  return give_gift_num_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry::ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry() {}
ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry::ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[100];
}
void ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry::MergeFrom(const ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry::ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry() {}
ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry::ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[101];
}
void ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry::MergeFrom(const ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerActivityGetFriendGiftDataRsp::kRetcodeFieldNumber;
const int ServerActivityGetFriendGiftDataRsp::kScheduleIdFieldNumber;
const int ServerActivityGetFriendGiftDataRsp::kFriendUidFieldNumber;
const int ServerActivityGetFriendGiftDataRsp::kGiveGiftNumMapFieldNumber;
const int ServerActivityGetFriendGiftDataRsp::kHaveGiftNumMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerActivityGetFriendGiftDataRsp)
}
ServerActivityGetFriendGiftDataRsp::ServerActivityGetFriendGiftDataRsp(const ServerActivityGetFriendGiftDataRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  give_gift_num_map_.MergeFrom(from.give_gift_num_map_);
  have_gift_num_map_.MergeFrom(from.have_gift_num_map_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&friend_uid_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(friend_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerActivityGetFriendGiftDataRsp)
}

void ServerActivityGetFriendGiftDataRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(friend_uid_));
  _cached_size_ = 0;
}

ServerActivityGetFriendGiftDataRsp::~ServerActivityGetFriendGiftDataRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerActivityGetFriendGiftDataRsp)
  SharedDtor();
}

void ServerActivityGetFriendGiftDataRsp::SharedDtor() {
}

void ServerActivityGetFriendGiftDataRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerActivityGetFriendGiftDataRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerActivityGetFriendGiftDataRsp& ServerActivityGetFriendGiftDataRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerActivityGetFriendGiftDataRsp* ServerActivityGetFriendGiftDataRsp::New(::google::protobuf::Arena* arena) const {
  ServerActivityGetFriendGiftDataRsp* n = new ServerActivityGetFriendGiftDataRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerActivityGetFriendGiftDataRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerActivityGetFriendGiftDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  give_gift_num_map_.Clear();
  have_gift_num_map_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friend_uid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(friend_uid_));
  _internal_metadata_.Clear();
}

bool ServerActivityGetFriendGiftDataRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerActivityGetFriendGiftDataRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friend_uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friend_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> give_gift_num_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry::Parser< ::google::protobuf::internal::MapField<
              ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&give_gift_num_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> have_gift_num_map = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry::Parser< ::google::protobuf::internal::MapField<
              ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&have_gift_num_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerActivityGetFriendGiftDataRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerActivityGetFriendGiftDataRsp)
  return false;
#undef DO_
}

void ServerActivityGetFriendGiftDataRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerActivityGetFriendGiftDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->schedule_id(), output);
  }

  // uint32 friend_uid = 3;
  if (this->friend_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->friend_uid(), output);
  }

  // map<uint32, uint32> give_gift_num_map = 4;
  if (!this->give_gift_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->give_gift_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->give_gift_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_gift_num_map().begin();
          it != this->give_gift_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(give_gift_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_gift_num_map().begin();
          it != this->give_gift_num_map().end(); ++it) {
        entry.reset(give_gift_num_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  // map<uint32, uint32> have_gift_num_map = 5;
  if (!this->have_gift_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->have_gift_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->have_gift_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->have_gift_num_map().begin();
          it != this->have_gift_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(have_gift_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->have_gift_num_map().begin();
          it != this->have_gift_num_map().end(); ++it) {
        entry.reset(have_gift_num_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerActivityGetFriendGiftDataRsp)
}

::google::protobuf::uint8* ServerActivityGetFriendGiftDataRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerActivityGetFriendGiftDataRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->schedule_id(), target);
  }

  // uint32 friend_uid = 3;
  if (this->friend_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->friend_uid(), target);
  }

  // map<uint32, uint32> give_gift_num_map = 4;
  if (!this->give_gift_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->give_gift_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->give_gift_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_gift_num_map().begin();
          it != this->give_gift_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(give_gift_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->give_gift_num_map().begin();
          it != this->give_gift_num_map().end(); ++it) {
        entry.reset(give_gift_num_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, uint32> have_gift_num_map = 5;
  if (!this->have_gift_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->have_gift_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->have_gift_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->have_gift_num_map().begin();
          it != this->have_gift_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(have_gift_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->have_gift_num_map().begin();
          it != this->have_gift_num_map().end(); ++it) {
        entry.reset(have_gift_num_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerActivityGetFriendGiftDataRsp)
  return target;
}

size_t ServerActivityGetFriendGiftDataRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerActivityGetFriendGiftDataRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> give_gift_num_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->give_gift_num_map_size());
  {
    ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataRsp_GiveGiftNumMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->give_gift_num_map().begin();
        it != this->give_gift_num_map().end(); ++it) {
      entry.reset(give_gift_num_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint32> have_gift_num_map = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->have_gift_num_map_size());
  {
    ::google::protobuf::scoped_ptr<ServerActivityGetFriendGiftDataRsp_HaveGiftNumMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->have_gift_num_map().begin();
        it != this->have_gift_num_map().end(); ++it) {
      entry.reset(have_gift_num_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  // uint32 friend_uid = 3;
  if (this->friend_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friend_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerActivityGetFriendGiftDataRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerActivityGetFriendGiftDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerActivityGetFriendGiftDataRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerActivityGetFriendGiftDataRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerActivityGetFriendGiftDataRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerActivityGetFriendGiftDataRsp)
    MergeFrom(*source);
  }
}

void ServerActivityGetFriendGiftDataRsp::MergeFrom(const ServerActivityGetFriendGiftDataRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerActivityGetFriendGiftDataRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  give_gift_num_map_.MergeFrom(from.give_gift_num_map_);
  have_gift_num_map_.MergeFrom(from.have_gift_num_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
  if (from.friend_uid() != 0) {
    set_friend_uid(from.friend_uid());
  }
}

void ServerActivityGetFriendGiftDataRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerActivityGetFriendGiftDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerActivityGetFriendGiftDataRsp::CopyFrom(const ServerActivityGetFriendGiftDataRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerActivityGetFriendGiftDataRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerActivityGetFriendGiftDataRsp::IsInitialized() const {
  return true;
}

void ServerActivityGetFriendGiftDataRsp::Swap(ServerActivityGetFriendGiftDataRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerActivityGetFriendGiftDataRsp::InternalSwap(ServerActivityGetFriendGiftDataRsp* other) {
  using std::swap;
  give_gift_num_map_.Swap(&other->give_gift_num_map_);
  have_gift_num_map_.Swap(&other->have_gift_num_map_);
  swap(retcode_, other->retcode_);
  swap(schedule_id_, other->schedule_id_);
  swap(friend_uid_, other->friend_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerActivityGetFriendGiftDataRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerActivityGetFriendGiftDataRsp

// int32 retcode = 1;
void ServerActivityGetFriendGiftDataRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerActivityGetFriendGiftDataRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerActivityGetFriendGiftDataRsp.retcode)
  return retcode_;
}
void ServerActivityGetFriendGiftDataRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerActivityGetFriendGiftDataRsp.retcode)
}

// uint32 schedule_id = 2;
void ServerActivityGetFriendGiftDataRsp::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerActivityGetFriendGiftDataRsp::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerActivityGetFriendGiftDataRsp.schedule_id)
  return schedule_id_;
}
void ServerActivityGetFriendGiftDataRsp::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerActivityGetFriendGiftDataRsp.schedule_id)
}

// uint32 friend_uid = 3;
void ServerActivityGetFriendGiftDataRsp::clear_friend_uid() {
  friend_uid_ = 0u;
}
::google::protobuf::uint32 ServerActivityGetFriendGiftDataRsp::friend_uid() const {
  // @@protoc_insertion_point(field_get:proto.ServerActivityGetFriendGiftDataRsp.friend_uid)
  return friend_uid_;
}
void ServerActivityGetFriendGiftDataRsp::set_friend_uid(::google::protobuf::uint32 value) {
  
  friend_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerActivityGetFriendGiftDataRsp.friend_uid)
}

// map<uint32, uint32> give_gift_num_map = 4;
int ServerActivityGetFriendGiftDataRsp::give_gift_num_map_size() const {
  return give_gift_num_map_.size();
}
void ServerActivityGetFriendGiftDataRsp::clear_give_gift_num_map() {
  give_gift_num_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
ServerActivityGetFriendGiftDataRsp::give_gift_num_map() const {
  // @@protoc_insertion_point(field_map:proto.ServerActivityGetFriendGiftDataRsp.give_gift_num_map)
  return give_gift_num_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
ServerActivityGetFriendGiftDataRsp::mutable_give_gift_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ServerActivityGetFriendGiftDataRsp.give_gift_num_map)
  return give_gift_num_map_.MutableMap();
}

// map<uint32, uint32> have_gift_num_map = 5;
int ServerActivityGetFriendGiftDataRsp::have_gift_num_map_size() const {
  return have_gift_num_map_.size();
}
void ServerActivityGetFriendGiftDataRsp::clear_have_gift_num_map() {
  have_gift_num_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
ServerActivityGetFriendGiftDataRsp::have_gift_num_map() const {
  // @@protoc_insertion_point(field_map:proto.ServerActivityGetFriendGiftDataRsp.have_gift_num_map)
  return have_gift_num_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
ServerActivityGetFriendGiftDataRsp::mutable_have_gift_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ServerActivityGetFriendGiftDataRsp.have_gift_num_map)
  return have_gift_num_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerActivityGetFriendGiftWishListReq::kScheduleIdFieldNumber;
const int ServerActivityGetFriendGiftWishListReq::kFriendUidListFieldNumber;
const int ServerActivityGetFriendGiftWishListReq::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerActivityGetFriendGiftWishListReq::ServerActivityGetFriendGiftWishListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerActivityGetFriendGiftWishListReq)
}
ServerActivityGetFriendGiftWishListReq::ServerActivityGetFriendGiftWishListReq(const ServerActivityGetFriendGiftWishListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_uid_list_(from.friend_uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&schedule_id_, &from.schedule_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&schedule_id_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerActivityGetFriendGiftWishListReq)
}

void ServerActivityGetFriendGiftWishListReq::SharedCtor() {
  ::memset(&schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&schedule_id_)) + sizeof(reason_));
  _cached_size_ = 0;
}

ServerActivityGetFriendGiftWishListReq::~ServerActivityGetFriendGiftWishListReq() {
  // @@protoc_insertion_point(destructor:proto.ServerActivityGetFriendGiftWishListReq)
  SharedDtor();
}

void ServerActivityGetFriendGiftWishListReq::SharedDtor() {
}

void ServerActivityGetFriendGiftWishListReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerActivityGetFriendGiftWishListReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerActivityGetFriendGiftWishListReq& ServerActivityGetFriendGiftWishListReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerActivityGetFriendGiftWishListReq* ServerActivityGetFriendGiftWishListReq::New(::google::protobuf::Arena* arena) const {
  ServerActivityGetFriendGiftWishListReq* n = new ServerActivityGetFriendGiftWishListReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerActivityGetFriendGiftWishListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerActivityGetFriendGiftWishListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_uid_list_.Clear();
  ::memset(&schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&schedule_id_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool ServerActivityGetFriendGiftWishListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerActivityGetFriendGiftWishListReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 schedule_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 friend_uid_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_friend_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_friend_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.FriendBriefRequestReason reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_reason(static_cast< ::proto::FriendBriefRequestReason >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerActivityGetFriendGiftWishListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerActivityGetFriendGiftWishListReq)
  return false;
#undef DO_
}

void ServerActivityGetFriendGiftWishListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerActivityGetFriendGiftWishListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->schedule_id(), output);
  }

  // repeated uint32 friend_uid_list = 2;
  if (this->friend_uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _friend_uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->friend_uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->friend_uid_list(i), output);
  }

  // .proto.FriendBriefRequestReason reason = 3;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerActivityGetFriendGiftWishListReq)
}

::google::protobuf::uint8* ServerActivityGetFriendGiftWishListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerActivityGetFriendGiftWishListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->schedule_id(), target);
  }

  // repeated uint32 friend_uid_list = 2;
  if (this->friend_uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _friend_uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->friend_uid_list_, target);
  }

  // .proto.FriendBriefRequestReason reason = 3;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerActivityGetFriendGiftWishListReq)
  return target;
}

size_t ServerActivityGetFriendGiftWishListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerActivityGetFriendGiftWishListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 friend_uid_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->friend_uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _friend_uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 schedule_id = 1;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  // .proto.FriendBriefRequestReason reason = 3;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerActivityGetFriendGiftWishListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerActivityGetFriendGiftWishListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerActivityGetFriendGiftWishListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerActivityGetFriendGiftWishListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerActivityGetFriendGiftWishListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerActivityGetFriendGiftWishListReq)
    MergeFrom(*source);
  }
}

void ServerActivityGetFriendGiftWishListReq::MergeFrom(const ServerActivityGetFriendGiftWishListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerActivityGetFriendGiftWishListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_uid_list_.MergeFrom(from.friend_uid_list_);
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void ServerActivityGetFriendGiftWishListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerActivityGetFriendGiftWishListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerActivityGetFriendGiftWishListReq::CopyFrom(const ServerActivityGetFriendGiftWishListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerActivityGetFriendGiftWishListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerActivityGetFriendGiftWishListReq::IsInitialized() const {
  return true;
}

void ServerActivityGetFriendGiftWishListReq::Swap(ServerActivityGetFriendGiftWishListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerActivityGetFriendGiftWishListReq::InternalSwap(ServerActivityGetFriendGiftWishListReq* other) {
  using std::swap;
  friend_uid_list_.InternalSwap(&other->friend_uid_list_);
  swap(schedule_id_, other->schedule_id_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerActivityGetFriendGiftWishListReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerActivityGetFriendGiftWishListReq

// uint32 schedule_id = 1;
void ServerActivityGetFriendGiftWishListReq::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerActivityGetFriendGiftWishListReq::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerActivityGetFriendGiftWishListReq.schedule_id)
  return schedule_id_;
}
void ServerActivityGetFriendGiftWishListReq::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerActivityGetFriendGiftWishListReq.schedule_id)
}

// repeated uint32 friend_uid_list = 2;
int ServerActivityGetFriendGiftWishListReq::friend_uid_list_size() const {
  return friend_uid_list_.size();
}
void ServerActivityGetFriendGiftWishListReq::clear_friend_uid_list() {
  friend_uid_list_.Clear();
}
::google::protobuf::uint32 ServerActivityGetFriendGiftWishListReq::friend_uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerActivityGetFriendGiftWishListReq.friend_uid_list)
  return friend_uid_list_.Get(index);
}
void ServerActivityGetFriendGiftWishListReq::set_friend_uid_list(int index, ::google::protobuf::uint32 value) {
  friend_uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ServerActivityGetFriendGiftWishListReq.friend_uid_list)
}
void ServerActivityGetFriendGiftWishListReq::add_friend_uid_list(::google::protobuf::uint32 value) {
  friend_uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ServerActivityGetFriendGiftWishListReq.friend_uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ServerActivityGetFriendGiftWishListReq::friend_uid_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerActivityGetFriendGiftWishListReq.friend_uid_list)
  return friend_uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ServerActivityGetFriendGiftWishListReq::mutable_friend_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerActivityGetFriendGiftWishListReq.friend_uid_list)
  return &friend_uid_list_;
}

// .proto.FriendBriefRequestReason reason = 3;
void ServerActivityGetFriendGiftWishListReq::clear_reason() {
  reason_ = 0;
}
::proto::FriendBriefRequestReason ServerActivityGetFriendGiftWishListReq::reason() const {
  // @@protoc_insertion_point(field_get:proto.ServerActivityGetFriendGiftWishListReq.reason)
  return static_cast< ::proto::FriendBriefRequestReason >(reason_);
}
void ServerActivityGetFriendGiftWishListReq::set_reason(::proto::FriendBriefRequestReason value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerActivityGetFriendGiftWishListReq.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerActivityGetFriendGiftWishListRsp::kRetcodeFieldNumber;
const int ServerActivityGetFriendGiftWishListRsp::kScheduleIdFieldNumber;
const int ServerActivityGetFriendGiftWishListRsp::kFriendGiftWishListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerActivityGetFriendGiftWishListRsp::ServerActivityGetFriendGiftWishListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerActivityGetFriendGiftWishListRsp)
}
ServerActivityGetFriendGiftWishListRsp::ServerActivityGetFriendGiftWishListRsp(const ServerActivityGetFriendGiftWishListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friend_gift_wish_list_(from.friend_gift_wish_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&schedule_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(schedule_id_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerActivityGetFriendGiftWishListRsp)
}

void ServerActivityGetFriendGiftWishListRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(schedule_id_));
  _cached_size_ = 0;
}

ServerActivityGetFriendGiftWishListRsp::~ServerActivityGetFriendGiftWishListRsp() {
  // @@protoc_insertion_point(destructor:proto.ServerActivityGetFriendGiftWishListRsp)
  SharedDtor();
}

void ServerActivityGetFriendGiftWishListRsp::SharedDtor() {
}

void ServerActivityGetFriendGiftWishListRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerActivityGetFriendGiftWishListRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerActivityGetFriendGiftWishListRsp& ServerActivityGetFriendGiftWishListRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerActivityGetFriendGiftWishListRsp* ServerActivityGetFriendGiftWishListRsp::New(::google::protobuf::Arena* arena) const {
  ServerActivityGetFriendGiftWishListRsp* n = new ServerActivityGetFriendGiftWishListRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerActivityGetFriendGiftWishListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerActivityGetFriendGiftWishListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friend_gift_wish_list_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schedule_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(schedule_id_));
  _internal_metadata_.Clear();
}

bool ServerActivityGetFriendGiftWishListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerActivityGetFriendGiftWishListRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 schedule_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.ActivityFriendGiftWishData friend_gift_wish_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_gift_wish_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerActivityGetFriendGiftWishListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerActivityGetFriendGiftWishListRsp)
  return false;
#undef DO_
}

void ServerActivityGetFriendGiftWishListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerActivityGetFriendGiftWishListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->schedule_id(), output);
  }

  // repeated .proto.ActivityFriendGiftWishData friend_gift_wish_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_gift_wish_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->friend_gift_wish_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerActivityGetFriendGiftWishListRsp)
}

::google::protobuf::uint8* ServerActivityGetFriendGiftWishListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerActivityGetFriendGiftWishListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->schedule_id(), target);
  }

  // repeated .proto.ActivityFriendGiftWishData friend_gift_wish_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->friend_gift_wish_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->friend_gift_wish_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerActivityGetFriendGiftWishListRsp)
  return target;
}

size_t ServerActivityGetFriendGiftWishListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerActivityGetFriendGiftWishListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ActivityFriendGiftWishData friend_gift_wish_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->friend_gift_wish_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_gift_wish_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 schedule_id = 2;
  if (this->schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->schedule_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerActivityGetFriendGiftWishListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerActivityGetFriendGiftWishListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerActivityGetFriendGiftWishListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerActivityGetFriendGiftWishListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerActivityGetFriendGiftWishListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerActivityGetFriendGiftWishListRsp)
    MergeFrom(*source);
  }
}

void ServerActivityGetFriendGiftWishListRsp::MergeFrom(const ServerActivityGetFriendGiftWishListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerActivityGetFriendGiftWishListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_gift_wish_list_.MergeFrom(from.friend_gift_wish_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.schedule_id() != 0) {
    set_schedule_id(from.schedule_id());
  }
}

void ServerActivityGetFriendGiftWishListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerActivityGetFriendGiftWishListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerActivityGetFriendGiftWishListRsp::CopyFrom(const ServerActivityGetFriendGiftWishListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerActivityGetFriendGiftWishListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerActivityGetFriendGiftWishListRsp::IsInitialized() const {
  return true;
}

void ServerActivityGetFriendGiftWishListRsp::Swap(ServerActivityGetFriendGiftWishListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerActivityGetFriendGiftWishListRsp::InternalSwap(ServerActivityGetFriendGiftWishListRsp* other) {
  using std::swap;
  friend_gift_wish_list_.InternalSwap(&other->friend_gift_wish_list_);
  swap(retcode_, other->retcode_);
  swap(schedule_id_, other->schedule_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerActivityGetFriendGiftWishListRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerActivityGetFriendGiftWishListRsp

// int32 retcode = 1;
void ServerActivityGetFriendGiftWishListRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 ServerActivityGetFriendGiftWishListRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ServerActivityGetFriendGiftWishListRsp.retcode)
  return retcode_;
}
void ServerActivityGetFriendGiftWishListRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerActivityGetFriendGiftWishListRsp.retcode)
}

// uint32 schedule_id = 2;
void ServerActivityGetFriendGiftWishListRsp::clear_schedule_id() {
  schedule_id_ = 0u;
}
::google::protobuf::uint32 ServerActivityGetFriendGiftWishListRsp::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.ServerActivityGetFriendGiftWishListRsp.schedule_id)
  return schedule_id_;
}
void ServerActivityGetFriendGiftWishListRsp::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerActivityGetFriendGiftWishListRsp.schedule_id)
}

// repeated .proto.ActivityFriendGiftWishData friend_gift_wish_list = 3;
int ServerActivityGetFriendGiftWishListRsp::friend_gift_wish_list_size() const {
  return friend_gift_wish_list_.size();
}
void ServerActivityGetFriendGiftWishListRsp::clear_friend_gift_wish_list() {
  friend_gift_wish_list_.Clear();
}
const ::proto::ActivityFriendGiftWishData& ServerActivityGetFriendGiftWishListRsp::friend_gift_wish_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ServerActivityGetFriendGiftWishListRsp.friend_gift_wish_list)
  return friend_gift_wish_list_.Get(index);
}
::proto::ActivityFriendGiftWishData* ServerActivityGetFriendGiftWishListRsp::mutable_friend_gift_wish_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.ServerActivityGetFriendGiftWishListRsp.friend_gift_wish_list)
  return friend_gift_wish_list_.Mutable(index);
}
::proto::ActivityFriendGiftWishData* ServerActivityGetFriendGiftWishListRsp::add_friend_gift_wish_list() {
  // @@protoc_insertion_point(field_add:proto.ServerActivityGetFriendGiftWishListRsp.friend_gift_wish_list)
  return friend_gift_wish_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::ActivityFriendGiftWishData >*
ServerActivityGetFriendGiftWishListRsp::mutable_friend_gift_wish_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ServerActivityGetFriendGiftWishListRsp.friend_gift_wish_list)
  return &friend_gift_wish_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::ActivityFriendGiftWishData >&
ServerActivityGetFriendGiftWishListRsp::friend_gift_wish_list() const {
  // @@protoc_insertion_point(field_list:proto.ServerActivityGetFriendGiftWishListRsp.friend_gift_wish_list)
  return friend_gift_wish_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncPlayerIpRegionNotify::kSocialBriefDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncPlayerIpRegionNotify::SyncPlayerIpRegionNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SyncPlayerIpRegionNotify)
}
SyncPlayerIpRegionNotify::SyncPlayerIpRegionNotify(const SyncPlayerIpRegionNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_social_brief_data()) {
    social_brief_data_ = new ::proto::PlayerSocialBriefData(*from.social_brief_data_);
  } else {
    social_brief_data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.SyncPlayerIpRegionNotify)
}

void SyncPlayerIpRegionNotify::SharedCtor() {
  social_brief_data_ = NULL;
  _cached_size_ = 0;
}

SyncPlayerIpRegionNotify::~SyncPlayerIpRegionNotify() {
  // @@protoc_insertion_point(destructor:proto.SyncPlayerIpRegionNotify)
  SharedDtor();
}

void SyncPlayerIpRegionNotify::SharedDtor() {
  if (this != internal_default_instance()) delete social_brief_data_;
}

void SyncPlayerIpRegionNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncPlayerIpRegionNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncPlayerIpRegionNotify& SyncPlayerIpRegionNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SyncPlayerIpRegionNotify* SyncPlayerIpRegionNotify::New(::google::protobuf::Arena* arena) const {
  SyncPlayerIpRegionNotify* n = new SyncPlayerIpRegionNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncPlayerIpRegionNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SyncPlayerIpRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && social_brief_data_ != NULL) {
    delete social_brief_data_;
  }
  social_brief_data_ = NULL;
  _internal_metadata_.Clear();
}

bool SyncPlayerIpRegionNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SyncPlayerIpRegionNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.PlayerSocialBriefData social_brief_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_social_brief_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SyncPlayerIpRegionNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SyncPlayerIpRegionNotify)
  return false;
#undef DO_
}

void SyncPlayerIpRegionNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SyncPlayerIpRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerSocialBriefData social_brief_data = 1;
  if (this->has_social_brief_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->social_brief_data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SyncPlayerIpRegionNotify)
}

::google::protobuf::uint8* SyncPlayerIpRegionNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SyncPlayerIpRegionNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.PlayerSocialBriefData social_brief_data = 1;
  if (this->has_social_brief_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->social_brief_data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SyncPlayerIpRegionNotify)
  return target;
}

size_t SyncPlayerIpRegionNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SyncPlayerIpRegionNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.PlayerSocialBriefData social_brief_data = 1;
  if (this->has_social_brief_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->social_brief_data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncPlayerIpRegionNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SyncPlayerIpRegionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncPlayerIpRegionNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncPlayerIpRegionNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SyncPlayerIpRegionNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SyncPlayerIpRegionNotify)
    MergeFrom(*source);
  }
}

void SyncPlayerIpRegionNotify::MergeFrom(const SyncPlayerIpRegionNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SyncPlayerIpRegionNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_social_brief_data()) {
    mutable_social_brief_data()->::proto::PlayerSocialBriefData::MergeFrom(from.social_brief_data());
  }
}

void SyncPlayerIpRegionNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SyncPlayerIpRegionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncPlayerIpRegionNotify::CopyFrom(const SyncPlayerIpRegionNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SyncPlayerIpRegionNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncPlayerIpRegionNotify::IsInitialized() const {
  return true;
}

void SyncPlayerIpRegionNotify::Swap(SyncPlayerIpRegionNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncPlayerIpRegionNotify::InternalSwap(SyncPlayerIpRegionNotify* other) {
  using std::swap;
  swap(social_brief_data_, other->social_brief_data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncPlayerIpRegionNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsocial_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncPlayerIpRegionNotify

// .proto.PlayerSocialBriefData social_brief_data = 1;
bool SyncPlayerIpRegionNotify::has_social_brief_data() const {
  return this != internal_default_instance() && social_brief_data_ != NULL;
}
void SyncPlayerIpRegionNotify::clear_social_brief_data() {
  if (GetArenaNoVirtual() == NULL && social_brief_data_ != NULL) delete social_brief_data_;
  social_brief_data_ = NULL;
}
const ::proto::PlayerSocialBriefData& SyncPlayerIpRegionNotify::social_brief_data() const {
  const ::proto::PlayerSocialBriefData* p = social_brief_data_;
  // @@protoc_insertion_point(field_get:proto.SyncPlayerIpRegionNotify.social_brief_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::PlayerSocialBriefData*>(
      &::proto::_PlayerSocialBriefData_default_instance_);
}
::proto::PlayerSocialBriefData* SyncPlayerIpRegionNotify::mutable_social_brief_data() {
  
  if (social_brief_data_ == NULL) {
    social_brief_data_ = new ::proto::PlayerSocialBriefData;
  }
  // @@protoc_insertion_point(field_mutable:proto.SyncPlayerIpRegionNotify.social_brief_data)
  return social_brief_data_;
}
::proto::PlayerSocialBriefData* SyncPlayerIpRegionNotify::release_social_brief_data() {
  // @@protoc_insertion_point(field_release:proto.SyncPlayerIpRegionNotify.social_brief_data)
  
  ::proto::PlayerSocialBriefData* temp = social_brief_data_;
  social_brief_data_ = NULL;
  return temp;
}
void SyncPlayerIpRegionNotify::set_allocated_social_brief_data(::proto::PlayerSocialBriefData* social_brief_data) {
  delete social_brief_data_;
  social_brief_data_ = social_brief_data;
  if (social_brief_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SyncPlayerIpRegionNotify.social_brief_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
