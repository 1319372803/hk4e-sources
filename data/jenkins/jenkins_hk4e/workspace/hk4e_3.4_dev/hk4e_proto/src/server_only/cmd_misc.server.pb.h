// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_misc.server.proto

#ifndef PROTOBUF_server_5fonly_2fcmd_5fmisc_2eserver_2eproto__INCLUDED
#define PROTOBUF_server_5fonly_2fcmd_5fmisc_2eserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
#include "server_only/config.server.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AddGateserverNotify;
class AddGateserverNotifyDefaultTypeInternal;
extern AddGateserverNotifyDefaultTypeInternal _AddGateserverNotify_default_instance_;
class ClientVersionSyncNotify;
class ClientVersionSyncNotifyDefaultTypeInternal;
extern ClientVersionSyncNotifyDefaultTypeInternal _ClientVersionSyncNotify_default_instance_;
class ClientVersionSyncNotify_CrcVersionConfigMapEntry;
class ClientVersionSyncNotify_CrcVersionConfigMapEntryDefaultTypeInternal;
extern ClientVersionSyncNotify_CrcVersionConfigMapEntryDefaultTypeInternal _ClientVersionSyncNotify_CrcVersionConfigMapEntry_default_instance_;
class ClientVersionSyncNotify_NextResVersionConfigMapEntry;
class ClientVersionSyncNotify_NextResVersionConfigMapEntryDefaultTypeInternal;
extern ClientVersionSyncNotify_NextResVersionConfigMapEntryDefaultTypeInternal _ClientVersionSyncNotify_NextResVersionConfigMapEntry_default_instance_;
class ClientVersionSyncNotify_ResVersionConfigMapEntry;
class ClientVersionSyncNotify_ResVersionConfigMapEntryDefaultTypeInternal;
extern ClientVersionSyncNotify_ResVersionConfigMapEntryDefaultTypeInternal _ClientVersionSyncNotify_ResVersionConfigMapEntry_default_instance_;
class CrcVersionConfig;
class CrcVersionConfigDefaultTypeInternal;
extern CrcVersionConfigDefaultTypeInternal _CrcVersionConfig_default_instance_;
class MatchServiceStopImplementNotify;
class MatchServiceStopImplementNotifyDefaultTypeInternal;
extern MatchServiceStopImplementNotifyDefaultTypeInternal _MatchServiceStopImplementNotify_default_instance_;
class MatchServiceStopNotify;
class MatchServiceStopNotifyDefaultTypeInternal;
extern MatchServiceStopNotifyDefaultTypeInternal _MatchServiceStopNotify_default_instance_;
class MultiPlayerMsg;
class MultiPlayerMsgDefaultTypeInternal;
extern MultiPlayerMsgDefaultTypeInternal _MultiPlayerMsg_default_instance_;
class MultiserverServiceTypeNotify;
class MultiserverServiceTypeNotifyDefaultTypeInternal;
extern MultiserverServiceTypeNotifyDefaultTypeInternal _MultiserverServiceTypeNotify_default_instance_;
class NodeserverConnectedAndRegisteredNotify;
class NodeserverConnectedAndRegisteredNotifyDefaultTypeInternal;
extern NodeserverConnectedAndRegisteredNotifyDefaultTypeInternal _NodeserverConnectedAndRegisteredNotify_default_instance_;
class PacketCountInfo;
class PacketCountInfoDefaultTypeInternal;
extern PacketCountInfoDefaultTypeInternal _PacketCountInfo_default_instance_;
class PacketFreqencyExceedNotify;
class PacketFreqencyExceedNotifyDefaultTypeInternal;
extern PacketFreqencyExceedNotifyDefaultTypeInternal _PacketFreqencyExceedNotify_default_instance_;
class PlayerTransferNotify;
class PlayerTransferNotifyDefaultTypeInternal;
extern PlayerTransferNotifyDefaultTypeInternal _PlayerTransferNotify_default_instance_;
class RegisterServiceNotify;
class RegisterServiceNotifyDefaultTypeInternal;
extern RegisterServiceNotifyDefaultTypeInternal _RegisterServiceNotify_default_instance_;
class RegisterServiceSuccessNotify;
class RegisterServiceSuccessNotifyDefaultTypeInternal;
extern RegisterServiceSuccessNotifyDefaultTypeInternal _RegisterServiceSuccessNotify_default_instance_;
class ReloadConfigNotify;
class ReloadConfigNotifyDefaultTypeInternal;
extern ReloadConfigNotifyDefaultTypeInternal _ReloadConfigNotify_default_instance_;
class SceneAsyncLoadGroupBatchNotify;
class SceneAsyncLoadGroupBatchNotifyDefaultTypeInternal;
extern SceneAsyncLoadGroupBatchNotifyDefaultTypeInternal _SceneAsyncLoadGroupBatchNotify_default_instance_;
class ServerBlockPlayerChatNotify;
class ServerBlockPlayerChatNotifyDefaultTypeInternal;
extern ServerBlockPlayerChatNotifyDefaultTypeInternal _ServerBlockPlayerChatNotify_default_instance_;
class ServerBlockPlayerMpNotify;
class ServerBlockPlayerMpNotifyDefaultTypeInternal;
extern ServerBlockPlayerMpNotifyDefaultTypeInternal _ServerBlockPlayerMpNotify_default_instance_;
class ServerCheckSegmentCrcNotify;
class ServerCheckSegmentCrcNotifyDefaultTypeInternal;
extern ServerCheckSegmentCrcNotifyDefaultTypeInternal _ServerCheckSegmentCrcNotify_default_instance_;
class StopServerConfigNotify;
class StopServerConfigNotifyDefaultTypeInternal;
extern StopServerConfigNotifyDefaultTypeInternal _StopServerConfigNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto

// ===================================================================

class StopServerConfigNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.StopServerConfigNotify) */ {
 public:
  StopServerConfigNotify();
  virtual ~StopServerConfigNotify();

  StopServerConfigNotify(const StopServerConfigNotify& from);

  inline StopServerConfigNotify& operator=(const StopServerConfigNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StopServerConfigNotify(StopServerConfigNotify&& from) noexcept
    : StopServerConfigNotify() {
    *this = ::std::move(from);
  }

  inline StopServerConfigNotify& operator=(StopServerConfigNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopServerConfigNotify& default_instance();

  static inline const StopServerConfigNotify* internal_default_instance() {
    return reinterpret_cast<const StopServerConfigNotify*>(
               &_StopServerConfigNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(StopServerConfigNotify* other);
  friend void swap(StopServerConfigNotify& a, StopServerConfigNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StopServerConfigNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  StopServerConfigNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StopServerConfigNotify& from);
  void MergeFrom(const StopServerConfigNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StopServerConfigNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.StopServerConfigNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NodeserverConnectedAndRegisteredNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.NodeserverConnectedAndRegisteredNotify) */ {
 public:
  NodeserverConnectedAndRegisteredNotify();
  virtual ~NodeserverConnectedAndRegisteredNotify();

  NodeserverConnectedAndRegisteredNotify(const NodeserverConnectedAndRegisteredNotify& from);

  inline NodeserverConnectedAndRegisteredNotify& operator=(const NodeserverConnectedAndRegisteredNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NodeserverConnectedAndRegisteredNotify(NodeserverConnectedAndRegisteredNotify&& from) noexcept
    : NodeserverConnectedAndRegisteredNotify() {
    *this = ::std::move(from);
  }

  inline NodeserverConnectedAndRegisteredNotify& operator=(NodeserverConnectedAndRegisteredNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeserverConnectedAndRegisteredNotify& default_instance();

  static inline const NodeserverConnectedAndRegisteredNotify* internal_default_instance() {
    return reinterpret_cast<const NodeserverConnectedAndRegisteredNotify*>(
               &_NodeserverConnectedAndRegisteredNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(NodeserverConnectedAndRegisteredNotify* other);
  friend void swap(NodeserverConnectedAndRegisteredNotify& a, NodeserverConnectedAndRegisteredNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NodeserverConnectedAndRegisteredNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  NodeserverConnectedAndRegisteredNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NodeserverConnectedAndRegisteredNotify& from);
  void MergeFrom(const NodeserverConnectedAndRegisteredNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NodeserverConnectedAndRegisteredNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 nodeserver_id = 1;
  void clear_nodeserver_id();
  static const int kNodeserverIdFieldNumber = 1;
  ::google::protobuf::uint32 nodeserver_id() const;
  void set_nodeserver_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.NodeserverConnectedAndRegisteredNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 nodeserver_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MultiPlayerMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MultiPlayerMsg) */ {
 public:
  MultiPlayerMsg();
  virtual ~MultiPlayerMsg();

  MultiPlayerMsg(const MultiPlayerMsg& from);

  inline MultiPlayerMsg& operator=(const MultiPlayerMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultiPlayerMsg(MultiPlayerMsg&& from) noexcept
    : MultiPlayerMsg() {
    *this = ::std::move(from);
  }

  inline MultiPlayerMsg& operator=(MultiPlayerMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultiPlayerMsg& default_instance();

  static inline const MultiPlayerMsg* internal_default_instance() {
    return reinterpret_cast<const MultiPlayerMsg*>(
               &_MultiPlayerMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MultiPlayerMsg* other);
  friend void swap(MultiPlayerMsg& a, MultiPlayerMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultiPlayerMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  MultiPlayerMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultiPlayerMsg& from);
  void MergeFrom(const MultiPlayerMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultiPlayerMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uid_list = 1;
  int uid_list_size() const;
  void clear_uid_list();
  static const int kUidListFieldNumber = 1;
  ::google::protobuf::uint32 uid_list(int index) const;
  void set_uid_list(int index, ::google::protobuf::uint32 value);
  void add_uid_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uid_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uid_list();

  // bytes proto_bin = 2;
  void clear_proto_bin();
  static const int kProtoBinFieldNumber = 2;
  const ::std::string& proto_bin() const;
  void set_proto_bin(const ::std::string& value);
  #if LANG_CXX11
  void set_proto_bin(::std::string&& value);
  #endif
  void set_proto_bin(const char* value);
  void set_proto_bin(const void* value, size_t size);
  ::std::string* mutable_proto_bin();
  ::std::string* release_proto_bin();
  void set_allocated_proto_bin(::std::string* proto_bin);

  // @@protoc_insertion_point(class_scope:proto.MultiPlayerMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uid_list_;
  mutable int _uid_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr proto_bin_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddGateserverNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddGateserverNotify) */ {
 public:
  AddGateserverNotify();
  virtual ~AddGateserverNotify();

  AddGateserverNotify(const AddGateserverNotify& from);

  inline AddGateserverNotify& operator=(const AddGateserverNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddGateserverNotify(AddGateserverNotify&& from) noexcept
    : AddGateserverNotify() {
    *this = ::std::move(from);
  }

  inline AddGateserverNotify& operator=(AddGateserverNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddGateserverNotify& default_instance();

  static inline const AddGateserverNotify* internal_default_instance() {
    return reinterpret_cast<const AddGateserverNotify*>(
               &_AddGateserverNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AddGateserverNotify* other);
  friend void swap(AddGateserverNotify& a, AddGateserverNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddGateserverNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  AddGateserverNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddGateserverNotify& from);
  void MergeFrom(const AddGateserverNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddGateserverNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string domain_name = 4;
  void clear_domain_name();
  static const int kDomainNameFieldNumber = 4;
  const ::std::string& domain_name() const;
  void set_domain_name(const ::std::string& value);
  #if LANG_CXX11
  void set_domain_name(::std::string&& value);
  #endif
  void set_domain_name(const char* value);
  void set_domain_name(const char* value, size_t size);
  ::std::string* mutable_domain_name();
  ::std::string* release_domain_name();
  void set_allocated_domain_name(::std::string* domain_name);

  // uint32 listen_port = 1;
  void clear_listen_port();
  static const int kListenPortFieldNumber = 1;
  ::google::protobuf::uint32 listen_port() const;
  void set_listen_port(::google::protobuf::uint32 value);

  // uint32 outer_ip = 2;
  void clear_outer_ip();
  static const int kOuterIpFieldNumber = 2;
  ::google::protobuf::uint32 outer_ip() const;
  void set_outer_ip(::google::protobuf::uint32 value);

  // bool use_domain_name = 3;
  void clear_use_domain_name();
  static const int kUseDomainNameFieldNumber = 3;
  bool use_domain_name() const;
  void set_use_domain_name(bool value);

  // @@protoc_insertion_point(class_scope:proto.AddGateserverNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr domain_name_;
  ::google::protobuf::uint32 listen_port_;
  ::google::protobuf::uint32 outer_ip_;
  bool use_domain_name_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterServiceNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegisterServiceNotify) */ {
 public:
  RegisterServiceNotify();
  virtual ~RegisterServiceNotify();

  RegisterServiceNotify(const RegisterServiceNotify& from);

  inline RegisterServiceNotify& operator=(const RegisterServiceNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterServiceNotify(RegisterServiceNotify&& from) noexcept
    : RegisterServiceNotify() {
    *this = ::std::move(from);
  }

  inline RegisterServiceNotify& operator=(RegisterServiceNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterServiceNotify& default_instance();

  static inline const RegisterServiceNotify* internal_default_instance() {
    return reinterpret_cast<const RegisterServiceNotify*>(
               &_RegisterServiceNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(RegisterServiceNotify* other);
  friend void swap(RegisterServiceNotify& a, RegisterServiceNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterServiceNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterServiceNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterServiceNotify& from);
  void MergeFrom(const RegisterServiceNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterServiceNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ServiceType service_type_list = 1;
  int service_type_list_size() const;
  void clear_service_type_list();
  static const int kServiceTypeListFieldNumber = 1;
  ::proto::ServiceType service_type_list(int index) const;
  void set_service_type_list(int index, ::proto::ServiceType value);
  void add_service_type_list(::proto::ServiceType value);
  const ::google::protobuf::RepeatedField<int>& service_type_list() const;
  ::google::protobuf::RepeatedField<int>* mutable_service_type_list();

  // @@protoc_insertion_point(class_scope:proto.RegisterServiceNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> service_type_list_;
  mutable int _service_type_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerTransferNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerTransferNotify) */ {
 public:
  PlayerTransferNotify();
  virtual ~PlayerTransferNotify();

  PlayerTransferNotify(const PlayerTransferNotify& from);

  inline PlayerTransferNotify& operator=(const PlayerTransferNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerTransferNotify(PlayerTransferNotify&& from) noexcept
    : PlayerTransferNotify() {
    *this = ::std::move(from);
  }

  inline PlayerTransferNotify& operator=(PlayerTransferNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerTransferNotify& default_instance();

  static inline const PlayerTransferNotify* internal_default_instance() {
    return reinterpret_cast<const PlayerTransferNotify*>(
               &_PlayerTransferNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PlayerTransferNotify* other);
  friend void swap(PlayerTransferNotify& a, PlayerTransferNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerTransferNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerTransferNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerTransferNotify& from);
  void MergeFrom(const PlayerTransferNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerTransferNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 transfer_uid = 1;
  void clear_transfer_uid();
  static const int kTransferUidFieldNumber = 1;
  ::google::protobuf::uint32 transfer_uid() const;
  void set_transfer_uid(::google::protobuf::uint32 value);

  // uint32 target_uid = 2;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 2;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // uint32 target_home_owner_uid = 3;
  void clear_target_home_owner_uid();
  static const int kTargetHomeOwnerUidFieldNumber = 3;
  ::google::protobuf::uint32 target_home_owner_uid() const;
  void set_target_home_owner_uid(::google::protobuf::uint32 value);

  // uint32 target_home_gameserver_id = 4;
  void clear_target_home_gameserver_id();
  static const int kTargetHomeGameserverIdFieldNumber = 4;
  ::google::protobuf::uint32 target_home_gameserver_id() const;
  void set_target_home_gameserver_id(::google::protobuf::uint32 value);

  // uint32 target_home_param = 5;
  void clear_target_home_param();
  static const int kTargetHomeParamFieldNumber = 5;
  ::google::protobuf::uint32 target_home_param() const;
  void set_target_home_param(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerTransferNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 transfer_uid_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::uint32 target_home_owner_uid_;
  ::google::protobuf::uint32 target_home_gameserver_id_;
  ::google::protobuf::uint32 target_home_param_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PacketCountInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PacketCountInfo) */ {
 public:
  PacketCountInfo();
  virtual ~PacketCountInfo();

  PacketCountInfo(const PacketCountInfo& from);

  inline PacketCountInfo& operator=(const PacketCountInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PacketCountInfo(PacketCountInfo&& from) noexcept
    : PacketCountInfo() {
    *this = ::std::move(from);
  }

  inline PacketCountInfo& operator=(PacketCountInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketCountInfo& default_instance();

  static inline const PacketCountInfo* internal_default_instance() {
    return reinterpret_cast<const PacketCountInfo*>(
               &_PacketCountInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(PacketCountInfo* other);
  friend void swap(PacketCountInfo& a, PacketCountInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PacketCountInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PacketCountInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PacketCountInfo& from);
  void MergeFrom(const PacketCountInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PacketCountInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 cmd_id = 1;
  void clear_cmd_id();
  static const int kCmdIdFieldNumber = 1;
  ::google::protobuf::uint32 cmd_id() const;
  void set_cmd_id(::google::protobuf::uint32 value);

  // uint32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PacketCountInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 cmd_id_;
  ::google::protobuf::uint32 count_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PacketFreqencyExceedNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PacketFreqencyExceedNotify) */ {
 public:
  PacketFreqencyExceedNotify();
  virtual ~PacketFreqencyExceedNotify();

  PacketFreqencyExceedNotify(const PacketFreqencyExceedNotify& from);

  inline PacketFreqencyExceedNotify& operator=(const PacketFreqencyExceedNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PacketFreqencyExceedNotify(PacketFreqencyExceedNotify&& from) noexcept
    : PacketFreqencyExceedNotify() {
    *this = ::std::move(from);
  }

  inline PacketFreqencyExceedNotify& operator=(PacketFreqencyExceedNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PacketFreqencyExceedNotify& default_instance();

  static inline const PacketFreqencyExceedNotify* internal_default_instance() {
    return reinterpret_cast<const PacketFreqencyExceedNotify*>(
               &_PacketFreqencyExceedNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(PacketFreqencyExceedNotify* other);
  friend void swap(PacketFreqencyExceedNotify& a, PacketFreqencyExceedNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PacketFreqencyExceedNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PacketFreqencyExceedNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PacketFreqencyExceedNotify& from);
  void MergeFrom(const PacketFreqencyExceedNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PacketFreqencyExceedNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.PacketCountInfo packet_count_list = 3;
  int packet_count_list_size() const;
  void clear_packet_count_list();
  static const int kPacketCountListFieldNumber = 3;
  const ::proto::PacketCountInfo& packet_count_list(int index) const;
  ::proto::PacketCountInfo* mutable_packet_count_list(int index);
  ::proto::PacketCountInfo* add_packet_count_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PacketCountInfo >*
      mutable_packet_count_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PacketCountInfo >&
      packet_count_list() const;

  // uint32 packet_count = 1;
  void clear_packet_count();
  static const int kPacketCountFieldNumber = 1;
  ::google::protobuf::uint32 packet_count() const;
  void set_packet_count(::google::protobuf::uint32 value);

  // uint32 interval = 2;
  void clear_interval();
  static const int kIntervalFieldNumber = 2;
  ::google::protobuf::uint32 interval() const;
  void set_interval(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PacketFreqencyExceedNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::PacketCountInfo > packet_count_list_;
  ::google::protobuf::uint32 packet_count_;
  ::google::protobuf::uint32 interval_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneAsyncLoadGroupBatchNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAsyncLoadGroupBatchNotify) */ {
 public:
  SceneAsyncLoadGroupBatchNotify();
  virtual ~SceneAsyncLoadGroupBatchNotify();

  SceneAsyncLoadGroupBatchNotify(const SceneAsyncLoadGroupBatchNotify& from);

  inline SceneAsyncLoadGroupBatchNotify& operator=(const SceneAsyncLoadGroupBatchNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAsyncLoadGroupBatchNotify(SceneAsyncLoadGroupBatchNotify&& from) noexcept
    : SceneAsyncLoadGroupBatchNotify() {
    *this = ::std::move(from);
  }

  inline SceneAsyncLoadGroupBatchNotify& operator=(SceneAsyncLoadGroupBatchNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAsyncLoadGroupBatchNotify& default_instance();

  static inline const SceneAsyncLoadGroupBatchNotify* internal_default_instance() {
    return reinterpret_cast<const SceneAsyncLoadGroupBatchNotify*>(
               &_SceneAsyncLoadGroupBatchNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SceneAsyncLoadGroupBatchNotify* other);
  friend void swap(SceneAsyncLoadGroupBatchNotify& a, SceneAsyncLoadGroupBatchNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAsyncLoadGroupBatchNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAsyncLoadGroupBatchNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAsyncLoadGroupBatchNotify& from);
  void MergeFrom(const SceneAsyncLoadGroupBatchNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAsyncLoadGroupBatchNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.SceneAsyncLoadGroupBatchNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CrcVersionConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CrcVersionConfig) */ {
 public:
  CrcVersionConfig();
  virtual ~CrcVersionConfig();

  CrcVersionConfig(const CrcVersionConfig& from);

  inline CrcVersionConfig& operator=(const CrcVersionConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CrcVersionConfig(CrcVersionConfig&& from) noexcept
    : CrcVersionConfig() {
    *this = ::std::move(from);
  }

  inline CrcVersionConfig& operator=(CrcVersionConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CrcVersionConfig& default_instance();

  static inline const CrcVersionConfig* internal_default_instance() {
    return reinterpret_cast<const CrcVersionConfig*>(
               &_CrcVersionConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CrcVersionConfig* other);
  friend void swap(CrcVersionConfig& a, CrcVersionConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CrcVersionConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  CrcVersionConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CrcVersionConfig& from);
  void MergeFrom(const CrcVersionConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CrcVersionConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string client_version_list = 1;
  int client_version_list_size() const;
  void clear_client_version_list();
  static const int kClientVersionListFieldNumber = 1;
  const ::std::string& client_version_list(int index) const;
  ::std::string* mutable_client_version_list(int index);
  void set_client_version_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_client_version_list(int index, ::std::string&& value);
  #endif
  void set_client_version_list(int index, const char* value);
  void set_client_version_list(int index, const char* value, size_t size);
  ::std::string* add_client_version_list();
  void add_client_version_list(const ::std::string& value);
  #if LANG_CXX11
  void add_client_version_list(::std::string&& value);
  #endif
  void add_client_version_list(const char* value);
  void add_client_version_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& client_version_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_client_version_list();

  // @@protoc_insertion_point(class_scope:proto.CrcVersionConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> client_version_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ClientVersionSyncNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClientVersionSyncNotify) */ {
 public:
  ClientVersionSyncNotify();
  virtual ~ClientVersionSyncNotify();

  ClientVersionSyncNotify(const ClientVersionSyncNotify& from);

  inline ClientVersionSyncNotify& operator=(const ClientVersionSyncNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClientVersionSyncNotify(ClientVersionSyncNotify&& from) noexcept
    : ClientVersionSyncNotify() {
    *this = ::std::move(from);
  }

  inline ClientVersionSyncNotify& operator=(ClientVersionSyncNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientVersionSyncNotify& default_instance();

  static inline const ClientVersionSyncNotify* internal_default_instance() {
    return reinterpret_cast<const ClientVersionSyncNotify*>(
               &_ClientVersionSyncNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ClientVersionSyncNotify* other);
  friend void swap(ClientVersionSyncNotify& a, ClientVersionSyncNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClientVersionSyncNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientVersionSyncNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientVersionSyncNotify& from);
  void MergeFrom(const ClientVersionSyncNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientVersionSyncNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.ResVersionConfig> res_version_config_map = 2;
  int res_version_config_map_size() const;
  void clear_res_version_config_map();
  static const int kResVersionConfigMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >&
      res_version_config_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >*
      mutable_res_version_config_map();

  // map<uint32, .proto.CrcVersionConfig> crc_version_config_map = 3;
  int crc_version_config_map_size() const;
  void clear_crc_version_config_map();
  static const int kCrcVersionConfigMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >&
      crc_version_config_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >*
      mutable_crc_version_config_map();

  // map<uint32, .proto.ResVersionConfig> next_res_version_config_map = 4;
  int next_res_version_config_map_size() const;
  void clear_next_res_version_config_map();
  static const int kNextResVersionConfigMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >&
      next_res_version_config_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >*
      mutable_next_res_version_config_map();

  // .proto.DataVersionConfig data_version_config = 1;
  bool has_data_version_config() const;
  void clear_data_version_config();
  static const int kDataVersionConfigFieldNumber = 1;
  const ::proto::DataVersionConfig& data_version_config() const;
  ::proto::DataVersionConfig* mutable_data_version_config();
  ::proto::DataVersionConfig* release_data_version_config();
  void set_allocated_data_version_config(::proto::DataVersionConfig* data_version_config);

  // @@protoc_insertion_point(class_scope:proto.ClientVersionSyncNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class ClientVersionSyncNotify_ResVersionConfigMapEntry : public ::google::protobuf::internal::MapEntry<ClientVersionSyncNotify_ResVersionConfigMapEntry, 
      ::google::protobuf::uint32, ::proto::ResVersionConfig,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ClientVersionSyncNotify_ResVersionConfigMapEntry, 
      ::google::protobuf::uint32, ::proto::ResVersionConfig,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ClientVersionSyncNotify_ResVersionConfigMapEntry();
    ClientVersionSyncNotify_ResVersionConfigMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ClientVersionSyncNotify_ResVersionConfigMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ClientVersionSyncNotify_ResVersionConfigMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ClientVersionSyncNotify_ResVersionConfigMapEntry,
      ::google::protobuf::uint32, ::proto::ResVersionConfig,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > res_version_config_map_;
  private:
  public:
  class ClientVersionSyncNotify_CrcVersionConfigMapEntry : public ::google::protobuf::internal::MapEntry<ClientVersionSyncNotify_CrcVersionConfigMapEntry, 
      ::google::protobuf::uint32, ::proto::CrcVersionConfig,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ClientVersionSyncNotify_CrcVersionConfigMapEntry, 
      ::google::protobuf::uint32, ::proto::CrcVersionConfig,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ClientVersionSyncNotify_CrcVersionConfigMapEntry();
    ClientVersionSyncNotify_CrcVersionConfigMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ClientVersionSyncNotify_CrcVersionConfigMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ClientVersionSyncNotify_CrcVersionConfigMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ClientVersionSyncNotify_CrcVersionConfigMapEntry,
      ::google::protobuf::uint32, ::proto::CrcVersionConfig,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > crc_version_config_map_;
  private:
  public:
  class ClientVersionSyncNotify_NextResVersionConfigMapEntry : public ::google::protobuf::internal::MapEntry<ClientVersionSyncNotify_NextResVersionConfigMapEntry, 
      ::google::protobuf::uint32, ::proto::ResVersionConfig,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ClientVersionSyncNotify_NextResVersionConfigMapEntry, 
      ::google::protobuf::uint32, ::proto::ResVersionConfig,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ClientVersionSyncNotify_NextResVersionConfigMapEntry();
    ClientVersionSyncNotify_NextResVersionConfigMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ClientVersionSyncNotify_NextResVersionConfigMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ClientVersionSyncNotify_NextResVersionConfigMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ClientVersionSyncNotify_NextResVersionConfigMapEntry,
      ::google::protobuf::uint32, ::proto::ResVersionConfig,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > next_res_version_config_map_;
  private:
  ::proto::DataVersionConfig* data_version_config_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterServiceSuccessNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RegisterServiceSuccessNotify) */ {
 public:
  RegisterServiceSuccessNotify();
  virtual ~RegisterServiceSuccessNotify();

  RegisterServiceSuccessNotify(const RegisterServiceSuccessNotify& from);

  inline RegisterServiceSuccessNotify& operator=(const RegisterServiceSuccessNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterServiceSuccessNotify(RegisterServiceSuccessNotify&& from) noexcept
    : RegisterServiceSuccessNotify() {
    *this = ::std::move(from);
  }

  inline RegisterServiceSuccessNotify& operator=(RegisterServiceSuccessNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterServiceSuccessNotify& default_instance();

  static inline const RegisterServiceSuccessNotify* internal_default_instance() {
    return reinterpret_cast<const RegisterServiceSuccessNotify*>(
               &_RegisterServiceSuccessNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(RegisterServiceSuccessNotify* other);
  friend void swap(RegisterServiceSuccessNotify& a, RegisterServiceSuccessNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterServiceSuccessNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterServiceSuccessNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterServiceSuccessNotify& from);
  void MergeFrom(const RegisterServiceSuccessNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterServiceSuccessNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.RegisterServiceSuccessNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReloadConfigNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReloadConfigNotify) */ {
 public:
  ReloadConfigNotify();
  virtual ~ReloadConfigNotify();

  ReloadConfigNotify(const ReloadConfigNotify& from);

  inline ReloadConfigNotify& operator=(const ReloadConfigNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReloadConfigNotify(ReloadConfigNotify&& from) noexcept
    : ReloadConfigNotify() {
    *this = ::std::move(from);
  }

  inline ReloadConfigNotify& operator=(ReloadConfigNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReloadConfigNotify& default_instance();

  static inline const ReloadConfigNotify* internal_default_instance() {
    return reinterpret_cast<const ReloadConfigNotify*>(
               &_ReloadConfigNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ReloadConfigNotify* other);
  friend void swap(ReloadConfigNotify& a, ReloadConfigNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReloadConfigNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ReloadConfigNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReloadConfigNotify& from);
  void MergeFrom(const ReloadConfigNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReloadConfigNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ReloadConfigNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MultiserverServiceTypeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MultiserverServiceTypeNotify) */ {
 public:
  MultiserverServiceTypeNotify();
  virtual ~MultiserverServiceTypeNotify();

  MultiserverServiceTypeNotify(const MultiserverServiceTypeNotify& from);

  inline MultiserverServiceTypeNotify& operator=(const MultiserverServiceTypeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MultiserverServiceTypeNotify(MultiserverServiceTypeNotify&& from) noexcept
    : MultiserverServiceTypeNotify() {
    *this = ::std::move(from);
  }

  inline MultiserverServiceTypeNotify& operator=(MultiserverServiceTypeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MultiserverServiceTypeNotify& default_instance();

  static inline const MultiserverServiceTypeNotify* internal_default_instance() {
    return reinterpret_cast<const MultiserverServiceTypeNotify*>(
               &_MultiserverServiceTypeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(MultiserverServiceTypeNotify* other);
  friend void swap(MultiserverServiceTypeNotify& a, MultiserverServiceTypeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MultiserverServiceTypeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MultiserverServiceTypeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MultiserverServiceTypeNotify& from);
  void MergeFrom(const MultiserverServiceTypeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MultiserverServiceTypeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ServiceType service_type_list = 1;
  int service_type_list_size() const;
  void clear_service_type_list();
  static const int kServiceTypeListFieldNumber = 1;
  ::proto::ServiceType service_type_list(int index) const;
  void set_service_type_list(int index, ::proto::ServiceType value);
  void add_service_type_list(::proto::ServiceType value);
  const ::google::protobuf::RepeatedField<int>& service_type_list() const;
  ::google::protobuf::RepeatedField<int>* mutable_service_type_list();

  // @@protoc_insertion_point(class_scope:proto.MultiserverServiceTypeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> service_type_list_;
  mutable int _service_type_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchServiceStopNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MatchServiceStopNotify) */ {
 public:
  MatchServiceStopNotify();
  virtual ~MatchServiceStopNotify();

  MatchServiceStopNotify(const MatchServiceStopNotify& from);

  inline MatchServiceStopNotify& operator=(const MatchServiceStopNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchServiceStopNotify(MatchServiceStopNotify&& from) noexcept
    : MatchServiceStopNotify() {
    *this = ::std::move(from);
  }

  inline MatchServiceStopNotify& operator=(MatchServiceStopNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchServiceStopNotify& default_instance();

  static inline const MatchServiceStopNotify* internal_default_instance() {
    return reinterpret_cast<const MatchServiceStopNotify*>(
               &_MatchServiceStopNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(MatchServiceStopNotify* other);
  friend void swap(MatchServiceStopNotify& a, MatchServiceStopNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchServiceStopNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchServiceStopNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchServiceStopNotify& from);
  void MergeFrom(const MatchServiceStopNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchServiceStopNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 server_id = 1;
  void clear_server_id();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::uint32 server_id() const;
  void set_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MatchServiceStopNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 server_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MatchServiceStopImplementNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MatchServiceStopImplementNotify) */ {
 public:
  MatchServiceStopImplementNotify();
  virtual ~MatchServiceStopImplementNotify();

  MatchServiceStopImplementNotify(const MatchServiceStopImplementNotify& from);

  inline MatchServiceStopImplementNotify& operator=(const MatchServiceStopImplementNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchServiceStopImplementNotify(MatchServiceStopImplementNotify&& from) noexcept
    : MatchServiceStopImplementNotify() {
    *this = ::std::move(from);
  }

  inline MatchServiceStopImplementNotify& operator=(MatchServiceStopImplementNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchServiceStopImplementNotify& default_instance();

  static inline const MatchServiceStopImplementNotify* internal_default_instance() {
    return reinterpret_cast<const MatchServiceStopImplementNotify*>(
               &_MatchServiceStopImplementNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(MatchServiceStopImplementNotify* other);
  friend void swap(MatchServiceStopImplementNotify& a, MatchServiceStopImplementNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchServiceStopImplementNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  MatchServiceStopImplementNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchServiceStopImplementNotify& from);
  void MergeFrom(const MatchServiceStopImplementNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchServiceStopImplementNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.MatchServiceStopNotify msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::proto::MatchServiceStopNotify& msg() const;
  ::proto::MatchServiceStopNotify* mutable_msg();
  ::proto::MatchServiceStopNotify* release_msg();
  void set_allocated_msg(::proto::MatchServiceStopNotify* msg);

  // @@protoc_insertion_point(class_scope:proto.MatchServiceStopImplementNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::MatchServiceStopNotify* msg_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerBlockPlayerMpNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerBlockPlayerMpNotify) */ {
 public:
  ServerBlockPlayerMpNotify();
  virtual ~ServerBlockPlayerMpNotify();

  ServerBlockPlayerMpNotify(const ServerBlockPlayerMpNotify& from);

  inline ServerBlockPlayerMpNotify& operator=(const ServerBlockPlayerMpNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerBlockPlayerMpNotify(ServerBlockPlayerMpNotify&& from) noexcept
    : ServerBlockPlayerMpNotify() {
    *this = ::std::move(from);
  }

  inline ServerBlockPlayerMpNotify& operator=(ServerBlockPlayerMpNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerBlockPlayerMpNotify& default_instance();

  static inline const ServerBlockPlayerMpNotify* internal_default_instance() {
    return reinterpret_cast<const ServerBlockPlayerMpNotify*>(
               &_ServerBlockPlayerMpNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(ServerBlockPlayerMpNotify* other);
  friend void swap(ServerBlockPlayerMpNotify& a, ServerBlockPlayerMpNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerBlockPlayerMpNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerBlockPlayerMpNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerBlockPlayerMpNotify& from);
  void MergeFrom(const ServerBlockPlayerMpNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerBlockPlayerMpNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_unlock = 1;
  void clear_is_unlock();
  static const int kIsUnlockFieldNumber = 1;
  bool is_unlock() const;
  void set_is_unlock(bool value);

  // uint32 end_time = 2;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerBlockPlayerMpNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_unlock_;
  ::google::protobuf::uint32 end_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerBlockPlayerChatNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerBlockPlayerChatNotify) */ {
 public:
  ServerBlockPlayerChatNotify();
  virtual ~ServerBlockPlayerChatNotify();

  ServerBlockPlayerChatNotify(const ServerBlockPlayerChatNotify& from);

  inline ServerBlockPlayerChatNotify& operator=(const ServerBlockPlayerChatNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerBlockPlayerChatNotify(ServerBlockPlayerChatNotify&& from) noexcept
    : ServerBlockPlayerChatNotify() {
    *this = ::std::move(from);
  }

  inline ServerBlockPlayerChatNotify& operator=(ServerBlockPlayerChatNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerBlockPlayerChatNotify& default_instance();

  static inline const ServerBlockPlayerChatNotify* internal_default_instance() {
    return reinterpret_cast<const ServerBlockPlayerChatNotify*>(
               &_ServerBlockPlayerChatNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(ServerBlockPlayerChatNotify* other);
  friend void swap(ServerBlockPlayerChatNotify& a, ServerBlockPlayerChatNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerBlockPlayerChatNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerBlockPlayerChatNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerBlockPlayerChatNotify& from);
  void MergeFrom(const ServerBlockPlayerChatNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerBlockPlayerChatNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_unlock = 1;
  void clear_is_unlock();
  static const int kIsUnlockFieldNumber = 1;
  bool is_unlock() const;
  void set_is_unlock(bool value);

  // uint32 end_time = 2;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  ::google::protobuf::uint32 end_time() const;
  void set_end_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ServerBlockPlayerChatNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_unlock_;
  ::google::protobuf::uint32 end_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ServerCheckSegmentCrcNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ServerCheckSegmentCrcNotify) */ {
 public:
  ServerCheckSegmentCrcNotify();
  virtual ~ServerCheckSegmentCrcNotify();

  ServerCheckSegmentCrcNotify(const ServerCheckSegmentCrcNotify& from);

  inline ServerCheckSegmentCrcNotify& operator=(const ServerCheckSegmentCrcNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerCheckSegmentCrcNotify(ServerCheckSegmentCrcNotify&& from) noexcept
    : ServerCheckSegmentCrcNotify() {
    *this = ::std::move(from);
  }

  inline ServerCheckSegmentCrcNotify& operator=(ServerCheckSegmentCrcNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerCheckSegmentCrcNotify& default_instance();

  static inline const ServerCheckSegmentCrcNotify* internal_default_instance() {
    return reinterpret_cast<const ServerCheckSegmentCrcNotify*>(
               &_ServerCheckSegmentCrcNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(ServerCheckSegmentCrcNotify* other);
  friend void swap(ServerCheckSegmentCrcNotify& a, ServerCheckSegmentCrcNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerCheckSegmentCrcNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerCheckSegmentCrcNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerCheckSegmentCrcNotify& from);
  void MergeFrom(const ServerCheckSegmentCrcNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerCheckSegmentCrcNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ServerCheckSegmentCrcNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StopServerConfigNotify

// -------------------------------------------------------------------

// NodeserverConnectedAndRegisteredNotify

// uint32 nodeserver_id = 1;
inline void NodeserverConnectedAndRegisteredNotify::clear_nodeserver_id() {
  nodeserver_id_ = 0u;
}
inline ::google::protobuf::uint32 NodeserverConnectedAndRegisteredNotify::nodeserver_id() const {
  // @@protoc_insertion_point(field_get:proto.NodeserverConnectedAndRegisteredNotify.nodeserver_id)
  return nodeserver_id_;
}
inline void NodeserverConnectedAndRegisteredNotify::set_nodeserver_id(::google::protobuf::uint32 value) {
  
  nodeserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.NodeserverConnectedAndRegisteredNotify.nodeserver_id)
}

// -------------------------------------------------------------------

// MultiPlayerMsg

// repeated uint32 uid_list = 1;
inline int MultiPlayerMsg::uid_list_size() const {
  return uid_list_.size();
}
inline void MultiPlayerMsg::clear_uid_list() {
  uid_list_.Clear();
}
inline ::google::protobuf::uint32 MultiPlayerMsg::uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MultiPlayerMsg.uid_list)
  return uid_list_.Get(index);
}
inline void MultiPlayerMsg::set_uid_list(int index, ::google::protobuf::uint32 value) {
  uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MultiPlayerMsg.uid_list)
}
inline void MultiPlayerMsg::add_uid_list(::google::protobuf::uint32 value) {
  uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MultiPlayerMsg.uid_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MultiPlayerMsg::uid_list() const {
  // @@protoc_insertion_point(field_list:proto.MultiPlayerMsg.uid_list)
  return uid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MultiPlayerMsg::mutable_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MultiPlayerMsg.uid_list)
  return &uid_list_;
}

// bytes proto_bin = 2;
inline void MultiPlayerMsg::clear_proto_bin() {
  proto_bin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MultiPlayerMsg::proto_bin() const {
  // @@protoc_insertion_point(field_get:proto.MultiPlayerMsg.proto_bin)
  return proto_bin_.GetNoArena();
}
inline void MultiPlayerMsg::set_proto_bin(const ::std::string& value) {
  
  proto_bin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MultiPlayerMsg.proto_bin)
}
#if LANG_CXX11
inline void MultiPlayerMsg::set_proto_bin(::std::string&& value) {
  
  proto_bin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MultiPlayerMsg.proto_bin)
}
#endif
inline void MultiPlayerMsg::set_proto_bin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  proto_bin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MultiPlayerMsg.proto_bin)
}
inline void MultiPlayerMsg::set_proto_bin(const void* value, size_t size) {
  
  proto_bin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MultiPlayerMsg.proto_bin)
}
inline ::std::string* MultiPlayerMsg::mutable_proto_bin() {
  
  // @@protoc_insertion_point(field_mutable:proto.MultiPlayerMsg.proto_bin)
  return proto_bin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MultiPlayerMsg::release_proto_bin() {
  // @@protoc_insertion_point(field_release:proto.MultiPlayerMsg.proto_bin)
  
  return proto_bin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MultiPlayerMsg::set_allocated_proto_bin(::std::string* proto_bin) {
  if (proto_bin != NULL) {
    
  } else {
    
  }
  proto_bin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proto_bin);
  // @@protoc_insertion_point(field_set_allocated:proto.MultiPlayerMsg.proto_bin)
}

// -------------------------------------------------------------------

// AddGateserverNotify

// uint32 listen_port = 1;
inline void AddGateserverNotify::clear_listen_port() {
  listen_port_ = 0u;
}
inline ::google::protobuf::uint32 AddGateserverNotify::listen_port() const {
  // @@protoc_insertion_point(field_get:proto.AddGateserverNotify.listen_port)
  return listen_port_;
}
inline void AddGateserverNotify::set_listen_port(::google::protobuf::uint32 value) {
  
  listen_port_ = value;
  // @@protoc_insertion_point(field_set:proto.AddGateserverNotify.listen_port)
}

// uint32 outer_ip = 2;
inline void AddGateserverNotify::clear_outer_ip() {
  outer_ip_ = 0u;
}
inline ::google::protobuf::uint32 AddGateserverNotify::outer_ip() const {
  // @@protoc_insertion_point(field_get:proto.AddGateserverNotify.outer_ip)
  return outer_ip_;
}
inline void AddGateserverNotify::set_outer_ip(::google::protobuf::uint32 value) {
  
  outer_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.AddGateserverNotify.outer_ip)
}

// bool use_domain_name = 3;
inline void AddGateserverNotify::clear_use_domain_name() {
  use_domain_name_ = false;
}
inline bool AddGateserverNotify::use_domain_name() const {
  // @@protoc_insertion_point(field_get:proto.AddGateserverNotify.use_domain_name)
  return use_domain_name_;
}
inline void AddGateserverNotify::set_use_domain_name(bool value) {
  
  use_domain_name_ = value;
  // @@protoc_insertion_point(field_set:proto.AddGateserverNotify.use_domain_name)
}

// string domain_name = 4;
inline void AddGateserverNotify::clear_domain_name() {
  domain_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddGateserverNotify::domain_name() const {
  // @@protoc_insertion_point(field_get:proto.AddGateserverNotify.domain_name)
  return domain_name_.GetNoArena();
}
inline void AddGateserverNotify::set_domain_name(const ::std::string& value) {
  
  domain_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AddGateserverNotify.domain_name)
}
#if LANG_CXX11
inline void AddGateserverNotify::set_domain_name(::std::string&& value) {
  
  domain_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AddGateserverNotify.domain_name)
}
#endif
inline void AddGateserverNotify::set_domain_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  domain_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AddGateserverNotify.domain_name)
}
inline void AddGateserverNotify::set_domain_name(const char* value, size_t size) {
  
  domain_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AddGateserverNotify.domain_name)
}
inline ::std::string* AddGateserverNotify::mutable_domain_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.AddGateserverNotify.domain_name)
  return domain_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddGateserverNotify::release_domain_name() {
  // @@protoc_insertion_point(field_release:proto.AddGateserverNotify.domain_name)
  
  return domain_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddGateserverNotify::set_allocated_domain_name(::std::string* domain_name) {
  if (domain_name != NULL) {
    
  } else {
    
  }
  domain_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain_name);
  // @@protoc_insertion_point(field_set_allocated:proto.AddGateserverNotify.domain_name)
}

// -------------------------------------------------------------------

// RegisterServiceNotify

// repeated .proto.ServiceType service_type_list = 1;
inline int RegisterServiceNotify::service_type_list_size() const {
  return service_type_list_.size();
}
inline void RegisterServiceNotify::clear_service_type_list() {
  service_type_list_.Clear();
}
inline ::proto::ServiceType RegisterServiceNotify::service_type_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RegisterServiceNotify.service_type_list)
  return static_cast< ::proto::ServiceType >(service_type_list_.Get(index));
}
inline void RegisterServiceNotify::set_service_type_list(int index, ::proto::ServiceType value) {
  service_type_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.RegisterServiceNotify.service_type_list)
}
inline void RegisterServiceNotify::add_service_type_list(::proto::ServiceType value) {
  service_type_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.RegisterServiceNotify.service_type_list)
}
inline const ::google::protobuf::RepeatedField<int>&
RegisterServiceNotify::service_type_list() const {
  // @@protoc_insertion_point(field_list:proto.RegisterServiceNotify.service_type_list)
  return service_type_list_;
}
inline ::google::protobuf::RepeatedField<int>*
RegisterServiceNotify::mutable_service_type_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RegisterServiceNotify.service_type_list)
  return &service_type_list_;
}

// -------------------------------------------------------------------

// PlayerTransferNotify

// uint32 transfer_uid = 1;
inline void PlayerTransferNotify::clear_transfer_uid() {
  transfer_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerTransferNotify::transfer_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTransferNotify.transfer_uid)
  return transfer_uid_;
}
inline void PlayerTransferNotify::set_transfer_uid(::google::protobuf::uint32 value) {
  
  transfer_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTransferNotify.transfer_uid)
}

// uint32 target_uid = 2;
inline void PlayerTransferNotify::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerTransferNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTransferNotify.target_uid)
  return target_uid_;
}
inline void PlayerTransferNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTransferNotify.target_uid)
}

// uint32 target_home_owner_uid = 3;
inline void PlayerTransferNotify::clear_target_home_owner_uid() {
  target_home_owner_uid_ = 0u;
}
inline ::google::protobuf::uint32 PlayerTransferNotify::target_home_owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTransferNotify.target_home_owner_uid)
  return target_home_owner_uid_;
}
inline void PlayerTransferNotify::set_target_home_owner_uid(::google::protobuf::uint32 value) {
  
  target_home_owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTransferNotify.target_home_owner_uid)
}

// uint32 target_home_gameserver_id = 4;
inline void PlayerTransferNotify::clear_target_home_gameserver_id() {
  target_home_gameserver_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerTransferNotify::target_home_gameserver_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTransferNotify.target_home_gameserver_id)
  return target_home_gameserver_id_;
}
inline void PlayerTransferNotify::set_target_home_gameserver_id(::google::protobuf::uint32 value) {
  
  target_home_gameserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTransferNotify.target_home_gameserver_id)
}

// uint32 target_home_param = 5;
inline void PlayerTransferNotify::clear_target_home_param() {
  target_home_param_ = 0u;
}
inline ::google::protobuf::uint32 PlayerTransferNotify::target_home_param() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTransferNotify.target_home_param)
  return target_home_param_;
}
inline void PlayerTransferNotify::set_target_home_param(::google::protobuf::uint32 value) {
  
  target_home_param_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTransferNotify.target_home_param)
}

// -------------------------------------------------------------------

// PacketCountInfo

// uint32 cmd_id = 1;
inline void PacketCountInfo::clear_cmd_id() {
  cmd_id_ = 0u;
}
inline ::google::protobuf::uint32 PacketCountInfo::cmd_id() const {
  // @@protoc_insertion_point(field_get:proto.PacketCountInfo.cmd_id)
  return cmd_id_;
}
inline void PacketCountInfo::set_cmd_id(::google::protobuf::uint32 value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PacketCountInfo.cmd_id)
}

// uint32 count = 2;
inline void PacketCountInfo::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 PacketCountInfo::count() const {
  // @@protoc_insertion_point(field_get:proto.PacketCountInfo.count)
  return count_;
}
inline void PacketCountInfo::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.PacketCountInfo.count)
}

// -------------------------------------------------------------------

// PacketFreqencyExceedNotify

// uint32 packet_count = 1;
inline void PacketFreqencyExceedNotify::clear_packet_count() {
  packet_count_ = 0u;
}
inline ::google::protobuf::uint32 PacketFreqencyExceedNotify::packet_count() const {
  // @@protoc_insertion_point(field_get:proto.PacketFreqencyExceedNotify.packet_count)
  return packet_count_;
}
inline void PacketFreqencyExceedNotify::set_packet_count(::google::protobuf::uint32 value) {
  
  packet_count_ = value;
  // @@protoc_insertion_point(field_set:proto.PacketFreqencyExceedNotify.packet_count)
}

// uint32 interval = 2;
inline void PacketFreqencyExceedNotify::clear_interval() {
  interval_ = 0u;
}
inline ::google::protobuf::uint32 PacketFreqencyExceedNotify::interval() const {
  // @@protoc_insertion_point(field_get:proto.PacketFreqencyExceedNotify.interval)
  return interval_;
}
inline void PacketFreqencyExceedNotify::set_interval(::google::protobuf::uint32 value) {
  
  interval_ = value;
  // @@protoc_insertion_point(field_set:proto.PacketFreqencyExceedNotify.interval)
}

// repeated .proto.PacketCountInfo packet_count_list = 3;
inline int PacketFreqencyExceedNotify::packet_count_list_size() const {
  return packet_count_list_.size();
}
inline void PacketFreqencyExceedNotify::clear_packet_count_list() {
  packet_count_list_.Clear();
}
inline const ::proto::PacketCountInfo& PacketFreqencyExceedNotify::packet_count_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PacketFreqencyExceedNotify.packet_count_list)
  return packet_count_list_.Get(index);
}
inline ::proto::PacketCountInfo* PacketFreqencyExceedNotify::mutable_packet_count_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PacketFreqencyExceedNotify.packet_count_list)
  return packet_count_list_.Mutable(index);
}
inline ::proto::PacketCountInfo* PacketFreqencyExceedNotify::add_packet_count_list() {
  // @@protoc_insertion_point(field_add:proto.PacketFreqencyExceedNotify.packet_count_list)
  return packet_count_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PacketCountInfo >*
PacketFreqencyExceedNotify::mutable_packet_count_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PacketFreqencyExceedNotify.packet_count_list)
  return &packet_count_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PacketCountInfo >&
PacketFreqencyExceedNotify::packet_count_list() const {
  // @@protoc_insertion_point(field_list:proto.PacketFreqencyExceedNotify.packet_count_list)
  return packet_count_list_;
}

// -------------------------------------------------------------------

// SceneAsyncLoadGroupBatchNotify

// -------------------------------------------------------------------

// CrcVersionConfig

// repeated string client_version_list = 1;
inline int CrcVersionConfig::client_version_list_size() const {
  return client_version_list_.size();
}
inline void CrcVersionConfig::clear_client_version_list() {
  client_version_list_.Clear();
}
inline const ::std::string& CrcVersionConfig::client_version_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CrcVersionConfig.client_version_list)
  return client_version_list_.Get(index);
}
inline ::std::string* CrcVersionConfig::mutable_client_version_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CrcVersionConfig.client_version_list)
  return client_version_list_.Mutable(index);
}
inline void CrcVersionConfig::set_client_version_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.CrcVersionConfig.client_version_list)
  client_version_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CrcVersionConfig::set_client_version_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.CrcVersionConfig.client_version_list)
  client_version_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CrcVersionConfig::set_client_version_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  client_version_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.CrcVersionConfig.client_version_list)
}
inline void CrcVersionConfig::set_client_version_list(int index, const char* value, size_t size) {
  client_version_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.CrcVersionConfig.client_version_list)
}
inline ::std::string* CrcVersionConfig::add_client_version_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.CrcVersionConfig.client_version_list)
  return client_version_list_.Add();
}
inline void CrcVersionConfig::add_client_version_list(const ::std::string& value) {
  client_version_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.CrcVersionConfig.client_version_list)
}
#if LANG_CXX11
inline void CrcVersionConfig::add_client_version_list(::std::string&& value) {
  client_version_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.CrcVersionConfig.client_version_list)
}
#endif
inline void CrcVersionConfig::add_client_version_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  client_version_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.CrcVersionConfig.client_version_list)
}
inline void CrcVersionConfig::add_client_version_list(const char* value, size_t size) {
  client_version_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.CrcVersionConfig.client_version_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CrcVersionConfig::client_version_list() const {
  // @@protoc_insertion_point(field_list:proto.CrcVersionConfig.client_version_list)
  return client_version_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CrcVersionConfig::mutable_client_version_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CrcVersionConfig.client_version_list)
  return &client_version_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ClientVersionSyncNotify

// .proto.DataVersionConfig data_version_config = 1;
inline bool ClientVersionSyncNotify::has_data_version_config() const {
  return this != internal_default_instance() && data_version_config_ != NULL;
}
inline void ClientVersionSyncNotify::clear_data_version_config() {
  if (GetArenaNoVirtual() == NULL && data_version_config_ != NULL) delete data_version_config_;
  data_version_config_ = NULL;
}
inline const ::proto::DataVersionConfig& ClientVersionSyncNotify::data_version_config() const {
  const ::proto::DataVersionConfig* p = data_version_config_;
  // @@protoc_insertion_point(field_get:proto.ClientVersionSyncNotify.data_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DataVersionConfig*>(
      &::proto::_DataVersionConfig_default_instance_);
}
inline ::proto::DataVersionConfig* ClientVersionSyncNotify::mutable_data_version_config() {
  
  if (data_version_config_ == NULL) {
    data_version_config_ = new ::proto::DataVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientVersionSyncNotify.data_version_config)
  return data_version_config_;
}
inline ::proto::DataVersionConfig* ClientVersionSyncNotify::release_data_version_config() {
  // @@protoc_insertion_point(field_release:proto.ClientVersionSyncNotify.data_version_config)
  
  ::proto::DataVersionConfig* temp = data_version_config_;
  data_version_config_ = NULL;
  return temp;
}
inline void ClientVersionSyncNotify::set_allocated_data_version_config(::proto::DataVersionConfig* data_version_config) {
  delete data_version_config_;
  data_version_config_ = data_version_config;
  if (data_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientVersionSyncNotify.data_version_config)
}

// map<uint32, .proto.ResVersionConfig> res_version_config_map = 2;
inline int ClientVersionSyncNotify::res_version_config_map_size() const {
  return res_version_config_map_.size();
}
inline void ClientVersionSyncNotify::clear_res_version_config_map() {
  res_version_config_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >&
ClientVersionSyncNotify::res_version_config_map() const {
  // @@protoc_insertion_point(field_map:proto.ClientVersionSyncNotify.res_version_config_map)
  return res_version_config_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >*
ClientVersionSyncNotify::mutable_res_version_config_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ClientVersionSyncNotify.res_version_config_map)
  return res_version_config_map_.MutableMap();
}

// map<uint32, .proto.CrcVersionConfig> crc_version_config_map = 3;
inline int ClientVersionSyncNotify::crc_version_config_map_size() const {
  return crc_version_config_map_.size();
}
inline void ClientVersionSyncNotify::clear_crc_version_config_map() {
  crc_version_config_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >&
ClientVersionSyncNotify::crc_version_config_map() const {
  // @@protoc_insertion_point(field_map:proto.ClientVersionSyncNotify.crc_version_config_map)
  return crc_version_config_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >*
ClientVersionSyncNotify::mutable_crc_version_config_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ClientVersionSyncNotify.crc_version_config_map)
  return crc_version_config_map_.MutableMap();
}

// map<uint32, .proto.ResVersionConfig> next_res_version_config_map = 4;
inline int ClientVersionSyncNotify::next_res_version_config_map_size() const {
  return next_res_version_config_map_.size();
}
inline void ClientVersionSyncNotify::clear_next_res_version_config_map() {
  next_res_version_config_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >&
ClientVersionSyncNotify::next_res_version_config_map() const {
  // @@protoc_insertion_point(field_map:proto.ClientVersionSyncNotify.next_res_version_config_map)
  return next_res_version_config_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >*
ClientVersionSyncNotify::mutable_next_res_version_config_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ClientVersionSyncNotify.next_res_version_config_map)
  return next_res_version_config_map_.MutableMap();
}

// -------------------------------------------------------------------

// RegisterServiceSuccessNotify

// -------------------------------------------------------------------

// ReloadConfigNotify

// -------------------------------------------------------------------

// MultiserverServiceTypeNotify

// repeated .proto.ServiceType service_type_list = 1;
inline int MultiserverServiceTypeNotify::service_type_list_size() const {
  return service_type_list_.size();
}
inline void MultiserverServiceTypeNotify::clear_service_type_list() {
  service_type_list_.Clear();
}
inline ::proto::ServiceType MultiserverServiceTypeNotify::service_type_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MultiserverServiceTypeNotify.service_type_list)
  return static_cast< ::proto::ServiceType >(service_type_list_.Get(index));
}
inline void MultiserverServiceTypeNotify::set_service_type_list(int index, ::proto::ServiceType value) {
  service_type_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MultiserverServiceTypeNotify.service_type_list)
}
inline void MultiserverServiceTypeNotify::add_service_type_list(::proto::ServiceType value) {
  service_type_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MultiserverServiceTypeNotify.service_type_list)
}
inline const ::google::protobuf::RepeatedField<int>&
MultiserverServiceTypeNotify::service_type_list() const {
  // @@protoc_insertion_point(field_list:proto.MultiserverServiceTypeNotify.service_type_list)
  return service_type_list_;
}
inline ::google::protobuf::RepeatedField<int>*
MultiserverServiceTypeNotify::mutable_service_type_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MultiserverServiceTypeNotify.service_type_list)
  return &service_type_list_;
}

// -------------------------------------------------------------------

// MatchServiceStopNotify

// uint32 server_id = 1;
inline void MatchServiceStopNotify::clear_server_id() {
  server_id_ = 0u;
}
inline ::google::protobuf::uint32 MatchServiceStopNotify::server_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchServiceStopNotify.server_id)
  return server_id_;
}
inline void MatchServiceStopNotify::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchServiceStopNotify.server_id)
}

// -------------------------------------------------------------------

// MatchServiceStopImplementNotify

// .proto.MatchServiceStopNotify msg = 1;
inline bool MatchServiceStopImplementNotify::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void MatchServiceStopImplementNotify::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
inline const ::proto::MatchServiceStopNotify& MatchServiceStopImplementNotify::msg() const {
  const ::proto::MatchServiceStopNotify* p = msg_;
  // @@protoc_insertion_point(field_get:proto.MatchServiceStopImplementNotify.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchServiceStopNotify*>(
      &::proto::_MatchServiceStopNotify_default_instance_);
}
inline ::proto::MatchServiceStopNotify* MatchServiceStopImplementNotify::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::MatchServiceStopNotify;
  }
  // @@protoc_insertion_point(field_mutable:proto.MatchServiceStopImplementNotify.msg)
  return msg_;
}
inline ::proto::MatchServiceStopNotify* MatchServiceStopImplementNotify::release_msg() {
  // @@protoc_insertion_point(field_release:proto.MatchServiceStopImplementNotify.msg)
  
  ::proto::MatchServiceStopNotify* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void MatchServiceStopImplementNotify::set_allocated_msg(::proto::MatchServiceStopNotify* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MatchServiceStopImplementNotify.msg)
}

// -------------------------------------------------------------------

// ServerBlockPlayerMpNotify

// bool is_unlock = 1;
inline void ServerBlockPlayerMpNotify::clear_is_unlock() {
  is_unlock_ = false;
}
inline bool ServerBlockPlayerMpNotify::is_unlock() const {
  // @@protoc_insertion_point(field_get:proto.ServerBlockPlayerMpNotify.is_unlock)
  return is_unlock_;
}
inline void ServerBlockPlayerMpNotify::set_is_unlock(bool value) {
  
  is_unlock_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBlockPlayerMpNotify.is_unlock)
}

// uint32 end_time = 2;
inline void ServerBlockPlayerMpNotify::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 ServerBlockPlayerMpNotify::end_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerBlockPlayerMpNotify.end_time)
  return end_time_;
}
inline void ServerBlockPlayerMpNotify::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBlockPlayerMpNotify.end_time)
}

// -------------------------------------------------------------------

// ServerBlockPlayerChatNotify

// bool is_unlock = 1;
inline void ServerBlockPlayerChatNotify::clear_is_unlock() {
  is_unlock_ = false;
}
inline bool ServerBlockPlayerChatNotify::is_unlock() const {
  // @@protoc_insertion_point(field_get:proto.ServerBlockPlayerChatNotify.is_unlock)
  return is_unlock_;
}
inline void ServerBlockPlayerChatNotify::set_is_unlock(bool value) {
  
  is_unlock_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBlockPlayerChatNotify.is_unlock)
}

// uint32 end_time = 2;
inline void ServerBlockPlayerChatNotify::clear_end_time() {
  end_time_ = 0u;
}
inline ::google::protobuf::uint32 ServerBlockPlayerChatNotify::end_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerBlockPlayerChatNotify.end_time)
  return end_time_;
}
inline void ServerBlockPlayerChatNotify::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBlockPlayerChatNotify.end_time)
}

// -------------------------------------------------------------------

// ServerCheckSegmentCrcNotify

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fonly_2fcmd_5fmisc_2eserver_2eproto__INCLUDED
