// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/enum.server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_only/enum.server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {

namespace protobuf_server_5fonly_2fenum_2eserver_2eproto {


namespace {

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[23];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;
namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "server_only/enum.server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035server_only/enum.server.proto\022\005proto*\263"
      "3\n\nMysqlIndex\022\024\n\020MYSQL_INDEX_NONE\020\000\022\032\n\026M"
      "YSQL_INDEX_PLAYER_UID\020\001\022%\n!MYSQL_INDEX_P"
      "LAYER_ONLINE_ID_DATA\020\002\022)\n%MYSQL_INDEX_PL"
      "AYER_PSN_ONLINE_ID_DATA\020\003\022\035\n\031MYSQL_INDEX"
      "_PLAYER_DATA_0\020e\022\035\n\031MYSQL_INDEX_PLAYER_D"
      "ATA_1\020f\022\035\n\031MYSQL_INDEX_PLAYER_DATA_2\020g\022\035"
      "\n\031MYSQL_INDEX_PLAYER_DATA_3\020h\022\035\n\031MYSQL_I"
      "NDEX_PLAYER_DATA_4\020i\022\035\n\031MYSQL_INDEX_PLAY"
      "ER_DATA_5\020j\022\035\n\031MYSQL_INDEX_PLAYER_DATA_6"
      "\020k\022\035\n\031MYSQL_INDEX_PLAYER_DATA_7\020l\022\035\n\031MYS"
      "QL_INDEX_PLAYER_DATA_8\020m\022\035\n\031MYSQL_INDEX_"
      "PLAYER_DATA_9\020n\022\036\n\032MYSQL_INDEX_PLAYER_DA"
      "TA_10\020o\022\036\n\032MYSQL_INDEX_PLAYER_DATA_11\020p\022"
      "\036\n\032MYSQL_INDEX_PLAYER_DATA_12\020q\022\036\n\032MYSQL"
      "_INDEX_PLAYER_DATA_13\020r\022\036\n\032MYSQL_INDEX_P"
      "LAYER_DATA_14\020s\022\036\n\032MYSQL_INDEX_PLAYER_DA"
      "TA_15\020t\022\036\n\032MYSQL_INDEX_PLAYER_DATA_16\020u\022"
      "\036\n\032MYSQL_INDEX_PLAYER_DATA_17\020v\022\036\n\032MYSQL"
      "_INDEX_PLAYER_DATA_18\020w\022\036\n\032MYSQL_INDEX_P"
      "LAYER_DATA_19\020x\022\036\n\032MYSQL_INDEX_PLAYER_DA"
      "TA_20\020y\022\036\n\032MYSQL_INDEX_PLAYER_DATA_21\020z\022"
      "\036\n\032MYSQL_INDEX_PLAYER_DATA_22\020{\022\036\n\032MYSQL"
      "_INDEX_PLAYER_DATA_23\020|\022\036\n\032MYSQL_INDEX_P"
      "LAYER_DATA_24\020}\022\036\n\032MYSQL_INDEX_PLAYER_DA"
      "TA_25\020~\022\036\n\032MYSQL_INDEX_PLAYER_DATA_26\020\177\022"
      "\037\n\032MYSQL_INDEX_PLAYER_DATA_27\020\200\001\022\037\n\032MYSQ"
      "L_INDEX_PLAYER_DATA_28\020\201\001\022\037\n\032MYSQL_INDEX"
      "_PLAYER_DATA_29\020\202\001\022\037\n\032MYSQL_INDEX_PLAYER"
      "_DATA_30\020\203\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_3"
      "1\020\204\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_32\020\205\001\022\037\n"
      "\032MYSQL_INDEX_PLAYER_DATA_33\020\206\001\022\037\n\032MYSQL_"
      "INDEX_PLAYER_DATA_34\020\207\001\022\037\n\032MYSQL_INDEX_P"
      "LAYER_DATA_35\020\210\001\022\037\n\032MYSQL_INDEX_PLAYER_D"
      "ATA_36\020\211\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_37\020"
      "\212\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_38\020\213\001\022\037\n\032M"
      "YSQL_INDEX_PLAYER_DATA_39\020\214\001\022\037\n\032MYSQL_IN"
      "DEX_PLAYER_DATA_40\020\215\001\022\037\n\032MYSQL_INDEX_PLA"
      "YER_DATA_41\020\216\001\022\037\n\032MYSQL_INDEX_PLAYER_DAT"
      "A_42\020\217\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_43\020\220\001"
      "\022\037\n\032MYSQL_INDEX_PLAYER_DATA_44\020\221\001\022\037\n\032MYS"
      "QL_INDEX_PLAYER_DATA_45\020\222\001\022\037\n\032MYSQL_INDE"
      "X_PLAYER_DATA_46\020\223\001\022\037\n\032MYSQL_INDEX_PLAYE"
      "R_DATA_47\020\224\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_"
      "48\020\225\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_49\020\226\001\022\037"
      "\n\032MYSQL_INDEX_PLAYER_DATA_50\020\227\001\022\037\n\032MYSQL"
      "_INDEX_PLAYER_DATA_51\020\230\001\022\037\n\032MYSQL_INDEX_"
      "PLAYER_DATA_52\020\231\001\022\037\n\032MYSQL_INDEX_PLAYER_"
      "DATA_53\020\232\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_54"
      "\020\233\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_55\020\234\001\022\037\n\032"
      "MYSQL_INDEX_PLAYER_DATA_56\020\235\001\022\037\n\032MYSQL_I"
      "NDEX_PLAYER_DATA_57\020\236\001\022\037\n\032MYSQL_INDEX_PL"
      "AYER_DATA_58\020\237\001\022\037\n\032MYSQL_INDEX_PLAYER_DA"
      "TA_59\020\240\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_60\020\241"
      "\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_61\020\242\001\022\037\n\032MY"
      "SQL_INDEX_PLAYER_DATA_62\020\243\001\022\037\n\032MYSQL_IND"
      "EX_PLAYER_DATA_63\020\244\001\022\037\n\032MYSQL_INDEX_PLAY"
      "ER_DATA_64\020\245\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA"
      "_65\020\246\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_66\020\247\001\022"
      "\037\n\032MYSQL_INDEX_PLAYER_DATA_67\020\250\001\022\037\n\032MYSQ"
      "L_INDEX_PLAYER_DATA_68\020\251\001\022\037\n\032MYSQL_INDEX"
      "_PLAYER_DATA_69\020\252\001\022\037\n\032MYSQL_INDEX_PLAYER"
      "_DATA_70\020\253\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_7"
      "1\020\254\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_72\020\255\001\022\037\n"
      "\032MYSQL_INDEX_PLAYER_DATA_73\020\256\001\022\037\n\032MYSQL_"
      "INDEX_PLAYER_DATA_74\020\257\001\022\037\n\032MYSQL_INDEX_P"
      "LAYER_DATA_75\020\260\001\022\037\n\032MYSQL_INDEX_PLAYER_D"
      "ATA_76\020\261\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_77\020"
      "\262\001\022\037\n\032MYSQL_INDEX_PLAYER_DATA_78\020\263\001\022\037\n\032M"
      "YSQL_INDEX_PLAYER_DATA_79\020\264\001\022\033\n\026MYSQL_IN"
      "DEX_ORDER_DATA\020\321\017\022\035\n\030MYSQL_INDEX_CONFIG_"
      "LOCAL\020\351\007\022\036\n\031MYSQL_INDEX_CONFIG_GLOBAL\020\352\007"
      "\022\035\n\030MYSQL_INDEX_BLOCK_DATA_0\020\271\027\022\035\n\030MYSQL"
      "_INDEX_BLOCK_DATA_1\020\272\027\022\035\n\030MYSQL_INDEX_BL"
      "OCK_DATA_2\020\273\027\022\035\n\030MYSQL_INDEX_BLOCK_DATA_"
      "3\020\274\027\022\035\n\030MYSQL_INDEX_BLOCK_DATA_4\020\275\027\022\035\n\030M"
      "YSQL_INDEX_BLOCK_DATA_5\020\276\027\022\035\n\030MYSQL_INDE"
      "X_BLOCK_DATA_6\020\277\027\022\035\n\030MYSQL_INDEX_BLOCK_D"
      "ATA_7\020\300\027\022\035\n\030MYSQL_INDEX_BLOCK_DATA_8\020\301\027\022"
      "\035\n\030MYSQL_INDEX_BLOCK_DATA_9\020\302\027\022\036\n\031MYSQL_"
      "INDEX_BLOCK_DATA_10\020\303\027\022\036\n\031MYSQL_INDEX_BL"
      "OCK_DATA_11\020\304\027\022\036\n\031MYSQL_INDEX_BLOCK_DATA"
      "_12\020\305\027\022\036\n\031MYSQL_INDEX_BLOCK_DATA_13\020\306\027\022\036"
      "\n\031MYSQL_INDEX_BLOCK_DATA_14\020\307\027\022\036\n\031MYSQL_"
      "INDEX_BLOCK_DATA_15\020\310\027\022\036\n\031MYSQL_INDEX_BL"
      "OCK_DATA_16\020\311\027\022\036\n\031MYSQL_INDEX_BLOCK_DATA"
      "_17\020\312\027\022\036\n\031MYSQL_INDEX_BLOCK_DATA_18\020\313\027\022\036"
      "\n\031MYSQL_INDEX_BLOCK_DATA_19\020\314\027\022\036\n\031MYSQL_"
      "INDEX_BLOCK_DATA_20\020\315\027\022\036\n\031MYSQL_INDEX_BL"
      "OCK_DATA_21\020\316\027\022\036\n\031MYSQL_INDEX_BLOCK_DATA"
      "_22\020\317\027\022\036\n\031MYSQL_INDEX_BLOCK_DATA_23\020\320\027\022\036"
      "\n\031MYSQL_INDEX_BLOCK_DATA_24\020\321\027\022\036\n\031MYSQL_"
      "INDEX_BLOCK_DATA_25\020\322\027\022\036\n\031MYSQL_INDEX_BL"
      "OCK_DATA_26\020\323\027\022\036\n\031MYSQL_INDEX_BLOCK_DATA"
      "_27\020\324\027\022\036\n\031MYSQL_INDEX_BLOCK_DATA_28\020\325\027\022\036"
      "\n\031MYSQL_INDEX_BLOCK_DATA_29\020\326\027\022\036\n\031MYSQL_"
      "INDEX_BLOCK_DATA_30\020\327\027\022\036\n\031MYSQL_INDEX_BL"
      "OCK_DATA_31\020\330\027\022\036\n\031MYSQL_INDEX_BLOCK_DATA"
      "_32\020\331\027\022\036\n\031MYSQL_INDEX_BLOCK_DATA_33\020\332\027\022\036"
      "\n\031MYSQL_INDEX_BLOCK_DATA_34\020\333\027\022\036\n\031MYSQL_"
      "INDEX_BLOCK_DATA_35\020\334\027\022\036\n\031MYSQL_INDEX_BL"
      "OCK_DATA_36\020\335\027\022\036\n\031MYSQL_INDEX_BLOCK_DATA"
      "_37\020\336\027\022\036\n\031MYSQL_INDEX_BLOCK_DATA_38\020\337\027\022\036"
      "\n\031MYSQL_INDEX_BLOCK_DATA_39\020\340\027\022\034\n\027MYSQL_"
      "INDEX_HOME_DATA_0\020\241\037\022\034\n\027MYSQL_INDEX_HOME"
      "_DATA_1\020\242\037\022\034\n\027MYSQL_INDEX_HOME_DATA_2\020\243\037"
      "\022\034\n\027MYSQL_INDEX_HOME_DATA_3\020\244\037\022\034\n\027MYSQL_"
      "INDEX_HOME_DATA_4\020\245\037\022\034\n\027MYSQL_INDEX_HOME"
      "_DATA_5\020\246\037\022\034\n\027MYSQL_INDEX_HOME_DATA_6\020\247\037"
      "\022\034\n\027MYSQL_INDEX_HOME_DATA_7\020\250\037\022\034\n\027MYSQL_"
      "INDEX_HOME_DATA_8\020\251\037\022\034\n\027MYSQL_INDEX_HOME"
      "_DATA_9\020\252\037\022\035\n\030MYSQL_INDEX_HOME_DATA_10\020\253"
      "\037\022\035\n\030MYSQL_INDEX_HOME_DATA_11\020\254\037\022\035\n\030MYSQ"
      "L_INDEX_HOME_DATA_12\020\255\037\022\035\n\030MYSQL_INDEX_H"
      "OME_DATA_13\020\256\037\022\035\n\030MYSQL_INDEX_HOME_DATA_"
      "14\020\257\037\022\035\n\030MYSQL_INDEX_HOME_DATA_15\020\260\037\022\035\n\030"
      "MYSQL_INDEX_HOME_DATA_16\020\261\037\022\035\n\030MYSQL_IND"
      "EX_HOME_DATA_17\020\262\037\022\035\n\030MYSQL_INDEX_HOME_D"
      "ATA_18\020\263\037\022\035\n\030MYSQL_INDEX_HOME_DATA_19\020\264\037"
      "\022\035\n\030MYSQL_INDEX_HOME_DATA_20\020\265\037\022\035\n\030MYSQL"
      "_INDEX_HOME_DATA_21\020\266\037\022\035\n\030MYSQL_INDEX_HO"
      "ME_DATA_22\020\267\037\022\035\n\030MYSQL_INDEX_HOME_DATA_2"
      "3\020\270\037\022\035\n\030MYSQL_INDEX_HOME_DATA_24\020\271\037\022\035\n\030M"
      "YSQL_INDEX_HOME_DATA_25\020\272\037\022\035\n\030MYSQL_INDE"
      "X_HOME_DATA_26\020\273\037\022\035\n\030MYSQL_INDEX_HOME_DA"
      "TA_27\020\274\037\022\035\n\030MYSQL_INDEX_HOME_DATA_28\020\275\037\022"
      "\035\n\030MYSQL_INDEX_HOME_DATA_29\020\276\037\022\035\n\030MYSQL_"
      "INDEX_HOME_DATA_30\020\277\037\022\035\n\030MYSQL_INDEX_HOM"
      "E_DATA_31\020\300\037\022\035\n\030MYSQL_INDEX_HOME_DATA_32"
      "\020\301\037\022\035\n\030MYSQL_INDEX_HOME_DATA_33\020\302\037\022\035\n\030MY"
      "SQL_INDEX_HOME_DATA_34\020\303\037\022\035\n\030MYSQL_INDEX"
      "_HOME_DATA_35\020\304\037\022\035\n\030MYSQL_INDEX_HOME_DAT"
      "A_36\020\305\037\022\035\n\030MYSQL_INDEX_HOME_DATA_37\020\306\037\022\035"
      "\n\030MYSQL_INDEX_HOME_DATA_38\020\307\037\022\035\n\030MYSQL_I"
      "NDEX_HOME_DATA_39\020\310\037\022\035\n\030MYSQL_INDEX_HOME"
      "_DATA_40\020\311\037\022\035\n\030MYSQL_INDEX_HOME_DATA_41\020"
      "\312\037\022\035\n\030MYSQL_INDEX_HOME_DATA_42\020\313\037\022\035\n\030MYS"
      "QL_INDEX_HOME_DATA_43\020\314\037\022\035\n\030MYSQL_INDEX_"
      "HOME_DATA_44\020\315\037\022\035\n\030MYSQL_INDEX_HOME_DATA"
      "_45\020\316\037\022\035\n\030MYSQL_INDEX_HOME_DATA_46\020\317\037\022\035\n"
      "\030MYSQL_INDEX_HOME_DATA_47\020\320\037\022\035\n\030MYSQL_IN"
      "DEX_HOME_DATA_48\020\321\037\022\035\n\030MYSQL_INDEX_HOME_"
      "DATA_49\020\322\037\022\035\n\030MYSQL_INDEX_HOME_DATA_50\020\323"
      "\037\022\035\n\030MYSQL_INDEX_HOME_DATA_51\020\324\037\022\035\n\030MYSQ"
      "L_INDEX_HOME_DATA_52\020\325\037\022\035\n\030MYSQL_INDEX_H"
      "OME_DATA_53\020\326\037\022\035\n\030MYSQL_INDEX_HOME_DATA_"
      "54\020\327\037\022\035\n\030MYSQL_INDEX_HOME_DATA_55\020\330\037\022\035\n\030"
      "MYSQL_INDEX_HOME_DATA_56\020\331\037\022\035\n\030MYSQL_IND"
      "EX_HOME_DATA_57\020\332\037\022\035\n\030MYSQL_INDEX_HOME_D"
      "ATA_58\020\333\037\022\035\n\030MYSQL_INDEX_HOME_DATA_59\020\334\037"
      "\022\035\n\030MYSQL_INDEX_HOME_DATA_60\020\335\037\022\035\n\030MYSQL"
      "_INDEX_HOME_DATA_61\020\336\037\022\035\n\030MYSQL_INDEX_HO"
      "ME_DATA_62\020\337\037\022\035\n\030MYSQL_INDEX_HOME_DATA_6"
      "3\020\340\037\022\035\n\030MYSQL_INDEX_HOME_DATA_64\020\341\037\022\035\n\030M"
      "YSQL_INDEX_HOME_DATA_65\020\342\037\022\035\n\030MYSQL_INDE"
      "X_HOME_DATA_66\020\343\037\022\035\n\030MYSQL_INDEX_HOME_DA"
      "TA_67\020\344\037\022\035\n\030MYSQL_INDEX_HOME_DATA_68\020\345\037\022"
      "\035\n\030MYSQL_INDEX_HOME_DATA_69\020\346\037\022\035\n\030MYSQL_"
      "INDEX_HOME_DATA_70\020\347\037\022\035\n\030MYSQL_INDEX_HOM"
      "E_DATA_71\020\350\037\022\035\n\030MYSQL_INDEX_HOME_DATA_72"
      "\020\351\037\022\035\n\030MYSQL_INDEX_HOME_DATA_73\020\352\037\022\035\n\030MY"
      "SQL_INDEX_HOME_DATA_74\020\353\037\022\035\n\030MYSQL_INDEX"
      "_HOME_DATA_75\020\354\037\022\035\n\030MYSQL_INDEX_HOME_DAT"
      "A_76\020\355\037\022\035\n\030MYSQL_INDEX_HOME_DATA_77\020\356\037\022\035"
      "\n\030MYSQL_INDEX_HOME_DATA_78\020\357\037\022\035\n\030MYSQL_I"
      "NDEX_HOME_DATA_79\020\360\037*\251\005\n\nRedisIndex\022\024\n\020R"
      "EDIS_INDEX_NONE\020\000\022\035\n\031REDIS_INDEX_PLAYER_"
      "STATUS\020\001\022\024\n\020REDIS_INDEX_MAIL\020\002\022\033\n\027REDIS_"
      "INDEX_OFFLINE_MSG\020\003\022!\n\035REDIS_INDEX_PLAYE"
      "R_FRIEND_SET\020\004\022%\n!REDIS_INDEX_PLAYER_ASK"
      "_FRIEND_SET\020\005\022!\n\035REDIS_INDEX_PLAYER_BRIE"
      "F_DATA\020\006\022 \n\034REDIS_INDEX_PLAYER_BLACKLIST"
      "\020\007\022#\n\037REDIS_INDEX_PLAYER_PRIVATE_CHAT\020\010\022"
      "\"\n\036REDIS_INDEX_PLAYER_RECENT_CHAT\020\t\022*\n&R"
      "EDIS_INDEX_PLAYER_PRIVATE_CHAT_UNREAD\020\n\022"
      "&\n\"REDIS_INDEX_PLAYER_ACTIVITY_SOCIAL\020\013\022"
      "\033\n\027REDIS_INDEX_HOME_STATUS\020\014\022\037\n\033REDIS_IN"
      "DEX_HOME_BRIEF_DATA\020\r\022 \n\034REDIS_INDEX_HOM"
      "E_OFFLINE_MSG\020\016\022\032\n\026REDIS_INDEX_OFFLINE_O"
      "P\020\017\022\036\n\032REDIS_INDEX_CUSTOM_DUNGEON\020\020\022%\n!R"
      "EDIS_INDEX_PLAYER_PSN_FRIEND_SET\020\021\022$\n RE"
      "DIS_INDEX_PLAYER_PSN_BLACKLIST\020\022\022\036\n\032REDI"
      "S_INDEX_HOME_BLUEPRINT\020\023*\\\n\016EntityCompTy"
      "pe\022\024\n\020ENTITY_COMP_NONE\020\000\022\032\n\026ENTITY_COMP_"
      "ENV_ANIMAL\020\001\022\030\n\024ENTITY_COMP_ANIMATOR\020\002*\343"
      "\004\n\016GadgetCompType\022\024\n\020GADGET_COMP_NONE\020\000\022"
      "\030\n\024GADGET_COMP_INTERACT\020\004\022\024\n\020GADGET_COMP"
      "_GEAR\020\005\022\027\n\023GADGET_COMP_CRYSTAL\020\006\022\030\n\024GADG"
      "ET_COMP_PLATFORM\020\007\022\026\n\022GADGET_COMP_WEAPON"
      "\020\010\022\027\n\023GADGET_COMP_WORKTOP\020\n\022\024\n\020GADGET_CO"
      "MP_SEAL\020\013\022\026\n\022GADGET_COMP_CLIENT\020\014\022\027\n\023GAD"
      "GET_COMP_ABILITY\020\r\022\024\n\020GADGET_COMP_PLAY\020\020"
      "\022\030\n\024GADGET_COMP_OFFERING\020\021\022\034\n\030GADGET_COM"
      "P_MIRACLE_RING\020\022\022\032\n\026GADGET_COMP_FOUNDATI"
      "ON\020\023\022\027\n\023GADGET_COMP_VEHICLE\020\024\022\026\n\022GADGET_"
      "COMP_SCREEN\020\025\022\031\n\025GADGET_COMP_FISH_POOL\020\026"
      "\022\035\n\031GADGET_COMP_CUSTOM_GADGET\020\027\022)\n%GADGE"
      "T_COMP_ROGUELIKE_OPERATOR_GADGET\020\030\022\035\n\031GA"
      "DGET_COMP_WIDGET_GADGET\020\031\022\032\n\026GADGET_COMP"
      "_NIGHT_CROW\020\032\022%\n!GADGET_COMP_COIN_COLLEC"
      "T_OPERATOR\020\033*w\n\017MonsterCompType\022\025\n\021MONST"
      "ER_COMP_NONE\020\000\022\033\n\027MONSTER_COMP_ENV_ANIMA"
      "L\020\001\022\025\n\021MONSTER_COMP_FISH\020\002\022\031\n\025MONSTER_CO"
      "MP_FISHTANK\020\003*\265\002\n\rSceneCompType\022\023\n\017SCENE"
      "_COMP_NONE\020\000\022\031\n\025SCENE_COMP_ENV_ANIMAL\020\001\022"
      "\023\n\017SCENE_COMP_GRID\020\002\022\023\n\017SCENE_COMP_AREA\020"
      "\003\022\032\n\026SCENE_COMP_BLOCK_GROUP\020\004\022\023\n\017SCENE_C"
      "OMP_MISC\020\005\022\023\n\017SCENE_COMP_TEAM\020\006\022\030\n\024SCENE"
      "_COMP_ENCOUNTER\020\007\022\036\n\032SCENE_COMP_MULTISTA"
      "GE_PLAY\020\010\022\026\n\022SCENE_COMP_GALLERY\020\t\022\023\n\017SCE"
      "NE_COMP_HOME\020\n\022\035\n\031SCENE_COMP_TRANSFER_GU"
      "ARD\020\013*\237\016\n\016PlayerCompType\022\024\n\020PLAYER_COMP_"
      "NONE\020\000\022\025\n\021PLAYER_COMP_BASIC\020\001\022\026\n\022PLAYER_"
      "COMP_AVATAR\020\002\022\022\n\016PLAYER_COMP_GM\020\003\022\025\n\021PLA"
      "YER_COMP_QUEST\020\004\022\024\n\020PLAYER_COMP_TALK\020\005\022\024"
      "\n\020PLAYER_COMP_SHOP\020\006\022\024\n\020PLAYER_COMP_ITEM"
      "\020\007\022\027\n\023PLAYER_COMP_DUNGEON\020\010\022\025\n\021PLAYER_CO"
      "MP_SCENE\020\t\022\025\n\021PLAYER_COMP_EVENT\020\n\022\025\n\021PLA"
      "YER_COMP_BORED\020\013\022\022\n\016PLAYER_COMP_MP\020\014\022\024\n\020"
      "PLAYER_COMP_COOK\020\r\022\030\n\024PLAYER_COMP_COMPOU"
      "ND\020\016\022\024\n\020PLAYER_COMP_MAIL\020\017\022\025\n\021PLAYER_COM"
      "P_LOGIN\020\020\022\033\n\027PLAYER_COMP_OFFLINE_MSG\020\021\022\032"
      "\n\026PLAYER_COMP_DAILY_TASK\020\022\022\031\n\025PLAYER_COM"
      "P_RAND_TASK\020\023\022\025\n\021PLAYER_COMP_GACHA\020\024\022\026\n\022"
      "PLAYER_COMP_GIVING\020\025\022\025\n\021PLAYER_COMP_FORG"
      "E\020\026\022\035\n\031PLAYER_COMP_INVESTIGATION\020\027\022\030\n\024PL"
      "AYER_COMP_ACTIVITY\020\030\022\027\n\023PLAYER_COMP_WATC"
      "HER\020\031\022\026\n\022PLAYER_COMP_SOCIAL\020\032\022\025\n\021PLAYER_"
      "COMP_TOWER\020\033\022\027\n\023PLAYER_COMP_SIGN_IN\020\034\022\033\n"
      "\027PLAYER_COMP_BATTLE_PASS\020\035\022\027\n\023PLAYER_COM"
      "P_BLOSSOM\020\036\022\030\n\024PLAYER_COMP_RECHARGE\020\037\022\025\n"
      "\021PLAYER_COMP_MATCH\020 \022\027\n\023PLAYER_COMP_MP_P"
      "LAY\020!\022\034\n\030PLAYER_COMP_tRIAL_AVATAR\020\"\022\025\n\021P"
      "LAYER_COMP_CODEX\020#\022\033\n\027PLAYER_COMP_ACHIEV"
      "EMENT\020$\022\035\n\031PLAYER_COMP_PERSONAL_LINE\020%\022\035"
      "\n\031PLAYER_COMP_ABILITY_GROUP\020&\022\032\n\026PLAYER_"
      "COMP_REPUTATION\020\'\022\026\n\022PLAYER_COMP_WIDGET\020"
      "(\022\027\n\023PLAYER_COMP_HUNTING\020)\022\024\n\020PLAYER_COM"
      "P_COOP\020*\022\032\n\026PLAYER_COMP_SCENE_PLAY\020+\022\027\n\023"
      "PLAYER_COMP_COMBINE\020,\022\030\n\024PLAYER_COMP_OFF"
      "ERING\020-\022\027\n\023PLAYER_COMP_ROUTINE\020.\022\027\n\023PLAY"
      "ER_COMP_REUNION\020/\022\034\n\030PLAYER_COMP_MIRACLE"
      "_RING\0200\022\032\n\026PLAYER_COMP_MECHANICUS\0201\022\033\n\027P"
      "LAYER_COMP_OP_ACTIVITY\0202\022\025\n\021PLAYER_COMP_"
      "DRAFT\0203\022\027\n\023PLAYER_COMP_GALLERY\0204\022\035\n\031PLAY"
      "ER_COMP_REGION_SEARCH\0205\022\024\n\020PLAYER_COMP_H"
      "OME\0206\022\032\n\026PLAYER_COMP_OFFLINE_OP\0207\022\033\n\027PLA"
      "YER_COMP_H5_ACTIVITY\0208\022\032\n\026PLAYER_COMP_EX"
      "HIBITION\0209\022\027\n\023PLAYER_COMP_VEHICLE\020:\022\024\n\020P"
      "LAYER_COMP_LIVE\020;\022\032\n\026PLAYER_COMP_GROUP_L"
      "INK\020<\022\027\n\023PLAYER_COMP_FISHING\020=\022\031\n\025PLAYER"
      "_COMP_FIREWORKS\020>\022\024\n\020PLAYER_COMP_CITY\020\?\022"
      "\036\n\032PLAYER_COMP_CUSTOM_DUNGEON\020@\022\035\n\031PLAYE"
      "R_COMP_REGIONAL_PLAY\020A\022\030\n\024PLAYER_COMP_SH"
      "ARE_CD\020B\022\023\n\017PLAYER_COMP_UGC\020C\022\027\n\023PLAYER_"
      "COMP_POLYGON\020D\022\"\n\036PLAYER_COMP_ARANARA_CO"
      "LLECTION\020E\022\023\n\017PLAYER_COMP_GCG\020F*\267\001\n\016Avat"
      "arCompType\022\024\n\020AVATAR_COMP_NONE\020\000\022\025\n\021AVAT"
      "AR_COMP_EQUIP\020\001\022\025\n\021AVATAR_COMP_SKILL\020\002\022\024"
      "\n\020AVATAR_COMP_BUFF\020\003\022\026\n\022AVATAR_COMP_TALE"
      "NT\020\004\022\027\n\023AVATAR_COMP_FASHION\020\005\022\032\n\026AVATAR_"
      "COMP_EXTRA_PROP\020\006*\270\001\n\022AvatarSnapshotType"
      "\022\035\n\031AVATAR_SNAPSHOT_TYPE_NONE\020\000\022\'\n#AVATA"
      "R_SNAPSHOT_TYPE_ROGUE_ACTIVITY\020\001\022,\n(AVAT"
      "AR_SNAPSHOT_TYPE_MIST_TRIAL_ACTIVITY\020\002\022,"
      "\n(AVATAR_SNAPSHOT_TYPE_TEAM_CHAIN_ACTIVI"
      "TY\020\003*u\n\024FormalAvatarCompType\022\033\n\027FORMAL_A"
      "VATAR_COMP_NONE\020\000\022\035\n\031FORMAL_AVATAR_COMP_"
      "FETTER\020\001\022!\n\035FORMAL_AVATAR_COMP_EXPEDITIO"
      "N\020\002*\314\002\n\024PacketHeadExtKeyType\022\'\n#PACKET_H"
      "EAD_EXT_KEY_HTTP_SESSION_ID\020\000\022\"\n\036PACKET_"
      "HEAD_EXT_KEY_PLAYER_RTT\020\001\022#\n\037PACKET_HEAD"
      "_EXT_KEY_IS_CALLBACK\020\002\022/\n+PACKET_HEAD_EX"
      "T_KEY_WORD_FILTER_ACTION_TYPE\020\003\022/\n*PACKE"
      "T_HEAD_EXT_KEY_GATE_RECV_MS_TIMESTAMP\020\221N"
      "\022/\n*PACKET_HEAD_EXT_KEY_GAME_RECV_MS_TIM"
      "ESTAMP\020\222N\022/\n*PACKET_HEAD_EXT_KEY_GAME_SE"
      "ND_MS_TIMESTAMP\020\223N*Q\n\rMailAddOpType\022\024\n\020M"
      "AIL_ADD_OP_NONE\020\000\022\024\n\020MAIL_ADD_OP_GAME\020\001\022"
      "\024\n\020MAIL_ADD_OP_MUIP\020\002*\211\001\n\rMailDelOpType\022"
      "\024\n\020MAIL_DEL_OP_NONE\020\000\022\026\n\022MAIL_DEL_OP_CLI"
      "ENT\020\001\022\024\n\020MAIL_DEL_OP_GAME\020\002\022\024\n\020MAIL_DEL_"
      "OP_MUIP\020\003\022\036\n\032MAIL_DEL_OP_MUIP_BY_TICKET\020"
      "\004*\263\001\n\rMailGetOPType\022\024\n\020MAIL_GET_OP_NONE\020"
      "\000\022\026\n\022MAIL_GET_OP_CLIENT\020\001\022\037\n\033MAIL_GET_OP"
      "_TAKE_ATTACHMENT\020\002\022\024\n\020MAIL_GET_OP_MUIP\020\003"
      "\022\031\n\025MAIL_GET_OP_UNTREATED\020\004\022\"\n\036MAIL_GET_"
      "OP_CLIENT_MULTI_BATCH\020\005*b\n\013MailGetType\022\021"
      "\n\rMAIL_GET_NONE\020\000\022\022\n\016MAIL_GET_BY_ID\020\001\022\020\n"
      "\014MAIL_GET_ALL\020\002\022\032\n\026MAIL_GET_ALL_COLLECTE"
      "D\020\003*\253\001\n\020MailUpdateOpType\022\027\n\023MAIL_UPDATE_"
      "OP_NONE\020\000\022\034\n\030MAIL_UPDATE_OP_MARK_READ\020\001\022"
      "\"\n\036MAIL_UPDATE_OP_TAKE_ATTACHMENT\020\002\022\034\n\030M"
      "AIL_UPDATE_OP_STAR_MAIL\020\003\022\036\n\032MAIL_UPDATE"
      "_OP_UNSTAR_MAIL\020\004*\325\001\n\025MatchUnitRemoveOpT"
      "ype\022\035\n\031MATCH_UNIT_REMOVE_OP_NONE\020\000\022&\n\"MA"
      "TCH_UNIT_REMOVE_OP_PLAYER_CANCEL\020\001\022&\n\"MA"
      "TCH_UNIT_REMOVE_OP_PLAYER_LOGOUT\020\002\022$\n MA"
      "TCH_UNIT_REMOVE_OP_INTERRUPTED\020\003\022\'\n#MATC"
      "H_UNIT_REMOVE_OP_MP_UNAVAILABLE\020\004*[\n\rMat"
      "chIdentity\022\027\n\023MATCH_IDENTITY_NONE\020\000\022\027\n\023M"
      "ATCH_IDENTITY_HOST\020\001\022\030\n\024MATCH_IDENTITY_G"
      "UEST\020\002*g\n\016ServiceMaxLoad\022\031\n\025SERVICE_MAX_"
      "LOAD_NONE\020\000\022\032\n\025SERVICE_MAX_LOAD_GAME\020\220N\022"
      "\032\n\025SERVICE_MAX_LOAD_GATE\020\220N\032\002\020\001*\230\002\n\rAsyn"
      "cHttpType\022\026\n\022ASYNC_HTTP_DEFAULT\020\000\022#\n\037ASY"
      "NC_HTTP_FIRST_LOGIN_NICKNAME\020\001\022\032\n\026ASYNC_"
      "HTTP_SAFE_SERVER\020\002\022\032\n\026ASYNC_HTTP_HOME_VE"
      "RIFY\020\003\022%\n!ASYNC_HTTP_OUTPUT_CONTROL_MONI"
      "TOR\020\004\022\'\n#ASYNC_HTTP_NICKNAME_SIGNATURE_A"
      "UDIT\020\005\022\"\n\036ASYNC_HTTP_AVATAR_RENAME_AUDIT"
      "\020\006\022\036\n\032ASYNC_HTTP_QUERY_IP_REGION\020\007*\277\002\n\014H"
      "omeCompType\022\022\n\016HOME_COMP_NONE\020\000\022\023\n\017HOME_"
      "COMP_BASIC\020\001\022\023\n\017HOME_COMP_SCENE\020\002\022\031\n\025HOM"
      "E_COMP_OFFLINE_MSG\020\003\022\034\n\030HOME_COMP_FURNIT"
      "URE_MAKE\020\004\022\032\n\026HOME_COMP_LIMITED_SHOP\020\005\022\023"
      "\n\017HOME_COMP_PLANT\020\006\022\032\n\026HOME_COMP_FISH_FA"
      "RMING\020\007\022\036\n\032HOME_COMP_CUSTOM_FURNITURE\020\010\022"
      "\026\n\022HOME_PICTURE_FRAME\020\t\022\032\n\026HOME_COMP_GRO"
      "UP_RECORD\020\n\022\027\n\023HOME_COMP_BLUEPRINT\020\013*p\n\033"
      "SceneMultistagePlayCompType\022#\n\037SCENE_MUL"
      "TISTAGE_PLAY_COMP_NONE\020\000\022,\n(SCENE_MULTIS"
      "TAGE_PLAY_COMP_TOWER_DEFENSE\020\001*\253\023\n\021Featu"
      "reSwitchType\022\027\n\023FEATURE_SWITCH_NONE\020\000\022\031\n"
      "\025FEATURE_SWITCH_FRIEND\020\001\022\034\n\030FEATURE_SWIT"
      "CH_ASKFRINED\020\002\022\036\n\032FEATURE_SWITCH_TOWER_F"
      "LOOR\020\003\022\025\n\021FEATURE_SWITCH_MP\020\004\022\032\n\026FEATURE"
      "_SWITCH_BLOSSOM\020\005\022\036\n\032FEATURE_SWITCH_BATT"
      "LE_PASS\020\006\022\032\n\026FEATURE_SWITCH_DUNGEON\020\007\022 \n"
      "\034FEATURE_SWITCH_PUSH_PLATFORM\020\010\022\033\n\027FEATU"
      "RE_SWITCH_RECHARGE\020\t\022\027\n\023FEATURE_SWITCH_S"
      "HOP\020\n\022\035\n\031FEATURE_SWITCH_DAILY_TASK\020\013\022\034\n\030"
      "FEATURE_SWITCH_RAND_TASK\020\014\022\034\n\030FEATURE_SW"
      "ITCH_REWARD_ID\020\r\022\032\n\026FEATURE_SWITCH_DROP_"
      "ID\020\016\022\031\n\025FEATURE_SWITCH_GATHER\020\017\022\034\n\030FEATU"
      "RE_SWITCH_GAME_TIME\020\020\022\030\n\024FEATURE_SWITCH_"
      "FORGE\020\021\022\027\n\023FEATURE_SWITCH_COOK\020\022\022\032\n\026FEAT"
      "URE_SWITCH_COMBINE\020\023\022\031\n\025FEATURE_SWITCH_W"
      "EAPON\020\024\022\034\n\030FEATURE_SWITCH_RELIQUARY\020\025\022\027\n"
      "\023FEATURE_SWITCH_ITEM\020\026\022\031\n\025FEATURE_SWITCH"
      "_AVATAR\020\027\022\"\n\036FEATURE_SWITCH_CITY_REPUTAT"
      "ION\020\030\022\032\n\026FEATURE_SWITCH_MP_PLAY\020\031\022\036\n\032FEA"
      "TURE_SWITCH_SIGHT_GROUP\020\032\022#\n\037FEATURE_SWI"
      "TCH_NOTIFY_EYE_POINT\020\033\022#\n\037FEATURE_SWITCH"
      "_EYE_POINT_AS_EYE\020\034\022$\n FEATURE_SWITCH_GR"
      "OUP_VISION_TYPE\020\035\022\033\n\027FEATURE_SWITCH_OFFE"
      "RING\020\036\022\032\n\026FEATURE_SWITCH_ROUTINE\020\037\022\037\n\033FE"
      "ATURE_SWITCH_ANCHOR_POINT\020 \022 \n\034FEATURE_S"
      "WITCH_ACTIVITY_SALE\020!\022\035\n\031FEATURE_SWITCH_"
      "MECHANICUS\020\"\022$\n FEATURE_SWITCH_MECHANICU"
      "S_PUNISH\020#\022%\n!FEATURE_SWITCH_WORLD_LEVEL"
      "_ADJUST\020$\022#\n\037FEATURE_SWITCH_ENTER_HOME_W"
      "ORLD\020%\022\032\n\026FEATURE_SWITCH_HOME_MP\020&\022!\n\035FE"
      "ATURE_SWITCH_HOME_EDIT_MODE\020(\022\036\n\032FEATURE"
      "_SWITCH_HOME_MODULE\020)\022&\n\"FEATURE_SWITCH_"
      "HOME_FURNITURE_MAKE\020*\022$\n FEATURE_SWITCH_"
      "HOME_LIMITED_SHOP\020+\022\"\n\036FEATURE_SWITCH_GA"
      "DGET_INTERACT\020,\022*\n&FEATURE_SWITCH_REUNIO"
      "N_CLOSE_WITH_MARK\020-\022(\n$FEATURE_SWITCH_RA"
      "NDOM_QUEST_TEMPLATE\020.\022\'\n#FEATURE_SWITCH_"
      "MINORS_RECHARGE_HINT\020/\022(\n$FEATURE_SWITCH"
      "_MINORS_GACHA_RESTRICT\0200\022!\n\035FEATURE_SWIT"
      "CH_CUSTOM_DUNGEON\0201\022\"\n\036FEATURE_SWITCH_MI"
      "NORS_REGISTER\0202\022\036\n\032FEATURE_SWITCH_MATCH_"
      "LIMIT\0203\022$\n FEATURE_SWITCH_CUSTOM_DUNGEON"
      "_ID\0204\022!\n\035FEATURE_SWITCH_NICKNAME_AUDIT\0205"
      "\022\"\n\036FEATURE_SWITCH_SIGNATURE_AUDIT\0206\022&\n\""
      "FEATURE_SWITCH_MATCH_RULE_OPTIMIZE\0207\022&\n\""
      "FEATURE_SWITCH_RELIQUARY_GUARANTEE\0208\022-\n)"
      "FEATURE_SWITCH_SECURITY_LIBRARY_MD5_CHEC"
      "K\0209\022\026\n\022FEATURE_SWITCH_UGC\020:\022\036\n\032FEATURE_S"
      "WITCH_UGC_PUBLISH\020;\022,\n(FEATURE_SWITCH_HO"
      "ME_AUDIT_BEFORE_RELEASE\020<\022&\n!FEATURE_SWI"
      "TCH_SAFE_SERVER_NOTIFY\020\361\025\022*\n%FEATURE_SWI"
      "TCH_GENERAL_GACHA_RESTRICT\020\235\030\022\"\n\035FEATURE"
      "_SWITCH_HOME_BLUEPRINT\020\201\031\022%\n FEATURE_SWI"
      "TCH_ANTI_OFFLINE_KICK\020\202\031\022*\n%FEATURE_SWIT"
      "CH_ENVIRONMENT_ERROR_KICK\020\203\031\022-\n(FEATURE_"
      "SWITCH_QUEST_AVATAR_RENAME_AUDIT\020\345\031\022,\n\'F"
      "EATURE_SWITCH_ITEM_AVATAR_RENAME_AUDIT\020\346"
      "\031\022\037\n\032FEATURE_SWITCH_GCG_PREVIEW\020\347\031\022\035\n\030FE"
      "ATURE_SWITCH_GCG_MATCH\020\350\031\022\033\n\026FEATURE_SWI"
      "TCH_GCG_PVP\020\351\031\022\033\n\026FEATURE_SWITCH_GCG_PVE"
      "\020\352\031\022 \n\033FEATURE_SWITCH_GCG_BAN_CARD\020\353\031\022\035\n"
      "\030FEATURE_SWITCH_IP_REGION\020\354\031B(Z&github.c"
      "om/teyvat-helper/hk4e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 15438);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_only/enum.server.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_server_5fonly_2fenum_2eserver_2eproto

const ::google::protobuf::EnumDescriptor* MysqlIndex_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[0];
}
bool MysqlIndex_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
    case 140:
    case 141:
    case 142:
    case 143:
    case 144:
    case 145:
    case 146:
    case 147:
    case 148:
    case 149:
    case 150:
    case 151:
    case 152:
    case 153:
    case 154:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 166:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 1001:
    case 1002:
    case 2001:
    case 3001:
    case 3002:
    case 3003:
    case 3004:
    case 3005:
    case 3006:
    case 3007:
    case 3008:
    case 3009:
    case 3010:
    case 3011:
    case 3012:
    case 3013:
    case 3014:
    case 3015:
    case 3016:
    case 3017:
    case 3018:
    case 3019:
    case 3020:
    case 3021:
    case 3022:
    case 3023:
    case 3024:
    case 3025:
    case 3026:
    case 3027:
    case 3028:
    case 3029:
    case 3030:
    case 3031:
    case 3032:
    case 3033:
    case 3034:
    case 3035:
    case 3036:
    case 3037:
    case 3038:
    case 3039:
    case 3040:
    case 4001:
    case 4002:
    case 4003:
    case 4004:
    case 4005:
    case 4006:
    case 4007:
    case 4008:
    case 4009:
    case 4010:
    case 4011:
    case 4012:
    case 4013:
    case 4014:
    case 4015:
    case 4016:
    case 4017:
    case 4018:
    case 4019:
    case 4020:
    case 4021:
    case 4022:
    case 4023:
    case 4024:
    case 4025:
    case 4026:
    case 4027:
    case 4028:
    case 4029:
    case 4030:
    case 4031:
    case 4032:
    case 4033:
    case 4034:
    case 4035:
    case 4036:
    case 4037:
    case 4038:
    case 4039:
    case 4040:
    case 4041:
    case 4042:
    case 4043:
    case 4044:
    case 4045:
    case 4046:
    case 4047:
    case 4048:
    case 4049:
    case 4050:
    case 4051:
    case 4052:
    case 4053:
    case 4054:
    case 4055:
    case 4056:
    case 4057:
    case 4058:
    case 4059:
    case 4060:
    case 4061:
    case 4062:
    case 4063:
    case 4064:
    case 4065:
    case 4066:
    case 4067:
    case 4068:
    case 4069:
    case 4070:
    case 4071:
    case 4072:
    case 4073:
    case 4074:
    case 4075:
    case 4076:
    case 4077:
    case 4078:
    case 4079:
    case 4080:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RedisIndex_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[1];
}
bool RedisIndex_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EntityCompType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[2];
}
bool EntityCompType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GadgetCompType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[3];
}
bool GadgetCompType_IsValid(int value) {
  switch (value) {
    case 0:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 10:
    case 11:
    case 12:
    case 13:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MonsterCompType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[4];
}
bool MonsterCompType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SceneCompType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[5];
}
bool SceneCompType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlayerCompType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[6];
}
bool PlayerCompType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AvatarCompType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[7];
}
bool AvatarCompType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AvatarSnapshotType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[8];
}
bool AvatarSnapshotType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FormalAvatarCompType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[9];
}
bool FormalAvatarCompType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PacketHeadExtKeyType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[10];
}
bool PacketHeadExtKeyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 10001:
    case 10002:
    case 10003:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MailAddOpType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[11];
}
bool MailAddOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MailDelOpType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[12];
}
bool MailDelOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MailGetOPType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[13];
}
bool MailGetOPType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MailGetType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[14];
}
bool MailGetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MailUpdateOpType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[15];
}
bool MailUpdateOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MatchUnitRemoveOpType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[16];
}
bool MatchUnitRemoveOpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MatchIdentity_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[17];
}
bool MatchIdentity_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ServiceMaxLoad_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[18];
}
bool ServiceMaxLoad_IsValid(int value) {
  switch (value) {
    case 0:
    case 10000:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* AsyncHttpType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[19];
}
bool AsyncHttpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HomeCompType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[20];
}
bool HomeCompType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SceneMultistagePlayCompType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[21];
}
bool SceneMultistagePlayCompType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FeatureSwitchType_descriptor() {
  protobuf_server_5fonly_2fenum_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fenum_2eserver_2eproto::file_level_enum_descriptors[22];
}
bool FeatureSwitchType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 2801:
    case 3101:
    case 3201:
    case 3202:
    case 3203:
    case 3301:
    case 3302:
    case 3303:
    case 3304:
    case 3305:
    case 3306:
    case 3307:
    case 3308:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
