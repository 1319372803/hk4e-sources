// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_mail.server.proto

#ifndef PROTOBUF_server_5fonly_2fcmd_5fmail_2eserver_2eproto__INCLUDED
#define PROTOBUF_server_5fonly_2fcmd_5fmail_2eserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "server_only/bin_common.server.pb.h"
#include "server_only/redis_data.pb.h"
#include "server_only/enum.server.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class AddRedisMailReq;
class AddRedisMailReqDefaultTypeInternal;
extern AddRedisMailReqDefaultTypeInternal _AddRedisMailReq_default_instance_;
class AddRedisMailRsp;
class AddRedisMailRspDefaultTypeInternal;
extern AddRedisMailRspDefaultTypeInternal _AddRedisMailRsp_default_instance_;
class CleanRedisMailNotify;
class CleanRedisMailNotifyDefaultTypeInternal;
extern CleanRedisMailNotifyDefaultTypeInternal _CleanRedisMailNotify_default_instance_;
class ClearOfflineMsgNotify;
class ClearOfflineMsgNotifyDefaultTypeInternal;
extern ClearOfflineMsgNotifyDefaultTypeInternal _ClearOfflineMsgNotify_default_instance_;
class ClearUpRedisMailNotify;
class ClearUpRedisMailNotifyDefaultTypeInternal;
extern ClearUpRedisMailNotifyDefaultTypeInternal _ClearUpRedisMailNotify_default_instance_;
class DelRedisMailReq;
class DelRedisMailReqDefaultTypeInternal;
extern DelRedisMailReqDefaultTypeInternal _DelRedisMailReq_default_instance_;
class DelRedisMailRsp;
class DelRedisMailRspDefaultTypeInternal;
extern DelRedisMailRspDefaultTypeInternal _DelRedisMailRsp_default_instance_;
class GetOfflineMsgReq;
class GetOfflineMsgReqDefaultTypeInternal;
extern GetOfflineMsgReqDefaultTypeInternal _GetOfflineMsgReq_default_instance_;
class GetOfflineMsgRsp;
class GetOfflineMsgRspDefaultTypeInternal;
extern GetOfflineMsgRspDefaultTypeInternal _GetOfflineMsgRsp_default_instance_;
class GetRedisMailReq;
class GetRedisMailReqDefaultTypeInternal;
extern GetRedisMailReqDefaultTypeInternal _GetRedisMailReq_default_instance_;
class GetRedisMailRsp;
class GetRedisMailRspDefaultTypeInternal;
extern GetRedisMailRspDefaultTypeInternal _GetRedisMailRsp_default_instance_;
class GetRedisMailTransactionStatusReq;
class GetRedisMailTransactionStatusReqDefaultTypeInternal;
extern GetRedisMailTransactionStatusReqDefaultTypeInternal _GetRedisMailTransactionStatusReq_default_instance_;
class GetRedisMailTransactionStatusRsp;
class GetRedisMailTransactionStatusRspDefaultTypeInternal;
extern GetRedisMailTransactionStatusRspDefaultTypeInternal _GetRedisMailTransactionStatusRsp_default_instance_;
class GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry;
class GetRedisMailTransactionStatusRsp_TransactionStatusMapEntryDefaultTypeInternal;
extern GetRedisMailTransactionStatusRsp_TransactionStatusMapEntryDefaultTypeInternal _GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry_default_instance_;
class NewOfflineMsgNotify;
class NewOfflineMsgNotifyDefaultTypeInternal;
extern NewOfflineMsgNotifyDefaultTypeInternal _NewOfflineMsgNotify_default_instance_;
class RedisMailChangeNotify;
class RedisMailChangeNotifyDefaultTypeInternal;
extern RedisMailChangeNotifyDefaultTypeInternal _RedisMailChangeNotify_default_instance_;
class RemoveOfflineMsgNotify;
class RemoveOfflineMsgNotifyDefaultTypeInternal;
extern RemoveOfflineMsgNotifyDefaultTypeInternal _RemoveOfflineMsgNotify_default_instance_;
class ResendRedisMailReq;
class ResendRedisMailReqDefaultTypeInternal;
extern ResendRedisMailReqDefaultTypeInternal _ResendRedisMailReq_default_instance_;
class ResendRedisMailReq_MailBinMapEntry;
class ResendRedisMailReq_MailBinMapEntryDefaultTypeInternal;
extern ResendRedisMailReq_MailBinMapEntryDefaultTypeInternal _ResendRedisMailReq_MailBinMapEntry_default_instance_;
class ResendRedisMailRsp;
class ResendRedisMailRspDefaultTypeInternal;
extern ResendRedisMailRspDefaultTypeInternal _ResendRedisMailRsp_default_instance_;
class ResendRedisMailRsp_ResendStatusMapEntry;
class ResendRedisMailRsp_ResendStatusMapEntryDefaultTypeInternal;
extern ResendRedisMailRsp_ResendStatusMapEntryDefaultTypeInternal _ResendRedisMailRsp_ResendStatusMapEntry_default_instance_;
class SendOfflineMsgReq;
class SendOfflineMsgReqDefaultTypeInternal;
extern SendOfflineMsgReqDefaultTypeInternal _SendOfflineMsgReq_default_instance_;
class SendOfflineMsgRsp;
class SendOfflineMsgRspDefaultTypeInternal;
extern SendOfflineMsgRspDefaultTypeInternal _SendOfflineMsgRsp_default_instance_;
class UpdateRedisMailReq;
class UpdateRedisMailReqDefaultTypeInternal;
extern UpdateRedisMailReqDefaultTypeInternal _UpdateRedisMailReq_default_instance_;
class UpdateRedisMailRsp;
class UpdateRedisMailRspDefaultTypeInternal;
extern UpdateRedisMailRspDefaultTypeInternal _UpdateRedisMailRsp_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto

// ===================================================================

class AddRedisMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddRedisMailReq) */ {
 public:
  AddRedisMailReq();
  virtual ~AddRedisMailReq();

  AddRedisMailReq(const AddRedisMailReq& from);

  inline AddRedisMailReq& operator=(const AddRedisMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddRedisMailReq(AddRedisMailReq&& from) noexcept
    : AddRedisMailReq() {
    *this = ::std::move(from);
  }

  inline AddRedisMailReq& operator=(AddRedisMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRedisMailReq& default_instance();

  static inline const AddRedisMailReq* internal_default_instance() {
    return reinterpret_cast<const AddRedisMailReq*>(
               &_AddRedisMailReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AddRedisMailReq* other);
  friend void swap(AddRedisMailReq& a, AddRedisMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddRedisMailReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRedisMailReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRedisMailReq& from);
  void MergeFrom(const AddRedisMailReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRedisMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ticket = 3;
  void clear_ticket();
  static const int kTicketFieldNumber = 3;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // string transaction = 4;
  void clear_transaction();
  static const int kTransactionFieldNumber = 4;
  const ::std::string& transaction() const;
  void set_transaction(const ::std::string& value);
  #if LANG_CXX11
  void set_transaction(::std::string&& value);
  #endif
  void set_transaction(const char* value);
  void set_transaction(const char* value, size_t size);
  ::std::string* mutable_transaction();
  ::std::string* release_transaction();
  void set_allocated_transaction(::std::string* transaction);

  // .proto.MailBin mail_bin = 2;
  bool has_mail_bin() const;
  void clear_mail_bin();
  static const int kMailBinFieldNumber = 2;
  const ::proto::MailBin& mail_bin() const;
  ::proto::MailBin* mutable_mail_bin();
  ::proto::MailBin* release_mail_bin();
  void set_allocated_mail_bin(::proto::MailBin* mail_bin);

  // .proto.MailAddOpType op_type = 1;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  ::proto::MailAddOpType op_type() const;
  void set_op_type(::proto::MailAddOpType value);

  // @@protoc_insertion_point(class_scope:proto.AddRedisMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::google::protobuf::internal::ArenaStringPtr transaction_;
  ::proto::MailBin* mail_bin_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRedisMailRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddRedisMailRsp) */ {
 public:
  AddRedisMailRsp();
  virtual ~AddRedisMailRsp();

  AddRedisMailRsp(const AddRedisMailRsp& from);

  inline AddRedisMailRsp& operator=(const AddRedisMailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddRedisMailRsp(AddRedisMailRsp&& from) noexcept
    : AddRedisMailRsp() {
    *this = ::std::move(from);
  }

  inline AddRedisMailRsp& operator=(AddRedisMailRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRedisMailRsp& default_instance();

  static inline const AddRedisMailRsp* internal_default_instance() {
    return reinterpret_cast<const AddRedisMailRsp*>(
               &_AddRedisMailRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AddRedisMailRsp* other);
  friend void swap(AddRedisMailRsp& a, AddRedisMailRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddRedisMailRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRedisMailRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRedisMailRsp& from);
  void MergeFrom(const AddRedisMailRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRedisMailRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ticket = 3;
  void clear_ticket();
  static const int kTicketFieldNumber = 3;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // string transaction = 4;
  void clear_transaction();
  static const int kTransactionFieldNumber = 4;
  const ::std::string& transaction() const;
  void set_transaction(const ::std::string& value);
  #if LANG_CXX11
  void set_transaction(::std::string&& value);
  #endif
  void set_transaction(const char* value);
  void set_transaction(const char* value, size_t size);
  ::std::string* mutable_transaction();
  ::std::string* release_transaction();
  void set_allocated_transaction(::std::string* transaction);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.MailAddOpType op_type = 2;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 2;
  ::proto::MailAddOpType op_type() const;
  void set_op_type(::proto::MailAddOpType value);

  // @@protoc_insertion_point(class_scope:proto.AddRedisMailRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::google::protobuf::internal::ArenaStringPtr transaction_;
  ::google::protobuf::int32 retcode_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelRedisMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelRedisMailReq) */ {
 public:
  DelRedisMailReq();
  virtual ~DelRedisMailReq();

  DelRedisMailReq(const DelRedisMailReq& from);

  inline DelRedisMailReq& operator=(const DelRedisMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelRedisMailReq(DelRedisMailReq&& from) noexcept
    : DelRedisMailReq() {
    *this = ::std::move(from);
  }

  inline DelRedisMailReq& operator=(DelRedisMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelRedisMailReq& default_instance();

  static inline const DelRedisMailReq* internal_default_instance() {
    return reinterpret_cast<const DelRedisMailReq*>(
               &_DelRedisMailReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DelRedisMailReq* other);
  friend void swap(DelRedisMailReq& a, DelRedisMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelRedisMailReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DelRedisMailReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelRedisMailReq& from);
  void MergeFrom(const DelRedisMailReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelRedisMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mail_id_list = 2;
  int mail_id_list_size() const;
  void clear_mail_id_list();
  static const int kMailIdListFieldNumber = 2;
  ::google::protobuf::uint32 mail_id_list(int index) const;
  void set_mail_id_list(int index, ::google::protobuf::uint32 value);
  void add_mail_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mail_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mail_id_list();

  // repeated string ticket_list = 3;
  int ticket_list_size() const;
  void clear_ticket_list();
  static const int kTicketListFieldNumber = 3;
  const ::std::string& ticket_list(int index) const;
  ::std::string* mutable_ticket_list(int index);
  void set_ticket_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_ticket_list(int index, ::std::string&& value);
  #endif
  void set_ticket_list(int index, const char* value);
  void set_ticket_list(int index, const char* value, size_t size);
  ::std::string* add_ticket_list();
  void add_ticket_list(const ::std::string& value);
  #if LANG_CXX11
  void add_ticket_list(::std::string&& value);
  #endif
  void add_ticket_list(const char* value);
  void add_ticket_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& ticket_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_ticket_list();

  // .proto.MailDelOpType op_type = 1;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  ::proto::MailDelOpType op_type() const;
  void set_op_type(::proto::MailDelOpType value);

  // @@protoc_insertion_point(class_scope:proto.DelRedisMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mail_id_list_;
  mutable int _mail_id_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> ticket_list_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelRedisMailRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelRedisMailRsp) */ {
 public:
  DelRedisMailRsp();
  virtual ~DelRedisMailRsp();

  DelRedisMailRsp(const DelRedisMailRsp& from);

  inline DelRedisMailRsp& operator=(const DelRedisMailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelRedisMailRsp(DelRedisMailRsp&& from) noexcept
    : DelRedisMailRsp() {
    *this = ::std::move(from);
  }

  inline DelRedisMailRsp& operator=(DelRedisMailRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelRedisMailRsp& default_instance();

  static inline const DelRedisMailRsp* internal_default_instance() {
    return reinterpret_cast<const DelRedisMailRsp*>(
               &_DelRedisMailRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DelRedisMailRsp* other);
  friend void swap(DelRedisMailRsp& a, DelRedisMailRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelRedisMailRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelRedisMailRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelRedisMailRsp& from);
  void MergeFrom(const DelRedisMailRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelRedisMailRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mail_id_list = 3;
  int mail_id_list_size() const;
  void clear_mail_id_list();
  static const int kMailIdListFieldNumber = 3;
  ::google::protobuf::uint32 mail_id_list(int index) const;
  void set_mail_id_list(int index, ::google::protobuf::uint32 value);
  void add_mail_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mail_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mail_id_list();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.MailDelOpType op_type = 2;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 2;
  ::proto::MailDelOpType op_type() const;
  void set_op_type(::proto::MailDelOpType value);

  // @@protoc_insertion_point(class_scope:proto.DelRedisMailRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mail_id_list_;
  mutable int _mail_id_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRedisMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetRedisMailReq) */ {
 public:
  GetRedisMailReq();
  virtual ~GetRedisMailReq();

  GetRedisMailReq(const GetRedisMailReq& from);

  inline GetRedisMailReq& operator=(const GetRedisMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRedisMailReq(GetRedisMailReq&& from) noexcept
    : GetRedisMailReq() {
    *this = ::std::move(from);
  }

  inline GetRedisMailReq& operator=(GetRedisMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRedisMailReq& default_instance();

  static inline const GetRedisMailReq* internal_default_instance() {
    return reinterpret_cast<const GetRedisMailReq*>(
               &_GetRedisMailReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(GetRedisMailReq* other);
  friend void swap(GetRedisMailReq& a, GetRedisMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRedisMailReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRedisMailReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRedisMailReq& from);
  void MergeFrom(const GetRedisMailReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRedisMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mail_id_list = 3;
  int mail_id_list_size() const;
  void clear_mail_id_list();
  static const int kMailIdListFieldNumber = 3;
  ::google::protobuf::uint32 mail_id_list(int index) const;
  void set_mail_id_list(int index, ::google::protobuf::uint32 value);
  void add_mail_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mail_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mail_id_list();

  // .proto.MailGetOPType op_type = 1;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  ::proto::MailGetOPType op_type() const;
  void set_op_type(::proto::MailGetOPType value);

  // .proto.MailGetType get_type = 2;
  void clear_get_type();
  static const int kGetTypeFieldNumber = 2;
  ::proto::MailGetType get_type() const;
  void set_get_type(::proto::MailGetType value);

  // bool is_collectible_mail_transfered = 4;
  void clear_is_collectible_mail_transfered();
  static const int kIsCollectibleMailTransferedFieldNumber = 4;
  bool is_collectible_mail_transfered() const;
  void set_is_collectible_mail_transfered(bool value);

  // @@protoc_insertion_point(class_scope:proto.GetRedisMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mail_id_list_;
  mutable int _mail_id_list_cached_byte_size_;
  int op_type_;
  int get_type_;
  bool is_collectible_mail_transfered_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRedisMailRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetRedisMailRsp) */ {
 public:
  GetRedisMailRsp();
  virtual ~GetRedisMailRsp();

  GetRedisMailRsp(const GetRedisMailRsp& from);

  inline GetRedisMailRsp& operator=(const GetRedisMailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRedisMailRsp(GetRedisMailRsp&& from) noexcept
    : GetRedisMailRsp() {
    *this = ::std::move(from);
  }

  inline GetRedisMailRsp& operator=(GetRedisMailRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRedisMailRsp& default_instance();

  static inline const GetRedisMailRsp* internal_default_instance() {
    return reinterpret_cast<const GetRedisMailRsp*>(
               &_GetRedisMailRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(GetRedisMailRsp* other);
  friend void swap(GetRedisMailRsp& a, GetRedisMailRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRedisMailRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRedisMailRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRedisMailRsp& from);
  void MergeFrom(const GetRedisMailRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRedisMailRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes mail_str_list = 2;
  int mail_str_list_size() const;
  void clear_mail_str_list();
  static const int kMailStrListFieldNumber = 2;
  const ::std::string& mail_str_list(int index) const;
  ::std::string* mutable_mail_str_list(int index);
  void set_mail_str_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_mail_str_list(int index, ::std::string&& value);
  #endif
  void set_mail_str_list(int index, const char* value);
  void set_mail_str_list(int index, const void* value, size_t size);
  ::std::string* add_mail_str_list();
  void add_mail_str_list(const ::std::string& value);
  #if LANG_CXX11
  void add_mail_str_list(::std::string&& value);
  #endif
  void add_mail_str_list(const char* value);
  void add_mail_str_list(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& mail_str_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_mail_str_list();

  // string transaction = 7;
  void clear_transaction();
  static const int kTransactionFieldNumber = 7;
  const ::std::string& transaction() const;
  void set_transaction(const ::std::string& value);
  #if LANG_CXX11
  void set_transaction(::std::string&& value);
  #endif
  void set_transaction(const char* value);
  void set_transaction(const char* value, size_t size);
  ::std::string* mutable_transaction();
  ::std::string* release_transaction();
  void set_allocated_transaction(::std::string* transaction);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.MailGetOPType op_type = 3;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 3;
  ::proto::MailGetOPType op_type() const;
  void set_op_type(::proto::MailGetOPType value);

  // .proto.MailGetType get_type = 5;
  void clear_get_type();
  static const int kGetTypeFieldNumber = 5;
  ::proto::MailGetType get_type() const;
  void set_get_type(::proto::MailGetType value);

  // bool is_truncated = 4;
  void clear_is_truncated();
  static const int kIsTruncatedFieldNumber = 4;
  bool is_truncated() const;
  void set_is_truncated(bool value);

  // bool is_collectible_mail_transfered = 6;
  void clear_is_collectible_mail_transfered();
  static const int kIsCollectibleMailTransferedFieldNumber = 6;
  bool is_collectible_mail_transfered() const;
  void set_is_collectible_mail_transfered(bool value);

  // uint32 page_index = 8;
  void clear_page_index();
  static const int kPageIndexFieldNumber = 8;
  ::google::protobuf::uint32 page_index() const;
  void set_page_index(::google::protobuf::uint32 value);

  // uint32 total_page_count = 9;
  void clear_total_page_count();
  static const int kTotalPageCountFieldNumber = 9;
  ::google::protobuf::uint32 total_page_count() const;
  void set_total_page_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GetRedisMailRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> mail_str_list_;
  ::google::protobuf::internal::ArenaStringPtr transaction_;
  ::google::protobuf::int32 retcode_;
  int op_type_;
  int get_type_;
  bool is_truncated_;
  bool is_collectible_mail_transfered_;
  ::google::protobuf::uint32 page_index_;
  ::google::protobuf::uint32 total_page_count_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RedisMailChangeNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RedisMailChangeNotify) */ {
 public:
  RedisMailChangeNotify();
  virtual ~RedisMailChangeNotify();

  RedisMailChangeNotify(const RedisMailChangeNotify& from);

  inline RedisMailChangeNotify& operator=(const RedisMailChangeNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RedisMailChangeNotify(RedisMailChangeNotify&& from) noexcept
    : RedisMailChangeNotify() {
    *this = ::std::move(from);
  }

  inline RedisMailChangeNotify& operator=(RedisMailChangeNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RedisMailChangeNotify& default_instance();

  static inline const RedisMailChangeNotify* internal_default_instance() {
    return reinterpret_cast<const RedisMailChangeNotify*>(
               &_RedisMailChangeNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(RedisMailChangeNotify* other);
  friend void swap(RedisMailChangeNotify& a, RedisMailChangeNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RedisMailChangeNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RedisMailChangeNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RedisMailChangeNotify& from);
  void MergeFrom(const RedisMailChangeNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RedisMailChangeNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.MailRedisData update_mail_list = 1;
  int update_mail_list_size() const;
  void clear_update_mail_list();
  static const int kUpdateMailListFieldNumber = 1;
  const ::proto::MailRedisData& update_mail_list(int index) const;
  ::proto::MailRedisData* mutable_update_mail_list(int index);
  ::proto::MailRedisData* add_update_mail_list();
  ::google::protobuf::RepeatedPtrField< ::proto::MailRedisData >*
      mutable_update_mail_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::MailRedisData >&
      update_mail_list() const;

  // repeated uint32 del_mail_id_list = 2;
  int del_mail_id_list_size() const;
  void clear_del_mail_id_list();
  static const int kDelMailIdListFieldNumber = 2;
  ::google::protobuf::uint32 del_mail_id_list(int index) const;
  void set_del_mail_id_list(int index, ::google::protobuf::uint32 value);
  void add_del_mail_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      del_mail_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_del_mail_id_list();

  // @@protoc_insertion_point(class_scope:proto.RedisMailChangeNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::MailRedisData > update_mail_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > del_mail_id_list_;
  mutable int _del_mail_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendOfflineMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SendOfflineMsgReq) */ {
 public:
  SendOfflineMsgReq();
  virtual ~SendOfflineMsgReq();

  SendOfflineMsgReq(const SendOfflineMsgReq& from);

  inline SendOfflineMsgReq& operator=(const SendOfflineMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendOfflineMsgReq(SendOfflineMsgReq&& from) noexcept
    : SendOfflineMsgReq() {
    *this = ::std::move(from);
  }

  inline SendOfflineMsgReq& operator=(SendOfflineMsgReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendOfflineMsgReq& default_instance();

  static inline const SendOfflineMsgReq* internal_default_instance() {
    return reinterpret_cast<const SendOfflineMsgReq*>(
               &_SendOfflineMsgReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SendOfflineMsgReq* other);
  friend void swap(SendOfflineMsgReq& a, SendOfflineMsgReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendOfflineMsgReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SendOfflineMsgReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendOfflineMsgReq& from);
  void MergeFrom(const SendOfflineMsgReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendOfflineMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OfflineMsgBin msg = 1;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::proto::OfflineMsgBin& msg() const;
  ::proto::OfflineMsgBin* mutable_msg();
  ::proto::OfflineMsgBin* release_msg();
  void set_allocated_msg(::proto::OfflineMsgBin* msg);

  // @@protoc_insertion_point(class_scope:proto.SendOfflineMsgReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::OfflineMsgBin* msg_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendOfflineMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SendOfflineMsgRsp) */ {
 public:
  SendOfflineMsgRsp();
  virtual ~SendOfflineMsgRsp();

  SendOfflineMsgRsp(const SendOfflineMsgRsp& from);

  inline SendOfflineMsgRsp& operator=(const SendOfflineMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendOfflineMsgRsp(SendOfflineMsgRsp&& from) noexcept
    : SendOfflineMsgRsp() {
    *this = ::std::move(from);
  }

  inline SendOfflineMsgRsp& operator=(SendOfflineMsgRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendOfflineMsgRsp& default_instance();

  static inline const SendOfflineMsgRsp* internal_default_instance() {
    return reinterpret_cast<const SendOfflineMsgRsp*>(
               &_SendOfflineMsgRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SendOfflineMsgRsp* other);
  friend void swap(SendOfflineMsgRsp& a, SendOfflineMsgRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendOfflineMsgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SendOfflineMsgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendOfflineMsgRsp& from);
  void MergeFrom(const SendOfflineMsgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendOfflineMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ticket = 2;
  void clear_ticket();
  static const int kTicketFieldNumber = 2;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SendOfflineMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewOfflineMsgNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.NewOfflineMsgNotify) */ {
 public:
  NewOfflineMsgNotify();
  virtual ~NewOfflineMsgNotify();

  NewOfflineMsgNotify(const NewOfflineMsgNotify& from);

  inline NewOfflineMsgNotify& operator=(const NewOfflineMsgNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NewOfflineMsgNotify(NewOfflineMsgNotify&& from) noexcept
    : NewOfflineMsgNotify() {
    *this = ::std::move(from);
  }

  inline NewOfflineMsgNotify& operator=(NewOfflineMsgNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NewOfflineMsgNotify& default_instance();

  static inline const NewOfflineMsgNotify* internal_default_instance() {
    return reinterpret_cast<const NewOfflineMsgNotify*>(
               &_NewOfflineMsgNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(NewOfflineMsgNotify* other);
  friend void swap(NewOfflineMsgNotify& a, NewOfflineMsgNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NewOfflineMsgNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  NewOfflineMsgNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewOfflineMsgNotify& from);
  void MergeFrom(const NewOfflineMsgNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewOfflineMsgNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.NewOfflineMsgNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetOfflineMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetOfflineMsgReq) */ {
 public:
  GetOfflineMsgReq();
  virtual ~GetOfflineMsgReq();

  GetOfflineMsgReq(const GetOfflineMsgReq& from);

  inline GetOfflineMsgReq& operator=(const GetOfflineMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetOfflineMsgReq(GetOfflineMsgReq&& from) noexcept
    : GetOfflineMsgReq() {
    *this = ::std::move(from);
  }

  inline GetOfflineMsgReq& operator=(GetOfflineMsgReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOfflineMsgReq& default_instance();

  static inline const GetOfflineMsgReq* internal_default_instance() {
    return reinterpret_cast<const GetOfflineMsgReq*>(
               &_GetOfflineMsgReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(GetOfflineMsgReq* other);
  friend void swap(GetOfflineMsgReq& a, GetOfflineMsgReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetOfflineMsgReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOfflineMsgReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOfflineMsgReq& from);
  void MergeFrom(const GetOfflineMsgReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOfflineMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // bool is_login = 2;
  void clear_is_login();
  static const int kIsLoginFieldNumber = 2;
  bool is_login() const;
  void set_is_login(bool value);

  // @@protoc_insertion_point(class_scope:proto.GetOfflineMsgReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 index_;
  bool is_login_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetOfflineMsgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetOfflineMsgRsp) */ {
 public:
  GetOfflineMsgRsp();
  virtual ~GetOfflineMsgRsp();

  GetOfflineMsgRsp(const GetOfflineMsgRsp& from);

  inline GetOfflineMsgRsp& operator=(const GetOfflineMsgRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetOfflineMsgRsp(GetOfflineMsgRsp&& from) noexcept
    : GetOfflineMsgRsp() {
    *this = ::std::move(from);
  }

  inline GetOfflineMsgRsp& operator=(GetOfflineMsgRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetOfflineMsgRsp& default_instance();

  static inline const GetOfflineMsgRsp* internal_default_instance() {
    return reinterpret_cast<const GetOfflineMsgRsp*>(
               &_GetOfflineMsgRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(GetOfflineMsgRsp* other);
  friend void swap(GetOfflineMsgRsp& a, GetOfflineMsgRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetOfflineMsgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetOfflineMsgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetOfflineMsgRsp& from);
  void MergeFrom(const GetOfflineMsgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetOfflineMsgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.OfflineMsgBin offline_msg_list = 3;
  int offline_msg_list_size() const;
  void clear_offline_msg_list();
  static const int kOfflineMsgListFieldNumber = 3;
  const ::proto::OfflineMsgBin& offline_msg_list(int index) const;
  ::proto::OfflineMsgBin* mutable_offline_msg_list(int index);
  ::proto::OfflineMsgBin* add_offline_msg_list();
  ::google::protobuf::RepeatedPtrField< ::proto::OfflineMsgBin >*
      mutable_offline_msg_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::OfflineMsgBin >&
      offline_msg_list() const;

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 last_index = 2;
  void clear_last_index();
  static const int kLastIndexFieldNumber = 2;
  ::google::protobuf::uint32 last_index() const;
  void set_last_index(::google::protobuf::uint32 value);

  // bool is_login = 4;
  void clear_is_login();
  static const int kIsLoginFieldNumber = 4;
  bool is_login() const;
  void set_is_login(bool value);

  // @@protoc_insertion_point(class_scope:proto.GetOfflineMsgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::OfflineMsgBin > offline_msg_list_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 last_index_;
  bool is_login_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveOfflineMsgNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RemoveOfflineMsgNotify) */ {
 public:
  RemoveOfflineMsgNotify();
  virtual ~RemoveOfflineMsgNotify();

  RemoveOfflineMsgNotify(const RemoveOfflineMsgNotify& from);

  inline RemoveOfflineMsgNotify& operator=(const RemoveOfflineMsgNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveOfflineMsgNotify(RemoveOfflineMsgNotify&& from) noexcept
    : RemoveOfflineMsgNotify() {
    *this = ::std::move(from);
  }

  inline RemoveOfflineMsgNotify& operator=(RemoveOfflineMsgNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveOfflineMsgNotify& default_instance();

  static inline const RemoveOfflineMsgNotify* internal_default_instance() {
    return reinterpret_cast<const RemoveOfflineMsgNotify*>(
               &_RemoveOfflineMsgNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(RemoveOfflineMsgNotify* other);
  friend void swap(RemoveOfflineMsgNotify& a, RemoveOfflineMsgNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveOfflineMsgNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveOfflineMsgNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveOfflineMsgNotify& from);
  void MergeFrom(const RemoveOfflineMsgNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveOfflineMsgNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RemoveOfflineMsgNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 index_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClearOfflineMsgNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClearOfflineMsgNotify) */ {
 public:
  ClearOfflineMsgNotify();
  virtual ~ClearOfflineMsgNotify();

  ClearOfflineMsgNotify(const ClearOfflineMsgNotify& from);

  inline ClearOfflineMsgNotify& operator=(const ClearOfflineMsgNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClearOfflineMsgNotify(ClearOfflineMsgNotify&& from) noexcept
    : ClearOfflineMsgNotify() {
    *this = ::std::move(from);
  }

  inline ClearOfflineMsgNotify& operator=(ClearOfflineMsgNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearOfflineMsgNotify& default_instance();

  static inline const ClearOfflineMsgNotify* internal_default_instance() {
    return reinterpret_cast<const ClearOfflineMsgNotify*>(
               &_ClearOfflineMsgNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ClearOfflineMsgNotify* other);
  friend void swap(ClearOfflineMsgNotify& a, ClearOfflineMsgNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClearOfflineMsgNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClearOfflineMsgNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClearOfflineMsgNotify& from);
  void MergeFrom(const ClearOfflineMsgNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClearOfflineMsgNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ClearOfflineMsgNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateRedisMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdateRedisMailReq) */ {
 public:
  UpdateRedisMailReq();
  virtual ~UpdateRedisMailReq();

  UpdateRedisMailReq(const UpdateRedisMailReq& from);

  inline UpdateRedisMailReq& operator=(const UpdateRedisMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateRedisMailReq(UpdateRedisMailReq&& from) noexcept
    : UpdateRedisMailReq() {
    *this = ::std::move(from);
  }

  inline UpdateRedisMailReq& operator=(UpdateRedisMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRedisMailReq& default_instance();

  static inline const UpdateRedisMailReq* internal_default_instance() {
    return reinterpret_cast<const UpdateRedisMailReq*>(
               &_UpdateRedisMailReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(UpdateRedisMailReq* other);
  friend void swap(UpdateRedisMailReq& a, UpdateRedisMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateRedisMailReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateRedisMailReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateRedisMailReq& from);
  void MergeFrom(const UpdateRedisMailReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateRedisMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mail_id_list = 2;
  int mail_id_list_size() const;
  void clear_mail_id_list();
  static const int kMailIdListFieldNumber = 2;
  ::google::protobuf::uint32 mail_id_list(int index) const;
  void set_mail_id_list(int index, ::google::protobuf::uint32 value);
  void add_mail_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mail_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mail_id_list();

  // .proto.MailUpdateOpType op_type = 1;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  ::proto::MailUpdateOpType op_type() const;
  void set_op_type(::proto::MailUpdateOpType value);

  // @@protoc_insertion_point(class_scope:proto.UpdateRedisMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mail_id_list_;
  mutable int _mail_id_list_cached_byte_size_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateRedisMailRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdateRedisMailRsp) */ {
 public:
  UpdateRedisMailRsp();
  virtual ~UpdateRedisMailRsp();

  UpdateRedisMailRsp(const UpdateRedisMailRsp& from);

  inline UpdateRedisMailRsp& operator=(const UpdateRedisMailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateRedisMailRsp(UpdateRedisMailRsp&& from) noexcept
    : UpdateRedisMailRsp() {
    *this = ::std::move(from);
  }

  inline UpdateRedisMailRsp& operator=(UpdateRedisMailRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRedisMailRsp& default_instance();

  static inline const UpdateRedisMailRsp* internal_default_instance() {
    return reinterpret_cast<const UpdateRedisMailRsp*>(
               &_UpdateRedisMailRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(UpdateRedisMailRsp* other);
  friend void swap(UpdateRedisMailRsp& a, UpdateRedisMailRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateRedisMailRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateRedisMailRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateRedisMailRsp& from);
  void MergeFrom(const UpdateRedisMailRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateRedisMailRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mail_id_list = 3;
  int mail_id_list_size() const;
  void clear_mail_id_list();
  static const int kMailIdListFieldNumber = 3;
  ::google::protobuf::uint32 mail_id_list(int index) const;
  void set_mail_id_list(int index, ::google::protobuf::uint32 value);
  void add_mail_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mail_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mail_id_list();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.MailUpdateOpType op_type = 2;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 2;
  ::proto::MailUpdateOpType op_type() const;
  void set_op_type(::proto::MailUpdateOpType value);

  // @@protoc_insertion_point(class_scope:proto.UpdateRedisMailRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mail_id_list_;
  mutable int _mail_id_list_cached_byte_size_;
  ::google::protobuf::int32 retcode_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRedisMailTransactionStatusReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetRedisMailTransactionStatusReq) */ {
 public:
  GetRedisMailTransactionStatusReq();
  virtual ~GetRedisMailTransactionStatusReq();

  GetRedisMailTransactionStatusReq(const GetRedisMailTransactionStatusReq& from);

  inline GetRedisMailTransactionStatusReq& operator=(const GetRedisMailTransactionStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRedisMailTransactionStatusReq(GetRedisMailTransactionStatusReq&& from) noexcept
    : GetRedisMailTransactionStatusReq() {
    *this = ::std::move(from);
  }

  inline GetRedisMailTransactionStatusReq& operator=(GetRedisMailTransactionStatusReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRedisMailTransactionStatusReq& default_instance();

  static inline const GetRedisMailTransactionStatusReq* internal_default_instance() {
    return reinterpret_cast<const GetRedisMailTransactionStatusReq*>(
               &_GetRedisMailTransactionStatusReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(GetRedisMailTransactionStatusReq* other);
  friend void swap(GetRedisMailTransactionStatusReq& a, GetRedisMailTransactionStatusReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRedisMailTransactionStatusReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRedisMailTransactionStatusReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRedisMailTransactionStatusReq& from);
  void MergeFrom(const GetRedisMailTransactionStatusReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRedisMailTransactionStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string transaction_list = 2;
  int transaction_list_size() const;
  void clear_transaction_list();
  static const int kTransactionListFieldNumber = 2;
  const ::std::string& transaction_list(int index) const;
  ::std::string* mutable_transaction_list(int index);
  void set_transaction_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_transaction_list(int index, ::std::string&& value);
  #endif
  void set_transaction_list(int index, const char* value);
  void set_transaction_list(int index, const char* value, size_t size);
  ::std::string* add_transaction_list();
  void add_transaction_list(const ::std::string& value);
  #if LANG_CXX11
  void add_transaction_list(::std::string&& value);
  #endif
  void add_transaction_list(const char* value);
  void add_transaction_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& transaction_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_transaction_list();

  // @@protoc_insertion_point(class_scope:proto.GetRedisMailTransactionStatusReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> transaction_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GetRedisMailTransactionStatusRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetRedisMailTransactionStatusRsp) */ {
 public:
  GetRedisMailTransactionStatusRsp();
  virtual ~GetRedisMailTransactionStatusRsp();

  GetRedisMailTransactionStatusRsp(const GetRedisMailTransactionStatusRsp& from);

  inline GetRedisMailTransactionStatusRsp& operator=(const GetRedisMailTransactionStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetRedisMailTransactionStatusRsp(GetRedisMailTransactionStatusRsp&& from) noexcept
    : GetRedisMailTransactionStatusRsp() {
    *this = ::std::move(from);
  }

  inline GetRedisMailTransactionStatusRsp& operator=(GetRedisMailTransactionStatusRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRedisMailTransactionStatusRsp& default_instance();

  static inline const GetRedisMailTransactionStatusRsp* internal_default_instance() {
    return reinterpret_cast<const GetRedisMailTransactionStatusRsp*>(
               &_GetRedisMailTransactionStatusRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(GetRedisMailTransactionStatusRsp* other);
  friend void swap(GetRedisMailTransactionStatusRsp& a, GetRedisMailTransactionStatusRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetRedisMailTransactionStatusRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRedisMailTransactionStatusRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRedisMailTransactionStatusRsp& from);
  void MergeFrom(const GetRedisMailTransactionStatusRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRedisMailTransactionStatusRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bool> transaction_status_map = 2;
  int transaction_status_map_size() const;
  void clear_transaction_status_map();
  static const int kTransactionStatusMapFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, bool >&
      transaction_status_map() const;
  ::google::protobuf::Map< ::std::string, bool >*
      mutable_transaction_status_map();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetRedisMailTransactionStatusRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry : public ::google::protobuf::internal::MapEntry<GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry, 
      ::std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry, 
      ::std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > SuperType;
    GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry();
    GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GetRedisMailTransactionStatusRsp_TransactionStatusMapEntry,
      ::std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > transaction_status_map_;
  private:
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClearUpRedisMailNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ClearUpRedisMailNotify) */ {
 public:
  ClearUpRedisMailNotify();
  virtual ~ClearUpRedisMailNotify();

  ClearUpRedisMailNotify(const ClearUpRedisMailNotify& from);

  inline ClearUpRedisMailNotify& operator=(const ClearUpRedisMailNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ClearUpRedisMailNotify(ClearUpRedisMailNotify&& from) noexcept
    : ClearUpRedisMailNotify() {
    *this = ::std::move(from);
  }

  inline ClearUpRedisMailNotify& operator=(ClearUpRedisMailNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ClearUpRedisMailNotify& default_instance();

  static inline const ClearUpRedisMailNotify* internal_default_instance() {
    return reinterpret_cast<const ClearUpRedisMailNotify*>(
               &_ClearUpRedisMailNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(ClearUpRedisMailNotify* other);
  friend void swap(ClearUpRedisMailNotify& a, ClearUpRedisMailNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ClearUpRedisMailNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  ClearUpRedisMailNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClearUpRedisMailNotify& from);
  void MergeFrom(const ClearUpRedisMailNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClearUpRedisMailNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.ClearUpRedisMailNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CleanRedisMailNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CleanRedisMailNotify) */ {
 public:
  CleanRedisMailNotify();
  virtual ~CleanRedisMailNotify();

  CleanRedisMailNotify(const CleanRedisMailNotify& from);

  inline CleanRedisMailNotify& operator=(const CleanRedisMailNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CleanRedisMailNotify(CleanRedisMailNotify&& from) noexcept
    : CleanRedisMailNotify() {
    *this = ::std::move(from);
  }

  inline CleanRedisMailNotify& operator=(CleanRedisMailNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CleanRedisMailNotify& default_instance();

  static inline const CleanRedisMailNotify* internal_default_instance() {
    return reinterpret_cast<const CleanRedisMailNotify*>(
               &_CleanRedisMailNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CleanRedisMailNotify* other);
  friend void swap(CleanRedisMailNotify& a, CleanRedisMailNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CleanRedisMailNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CleanRedisMailNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CleanRedisMailNotify& from);
  void MergeFrom(const CleanRedisMailNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CleanRedisMailNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.CleanRedisMailNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ResendRedisMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResendRedisMailReq) */ {
 public:
  ResendRedisMailReq();
  virtual ~ResendRedisMailReq();

  ResendRedisMailReq(const ResendRedisMailReq& from);

  inline ResendRedisMailReq& operator=(const ResendRedisMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResendRedisMailReq(ResendRedisMailReq&& from) noexcept
    : ResendRedisMailReq() {
    *this = ::std::move(from);
  }

  inline ResendRedisMailReq& operator=(ResendRedisMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResendRedisMailReq& default_instance();

  static inline const ResendRedisMailReq* internal_default_instance() {
    return reinterpret_cast<const ResendRedisMailReq*>(
               &_ResendRedisMailReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(ResendRedisMailReq* other);
  friend void swap(ResendRedisMailReq& a, ResendRedisMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResendRedisMailReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ResendRedisMailReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResendRedisMailReq& from);
  void MergeFrom(const ResendRedisMailReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResendRedisMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .proto.MailBin> mail_bin_map = 1;
  int mail_bin_map_size() const;
  void clear_mail_bin_map();
  static const int kMailBinMapFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::proto::MailBin >&
      mail_bin_map() const;
  ::google::protobuf::Map< ::std::string, ::proto::MailBin >*
      mutable_mail_bin_map();

  // @@protoc_insertion_point(class_scope:proto.ResendRedisMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class ResendRedisMailReq_MailBinMapEntry : public ::google::protobuf::internal::MapEntry<ResendRedisMailReq_MailBinMapEntry, 
      ::std::string, ::proto::MailBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ResendRedisMailReq_MailBinMapEntry, 
      ::std::string, ::proto::MailBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    ResendRedisMailReq_MailBinMapEntry();
    ResendRedisMailReq_MailBinMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ResendRedisMailReq_MailBinMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ResendRedisMailReq_MailBinMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ResendRedisMailReq_MailBinMapEntry,
      ::std::string, ::proto::MailBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > mail_bin_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ResendRedisMailRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResendRedisMailRsp) */ {
 public:
  ResendRedisMailRsp();
  virtual ~ResendRedisMailRsp();

  ResendRedisMailRsp(const ResendRedisMailRsp& from);

  inline ResendRedisMailRsp& operator=(const ResendRedisMailRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResendRedisMailRsp(ResendRedisMailRsp&& from) noexcept
    : ResendRedisMailRsp() {
    *this = ::std::move(from);
  }

  inline ResendRedisMailRsp& operator=(ResendRedisMailRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResendRedisMailRsp& default_instance();

  static inline const ResendRedisMailRsp* internal_default_instance() {
    return reinterpret_cast<const ResendRedisMailRsp*>(
               &_ResendRedisMailRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(ResendRedisMailRsp* other);
  friend void swap(ResendRedisMailRsp& a, ResendRedisMailRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResendRedisMailRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ResendRedisMailRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResendRedisMailRsp& from);
  void MergeFrom(const ResendRedisMailRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResendRedisMailRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bool> resend_status_map = 2;
  int resend_status_map_size() const;
  void clear_resend_status_map();
  static const int kResendStatusMapFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, bool >&
      resend_status_map() const;
  ::google::protobuf::Map< ::std::string, bool >*
      mutable_resend_status_map();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.ResendRedisMailRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class ResendRedisMailRsp_ResendStatusMapEntry : public ::google::protobuf::internal::MapEntry<ResendRedisMailRsp_ResendStatusMapEntry, 
      ::std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<ResendRedisMailRsp_ResendStatusMapEntry, 
      ::std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > SuperType;
    ResendRedisMailRsp_ResendStatusMapEntry();
    ResendRedisMailRsp_ResendStatusMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const ResendRedisMailRsp_ResendStatusMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_ResendRedisMailRsp_ResendStatusMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      ResendRedisMailRsp_ResendStatusMapEntry,
      ::std::string, bool,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
      0 > resend_status_map_;
  private:
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmail_2eserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AddRedisMailReq

// .proto.MailAddOpType op_type = 1;
inline void AddRedisMailReq::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::MailAddOpType AddRedisMailReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailReq.op_type)
  return static_cast< ::proto::MailAddOpType >(op_type_);
}
inline void AddRedisMailReq::set_op_type(::proto::MailAddOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRedisMailReq.op_type)
}

// .proto.MailBin mail_bin = 2;
inline bool AddRedisMailReq::has_mail_bin() const {
  return this != internal_default_instance() && mail_bin_ != NULL;
}
inline void AddRedisMailReq::clear_mail_bin() {
  if (GetArenaNoVirtual() == NULL && mail_bin_ != NULL) delete mail_bin_;
  mail_bin_ = NULL;
}
inline const ::proto::MailBin& AddRedisMailReq::mail_bin() const {
  const ::proto::MailBin* p = mail_bin_;
  // @@protoc_insertion_point(field_get:proto.AddRedisMailReq.mail_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MailBin*>(
      &::proto::_MailBin_default_instance_);
}
inline ::proto::MailBin* AddRedisMailReq::mutable_mail_bin() {
  
  if (mail_bin_ == NULL) {
    mail_bin_ = new ::proto::MailBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddRedisMailReq.mail_bin)
  return mail_bin_;
}
inline ::proto::MailBin* AddRedisMailReq::release_mail_bin() {
  // @@protoc_insertion_point(field_release:proto.AddRedisMailReq.mail_bin)
  
  ::proto::MailBin* temp = mail_bin_;
  mail_bin_ = NULL;
  return temp;
}
inline void AddRedisMailReq::set_allocated_mail_bin(::proto::MailBin* mail_bin) {
  delete mail_bin_;
  mail_bin_ = mail_bin;
  if (mail_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddRedisMailReq.mail_bin)
}

// string ticket = 3;
inline void AddRedisMailReq::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRedisMailReq::ticket() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailReq.ticket)
  return ticket_.GetNoArena();
}
inline void AddRedisMailReq::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AddRedisMailReq.ticket)
}
#if LANG_CXX11
inline void AddRedisMailReq::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AddRedisMailReq.ticket)
}
#endif
inline void AddRedisMailReq::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AddRedisMailReq.ticket)
}
inline void AddRedisMailReq::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AddRedisMailReq.ticket)
}
inline ::std::string* AddRedisMailReq::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.AddRedisMailReq.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRedisMailReq::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.AddRedisMailReq.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRedisMailReq::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.AddRedisMailReq.ticket)
}

// string transaction = 4;
inline void AddRedisMailReq::clear_transaction() {
  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRedisMailReq::transaction() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailReq.transaction)
  return transaction_.GetNoArena();
}
inline void AddRedisMailReq::set_transaction(const ::std::string& value) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AddRedisMailReq.transaction)
}
#if LANG_CXX11
inline void AddRedisMailReq::set_transaction(::std::string&& value) {
  
  transaction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AddRedisMailReq.transaction)
}
#endif
inline void AddRedisMailReq::set_transaction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AddRedisMailReq.transaction)
}
inline void AddRedisMailReq::set_transaction(const char* value, size_t size) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AddRedisMailReq.transaction)
}
inline ::std::string* AddRedisMailReq::mutable_transaction() {
  
  // @@protoc_insertion_point(field_mutable:proto.AddRedisMailReq.transaction)
  return transaction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRedisMailReq::release_transaction() {
  // @@protoc_insertion_point(field_release:proto.AddRedisMailReq.transaction)
  
  return transaction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRedisMailReq::set_allocated_transaction(::std::string* transaction) {
  if (transaction != NULL) {
    
  } else {
    
  }
  transaction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transaction);
  // @@protoc_insertion_point(field_set_allocated:proto.AddRedisMailReq.transaction)
}

// -------------------------------------------------------------------

// AddRedisMailRsp

// int32 retcode = 1;
inline void AddRedisMailRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 AddRedisMailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailRsp.retcode)
  return retcode_;
}
inline void AddRedisMailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRedisMailRsp.retcode)
}

// .proto.MailAddOpType op_type = 2;
inline void AddRedisMailRsp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::MailAddOpType AddRedisMailRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailRsp.op_type)
  return static_cast< ::proto::MailAddOpType >(op_type_);
}
inline void AddRedisMailRsp::set_op_type(::proto::MailAddOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRedisMailRsp.op_type)
}

// string ticket = 3;
inline void AddRedisMailRsp::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRedisMailRsp::ticket() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailRsp.ticket)
  return ticket_.GetNoArena();
}
inline void AddRedisMailRsp::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AddRedisMailRsp.ticket)
}
#if LANG_CXX11
inline void AddRedisMailRsp::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AddRedisMailRsp.ticket)
}
#endif
inline void AddRedisMailRsp::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AddRedisMailRsp.ticket)
}
inline void AddRedisMailRsp::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AddRedisMailRsp.ticket)
}
inline ::std::string* AddRedisMailRsp::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.AddRedisMailRsp.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRedisMailRsp::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.AddRedisMailRsp.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRedisMailRsp::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.AddRedisMailRsp.ticket)
}

// string transaction = 4;
inline void AddRedisMailRsp::clear_transaction() {
  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRedisMailRsp::transaction() const {
  // @@protoc_insertion_point(field_get:proto.AddRedisMailRsp.transaction)
  return transaction_.GetNoArena();
}
inline void AddRedisMailRsp::set_transaction(const ::std::string& value) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AddRedisMailRsp.transaction)
}
#if LANG_CXX11
inline void AddRedisMailRsp::set_transaction(::std::string&& value) {
  
  transaction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AddRedisMailRsp.transaction)
}
#endif
inline void AddRedisMailRsp::set_transaction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AddRedisMailRsp.transaction)
}
inline void AddRedisMailRsp::set_transaction(const char* value, size_t size) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AddRedisMailRsp.transaction)
}
inline ::std::string* AddRedisMailRsp::mutable_transaction() {
  
  // @@protoc_insertion_point(field_mutable:proto.AddRedisMailRsp.transaction)
  return transaction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRedisMailRsp::release_transaction() {
  // @@protoc_insertion_point(field_release:proto.AddRedisMailRsp.transaction)
  
  return transaction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRedisMailRsp::set_allocated_transaction(::std::string* transaction) {
  if (transaction != NULL) {
    
  } else {
    
  }
  transaction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transaction);
  // @@protoc_insertion_point(field_set_allocated:proto.AddRedisMailRsp.transaction)
}

// -------------------------------------------------------------------

// DelRedisMailReq

// .proto.MailDelOpType op_type = 1;
inline void DelRedisMailReq::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::MailDelOpType DelRedisMailReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.DelRedisMailReq.op_type)
  return static_cast< ::proto::MailDelOpType >(op_type_);
}
inline void DelRedisMailReq::set_op_type(::proto::MailDelOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.DelRedisMailReq.op_type)
}

// repeated uint32 mail_id_list = 2;
inline int DelRedisMailReq::mail_id_list_size() const {
  return mail_id_list_.size();
}
inline void DelRedisMailReq::clear_mail_id_list() {
  mail_id_list_.Clear();
}
inline ::google::protobuf::uint32 DelRedisMailReq::mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DelRedisMailReq.mail_id_list)
  return mail_id_list_.Get(index);
}
inline void DelRedisMailReq::set_mail_id_list(int index, ::google::protobuf::uint32 value) {
  mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.DelRedisMailReq.mail_id_list)
}
inline void DelRedisMailReq::add_mail_id_list(::google::protobuf::uint32 value) {
  mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.DelRedisMailReq.mail_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DelRedisMailReq::mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.DelRedisMailReq.mail_id_list)
  return mail_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DelRedisMailReq::mutable_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DelRedisMailReq.mail_id_list)
  return &mail_id_list_;
}

// repeated string ticket_list = 3;
inline int DelRedisMailReq::ticket_list_size() const {
  return ticket_list_.size();
}
inline void DelRedisMailReq::clear_ticket_list() {
  ticket_list_.Clear();
}
inline const ::std::string& DelRedisMailReq::ticket_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DelRedisMailReq.ticket_list)
  return ticket_list_.Get(index);
}
inline ::std::string* DelRedisMailReq::mutable_ticket_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DelRedisMailReq.ticket_list)
  return ticket_list_.Mutable(index);
}
inline void DelRedisMailReq::set_ticket_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.DelRedisMailReq.ticket_list)
  ticket_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DelRedisMailReq::set_ticket_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.DelRedisMailReq.ticket_list)
  ticket_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DelRedisMailReq::set_ticket_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ticket_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.DelRedisMailReq.ticket_list)
}
inline void DelRedisMailReq::set_ticket_list(int index, const char* value, size_t size) {
  ticket_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.DelRedisMailReq.ticket_list)
}
inline ::std::string* DelRedisMailReq::add_ticket_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.DelRedisMailReq.ticket_list)
  return ticket_list_.Add();
}
inline void DelRedisMailReq::add_ticket_list(const ::std::string& value) {
  ticket_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.DelRedisMailReq.ticket_list)
}
#if LANG_CXX11
inline void DelRedisMailReq::add_ticket_list(::std::string&& value) {
  ticket_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.DelRedisMailReq.ticket_list)
}
#endif
inline void DelRedisMailReq::add_ticket_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  ticket_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.DelRedisMailReq.ticket_list)
}
inline void DelRedisMailReq::add_ticket_list(const char* value, size_t size) {
  ticket_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.DelRedisMailReq.ticket_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DelRedisMailReq::ticket_list() const {
  // @@protoc_insertion_point(field_list:proto.DelRedisMailReq.ticket_list)
  return ticket_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DelRedisMailReq::mutable_ticket_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DelRedisMailReq.ticket_list)
  return &ticket_list_;
}

// -------------------------------------------------------------------

// DelRedisMailRsp

// int32 retcode = 1;
inline void DelRedisMailRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 DelRedisMailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.DelRedisMailRsp.retcode)
  return retcode_;
}
inline void DelRedisMailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.DelRedisMailRsp.retcode)
}

// .proto.MailDelOpType op_type = 2;
inline void DelRedisMailRsp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::MailDelOpType DelRedisMailRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.DelRedisMailRsp.op_type)
  return static_cast< ::proto::MailDelOpType >(op_type_);
}
inline void DelRedisMailRsp::set_op_type(::proto::MailDelOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.DelRedisMailRsp.op_type)
}

// repeated uint32 mail_id_list = 3;
inline int DelRedisMailRsp::mail_id_list_size() const {
  return mail_id_list_.size();
}
inline void DelRedisMailRsp::clear_mail_id_list() {
  mail_id_list_.Clear();
}
inline ::google::protobuf::uint32 DelRedisMailRsp::mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DelRedisMailRsp.mail_id_list)
  return mail_id_list_.Get(index);
}
inline void DelRedisMailRsp::set_mail_id_list(int index, ::google::protobuf::uint32 value) {
  mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.DelRedisMailRsp.mail_id_list)
}
inline void DelRedisMailRsp::add_mail_id_list(::google::protobuf::uint32 value) {
  mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.DelRedisMailRsp.mail_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DelRedisMailRsp::mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.DelRedisMailRsp.mail_id_list)
  return mail_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DelRedisMailRsp::mutable_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DelRedisMailRsp.mail_id_list)
  return &mail_id_list_;
}

// -------------------------------------------------------------------

// GetRedisMailReq

// .proto.MailGetOPType op_type = 1;
inline void GetRedisMailReq::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::MailGetOPType GetRedisMailReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailReq.op_type)
  return static_cast< ::proto::MailGetOPType >(op_type_);
}
inline void GetRedisMailReq::set_op_type(::proto::MailGetOPType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailReq.op_type)
}

// .proto.MailGetType get_type = 2;
inline void GetRedisMailReq::clear_get_type() {
  get_type_ = 0;
}
inline ::proto::MailGetType GetRedisMailReq::get_type() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailReq.get_type)
  return static_cast< ::proto::MailGetType >(get_type_);
}
inline void GetRedisMailReq::set_get_type(::proto::MailGetType value) {
  
  get_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailReq.get_type)
}

// repeated uint32 mail_id_list = 3;
inline int GetRedisMailReq::mail_id_list_size() const {
  return mail_id_list_.size();
}
inline void GetRedisMailReq::clear_mail_id_list() {
  mail_id_list_.Clear();
}
inline ::google::protobuf::uint32 GetRedisMailReq::mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailReq.mail_id_list)
  return mail_id_list_.Get(index);
}
inline void GetRedisMailReq::set_mail_id_list(int index, ::google::protobuf::uint32 value) {
  mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GetRedisMailReq.mail_id_list)
}
inline void GetRedisMailReq::add_mail_id_list(::google::protobuf::uint32 value) {
  mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GetRedisMailReq.mail_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetRedisMailReq::mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GetRedisMailReq.mail_id_list)
  return mail_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetRedisMailReq::mutable_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetRedisMailReq.mail_id_list)
  return &mail_id_list_;
}

// bool is_collectible_mail_transfered = 4;
inline void GetRedisMailReq::clear_is_collectible_mail_transfered() {
  is_collectible_mail_transfered_ = false;
}
inline bool GetRedisMailReq::is_collectible_mail_transfered() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailReq.is_collectible_mail_transfered)
  return is_collectible_mail_transfered_;
}
inline void GetRedisMailReq::set_is_collectible_mail_transfered(bool value) {
  
  is_collectible_mail_transfered_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailReq.is_collectible_mail_transfered)
}

// -------------------------------------------------------------------

// GetRedisMailRsp

// int32 retcode = 1;
inline void GetRedisMailRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetRedisMailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.retcode)
  return retcode_;
}
inline void GetRedisMailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.retcode)
}

// repeated bytes mail_str_list = 2;
inline int GetRedisMailRsp::mail_str_list_size() const {
  return mail_str_list_.size();
}
inline void GetRedisMailRsp::clear_mail_str_list() {
  mail_str_list_.Clear();
}
inline const ::std::string& GetRedisMailRsp::mail_str_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.mail_str_list)
  return mail_str_list_.Get(index);
}
inline ::std::string* GetRedisMailRsp::mutable_mail_str_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetRedisMailRsp.mail_str_list)
  return mail_str_list_.Mutable(index);
}
inline void GetRedisMailRsp::set_mail_str_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.mail_str_list)
  mail_str_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetRedisMailRsp::set_mail_str_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.mail_str_list)
  mail_str_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetRedisMailRsp::set_mail_str_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  mail_str_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.GetRedisMailRsp.mail_str_list)
}
inline void GetRedisMailRsp::set_mail_str_list(int index, const void* value, size_t size) {
  mail_str_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.GetRedisMailRsp.mail_str_list)
}
inline ::std::string* GetRedisMailRsp::add_mail_str_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.GetRedisMailRsp.mail_str_list)
  return mail_str_list_.Add();
}
inline void GetRedisMailRsp::add_mail_str_list(const ::std::string& value) {
  mail_str_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.GetRedisMailRsp.mail_str_list)
}
#if LANG_CXX11
inline void GetRedisMailRsp::add_mail_str_list(::std::string&& value) {
  mail_str_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.GetRedisMailRsp.mail_str_list)
}
#endif
inline void GetRedisMailRsp::add_mail_str_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  mail_str_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.GetRedisMailRsp.mail_str_list)
}
inline void GetRedisMailRsp::add_mail_str_list(const void* value, size_t size) {
  mail_str_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.GetRedisMailRsp.mail_str_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetRedisMailRsp::mail_str_list() const {
  // @@protoc_insertion_point(field_list:proto.GetRedisMailRsp.mail_str_list)
  return mail_str_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetRedisMailRsp::mutable_mail_str_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetRedisMailRsp.mail_str_list)
  return &mail_str_list_;
}

// .proto.MailGetOPType op_type = 3;
inline void GetRedisMailRsp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::MailGetOPType GetRedisMailRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.op_type)
  return static_cast< ::proto::MailGetOPType >(op_type_);
}
inline void GetRedisMailRsp::set_op_type(::proto::MailGetOPType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.op_type)
}

// bool is_truncated = 4;
inline void GetRedisMailRsp::clear_is_truncated() {
  is_truncated_ = false;
}
inline bool GetRedisMailRsp::is_truncated() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.is_truncated)
  return is_truncated_;
}
inline void GetRedisMailRsp::set_is_truncated(bool value) {
  
  is_truncated_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.is_truncated)
}

// .proto.MailGetType get_type = 5;
inline void GetRedisMailRsp::clear_get_type() {
  get_type_ = 0;
}
inline ::proto::MailGetType GetRedisMailRsp::get_type() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.get_type)
  return static_cast< ::proto::MailGetType >(get_type_);
}
inline void GetRedisMailRsp::set_get_type(::proto::MailGetType value) {
  
  get_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.get_type)
}

// bool is_collectible_mail_transfered = 6;
inline void GetRedisMailRsp::clear_is_collectible_mail_transfered() {
  is_collectible_mail_transfered_ = false;
}
inline bool GetRedisMailRsp::is_collectible_mail_transfered() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.is_collectible_mail_transfered)
  return is_collectible_mail_transfered_;
}
inline void GetRedisMailRsp::set_is_collectible_mail_transfered(bool value) {
  
  is_collectible_mail_transfered_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.is_collectible_mail_transfered)
}

// string transaction = 7;
inline void GetRedisMailRsp::clear_transaction() {
  transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetRedisMailRsp::transaction() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.transaction)
  return transaction_.GetNoArena();
}
inline void GetRedisMailRsp::set_transaction(const ::std::string& value) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.transaction)
}
#if LANG_CXX11
inline void GetRedisMailRsp::set_transaction(::std::string&& value) {
  
  transaction_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GetRedisMailRsp.transaction)
}
#endif
inline void GetRedisMailRsp::set_transaction(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GetRedisMailRsp.transaction)
}
inline void GetRedisMailRsp::set_transaction(const char* value, size_t size) {
  
  transaction_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GetRedisMailRsp.transaction)
}
inline ::std::string* GetRedisMailRsp::mutable_transaction() {
  
  // @@protoc_insertion_point(field_mutable:proto.GetRedisMailRsp.transaction)
  return transaction_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetRedisMailRsp::release_transaction() {
  // @@protoc_insertion_point(field_release:proto.GetRedisMailRsp.transaction)
  
  return transaction_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetRedisMailRsp::set_allocated_transaction(::std::string* transaction) {
  if (transaction != NULL) {
    
  } else {
    
  }
  transaction_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), transaction);
  // @@protoc_insertion_point(field_set_allocated:proto.GetRedisMailRsp.transaction)
}

// uint32 page_index = 8;
inline void GetRedisMailRsp::clear_page_index() {
  page_index_ = 0u;
}
inline ::google::protobuf::uint32 GetRedisMailRsp::page_index() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.page_index)
  return page_index_;
}
inline void GetRedisMailRsp::set_page_index(::google::protobuf::uint32 value) {
  
  page_index_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.page_index)
}

// uint32 total_page_count = 9;
inline void GetRedisMailRsp::clear_total_page_count() {
  total_page_count_ = 0u;
}
inline ::google::protobuf::uint32 GetRedisMailRsp::total_page_count() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailRsp.total_page_count)
  return total_page_count_;
}
inline void GetRedisMailRsp::set_total_page_count(::google::protobuf::uint32 value) {
  
  total_page_count_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailRsp.total_page_count)
}

// -------------------------------------------------------------------

// RedisMailChangeNotify

// repeated .proto.MailRedisData update_mail_list = 1;
inline int RedisMailChangeNotify::update_mail_list_size() const {
  return update_mail_list_.size();
}
inline void RedisMailChangeNotify::clear_update_mail_list() {
  update_mail_list_.Clear();
}
inline const ::proto::MailRedisData& RedisMailChangeNotify::update_mail_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RedisMailChangeNotify.update_mail_list)
  return update_mail_list_.Get(index);
}
inline ::proto::MailRedisData* RedisMailChangeNotify::mutable_update_mail_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.RedisMailChangeNotify.update_mail_list)
  return update_mail_list_.Mutable(index);
}
inline ::proto::MailRedisData* RedisMailChangeNotify::add_update_mail_list() {
  // @@protoc_insertion_point(field_add:proto.RedisMailChangeNotify.update_mail_list)
  return update_mail_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MailRedisData >*
RedisMailChangeNotify::mutable_update_mail_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RedisMailChangeNotify.update_mail_list)
  return &update_mail_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MailRedisData >&
RedisMailChangeNotify::update_mail_list() const {
  // @@protoc_insertion_point(field_list:proto.RedisMailChangeNotify.update_mail_list)
  return update_mail_list_;
}

// repeated uint32 del_mail_id_list = 2;
inline int RedisMailChangeNotify::del_mail_id_list_size() const {
  return del_mail_id_list_.size();
}
inline void RedisMailChangeNotify::clear_del_mail_id_list() {
  del_mail_id_list_.Clear();
}
inline ::google::protobuf::uint32 RedisMailChangeNotify::del_mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RedisMailChangeNotify.del_mail_id_list)
  return del_mail_id_list_.Get(index);
}
inline void RedisMailChangeNotify::set_del_mail_id_list(int index, ::google::protobuf::uint32 value) {
  del_mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.RedisMailChangeNotify.del_mail_id_list)
}
inline void RedisMailChangeNotify::add_del_mail_id_list(::google::protobuf::uint32 value) {
  del_mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.RedisMailChangeNotify.del_mail_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RedisMailChangeNotify::del_mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.RedisMailChangeNotify.del_mail_id_list)
  return del_mail_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RedisMailChangeNotify::mutable_del_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RedisMailChangeNotify.del_mail_id_list)
  return &del_mail_id_list_;
}

// -------------------------------------------------------------------

// SendOfflineMsgReq

// .proto.OfflineMsgBin msg = 1;
inline bool SendOfflineMsgReq::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
inline void SendOfflineMsgReq::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
inline const ::proto::OfflineMsgBin& SendOfflineMsgReq::msg() const {
  const ::proto::OfflineMsgBin* p = msg_;
  // @@protoc_insertion_point(field_get:proto.SendOfflineMsgReq.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::OfflineMsgBin*>(
      &::proto::_OfflineMsgBin_default_instance_);
}
inline ::proto::OfflineMsgBin* SendOfflineMsgReq::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::OfflineMsgBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SendOfflineMsgReq.msg)
  return msg_;
}
inline ::proto::OfflineMsgBin* SendOfflineMsgReq::release_msg() {
  // @@protoc_insertion_point(field_release:proto.SendOfflineMsgReq.msg)
  
  ::proto::OfflineMsgBin* temp = msg_;
  msg_ = NULL;
  return temp;
}
inline void SendOfflineMsgReq::set_allocated_msg(::proto::OfflineMsgBin* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SendOfflineMsgReq.msg)
}

// -------------------------------------------------------------------

// SendOfflineMsgRsp

// int32 retcode = 1;
inline void SendOfflineMsgRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SendOfflineMsgRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SendOfflineMsgRsp.retcode)
  return retcode_;
}
inline void SendOfflineMsgRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SendOfflineMsgRsp.retcode)
}

// string ticket = 2;
inline void SendOfflineMsgRsp::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendOfflineMsgRsp::ticket() const {
  // @@protoc_insertion_point(field_get:proto.SendOfflineMsgRsp.ticket)
  return ticket_.GetNoArena();
}
inline void SendOfflineMsgRsp::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SendOfflineMsgRsp.ticket)
}
#if LANG_CXX11
inline void SendOfflineMsgRsp::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SendOfflineMsgRsp.ticket)
}
#endif
inline void SendOfflineMsgRsp::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SendOfflineMsgRsp.ticket)
}
inline void SendOfflineMsgRsp::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SendOfflineMsgRsp.ticket)
}
inline ::std::string* SendOfflineMsgRsp::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.SendOfflineMsgRsp.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendOfflineMsgRsp::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.SendOfflineMsgRsp.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendOfflineMsgRsp::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.SendOfflineMsgRsp.ticket)
}

// -------------------------------------------------------------------

// NewOfflineMsgNotify

// -------------------------------------------------------------------

// GetOfflineMsgReq

// uint32 index = 1;
inline void GetOfflineMsgReq::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 GetOfflineMsgReq::index() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineMsgReq.index)
  return index_;
}
inline void GetOfflineMsgReq::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineMsgReq.index)
}

// bool is_login = 2;
inline void GetOfflineMsgReq::clear_is_login() {
  is_login_ = false;
}
inline bool GetOfflineMsgReq::is_login() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineMsgReq.is_login)
  return is_login_;
}
inline void GetOfflineMsgReq::set_is_login(bool value) {
  
  is_login_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineMsgReq.is_login)
}

// -------------------------------------------------------------------

// GetOfflineMsgRsp

// int32 retcode = 1;
inline void GetOfflineMsgRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetOfflineMsgRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineMsgRsp.retcode)
  return retcode_;
}
inline void GetOfflineMsgRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineMsgRsp.retcode)
}

// uint32 last_index = 2;
inline void GetOfflineMsgRsp::clear_last_index() {
  last_index_ = 0u;
}
inline ::google::protobuf::uint32 GetOfflineMsgRsp::last_index() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineMsgRsp.last_index)
  return last_index_;
}
inline void GetOfflineMsgRsp::set_last_index(::google::protobuf::uint32 value) {
  
  last_index_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineMsgRsp.last_index)
}

// repeated .proto.OfflineMsgBin offline_msg_list = 3;
inline int GetOfflineMsgRsp::offline_msg_list_size() const {
  return offline_msg_list_.size();
}
inline void GetOfflineMsgRsp::clear_offline_msg_list() {
  offline_msg_list_.Clear();
}
inline const ::proto::OfflineMsgBin& GetOfflineMsgRsp::offline_msg_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineMsgRsp.offline_msg_list)
  return offline_msg_list_.Get(index);
}
inline ::proto::OfflineMsgBin* GetOfflineMsgRsp::mutable_offline_msg_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetOfflineMsgRsp.offline_msg_list)
  return offline_msg_list_.Mutable(index);
}
inline ::proto::OfflineMsgBin* GetOfflineMsgRsp::add_offline_msg_list() {
  // @@protoc_insertion_point(field_add:proto.GetOfflineMsgRsp.offline_msg_list)
  return offline_msg_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::OfflineMsgBin >*
GetOfflineMsgRsp::mutable_offline_msg_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetOfflineMsgRsp.offline_msg_list)
  return &offline_msg_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::OfflineMsgBin >&
GetOfflineMsgRsp::offline_msg_list() const {
  // @@protoc_insertion_point(field_list:proto.GetOfflineMsgRsp.offline_msg_list)
  return offline_msg_list_;
}

// bool is_login = 4;
inline void GetOfflineMsgRsp::clear_is_login() {
  is_login_ = false;
}
inline bool GetOfflineMsgRsp::is_login() const {
  // @@protoc_insertion_point(field_get:proto.GetOfflineMsgRsp.is_login)
  return is_login_;
}
inline void GetOfflineMsgRsp::set_is_login(bool value) {
  
  is_login_ = value;
  // @@protoc_insertion_point(field_set:proto.GetOfflineMsgRsp.is_login)
}

// -------------------------------------------------------------------

// RemoveOfflineMsgNotify

// uint32 index = 1;
inline void RemoveOfflineMsgNotify::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 RemoveOfflineMsgNotify::index() const {
  // @@protoc_insertion_point(field_get:proto.RemoveOfflineMsgNotify.index)
  return index_;
}
inline void RemoveOfflineMsgNotify::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveOfflineMsgNotify.index)
}

// -------------------------------------------------------------------

// ClearOfflineMsgNotify

// -------------------------------------------------------------------

// UpdateRedisMailReq

// .proto.MailUpdateOpType op_type = 1;
inline void UpdateRedisMailReq::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::MailUpdateOpType UpdateRedisMailReq::op_type() const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedisMailReq.op_type)
  return static_cast< ::proto::MailUpdateOpType >(op_type_);
}
inline void UpdateRedisMailReq::set_op_type(::proto::MailUpdateOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdateRedisMailReq.op_type)
}

// repeated uint32 mail_id_list = 2;
inline int UpdateRedisMailReq::mail_id_list_size() const {
  return mail_id_list_.size();
}
inline void UpdateRedisMailReq::clear_mail_id_list() {
  mail_id_list_.Clear();
}
inline ::google::protobuf::uint32 UpdateRedisMailReq::mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedisMailReq.mail_id_list)
  return mail_id_list_.Get(index);
}
inline void UpdateRedisMailReq::set_mail_id_list(int index, ::google::protobuf::uint32 value) {
  mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UpdateRedisMailReq.mail_id_list)
}
inline void UpdateRedisMailReq::add_mail_id_list(::google::protobuf::uint32 value) {
  mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UpdateRedisMailReq.mail_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdateRedisMailReq::mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdateRedisMailReq.mail_id_list)
  return mail_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdateRedisMailReq::mutable_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdateRedisMailReq.mail_id_list)
  return &mail_id_list_;
}

// -------------------------------------------------------------------

// UpdateRedisMailRsp

// int32 retcode = 1;
inline void UpdateRedisMailRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 UpdateRedisMailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedisMailRsp.retcode)
  return retcode_;
}
inline void UpdateRedisMailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdateRedisMailRsp.retcode)
}

// .proto.MailUpdateOpType op_type = 2;
inline void UpdateRedisMailRsp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::MailUpdateOpType UpdateRedisMailRsp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedisMailRsp.op_type)
  return static_cast< ::proto::MailUpdateOpType >(op_type_);
}
inline void UpdateRedisMailRsp::set_op_type(::proto::MailUpdateOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.UpdateRedisMailRsp.op_type)
}

// repeated uint32 mail_id_list = 3;
inline int UpdateRedisMailRsp::mail_id_list_size() const {
  return mail_id_list_.size();
}
inline void UpdateRedisMailRsp::clear_mail_id_list() {
  mail_id_list_.Clear();
}
inline ::google::protobuf::uint32 UpdateRedisMailRsp::mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedisMailRsp.mail_id_list)
  return mail_id_list_.Get(index);
}
inline void UpdateRedisMailRsp::set_mail_id_list(int index, ::google::protobuf::uint32 value) {
  mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.UpdateRedisMailRsp.mail_id_list)
}
inline void UpdateRedisMailRsp::add_mail_id_list(::google::protobuf::uint32 value) {
  mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.UpdateRedisMailRsp.mail_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UpdateRedisMailRsp::mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdateRedisMailRsp.mail_id_list)
  return mail_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UpdateRedisMailRsp::mutable_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdateRedisMailRsp.mail_id_list)
  return &mail_id_list_;
}

// -------------------------------------------------------------------

// GetRedisMailTransactionStatusReq

// repeated string transaction_list = 2;
inline int GetRedisMailTransactionStatusReq::transaction_list_size() const {
  return transaction_list_.size();
}
inline void GetRedisMailTransactionStatusReq::clear_transaction_list() {
  transaction_list_.Clear();
}
inline const ::std::string& GetRedisMailTransactionStatusReq::transaction_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailTransactionStatusReq.transaction_list)
  return transaction_list_.Get(index);
}
inline ::std::string* GetRedisMailTransactionStatusReq::mutable_transaction_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetRedisMailTransactionStatusReq.transaction_list)
  return transaction_list_.Mutable(index);
}
inline void GetRedisMailTransactionStatusReq::set_transaction_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.GetRedisMailTransactionStatusReq.transaction_list)
  transaction_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void GetRedisMailTransactionStatusReq::set_transaction_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.GetRedisMailTransactionStatusReq.transaction_list)
  transaction_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void GetRedisMailTransactionStatusReq::set_transaction_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  transaction_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.GetRedisMailTransactionStatusReq.transaction_list)
}
inline void GetRedisMailTransactionStatusReq::set_transaction_list(int index, const char* value, size_t size) {
  transaction_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.GetRedisMailTransactionStatusReq.transaction_list)
}
inline ::std::string* GetRedisMailTransactionStatusReq::add_transaction_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.GetRedisMailTransactionStatusReq.transaction_list)
  return transaction_list_.Add();
}
inline void GetRedisMailTransactionStatusReq::add_transaction_list(const ::std::string& value) {
  transaction_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.GetRedisMailTransactionStatusReq.transaction_list)
}
#if LANG_CXX11
inline void GetRedisMailTransactionStatusReq::add_transaction_list(::std::string&& value) {
  transaction_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.GetRedisMailTransactionStatusReq.transaction_list)
}
#endif
inline void GetRedisMailTransactionStatusReq::add_transaction_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  transaction_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.GetRedisMailTransactionStatusReq.transaction_list)
}
inline void GetRedisMailTransactionStatusReq::add_transaction_list(const char* value, size_t size) {
  transaction_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.GetRedisMailTransactionStatusReq.transaction_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetRedisMailTransactionStatusReq::transaction_list() const {
  // @@protoc_insertion_point(field_list:proto.GetRedisMailTransactionStatusReq.transaction_list)
  return transaction_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetRedisMailTransactionStatusReq::mutable_transaction_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetRedisMailTransactionStatusReq.transaction_list)
  return &transaction_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetRedisMailTransactionStatusRsp

// int32 retcode = 1;
inline void GetRedisMailTransactionStatusRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetRedisMailTransactionStatusRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetRedisMailTransactionStatusRsp.retcode)
  return retcode_;
}
inline void GetRedisMailTransactionStatusRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetRedisMailTransactionStatusRsp.retcode)
}

// map<string, bool> transaction_status_map = 2;
inline int GetRedisMailTransactionStatusRsp::transaction_status_map_size() const {
  return transaction_status_map_.size();
}
inline void GetRedisMailTransactionStatusRsp::clear_transaction_status_map() {
  transaction_status_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, bool >&
GetRedisMailTransactionStatusRsp::transaction_status_map() const {
  // @@protoc_insertion_point(field_map:proto.GetRedisMailTransactionStatusRsp.transaction_status_map)
  return transaction_status_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, bool >*
GetRedisMailTransactionStatusRsp::mutable_transaction_status_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GetRedisMailTransactionStatusRsp.transaction_status_map)
  return transaction_status_map_.MutableMap();
}

// -------------------------------------------------------------------

// ClearUpRedisMailNotify

// -------------------------------------------------------------------

// CleanRedisMailNotify

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ResendRedisMailReq

// map<string, .proto.MailBin> mail_bin_map = 1;
inline int ResendRedisMailReq::mail_bin_map_size() const {
  return mail_bin_map_.size();
}
inline void ResendRedisMailReq::clear_mail_bin_map() {
  mail_bin_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::proto::MailBin >&
ResendRedisMailReq::mail_bin_map() const {
  // @@protoc_insertion_point(field_map:proto.ResendRedisMailReq.mail_bin_map)
  return mail_bin_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::proto::MailBin >*
ResendRedisMailReq::mutable_mail_bin_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ResendRedisMailReq.mail_bin_map)
  return mail_bin_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ResendRedisMailRsp

// int32 retcode = 1;
inline void ResendRedisMailRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 ResendRedisMailRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.ResendRedisMailRsp.retcode)
  return retcode_;
}
inline void ResendRedisMailRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ResendRedisMailRsp.retcode)
}

// map<string, bool> resend_status_map = 2;
inline int ResendRedisMailRsp::resend_status_map_size() const {
  return resend_status_map_.size();
}
inline void ResendRedisMailRsp::clear_resend_status_map() {
  resend_status_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, bool >&
ResendRedisMailRsp::resend_status_map() const {
  // @@protoc_insertion_point(field_map:proto.ResendRedisMailRsp.resend_status_map)
  return resend_status_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, bool >*
ResendRedisMailRsp::mutable_resend_status_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ResendRedisMailRsp.resend_status_map)
  return resend_status_map_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fonly_2fcmd_5fmail_2eserver_2eproto__INCLUDED
