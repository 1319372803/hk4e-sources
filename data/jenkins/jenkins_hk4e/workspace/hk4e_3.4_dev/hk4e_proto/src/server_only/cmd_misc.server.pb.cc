// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_misc.server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_only/cmd_misc.server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class StopServerConfigNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StopServerConfigNotify>
     _instance;
} _StopServerConfigNotify_default_instance_;
class NodeserverConnectedAndRegisteredNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<NodeserverConnectedAndRegisteredNotify>
     _instance;
} _NodeserverConnectedAndRegisteredNotify_default_instance_;
class MultiPlayerMsgDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MultiPlayerMsg>
     _instance;
} _MultiPlayerMsg_default_instance_;
class AddGateserverNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<AddGateserverNotify>
     _instance;
} _AddGateserverNotify_default_instance_;
class RegisterServiceNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RegisterServiceNotify>
     _instance;
} _RegisterServiceNotify_default_instance_;
class PlayerTransferNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerTransferNotify>
     _instance;
} _PlayerTransferNotify_default_instance_;
class PacketCountInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PacketCountInfo>
     _instance;
} _PacketCountInfo_default_instance_;
class PacketFreqencyExceedNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PacketFreqencyExceedNotify>
     _instance;
} _PacketFreqencyExceedNotify_default_instance_;
class SceneAsyncLoadGroupBatchNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SceneAsyncLoadGroupBatchNotify>
     _instance;
} _SceneAsyncLoadGroupBatchNotify_default_instance_;
class CrcVersionConfigDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CrcVersionConfig>
     _instance;
} _CrcVersionConfig_default_instance_;
class ClientVersionSyncNotify_ResVersionConfigMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientVersionSyncNotify::ClientVersionSyncNotify_ResVersionConfigMapEntry>
     _instance;
} _ClientVersionSyncNotify_ResVersionConfigMapEntry_default_instance_;
class ClientVersionSyncNotify_CrcVersionConfigMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientVersionSyncNotify::ClientVersionSyncNotify_CrcVersionConfigMapEntry>
     _instance;
} _ClientVersionSyncNotify_CrcVersionConfigMapEntry_default_instance_;
class ClientVersionSyncNotify_NextResVersionConfigMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientVersionSyncNotify::ClientVersionSyncNotify_NextResVersionConfigMapEntry>
     _instance;
} _ClientVersionSyncNotify_NextResVersionConfigMapEntry_default_instance_;
class ClientVersionSyncNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ClientVersionSyncNotify>
     _instance;
} _ClientVersionSyncNotify_default_instance_;
class RegisterServiceSuccessNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RegisterServiceSuccessNotify>
     _instance;
} _RegisterServiceSuccessNotify_default_instance_;
class ReloadConfigNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ReloadConfigNotify>
     _instance;
} _ReloadConfigNotify_default_instance_;
class MultiserverServiceTypeNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MultiserverServiceTypeNotify>
     _instance;
} _MultiserverServiceTypeNotify_default_instance_;
class MatchServiceStopNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchServiceStopNotify>
     _instance;
} _MatchServiceStopNotify_default_instance_;
class MatchServiceStopImplementNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MatchServiceStopImplementNotify>
     _instance;
} _MatchServiceStopImplementNotify_default_instance_;
class ServerBlockPlayerMpNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerBlockPlayerMpNotify>
     _instance;
} _ServerBlockPlayerMpNotify_default_instance_;
class ServerBlockPlayerChatNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerBlockPlayerChatNotify>
     _instance;
} _ServerBlockPlayerChatNotify_default_instance_;
class ServerCheckSegmentCrcNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerCheckSegmentCrcNotify>
     _instance;
} _ServerCheckSegmentCrcNotify_default_instance_;

namespace protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[22];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopServerConfigNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeserverConnectedAndRegisteredNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeserverConnectedAndRegisteredNotify, nodeserver_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiPlayerMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiPlayerMsg, uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiPlayerMsg, proto_bin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGateserverNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGateserverNotify, listen_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGateserverNotify, outer_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGateserverNotify, use_domain_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddGateserverNotify, domain_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterServiceNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterServiceNotify, service_type_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTransferNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTransferNotify, transfer_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTransferNotify, target_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTransferNotify, target_home_owner_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTransferNotify, target_home_gameserver_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerTransferNotify, target_home_param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketCountInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketCountInfo, cmd_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketCountInfo, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketFreqencyExceedNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketFreqencyExceedNotify, packet_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketFreqencyExceedNotify, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PacketFreqencyExceedNotify, packet_count_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SceneAsyncLoadGroupBatchNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrcVersionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CrcVersionConfig, client_version_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientVersionSyncNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientVersionSyncNotify, data_version_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientVersionSyncNotify, res_version_config_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientVersionSyncNotify, crc_version_config_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientVersionSyncNotify, next_res_version_config_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterServiceSuccessNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReloadConfigNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiserverServiceTypeNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MultiserverServiceTypeNotify, service_type_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchServiceStopNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchServiceStopNotify, server_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchServiceStopImplementNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MatchServiceStopImplementNotify, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBlockPlayerMpNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBlockPlayerMpNotify, is_unlock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBlockPlayerMpNotify, end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBlockPlayerChatNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBlockPlayerChatNotify, is_unlock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerBlockPlayerChatNotify, end_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerCheckSegmentCrcNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(StopServerConfigNotify)},
  { 5, -1, sizeof(NodeserverConnectedAndRegisteredNotify)},
  { 11, -1, sizeof(MultiPlayerMsg)},
  { 18, -1, sizeof(AddGateserverNotify)},
  { 27, -1, sizeof(RegisterServiceNotify)},
  { 33, -1, sizeof(PlayerTransferNotify)},
  { 43, -1, sizeof(PacketCountInfo)},
  { 50, -1, sizeof(PacketFreqencyExceedNotify)},
  { 58, -1, sizeof(SceneAsyncLoadGroupBatchNotify)},
  { 63, -1, sizeof(CrcVersionConfig)},
  { 69, -1, sizeof(ClientVersionSyncNotify)},
  { 78, -1, sizeof(RegisterServiceSuccessNotify)},
  { 83, -1, sizeof(ReloadConfigNotify)},
  { 88, -1, sizeof(MultiserverServiceTypeNotify)},
  { 94, -1, sizeof(MatchServiceStopNotify)},
  { 100, -1, sizeof(MatchServiceStopImplementNotify)},
  { 106, -1, sizeof(ServerBlockPlayerMpNotify)},
  { 113, -1, sizeof(ServerBlockPlayerChatNotify)},
  { 120, -1, sizeof(ServerCheckSegmentCrcNotify)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_StopServerConfigNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NodeserverConnectedAndRegisteredNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MultiPlayerMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddGateserverNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterServiceNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerTransferNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PacketCountInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PacketFreqencyExceedNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SceneAsyncLoadGroupBatchNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CrcVersionConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientVersionSyncNotify_ResVersionConfigMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientVersionSyncNotify_CrcVersionConfigMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientVersionSyncNotify_NextResVersionConfigMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientVersionSyncNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterServiceSuccessNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReloadConfigNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MultiserverServiceTypeNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchServiceStopNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MatchServiceStopImplementNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerBlockPlayerMpNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerBlockPlayerChatNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerCheckSegmentCrcNotify_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "server_only/cmd_misc.server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
file_level_metadata[10].reflection = ClientVersionSyncNotify::ClientVersionSyncNotify_ResVersionConfigMapEntry::CreateReflection(file_level_metadata[10].descriptor, _ClientVersionSyncNotify_ResVersionConfigMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[11].reflection = ClientVersionSyncNotify::ClientVersionSyncNotify_CrcVersionConfigMapEntry::CreateReflection(file_level_metadata[11].descriptor, _ClientVersionSyncNotify_CrcVersionConfigMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[12].reflection = ClientVersionSyncNotify::ClientVersionSyncNotify_NextResVersionConfigMapEntry::CreateReflection(file_level_metadata[12].descriptor, _ClientVersionSyncNotify_NextResVersionConfigMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 22);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  ::proto::protobuf_server_5fonly_2fconfig_2eserver_2eproto::InitDefaults();
  _StopServerConfigNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StopServerConfigNotify_default_instance_);_NodeserverConnectedAndRegisteredNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_NodeserverConnectedAndRegisteredNotify_default_instance_);_MultiPlayerMsg_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MultiPlayerMsg_default_instance_);_AddGateserverNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_AddGateserverNotify_default_instance_);_RegisterServiceNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RegisterServiceNotify_default_instance_);_PlayerTransferNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerTransferNotify_default_instance_);_PacketCountInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PacketCountInfo_default_instance_);_PacketFreqencyExceedNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PacketFreqencyExceedNotify_default_instance_);_SceneAsyncLoadGroupBatchNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SceneAsyncLoadGroupBatchNotify_default_instance_);_CrcVersionConfig_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CrcVersionConfig_default_instance_);_ClientVersionSyncNotify_ResVersionConfigMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientVersionSyncNotify_ResVersionConfigMapEntry_default_instance_);_ClientVersionSyncNotify_CrcVersionConfigMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientVersionSyncNotify_CrcVersionConfigMapEntry_default_instance_);_ClientVersionSyncNotify_NextResVersionConfigMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientVersionSyncNotify_NextResVersionConfigMapEntry_default_instance_);_ClientVersionSyncNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ClientVersionSyncNotify_default_instance_);_RegisterServiceSuccessNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RegisterServiceSuccessNotify_default_instance_);_ReloadConfigNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ReloadConfigNotify_default_instance_);_MultiserverServiceTypeNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MultiserverServiceTypeNotify_default_instance_);_MatchServiceStopNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchServiceStopNotify_default_instance_);_MatchServiceStopImplementNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MatchServiceStopImplementNotify_default_instance_);_ServerBlockPlayerMpNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerBlockPlayerMpNotify_default_instance_);_ServerBlockPlayerChatNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerBlockPlayerChatNotify_default_instance_);_ServerCheckSegmentCrcNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerCheckSegmentCrcNotify_default_instance_);_ClientVersionSyncNotify_ResVersionConfigMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ClientVersionSyncNotify_ResVersionConfigMapEntry_default_instance_._instance.get_mutable());
  _ClientVersionSyncNotify_ResVersionConfigMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ClientVersionSyncNotify_CrcVersionConfigMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ClientVersionSyncNotify_CrcVersionConfigMapEntry_default_instance_._instance.get_mutable());
  _ClientVersionSyncNotify_CrcVersionConfigMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ClientVersionSyncNotify_NextResVersionConfigMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_ClientVersionSyncNotify_NextResVersionConfigMapEntry_default_instance_._instance.get_mutable());
  _ClientVersionSyncNotify_NextResVersionConfigMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _ClientVersionSyncNotify_default_instance_._instance.get_mutable()->data_version_config_ = const_cast< ::proto::DataVersionConfig*>(
      ::proto::DataVersionConfig::internal_default_instance());
  _MatchServiceStopImplementNotify_default_instance_._instance.get_mutable()->msg_ = const_cast< ::proto::MatchServiceStopNotify*>(
      ::proto::MatchServiceStopNotify::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!server_only/cmd_misc.server.proto\022\005pro"
      "to\032\014define.proto\032\037server_only/config.ser"
      "ver.proto\"\030\n\026StopServerConfigNotify\"\?\n&N"
      "odeserverConnectedAndRegisteredNotify\022\025\n"
      "\rnodeserver_id\030\001 \001(\r\"5\n\016MultiPlayerMsg\022\020"
      "\n\010uid_list\030\001 \003(\r\022\021\n\tproto_bin\030\002 \001(\014\"j\n\023A"
      "ddGateserverNotify\022\023\n\013listen_port\030\001 \001(\r\022"
      "\020\n\010outer_ip\030\002 \001(\r\022\027\n\017use_domain_name\030\003 \001"
      "(\010\022\023\n\013domain_name\030\004 \001(\t\"F\n\025RegisterServi"
      "ceNotify\022-\n\021service_type_list\030\001 \003(\0162\022.pr"
      "oto.ServiceType\"\235\001\n\024PlayerTransferNotify"
      "\022\024\n\014transfer_uid\030\001 \001(\r\022\022\n\ntarget_uid\030\002 \001"
      "(\r\022\035\n\025target_home_owner_uid\030\003 \001(\r\022!\n\031tar"
      "get_home_gameserver_id\030\004 \001(\r\022\031\n\021target_h"
      "ome_param\030\005 \001(\r\"0\n\017PacketCountInfo\022\016\n\006cm"
      "d_id\030\001 \001(\r\022\r\n\005count\030\002 \001(\r\"w\n\032PacketFreqe"
      "ncyExceedNotify\022\024\n\014packet_count\030\001 \001(\r\022\020\n"
      "\010interval\030\002 \001(\r\0221\n\021packet_count_list\030\003 \003"
      "(\0132\026.proto.PacketCountInfo\" \n\036SceneAsync"
      "LoadGroupBatchNotify\"/\n\020CrcVersionConfig"
      "\022\033\n\023client_version_list\030\001 \003(\t\"\347\004\n\027Client"
      "VersionSyncNotify\0225\n\023data_version_config"
      "\030\001 \001(\0132\030.proto.DataVersionConfig\022W\n\026res_"
      "version_config_map\030\002 \003(\01327.proto.ClientV"
      "ersionSyncNotify.ResVersionConfigMapEntr"
      "y\022W\n\026crc_version_config_map\030\003 \003(\01327.prot"
      "o.ClientVersionSyncNotify.CrcVersionConf"
      "igMapEntry\022`\n\033next_res_version_config_ma"
      "p\030\004 \003(\0132;.proto.ClientVersionSyncNotify."
      "NextResVersionConfigMapEntry\032S\n\030ResVersi"
      "onConfigMapEntry\022\013\n\003key\030\001 \001(\r\022&\n\005value\030\002"
      " \001(\0132\027.proto.ResVersionConfig:\0028\001\032S\n\030Crc"
      "VersionConfigMapEntry\022\013\n\003key\030\001 \001(\r\022&\n\005va"
      "lue\030\002 \001(\0132\027.proto.CrcVersionConfig:\0028\001\032W"
      "\n\034NextResVersionConfigMapEntry\022\013\n\003key\030\001 "
      "\001(\r\022&\n\005value\030\002 \001(\0132\027.proto.ResVersionCon"
      "fig:\0028\001\"\036\n\034RegisterServiceSuccessNotify\""
      "\024\n\022ReloadConfigNotify\"M\n\034MultiserverServ"
      "iceTypeNotify\022-\n\021service_type_list\030\001 \003(\016"
      "2\022.proto.ServiceType\"+\n\026MatchServiceStop"
      "Notify\022\021\n\tserver_id\030\001 \001(\r\"M\n\037MatchServic"
      "eStopImplementNotify\022*\n\003msg\030\001 \001(\0132\035.prot"
      "o.MatchServiceStopNotify\"@\n\031ServerBlockP"
      "layerMpNotify\022\021\n\tis_unlock\030\001 \001(\010\022\020\n\010end_"
      "time\030\002 \001(\r\"B\n\033ServerBlockPlayerChatNotif"
      "y\022\021\n\tis_unlock\030\001 \001(\010\022\020\n\010end_time\030\002 \001(\r\"\035"
      "\n\033ServerCheckSegmentCrcNotifyB(Z&github."
      "com/teyvat-helper/hk4e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1919);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_only/cmd_misc.server.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
  ::proto::protobuf_server_5fonly_2fconfig_2eserver_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopServerConfigNotify::StopServerConfigNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.StopServerConfigNotify)
}
StopServerConfigNotify::StopServerConfigNotify(const StopServerConfigNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.StopServerConfigNotify)
}

void StopServerConfigNotify::SharedCtor() {
  _cached_size_ = 0;
}

StopServerConfigNotify::~StopServerConfigNotify() {
  // @@protoc_insertion_point(destructor:proto.StopServerConfigNotify)
  SharedDtor();
}

void StopServerConfigNotify::SharedDtor() {
}

void StopServerConfigNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopServerConfigNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StopServerConfigNotify& StopServerConfigNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

StopServerConfigNotify* StopServerConfigNotify::New(::google::protobuf::Arena* arena) const {
  StopServerConfigNotify* n = new StopServerConfigNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopServerConfigNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.StopServerConfigNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool StopServerConfigNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.StopServerConfigNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.StopServerConfigNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.StopServerConfigNotify)
  return false;
#undef DO_
}

void StopServerConfigNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.StopServerConfigNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.StopServerConfigNotify)
}

::google::protobuf::uint8* StopServerConfigNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.StopServerConfigNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.StopServerConfigNotify)
  return target;
}

size_t StopServerConfigNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.StopServerConfigNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopServerConfigNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.StopServerConfigNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const StopServerConfigNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopServerConfigNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.StopServerConfigNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.StopServerConfigNotify)
    MergeFrom(*source);
  }
}

void StopServerConfigNotify::MergeFrom(const StopServerConfigNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.StopServerConfigNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void StopServerConfigNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.StopServerConfigNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopServerConfigNotify::CopyFrom(const StopServerConfigNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.StopServerConfigNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopServerConfigNotify::IsInitialized() const {
  return true;
}

void StopServerConfigNotify::Swap(StopServerConfigNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopServerConfigNotify::InternalSwap(StopServerConfigNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StopServerConfigNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StopServerConfigNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeserverConnectedAndRegisteredNotify::kNodeserverIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeserverConnectedAndRegisteredNotify::NodeserverConnectedAndRegisteredNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.NodeserverConnectedAndRegisteredNotify)
}
NodeserverConnectedAndRegisteredNotify::NodeserverConnectedAndRegisteredNotify(const NodeserverConnectedAndRegisteredNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nodeserver_id_ = from.nodeserver_id_;
  // @@protoc_insertion_point(copy_constructor:proto.NodeserverConnectedAndRegisteredNotify)
}

void NodeserverConnectedAndRegisteredNotify::SharedCtor() {
  nodeserver_id_ = 0u;
  _cached_size_ = 0;
}

NodeserverConnectedAndRegisteredNotify::~NodeserverConnectedAndRegisteredNotify() {
  // @@protoc_insertion_point(destructor:proto.NodeserverConnectedAndRegisteredNotify)
  SharedDtor();
}

void NodeserverConnectedAndRegisteredNotify::SharedDtor() {
}

void NodeserverConnectedAndRegisteredNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeserverConnectedAndRegisteredNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NodeserverConnectedAndRegisteredNotify& NodeserverConnectedAndRegisteredNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

NodeserverConnectedAndRegisteredNotify* NodeserverConnectedAndRegisteredNotify::New(::google::protobuf::Arena* arena) const {
  NodeserverConnectedAndRegisteredNotify* n = new NodeserverConnectedAndRegisteredNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeserverConnectedAndRegisteredNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.NodeserverConnectedAndRegisteredNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodeserver_id_ = 0u;
  _internal_metadata_.Clear();
}

bool NodeserverConnectedAndRegisteredNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.NodeserverConnectedAndRegisteredNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 nodeserver_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nodeserver_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.NodeserverConnectedAndRegisteredNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.NodeserverConnectedAndRegisteredNotify)
  return false;
#undef DO_
}

void NodeserverConnectedAndRegisteredNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.NodeserverConnectedAndRegisteredNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 nodeserver_id = 1;
  if (this->nodeserver_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->nodeserver_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.NodeserverConnectedAndRegisteredNotify)
}

::google::protobuf::uint8* NodeserverConnectedAndRegisteredNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.NodeserverConnectedAndRegisteredNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 nodeserver_id = 1;
  if (this->nodeserver_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->nodeserver_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.NodeserverConnectedAndRegisteredNotify)
  return target;
}

size_t NodeserverConnectedAndRegisteredNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.NodeserverConnectedAndRegisteredNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 nodeserver_id = 1;
  if (this->nodeserver_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nodeserver_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeserverConnectedAndRegisteredNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.NodeserverConnectedAndRegisteredNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeserverConnectedAndRegisteredNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeserverConnectedAndRegisteredNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.NodeserverConnectedAndRegisteredNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.NodeserverConnectedAndRegisteredNotify)
    MergeFrom(*source);
  }
}

void NodeserverConnectedAndRegisteredNotify::MergeFrom(const NodeserverConnectedAndRegisteredNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.NodeserverConnectedAndRegisteredNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nodeserver_id() != 0) {
    set_nodeserver_id(from.nodeserver_id());
  }
}

void NodeserverConnectedAndRegisteredNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.NodeserverConnectedAndRegisteredNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeserverConnectedAndRegisteredNotify::CopyFrom(const NodeserverConnectedAndRegisteredNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.NodeserverConnectedAndRegisteredNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeserverConnectedAndRegisteredNotify::IsInitialized() const {
  return true;
}

void NodeserverConnectedAndRegisteredNotify::Swap(NodeserverConnectedAndRegisteredNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeserverConnectedAndRegisteredNotify::InternalSwap(NodeserverConnectedAndRegisteredNotify* other) {
  using std::swap;
  swap(nodeserver_id_, other->nodeserver_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeserverConnectedAndRegisteredNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NodeserverConnectedAndRegisteredNotify

// uint32 nodeserver_id = 1;
void NodeserverConnectedAndRegisteredNotify::clear_nodeserver_id() {
  nodeserver_id_ = 0u;
}
::google::protobuf::uint32 NodeserverConnectedAndRegisteredNotify::nodeserver_id() const {
  // @@protoc_insertion_point(field_get:proto.NodeserverConnectedAndRegisteredNotify.nodeserver_id)
  return nodeserver_id_;
}
void NodeserverConnectedAndRegisteredNotify::set_nodeserver_id(::google::protobuf::uint32 value) {
  
  nodeserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.NodeserverConnectedAndRegisteredNotify.nodeserver_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiPlayerMsg::kUidListFieldNumber;
const int MultiPlayerMsg::kProtoBinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiPlayerMsg::MultiPlayerMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MultiPlayerMsg)
}
MultiPlayerMsg::MultiPlayerMsg(const MultiPlayerMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uid_list_(from.uid_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  proto_bin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.proto_bin().size() > 0) {
    proto_bin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proto_bin_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.MultiPlayerMsg)
}

void MultiPlayerMsg::SharedCtor() {
  proto_bin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MultiPlayerMsg::~MultiPlayerMsg() {
  // @@protoc_insertion_point(destructor:proto.MultiPlayerMsg)
  SharedDtor();
}

void MultiPlayerMsg::SharedDtor() {
  proto_bin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MultiPlayerMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MultiPlayerMsg::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultiPlayerMsg& MultiPlayerMsg::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MultiPlayerMsg* MultiPlayerMsg::New(::google::protobuf::Arena* arena) const {
  MultiPlayerMsg* n = new MultiPlayerMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MultiPlayerMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MultiPlayerMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_list_.Clear();
  proto_bin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MultiPlayerMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MultiPlayerMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uid_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_uid_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes proto_bin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_proto_bin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MultiPlayerMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MultiPlayerMsg)
  return false;
#undef DO_
}

void MultiPlayerMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MultiPlayerMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 uid_list = 1;
  if (this->uid_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uid_list_cached_byte_size_));
  }
  for (int i = 0, n = this->uid_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->uid_list(i), output);
  }

  // bytes proto_bin = 2;
  if (this->proto_bin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->proto_bin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MultiPlayerMsg)
}

::google::protobuf::uint8* MultiPlayerMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MultiPlayerMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 uid_list = 1;
  if (this->uid_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _uid_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->uid_list_, target);
  }

  // bytes proto_bin = 2;
  if (this->proto_bin().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->proto_bin(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MultiPlayerMsg)
  return target;
}

size_t MultiPlayerMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MultiPlayerMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 uid_list = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->uid_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uid_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes proto_bin = 2;
  if (this->proto_bin().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->proto_bin());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MultiPlayerMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MultiPlayerMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiPlayerMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiPlayerMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MultiPlayerMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MultiPlayerMsg)
    MergeFrom(*source);
  }
}

void MultiPlayerMsg::MergeFrom(const MultiPlayerMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MultiPlayerMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uid_list_.MergeFrom(from.uid_list_);
  if (from.proto_bin().size() > 0) {

    proto_bin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proto_bin_);
  }
}

void MultiPlayerMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MultiPlayerMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiPlayerMsg::CopyFrom(const MultiPlayerMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MultiPlayerMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiPlayerMsg::IsInitialized() const {
  return true;
}

void MultiPlayerMsg::Swap(MultiPlayerMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiPlayerMsg::InternalSwap(MultiPlayerMsg* other) {
  using std::swap;
  uid_list_.InternalSwap(&other->uid_list_);
  proto_bin_.Swap(&other->proto_bin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MultiPlayerMsg::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MultiPlayerMsg

// repeated uint32 uid_list = 1;
int MultiPlayerMsg::uid_list_size() const {
  return uid_list_.size();
}
void MultiPlayerMsg::clear_uid_list() {
  uid_list_.Clear();
}
::google::protobuf::uint32 MultiPlayerMsg::uid_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MultiPlayerMsg.uid_list)
  return uid_list_.Get(index);
}
void MultiPlayerMsg::set_uid_list(int index, ::google::protobuf::uint32 value) {
  uid_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MultiPlayerMsg.uid_list)
}
void MultiPlayerMsg::add_uid_list(::google::protobuf::uint32 value) {
  uid_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MultiPlayerMsg.uid_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MultiPlayerMsg::uid_list() const {
  // @@protoc_insertion_point(field_list:proto.MultiPlayerMsg.uid_list)
  return uid_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MultiPlayerMsg::mutable_uid_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MultiPlayerMsg.uid_list)
  return &uid_list_;
}

// bytes proto_bin = 2;
void MultiPlayerMsg::clear_proto_bin() {
  proto_bin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MultiPlayerMsg::proto_bin() const {
  // @@protoc_insertion_point(field_get:proto.MultiPlayerMsg.proto_bin)
  return proto_bin_.GetNoArena();
}
void MultiPlayerMsg::set_proto_bin(const ::std::string& value) {
  
  proto_bin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MultiPlayerMsg.proto_bin)
}
#if LANG_CXX11
void MultiPlayerMsg::set_proto_bin(::std::string&& value) {
  
  proto_bin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MultiPlayerMsg.proto_bin)
}
#endif
void MultiPlayerMsg::set_proto_bin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  proto_bin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MultiPlayerMsg.proto_bin)
}
void MultiPlayerMsg::set_proto_bin(const void* value, size_t size) {
  
  proto_bin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MultiPlayerMsg.proto_bin)
}
::std::string* MultiPlayerMsg::mutable_proto_bin() {
  
  // @@protoc_insertion_point(field_mutable:proto.MultiPlayerMsg.proto_bin)
  return proto_bin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MultiPlayerMsg::release_proto_bin() {
  // @@protoc_insertion_point(field_release:proto.MultiPlayerMsg.proto_bin)
  
  return proto_bin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MultiPlayerMsg::set_allocated_proto_bin(::std::string* proto_bin) {
  if (proto_bin != NULL) {
    
  } else {
    
  }
  proto_bin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proto_bin);
  // @@protoc_insertion_point(field_set_allocated:proto.MultiPlayerMsg.proto_bin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddGateserverNotify::kListenPortFieldNumber;
const int AddGateserverNotify::kOuterIpFieldNumber;
const int AddGateserverNotify::kUseDomainNameFieldNumber;
const int AddGateserverNotify::kDomainNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddGateserverNotify::AddGateserverNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.AddGateserverNotify)
}
AddGateserverNotify::AddGateserverNotify(const AddGateserverNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  domain_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain_name().size() > 0) {
    domain_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_name_);
  }
  ::memcpy(&listen_port_, &from.listen_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_domain_name_) -
    reinterpret_cast<char*>(&listen_port_)) + sizeof(use_domain_name_));
  // @@protoc_insertion_point(copy_constructor:proto.AddGateserverNotify)
}

void AddGateserverNotify::SharedCtor() {
  domain_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&listen_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_domain_name_) -
      reinterpret_cast<char*>(&listen_port_)) + sizeof(use_domain_name_));
  _cached_size_ = 0;
}

AddGateserverNotify::~AddGateserverNotify() {
  // @@protoc_insertion_point(destructor:proto.AddGateserverNotify)
  SharedDtor();
}

void AddGateserverNotify::SharedDtor() {
  domain_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddGateserverNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddGateserverNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddGateserverNotify& AddGateserverNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddGateserverNotify* AddGateserverNotify::New(::google::protobuf::Arena* arena) const {
  AddGateserverNotify* n = new AddGateserverNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddGateserverNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.AddGateserverNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  domain_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&listen_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_domain_name_) -
      reinterpret_cast<char*>(&listen_port_)) + sizeof(use_domain_name_));
  _internal_metadata_.Clear();
}

bool AddGateserverNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.AddGateserverNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 listen_port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &listen_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 outer_ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &outer_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_domain_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_domain_name_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string domain_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain_name().data(), static_cast<int>(this->domain_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.AddGateserverNotify.domain_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.AddGateserverNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.AddGateserverNotify)
  return false;
#undef DO_
}

void AddGateserverNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.AddGateserverNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 listen_port = 1;
  if (this->listen_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->listen_port(), output);
  }

  // uint32 outer_ip = 2;
  if (this->outer_ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->outer_ip(), output);
  }

  // bool use_domain_name = 3;
  if (this->use_domain_name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->use_domain_name(), output);
  }

  // string domain_name = 4;
  if (this->domain_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain_name().data(), static_cast<int>(this->domain_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AddGateserverNotify.domain_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->domain_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.AddGateserverNotify)
}

::google::protobuf::uint8* AddGateserverNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.AddGateserverNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 listen_port = 1;
  if (this->listen_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->listen_port(), target);
  }

  // uint32 outer_ip = 2;
  if (this->outer_ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->outer_ip(), target);
  }

  // bool use_domain_name = 3;
  if (this->use_domain_name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->use_domain_name(), target);
  }

  // string domain_name = 4;
  if (this->domain_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain_name().data(), static_cast<int>(this->domain_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.AddGateserverNotify.domain_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->domain_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.AddGateserverNotify)
  return target;
}

size_t AddGateserverNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.AddGateserverNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string domain_name = 4;
  if (this->domain_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain_name());
  }

  // uint32 listen_port = 1;
  if (this->listen_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->listen_port());
  }

  // uint32 outer_ip = 2;
  if (this->outer_ip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->outer_ip());
  }

  // bool use_domain_name = 3;
  if (this->use_domain_name() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddGateserverNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.AddGateserverNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const AddGateserverNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddGateserverNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.AddGateserverNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.AddGateserverNotify)
    MergeFrom(*source);
  }
}

void AddGateserverNotify::MergeFrom(const AddGateserverNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.AddGateserverNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.domain_name().size() > 0) {

    domain_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_name_);
  }
  if (from.listen_port() != 0) {
    set_listen_port(from.listen_port());
  }
  if (from.outer_ip() != 0) {
    set_outer_ip(from.outer_ip());
  }
  if (from.use_domain_name() != 0) {
    set_use_domain_name(from.use_domain_name());
  }
}

void AddGateserverNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.AddGateserverNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddGateserverNotify::CopyFrom(const AddGateserverNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.AddGateserverNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddGateserverNotify::IsInitialized() const {
  return true;
}

void AddGateserverNotify::Swap(AddGateserverNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddGateserverNotify::InternalSwap(AddGateserverNotify* other) {
  using std::swap;
  domain_name_.Swap(&other->domain_name_);
  swap(listen_port_, other->listen_port_);
  swap(outer_ip_, other->outer_ip_);
  swap(use_domain_name_, other->use_domain_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddGateserverNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddGateserverNotify

// uint32 listen_port = 1;
void AddGateserverNotify::clear_listen_port() {
  listen_port_ = 0u;
}
::google::protobuf::uint32 AddGateserverNotify::listen_port() const {
  // @@protoc_insertion_point(field_get:proto.AddGateserverNotify.listen_port)
  return listen_port_;
}
void AddGateserverNotify::set_listen_port(::google::protobuf::uint32 value) {
  
  listen_port_ = value;
  // @@protoc_insertion_point(field_set:proto.AddGateserverNotify.listen_port)
}

// uint32 outer_ip = 2;
void AddGateserverNotify::clear_outer_ip() {
  outer_ip_ = 0u;
}
::google::protobuf::uint32 AddGateserverNotify::outer_ip() const {
  // @@protoc_insertion_point(field_get:proto.AddGateserverNotify.outer_ip)
  return outer_ip_;
}
void AddGateserverNotify::set_outer_ip(::google::protobuf::uint32 value) {
  
  outer_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.AddGateserverNotify.outer_ip)
}

// bool use_domain_name = 3;
void AddGateserverNotify::clear_use_domain_name() {
  use_domain_name_ = false;
}
bool AddGateserverNotify::use_domain_name() const {
  // @@protoc_insertion_point(field_get:proto.AddGateserverNotify.use_domain_name)
  return use_domain_name_;
}
void AddGateserverNotify::set_use_domain_name(bool value) {
  
  use_domain_name_ = value;
  // @@protoc_insertion_point(field_set:proto.AddGateserverNotify.use_domain_name)
}

// string domain_name = 4;
void AddGateserverNotify::clear_domain_name() {
  domain_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddGateserverNotify::domain_name() const {
  // @@protoc_insertion_point(field_get:proto.AddGateserverNotify.domain_name)
  return domain_name_.GetNoArena();
}
void AddGateserverNotify::set_domain_name(const ::std::string& value) {
  
  domain_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AddGateserverNotify.domain_name)
}
#if LANG_CXX11
void AddGateserverNotify::set_domain_name(::std::string&& value) {
  
  domain_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AddGateserverNotify.domain_name)
}
#endif
void AddGateserverNotify::set_domain_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  domain_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AddGateserverNotify.domain_name)
}
void AddGateserverNotify::set_domain_name(const char* value, size_t size) {
  
  domain_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AddGateserverNotify.domain_name)
}
::std::string* AddGateserverNotify::mutable_domain_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.AddGateserverNotify.domain_name)
  return domain_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddGateserverNotify::release_domain_name() {
  // @@protoc_insertion_point(field_release:proto.AddGateserverNotify.domain_name)
  
  return domain_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddGateserverNotify::set_allocated_domain_name(::std::string* domain_name) {
  if (domain_name != NULL) {
    
  } else {
    
  }
  domain_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain_name);
  // @@protoc_insertion_point(field_set_allocated:proto.AddGateserverNotify.domain_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterServiceNotify::kServiceTypeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterServiceNotify::RegisterServiceNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RegisterServiceNotify)
}
RegisterServiceNotify::RegisterServiceNotify(const RegisterServiceNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      service_type_list_(from.service_type_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.RegisterServiceNotify)
}

void RegisterServiceNotify::SharedCtor() {
  _cached_size_ = 0;
}

RegisterServiceNotify::~RegisterServiceNotify() {
  // @@protoc_insertion_point(destructor:proto.RegisterServiceNotify)
  SharedDtor();
}

void RegisterServiceNotify::SharedDtor() {
}

void RegisterServiceNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterServiceNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterServiceNotify& RegisterServiceNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterServiceNotify* RegisterServiceNotify::New(::google::protobuf::Arena* arena) const {
  RegisterServiceNotify* n = new RegisterServiceNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterServiceNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RegisterServiceNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_type_list_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterServiceNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RegisterServiceNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ServiceType service_type_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_service_type_list(static_cast< ::proto::ServiceType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_service_type_list(static_cast< ::proto::ServiceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RegisterServiceNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RegisterServiceNotify)
  return false;
#undef DO_
}

void RegisterServiceNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RegisterServiceNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ServiceType service_type_list = 1;
  if (this->service_type_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_service_type_list_cached_byte_size_));
  }
  for (int i = 0, n = this->service_type_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->service_type_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RegisterServiceNotify)
}

::google::protobuf::uint8* RegisterServiceNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RegisterServiceNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ServiceType service_type_list = 1;
  if (this->service_type_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _service_type_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->service_type_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RegisterServiceNotify)
  return target;
}

size_t RegisterServiceNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RegisterServiceNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ServiceType service_type_list = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->service_type_list_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->service_type_list(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _service_type_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterServiceNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RegisterServiceNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterServiceNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterServiceNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RegisterServiceNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RegisterServiceNotify)
    MergeFrom(*source);
  }
}

void RegisterServiceNotify::MergeFrom(const RegisterServiceNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RegisterServiceNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_type_list_.MergeFrom(from.service_type_list_);
}

void RegisterServiceNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RegisterServiceNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterServiceNotify::CopyFrom(const RegisterServiceNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RegisterServiceNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterServiceNotify::IsInitialized() const {
  return true;
}

void RegisterServiceNotify::Swap(RegisterServiceNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterServiceNotify::InternalSwap(RegisterServiceNotify* other) {
  using std::swap;
  service_type_list_.InternalSwap(&other->service_type_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterServiceNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterServiceNotify

// repeated .proto.ServiceType service_type_list = 1;
int RegisterServiceNotify::service_type_list_size() const {
  return service_type_list_.size();
}
void RegisterServiceNotify::clear_service_type_list() {
  service_type_list_.Clear();
}
::proto::ServiceType RegisterServiceNotify::service_type_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.RegisterServiceNotify.service_type_list)
  return static_cast< ::proto::ServiceType >(service_type_list_.Get(index));
}
void RegisterServiceNotify::set_service_type_list(int index, ::proto::ServiceType value) {
  service_type_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.RegisterServiceNotify.service_type_list)
}
void RegisterServiceNotify::add_service_type_list(::proto::ServiceType value) {
  service_type_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.RegisterServiceNotify.service_type_list)
}
const ::google::protobuf::RepeatedField<int>&
RegisterServiceNotify::service_type_list() const {
  // @@protoc_insertion_point(field_list:proto.RegisterServiceNotify.service_type_list)
  return service_type_list_;
}
::google::protobuf::RepeatedField<int>*
RegisterServiceNotify::mutable_service_type_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.RegisterServiceNotify.service_type_list)
  return &service_type_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerTransferNotify::kTransferUidFieldNumber;
const int PlayerTransferNotify::kTargetUidFieldNumber;
const int PlayerTransferNotify::kTargetHomeOwnerUidFieldNumber;
const int PlayerTransferNotify::kTargetHomeGameserverIdFieldNumber;
const int PlayerTransferNotify::kTargetHomeParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerTransferNotify::PlayerTransferNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerTransferNotify)
}
PlayerTransferNotify::PlayerTransferNotify(const PlayerTransferNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&transfer_uid_, &from.transfer_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&target_home_param_) -
    reinterpret_cast<char*>(&transfer_uid_)) + sizeof(target_home_param_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerTransferNotify)
}

void PlayerTransferNotify::SharedCtor() {
  ::memset(&transfer_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_home_param_) -
      reinterpret_cast<char*>(&transfer_uid_)) + sizeof(target_home_param_));
  _cached_size_ = 0;
}

PlayerTransferNotify::~PlayerTransferNotify() {
  // @@protoc_insertion_point(destructor:proto.PlayerTransferNotify)
  SharedDtor();
}

void PlayerTransferNotify::SharedDtor() {
}

void PlayerTransferNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerTransferNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerTransferNotify& PlayerTransferNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerTransferNotify* PlayerTransferNotify::New(::google::protobuf::Arena* arena) const {
  PlayerTransferNotify* n = new PlayerTransferNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerTransferNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerTransferNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&transfer_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&target_home_param_) -
      reinterpret_cast<char*>(&transfer_uid_)) + sizeof(target_home_param_));
  _internal_metadata_.Clear();
}

bool PlayerTransferNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerTransferNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 transfer_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &transfer_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_home_owner_uid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_home_owner_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_home_gameserver_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_home_gameserver_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 target_home_param = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &target_home_param_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerTransferNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerTransferNotify)
  return false;
#undef DO_
}

void PlayerTransferNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerTransferNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 transfer_uid = 1;
  if (this->transfer_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->transfer_uid(), output);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->target_uid(), output);
  }

  // uint32 target_home_owner_uid = 3;
  if (this->target_home_owner_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->target_home_owner_uid(), output);
  }

  // uint32 target_home_gameserver_id = 4;
  if (this->target_home_gameserver_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->target_home_gameserver_id(), output);
  }

  // uint32 target_home_param = 5;
  if (this->target_home_param() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->target_home_param(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerTransferNotify)
}

::google::protobuf::uint8* PlayerTransferNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerTransferNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 transfer_uid = 1;
  if (this->transfer_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->transfer_uid(), target);
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->target_uid(), target);
  }

  // uint32 target_home_owner_uid = 3;
  if (this->target_home_owner_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->target_home_owner_uid(), target);
  }

  // uint32 target_home_gameserver_id = 4;
  if (this->target_home_gameserver_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->target_home_gameserver_id(), target);
  }

  // uint32 target_home_param = 5;
  if (this->target_home_param() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->target_home_param(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerTransferNotify)
  return target;
}

size_t PlayerTransferNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerTransferNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 transfer_uid = 1;
  if (this->transfer_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->transfer_uid());
  }

  // uint32 target_uid = 2;
  if (this->target_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_uid());
  }

  // uint32 target_home_owner_uid = 3;
  if (this->target_home_owner_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_home_owner_uid());
  }

  // uint32 target_home_gameserver_id = 4;
  if (this->target_home_gameserver_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_home_gameserver_id());
  }

  // uint32 target_home_param = 5;
  if (this->target_home_param() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->target_home_param());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerTransferNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerTransferNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerTransferNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerTransferNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerTransferNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerTransferNotify)
    MergeFrom(*source);
  }
}

void PlayerTransferNotify::MergeFrom(const PlayerTransferNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerTransferNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.transfer_uid() != 0) {
    set_transfer_uid(from.transfer_uid());
  }
  if (from.target_uid() != 0) {
    set_target_uid(from.target_uid());
  }
  if (from.target_home_owner_uid() != 0) {
    set_target_home_owner_uid(from.target_home_owner_uid());
  }
  if (from.target_home_gameserver_id() != 0) {
    set_target_home_gameserver_id(from.target_home_gameserver_id());
  }
  if (from.target_home_param() != 0) {
    set_target_home_param(from.target_home_param());
  }
}

void PlayerTransferNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerTransferNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerTransferNotify::CopyFrom(const PlayerTransferNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerTransferNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerTransferNotify::IsInitialized() const {
  return true;
}

void PlayerTransferNotify::Swap(PlayerTransferNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerTransferNotify::InternalSwap(PlayerTransferNotify* other) {
  using std::swap;
  swap(transfer_uid_, other->transfer_uid_);
  swap(target_uid_, other->target_uid_);
  swap(target_home_owner_uid_, other->target_home_owner_uid_);
  swap(target_home_gameserver_id_, other->target_home_gameserver_id_);
  swap(target_home_param_, other->target_home_param_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerTransferNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerTransferNotify

// uint32 transfer_uid = 1;
void PlayerTransferNotify::clear_transfer_uid() {
  transfer_uid_ = 0u;
}
::google::protobuf::uint32 PlayerTransferNotify::transfer_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTransferNotify.transfer_uid)
  return transfer_uid_;
}
void PlayerTransferNotify::set_transfer_uid(::google::protobuf::uint32 value) {
  
  transfer_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTransferNotify.transfer_uid)
}

// uint32 target_uid = 2;
void PlayerTransferNotify::clear_target_uid() {
  target_uid_ = 0u;
}
::google::protobuf::uint32 PlayerTransferNotify::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTransferNotify.target_uid)
  return target_uid_;
}
void PlayerTransferNotify::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTransferNotify.target_uid)
}

// uint32 target_home_owner_uid = 3;
void PlayerTransferNotify::clear_target_home_owner_uid() {
  target_home_owner_uid_ = 0u;
}
::google::protobuf::uint32 PlayerTransferNotify::target_home_owner_uid() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTransferNotify.target_home_owner_uid)
  return target_home_owner_uid_;
}
void PlayerTransferNotify::set_target_home_owner_uid(::google::protobuf::uint32 value) {
  
  target_home_owner_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTransferNotify.target_home_owner_uid)
}

// uint32 target_home_gameserver_id = 4;
void PlayerTransferNotify::clear_target_home_gameserver_id() {
  target_home_gameserver_id_ = 0u;
}
::google::protobuf::uint32 PlayerTransferNotify::target_home_gameserver_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTransferNotify.target_home_gameserver_id)
  return target_home_gameserver_id_;
}
void PlayerTransferNotify::set_target_home_gameserver_id(::google::protobuf::uint32 value) {
  
  target_home_gameserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTransferNotify.target_home_gameserver_id)
}

// uint32 target_home_param = 5;
void PlayerTransferNotify::clear_target_home_param() {
  target_home_param_ = 0u;
}
::google::protobuf::uint32 PlayerTransferNotify::target_home_param() const {
  // @@protoc_insertion_point(field_get:proto.PlayerTransferNotify.target_home_param)
  return target_home_param_;
}
void PlayerTransferNotify::set_target_home_param(::google::protobuf::uint32 value) {
  
  target_home_param_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerTransferNotify.target_home_param)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacketCountInfo::kCmdIdFieldNumber;
const int PacketCountInfo::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacketCountInfo::PacketCountInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PacketCountInfo)
}
PacketCountInfo::PacketCountInfo(const PacketCountInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cmd_id_, &from.cmd_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&cmd_id_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:proto.PacketCountInfo)
}

void PacketCountInfo::SharedCtor() {
  ::memset(&cmd_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&cmd_id_)) + sizeof(count_));
  _cached_size_ = 0;
}

PacketCountInfo::~PacketCountInfo() {
  // @@protoc_insertion_point(destructor:proto.PacketCountInfo)
  SharedDtor();
}

void PacketCountInfo::SharedDtor() {
}

void PacketCountInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacketCountInfo::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PacketCountInfo& PacketCountInfo::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PacketCountInfo* PacketCountInfo::New(::google::protobuf::Arena* arena) const {
  PacketCountInfo* n = new PacketCountInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PacketCountInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PacketCountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&cmd_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&cmd_id_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool PacketCountInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PacketCountInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 cmd_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmd_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PacketCountInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PacketCountInfo)
  return false;
#undef DO_
}

void PacketCountInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PacketCountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmd_id(), output);
  }

  // uint32 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PacketCountInfo)
}

::google::protobuf::uint8* PacketCountInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PacketCountInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cmd_id(), target);
  }

  // uint32 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PacketCountInfo)
  return target;
}

size_t PacketCountInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PacketCountInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmd_id());
  }

  // uint32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacketCountInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PacketCountInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PacketCountInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketCountInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PacketCountInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PacketCountInfo)
    MergeFrom(*source);
  }
}

void PacketCountInfo::MergeFrom(const PacketCountInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PacketCountInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cmd_id() != 0) {
    set_cmd_id(from.cmd_id());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void PacketCountInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PacketCountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketCountInfo::CopyFrom(const PacketCountInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PacketCountInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketCountInfo::IsInitialized() const {
  return true;
}

void PacketCountInfo::Swap(PacketCountInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacketCountInfo::InternalSwap(PacketCountInfo* other) {
  using std::swap;
  swap(cmd_id_, other->cmd_id_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PacketCountInfo::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PacketCountInfo

// uint32 cmd_id = 1;
void PacketCountInfo::clear_cmd_id() {
  cmd_id_ = 0u;
}
::google::protobuf::uint32 PacketCountInfo::cmd_id() const {
  // @@protoc_insertion_point(field_get:proto.PacketCountInfo.cmd_id)
  return cmd_id_;
}
void PacketCountInfo::set_cmd_id(::google::protobuf::uint32 value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PacketCountInfo.cmd_id)
}

// uint32 count = 2;
void PacketCountInfo::clear_count() {
  count_ = 0u;
}
::google::protobuf::uint32 PacketCountInfo::count() const {
  // @@protoc_insertion_point(field_get:proto.PacketCountInfo.count)
  return count_;
}
void PacketCountInfo::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.PacketCountInfo.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacketFreqencyExceedNotify::kPacketCountFieldNumber;
const int PacketFreqencyExceedNotify::kIntervalFieldNumber;
const int PacketFreqencyExceedNotify::kPacketCountListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacketFreqencyExceedNotify::PacketFreqencyExceedNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PacketFreqencyExceedNotify)
}
PacketFreqencyExceedNotify::PacketFreqencyExceedNotify(const PacketFreqencyExceedNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      packet_count_list_(from.packet_count_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packet_count_, &from.packet_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&interval_) -
    reinterpret_cast<char*>(&packet_count_)) + sizeof(interval_));
  // @@protoc_insertion_point(copy_constructor:proto.PacketFreqencyExceedNotify)
}

void PacketFreqencyExceedNotify::SharedCtor() {
  ::memset(&packet_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interval_) -
      reinterpret_cast<char*>(&packet_count_)) + sizeof(interval_));
  _cached_size_ = 0;
}

PacketFreqencyExceedNotify::~PacketFreqencyExceedNotify() {
  // @@protoc_insertion_point(destructor:proto.PacketFreqencyExceedNotify)
  SharedDtor();
}

void PacketFreqencyExceedNotify::SharedDtor() {
}

void PacketFreqencyExceedNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PacketFreqencyExceedNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PacketFreqencyExceedNotify& PacketFreqencyExceedNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PacketFreqencyExceedNotify* PacketFreqencyExceedNotify::New(::google::protobuf::Arena* arena) const {
  PacketFreqencyExceedNotify* n = new PacketFreqencyExceedNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PacketFreqencyExceedNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PacketFreqencyExceedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  packet_count_list_.Clear();
  ::memset(&packet_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interval_) -
      reinterpret_cast<char*>(&packet_count_)) + sizeof(interval_));
  _internal_metadata_.Clear();
}

bool PacketFreqencyExceedNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PacketFreqencyExceedNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 packet_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packet_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 interval = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.PacketCountInfo packet_count_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_packet_count_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PacketFreqencyExceedNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PacketFreqencyExceedNotify)
  return false;
#undef DO_
}

void PacketFreqencyExceedNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PacketFreqencyExceedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 packet_count = 1;
  if (this->packet_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packet_count(), output);
  }

  // uint32 interval = 2;
  if (this->interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->interval(), output);
  }

  // repeated .proto.PacketCountInfo packet_count_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packet_count_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->packet_count_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PacketFreqencyExceedNotify)
}

::google::protobuf::uint8* PacketFreqencyExceedNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PacketFreqencyExceedNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 packet_count = 1;
  if (this->packet_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packet_count(), target);
  }

  // uint32 interval = 2;
  if (this->interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->interval(), target);
  }

  // repeated .proto.PacketCountInfo packet_count_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->packet_count_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->packet_count_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PacketFreqencyExceedNotify)
  return target;
}

size_t PacketFreqencyExceedNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PacketFreqencyExceedNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.PacketCountInfo packet_count_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->packet_count_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->packet_count_list(static_cast<int>(i)));
    }
  }

  // uint32 packet_count = 1;
  if (this->packet_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->packet_count());
  }

  // uint32 interval = 2;
  if (this->interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->interval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PacketFreqencyExceedNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PacketFreqencyExceedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PacketFreqencyExceedNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketFreqencyExceedNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PacketFreqencyExceedNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PacketFreqencyExceedNotify)
    MergeFrom(*source);
  }
}

void PacketFreqencyExceedNotify::MergeFrom(const PacketFreqencyExceedNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PacketFreqencyExceedNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  packet_count_list_.MergeFrom(from.packet_count_list_);
  if (from.packet_count() != 0) {
    set_packet_count(from.packet_count());
  }
  if (from.interval() != 0) {
    set_interval(from.interval());
  }
}

void PacketFreqencyExceedNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PacketFreqencyExceedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketFreqencyExceedNotify::CopyFrom(const PacketFreqencyExceedNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PacketFreqencyExceedNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketFreqencyExceedNotify::IsInitialized() const {
  return true;
}

void PacketFreqencyExceedNotify::Swap(PacketFreqencyExceedNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacketFreqencyExceedNotify::InternalSwap(PacketFreqencyExceedNotify* other) {
  using std::swap;
  packet_count_list_.InternalSwap(&other->packet_count_list_);
  swap(packet_count_, other->packet_count_);
  swap(interval_, other->interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PacketFreqencyExceedNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PacketFreqencyExceedNotify

// uint32 packet_count = 1;
void PacketFreqencyExceedNotify::clear_packet_count() {
  packet_count_ = 0u;
}
::google::protobuf::uint32 PacketFreqencyExceedNotify::packet_count() const {
  // @@protoc_insertion_point(field_get:proto.PacketFreqencyExceedNotify.packet_count)
  return packet_count_;
}
void PacketFreqencyExceedNotify::set_packet_count(::google::protobuf::uint32 value) {
  
  packet_count_ = value;
  // @@protoc_insertion_point(field_set:proto.PacketFreqencyExceedNotify.packet_count)
}

// uint32 interval = 2;
void PacketFreqencyExceedNotify::clear_interval() {
  interval_ = 0u;
}
::google::protobuf::uint32 PacketFreqencyExceedNotify::interval() const {
  // @@protoc_insertion_point(field_get:proto.PacketFreqencyExceedNotify.interval)
  return interval_;
}
void PacketFreqencyExceedNotify::set_interval(::google::protobuf::uint32 value) {
  
  interval_ = value;
  // @@protoc_insertion_point(field_set:proto.PacketFreqencyExceedNotify.interval)
}

// repeated .proto.PacketCountInfo packet_count_list = 3;
int PacketFreqencyExceedNotify::packet_count_list_size() const {
  return packet_count_list_.size();
}
void PacketFreqencyExceedNotify::clear_packet_count_list() {
  packet_count_list_.Clear();
}
const ::proto::PacketCountInfo& PacketFreqencyExceedNotify::packet_count_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PacketFreqencyExceedNotify.packet_count_list)
  return packet_count_list_.Get(index);
}
::proto::PacketCountInfo* PacketFreqencyExceedNotify::mutable_packet_count_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PacketFreqencyExceedNotify.packet_count_list)
  return packet_count_list_.Mutable(index);
}
::proto::PacketCountInfo* PacketFreqencyExceedNotify::add_packet_count_list() {
  // @@protoc_insertion_point(field_add:proto.PacketFreqencyExceedNotify.packet_count_list)
  return packet_count_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::PacketCountInfo >*
PacketFreqencyExceedNotify::mutable_packet_count_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PacketFreqencyExceedNotify.packet_count_list)
  return &packet_count_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::PacketCountInfo >&
PacketFreqencyExceedNotify::packet_count_list() const {
  // @@protoc_insertion_point(field_list:proto.PacketFreqencyExceedNotify.packet_count_list)
  return packet_count_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneAsyncLoadGroupBatchNotify::SceneAsyncLoadGroupBatchNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SceneAsyncLoadGroupBatchNotify)
}
SceneAsyncLoadGroupBatchNotify::SceneAsyncLoadGroupBatchNotify(const SceneAsyncLoadGroupBatchNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SceneAsyncLoadGroupBatchNotify)
}

void SceneAsyncLoadGroupBatchNotify::SharedCtor() {
  _cached_size_ = 0;
}

SceneAsyncLoadGroupBatchNotify::~SceneAsyncLoadGroupBatchNotify() {
  // @@protoc_insertion_point(destructor:proto.SceneAsyncLoadGroupBatchNotify)
  SharedDtor();
}

void SceneAsyncLoadGroupBatchNotify::SharedDtor() {
}

void SceneAsyncLoadGroupBatchNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneAsyncLoadGroupBatchNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneAsyncLoadGroupBatchNotify& SceneAsyncLoadGroupBatchNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SceneAsyncLoadGroupBatchNotify* SceneAsyncLoadGroupBatchNotify::New(::google::protobuf::Arena* arena) const {
  SceneAsyncLoadGroupBatchNotify* n = new SceneAsyncLoadGroupBatchNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SceneAsyncLoadGroupBatchNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SceneAsyncLoadGroupBatchNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SceneAsyncLoadGroupBatchNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SceneAsyncLoadGroupBatchNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SceneAsyncLoadGroupBatchNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SceneAsyncLoadGroupBatchNotify)
  return false;
#undef DO_
}

void SceneAsyncLoadGroupBatchNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SceneAsyncLoadGroupBatchNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SceneAsyncLoadGroupBatchNotify)
}

::google::protobuf::uint8* SceneAsyncLoadGroupBatchNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SceneAsyncLoadGroupBatchNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SceneAsyncLoadGroupBatchNotify)
  return target;
}

size_t SceneAsyncLoadGroupBatchNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SceneAsyncLoadGroupBatchNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneAsyncLoadGroupBatchNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SceneAsyncLoadGroupBatchNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneAsyncLoadGroupBatchNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneAsyncLoadGroupBatchNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SceneAsyncLoadGroupBatchNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SceneAsyncLoadGroupBatchNotify)
    MergeFrom(*source);
  }
}

void SceneAsyncLoadGroupBatchNotify::MergeFrom(const SceneAsyncLoadGroupBatchNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SceneAsyncLoadGroupBatchNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SceneAsyncLoadGroupBatchNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SceneAsyncLoadGroupBatchNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneAsyncLoadGroupBatchNotify::CopyFrom(const SceneAsyncLoadGroupBatchNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SceneAsyncLoadGroupBatchNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneAsyncLoadGroupBatchNotify::IsInitialized() const {
  return true;
}

void SceneAsyncLoadGroupBatchNotify::Swap(SceneAsyncLoadGroupBatchNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneAsyncLoadGroupBatchNotify::InternalSwap(SceneAsyncLoadGroupBatchNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneAsyncLoadGroupBatchNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SceneAsyncLoadGroupBatchNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CrcVersionConfig::kClientVersionListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CrcVersionConfig::CrcVersionConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CrcVersionConfig)
}
CrcVersionConfig::CrcVersionConfig(const CrcVersionConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      client_version_list_(from.client_version_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.CrcVersionConfig)
}

void CrcVersionConfig::SharedCtor() {
  _cached_size_ = 0;
}

CrcVersionConfig::~CrcVersionConfig() {
  // @@protoc_insertion_point(destructor:proto.CrcVersionConfig)
  SharedDtor();
}

void CrcVersionConfig::SharedDtor() {
}

void CrcVersionConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CrcVersionConfig::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CrcVersionConfig& CrcVersionConfig::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CrcVersionConfig* CrcVersionConfig::New(::google::protobuf::Arena* arena) const {
  CrcVersionConfig* n = new CrcVersionConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CrcVersionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CrcVersionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_version_list_.Clear();
  _internal_metadata_.Clear();
}

bool CrcVersionConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CrcVersionConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string client_version_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_client_version_list()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version_list(this->client_version_list_size() - 1).data(),
            static_cast<int>(this->client_version_list(this->client_version_list_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.CrcVersionConfig.client_version_list"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CrcVersionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CrcVersionConfig)
  return false;
#undef DO_
}

void CrcVersionConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CrcVersionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string client_version_list = 1;
  for (int i = 0, n = this->client_version_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version_list(i).data(), static_cast<int>(this->client_version_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.CrcVersionConfig.client_version_list");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->client_version_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CrcVersionConfig)
}

::google::protobuf::uint8* CrcVersionConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CrcVersionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string client_version_list = 1;
  for (int i = 0, n = this->client_version_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version_list(i).data(), static_cast<int>(this->client_version_list(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.CrcVersionConfig.client_version_list");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->client_version_list(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CrcVersionConfig)
  return target;
}

size_t CrcVersionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CrcVersionConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string client_version_list = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->client_version_list_size());
  for (int i = 0, n = this->client_version_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->client_version_list(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CrcVersionConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CrcVersionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CrcVersionConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CrcVersionConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CrcVersionConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CrcVersionConfig)
    MergeFrom(*source);
  }
}

void CrcVersionConfig::MergeFrom(const CrcVersionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CrcVersionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  client_version_list_.MergeFrom(from.client_version_list_);
}

void CrcVersionConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CrcVersionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CrcVersionConfig::CopyFrom(const CrcVersionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CrcVersionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CrcVersionConfig::IsInitialized() const {
  return true;
}

void CrcVersionConfig::Swap(CrcVersionConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CrcVersionConfig::InternalSwap(CrcVersionConfig* other) {
  using std::swap;
  client_version_list_.InternalSwap(&other->client_version_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CrcVersionConfig::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CrcVersionConfig

// repeated string client_version_list = 1;
int CrcVersionConfig::client_version_list_size() const {
  return client_version_list_.size();
}
void CrcVersionConfig::clear_client_version_list() {
  client_version_list_.Clear();
}
const ::std::string& CrcVersionConfig::client_version_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CrcVersionConfig.client_version_list)
  return client_version_list_.Get(index);
}
::std::string* CrcVersionConfig::mutable_client_version_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CrcVersionConfig.client_version_list)
  return client_version_list_.Mutable(index);
}
void CrcVersionConfig::set_client_version_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.CrcVersionConfig.client_version_list)
  client_version_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CrcVersionConfig::set_client_version_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.CrcVersionConfig.client_version_list)
  client_version_list_.Mutable(index)->assign(std::move(value));
}
#endif
void CrcVersionConfig::set_client_version_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  client_version_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.CrcVersionConfig.client_version_list)
}
void CrcVersionConfig::set_client_version_list(int index, const char* value, size_t size) {
  client_version_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.CrcVersionConfig.client_version_list)
}
::std::string* CrcVersionConfig::add_client_version_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.CrcVersionConfig.client_version_list)
  return client_version_list_.Add();
}
void CrcVersionConfig::add_client_version_list(const ::std::string& value) {
  client_version_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.CrcVersionConfig.client_version_list)
}
#if LANG_CXX11
void CrcVersionConfig::add_client_version_list(::std::string&& value) {
  client_version_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.CrcVersionConfig.client_version_list)
}
#endif
void CrcVersionConfig::add_client_version_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  client_version_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.CrcVersionConfig.client_version_list)
}
void CrcVersionConfig::add_client_version_list(const char* value, size_t size) {
  client_version_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.CrcVersionConfig.client_version_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CrcVersionConfig::client_version_list() const {
  // @@protoc_insertion_point(field_list:proto.CrcVersionConfig.client_version_list)
  return client_version_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CrcVersionConfig::mutable_client_version_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CrcVersionConfig.client_version_list)
  return &client_version_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ClientVersionSyncNotify::ClientVersionSyncNotify_ResVersionConfigMapEntry::ClientVersionSyncNotify_ResVersionConfigMapEntry() {}
ClientVersionSyncNotify::ClientVersionSyncNotify_ResVersionConfigMapEntry::ClientVersionSyncNotify_ResVersionConfigMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ClientVersionSyncNotify::ClientVersionSyncNotify_ResVersionConfigMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[10];
}
void ClientVersionSyncNotify::ClientVersionSyncNotify_ResVersionConfigMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ClientVersionSyncNotify::ClientVersionSyncNotify_ResVersionConfigMapEntry::MergeFrom(const ClientVersionSyncNotify_ResVersionConfigMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ClientVersionSyncNotify::ClientVersionSyncNotify_CrcVersionConfigMapEntry::ClientVersionSyncNotify_CrcVersionConfigMapEntry() {}
ClientVersionSyncNotify::ClientVersionSyncNotify_CrcVersionConfigMapEntry::ClientVersionSyncNotify_CrcVersionConfigMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ClientVersionSyncNotify::ClientVersionSyncNotify_CrcVersionConfigMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[11];
}
void ClientVersionSyncNotify::ClientVersionSyncNotify_CrcVersionConfigMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ClientVersionSyncNotify::ClientVersionSyncNotify_CrcVersionConfigMapEntry::MergeFrom(const ClientVersionSyncNotify_CrcVersionConfigMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

ClientVersionSyncNotify::ClientVersionSyncNotify_NextResVersionConfigMapEntry::ClientVersionSyncNotify_NextResVersionConfigMapEntry() {}
ClientVersionSyncNotify::ClientVersionSyncNotify_NextResVersionConfigMapEntry::ClientVersionSyncNotify_NextResVersionConfigMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata ClientVersionSyncNotify::ClientVersionSyncNotify_NextResVersionConfigMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[12];
}
void ClientVersionSyncNotify::ClientVersionSyncNotify_NextResVersionConfigMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void ClientVersionSyncNotify::ClientVersionSyncNotify_NextResVersionConfigMapEntry::MergeFrom(const ClientVersionSyncNotify_NextResVersionConfigMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientVersionSyncNotify::kDataVersionConfigFieldNumber;
const int ClientVersionSyncNotify::kResVersionConfigMapFieldNumber;
const int ClientVersionSyncNotify::kCrcVersionConfigMapFieldNumber;
const int ClientVersionSyncNotify::kNextResVersionConfigMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientVersionSyncNotify::ClientVersionSyncNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ClientVersionSyncNotify)
}
ClientVersionSyncNotify::ClientVersionSyncNotify(const ClientVersionSyncNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  res_version_config_map_.MergeFrom(from.res_version_config_map_);
  crc_version_config_map_.MergeFrom(from.crc_version_config_map_);
  next_res_version_config_map_.MergeFrom(from.next_res_version_config_map_);
  if (from.has_data_version_config()) {
    data_version_config_ = new ::proto::DataVersionConfig(*from.data_version_config_);
  } else {
    data_version_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.ClientVersionSyncNotify)
}

void ClientVersionSyncNotify::SharedCtor() {
  data_version_config_ = NULL;
  _cached_size_ = 0;
}

ClientVersionSyncNotify::~ClientVersionSyncNotify() {
  // @@protoc_insertion_point(destructor:proto.ClientVersionSyncNotify)
  SharedDtor();
}

void ClientVersionSyncNotify::SharedDtor() {
  if (this != internal_default_instance()) delete data_version_config_;
}

void ClientVersionSyncNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientVersionSyncNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientVersionSyncNotify& ClientVersionSyncNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientVersionSyncNotify* ClientVersionSyncNotify::New(::google::protobuf::Arena* arena) const {
  ClientVersionSyncNotify* n = new ClientVersionSyncNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientVersionSyncNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ClientVersionSyncNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_version_config_map_.Clear();
  crc_version_config_map_.Clear();
  next_res_version_config_map_.Clear();
  if (GetArenaNoVirtual() == NULL && data_version_config_ != NULL) {
    delete data_version_config_;
  }
  data_version_config_ = NULL;
  _internal_metadata_.Clear();
}

bool ClientVersionSyncNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ClientVersionSyncNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.DataVersionConfig data_version_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data_version_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.ResVersionConfig> res_version_config_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ClientVersionSyncNotify_ResVersionConfigMapEntry::Parser< ::google::protobuf::internal::MapField<
              ClientVersionSyncNotify_ResVersionConfigMapEntry,
              ::google::protobuf::uint32, ::proto::ResVersionConfig,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig > > parser(&res_version_config_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.CrcVersionConfig> crc_version_config_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          ClientVersionSyncNotify_CrcVersionConfigMapEntry::Parser< ::google::protobuf::internal::MapField<
              ClientVersionSyncNotify_CrcVersionConfigMapEntry,
              ::google::protobuf::uint32, ::proto::CrcVersionConfig,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig > > parser(&crc_version_config_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.ResVersionConfig> next_res_version_config_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          ClientVersionSyncNotify_NextResVersionConfigMapEntry::Parser< ::google::protobuf::internal::MapField<
              ClientVersionSyncNotify_NextResVersionConfigMapEntry,
              ::google::protobuf::uint32, ::proto::ResVersionConfig,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig > > parser(&next_res_version_config_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ClientVersionSyncNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ClientVersionSyncNotify)
  return false;
#undef DO_
}

void ClientVersionSyncNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ClientVersionSyncNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DataVersionConfig data_version_config = 1;
  if (this->has_data_version_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->data_version_config_, output);
  }

  // map<uint32, .proto.ResVersionConfig> res_version_config_map = 2;
  if (!this->res_version_config_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->res_version_config_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->res_version_config_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_iterator
          it = this->res_version_config_map().begin();
          it != this->res_version_config_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_ResVersionConfigMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(res_version_config_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_ResVersionConfigMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_iterator
          it = this->res_version_config_map().begin();
          it != this->res_version_config_map().end(); ++it) {
        entry.reset(res_version_config_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // map<uint32, .proto.CrcVersionConfig> crc_version_config_map = 3;
  if (!this->crc_version_config_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->crc_version_config_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->crc_version_config_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >::const_iterator
          it = this->crc_version_config_map().begin();
          it != this->crc_version_config_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_CrcVersionConfigMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(crc_version_config_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_CrcVersionConfigMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >::const_iterator
          it = this->crc_version_config_map().begin();
          it != this->crc_version_config_map().end(); ++it) {
        entry.reset(crc_version_config_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  // map<uint32, .proto.ResVersionConfig> next_res_version_config_map = 4;
  if (!this->next_res_version_config_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->next_res_version_config_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->next_res_version_config_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_iterator
          it = this->next_res_version_config_map().begin();
          it != this->next_res_version_config_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_NextResVersionConfigMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(next_res_version_config_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_NextResVersionConfigMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_iterator
          it = this->next_res_version_config_map().begin();
          it != this->next_res_version_config_map().end(); ++it) {
        entry.reset(next_res_version_config_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ClientVersionSyncNotify)
}

::google::protobuf::uint8* ClientVersionSyncNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ClientVersionSyncNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.DataVersionConfig data_version_config = 1;
  if (this->has_data_version_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->data_version_config_, deterministic, target);
  }

  // map<uint32, .proto.ResVersionConfig> res_version_config_map = 2;
  if (!this->res_version_config_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->res_version_config_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->res_version_config_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_iterator
          it = this->res_version_config_map().begin();
          it != this->res_version_config_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_ResVersionConfigMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(res_version_config_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_ResVersionConfigMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_iterator
          it = this->res_version_config_map().begin();
          it != this->res_version_config_map().end(); ++it) {
        entry.reset(res_version_config_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, .proto.CrcVersionConfig> crc_version_config_map = 3;
  if (!this->crc_version_config_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->crc_version_config_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->crc_version_config_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >::const_iterator
          it = this->crc_version_config_map().begin();
          it != this->crc_version_config_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_CrcVersionConfigMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(crc_version_config_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_CrcVersionConfigMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >::const_iterator
          it = this->crc_version_config_map().begin();
          it != this->crc_version_config_map().end(); ++it) {
        entry.reset(crc_version_config_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, .proto.ResVersionConfig> next_res_version_config_map = 4;
  if (!this->next_res_version_config_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->next_res_version_config_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->next_res_version_config_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_iterator
          it = this->next_res_version_config_map().begin();
          it != this->next_res_version_config_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_NextResVersionConfigMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(next_res_version_config_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_NextResVersionConfigMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_iterator
          it = this->next_res_version_config_map().begin();
          it != this->next_res_version_config_map().end(); ++it) {
        entry.reset(next_res_version_config_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ClientVersionSyncNotify)
  return target;
}

size_t ClientVersionSyncNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ClientVersionSyncNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.ResVersionConfig> res_version_config_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->res_version_config_map_size());
  {
    ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_ResVersionConfigMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_iterator
        it = this->res_version_config_map().begin();
        it != this->res_version_config_map().end(); ++it) {
      entry.reset(res_version_config_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, .proto.CrcVersionConfig> crc_version_config_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->crc_version_config_map_size());
  {
    ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_CrcVersionConfigMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >::const_iterator
        it = this->crc_version_config_map().begin();
        it != this->crc_version_config_map().end(); ++it) {
      entry.reset(crc_version_config_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, .proto.ResVersionConfig> next_res_version_config_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->next_res_version_config_map_size());
  {
    ::google::protobuf::scoped_ptr<ClientVersionSyncNotify_NextResVersionConfigMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >::const_iterator
        it = this->next_res_version_config_map().begin();
        it != this->next_res_version_config_map().end(); ++it) {
      entry.reset(next_res_version_config_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .proto.DataVersionConfig data_version_config = 1;
  if (this->has_data_version_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_version_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientVersionSyncNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ClientVersionSyncNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientVersionSyncNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientVersionSyncNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ClientVersionSyncNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ClientVersionSyncNotify)
    MergeFrom(*source);
  }
}

void ClientVersionSyncNotify::MergeFrom(const ClientVersionSyncNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ClientVersionSyncNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  res_version_config_map_.MergeFrom(from.res_version_config_map_);
  crc_version_config_map_.MergeFrom(from.crc_version_config_map_);
  next_res_version_config_map_.MergeFrom(from.next_res_version_config_map_);
  if (from.has_data_version_config()) {
    mutable_data_version_config()->::proto::DataVersionConfig::MergeFrom(from.data_version_config());
  }
}

void ClientVersionSyncNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ClientVersionSyncNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientVersionSyncNotify::CopyFrom(const ClientVersionSyncNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ClientVersionSyncNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientVersionSyncNotify::IsInitialized() const {
  return true;
}

void ClientVersionSyncNotify::Swap(ClientVersionSyncNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientVersionSyncNotify::InternalSwap(ClientVersionSyncNotify* other) {
  using std::swap;
  res_version_config_map_.Swap(&other->res_version_config_map_);
  crc_version_config_map_.Swap(&other->crc_version_config_map_);
  next_res_version_config_map_.Swap(&other->next_res_version_config_map_);
  swap(data_version_config_, other->data_version_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientVersionSyncNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientVersionSyncNotify

// .proto.DataVersionConfig data_version_config = 1;
bool ClientVersionSyncNotify::has_data_version_config() const {
  return this != internal_default_instance() && data_version_config_ != NULL;
}
void ClientVersionSyncNotify::clear_data_version_config() {
  if (GetArenaNoVirtual() == NULL && data_version_config_ != NULL) delete data_version_config_;
  data_version_config_ = NULL;
}
const ::proto::DataVersionConfig& ClientVersionSyncNotify::data_version_config() const {
  const ::proto::DataVersionConfig* p = data_version_config_;
  // @@protoc_insertion_point(field_get:proto.ClientVersionSyncNotify.data_version_config)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::DataVersionConfig*>(
      &::proto::_DataVersionConfig_default_instance_);
}
::proto::DataVersionConfig* ClientVersionSyncNotify::mutable_data_version_config() {
  
  if (data_version_config_ == NULL) {
    data_version_config_ = new ::proto::DataVersionConfig;
  }
  // @@protoc_insertion_point(field_mutable:proto.ClientVersionSyncNotify.data_version_config)
  return data_version_config_;
}
::proto::DataVersionConfig* ClientVersionSyncNotify::release_data_version_config() {
  // @@protoc_insertion_point(field_release:proto.ClientVersionSyncNotify.data_version_config)
  
  ::proto::DataVersionConfig* temp = data_version_config_;
  data_version_config_ = NULL;
  return temp;
}
void ClientVersionSyncNotify::set_allocated_data_version_config(::proto::DataVersionConfig* data_version_config) {
  delete data_version_config_;
  data_version_config_ = data_version_config;
  if (data_version_config) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ClientVersionSyncNotify.data_version_config)
}

// map<uint32, .proto.ResVersionConfig> res_version_config_map = 2;
int ClientVersionSyncNotify::res_version_config_map_size() const {
  return res_version_config_map_.size();
}
void ClientVersionSyncNotify::clear_res_version_config_map() {
  res_version_config_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >&
ClientVersionSyncNotify::res_version_config_map() const {
  // @@protoc_insertion_point(field_map:proto.ClientVersionSyncNotify.res_version_config_map)
  return res_version_config_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >*
ClientVersionSyncNotify::mutable_res_version_config_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ClientVersionSyncNotify.res_version_config_map)
  return res_version_config_map_.MutableMap();
}

// map<uint32, .proto.CrcVersionConfig> crc_version_config_map = 3;
int ClientVersionSyncNotify::crc_version_config_map_size() const {
  return crc_version_config_map_.size();
}
void ClientVersionSyncNotify::clear_crc_version_config_map() {
  crc_version_config_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >&
ClientVersionSyncNotify::crc_version_config_map() const {
  // @@protoc_insertion_point(field_map:proto.ClientVersionSyncNotify.crc_version_config_map)
  return crc_version_config_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CrcVersionConfig >*
ClientVersionSyncNotify::mutable_crc_version_config_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ClientVersionSyncNotify.crc_version_config_map)
  return crc_version_config_map_.MutableMap();
}

// map<uint32, .proto.ResVersionConfig> next_res_version_config_map = 4;
int ClientVersionSyncNotify::next_res_version_config_map_size() const {
  return next_res_version_config_map_.size();
}
void ClientVersionSyncNotify::clear_next_res_version_config_map() {
  next_res_version_config_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >&
ClientVersionSyncNotify::next_res_version_config_map() const {
  // @@protoc_insertion_point(field_map:proto.ClientVersionSyncNotify.next_res_version_config_map)
  return next_res_version_config_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::ResVersionConfig >*
ClientVersionSyncNotify::mutable_next_res_version_config_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.ClientVersionSyncNotify.next_res_version_config_map)
  return next_res_version_config_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterServiceSuccessNotify::RegisterServiceSuccessNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RegisterServiceSuccessNotify)
}
RegisterServiceSuccessNotify::RegisterServiceSuccessNotify(const RegisterServiceSuccessNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.RegisterServiceSuccessNotify)
}

void RegisterServiceSuccessNotify::SharedCtor() {
  _cached_size_ = 0;
}

RegisterServiceSuccessNotify::~RegisterServiceSuccessNotify() {
  // @@protoc_insertion_point(destructor:proto.RegisterServiceSuccessNotify)
  SharedDtor();
}

void RegisterServiceSuccessNotify::SharedDtor() {
}

void RegisterServiceSuccessNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterServiceSuccessNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterServiceSuccessNotify& RegisterServiceSuccessNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterServiceSuccessNotify* RegisterServiceSuccessNotify::New(::google::protobuf::Arena* arena) const {
  RegisterServiceSuccessNotify* n = new RegisterServiceSuccessNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterServiceSuccessNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RegisterServiceSuccessNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RegisterServiceSuccessNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RegisterServiceSuccessNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RegisterServiceSuccessNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RegisterServiceSuccessNotify)
  return false;
#undef DO_
}

void RegisterServiceSuccessNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RegisterServiceSuccessNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RegisterServiceSuccessNotify)
}

::google::protobuf::uint8* RegisterServiceSuccessNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RegisterServiceSuccessNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RegisterServiceSuccessNotify)
  return target;
}

size_t RegisterServiceSuccessNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RegisterServiceSuccessNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterServiceSuccessNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RegisterServiceSuccessNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterServiceSuccessNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterServiceSuccessNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RegisterServiceSuccessNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RegisterServiceSuccessNotify)
    MergeFrom(*source);
  }
}

void RegisterServiceSuccessNotify::MergeFrom(const RegisterServiceSuccessNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RegisterServiceSuccessNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RegisterServiceSuccessNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RegisterServiceSuccessNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterServiceSuccessNotify::CopyFrom(const RegisterServiceSuccessNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RegisterServiceSuccessNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterServiceSuccessNotify::IsInitialized() const {
  return true;
}

void RegisterServiceSuccessNotify::Swap(RegisterServiceSuccessNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterServiceSuccessNotify::InternalSwap(RegisterServiceSuccessNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterServiceSuccessNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterServiceSuccessNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReloadConfigNotify::ReloadConfigNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ReloadConfigNotify)
}
ReloadConfigNotify::ReloadConfigNotify(const ReloadConfigNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ReloadConfigNotify)
}

void ReloadConfigNotify::SharedCtor() {
  _cached_size_ = 0;
}

ReloadConfigNotify::~ReloadConfigNotify() {
  // @@protoc_insertion_point(destructor:proto.ReloadConfigNotify)
  SharedDtor();
}

void ReloadConfigNotify::SharedDtor() {
}

void ReloadConfigNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReloadConfigNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReloadConfigNotify& ReloadConfigNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReloadConfigNotify* ReloadConfigNotify::New(::google::protobuf::Arena* arena) const {
  ReloadConfigNotify* n = new ReloadConfigNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReloadConfigNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ReloadConfigNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReloadConfigNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ReloadConfigNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ReloadConfigNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ReloadConfigNotify)
  return false;
#undef DO_
}

void ReloadConfigNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ReloadConfigNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ReloadConfigNotify)
}

::google::protobuf::uint8* ReloadConfigNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ReloadConfigNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ReloadConfigNotify)
  return target;
}

size_t ReloadConfigNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ReloadConfigNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReloadConfigNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ReloadConfigNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ReloadConfigNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReloadConfigNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ReloadConfigNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ReloadConfigNotify)
    MergeFrom(*source);
  }
}

void ReloadConfigNotify::MergeFrom(const ReloadConfigNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ReloadConfigNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReloadConfigNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ReloadConfigNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReloadConfigNotify::CopyFrom(const ReloadConfigNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ReloadConfigNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReloadConfigNotify::IsInitialized() const {
  return true;
}

void ReloadConfigNotify::Swap(ReloadConfigNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReloadConfigNotify::InternalSwap(ReloadConfigNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReloadConfigNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReloadConfigNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiserverServiceTypeNotify::kServiceTypeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiserverServiceTypeNotify::MultiserverServiceTypeNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MultiserverServiceTypeNotify)
}
MultiserverServiceTypeNotify::MultiserverServiceTypeNotify(const MultiserverServiceTypeNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      service_type_list_(from.service_type_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.MultiserverServiceTypeNotify)
}

void MultiserverServiceTypeNotify::SharedCtor() {
  _cached_size_ = 0;
}

MultiserverServiceTypeNotify::~MultiserverServiceTypeNotify() {
  // @@protoc_insertion_point(destructor:proto.MultiserverServiceTypeNotify)
  SharedDtor();
}

void MultiserverServiceTypeNotify::SharedDtor() {
}

void MultiserverServiceTypeNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MultiserverServiceTypeNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultiserverServiceTypeNotify& MultiserverServiceTypeNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MultiserverServiceTypeNotify* MultiserverServiceTypeNotify::New(::google::protobuf::Arena* arena) const {
  MultiserverServiceTypeNotify* n = new MultiserverServiceTypeNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MultiserverServiceTypeNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MultiserverServiceTypeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_type_list_.Clear();
  _internal_metadata_.Clear();
}

bool MultiserverServiceTypeNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MultiserverServiceTypeNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.ServiceType service_type_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_service_type_list(static_cast< ::proto::ServiceType >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_service_type_list(static_cast< ::proto::ServiceType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MultiserverServiceTypeNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MultiserverServiceTypeNotify)
  return false;
#undef DO_
}

void MultiserverServiceTypeNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MultiserverServiceTypeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ServiceType service_type_list = 1;
  if (this->service_type_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_service_type_list_cached_byte_size_));
  }
  for (int i = 0, n = this->service_type_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->service_type_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MultiserverServiceTypeNotify)
}

::google::protobuf::uint8* MultiserverServiceTypeNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MultiserverServiceTypeNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.ServiceType service_type_list = 1;
  if (this->service_type_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _service_type_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->service_type_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MultiserverServiceTypeNotify)
  return target;
}

size_t MultiserverServiceTypeNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MultiserverServiceTypeNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.ServiceType service_type_list = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->service_type_list_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->service_type_list(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _service_type_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MultiserverServiceTypeNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MultiserverServiceTypeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiserverServiceTypeNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiserverServiceTypeNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MultiserverServiceTypeNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MultiserverServiceTypeNotify)
    MergeFrom(*source);
  }
}

void MultiserverServiceTypeNotify::MergeFrom(const MultiserverServiceTypeNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MultiserverServiceTypeNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  service_type_list_.MergeFrom(from.service_type_list_);
}

void MultiserverServiceTypeNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MultiserverServiceTypeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiserverServiceTypeNotify::CopyFrom(const MultiserverServiceTypeNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MultiserverServiceTypeNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiserverServiceTypeNotify::IsInitialized() const {
  return true;
}

void MultiserverServiceTypeNotify::Swap(MultiserverServiceTypeNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiserverServiceTypeNotify::InternalSwap(MultiserverServiceTypeNotify* other) {
  using std::swap;
  service_type_list_.InternalSwap(&other->service_type_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MultiserverServiceTypeNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MultiserverServiceTypeNotify

// repeated .proto.ServiceType service_type_list = 1;
int MultiserverServiceTypeNotify::service_type_list_size() const {
  return service_type_list_.size();
}
void MultiserverServiceTypeNotify::clear_service_type_list() {
  service_type_list_.Clear();
}
::proto::ServiceType MultiserverServiceTypeNotify::service_type_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MultiserverServiceTypeNotify.service_type_list)
  return static_cast< ::proto::ServiceType >(service_type_list_.Get(index));
}
void MultiserverServiceTypeNotify::set_service_type_list(int index, ::proto::ServiceType value) {
  service_type_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.MultiserverServiceTypeNotify.service_type_list)
}
void MultiserverServiceTypeNotify::add_service_type_list(::proto::ServiceType value) {
  service_type_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.MultiserverServiceTypeNotify.service_type_list)
}
const ::google::protobuf::RepeatedField<int>&
MultiserverServiceTypeNotify::service_type_list() const {
  // @@protoc_insertion_point(field_list:proto.MultiserverServiceTypeNotify.service_type_list)
  return service_type_list_;
}
::google::protobuf::RepeatedField<int>*
MultiserverServiceTypeNotify::mutable_service_type_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MultiserverServiceTypeNotify.service_type_list)
  return &service_type_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchServiceStopNotify::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchServiceStopNotify::MatchServiceStopNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MatchServiceStopNotify)
}
MatchServiceStopNotify::MatchServiceStopNotify(const MatchServiceStopNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  server_id_ = from.server_id_;
  // @@protoc_insertion_point(copy_constructor:proto.MatchServiceStopNotify)
}

void MatchServiceStopNotify::SharedCtor() {
  server_id_ = 0u;
  _cached_size_ = 0;
}

MatchServiceStopNotify::~MatchServiceStopNotify() {
  // @@protoc_insertion_point(destructor:proto.MatchServiceStopNotify)
  SharedDtor();
}

void MatchServiceStopNotify::SharedDtor() {
}

void MatchServiceStopNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchServiceStopNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchServiceStopNotify& MatchServiceStopNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchServiceStopNotify* MatchServiceStopNotify::New(::google::protobuf::Arena* arena) const {
  MatchServiceStopNotify* n = new MatchServiceStopNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchServiceStopNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MatchServiceStopNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_id_ = 0u;
  _internal_metadata_.Clear();
}

bool MatchServiceStopNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MatchServiceStopNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 server_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MatchServiceStopNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MatchServiceStopNotify)
  return false;
#undef DO_
}

void MatchServiceStopNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MatchServiceStopNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 server_id = 1;
  if (this->server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MatchServiceStopNotify)
}

::google::protobuf::uint8* MatchServiceStopNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MatchServiceStopNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 server_id = 1;
  if (this->server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MatchServiceStopNotify)
  return target;
}

size_t MatchServiceStopNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MatchServiceStopNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 server_id = 1;
  if (this->server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchServiceStopNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MatchServiceStopNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchServiceStopNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchServiceStopNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MatchServiceStopNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MatchServiceStopNotify)
    MergeFrom(*source);
  }
}

void MatchServiceStopNotify::MergeFrom(const MatchServiceStopNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MatchServiceStopNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.server_id() != 0) {
    set_server_id(from.server_id());
  }
}

void MatchServiceStopNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MatchServiceStopNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchServiceStopNotify::CopyFrom(const MatchServiceStopNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MatchServiceStopNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchServiceStopNotify::IsInitialized() const {
  return true;
}

void MatchServiceStopNotify::Swap(MatchServiceStopNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchServiceStopNotify::InternalSwap(MatchServiceStopNotify* other) {
  using std::swap;
  swap(server_id_, other->server_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchServiceStopNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchServiceStopNotify

// uint32 server_id = 1;
void MatchServiceStopNotify::clear_server_id() {
  server_id_ = 0u;
}
::google::protobuf::uint32 MatchServiceStopNotify::server_id() const {
  // @@protoc_insertion_point(field_get:proto.MatchServiceStopNotify.server_id)
  return server_id_;
}
void MatchServiceStopNotify::set_server_id(::google::protobuf::uint32 value) {
  
  server_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MatchServiceStopNotify.server_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchServiceStopImplementNotify::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchServiceStopImplementNotify::MatchServiceStopImplementNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MatchServiceStopImplementNotify)
}
MatchServiceStopImplementNotify::MatchServiceStopImplementNotify(const MatchServiceStopImplementNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msg()) {
    msg_ = new ::proto::MatchServiceStopNotify(*from.msg_);
  } else {
    msg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.MatchServiceStopImplementNotify)
}

void MatchServiceStopImplementNotify::SharedCtor() {
  msg_ = NULL;
  _cached_size_ = 0;
}

MatchServiceStopImplementNotify::~MatchServiceStopImplementNotify() {
  // @@protoc_insertion_point(destructor:proto.MatchServiceStopImplementNotify)
  SharedDtor();
}

void MatchServiceStopImplementNotify::SharedDtor() {
  if (this != internal_default_instance()) delete msg_;
}

void MatchServiceStopImplementNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchServiceStopImplementNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchServiceStopImplementNotify& MatchServiceStopImplementNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MatchServiceStopImplementNotify* MatchServiceStopImplementNotify::New(::google::protobuf::Arena* arena) const {
  MatchServiceStopImplementNotify* n = new MatchServiceStopImplementNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MatchServiceStopImplementNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MatchServiceStopImplementNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && msg_ != NULL) {
    delete msg_;
  }
  msg_ = NULL;
  _internal_metadata_.Clear();
}

bool MatchServiceStopImplementNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MatchServiceStopImplementNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.MatchServiceStopNotify msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MatchServiceStopImplementNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MatchServiceStopImplementNotify)
  return false;
#undef DO_
}

void MatchServiceStopImplementNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MatchServiceStopImplementNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchServiceStopNotify msg = 1;
  if (this->has_msg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->msg_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MatchServiceStopImplementNotify)
}

::google::protobuf::uint8* MatchServiceStopImplementNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MatchServiceStopImplementNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MatchServiceStopNotify msg = 1;
  if (this->has_msg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->msg_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MatchServiceStopImplementNotify)
  return target;
}

size_t MatchServiceStopImplementNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MatchServiceStopImplementNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.MatchServiceStopNotify msg = 1;
  if (this->has_msg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->msg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchServiceStopImplementNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MatchServiceStopImplementNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchServiceStopImplementNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchServiceStopImplementNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MatchServiceStopImplementNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MatchServiceStopImplementNotify)
    MergeFrom(*source);
  }
}

void MatchServiceStopImplementNotify::MergeFrom(const MatchServiceStopImplementNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MatchServiceStopImplementNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_msg()) {
    mutable_msg()->::proto::MatchServiceStopNotify::MergeFrom(from.msg());
  }
}

void MatchServiceStopImplementNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MatchServiceStopImplementNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchServiceStopImplementNotify::CopyFrom(const MatchServiceStopImplementNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MatchServiceStopImplementNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchServiceStopImplementNotify::IsInitialized() const {
  return true;
}

void MatchServiceStopImplementNotify::Swap(MatchServiceStopImplementNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchServiceStopImplementNotify::InternalSwap(MatchServiceStopImplementNotify* other) {
  using std::swap;
  swap(msg_, other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchServiceStopImplementNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MatchServiceStopImplementNotify

// .proto.MatchServiceStopNotify msg = 1;
bool MatchServiceStopImplementNotify::has_msg() const {
  return this != internal_default_instance() && msg_ != NULL;
}
void MatchServiceStopImplementNotify::clear_msg() {
  if (GetArenaNoVirtual() == NULL && msg_ != NULL) delete msg_;
  msg_ = NULL;
}
const ::proto::MatchServiceStopNotify& MatchServiceStopImplementNotify::msg() const {
  const ::proto::MatchServiceStopNotify* p = msg_;
  // @@protoc_insertion_point(field_get:proto.MatchServiceStopImplementNotify.msg)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::MatchServiceStopNotify*>(
      &::proto::_MatchServiceStopNotify_default_instance_);
}
::proto::MatchServiceStopNotify* MatchServiceStopImplementNotify::mutable_msg() {
  
  if (msg_ == NULL) {
    msg_ = new ::proto::MatchServiceStopNotify;
  }
  // @@protoc_insertion_point(field_mutable:proto.MatchServiceStopImplementNotify.msg)
  return msg_;
}
::proto::MatchServiceStopNotify* MatchServiceStopImplementNotify::release_msg() {
  // @@protoc_insertion_point(field_release:proto.MatchServiceStopImplementNotify.msg)
  
  ::proto::MatchServiceStopNotify* temp = msg_;
  msg_ = NULL;
  return temp;
}
void MatchServiceStopImplementNotify::set_allocated_msg(::proto::MatchServiceStopNotify* msg) {
  delete msg_;
  msg_ = msg;
  if (msg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.MatchServiceStopImplementNotify.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerBlockPlayerMpNotify::kIsUnlockFieldNumber;
const int ServerBlockPlayerMpNotify::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerBlockPlayerMpNotify::ServerBlockPlayerMpNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerBlockPlayerMpNotify)
}
ServerBlockPlayerMpNotify::ServerBlockPlayerMpNotify(const ServerBlockPlayerMpNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_unlock_, &from.is_unlock_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&is_unlock_)) + sizeof(end_time_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerBlockPlayerMpNotify)
}

void ServerBlockPlayerMpNotify::SharedCtor() {
  ::memset(&is_unlock_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&is_unlock_)) + sizeof(end_time_));
  _cached_size_ = 0;
}

ServerBlockPlayerMpNotify::~ServerBlockPlayerMpNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerBlockPlayerMpNotify)
  SharedDtor();
}

void ServerBlockPlayerMpNotify::SharedDtor() {
}

void ServerBlockPlayerMpNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerBlockPlayerMpNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerBlockPlayerMpNotify& ServerBlockPlayerMpNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerBlockPlayerMpNotify* ServerBlockPlayerMpNotify::New(::google::protobuf::Arena* arena) const {
  ServerBlockPlayerMpNotify* n = new ServerBlockPlayerMpNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerBlockPlayerMpNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerBlockPlayerMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_unlock_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&is_unlock_)) + sizeof(end_time_));
  _internal_metadata_.Clear();
}

bool ServerBlockPlayerMpNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerBlockPlayerMpNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_unlock = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_unlock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerBlockPlayerMpNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerBlockPlayerMpNotify)
  return false;
#undef DO_
}

void ServerBlockPlayerMpNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerBlockPlayerMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_unlock = 1;
  if (this->is_unlock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_unlock(), output);
  }

  // uint32 end_time = 2;
  if (this->end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerBlockPlayerMpNotify)
}

::google::protobuf::uint8* ServerBlockPlayerMpNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerBlockPlayerMpNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_unlock = 1;
  if (this->is_unlock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_unlock(), target);
  }

  // uint32 end_time = 2;
  if (this->end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->end_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerBlockPlayerMpNotify)
  return target;
}

size_t ServerBlockPlayerMpNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerBlockPlayerMpNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_unlock = 1;
  if (this->is_unlock() != 0) {
    total_size += 1 + 1;
  }

  // uint32 end_time = 2;
  if (this->end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerBlockPlayerMpNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerBlockPlayerMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerBlockPlayerMpNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerBlockPlayerMpNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerBlockPlayerMpNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerBlockPlayerMpNotify)
    MergeFrom(*source);
  }
}

void ServerBlockPlayerMpNotify::MergeFrom(const ServerBlockPlayerMpNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerBlockPlayerMpNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_unlock() != 0) {
    set_is_unlock(from.is_unlock());
  }
  if (from.end_time() != 0) {
    set_end_time(from.end_time());
  }
}

void ServerBlockPlayerMpNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerBlockPlayerMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerBlockPlayerMpNotify::CopyFrom(const ServerBlockPlayerMpNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerBlockPlayerMpNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerBlockPlayerMpNotify::IsInitialized() const {
  return true;
}

void ServerBlockPlayerMpNotify::Swap(ServerBlockPlayerMpNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerBlockPlayerMpNotify::InternalSwap(ServerBlockPlayerMpNotify* other) {
  using std::swap;
  swap(is_unlock_, other->is_unlock_);
  swap(end_time_, other->end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerBlockPlayerMpNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerBlockPlayerMpNotify

// bool is_unlock = 1;
void ServerBlockPlayerMpNotify::clear_is_unlock() {
  is_unlock_ = false;
}
bool ServerBlockPlayerMpNotify::is_unlock() const {
  // @@protoc_insertion_point(field_get:proto.ServerBlockPlayerMpNotify.is_unlock)
  return is_unlock_;
}
void ServerBlockPlayerMpNotify::set_is_unlock(bool value) {
  
  is_unlock_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBlockPlayerMpNotify.is_unlock)
}

// uint32 end_time = 2;
void ServerBlockPlayerMpNotify::clear_end_time() {
  end_time_ = 0u;
}
::google::protobuf::uint32 ServerBlockPlayerMpNotify::end_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerBlockPlayerMpNotify.end_time)
  return end_time_;
}
void ServerBlockPlayerMpNotify::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBlockPlayerMpNotify.end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerBlockPlayerChatNotify::kIsUnlockFieldNumber;
const int ServerBlockPlayerChatNotify::kEndTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerBlockPlayerChatNotify::ServerBlockPlayerChatNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerBlockPlayerChatNotify)
}
ServerBlockPlayerChatNotify::ServerBlockPlayerChatNotify(const ServerBlockPlayerChatNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_unlock_, &from.is_unlock_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_time_) -
    reinterpret_cast<char*>(&is_unlock_)) + sizeof(end_time_));
  // @@protoc_insertion_point(copy_constructor:proto.ServerBlockPlayerChatNotify)
}

void ServerBlockPlayerChatNotify::SharedCtor() {
  ::memset(&is_unlock_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&is_unlock_)) + sizeof(end_time_));
  _cached_size_ = 0;
}

ServerBlockPlayerChatNotify::~ServerBlockPlayerChatNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerBlockPlayerChatNotify)
  SharedDtor();
}

void ServerBlockPlayerChatNotify::SharedDtor() {
}

void ServerBlockPlayerChatNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerBlockPlayerChatNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerBlockPlayerChatNotify& ServerBlockPlayerChatNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerBlockPlayerChatNotify* ServerBlockPlayerChatNotify::New(::google::protobuf::Arena* arena) const {
  ServerBlockPlayerChatNotify* n = new ServerBlockPlayerChatNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerBlockPlayerChatNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerBlockPlayerChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&is_unlock_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_time_) -
      reinterpret_cast<char*>(&is_unlock_)) + sizeof(end_time_));
  _internal_metadata_.Clear();
}

bool ServerBlockPlayerChatNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerBlockPlayerChatNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_unlock = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_unlock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 end_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerBlockPlayerChatNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerBlockPlayerChatNotify)
  return false;
#undef DO_
}

void ServerBlockPlayerChatNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerBlockPlayerChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_unlock = 1;
  if (this->is_unlock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_unlock(), output);
  }

  // uint32 end_time = 2;
  if (this->end_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->end_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerBlockPlayerChatNotify)
}

::google::protobuf::uint8* ServerBlockPlayerChatNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerBlockPlayerChatNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_unlock = 1;
  if (this->is_unlock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_unlock(), target);
  }

  // uint32 end_time = 2;
  if (this->end_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->end_time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerBlockPlayerChatNotify)
  return target;
}

size_t ServerBlockPlayerChatNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerBlockPlayerChatNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_unlock = 1;
  if (this->is_unlock() != 0) {
    total_size += 1 + 1;
  }

  // uint32 end_time = 2;
  if (this->end_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->end_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerBlockPlayerChatNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerBlockPlayerChatNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerBlockPlayerChatNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerBlockPlayerChatNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerBlockPlayerChatNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerBlockPlayerChatNotify)
    MergeFrom(*source);
  }
}

void ServerBlockPlayerChatNotify::MergeFrom(const ServerBlockPlayerChatNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerBlockPlayerChatNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_unlock() != 0) {
    set_is_unlock(from.is_unlock());
  }
  if (from.end_time() != 0) {
    set_end_time(from.end_time());
  }
}

void ServerBlockPlayerChatNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerBlockPlayerChatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerBlockPlayerChatNotify::CopyFrom(const ServerBlockPlayerChatNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerBlockPlayerChatNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerBlockPlayerChatNotify::IsInitialized() const {
  return true;
}

void ServerBlockPlayerChatNotify::Swap(ServerBlockPlayerChatNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerBlockPlayerChatNotify::InternalSwap(ServerBlockPlayerChatNotify* other) {
  using std::swap;
  swap(is_unlock_, other->is_unlock_);
  swap(end_time_, other->end_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerBlockPlayerChatNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerBlockPlayerChatNotify

// bool is_unlock = 1;
void ServerBlockPlayerChatNotify::clear_is_unlock() {
  is_unlock_ = false;
}
bool ServerBlockPlayerChatNotify::is_unlock() const {
  // @@protoc_insertion_point(field_get:proto.ServerBlockPlayerChatNotify.is_unlock)
  return is_unlock_;
}
void ServerBlockPlayerChatNotify::set_is_unlock(bool value) {
  
  is_unlock_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBlockPlayerChatNotify.is_unlock)
}

// uint32 end_time = 2;
void ServerBlockPlayerChatNotify::clear_end_time() {
  end_time_ = 0u;
}
::google::protobuf::uint32 ServerBlockPlayerChatNotify::end_time() const {
  // @@protoc_insertion_point(field_get:proto.ServerBlockPlayerChatNotify.end_time)
  return end_time_;
}
void ServerBlockPlayerChatNotify::set_end_time(::google::protobuf::uint32 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ServerBlockPlayerChatNotify.end_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerCheckSegmentCrcNotify::ServerCheckSegmentCrcNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.ServerCheckSegmentCrcNotify)
}
ServerCheckSegmentCrcNotify::ServerCheckSegmentCrcNotify(const ServerCheckSegmentCrcNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.ServerCheckSegmentCrcNotify)
}

void ServerCheckSegmentCrcNotify::SharedCtor() {
  _cached_size_ = 0;
}

ServerCheckSegmentCrcNotify::~ServerCheckSegmentCrcNotify() {
  // @@protoc_insertion_point(destructor:proto.ServerCheckSegmentCrcNotify)
  SharedDtor();
}

void ServerCheckSegmentCrcNotify::SharedDtor() {
}

void ServerCheckSegmentCrcNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerCheckSegmentCrcNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerCheckSegmentCrcNotify& ServerCheckSegmentCrcNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerCheckSegmentCrcNotify* ServerCheckSegmentCrcNotify::New(::google::protobuf::Arena* arena) const {
  ServerCheckSegmentCrcNotify* n = new ServerCheckSegmentCrcNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerCheckSegmentCrcNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ServerCheckSegmentCrcNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ServerCheckSegmentCrcNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.ServerCheckSegmentCrcNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.ServerCheckSegmentCrcNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.ServerCheckSegmentCrcNotify)
  return false;
#undef DO_
}

void ServerCheckSegmentCrcNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.ServerCheckSegmentCrcNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.ServerCheckSegmentCrcNotify)
}

::google::protobuf::uint8* ServerCheckSegmentCrcNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.ServerCheckSegmentCrcNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ServerCheckSegmentCrcNotify)
  return target;
}

size_t ServerCheckSegmentCrcNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ServerCheckSegmentCrcNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerCheckSegmentCrcNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.ServerCheckSegmentCrcNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerCheckSegmentCrcNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerCheckSegmentCrcNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.ServerCheckSegmentCrcNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.ServerCheckSegmentCrcNotify)
    MergeFrom(*source);
  }
}

void ServerCheckSegmentCrcNotify::MergeFrom(const ServerCheckSegmentCrcNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.ServerCheckSegmentCrcNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ServerCheckSegmentCrcNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.ServerCheckSegmentCrcNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerCheckSegmentCrcNotify::CopyFrom(const ServerCheckSegmentCrcNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ServerCheckSegmentCrcNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerCheckSegmentCrcNotify::IsInitialized() const {
  return true;
}

void ServerCheckSegmentCrcNotify::Swap(ServerCheckSegmentCrcNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerCheckSegmentCrcNotify::InternalSwap(ServerCheckSegmentCrcNotify* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerCheckSegmentCrcNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmisc_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerCheckSegmentCrcNotify

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
