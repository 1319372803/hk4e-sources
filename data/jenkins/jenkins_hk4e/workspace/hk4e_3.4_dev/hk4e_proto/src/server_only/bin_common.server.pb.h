// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/bin_common.server.proto

#ifndef PROTOBUF_server_5fonly_2fbin_5fcommon_2eserver_2eproto__INCLUDED
#define PROTOBUF_server_5fonly_2fbin_5fcommon_2eserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class ActivitySceneBin;
class ActivitySceneBinDefaultTypeInternal;
extern ActivitySceneBinDefaultTypeInternal _ActivitySceneBin_default_instance_;
class AddCoopPointSavePointListOp;
class AddCoopPointSavePointListOpDefaultTypeInternal;
extern AddCoopPointSavePointListOpDefaultTypeInternal _AddCoopPointSavePointListOp_default_instance_;
class AddFinishedTalkOp;
class AddFinishedTalkOpDefaultTypeInternal;
extern AddFinishedTalkOpDefaultTypeInternal _AddFinishedTalkOp_default_instance_;
class AddFriendAskOp;
class AddFriendAskOpDefaultTypeInternal;
extern AddFriendAskOpDefaultTypeInternal _AddFriendAskOp_default_instance_;
class AddFriendOp;
class AddFriendOpDefaultTypeInternal;
extern AddFriendOpDefaultTypeInternal _AddFriendOp_default_instance_;
class AddItemOp;
class AddItemOpDefaultTypeInternal;
extern AddItemOpDefaultTypeInternal _AddItemOp_default_instance_;
class AddItemWithLimitOp;
class AddItemWithLimitOpDefaultTypeInternal;
extern AddItemWithLimitOpDefaultTypeInternal _AddItemWithLimitOp_default_instance_;
class AddMcoinVipPointOp;
class AddMcoinVipPointOpDefaultTypeInternal;
extern AddMcoinVipPointOpDefaultTypeInternal _AddMcoinVipPointOp_default_instance_;
class AddOrModifyWatcherOp;
class AddOrModifyWatcherOpDefaultTypeInternal;
extern AddOrModifyWatcherOpDefaultTypeInternal _AddOrModifyWatcherOp_default_instance_;
class AddOrSubResinOp;
class AddOrSubResinOpDefaultTypeInternal;
extern AddOrSubResinOpDefaultTypeInternal _AddOrSubResinOp_default_instance_;
class AddRegionSearchProgressOp;
class AddRegionSearchProgressOpDefaultTypeInternal;
extern AddRegionSearchProgressOpDefaultTypeInternal _AddRegionSearchProgressOp_default_instance_;
class AreaBin;
class AreaBinDefaultTypeInternal;
extern AreaBinDefaultTypeInternal _AreaBin_default_instance_;
class AvatarRenameAuditResultOp;
class AvatarRenameAuditResultOpDefaultTypeInternal;
extern AvatarRenameAuditResultOpDefaultTypeInternal _AvatarRenameAuditResultOp_default_instance_;
class BackupGroupBin;
class BackupGroupBinDefaultTypeInternal;
extern BackupGroupBinDefaultTypeInternal _BackupGroupBin_default_instance_;
class BackupGroupBin_VariableMapEntry;
class BackupGroupBin_VariableMapEntryDefaultTypeInternal;
extern BackupGroupBin_VariableMapEntryDefaultTypeInternal _BackupGroupBin_VariableMapEntry_default_instance_;
class BanCustomDungeonOp;
class BanCustomDungeonOpDefaultTypeInternal;
extern BanCustomDungeonOpDefaultTypeInternal _BanCustomDungeonOp_default_instance_;
class BanPlayerGCGMatchOp;
class BanPlayerGCGMatchOpDefaultTypeInternal;
extern BanPlayerGCGMatchOpDefaultTypeInternal _BanPlayerGCGMatchOp_default_instance_;
class BanPlayerGCGPVPOp;
class BanPlayerGCGPVPOpDefaultTypeInternal;
extern BanPlayerGCGPVPOpDefaultTypeInternal _BanPlayerGCGPVPOp_default_instance_;
class BanUgcPublishOp;
class BanUgcPublishOpDefaultTypeInternal;
extern BanUgcPublishOpDefaultTypeInternal _BanUgcPublishOp_default_instance_;
class BlessingActivityGivePicOp;
class BlessingActivityGivePicOpDefaultTypeInternal;
extern BlessingActivityGivePicOpDefaultTypeInternal _BlessingActivityGivePicOp_default_instance_;
class ChangeMapAreaInfoOp;
class ChangeMapAreaInfoOpDefaultTypeInternal;
extern ChangeMapAreaInfoOpDefaultTypeInternal _ChangeMapAreaInfoOp_default_instance_;
class CityBin;
class CityBinDefaultTypeInternal;
extern CityBinDefaultTypeInternal _CityBin_default_instance_;
class CustomDungeonAbstractBin;
class CustomDungeonAbstractBinDefaultTypeInternal;
extern CustomDungeonAbstractBinDefaultTypeInternal _CustomDungeonAbstractBin_default_instance_;
class CustomDungeonAbstractBin_BrickStatisticsMapEntry;
class CustomDungeonAbstractBin_BrickStatisticsMapEntryDefaultTypeInternal;
extern CustomDungeonAbstractBin_BrickStatisticsMapEntryDefaultTypeInternal _CustomDungeonAbstractBin_BrickStatisticsMapEntry_default_instance_;
class CustomDungeonSettingBin;
class CustomDungeonSettingBinDefaultTypeInternal;
extern CustomDungeonSettingBinDefaultTypeInternal _CustomDungeonSettingBin_default_instance_;
class DelEquipOp;
class DelEquipOpDefaultTypeInternal;
extern DelEquipOpDefaultTypeInternal _DelEquipOp_default_instance_;
class DelFinishedTalkOp;
class DelFinishedTalkOpDefaultTypeInternal;
extern DelFinishedTalkOpDefaultTypeInternal _DelFinishedTalkOp_default_instance_;
class DelFriendAskOp;
class DelFriendAskOpDefaultTypeInternal;
extern DelFriendAskOpDefaultTypeInternal _DelFriendAskOp_default_instance_;
class DelFriendOp;
class DelFriendOpDefaultTypeInternal;
extern DelFriendOpDefaultTypeInternal _DelFriendOp_default_instance_;
class DelItemNegativeOp;
class DelItemNegativeOpDefaultTypeInternal;
extern DelItemNegativeOpDefaultTypeInternal _DelItemNegativeOp_default_instance_;
class DelItemOp;
class DelItemOpDefaultTypeInternal;
extern DelItemOpDefaultTypeInternal _DelItemOp_default_instance_;
class DelMailOp;
class DelMailOpDefaultTypeInternal;
extern DelMailOpDefaultTypeInternal _DelMailOp_default_instance_;
class DelOneOffOp;
class DelOneOffOpDefaultTypeInternal;
extern DelOneOffOpDefaultTypeInternal _DelOneOffOp_default_instance_;
class DelWatcherOp;
class DelWatcherOpDefaultTypeInternal;
extern DelWatcherOpDefaultTypeInternal _DelWatcherOp_default_instance_;
class DeletePlayerGCGCardBackOp;
class DeletePlayerGCGCardBackOpDefaultTypeInternal;
extern DeletePlayerGCGCardBackOpDefaultTypeInternal _DeletePlayerGCGCardBackOp_default_instance_;
class DeletePlayerGCGCardFaceOp;
class DeletePlayerGCGCardFaceOpDefaultTypeInternal;
extern DeletePlayerGCGCardFaceOpDefaultTypeInternal _DeletePlayerGCGCardFaceOp_default_instance_;
class DeletePlayerGCGCardOp;
class DeletePlayerGCGCardOpDefaultTypeInternal;
extern DeletePlayerGCGCardOpDefaultTypeInternal _DeletePlayerGCGCardOp_default_instance_;
class DeletePlayerGCGDeckFieldOp;
class DeletePlayerGCGDeckFieldOpDefaultTypeInternal;
extern DeletePlayerGCGDeckFieldOpDefaultTypeInternal _DeletePlayerGCGDeckFieldOp_default_instance_;
class DungeonSceneBin;
class DungeonSceneBinDefaultTypeInternal;
extern DungeonSceneBinDefaultTypeInternal _DungeonSceneBin_default_instance_;
class EnvZoneInfoBin;
class EnvZoneInfoBinDefaultTypeInternal;
extern EnvZoneInfoBinDefaultTypeInternal _EnvZoneInfoBin_default_instance_;
class ExchangeMcoinOp;
class ExchangeMcoinOpDefaultTypeInternal;
extern ExchangeMcoinOpDefaultTypeInternal _ExchangeMcoinOp_default_instance_;
class ExhibitionSetOp;
class ExhibitionSetOpDefaultTypeInternal;
extern ExhibitionSetOpDefaultTypeInternal _ExhibitionSetOp_default_instance_;
class ExpeditionActivityAssistOp;
class ExpeditionActivityAssistOpDefaultTypeInternal;
extern ExpeditionActivityAssistOpDefaultTypeInternal _ExpeditionActivityAssistOp_default_instance_;
class FailHomeModulesArrangementAuditOp;
class FailHomeModulesArrangementAuditOpDefaultTypeInternal;
extern FailHomeModulesArrangementAuditOpDefaultTypeInternal _FailHomeModulesArrangementAuditOp_default_instance_;
class FailHomeSceneArrangementAuditOp;
class FailHomeSceneArrangementAuditOpDefaultTypeInternal;
extern FailHomeSceneArrangementAuditOpDefaultTypeInternal _FailHomeSceneArrangementAuditOp_default_instance_;
class FinishDailyTaskOp;
class FinishDailyTaskOpDefaultTypeInternal;
extern FinishDailyTaskOpDefaultTypeInternal _FinishDailyTaskOp_default_instance_;
class FinishDailyTaskUnloadGroupOp;
class FinishDailyTaskUnloadGroupOpDefaultTypeInternal;
extern FinishDailyTaskUnloadGroupOpDefaultTypeInternal _FinishDailyTaskUnloadGroupOp_default_instance_;
class FinishOrderOp;
class FinishOrderOpDefaultTypeInternal;
extern FinishOrderOpDefaultTypeInternal _FinishOrderOp_default_instance_;
class FinishRoutineOp;
class FinishRoutineOpDefaultTypeInternal;
extern FinishRoutineOpDefaultTypeInternal _FinishRoutineOp_default_instance_;
class FloatPairBin;
class FloatPairBinDefaultTypeInternal;
extern FloatPairBinDefaultTypeInternal _FloatPairBin_default_instance_;
class ForceAcceptQuestOp;
class ForceAcceptQuestOpDefaultTypeInternal;
extern ForceAcceptQuestOpDefaultTypeInternal _ForceAcceptQuestOp_default_instance_;
class FurnitureMakeSlotsBin;
class FurnitureMakeSlotsBinDefaultTypeInternal;
extern FurnitureMakeSlotsBinDefaultTypeInternal _FurnitureMakeSlotsBin_default_instance_;
class GCGSettleData;
class GCGSettleDataDefaultTypeInternal;
extern GCGSettleDataDefaultTypeInternal _GCGSettleData_default_instance_;
class GCGSettleData_ChallengeProgressMapEntry;
class GCGSettleData_ChallengeProgressMapEntryDefaultTypeInternal;
extern GCGSettleData_ChallengeProgressMapEntryDefaultTypeInternal _GCGSettleData_ChallengeProgressMapEntry_default_instance_;
class GCGSettleData_ScoreMapEntry;
class GCGSettleData_ScoreMapEntryDefaultTypeInternal;
extern GCGSettleData_ScoreMapEntryDefaultTypeInternal _GCGSettleData_ScoreMapEntry_default_instance_;
class GCGSettleData_UidMapEntry;
class GCGSettleData_UidMapEntryDefaultTypeInternal;
extern GCGSettleData_UidMapEntryDefaultTypeInternal _GCGSettleData_UidMapEntry_default_instance_;
class GroupBinOp;
class GroupBinOpDefaultTypeInternal;
extern GroupBinOpDefaultTypeInternal _GroupBinOp_default_instance_;
class GroupLinkOp;
class GroupLinkOpDefaultTypeInternal;
extern GroupLinkOpDefaultTypeInternal _GroupLinkOp_default_instance_;
class GroupProductBin;
class GroupProductBinDefaultTypeInternal;
extern GroupProductBinDefaultTypeInternal _GroupProductBin_default_instance_;
class GroupProductBin_GadgetOneOffMapEntry;
class GroupProductBin_GadgetOneOffMapEntryDefaultTypeInternal;
extern GroupProductBin_GadgetOneOffMapEntryDefaultTypeInternal _GroupProductBin_GadgetOneOffMapEntry_default_instance_;
class GroupProductBin_MonsterOneOffMapEntry;
class GroupProductBin_MonsterOneOffMapEntryDefaultTypeInternal;
extern GroupProductBin_MonsterOneOffMapEntryDefaultTypeInternal _GroupProductBin_MonsterOneOffMapEntry_default_instance_;
class GroupVariableBin;
class GroupVariableBinDefaultTypeInternal;
extern GroupVariableBinDefaultTypeInternal _GroupVariableBin_default_instance_;
class GroupVariableConfigIdBin;
class GroupVariableConfigIdBinDefaultTypeInternal;
extern GroupVariableConfigIdBinDefaultTypeInternal _GroupVariableConfigIdBin_default_instance_;
class HomeOfflineMsgBin;
class HomeOfflineMsgBinDefaultTypeInternal;
extern HomeOfflineMsgBinDefaultTypeInternal _HomeOfflineMsgBin_default_instance_;
class HomeRestoreDefaultsArrangementOp;
class HomeRestoreDefaultsArrangementOpDefaultTypeInternal;
extern HomeRestoreDefaultsArrangementOpDefaultTypeInternal _HomeRestoreDefaultsArrangementOp_default_instance_;
class HomeRestoreDefaultsSceneArrangementOp;
class HomeRestoreDefaultsSceneArrangementOpDefaultTypeInternal;
extern HomeRestoreDefaultsSceneArrangementOpDefaultTypeInternal _HomeRestoreDefaultsSceneArrangementOp_default_instance_;
class HomeTestOp;
class HomeTestOpDefaultTypeInternal;
extern HomeTestOpDefaultTypeInternal _HomeTestOp_default_instance_;
class Int32List;
class Int32ListDefaultTypeInternal;
extern Int32ListDefaultTypeInternal _Int32List_default_instance_;
class InteractGadget;
class InteractGadgetDefaultTypeInternal;
extern InteractGadgetDefaultTypeInternal _InteractGadget_default_instance_;
class ItemParamBin;
class ItemParamBinDefaultTypeInternal;
extern ItemParamBinDefaultTypeInternal _ItemParamBin_default_instance_;
class LevelTagChangeOp;
class LevelTagChangeOpDefaultTypeInternal;
extern LevelTagChangeOpDefaultTypeInternal _LevelTagChangeOp_default_instance_;
class MailBin;
class MailBinDefaultTypeInternal;
extern MailBinDefaultTypeInternal _MailBin_default_instance_;
class ModifyBornPosOp;
class ModifyBornPosOpDefaultTypeInternal;
extern ModifyBornPosOpDefaultTypeInternal _ModifyBornPosOp_default_instance_;
class NicknameAuditResultOp;
class NicknameAuditResultOpDefaultTypeInternal;
extern NicknameAuditResultOpDefaultTypeInternal _NicknameAuditResultOp_default_instance_;
class OfflineMsgBin;
class OfflineMsgBinDefaultTypeInternal;
extern OfflineMsgBinDefaultTypeInternal _OfflineMsgBin_default_instance_;
class OfflineOpActivityGiveGift;
class OfflineOpActivityGiveGiftDefaultTypeInternal;
extern OfflineOpActivityGiveGiftDefaultTypeInternal _OfflineOpActivityGiveGift_default_instance_;
class OfflineOpActivityGiveGift_GiftNumMapEntry;
class OfflineOpActivityGiveGift_GiftNumMapEntryDefaultTypeInternal;
extern OfflineOpActivityGiveGift_GiftNumMapEntryDefaultTypeInternal _OfflineOpActivityGiveGift_GiftNumMapEntry_default_instance_;
class OfflineOpBin;
class OfflineOpBinDefaultTypeInternal;
extern OfflineOpBinDefaultTypeInternal _OfflineOpBin_default_instance_;
class OfflineOpFurnitureMakeHelp;
class OfflineOpFurnitureMakeHelpDefaultTypeInternal;
extern OfflineOpFurnitureMakeHelpDefaultTypeInternal _OfflineOpFurnitureMakeHelp_default_instance_;
class OfflineOpGCGSettle;
class OfflineOpGCGSettleDefaultTypeInternal;
extern OfflineOpGCGSettleDefaultTypeInternal _OfflineOpGCGSettle_default_instance_;
class OfflineOpPlantFlowerActivityGiveFlower;
class OfflineOpPlantFlowerActivityGiveFlowerDefaultTypeInternal;
extern OfflineOpPlantFlowerActivityGiveFlowerDefaultTypeInternal _OfflineOpPlantFlowerActivityGiveFlower_default_instance_;
class OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry;
class OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntryDefaultTypeInternal;
extern OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntryDefaultTypeInternal _OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry_default_instance_;
class OfflineOpTestOp;
class OfflineOpTestOpDefaultTypeInternal;
extern OfflineOpTestOpDefaultTypeInternal _OfflineOpTestOp_default_instance_;
class OfflineOpVintageActivityDividend;
class OfflineOpVintageActivityDividendDefaultTypeInternal;
extern OfflineOpVintageActivityDividendDefaultTypeInternal _OfflineOpVintageActivityDividend_default_instance_;
class OfflineOpWinterCampActivityGiveItem;
class OfflineOpWinterCampActivityGiveItemDefaultTypeInternal;
extern OfflineOpWinterCampActivityGiveItemDefaultTypeInternal _OfflineOpWinterCampActivityGiveItem_default_instance_;
class PassHomeSceneArrangementAuditOp;
class PassHomeSceneArrangementAuditOpDefaultTypeInternal;
extern PassHomeSceneArrangementAuditOpDefaultTypeInternal _PassHomeSceneArrangementAuditOp_default_instance_;
class PlayerGotoOp;
class PlayerGotoOpDefaultTypeInternal;
extern PlayerGotoOpDefaultTypeInternal _PlayerGotoOp_default_instance_;
class ProcSceneTagOp;
class ProcSceneTagOpDefaultTypeInternal;
extern ProcSceneTagOpDefaultTypeInternal _ProcSceneTagOp_default_instance_;
class ProfilePictureBin;
class ProfilePictureBinDefaultTypeInternal;
extern ProfilePictureBinDefaultTypeInternal _ProfilePictureBin_default_instance_;
class RecalculateAreaExplorePointOp;
class RecalculateAreaExplorePointOpDefaultTypeInternal;
extern RecalculateAreaExplorePointOpDefaultTypeInternal _RecalculateAreaExplorePointOp_default_instance_;
class RecoverWorldLevelOp;
class RecoverWorldLevelOpDefaultTypeInternal;
extern RecoverWorldLevelOpDefaultTypeInternal _RecoverWorldLevelOp_default_instance_;
class RefreshBlossomCircleCampOp;
class RefreshBlossomCircleCampOpDefaultTypeInternal;
extern RefreshBlossomCircleCampOpDefaultTypeInternal _RefreshBlossomCircleCampOp_default_instance_;
class RefreshGroupOp;
class RefreshGroupOpDefaultTypeInternal;
extern RefreshGroupOpDefaultTypeInternal _RefreshGroupOp_default_instance_;
class RefreshShopOp;
class RefreshShopOpDefaultTypeInternal;
extern RefreshShopOpDefaultTypeInternal _RefreshShopOp_default_instance_;
class ReliquaryBin;
class ReliquaryBinDefaultTypeInternal;
extern ReliquaryBinDefaultTypeInternal _ReliquaryBin_default_instance_;
class RemoveInvalidMapMarksOp;
class RemoveInvalidMapMarksOpDefaultTypeInternal;
extern RemoveInvalidMapMarksOpDefaultTypeInternal _RemoveInvalidMapMarksOp_default_instance_;
class ResetAvatarRenameOp;
class ResetAvatarRenameOpDefaultTypeInternal;
extern ResetAvatarRenameOpDefaultTypeInternal _ResetAvatarRenameOp_default_instance_;
class ResetChannellerSlabCampGroupOp;
class ResetChannellerSlabCampGroupOpDefaultTypeInternal;
extern ResetChannellerSlabCampGroupOpDefaultTypeInternal _ResetChannellerSlabCampGroupOp_default_instance_;
class ResetParentQuestOp;
class ResetParentQuestOpDefaultTypeInternal;
extern ResetParentQuestOpDefaultTypeInternal _ResetParentQuestOp_default_instance_;
class ResetPlayerPersistentDungeonOp;
class ResetPlayerPersistentDungeonOpDefaultTypeInternal;
extern ResetPlayerPersistentDungeonOpDefaultTypeInternal _ResetPlayerPersistentDungeonOp_default_instance_;
class ResetPlayerPosInPersistentDungeonOp;
class ResetPlayerPosInPersistentDungeonOpDefaultTypeInternal;
extern ResetPlayerPosInPersistentDungeonOpDefaultTypeInternal _ResetPlayerPosInPersistentDungeonOp_default_instance_;
class ResetPlayerWayPointInPersistentDungeonOp;
class ResetPlayerWayPointInPersistentDungeonOpDefaultTypeInternal;
extern ResetPlayerWayPointInPersistentDungeonOpDefaultTypeInternal _ResetPlayerWayPointInPersistentDungeonOp_default_instance_;
class SceneAllWeatherInfoBin;
class SceneAllWeatherInfoBinDefaultTypeInternal;
extern SceneAllWeatherInfoBinDefaultTypeInternal _SceneAllWeatherInfoBin_default_instance_;
class SceneAreaCompBin;
class SceneAreaCompBinDefaultTypeInternal;
extern SceneAreaCompBinDefaultTypeInternal _SceneAreaCompBin_default_instance_;
class SceneAreaCompBin_AreaMapEntry;
class SceneAreaCompBin_AreaMapEntryDefaultTypeInternal;
extern SceneAreaCompBin_AreaMapEntryDefaultTypeInternal _SceneAreaCompBin_AreaMapEntry_default_instance_;
class SceneAreaCompBin_CityMapEntry;
class SceneAreaCompBin_CityMapEntryDefaultTypeInternal;
extern SceneAreaCompBin_CityMapEntryDefaultTypeInternal _SceneAreaCompBin_CityMapEntry_default_instance_;
class SceneBin;
class SceneBinDefaultTypeInternal;
extern SceneBinDefaultTypeInternal _SceneBin_default_instance_;
class SceneBlockGroupCompBin;
class SceneBlockGroupCompBinDefaultTypeInternal;
extern SceneBlockGroupCompBinDefaultTypeInternal _SceneBlockGroupCompBin_default_instance_;
class SceneBlockGroupCompBin_BackupGroupMapEntry;
class SceneBlockGroupCompBin_BackupGroupMapEntryDefaultTypeInternal;
extern SceneBlockGroupCompBin_BackupGroupMapEntryDefaultTypeInternal _SceneBlockGroupCompBin_BackupGroupMapEntry_default_instance_;
class SceneClimateAreaInfoBin;
class SceneClimateAreaInfoBinDefaultTypeInternal;
extern SceneClimateAreaInfoBinDefaultTypeInternal _SceneClimateAreaInfoBin_default_instance_;
class SceneEncounterCompBin;
class SceneEncounterCompBinDefaultTypeInternal;
extern SceneEncounterCompBinDefaultTypeInternal _SceneEncounterCompBin_default_instance_;
class SceneEnvAnimalCompBin;
class SceneEnvAnimalCompBinDefaultTypeInternal;
extern SceneEnvAnimalCompBinDefaultTypeInternal _SceneEnvAnimalCompBin_default_instance_;
class SceneEnvAnimalCompBin_ZoneInfoMapEntry;
class SceneEnvAnimalCompBin_ZoneInfoMapEntryDefaultTypeInternal;
extern SceneEnvAnimalCompBin_ZoneInfoMapEntryDefaultTypeInternal _SceneEnvAnimalCompBin_ZoneInfoMapEntry_default_instance_;
class ScenePlayerLocationBin;
class ScenePlayerLocationBinDefaultTypeInternal;
extern ScenePlayerLocationBinDefaultTypeInternal _ScenePlayerLocationBin_default_instance_;
class SceneTagOp;
class SceneTagOpDefaultTypeInternal;
extern SceneTagOpDefaultTypeInternal _SceneTagOp_default_instance_;
class SceneVehicleBin;
class SceneVehicleBinDefaultTypeInternal;
extern SceneVehicleBinDefaultTypeInternal _SceneVehicleBin_default_instance_;
class SceneWeatherInfoBin;
class SceneWeatherInfoBinDefaultTypeInternal;
extern SceneWeatherInfoBinDefaultTypeInternal _SceneWeatherInfoBin_default_instance_;
class SetAvatarExtraPropOp;
class SetAvatarExtraPropOpDefaultTypeInternal;
extern SetAvatarExtraPropOpDefaultTypeInternal _SetAvatarExtraPropOp_default_instance_;
class SetClimateAreaTypeOp;
class SetClimateAreaTypeOpDefaultTypeInternal;
extern SetClimateAreaTypeOpDefaultTypeInternal _SetClimateAreaTypeOp_default_instance_;
class SetCodexOpenOrCloseOp;
class SetCodexOpenOrCloseOpDefaultTypeInternal;
extern SetCodexOpenOrCloseOpDefaultTypeInternal _SetCodexOpenOrCloseOp_default_instance_;
class SetDailyTaskVarOp;
class SetDailyTaskVarOpDefaultTypeInternal;
extern SetDailyTaskVarOpDefaultTypeInternal _SetDailyTaskVarOp_default_instance_;
class SetFinishedParentQuestChildStateOp;
class SetFinishedParentQuestChildStateOpDefaultTypeInternal;
extern SetFinishedParentQuestChildStateOpDefaultTypeInternal _SetFinishedParentQuestChildStateOp_default_instance_;
class SetGadgetChainLevelOp;
class SetGadgetChainLevelOpDefaultTypeInternal;
extern SetGadgetChainLevelOpDefaultTypeInternal _SetGadgetChainLevelOp_default_instance_;
class SetLevel1AreaExplorePointOp;
class SetLevel1AreaExplorePointOpDefaultTypeInternal;
extern SetLevel1AreaExplorePointOpDefaultTypeInternal _SetLevel1AreaExplorePointOp_default_instance_;
class SetMainCoopConfidenceOp;
class SetMainCoopConfidenceOpDefaultTypeInternal;
extern SetMainCoopConfidenceOpDefaultTypeInternal _SetMainCoopConfidenceOp_default_instance_;
class SetMatchPunishTimesOp;
class SetMatchPunishTimesOpDefaultTypeInternal;
extern SetMatchPunishTimesOpDefaultTypeInternal _SetMatchPunishTimesOp_default_instance_;
class SetPlayerGCGMatchScoreOp;
class SetPlayerGCGMatchScoreOpDefaultTypeInternal;
extern SetPlayerGCGMatchScoreOpDefaultTypeInternal _SetPlayerGCGMatchScoreOp_default_instance_;
class SetPlayerNickNameOp;
class SetPlayerNickNameOpDefaultTypeInternal;
extern SetPlayerNickNameOpDefaultTypeInternal _SetPlayerNickNameOp_default_instance_;
class SetPushTipsStateOp;
class SetPushTipsStateOpDefaultTypeInternal;
extern SetPushTipsStateOpDefaultTypeInternal _SetPushTipsStateOp_default_instance_;
class SetQuestContentProgressOp;
class SetQuestContentProgressOpDefaultTypeInternal;
extern SetQuestContentProgressOpDefaultTypeInternal _SetQuestContentProgressOp_default_instance_;
class SetQuestContentProgressOp_FailProgressMapEntry;
class SetQuestContentProgressOp_FailProgressMapEntryDefaultTypeInternal;
extern SetQuestContentProgressOp_FailProgressMapEntryDefaultTypeInternal _SetQuestContentProgressOp_FailProgressMapEntry_default_instance_;
class SetQuestContentProgressOp_FinishProgressMapEntry;
class SetQuestContentProgressOp_FinishProgressMapEntryDefaultTypeInternal;
extern SetQuestContentProgressOp_FinishProgressMapEntryDefaultTypeInternal _SetQuestContentProgressOp_FinishProgressMapEntry_default_instance_;
class SetQuestGlobalVarValueOp;
class SetQuestGlobalVarValueOpDefaultTypeInternal;
extern SetQuestGlobalVarValueOpDefaultTypeInternal _SetQuestGlobalVarValueOp_default_instance_;
class SetScenePointLockStatusOp;
class SetScenePointLockStatusOpDefaultTypeInternal;
extern SetScenePointLockStatusOpDefaultTypeInternal _SetScenePointLockStatusOp_default_instance_;
class SetSignatureOp;
class SetSignatureOpDefaultTypeInternal;
extern SetSignatureOpDefaultTypeInternal _SetSignatureOp_default_instance_;
class SetWatcherCompRecordValueOp;
class SetWatcherCompRecordValueOpDefaultTypeInternal;
extern SetWatcherCompRecordValueOpDefaultTypeInternal _SetWatcherCompRecordValueOp_default_instance_;
class SignatureAuditResultOp;
class SignatureAuditResultOpDefaultTypeInternal;
extern SignatureAuditResultOpDefaultTypeInternal _SignatureAuditResultOp_default_instance_;
class SubCoinNegativeOp;
class SubCoinNegativeOpDefaultTypeInternal;
extern SubCoinNegativeOpDefaultTypeInternal _SubCoinNegativeOp_default_instance_;
class TakeOffEquipOp;
class TakeOffEquipOpDefaultTypeInternal;
extern TakeOffEquipOpDefaultTypeInternal _TakeOffEquipOp_default_instance_;
class Uint32List;
class Uint32ListDefaultTypeInternal;
extern Uint32ListDefaultTypeInternal _Uint32List_default_instance_;
class Uint32PairBin;
class Uint32PairBinDefaultTypeInternal;
extern Uint32PairBinDefaultTypeInternal _Uint32PairBin_default_instance_;
class Uint32ToInt32PairBin;
class Uint32ToInt32PairBinDefaultTypeInternal;
extern Uint32ToInt32PairBinDefaultTypeInternal _Uint32ToInt32PairBin_default_instance_;
class UnlockAreaOp;
class UnlockAreaOpDefaultTypeInternal;
extern UnlockAreaOpDefaultTypeInternal _UnlockAreaOp_default_instance_;
class UnlockTalentOp;
class UnlockTalentOpDefaultTypeInternal;
extern UnlockTalentOpDefaultTypeInternal _UnlockTalentOp_default_instance_;
class VectorBin;
class VectorBinDefaultTypeInternal;
extern VectorBinDefaultTypeInternal _VectorBin_default_instance_;
class WayPoint;
class WayPointDefaultTypeInternal;
extern WayPointDefaultTypeInternal _WayPoint_default_instance_;
class WeaponBin;
class WeaponBinDefaultTypeInternal;
extern WeaponBinDefaultTypeInternal _WeaponBin_default_instance_;
class WeaponBin_AffixMapEntry;
class WeaponBin_AffixMapEntryDefaultTypeInternal;
extern WeaponBin_AffixMapEntryDefaultTypeInternal _WeaponBin_AffixMapEntry_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto

enum GroupBinOperation {
  GROUP_OP_NONE = 0,
  GROUP_OP_GADGET_MAP_DEL = 1,
  GROUP_OP_DEL_GADGET_LIST = 2,
  GROUP_OP_MONSTER_MAP_DEL = 3,
  GROUP_OP_DEL_MONSTER_LIST = 4,
  GORUP_OP_DEL_TRIGGER = 5,
  GROUP_OP_SET_TRIGGER_COUNT = 6,
  GROUP_OP_SET_VARIABLE_VAL = 7,
  GROUP_OP_SET_TARGET_SUITE = 8,
  GROUP_OP_SET_GADGET_STATE = 9,
  GROUP_OP_SET_DEAD = 10,
  GROUP_OP_SET_UNREGISTER = 11,
  GroupBinOperation_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GroupBinOperation_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GroupBinOperation_IsValid(int value);
const GroupBinOperation GroupBinOperation_MIN = GROUP_OP_NONE;
const GroupBinOperation GroupBinOperation_MAX = GROUP_OP_SET_UNREGISTER;
const int GroupBinOperation_ARRAYSIZE = GroupBinOperation_MAX + 1;

const ::google::protobuf::EnumDescriptor* GroupBinOperation_descriptor();
inline const ::std::string& GroupBinOperation_Name(GroupBinOperation value) {
  return ::google::protobuf::internal::NameOfEnum(
    GroupBinOperation_descriptor(), value);
}
inline bool GroupBinOperation_Parse(
    const ::std::string& name, GroupBinOperation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GroupBinOperation>(
    GroupBinOperation_descriptor(), name, value);
}
enum GroupLinkOpType {
  GROUP_LINK_OP_NONE = 0,
  GROUP_LINK_OP_BUNDLE_REGISTER = 1,
  GROUP_LINK_OP_BUNDLE_FINISH = 2,
  GROUP_LINK_OP_BUNDLE_UNREGISTER = 3,
  GroupLinkOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GroupLinkOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GroupLinkOpType_IsValid(int value);
const GroupLinkOpType GroupLinkOpType_MIN = GROUP_LINK_OP_NONE;
const GroupLinkOpType GroupLinkOpType_MAX = GROUP_LINK_OP_BUNDLE_UNREGISTER;
const int GroupLinkOpType_ARRAYSIZE = GroupLinkOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GroupLinkOpType_descriptor();
inline const ::std::string& GroupLinkOpType_Name(GroupLinkOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GroupLinkOpType_descriptor(), value);
}
inline bool GroupLinkOpType_Parse(
    const ::std::string& name, GroupLinkOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GroupLinkOpType>(
    GroupLinkOpType_descriptor(), name, value);
}
enum SceneTagOpType {
  SCENE_TAG_OP_NONE = 0,
  SCENE_TAG_OP_ADD = 1,
  SCENE_TAG_OP_DEL = 2,
  SceneTagOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  SceneTagOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool SceneTagOpType_IsValid(int value);
const SceneTagOpType SceneTagOpType_MIN = SCENE_TAG_OP_NONE;
const SceneTagOpType SceneTagOpType_MAX = SCENE_TAG_OP_DEL;
const int SceneTagOpType_ARRAYSIZE = SceneTagOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SceneTagOpType_descriptor();
inline const ::std::string& SceneTagOpType_Name(SceneTagOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SceneTagOpType_descriptor(), value);
}
inline bool SceneTagOpType_Parse(
    const ::std::string& name, SceneTagOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SceneTagOpType>(
    SceneTagOpType_descriptor(), name, value);
}
enum OfflineOpType {
  OFFLINE_OP_NONE = 0,
  OFFLINE_OP_TEST = 1,
  OFFLINE_OP_FURNITURE_MAKE_HELP = 2,
  OFFLINE_OP_PLANT_FLOWER_ACTIVITY_GIVE_FLOWER = 3,
  OFFLINE_OP_WINTER_CAMP_GIVE_ITEM = 4,
  OFFLINE_OP_ACTIVITY_GIVE_GIFT = 5,
  OFFLINE_OP_VINTAGE_ACTIVITY_DIVIDEND = 6,
  OFFLINE_OP_GCG_SETTLE = 7,
  OfflineOpType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OfflineOpType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OfflineOpType_IsValid(int value);
const OfflineOpType OfflineOpType_MIN = OFFLINE_OP_NONE;
const OfflineOpType OfflineOpType_MAX = OFFLINE_OP_GCG_SETTLE;
const int OfflineOpType_ARRAYSIZE = OfflineOpType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OfflineOpType_descriptor();
inline const ::std::string& OfflineOpType_Name(OfflineOpType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OfflineOpType_descriptor(), value);
}
inline bool OfflineOpType_Parse(
    const ::std::string& name, OfflineOpType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OfflineOpType>(
    OfflineOpType_descriptor(), name, value);
}
// ===================================================================

class VectorBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.VectorBin) */ {
 public:
  VectorBin();
  virtual ~VectorBin();

  VectorBin(const VectorBin& from);

  inline VectorBin& operator=(const VectorBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VectorBin(VectorBin&& from) noexcept
    : VectorBin() {
    *this = ::std::move(from);
  }

  inline VectorBin& operator=(VectorBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VectorBin& default_instance();

  static inline const VectorBin* internal_default_instance() {
    return reinterpret_cast<const VectorBin*>(
               &_VectorBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(VectorBin* other);
  friend void swap(VectorBin& a, VectorBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VectorBin* New() const PROTOBUF_FINAL { return New(NULL); }

  VectorBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VectorBin& from);
  void MergeFrom(const VectorBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VectorBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:proto.VectorBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Uint32PairBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Uint32PairBin) */ {
 public:
  Uint32PairBin();
  virtual ~Uint32PairBin();

  Uint32PairBin(const Uint32PairBin& from);

  inline Uint32PairBin& operator=(const Uint32PairBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Uint32PairBin(Uint32PairBin&& from) noexcept
    : Uint32PairBin() {
    *this = ::std::move(from);
  }

  inline Uint32PairBin& operator=(Uint32PairBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Uint32PairBin& default_instance();

  static inline const Uint32PairBin* internal_default_instance() {
    return reinterpret_cast<const Uint32PairBin*>(
               &_Uint32PairBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Uint32PairBin* other);
  friend void swap(Uint32PairBin& a, Uint32PairBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Uint32PairBin* New() const PROTOBUF_FINAL { return New(NULL); }

  Uint32PairBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Uint32PairBin& from);
  void MergeFrom(const Uint32PairBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Uint32PairBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // uint32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.Uint32PairBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::uint32 value_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Uint32ToInt32PairBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Uint32ToInt32PairBin) */ {
 public:
  Uint32ToInt32PairBin();
  virtual ~Uint32ToInt32PairBin();

  Uint32ToInt32PairBin(const Uint32ToInt32PairBin& from);

  inline Uint32ToInt32PairBin& operator=(const Uint32ToInt32PairBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Uint32ToInt32PairBin(Uint32ToInt32PairBin&& from) noexcept
    : Uint32ToInt32PairBin() {
    *this = ::std::move(from);
  }

  inline Uint32ToInt32PairBin& operator=(Uint32ToInt32PairBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Uint32ToInt32PairBin& default_instance();

  static inline const Uint32ToInt32PairBin* internal_default_instance() {
    return reinterpret_cast<const Uint32ToInt32PairBin*>(
               &_Uint32ToInt32PairBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Uint32ToInt32PairBin* other);
  friend void swap(Uint32ToInt32PairBin& a, Uint32ToInt32PairBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Uint32ToInt32PairBin* New() const PROTOBUF_FINAL { return New(NULL); }

  Uint32ToInt32PairBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Uint32ToInt32PairBin& from);
  void MergeFrom(const Uint32ToInt32PairBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Uint32ToInt32PairBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::uint32 key() const;
  void set_key(::google::protobuf::uint32 value);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.Uint32ToInt32PairBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 key_;
  ::google::protobuf::int32 value_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FloatPairBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FloatPairBin) */ {
 public:
  FloatPairBin();
  virtual ~FloatPairBin();

  FloatPairBin(const FloatPairBin& from);

  inline FloatPairBin& operator=(const FloatPairBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FloatPairBin(FloatPairBin&& from) noexcept
    : FloatPairBin() {
    *this = ::std::move(from);
  }

  inline FloatPairBin& operator=(FloatPairBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatPairBin& default_instance();

  static inline const FloatPairBin* internal_default_instance() {
    return reinterpret_cast<const FloatPairBin*>(
               &_FloatPairBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(FloatPairBin* other);
  friend void swap(FloatPairBin& a, FloatPairBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatPairBin* New() const PROTOBUF_FINAL { return New(NULL); }

  FloatPairBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FloatPairBin& from);
  void MergeFrom(const FloatPairBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FloatPairBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float first = 1;
  void clear_first();
  static const int kFirstFieldNumber = 1;
  float first() const;
  void set_first(float value);

  // float second = 2;
  void clear_second();
  static const int kSecondFieldNumber = 2;
  float second() const;
  void set_second(float value);

  // @@protoc_insertion_point(class_scope:proto.FloatPairBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float first_;
  float second_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Uint32List : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Uint32List) */ {
 public:
  Uint32List();
  virtual ~Uint32List();

  Uint32List(const Uint32List& from);

  inline Uint32List& operator=(const Uint32List& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Uint32List(Uint32List&& from) noexcept
    : Uint32List() {
    *this = ::std::move(from);
  }

  inline Uint32List& operator=(Uint32List&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Uint32List& default_instance();

  static inline const Uint32List* internal_default_instance() {
    return reinterpret_cast<const Uint32List*>(
               &_Uint32List_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Uint32List* other);
  friend void swap(Uint32List& a, Uint32List& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Uint32List* New() const PROTOBUF_FINAL { return New(NULL); }

  Uint32List* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Uint32List& from);
  void MergeFrom(const Uint32List& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Uint32List* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uint32_list = 1;
  int uint32_list_size() const;
  void clear_uint32_list();
  static const int kUint32ListFieldNumber = 1;
  ::google::protobuf::uint32 uint32_list(int index) const;
  void set_uint32_list(int index, ::google::protobuf::uint32 value);
  void add_uint32_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uint32_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uint32_list();

  // @@protoc_insertion_point(class_scope:proto.Uint32List)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uint32_list_;
  mutable int _uint32_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int32List : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Int32List) */ {
 public:
  Int32List();
  virtual ~Int32List();

  Int32List(const Int32List& from);

  inline Int32List& operator=(const Int32List& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int32List(Int32List&& from) noexcept
    : Int32List() {
    *this = ::std::move(from);
  }

  inline Int32List& operator=(Int32List&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int32List& default_instance();

  static inline const Int32List* internal_default_instance() {
    return reinterpret_cast<const Int32List*>(
               &_Int32List_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Int32List* other);
  friend void swap(Int32List& a, Int32List& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int32List* New() const PROTOBUF_FINAL { return New(NULL); }

  Int32List* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Int32List& from);
  void MergeFrom(const Int32List& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Int32List* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 int32_list = 1;
  int int32_list_size() const;
  void clear_int32_list();
  static const int kInt32ListFieldNumber = 1;
  ::google::protobuf::int32 int32_list(int index) const;
  void set_int32_list(int index, ::google::protobuf::int32 value);
  void add_int32_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      int32_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_int32_list();

  // @@protoc_insertion_point(class_scope:proto.Int32List)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > int32_list_;
  mutable int _int32_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReliquaryBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ReliquaryBin) */ {
 public:
  ReliquaryBin();
  virtual ~ReliquaryBin();

  ReliquaryBin(const ReliquaryBin& from);

  inline ReliquaryBin& operator=(const ReliquaryBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReliquaryBin(ReliquaryBin&& from) noexcept
    : ReliquaryBin() {
    *this = ::std::move(from);
  }

  inline ReliquaryBin& operator=(ReliquaryBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReliquaryBin& default_instance();

  static inline const ReliquaryBin* internal_default_instance() {
    return reinterpret_cast<const ReliquaryBin*>(
               &_ReliquaryBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(ReliquaryBin* other);
  friend void swap(ReliquaryBin& a, ReliquaryBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReliquaryBin* New() const PROTOBUF_FINAL { return New(NULL); }

  ReliquaryBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReliquaryBin& from);
  void MergeFrom(const ReliquaryBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReliquaryBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 append_prop_id_list = 5;
  int append_prop_id_list_size() const;
  void clear_append_prop_id_list();
  static const int kAppendPropIdListFieldNumber = 5;
  ::google::protobuf::uint32 append_prop_id_list(int index) const;
  void set_append_prop_id_list(int index, ::google::protobuf::uint32 value);
  void add_append_prop_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      append_prop_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_append_prop_id_list();

  // uint32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 exp = 2;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // uint32 main_prop_id = 4;
  void clear_main_prop_id();
  static const int kMainPropIdFieldNumber = 4;
  ::google::protobuf::uint32 main_prop_id() const;
  void set_main_prop_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ReliquaryBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > append_prop_id_list_;
  mutable int _append_prop_id_list_cached_byte_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 main_prop_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class WeaponBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WeaponBin) */ {
 public:
  WeaponBin();
  virtual ~WeaponBin();

  WeaponBin(const WeaponBin& from);

  inline WeaponBin& operator=(const WeaponBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WeaponBin(WeaponBin&& from) noexcept
    : WeaponBin() {
    *this = ::std::move(from);
  }

  inline WeaponBin& operator=(WeaponBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WeaponBin& default_instance();

  static inline const WeaponBin* internal_default_instance() {
    return reinterpret_cast<const WeaponBin*>(
               &_WeaponBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(WeaponBin* other);
  friend void swap(WeaponBin& a, WeaponBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WeaponBin* New() const PROTOBUF_FINAL { return New(NULL); }

  WeaponBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WeaponBin& from);
  void MergeFrom(const WeaponBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WeaponBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> affix_map = 4;
  int affix_map_size() const;
  void clear_affix_map();
  static const int kAffixMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      affix_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_affix_map();

  // uint32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 exp = 2;
  void clear_exp();
  static const int kExpFieldNumber = 2;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // uint32 promote_level = 3;
  void clear_promote_level();
  static const int kPromoteLevelFieldNumber = 3;
  ::google::protobuf::uint32 promote_level() const;
  void set_promote_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WeaponBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class WeaponBin_AffixMapEntry : public ::google::protobuf::internal::MapEntry<WeaponBin_AffixMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<WeaponBin_AffixMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    WeaponBin_AffixMapEntry();
    WeaponBin_AffixMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const WeaponBin_AffixMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_WeaponBin_AffixMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      WeaponBin_AffixMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > affix_map_;
  private:
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 promote_level_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ItemParamBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ItemParamBin) */ {
 public:
  ItemParamBin();
  virtual ~ItemParamBin();

  ItemParamBin(const ItemParamBin& from);

  inline ItemParamBin& operator=(const ItemParamBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ItemParamBin(ItemParamBin&& from) noexcept
    : ItemParamBin() {
    *this = ::std::move(from);
  }

  inline ItemParamBin& operator=(ItemParamBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemParamBin& default_instance();

  static inline const ItemParamBin* internal_default_instance() {
    return reinterpret_cast<const ItemParamBin*>(
               &_ItemParamBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ItemParamBin* other);
  friend void swap(ItemParamBin& a, ItemParamBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ItemParamBin* New() const PROTOBUF_FINAL { return New(NULL); }

  ItemParamBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ItemParamBin& from);
  void MergeFrom(const ItemParamBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ItemParamBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // uint32 level = 3;
  void clear_level();
  static const int kLevelFieldNumber = 3;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 promote_level = 4;
  void clear_promote_level();
  static const int kPromoteLevelFieldNumber = 4;
  ::google::protobuf::uint32 promote_level() const;
  void set_promote_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ItemParamBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 promote_level_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MailBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MailBin) */ {
 public:
  MailBin();
  virtual ~MailBin();

  MailBin(const MailBin& from);

  inline MailBin& operator=(const MailBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MailBin(MailBin&& from) noexcept
    : MailBin() {
    *this = ::std::move(from);
  }

  inline MailBin& operator=(MailBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailBin& default_instance();

  static inline const MailBin* internal_default_instance() {
    return reinterpret_cast<const MailBin*>(
               &_MailBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(MailBin* other);
  friend void swap(MailBin& a, MailBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MailBin* New() const PROTOBUF_FINAL { return New(NULL); }

  MailBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MailBin& from);
  void MergeFrom(const MailBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MailBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParamBin item_param_list = 4;
  int item_param_list_size() const;
  void clear_item_param_list();
  static const int kItemParamListFieldNumber = 4;
  const ::proto::ItemParamBin& item_param_list(int index) const;
  ::proto::ItemParamBin* mutable_item_param_list(int index);
  ::proto::ItemParamBin* add_item_param_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin >*
      mutable_item_param_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin >&
      item_param_list() const;

  // repeated string argument_list = 9;
  int argument_list_size() const;
  void clear_argument_list();
  static const int kArgumentListFieldNumber = 9;
  const ::std::string& argument_list(int index) const;
  ::std::string* mutable_argument_list(int index);
  void set_argument_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_argument_list(int index, ::std::string&& value);
  #endif
  void set_argument_list(int index, const char* value);
  void set_argument_list(int index, const char* value, size_t size);
  ::std::string* add_argument_list();
  void add_argument_list(const ::std::string& value);
  #if LANG_CXX11
  void add_argument_list(::std::string&& value);
  #endif
  void add_argument_list(const char* value);
  void add_argument_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& argument_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_argument_list();

  // string title = 1;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // string sender = 3;
  void clear_sender();
  static const int kSenderFieldNumber = 3;
  const ::std::string& sender() const;
  void set_sender(const ::std::string& value);
  #if LANG_CXX11
  void set_sender(::std::string&& value);
  #endif
  void set_sender(const char* value);
  void set_sender(const char* value, size_t size);
  ::std::string* mutable_sender();
  ::std::string* release_sender();
  void set_allocated_sender(::std::string* sender);

  // string tag = 12;
  void clear_tag();
  static const int kTagFieldNumber = 12;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // fixed32 send_time = 5;
  void clear_send_time();
  static const int kSendTimeFieldNumber = 5;
  ::google::protobuf::uint32 send_time() const;
  void set_send_time(::google::protobuf::uint32 value);

  // fixed32 expire_time = 6;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 6;
  ::google::protobuf::uint32 expire_time() const;
  void set_expire_time(::google::protobuf::uint32 value);

  // uint32 importance = 7;
  void clear_importance();
  static const int kImportanceFieldNumber = 7;
  ::google::protobuf::uint32 importance() const;
  void set_importance(::google::protobuf::uint32 value);

  // uint32 config_id = 8;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 8;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 item_limit_type = 10;
  void clear_item_limit_type();
  static const int kItemLimitTypeFieldNumber = 10;
  ::google::protobuf::uint32 item_limit_type() const;
  void set_item_limit_type(::google::protobuf::uint32 value);

  // uint32 source_type = 11;
  void clear_source_type();
  static const int kSourceTypeFieldNumber = 11;
  ::google::protobuf::uint32 source_type() const;
  void set_source_type(::google::protobuf::uint32 value);

  // uint32 reason_type = 13;
  void clear_reason_type();
  static const int kReasonTypeFieldNumber = 13;
  ::google::protobuf::uint32 reason_type() const;
  void set_reason_type(::google::protobuf::uint32 value);

  // uint32 collect_state = 14;
  void clear_collect_state();
  static const int kCollectStateFieldNumber = 14;
  ::google::protobuf::uint32 collect_state() const;
  void set_collect_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.MailBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin > item_param_list_;
  ::google::protobuf::RepeatedPtrField< ::std::string> argument_list_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr sender_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::uint32 send_time_;
  ::google::protobuf::uint32 expire_time_;
  ::google::protobuf::uint32 importance_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 item_limit_type_;
  ::google::protobuf::uint32 source_type_;
  ::google::protobuf::uint32 reason_type_;
  ::google::protobuf::uint32 collect_state_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelItemOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelItemOp) */ {
 public:
  DelItemOp();
  virtual ~DelItemOp();

  DelItemOp(const DelItemOp& from);

  inline DelItemOp& operator=(const DelItemOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelItemOp(DelItemOp&& from) noexcept
    : DelItemOp() {
    *this = ::std::move(from);
  }

  inline DelItemOp& operator=(DelItemOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelItemOp& default_instance();

  static inline const DelItemOp* internal_default_instance() {
    return reinterpret_cast<const DelItemOp*>(
               &_DelItemOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(DelItemOp* other);
  friend void swap(DelItemOp& a, DelItemOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelItemOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelItemOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelItemOp& from);
  void MergeFrom(const DelItemOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelItemOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 item_num = 2;
  void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::uint32 item_num() const;
  void set_item_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DelItemOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelItemNegativeOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelItemNegativeOp) */ {
 public:
  DelItemNegativeOp();
  virtual ~DelItemNegativeOp();

  DelItemNegativeOp(const DelItemNegativeOp& from);

  inline DelItemNegativeOp& operator=(const DelItemNegativeOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelItemNegativeOp(DelItemNegativeOp&& from) noexcept
    : DelItemNegativeOp() {
    *this = ::std::move(from);
  }

  inline DelItemNegativeOp& operator=(DelItemNegativeOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelItemNegativeOp& default_instance();

  static inline const DelItemNegativeOp* internal_default_instance() {
    return reinterpret_cast<const DelItemNegativeOp*>(
               &_DelItemNegativeOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(DelItemNegativeOp* other);
  friend void swap(DelItemNegativeOp& a, DelItemNegativeOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelItemNegativeOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelItemNegativeOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelItemNegativeOp& from);
  void MergeFrom(const DelItemNegativeOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelItemNegativeOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 item_num = 2;
  void clear_item_num();
  static const int kItemNumFieldNumber = 2;
  ::google::protobuf::uint32 item_num() const;
  void set_item_num(::google::protobuf::uint32 value);

  // uint32 remain_num = 3;
  void clear_remain_num();
  static const int kRemainNumFieldNumber = 3;
  ::google::protobuf::uint32 remain_num() const;
  void set_remain_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DelItemNegativeOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_num_;
  ::google::protobuf::uint32 remain_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelEquipOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelEquipOp) */ {
 public:
  DelEquipOp();
  virtual ~DelEquipOp();

  DelEquipOp(const DelEquipOp& from);

  inline DelEquipOp& operator=(const DelEquipOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelEquipOp(DelEquipOp&& from) noexcept
    : DelEquipOp() {
    *this = ::std::move(from);
  }

  inline DelEquipOp& operator=(DelEquipOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelEquipOp& default_instance();

  static inline const DelEquipOp* internal_default_instance() {
    return reinterpret_cast<const DelEquipOp*>(
               &_DelEquipOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(DelEquipOp* other);
  friend void swap(DelEquipOp& a, DelEquipOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelEquipOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelEquipOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelEquipOp& from);
  void MergeFrom(const DelEquipOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelEquipOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 guid = 1;
  void clear_guid();
  static const int kGuidFieldNumber = 1;
  ::google::protobuf::uint64 guid() const;
  void set_guid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.DelEquipOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 guid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerGotoOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerGotoOp) */ {
 public:
  PlayerGotoOp();
  virtual ~PlayerGotoOp();

  PlayerGotoOp(const PlayerGotoOp& from);

  inline PlayerGotoOp& operator=(const PlayerGotoOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerGotoOp(PlayerGotoOp&& from) noexcept
    : PlayerGotoOp() {
    *this = ::std::move(from);
  }

  inline PlayerGotoOp& operator=(PlayerGotoOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerGotoOp& default_instance();

  static inline const PlayerGotoOp* internal_default_instance() {
    return reinterpret_cast<const PlayerGotoOp*>(
               &_PlayerGotoOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(PlayerGotoOp* other);
  friend void swap(PlayerGotoOp& a, PlayerGotoOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerGotoOp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerGotoOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerGotoOp& from);
  void MergeFrom(const PlayerGotoOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerGotoOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.VectorBin pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::proto::VectorBin& pos() const;
  ::proto::VectorBin* mutable_pos();
  ::proto::VectorBin* release_pos();
  void set_allocated_pos(::proto::VectorBin* pos);

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerGotoOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::VectorBin* pos_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResetParentQuestOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResetParentQuestOp) */ {
 public:
  ResetParentQuestOp();
  virtual ~ResetParentQuestOp();

  ResetParentQuestOp(const ResetParentQuestOp& from);

  inline ResetParentQuestOp& operator=(const ResetParentQuestOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetParentQuestOp(ResetParentQuestOp&& from) noexcept
    : ResetParentQuestOp() {
    *this = ::std::move(from);
  }

  inline ResetParentQuestOp& operator=(ResetParentQuestOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetParentQuestOp& default_instance();

  static inline const ResetParentQuestOp* internal_default_instance() {
    return reinterpret_cast<const ResetParentQuestOp*>(
               &_ResetParentQuestOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(ResetParentQuestOp* other);
  friend void swap(ResetParentQuestOp& a, ResetParentQuestOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetParentQuestOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ResetParentQuestOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResetParentQuestOp& from);
  void MergeFrom(const ResetParentQuestOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResetParentQuestOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 parent_quest_id = 3;
  void clear_parent_quest_id();
  static const int kParentQuestIdFieldNumber = 3;
  ::google::protobuf::uint32 parent_quest_id() const;
  void set_parent_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ResetParentQuestOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 parent_quest_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RefreshGroupOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RefreshGroupOp) */ {
 public:
  RefreshGroupOp();
  virtual ~RefreshGroupOp();

  RefreshGroupOp(const RefreshGroupOp& from);

  inline RefreshGroupOp& operator=(const RefreshGroupOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RefreshGroupOp(RefreshGroupOp&& from) noexcept
    : RefreshGroupOp() {
    *this = ::std::move(from);
  }

  inline RefreshGroupOp& operator=(RefreshGroupOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshGroupOp& default_instance();

  static inline const RefreshGroupOp* internal_default_instance() {
    return reinterpret_cast<const RefreshGroupOp*>(
               &_RefreshGroupOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(RefreshGroupOp* other);
  friend void swap(RefreshGroupOp& a, RefreshGroupOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RefreshGroupOp* New() const PROTOBUF_FINAL { return New(NULL); }

  RefreshGroupOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RefreshGroupOp& from);
  void MergeFrom(const RefreshGroupOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RefreshGroupOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 group_id = 1;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 suite_id = 2;
  void clear_suite_id();
  static const int kSuiteIdFieldNumber = 2;
  ::google::protobuf::uint32 suite_id() const;
  void set_suite_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 3;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RefreshGroupOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 suite_id_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetScenePointLockStatusOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetScenePointLockStatusOp) */ {
 public:
  SetScenePointLockStatusOp();
  virtual ~SetScenePointLockStatusOp();

  SetScenePointLockStatusOp(const SetScenePointLockStatusOp& from);

  inline SetScenePointLockStatusOp& operator=(const SetScenePointLockStatusOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetScenePointLockStatusOp(SetScenePointLockStatusOp&& from) noexcept
    : SetScenePointLockStatusOp() {
    *this = ::std::move(from);
  }

  inline SetScenePointLockStatusOp& operator=(SetScenePointLockStatusOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetScenePointLockStatusOp& default_instance();

  static inline const SetScenePointLockStatusOp* internal_default_instance() {
    return reinterpret_cast<const SetScenePointLockStatusOp*>(
               &_SetScenePointLockStatusOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(SetScenePointLockStatusOp* other);
  friend void swap(SetScenePointLockStatusOp& a, SetScenePointLockStatusOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetScenePointLockStatusOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetScenePointLockStatusOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetScenePointLockStatusOp& from);
  void MergeFrom(const SetScenePointLockStatusOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetScenePointLockStatusOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 point_id = 2;
  void clear_point_id();
  static const int kPointIdFieldNumber = 2;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // bool is_locked = 3;
  void clear_is_locked();
  static const int kIsLockedFieldNumber = 3;
  bool is_locked() const;
  void set_is_locked(bool value);

  // @@protoc_insertion_point(class_scope:proto.SetScenePointLockStatusOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 point_id_;
  bool is_locked_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerNickNameOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerNickNameOp) */ {
 public:
  SetPlayerNickNameOp();
  virtual ~SetPlayerNickNameOp();

  SetPlayerNickNameOp(const SetPlayerNickNameOp& from);

  inline SetPlayerNickNameOp& operator=(const SetPlayerNickNameOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerNickNameOp(SetPlayerNickNameOp&& from) noexcept
    : SetPlayerNickNameOp() {
    *this = ::std::move(from);
  }

  inline SetPlayerNickNameOp& operator=(SetPlayerNickNameOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerNickNameOp& default_instance();

  static inline const SetPlayerNickNameOp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerNickNameOp*>(
               &_SetPlayerNickNameOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(SetPlayerNickNameOp* other);
  friend void swap(SetPlayerNickNameOp& a, SetPlayerNickNameOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerNickNameOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerNickNameOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerNickNameOp& from);
  void MergeFrom(const SetPlayerNickNameOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerNickNameOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nick_name = 1;
  void clear_nick_name();
  static const int kNickNameFieldNumber = 1;
  const ::std::string& nick_name() const;
  void set_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_nick_name(::std::string&& value);
  #endif
  void set_nick_name(const char* value);
  void set_nick_name(const char* value, size_t size);
  ::std::string* mutable_nick_name();
  ::std::string* release_nick_name();
  void set_allocated_nick_name(::std::string* nick_name);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerNickNameOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nick_name_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RefreshShopOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RefreshShopOp) */ {
 public:
  RefreshShopOp();
  virtual ~RefreshShopOp();

  RefreshShopOp(const RefreshShopOp& from);

  inline RefreshShopOp& operator=(const RefreshShopOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RefreshShopOp(RefreshShopOp&& from) noexcept
    : RefreshShopOp() {
    *this = ::std::move(from);
  }

  inline RefreshShopOp& operator=(RefreshShopOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshShopOp& default_instance();

  static inline const RefreshShopOp* internal_default_instance() {
    return reinterpret_cast<const RefreshShopOp*>(
               &_RefreshShopOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(RefreshShopOp* other);
  friend void swap(RefreshShopOp& a, RefreshShopOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RefreshShopOp* New() const PROTOBUF_FINAL { return New(NULL); }

  RefreshShopOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RefreshShopOp& from);
  void MergeFrom(const RefreshShopOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RefreshShopOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.RefreshShopOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockTalentOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnlockTalentOp) */ {
 public:
  UnlockTalentOp();
  virtual ~UnlockTalentOp();

  UnlockTalentOp(const UnlockTalentOp& from);

  inline UnlockTalentOp& operator=(const UnlockTalentOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlockTalentOp(UnlockTalentOp&& from) noexcept
    : UnlockTalentOp() {
    *this = ::std::move(from);
  }

  inline UnlockTalentOp& operator=(UnlockTalentOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockTalentOp& default_instance();

  static inline const UnlockTalentOp* internal_default_instance() {
    return reinterpret_cast<const UnlockTalentOp*>(
               &_UnlockTalentOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(UnlockTalentOp* other);
  friend void swap(UnlockTalentOp& a, UnlockTalentOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlockTalentOp* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlockTalentOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlockTalentOp& from);
  void MergeFrom(const UnlockTalentOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlockTalentOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 skill_depot_id = 2;
  void clear_skill_depot_id();
  static const int kSkillDepotIdFieldNumber = 2;
  ::google::protobuf::uint32 skill_depot_id() const;
  void set_skill_depot_id(::google::protobuf::uint32 value);

  // uint32 talent_id = 3;
  void clear_talent_id();
  static const int kTalentIdFieldNumber = 3;
  ::google::protobuf::uint32 talent_id() const;
  void set_talent_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UnlockTalentOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 skill_depot_id_;
  ::google::protobuf::uint32 talent_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TakeOffEquipOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.TakeOffEquipOp) */ {
 public:
  TakeOffEquipOp();
  virtual ~TakeOffEquipOp();

  TakeOffEquipOp(const TakeOffEquipOp& from);

  inline TakeOffEquipOp& operator=(const TakeOffEquipOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TakeOffEquipOp(TakeOffEquipOp&& from) noexcept
    : TakeOffEquipOp() {
    *this = ::std::move(from);
  }

  inline TakeOffEquipOp& operator=(TakeOffEquipOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TakeOffEquipOp& default_instance();

  static inline const TakeOffEquipOp* internal_default_instance() {
    return reinterpret_cast<const TakeOffEquipOp*>(
               &_TakeOffEquipOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(TakeOffEquipOp* other);
  friend void swap(TakeOffEquipOp& a, TakeOffEquipOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TakeOffEquipOp* New() const PROTOBUF_FINAL { return New(NULL); }

  TakeOffEquipOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TakeOffEquipOp& from);
  void MergeFrom(const TakeOffEquipOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TakeOffEquipOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 equip_type = 2;
  void clear_equip_type();
  static const int kEquipTypeFieldNumber = 2;
  ::google::protobuf::uint32 equip_type() const;
  void set_equip_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.TakeOffEquipOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 equip_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelMailOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelMailOp) */ {
 public:
  DelMailOp();
  virtual ~DelMailOp();

  DelMailOp(const DelMailOp& from);

  inline DelMailOp& operator=(const DelMailOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelMailOp(DelMailOp&& from) noexcept
    : DelMailOp() {
    *this = ::std::move(from);
  }

  inline DelMailOp& operator=(DelMailOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelMailOp& default_instance();

  static inline const DelMailOp* internal_default_instance() {
    return reinterpret_cast<const DelMailOp*>(
               &_DelMailOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(DelMailOp* other);
  friend void swap(DelMailOp& a, DelMailOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelMailOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelMailOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelMailOp& from);
  void MergeFrom(const DelMailOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelMailOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mail_id_list = 1;
  int mail_id_list_size() const;
  void clear_mail_id_list();
  static const int kMailIdListFieldNumber = 1;
  ::google::protobuf::uint32 mail_id_list(int index) const;
  void set_mail_id_list(int index, ::google::protobuf::uint32 value);
  void add_mail_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mail_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mail_id_list();

  // @@protoc_insertion_point(class_scope:proto.DelMailOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mail_id_list_;
  mutable int _mail_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnlockAreaOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnlockAreaOp) */ {
 public:
  UnlockAreaOp();
  virtual ~UnlockAreaOp();

  UnlockAreaOp(const UnlockAreaOp& from);

  inline UnlockAreaOp& operator=(const UnlockAreaOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnlockAreaOp(UnlockAreaOp&& from) noexcept
    : UnlockAreaOp() {
    *this = ::std::move(from);
  }

  inline UnlockAreaOp& operator=(UnlockAreaOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnlockAreaOp& default_instance();

  static inline const UnlockAreaOp* internal_default_instance() {
    return reinterpret_cast<const UnlockAreaOp*>(
               &_UnlockAreaOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(UnlockAreaOp* other);
  friend void swap(UnlockAreaOp& a, UnlockAreaOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnlockAreaOp* New() const PROTOBUF_FINAL { return New(NULL); }

  UnlockAreaOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnlockAreaOp& from);
  void MergeFrom(const UnlockAreaOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnlockAreaOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 area_id = 1;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UnlockAreaOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 area_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FinishDailyTaskOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FinishDailyTaskOp) */ {
 public:
  FinishDailyTaskOp();
  virtual ~FinishDailyTaskOp();

  FinishDailyTaskOp(const FinishDailyTaskOp& from);

  inline FinishDailyTaskOp& operator=(const FinishDailyTaskOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FinishDailyTaskOp(FinishDailyTaskOp&& from) noexcept
    : FinishDailyTaskOp() {
    *this = ::std::move(from);
  }

  inline FinishDailyTaskOp& operator=(FinishDailyTaskOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishDailyTaskOp& default_instance();

  static inline const FinishDailyTaskOp* internal_default_instance() {
    return reinterpret_cast<const FinishDailyTaskOp*>(
               &_FinishDailyTaskOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(FinishDailyTaskOp* other);
  friend void swap(FinishDailyTaskOp& a, FinishDailyTaskOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FinishDailyTaskOp* New() const PROTOBUF_FINAL { return New(NULL); }

  FinishDailyTaskOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FinishDailyTaskOp& from);
  void MergeFrom(const FinishDailyTaskOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FinishDailyTaskOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 daily_task_id = 1;
  void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 1;
  ::google::protobuf::uint32 daily_task_id() const;
  void set_daily_task_id(::google::protobuf::uint32 value);

  // uint32 daily_time = 2;
  void clear_daily_time();
  static const int kDailyTimeFieldNumber = 2;
  ::google::protobuf::uint32 daily_time() const;
  void set_daily_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FinishDailyTaskOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 daily_task_id_;
  ::google::protobuf::uint32 daily_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddItemOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddItemOp) */ {
 public:
  AddItemOp();
  virtual ~AddItemOp();

  AddItemOp(const AddItemOp& from);

  inline AddItemOp& operator=(const AddItemOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddItemOp(AddItemOp&& from) noexcept
    : AddItemOp() {
    *this = ::std::move(from);
  }

  inline AddItemOp& operator=(AddItemOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddItemOp& default_instance();

  enum DetailCase {
    kReliquary = 101,
    kWeapon = 102,
    DETAIL_NOT_SET = 0,
  };

  static inline const AddItemOp* internal_default_instance() {
    return reinterpret_cast<const AddItemOp*>(
               &_AddItemOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(AddItemOp* other);
  friend void swap(AddItemOp& a, AddItemOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddItemOp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddItemOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddItemOp& from);
  void MergeFrom(const AddItemOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddItemOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 item_id = 1;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // uint32 item_count = 2;
  void clear_item_count();
  static const int kItemCountFieldNumber = 2;
  ::google::protobuf::uint32 item_count() const;
  void set_item_count(::google::protobuf::uint32 value);

  // .proto.ReliquaryBin reliquary = 101;
  bool has_reliquary() const;
  void clear_reliquary();
  static const int kReliquaryFieldNumber = 101;
  const ::proto::ReliquaryBin& reliquary() const;
  ::proto::ReliquaryBin* mutable_reliquary();
  ::proto::ReliquaryBin* release_reliquary();
  void set_allocated_reliquary(::proto::ReliquaryBin* reliquary);

  // .proto.WeaponBin weapon = 102;
  bool has_weapon() const;
  void clear_weapon();
  static const int kWeaponFieldNumber = 102;
  const ::proto::WeaponBin& weapon() const;
  ::proto::WeaponBin* mutable_weapon();
  ::proto::WeaponBin* release_weapon();
  void set_allocated_weapon(::proto::WeaponBin* weapon);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.AddItemOp)
 private:
  void set_has_reliquary();
  void set_has_weapon();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 item_id_;
  ::google::protobuf::uint32 item_count_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::ReliquaryBin* reliquary_;
    ::proto::WeaponBin* weapon_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ModifyBornPosOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ModifyBornPosOp) */ {
 public:
  ModifyBornPosOp();
  virtual ~ModifyBornPosOp();

  ModifyBornPosOp(const ModifyBornPosOp& from);

  inline ModifyBornPosOp& operator=(const ModifyBornPosOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ModifyBornPosOp(ModifyBornPosOp&& from) noexcept
    : ModifyBornPosOp() {
    *this = ::std::move(from);
  }

  inline ModifyBornPosOp& operator=(ModifyBornPosOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ModifyBornPosOp& default_instance();

  static inline const ModifyBornPosOp* internal_default_instance() {
    return reinterpret_cast<const ModifyBornPosOp*>(
               &_ModifyBornPosOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(ModifyBornPosOp* other);
  friend void swap(ModifyBornPosOp& a, ModifyBornPosOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ModifyBornPosOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ModifyBornPosOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ModifyBornPosOp& from);
  void MergeFrom(const ModifyBornPosOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ModifyBornPosOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.VectorBin pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::proto::VectorBin& pos() const;
  ::proto::VectorBin* mutable_pos();
  ::proto::VectorBin* release_pos();
  void set_allocated_pos(::proto::VectorBin* pos);

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ModifyBornPosOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::VectorBin* pos_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SubCoinNegativeOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SubCoinNegativeOp) */ {
 public:
  SubCoinNegativeOp();
  virtual ~SubCoinNegativeOp();

  SubCoinNegativeOp(const SubCoinNegativeOp& from);

  inline SubCoinNegativeOp& operator=(const SubCoinNegativeOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SubCoinNegativeOp(SubCoinNegativeOp&& from) noexcept
    : SubCoinNegativeOp() {
    *this = ::std::move(from);
  }

  inline SubCoinNegativeOp& operator=(SubCoinNegativeOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubCoinNegativeOp& default_instance();

  static inline const SubCoinNegativeOp* internal_default_instance() {
    return reinterpret_cast<const SubCoinNegativeOp*>(
               &_SubCoinNegativeOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(SubCoinNegativeOp* other);
  friend void swap(SubCoinNegativeOp& a, SubCoinNegativeOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SubCoinNegativeOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SubCoinNegativeOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SubCoinNegativeOp& from);
  void MergeFrom(const SubCoinNegativeOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SubCoinNegativeOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scoin = 1;
  void clear_scoin();
  static const int kScoinFieldNumber = 1;
  ::google::protobuf::uint32 scoin() const;
  void set_scoin(::google::protobuf::uint32 value);

  // uint32 hcoin = 2;
  void clear_hcoin();
  static const int kHcoinFieldNumber = 2;
  ::google::protobuf::uint32 hcoin() const;
  void set_hcoin(::google::protobuf::uint32 value);

  // uint32 mcoin = 3;
  void clear_mcoin();
  static const int kMcoinFieldNumber = 3;
  ::google::protobuf::uint32 mcoin() const;
  void set_mcoin(::google::protobuf::uint32 value);

  // uint32 home_coin = 4;
  void clear_home_coin();
  static const int kHomeCoinFieldNumber = 4;
  ::google::protobuf::uint32 home_coin() const;
  void set_home_coin(::google::protobuf::uint32 value);

  // .proto.PlatformType platform_type = 5;
  void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 5;
  ::proto::PlatformType platform_type() const;
  void set_platform_type(::proto::PlatformType value);

  // @@protoc_insertion_point(class_scope:proto.SubCoinNegativeOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scoin_;
  ::google::protobuf::uint32 hcoin_;
  ::google::protobuf::uint32 mcoin_;
  ::google::protobuf::uint32 home_coin_;
  int platform_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SetQuestContentProgressOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetQuestContentProgressOp) */ {
 public:
  SetQuestContentProgressOp();
  virtual ~SetQuestContentProgressOp();

  SetQuestContentProgressOp(const SetQuestContentProgressOp& from);

  inline SetQuestContentProgressOp& operator=(const SetQuestContentProgressOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetQuestContentProgressOp(SetQuestContentProgressOp&& from) noexcept
    : SetQuestContentProgressOp() {
    *this = ::std::move(from);
  }

  inline SetQuestContentProgressOp& operator=(SetQuestContentProgressOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetQuestContentProgressOp& default_instance();

  static inline const SetQuestContentProgressOp* internal_default_instance() {
    return reinterpret_cast<const SetQuestContentProgressOp*>(
               &_SetQuestContentProgressOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(SetQuestContentProgressOp* other);
  friend void swap(SetQuestContentProgressOp& a, SetQuestContentProgressOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetQuestContentProgressOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetQuestContentProgressOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetQuestContentProgressOp& from);
  void MergeFrom(const SetQuestContentProgressOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetQuestContentProgressOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> finish_progress_map = 2;
  int finish_progress_map_size() const;
  void clear_finish_progress_map();
  static const int kFinishProgressMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      finish_progress_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_finish_progress_map();

  // map<uint32, uint32> fail_progress_map = 3;
  int fail_progress_map_size() const;
  void clear_fail_progress_map();
  static const int kFailProgressMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      fail_progress_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_fail_progress_map();

  // uint32 quest_id = 1;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetQuestContentProgressOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SetQuestContentProgressOp_FinishProgressMapEntry : public ::google::protobuf::internal::MapEntry<SetQuestContentProgressOp_FinishProgressMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SetQuestContentProgressOp_FinishProgressMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SetQuestContentProgressOp_FinishProgressMapEntry();
    SetQuestContentProgressOp_FinishProgressMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SetQuestContentProgressOp_FinishProgressMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SetQuestContentProgressOp_FinishProgressMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SetQuestContentProgressOp_FinishProgressMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > finish_progress_map_;
  private:
  public:
  class SetQuestContentProgressOp_FailProgressMapEntry : public ::google::protobuf::internal::MapEntry<SetQuestContentProgressOp_FailProgressMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SetQuestContentProgressOp_FailProgressMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    SetQuestContentProgressOp_FailProgressMapEntry();
    SetQuestContentProgressOp_FailProgressMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SetQuestContentProgressOp_FailProgressMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SetQuestContentProgressOp_FailProgressMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SetQuestContentProgressOp_FailProgressMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > fail_progress_map_;
  private:
  ::google::protobuf::uint32 quest_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FinishOrderOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FinishOrderOp) */ {
 public:
  FinishOrderOp();
  virtual ~FinishOrderOp();

  FinishOrderOp(const FinishOrderOp& from);

  inline FinishOrderOp& operator=(const FinishOrderOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FinishOrderOp(FinishOrderOp&& from) noexcept
    : FinishOrderOp() {
    *this = ::std::move(from);
  }

  inline FinishOrderOp& operator=(FinishOrderOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishOrderOp& default_instance();

  static inline const FinishOrderOp* internal_default_instance() {
    return reinterpret_cast<const FinishOrderOp*>(
               &_FinishOrderOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(FinishOrderOp* other);
  friend void swap(FinishOrderOp& a, FinishOrderOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FinishOrderOp* New() const PROTOBUF_FINAL { return New(NULL); }

  FinishOrderOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FinishOrderOp& from);
  void MergeFrom(const FinishOrderOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FinishOrderOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 order_id = 1;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  ::google::protobuf::uint32 order_id() const;
  void set_order_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FinishOrderOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 order_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddOrModifyWatcherOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddOrModifyWatcherOp) */ {
 public:
  AddOrModifyWatcherOp();
  virtual ~AddOrModifyWatcherOp();

  AddOrModifyWatcherOp(const AddOrModifyWatcherOp& from);

  inline AddOrModifyWatcherOp& operator=(const AddOrModifyWatcherOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddOrModifyWatcherOp(AddOrModifyWatcherOp&& from) noexcept
    : AddOrModifyWatcherOp() {
    *this = ::std::move(from);
  }

  inline AddOrModifyWatcherOp& operator=(AddOrModifyWatcherOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddOrModifyWatcherOp& default_instance();

  static inline const AddOrModifyWatcherOp* internal_default_instance() {
    return reinterpret_cast<const AddOrModifyWatcherOp*>(
               &_AddOrModifyWatcherOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(AddOrModifyWatcherOp* other);
  friend void swap(AddOrModifyWatcherOp& a, AddOrModifyWatcherOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddOrModifyWatcherOp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddOrModifyWatcherOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddOrModifyWatcherOp& from);
  void MergeFrom(const AddOrModifyWatcherOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddOrModifyWatcherOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 watcher_id = 1;
  void clear_watcher_id();
  static const int kWatcherIdFieldNumber = 1;
  ::google::protobuf::uint32 watcher_id() const;
  void set_watcher_id(::google::protobuf::uint32 value);

  // uint32 progress = 2;
  void clear_progress();
  static const int kProgressFieldNumber = 2;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AddOrModifyWatcherOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 watcher_id_;
  ::google::protobuf::uint32 progress_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelWatcherOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelWatcherOp) */ {
 public:
  DelWatcherOp();
  virtual ~DelWatcherOp();

  DelWatcherOp(const DelWatcherOp& from);

  inline DelWatcherOp& operator=(const DelWatcherOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelWatcherOp(DelWatcherOp&& from) noexcept
    : DelWatcherOp() {
    *this = ::std::move(from);
  }

  inline DelWatcherOp& operator=(DelWatcherOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelWatcherOp& default_instance();

  static inline const DelWatcherOp* internal_default_instance() {
    return reinterpret_cast<const DelWatcherOp*>(
               &_DelWatcherOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(DelWatcherOp* other);
  friend void swap(DelWatcherOp& a, DelWatcherOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelWatcherOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelWatcherOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelWatcherOp& from);
  void MergeFrom(const DelWatcherOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelWatcherOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 watcher_id = 1;
  void clear_watcher_id();
  static const int kWatcherIdFieldNumber = 1;
  ::google::protobuf::uint32 watcher_id() const;
  void set_watcher_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DelWatcherOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 watcher_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetSignatureOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetSignatureOp) */ {
 public:
  SetSignatureOp();
  virtual ~SetSignatureOp();

  SetSignatureOp(const SetSignatureOp& from);

  inline SetSignatureOp& operator=(const SetSignatureOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetSignatureOp(SetSignatureOp&& from) noexcept
    : SetSignatureOp() {
    *this = ::std::move(from);
  }

  inline SetSignatureOp& operator=(SetSignatureOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetSignatureOp& default_instance();

  static inline const SetSignatureOp* internal_default_instance() {
    return reinterpret_cast<const SetSignatureOp*>(
               &_SetSignatureOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(SetSignatureOp* other);
  friend void swap(SetSignatureOp& a, SetSignatureOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetSignatureOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetSignatureOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetSignatureOp& from);
  void MergeFrom(const SetSignatureOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetSignatureOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string signature = 1;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:proto.SetSignatureOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddOrSubResinOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddOrSubResinOp) */ {
 public:
  AddOrSubResinOp();
  virtual ~AddOrSubResinOp();

  AddOrSubResinOp(const AddOrSubResinOp& from);

  inline AddOrSubResinOp& operator=(const AddOrSubResinOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddOrSubResinOp(AddOrSubResinOp&& from) noexcept
    : AddOrSubResinOp() {
    *this = ::std::move(from);
  }

  inline AddOrSubResinOp& operator=(AddOrSubResinOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddOrSubResinOp& default_instance();

  static inline const AddOrSubResinOp* internal_default_instance() {
    return reinterpret_cast<const AddOrSubResinOp*>(
               &_AddOrSubResinOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(AddOrSubResinOp* other);
  friend void swap(AddOrSubResinOp& a, AddOrSubResinOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddOrSubResinOp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddOrSubResinOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddOrSubResinOp& from);
  void MergeFrom(const AddOrSubResinOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddOrSubResinOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 delta_count = 1;
  void clear_delta_count();
  static const int kDeltaCountFieldNumber = 1;
  ::google::protobuf::uint32 delta_count() const;
  void set_delta_count(::google::protobuf::uint32 value);

  // bool is_sub = 2;
  void clear_is_sub();
  static const int kIsSubFieldNumber = 2;
  bool is_sub() const;
  void set_is_sub(bool value);

  // @@protoc_insertion_point(class_scope:proto.AddOrSubResinOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 delta_count_;
  bool is_sub_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetQuestGlobalVarValueOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetQuestGlobalVarValueOp) */ {
 public:
  SetQuestGlobalVarValueOp();
  virtual ~SetQuestGlobalVarValueOp();

  SetQuestGlobalVarValueOp(const SetQuestGlobalVarValueOp& from);

  inline SetQuestGlobalVarValueOp& operator=(const SetQuestGlobalVarValueOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetQuestGlobalVarValueOp(SetQuestGlobalVarValueOp&& from) noexcept
    : SetQuestGlobalVarValueOp() {
    *this = ::std::move(from);
  }

  inline SetQuestGlobalVarValueOp& operator=(SetQuestGlobalVarValueOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetQuestGlobalVarValueOp& default_instance();

  static inline const SetQuestGlobalVarValueOp* internal_default_instance() {
    return reinterpret_cast<const SetQuestGlobalVarValueOp*>(
               &_SetQuestGlobalVarValueOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(SetQuestGlobalVarValueOp* other);
  friend void swap(SetQuestGlobalVarValueOp& a, SetQuestGlobalVarValueOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetQuestGlobalVarValueOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetQuestGlobalVarValueOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetQuestGlobalVarValueOp& from);
  void MergeFrom(const SetQuestGlobalVarValueOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetQuestGlobalVarValueOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetQuestGlobalVarValueOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 value_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddMcoinVipPointOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddMcoinVipPointOp) */ {
 public:
  AddMcoinVipPointOp();
  virtual ~AddMcoinVipPointOp();

  AddMcoinVipPointOp(const AddMcoinVipPointOp& from);

  inline AddMcoinVipPointOp& operator=(const AddMcoinVipPointOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddMcoinVipPointOp(AddMcoinVipPointOp&& from) noexcept
    : AddMcoinVipPointOp() {
    *this = ::std::move(from);
  }

  inline AddMcoinVipPointOp& operator=(AddMcoinVipPointOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMcoinVipPointOp& default_instance();

  static inline const AddMcoinVipPointOp* internal_default_instance() {
    return reinterpret_cast<const AddMcoinVipPointOp*>(
               &_AddMcoinVipPointOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(AddMcoinVipPointOp* other);
  friend void swap(AddMcoinVipPointOp& a, AddMcoinVipPointOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddMcoinVipPointOp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddMcoinVipPointOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddMcoinVipPointOp& from);
  void MergeFrom(const AddMcoinVipPointOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddMcoinVipPointOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 mcoin = 1;
  void clear_mcoin();
  static const int kMcoinFieldNumber = 1;
  ::google::protobuf::uint32 mcoin() const;
  void set_mcoin(::google::protobuf::uint32 value);

  // uint32 vip_point = 2;
  void clear_vip_point();
  static const int kVipPointFieldNumber = 2;
  ::google::protobuf::uint32 vip_point() const;
  void set_vip_point(::google::protobuf::uint32 value);

  // .proto.PlatformType platform_type = 3;
  void clear_platform_type();
  static const int kPlatformTypeFieldNumber = 3;
  ::proto::PlatformType platform_type() const;
  void set_platform_type(::proto::PlatformType value);

  // @@protoc_insertion_point(class_scope:proto.AddMcoinVipPointOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 mcoin_;
  ::google::protobuf::uint32 vip_point_;
  int platform_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExchangeMcoinOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExchangeMcoinOp) */ {
 public:
  ExchangeMcoinOp();
  virtual ~ExchangeMcoinOp();

  ExchangeMcoinOp(const ExchangeMcoinOp& from);

  inline ExchangeMcoinOp& operator=(const ExchangeMcoinOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExchangeMcoinOp(ExchangeMcoinOp&& from) noexcept
    : ExchangeMcoinOp() {
    *this = ::std::move(from);
  }

  inline ExchangeMcoinOp& operator=(ExchangeMcoinOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeMcoinOp& default_instance();

  static inline const ExchangeMcoinOp* internal_default_instance() {
    return reinterpret_cast<const ExchangeMcoinOp*>(
               &_ExchangeMcoinOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(ExchangeMcoinOp* other);
  friend void swap(ExchangeMcoinOp& a, ExchangeMcoinOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExchangeMcoinOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ExchangeMcoinOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExchangeMcoinOp& from);
  void MergeFrom(const ExchangeMcoinOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExchangeMcoinOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 num = 1;
  void clear_num();
  static const int kNumFieldNumber = 1;
  ::google::protobuf::uint32 num() const;
  void set_num(::google::protobuf::uint32 value);

  // .proto.ExchangeMcoinType exchange_type = 2;
  void clear_exchange_type();
  static const int kExchangeTypeFieldNumber = 2;
  ::proto::ExchangeMcoinType exchange_type() const;
  void set_exchange_type(::proto::ExchangeMcoinType value);

  // @@protoc_insertion_point(class_scope:proto.ExchangeMcoinOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 num_;
  int exchange_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupBinOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupBinOp) */ {
 public:
  GroupBinOp();
  virtual ~GroupBinOp();

  GroupBinOp(const GroupBinOp& from);

  inline GroupBinOp& operator=(const GroupBinOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupBinOp(GroupBinOp&& from) noexcept
    : GroupBinOp() {
    *this = ::std::move(from);
  }

  inline GroupBinOp& operator=(GroupBinOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupBinOp& default_instance();

  static inline const GroupBinOp* internal_default_instance() {
    return reinterpret_cast<const GroupBinOp*>(
               &_GroupBinOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(GroupBinOp* other);
  friend void swap(GroupBinOp& a, GroupBinOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupBinOp* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupBinOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupBinOp& from);
  void MergeFrom(const GroupBinOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupBinOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string trigger_name = 7;
  void clear_trigger_name();
  static const int kTriggerNameFieldNumber = 7;
  const ::std::string& trigger_name() const;
  void set_trigger_name(const ::std::string& value);
  #if LANG_CXX11
  void set_trigger_name(::std::string&& value);
  #endif
  void set_trigger_name(const char* value);
  void set_trigger_name(const char* value, size_t size);
  ::std::string* mutable_trigger_name();
  ::std::string* release_trigger_name();
  void set_allocated_trigger_name(::std::string* trigger_name);

  // string variable_name = 9;
  void clear_variable_name();
  static const int kVariableNameFieldNumber = 9;
  const ::std::string& variable_name() const;
  void set_variable_name(const ::std::string& value);
  #if LANG_CXX11
  void set_variable_name(::std::string&& value);
  #endif
  void set_variable_name(const char* value);
  void set_variable_name(const char* value, size_t size);
  ::std::string* mutable_variable_name();
  ::std::string* release_variable_name();
  void set_allocated_variable_name(::std::string* variable_name);

  // .proto.GroupBinOperation op_type = 1;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  ::proto::GroupBinOperation op_type() const;
  void set_op_type(::proto::GroupBinOperation value);

  // uint32 group_id = 2;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 config_id = 3;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 3;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 state = 5;
  void clear_state();
  static const int kStateFieldNumber = 5;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // bool is_add = 4;
  void clear_is_add();
  static const int kIsAddFieldNumber = 4;
  bool is_add() const;
  void set_is_add(bool value);

  // bool is_create = 6;
  void clear_is_create();
  static const int kIsCreateFieldNumber = 6;
  bool is_create() const;
  void set_is_create(bool value);

  // uint32 trigger_count = 8;
  void clear_trigger_count();
  static const int kTriggerCountFieldNumber = 8;
  ::google::protobuf::uint32 trigger_count() const;
  void set_trigger_count(::google::protobuf::uint32 value);

  // int32 variable_value = 10;
  void clear_variable_value();
  static const int kVariableValueFieldNumber = 10;
  ::google::protobuf::int32 variable_value() const;
  void set_variable_value(::google::protobuf::int32 value);

  // uint32 target_suite = 11;
  void clear_target_suite();
  static const int kTargetSuiteFieldNumber = 11;
  ::google::protobuf::uint32 target_suite() const;
  void set_target_suite(::google::protobuf::uint32 value);

  // uint32 scene_id = 12;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 12;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GroupBinOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr trigger_name_;
  ::google::protobuf::internal::ArenaStringPtr variable_name_;
  int op_type_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 state_;
  bool is_add_;
  bool is_create_;
  ::google::protobuf::uint32 trigger_count_;
  ::google::protobuf::int32 variable_value_;
  ::google::protobuf::uint32 target_suite_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelOneOffOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelOneOffOp) */ {
 public:
  DelOneOffOp();
  virtual ~DelOneOffOp();

  DelOneOffOp(const DelOneOffOp& from);

  inline DelOneOffOp& operator=(const DelOneOffOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelOneOffOp(DelOneOffOp&& from) noexcept
    : DelOneOffOp() {
    *this = ::std::move(from);
  }

  inline DelOneOffOp& operator=(DelOneOffOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelOneOffOp& default_instance();

  static inline const DelOneOffOp* internal_default_instance() {
    return reinterpret_cast<const DelOneOffOp*>(
               &_DelOneOffOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(DelOneOffOp* other);
  friend void swap(DelOneOffOp& a, DelOneOffOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelOneOffOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelOneOffOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelOneOffOp& from);
  void MergeFrom(const DelOneOffOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelOneOffOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 group_id = 1;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // bool is_monster = 3;
  void clear_is_monster();
  static const int kIsMonsterFieldNumber = 3;
  bool is_monster() const;
  void set_is_monster(bool value);

  // uint32 scene_id = 4;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 4;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DelOneOffOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 config_id_;
  bool is_monster_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FinishRoutineOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FinishRoutineOp) */ {
 public:
  FinishRoutineOp();
  virtual ~FinishRoutineOp();

  FinishRoutineOp(const FinishRoutineOp& from);

  inline FinishRoutineOp& operator=(const FinishRoutineOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FinishRoutineOp(FinishRoutineOp&& from) noexcept
    : FinishRoutineOp() {
    *this = ::std::move(from);
  }

  inline FinishRoutineOp& operator=(FinishRoutineOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishRoutineOp& default_instance();

  static inline const FinishRoutineOp* internal_default_instance() {
    return reinterpret_cast<const FinishRoutineOp*>(
               &_FinishRoutineOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(FinishRoutineOp* other);
  friend void swap(FinishRoutineOp& a, FinishRoutineOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FinishRoutineOp* New() const PROTOBUF_FINAL { return New(NULL); }

  FinishRoutineOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FinishRoutineOp& from);
  void MergeFrom(const FinishRoutineOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FinishRoutineOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 routine_id = 1;
  void clear_routine_id();
  static const int kRoutineIdFieldNumber = 1;
  ::google::protobuf::uint32 routine_id() const;
  void set_routine_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FinishRoutineOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 routine_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FinishDailyTaskUnloadGroupOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FinishDailyTaskUnloadGroupOp) */ {
 public:
  FinishDailyTaskUnloadGroupOp();
  virtual ~FinishDailyTaskUnloadGroupOp();

  FinishDailyTaskUnloadGroupOp(const FinishDailyTaskUnloadGroupOp& from);

  inline FinishDailyTaskUnloadGroupOp& operator=(const FinishDailyTaskUnloadGroupOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FinishDailyTaskUnloadGroupOp(FinishDailyTaskUnloadGroupOp&& from) noexcept
    : FinishDailyTaskUnloadGroupOp() {
    *this = ::std::move(from);
  }

  inline FinishDailyTaskUnloadGroupOp& operator=(FinishDailyTaskUnloadGroupOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FinishDailyTaskUnloadGroupOp& default_instance();

  static inline const FinishDailyTaskUnloadGroupOp* internal_default_instance() {
    return reinterpret_cast<const FinishDailyTaskUnloadGroupOp*>(
               &_FinishDailyTaskUnloadGroupOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(FinishDailyTaskUnloadGroupOp* other);
  friend void swap(FinishDailyTaskUnloadGroupOp& a, FinishDailyTaskUnloadGroupOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FinishDailyTaskUnloadGroupOp* New() const PROTOBUF_FINAL { return New(NULL); }

  FinishDailyTaskUnloadGroupOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FinishDailyTaskUnloadGroupOp& from);
  void MergeFrom(const FinishDailyTaskUnloadGroupOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FinishDailyTaskUnloadGroupOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 daily_task_id = 1;
  void clear_daily_task_id();
  static const int kDailyTaskIdFieldNumber = 1;
  ::google::protobuf::uint32 daily_task_id() const;
  void set_daily_task_id(::google::protobuf::uint32 value);

  // uint32 daily_time = 2;
  void clear_daily_time();
  static const int kDailyTimeFieldNumber = 2;
  ::google::protobuf::uint32 daily_time() const;
  void set_daily_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FinishDailyTaskUnloadGroupOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 daily_task_id_;
  ::google::protobuf::uint32 daily_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RefreshBlossomCircleCampOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RefreshBlossomCircleCampOp) */ {
 public:
  RefreshBlossomCircleCampOp();
  virtual ~RefreshBlossomCircleCampOp();

  RefreshBlossomCircleCampOp(const RefreshBlossomCircleCampOp& from);

  inline RefreshBlossomCircleCampOp& operator=(const RefreshBlossomCircleCampOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RefreshBlossomCircleCampOp(RefreshBlossomCircleCampOp&& from) noexcept
    : RefreshBlossomCircleCampOp() {
    *this = ::std::move(from);
  }

  inline RefreshBlossomCircleCampOp& operator=(RefreshBlossomCircleCampOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RefreshBlossomCircleCampOp& default_instance();

  static inline const RefreshBlossomCircleCampOp* internal_default_instance() {
    return reinterpret_cast<const RefreshBlossomCircleCampOp*>(
               &_RefreshBlossomCircleCampOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(RefreshBlossomCircleCampOp* other);
  friend void swap(RefreshBlossomCircleCampOp& a, RefreshBlossomCircleCampOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RefreshBlossomCircleCampOp* New() const PROTOBUF_FINAL { return New(NULL); }

  RefreshBlossomCircleCampOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RefreshBlossomCircleCampOp& from);
  void MergeFrom(const RefreshBlossomCircleCampOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RefreshBlossomCircleCampOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 refresh_id = 1;
  void clear_refresh_id();
  static const int kRefreshIdFieldNumber = 1;
  ::google::protobuf::uint32 refresh_id() const;
  void set_refresh_id(::google::protobuf::uint32 value);

  // uint32 circle_camp_id = 2;
  void clear_circle_camp_id();
  static const int kCircleCampIdFieldNumber = 2;
  ::google::protobuf::uint32 circle_camp_id() const;
  void set_circle_camp_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RefreshBlossomCircleCampOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 refresh_id_;
  ::google::protobuf::uint32 circle_camp_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlessingActivityGivePicOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BlessingActivityGivePicOp) */ {
 public:
  BlessingActivityGivePicOp();
  virtual ~BlessingActivityGivePicOp();

  BlessingActivityGivePicOp(const BlessingActivityGivePicOp& from);

  inline BlessingActivityGivePicOp& operator=(const BlessingActivityGivePicOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BlessingActivityGivePicOp(BlessingActivityGivePicOp&& from) noexcept
    : BlessingActivityGivePicOp() {
    *this = ::std::move(from);
  }

  inline BlessingActivityGivePicOp& operator=(BlessingActivityGivePicOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlessingActivityGivePicOp& default_instance();

  static inline const BlessingActivityGivePicOp* internal_default_instance() {
    return reinterpret_cast<const BlessingActivityGivePicOp*>(
               &_BlessingActivityGivePicOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(BlessingActivityGivePicOp* other);
  friend void swap(BlessingActivityGivePicOp& a, BlessingActivityGivePicOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BlessingActivityGivePicOp* New() const PROTOBUF_FINAL { return New(NULL); }

  BlessingActivityGivePicOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlessingActivityGivePicOp& from);
  void MergeFrom(const BlessingActivityGivePicOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlessingActivityGivePicOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 source_uid = 1;
  void clear_source_uid();
  static const int kSourceUidFieldNumber = 1;
  ::google::protobuf::uint32 source_uid() const;
  void set_source_uid(::google::protobuf::uint32 value);

  // uint32 target_uid = 2;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 2;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // uint32 pic_id = 3;
  void clear_pic_id();
  static const int kPicIdFieldNumber = 3;
  ::google::protobuf::uint32 pic_id() const;
  void set_pic_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BlessingActivityGivePicOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 source_uid_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::uint32 pic_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExpeditionActivityAssistOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExpeditionActivityAssistOp) */ {
 public:
  ExpeditionActivityAssistOp();
  virtual ~ExpeditionActivityAssistOp();

  ExpeditionActivityAssistOp(const ExpeditionActivityAssistOp& from);

  inline ExpeditionActivityAssistOp& operator=(const ExpeditionActivityAssistOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExpeditionActivityAssistOp(ExpeditionActivityAssistOp&& from) noexcept
    : ExpeditionActivityAssistOp() {
    *this = ::std::move(from);
  }

  inline ExpeditionActivityAssistOp& operator=(ExpeditionActivityAssistOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExpeditionActivityAssistOp& default_instance();

  static inline const ExpeditionActivityAssistOp* internal_default_instance() {
    return reinterpret_cast<const ExpeditionActivityAssistOp*>(
               &_ExpeditionActivityAssistOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(ExpeditionActivityAssistOp* other);
  friend void swap(ExpeditionActivityAssistOp& a, ExpeditionActivityAssistOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExpeditionActivityAssistOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ExpeditionActivityAssistOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExpeditionActivityAssistOp& from);
  void MergeFrom(const ExpeditionActivityAssistOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExpeditionActivityAssistOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string target_nick_name = 4;
  void clear_target_nick_name();
  static const int kTargetNickNameFieldNumber = 4;
  const ::std::string& target_nick_name() const;
  void set_target_nick_name(const ::std::string& value);
  #if LANG_CXX11
  void set_target_nick_name(::std::string&& value);
  #endif
  void set_target_nick_name(const char* value);
  void set_target_nick_name(const char* value, size_t size);
  ::std::string* mutable_target_nick_name();
  ::std::string* release_target_nick_name();
  void set_allocated_target_nick_name(::std::string* target_nick_name);

  // string online_id = 5;
  void clear_online_id();
  static const int kOnlineIdFieldNumber = 5;
  const ::std::string& online_id() const;
  void set_online_id(const ::std::string& value);
  #if LANG_CXX11
  void set_online_id(::std::string&& value);
  #endif
  void set_online_id(const char* value);
  void set_online_id(const char* value, size_t size);
  ::std::string* mutable_online_id();
  ::std::string* release_online_id();
  void set_allocated_online_id(::std::string* online_id);

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 assist_time = 2;
  void clear_assist_time();
  static const int kAssistTimeFieldNumber = 2;
  ::google::protobuf::uint32 assist_time() const;
  void set_assist_time(::google::protobuf::uint32 value);

  // uint32 target_uid = 3;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 3;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // uint32 assist_uid = 6;
  void clear_assist_uid();
  static const int kAssistUidFieldNumber = 6;
  ::google::protobuf::uint32 assist_uid() const;
  void set_assist_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ExpeditionActivityAssistOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr target_nick_name_;
  ::google::protobuf::internal::ArenaStringPtr online_id_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 assist_time_;
  ::google::protobuf::uint32 target_uid_;
  ::google::protobuf::uint32 assist_uid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RecoverWorldLevelOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RecoverWorldLevelOp) */ {
 public:
  RecoverWorldLevelOp();
  virtual ~RecoverWorldLevelOp();

  RecoverWorldLevelOp(const RecoverWorldLevelOp& from);

  inline RecoverWorldLevelOp& operator=(const RecoverWorldLevelOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecoverWorldLevelOp(RecoverWorldLevelOp&& from) noexcept
    : RecoverWorldLevelOp() {
    *this = ::std::move(from);
  }

  inline RecoverWorldLevelOp& operator=(RecoverWorldLevelOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecoverWorldLevelOp& default_instance();

  static inline const RecoverWorldLevelOp* internal_default_instance() {
    return reinterpret_cast<const RecoverWorldLevelOp*>(
               &_RecoverWorldLevelOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(RecoverWorldLevelOp* other);
  friend void swap(RecoverWorldLevelOp& a, RecoverWorldLevelOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecoverWorldLevelOp* New() const PROTOBUF_FINAL { return New(NULL); }

  RecoverWorldLevelOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecoverWorldLevelOp& from);
  void MergeFrom(const RecoverWorldLevelOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecoverWorldLevelOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.RecoverWorldLevelOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRegionSearchProgressOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddRegionSearchProgressOp) */ {
 public:
  AddRegionSearchProgressOp();
  virtual ~AddRegionSearchProgressOp();

  AddRegionSearchProgressOp(const AddRegionSearchProgressOp& from);

  inline AddRegionSearchProgressOp& operator=(const AddRegionSearchProgressOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddRegionSearchProgressOp(AddRegionSearchProgressOp&& from) noexcept
    : AddRegionSearchProgressOp() {
    *this = ::std::move(from);
  }

  inline AddRegionSearchProgressOp& operator=(AddRegionSearchProgressOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRegionSearchProgressOp& default_instance();

  static inline const AddRegionSearchProgressOp* internal_default_instance() {
    return reinterpret_cast<const AddRegionSearchProgressOp*>(
               &_AddRegionSearchProgressOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(AddRegionSearchProgressOp* other);
  friend void swap(AddRegionSearchProgressOp& a, AddRegionSearchProgressOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddRegionSearchProgressOp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRegionSearchProgressOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRegionSearchProgressOp& from);
  void MergeFrom(const AddRegionSearchProgressOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRegionSearchProgressOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 region_id = 1;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 1;
  ::google::protobuf::uint32 region_id() const;
  void set_region_id(::google::protobuf::uint32 value);

  // uint32 add_recycle = 2;
  void clear_add_recycle();
  static const int kAddRecycleFieldNumber = 2;
  ::google::protobuf::uint32 add_recycle() const;
  void set_add_recycle(::google::protobuf::uint32 value);

  // uint32 add_progress = 3;
  void clear_add_progress();
  static const int kAddProgressFieldNumber = 3;
  ::google::protobuf::uint32 add_progress() const;
  void set_add_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AddRegionSearchProgressOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 region_id_;
  ::google::protobuf::uint32 add_recycle_;
  ::google::protobuf::uint32 add_progress_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetMatchPunishTimesOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetMatchPunishTimesOp) */ {
 public:
  SetMatchPunishTimesOp();
  virtual ~SetMatchPunishTimesOp();

  SetMatchPunishTimesOp(const SetMatchPunishTimesOp& from);

  inline SetMatchPunishTimesOp& operator=(const SetMatchPunishTimesOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetMatchPunishTimesOp(SetMatchPunishTimesOp&& from) noexcept
    : SetMatchPunishTimesOp() {
    *this = ::std::move(from);
  }

  inline SetMatchPunishTimesOp& operator=(SetMatchPunishTimesOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetMatchPunishTimesOp& default_instance();

  static inline const SetMatchPunishTimesOp* internal_default_instance() {
    return reinterpret_cast<const SetMatchPunishTimesOp*>(
               &_SetMatchPunishTimesOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(SetMatchPunishTimesOp* other);
  friend void swap(SetMatchPunishTimesOp& a, SetMatchPunishTimesOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetMatchPunishTimesOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetMatchPunishTimesOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetMatchPunishTimesOp& from);
  void MergeFrom(const SetMatchPunishTimesOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetMatchPunishTimesOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 match_id = 1;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // uint32 punish_times = 2;
  void clear_punish_times();
  static const int kPunishTimesFieldNumber = 2;
  ::google::protobuf::uint32 punish_times() const;
  void set_punish_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetMatchPunishTimesOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 punish_times_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResetChannellerSlabCampGroupOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResetChannellerSlabCampGroupOp) */ {
 public:
  ResetChannellerSlabCampGroupOp();
  virtual ~ResetChannellerSlabCampGroupOp();

  ResetChannellerSlabCampGroupOp(const ResetChannellerSlabCampGroupOp& from);

  inline ResetChannellerSlabCampGroupOp& operator=(const ResetChannellerSlabCampGroupOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetChannellerSlabCampGroupOp(ResetChannellerSlabCampGroupOp&& from) noexcept
    : ResetChannellerSlabCampGroupOp() {
    *this = ::std::move(from);
  }

  inline ResetChannellerSlabCampGroupOp& operator=(ResetChannellerSlabCampGroupOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetChannellerSlabCampGroupOp& default_instance();

  static inline const ResetChannellerSlabCampGroupOp* internal_default_instance() {
    return reinterpret_cast<const ResetChannellerSlabCampGroupOp*>(
               &_ResetChannellerSlabCampGroupOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(ResetChannellerSlabCampGroupOp* other);
  friend void swap(ResetChannellerSlabCampGroupOp& a, ResetChannellerSlabCampGroupOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetChannellerSlabCampGroupOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ResetChannellerSlabCampGroupOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResetChannellerSlabCampGroupOp& from);
  void MergeFrom(const ResetChannellerSlabCampGroupOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResetChannellerSlabCampGroupOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 stage_id = 1;
  void clear_stage_id();
  static const int kStageIdFieldNumber = 1;
  ::google::protobuf::uint32 stage_id() const;
  void set_stage_id(::google::protobuf::uint32 value);

  // uint32 round_id = 2;
  void clear_round_id();
  static const int kRoundIdFieldNumber = 2;
  ::google::protobuf::uint32 round_id() const;
  void set_round_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ResetChannellerSlabCampGroupOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 stage_id_;
  ::google::protobuf::uint32 round_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForceAcceptQuestOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ForceAcceptQuestOp) */ {
 public:
  ForceAcceptQuestOp();
  virtual ~ForceAcceptQuestOp();

  ForceAcceptQuestOp(const ForceAcceptQuestOp& from);

  inline ForceAcceptQuestOp& operator=(const ForceAcceptQuestOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ForceAcceptQuestOp(ForceAcceptQuestOp&& from) noexcept
    : ForceAcceptQuestOp() {
    *this = ::std::move(from);
  }

  inline ForceAcceptQuestOp& operator=(ForceAcceptQuestOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ForceAcceptQuestOp& default_instance();

  static inline const ForceAcceptQuestOp* internal_default_instance() {
    return reinterpret_cast<const ForceAcceptQuestOp*>(
               &_ForceAcceptQuestOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(ForceAcceptQuestOp* other);
  friend void swap(ForceAcceptQuestOp& a, ForceAcceptQuestOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ForceAcceptQuestOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ForceAcceptQuestOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForceAcceptQuestOp& from);
  void MergeFrom(const ForceAcceptQuestOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForceAcceptQuestOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 quest_id = 1;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ForceAcceptQuestOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 quest_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetMainCoopConfidenceOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetMainCoopConfidenceOp) */ {
 public:
  SetMainCoopConfidenceOp();
  virtual ~SetMainCoopConfidenceOp();

  SetMainCoopConfidenceOp(const SetMainCoopConfidenceOp& from);

  inline SetMainCoopConfidenceOp& operator=(const SetMainCoopConfidenceOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetMainCoopConfidenceOp(SetMainCoopConfidenceOp&& from) noexcept
    : SetMainCoopConfidenceOp() {
    *this = ::std::move(from);
  }

  inline SetMainCoopConfidenceOp& operator=(SetMainCoopConfidenceOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetMainCoopConfidenceOp& default_instance();

  static inline const SetMainCoopConfidenceOp* internal_default_instance() {
    return reinterpret_cast<const SetMainCoopConfidenceOp*>(
               &_SetMainCoopConfidenceOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(SetMainCoopConfidenceOp* other);
  friend void swap(SetMainCoopConfidenceOp& a, SetMainCoopConfidenceOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetMainCoopConfidenceOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetMainCoopConfidenceOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetMainCoopConfidenceOp& from);
  void MergeFrom(const SetMainCoopConfidenceOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetMainCoopConfidenceOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 confidence = 1;
  void clear_confidence();
  static const int kConfidenceFieldNumber = 1;
  ::google::protobuf::uint32 confidence() const;
  void set_confidence(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetMainCoopConfidenceOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 confidence_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddCoopPointSavePointListOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddCoopPointSavePointListOp) */ {
 public:
  AddCoopPointSavePointListOp();
  virtual ~AddCoopPointSavePointListOp();

  AddCoopPointSavePointListOp(const AddCoopPointSavePointListOp& from);

  inline AddCoopPointSavePointListOp& operator=(const AddCoopPointSavePointListOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddCoopPointSavePointListOp(AddCoopPointSavePointListOp&& from) noexcept
    : AddCoopPointSavePointListOp() {
    *this = ::std::move(from);
  }

  inline AddCoopPointSavePointListOp& operator=(AddCoopPointSavePointListOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddCoopPointSavePointListOp& default_instance();

  static inline const AddCoopPointSavePointListOp* internal_default_instance() {
    return reinterpret_cast<const AddCoopPointSavePointListOp*>(
               &_AddCoopPointSavePointListOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(AddCoopPointSavePointListOp* other);
  friend void swap(AddCoopPointSavePointListOp& a, AddCoopPointSavePointListOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddCoopPointSavePointListOp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddCoopPointSavePointListOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddCoopPointSavePointListOp& from);
  void MergeFrom(const AddCoopPointSavePointListOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddCoopPointSavePointListOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 save_point_list = 2;
  int save_point_list_size() const;
  void clear_save_point_list();
  static const int kSavePointListFieldNumber = 2;
  ::google::protobuf::uint32 save_point_list(int index) const;
  void set_save_point_list(int index, ::google::protobuf::uint32 value);
  void add_save_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      save_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_save_point_list();

  // uint32 coop_point_id = 1;
  void clear_coop_point_id();
  static const int kCoopPointIdFieldNumber = 1;
  ::google::protobuf::uint32 coop_point_id() const;
  void set_coop_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AddCoopPointSavePointListOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > save_point_list_;
  mutable int _save_point_list_cached_byte_size_;
  ::google::protobuf::uint32 coop_point_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetClimateAreaTypeOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetClimateAreaTypeOp) */ {
 public:
  SetClimateAreaTypeOp();
  virtual ~SetClimateAreaTypeOp();

  SetClimateAreaTypeOp(const SetClimateAreaTypeOp& from);

  inline SetClimateAreaTypeOp& operator=(const SetClimateAreaTypeOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetClimateAreaTypeOp(SetClimateAreaTypeOp&& from) noexcept
    : SetClimateAreaTypeOp() {
    *this = ::std::move(from);
  }

  inline SetClimateAreaTypeOp& operator=(SetClimateAreaTypeOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetClimateAreaTypeOp& default_instance();

  static inline const SetClimateAreaTypeOp* internal_default_instance() {
    return reinterpret_cast<const SetClimateAreaTypeOp*>(
               &_SetClimateAreaTypeOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(SetClimateAreaTypeOp* other);
  friend void swap(SetClimateAreaTypeOp& a, SetClimateAreaTypeOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetClimateAreaTypeOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetClimateAreaTypeOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetClimateAreaTypeOp& from);
  void MergeFrom(const SetClimateAreaTypeOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetClimateAreaTypeOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 climate_area_id = 2;
  void clear_climate_area_id();
  static const int kClimateAreaIdFieldNumber = 2;
  ::google::protobuf::uint32 climate_area_id() const;
  void set_climate_area_id(::google::protobuf::uint32 value);

  // uint32 climate_type = 3;
  void clear_climate_type();
  static const int kClimateTypeFieldNumber = 3;
  ::google::protobuf::uint32 climate_type() const;
  void set_climate_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetClimateAreaTypeOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 climate_area_id_;
  ::google::protobuf::uint32 climate_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProcSceneTagOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ProcSceneTagOp) */ {
 public:
  ProcSceneTagOp();
  virtual ~ProcSceneTagOp();

  ProcSceneTagOp(const ProcSceneTagOp& from);

  inline ProcSceneTagOp& operator=(const ProcSceneTagOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProcSceneTagOp(ProcSceneTagOp&& from) noexcept
    : ProcSceneTagOp() {
    *this = ::std::move(from);
  }

  inline ProcSceneTagOp& operator=(ProcSceneTagOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcSceneTagOp& default_instance();

  static inline const ProcSceneTagOp* internal_default_instance() {
    return reinterpret_cast<const ProcSceneTagOp*>(
               &_ProcSceneTagOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(ProcSceneTagOp* other);
  friend void swap(ProcSceneTagOp& a, ProcSceneTagOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProcSceneTagOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ProcSceneTagOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProcSceneTagOp& from);
  void MergeFrom(const ProcSceneTagOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProcSceneTagOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 scene_tag_id = 2;
  void clear_scene_tag_id();
  static const int kSceneTagIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_tag_id() const;
  void set_scene_tag_id(::google::protobuf::uint32 value);

  // .proto.SceneTagOpType op_type = 3;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 3;
  ::proto::SceneTagOpType op_type() const;
  void set_op_type(::proto::SceneTagOpType value);

  // @@protoc_insertion_point(class_scope:proto.ProcSceneTagOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 scene_tag_id_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetFinishedParentQuestChildStateOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetFinishedParentQuestChildStateOp) */ {
 public:
  SetFinishedParentQuestChildStateOp();
  virtual ~SetFinishedParentQuestChildStateOp();

  SetFinishedParentQuestChildStateOp(const SetFinishedParentQuestChildStateOp& from);

  inline SetFinishedParentQuestChildStateOp& operator=(const SetFinishedParentQuestChildStateOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetFinishedParentQuestChildStateOp(SetFinishedParentQuestChildStateOp&& from) noexcept
    : SetFinishedParentQuestChildStateOp() {
    *this = ::std::move(from);
  }

  inline SetFinishedParentQuestChildStateOp& operator=(SetFinishedParentQuestChildStateOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetFinishedParentQuestChildStateOp& default_instance();

  static inline const SetFinishedParentQuestChildStateOp* internal_default_instance() {
    return reinterpret_cast<const SetFinishedParentQuestChildStateOp*>(
               &_SetFinishedParentQuestChildStateOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(SetFinishedParentQuestChildStateOp* other);
  friend void swap(SetFinishedParentQuestChildStateOp& a, SetFinishedParentQuestChildStateOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetFinishedParentQuestChildStateOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetFinishedParentQuestChildStateOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetFinishedParentQuestChildStateOp& from);
  void MergeFrom(const SetFinishedParentQuestChildStateOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetFinishedParentQuestChildStateOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 quest_id = 1;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // uint32 state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetFinishedParentQuestChildStateOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 state_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeMapAreaInfoOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ChangeMapAreaInfoOp) */ {
 public:
  ChangeMapAreaInfoOp();
  virtual ~ChangeMapAreaInfoOp();

  ChangeMapAreaInfoOp(const ChangeMapAreaInfoOp& from);

  inline ChangeMapAreaInfoOp& operator=(const ChangeMapAreaInfoOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ChangeMapAreaInfoOp(ChangeMapAreaInfoOp&& from) noexcept
    : ChangeMapAreaInfoOp() {
    *this = ::std::move(from);
  }

  inline ChangeMapAreaInfoOp& operator=(ChangeMapAreaInfoOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeMapAreaInfoOp& default_instance();

  static inline const ChangeMapAreaInfoOp* internal_default_instance() {
    return reinterpret_cast<const ChangeMapAreaInfoOp*>(
               &_ChangeMapAreaInfoOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(ChangeMapAreaInfoOp* other);
  friend void swap(ChangeMapAreaInfoOp& a, ChangeMapAreaInfoOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ChangeMapAreaInfoOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeMapAreaInfoOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeMapAreaInfoOp& from);
  void MergeFrom(const ChangeMapAreaInfoOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeMapAreaInfoOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 map_area_id = 1;
  void clear_map_area_id();
  static const int kMapAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 map_area_id() const;
  void set_map_area_id(::google::protobuf::uint32 value);

  // bool is_open = 2;
  void clear_is_open();
  static const int kIsOpenFieldNumber = 2;
  bool is_open() const;
  void set_is_open(bool value);

  // @@protoc_insertion_point(class_scope:proto.ChangeMapAreaInfoOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 map_area_id_;
  bool is_open_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetLevel1AreaExplorePointOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetLevel1AreaExplorePointOp) */ {
 public:
  SetLevel1AreaExplorePointOp();
  virtual ~SetLevel1AreaExplorePointOp();

  SetLevel1AreaExplorePointOp(const SetLevel1AreaExplorePointOp& from);

  inline SetLevel1AreaExplorePointOp& operator=(const SetLevel1AreaExplorePointOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetLevel1AreaExplorePointOp(SetLevel1AreaExplorePointOp&& from) noexcept
    : SetLevel1AreaExplorePointOp() {
    *this = ::std::move(from);
  }

  inline SetLevel1AreaExplorePointOp& operator=(SetLevel1AreaExplorePointOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetLevel1AreaExplorePointOp& default_instance();

  static inline const SetLevel1AreaExplorePointOp* internal_default_instance() {
    return reinterpret_cast<const SetLevel1AreaExplorePointOp*>(
               &_SetLevel1AreaExplorePointOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(SetLevel1AreaExplorePointOp* other);
  friend void swap(SetLevel1AreaExplorePointOp& a, SetLevel1AreaExplorePointOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetLevel1AreaExplorePointOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetLevel1AreaExplorePointOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetLevel1AreaExplorePointOp& from);
  void MergeFrom(const SetLevel1AreaExplorePointOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetLevel1AreaExplorePointOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 level1_area_id = 2;
  void clear_level1_area_id();
  static const int kLevel1AreaIdFieldNumber = 2;
  ::google::protobuf::uint32 level1_area_id() const;
  void set_level1_area_id(::google::protobuf::uint32 value);

  // uint32 explore_point = 3;
  void clear_explore_point();
  static const int kExplorePointFieldNumber = 3;
  ::google::protobuf::uint32 explore_point() const;
  void set_explore_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetLevel1AreaExplorePointOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 level1_area_id_;
  ::google::protobuf::uint32 explore_point_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetCodexOpenOrCloseOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetCodexOpenOrCloseOp) */ {
 public:
  SetCodexOpenOrCloseOp();
  virtual ~SetCodexOpenOrCloseOp();

  SetCodexOpenOrCloseOp(const SetCodexOpenOrCloseOp& from);

  inline SetCodexOpenOrCloseOp& operator=(const SetCodexOpenOrCloseOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetCodexOpenOrCloseOp(SetCodexOpenOrCloseOp&& from) noexcept
    : SetCodexOpenOrCloseOp() {
    *this = ::std::move(from);
  }

  inline SetCodexOpenOrCloseOp& operator=(SetCodexOpenOrCloseOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetCodexOpenOrCloseOp& default_instance();

  static inline const SetCodexOpenOrCloseOp* internal_default_instance() {
    return reinterpret_cast<const SetCodexOpenOrCloseOp*>(
               &_SetCodexOpenOrCloseOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(SetCodexOpenOrCloseOp* other);
  friend void swap(SetCodexOpenOrCloseOp& a, SetCodexOpenOrCloseOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetCodexOpenOrCloseOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetCodexOpenOrCloseOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetCodexOpenOrCloseOp& from);
  void MergeFrom(const SetCodexOpenOrCloseOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetCodexOpenOrCloseOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 codex_type = 1;
  void clear_codex_type();
  static const int kCodexTypeFieldNumber = 1;
  ::google::protobuf::uint32 codex_type() const;
  void set_codex_type(::google::protobuf::uint32 value);

  // uint32 codex_id = 2;
  void clear_codex_id();
  static const int kCodexIdFieldNumber = 2;
  ::google::protobuf::uint32 codex_id() const;
  void set_codex_id(::google::protobuf::uint32 value);

  // bool is_open = 3;
  void clear_is_open();
  static const int kIsOpenFieldNumber = 3;
  bool is_open() const;
  void set_is_open(bool value);

  // @@protoc_insertion_point(class_scope:proto.SetCodexOpenOrCloseOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 codex_type_;
  ::google::protobuf::uint32 codex_id_;
  bool is_open_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupLinkOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupLinkOp) */ {
 public:
  GroupLinkOp();
  virtual ~GroupLinkOp();

  GroupLinkOp(const GroupLinkOp& from);

  inline GroupLinkOp& operator=(const GroupLinkOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupLinkOp(GroupLinkOp&& from) noexcept
    : GroupLinkOp() {
    *this = ::std::move(from);
  }

  inline GroupLinkOp& operator=(GroupLinkOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupLinkOp& default_instance();

  static inline const GroupLinkOp* internal_default_instance() {
    return reinterpret_cast<const GroupLinkOp*>(
               &_GroupLinkOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(GroupLinkOp* other);
  friend void swap(GroupLinkOp& a, GroupLinkOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupLinkOp* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupLinkOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupLinkOp& from);
  void MergeFrom(const GroupLinkOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupLinkOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.GroupLinkOpType op_type = 1;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  ::proto::GroupLinkOpType op_type() const;
  void set_op_type(::proto::GroupLinkOpType value);

  // uint32 group_bundle_id = 2;
  void clear_group_bundle_id();
  static const int kGroupBundleIdFieldNumber = 2;
  ::google::protobuf::uint32 group_bundle_id() const;
  void set_group_bundle_id(::google::protobuf::uint32 value);

  // uint32 activity_id = 3;
  void clear_activity_id();
  static const int kActivityIdFieldNumber = 3;
  ::google::protobuf::uint32 activity_id() const;
  void set_activity_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GroupLinkOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int op_type_;
  ::google::protobuf::uint32 group_bundle_id_;
  ::google::protobuf::uint32 activity_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetWatcherCompRecordValueOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetWatcherCompRecordValueOp) */ {
 public:
  SetWatcherCompRecordValueOp();
  virtual ~SetWatcherCompRecordValueOp();

  SetWatcherCompRecordValueOp(const SetWatcherCompRecordValueOp& from);

  inline SetWatcherCompRecordValueOp& operator=(const SetWatcherCompRecordValueOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetWatcherCompRecordValueOp(SetWatcherCompRecordValueOp&& from) noexcept
    : SetWatcherCompRecordValueOp() {
    *this = ::std::move(from);
  }

  inline SetWatcherCompRecordValueOp& operator=(SetWatcherCompRecordValueOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetWatcherCompRecordValueOp& default_instance();

  enum OptionalMaxCriticalDamageCase {
    kMaxCriticalDamage = 1,
    OPTIONAL_MAX_CRITICAL_DAMAGE_NOT_SET = 0,
  };

  enum OptionalMaxFlyMapDistanceCase {
    kMaxFlyMapDistance = 2,
    OPTIONAL_MAX_FLY_MAP_DISTANCE_NOT_SET = 0,
  };

  enum OptionalMaxFlyTimeCase {
    kMaxFlyTime = 3,
    OPTIONAL_MAX_FLY_TIME_NOT_SET = 0,
  };

  enum OptionalMaxDashTimeCase {
    kMaxDashTime = 4,
    OPTIONAL_MAX_DASH_TIME_NOT_SET = 0,
  };

  static inline const SetWatcherCompRecordValueOp* internal_default_instance() {
    return reinterpret_cast<const SetWatcherCompRecordValueOp*>(
               &_SetWatcherCompRecordValueOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(SetWatcherCompRecordValueOp* other);
  friend void swap(SetWatcherCompRecordValueOp& a, SetWatcherCompRecordValueOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetWatcherCompRecordValueOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetWatcherCompRecordValueOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetWatcherCompRecordValueOp& from);
  void MergeFrom(const SetWatcherCompRecordValueOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetWatcherCompRecordValueOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float max_critical_damage = 1;
  private:
  bool has_max_critical_damage() const;
  public:
  void clear_max_critical_damage();
  static const int kMaxCriticalDamageFieldNumber = 1;
  float max_critical_damage() const;
  void set_max_critical_damage(float value);

  // float max_fly_map_distance = 2;
  private:
  bool has_max_fly_map_distance() const;
  public:
  void clear_max_fly_map_distance();
  static const int kMaxFlyMapDistanceFieldNumber = 2;
  float max_fly_map_distance() const;
  void set_max_fly_map_distance(float value);

  // float max_fly_time = 3;
  private:
  bool has_max_fly_time() const;
  public:
  void clear_max_fly_time();
  static const int kMaxFlyTimeFieldNumber = 3;
  float max_fly_time() const;
  void set_max_fly_time(float value);

  // float max_dash_time = 4;
  private:
  bool has_max_dash_time() const;
  public:
  void clear_max_dash_time();
  static const int kMaxDashTimeFieldNumber = 4;
  float max_dash_time() const;
  void set_max_dash_time(float value);

  OptionalMaxCriticalDamageCase optional_max_critical_damage_case() const;
  OptionalMaxFlyMapDistanceCase optional_max_fly_map_distance_case() const;
  OptionalMaxFlyTimeCase optional_max_fly_time_case() const;
  OptionalMaxDashTimeCase optional_max_dash_time_case() const;
  // @@protoc_insertion_point(class_scope:proto.SetWatcherCompRecordValueOp)
 private:
  void set_has_max_critical_damage();
  void set_has_max_fly_map_distance();
  void set_has_max_fly_time();
  void set_has_max_dash_time();

  inline bool has_optional_max_critical_damage() const;
  void clear_optional_max_critical_damage();
  inline void clear_has_optional_max_critical_damage();

  inline bool has_optional_max_fly_map_distance() const;
  void clear_optional_max_fly_map_distance();
  inline void clear_has_optional_max_fly_map_distance();

  inline bool has_optional_max_fly_time() const;
  void clear_optional_max_fly_time();
  inline void clear_has_optional_max_fly_time();

  inline bool has_optional_max_dash_time() const;
  void clear_optional_max_dash_time();
  inline void clear_has_optional_max_dash_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union OptionalMaxCriticalDamageUnion {
    OptionalMaxCriticalDamageUnion() {}
    float max_critical_damage_;
  } optional_max_critical_damage_;
  union OptionalMaxFlyMapDistanceUnion {
    OptionalMaxFlyMapDistanceUnion() {}
    float max_fly_map_distance_;
  } optional_max_fly_map_distance_;
  union OptionalMaxFlyTimeUnion {
    OptionalMaxFlyTimeUnion() {}
    float max_fly_time_;
  } optional_max_fly_time_;
  union OptionalMaxDashTimeUnion {
    OptionalMaxDashTimeUnion() {}
    float max_dash_time_;
  } optional_max_dash_time_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[4];

  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddFriendOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddFriendOp) */ {
 public:
  AddFriendOp();
  virtual ~AddFriendOp();

  AddFriendOp(const AddFriendOp& from);

  inline AddFriendOp& operator=(const AddFriendOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddFriendOp(AddFriendOp&& from) noexcept
    : AddFriendOp() {
    *this = ::std::move(from);
  }

  inline AddFriendOp& operator=(AddFriendOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendOp& default_instance();

  static inline const AddFriendOp* internal_default_instance() {
    return reinterpret_cast<const AddFriendOp*>(
               &_AddFriendOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(AddFriendOp* other);
  friend void swap(AddFriendOp& a, AddFriendOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddFriendOp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddFriendOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddFriendOp& from);
  void MergeFrom(const AddFriendOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddFriendOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 1;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 1;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AddFriendOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelFriendOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelFriendOp) */ {
 public:
  DelFriendOp();
  virtual ~DelFriendOp();

  DelFriendOp(const DelFriendOp& from);

  inline DelFriendOp& operator=(const DelFriendOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelFriendOp(DelFriendOp&& from) noexcept
    : DelFriendOp() {
    *this = ::std::move(from);
  }

  inline DelFriendOp& operator=(DelFriendOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelFriendOp& default_instance();

  static inline const DelFriendOp* internal_default_instance() {
    return reinterpret_cast<const DelFriendOp*>(
               &_DelFriendOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(DelFriendOp* other);
  friend void swap(DelFriendOp& a, DelFriendOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelFriendOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelFriendOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelFriendOp& from);
  void MergeFrom(const DelFriendOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelFriendOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 1;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 1;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DelFriendOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddFriendAskOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddFriendAskOp) */ {
 public:
  AddFriendAskOp();
  virtual ~AddFriendAskOp();

  AddFriendAskOp(const AddFriendAskOp& from);

  inline AddFriendAskOp& operator=(const AddFriendAskOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddFriendAskOp(AddFriendAskOp&& from) noexcept
    : AddFriendAskOp() {
    *this = ::std::move(from);
  }

  inline AddFriendAskOp& operator=(AddFriendAskOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFriendAskOp& default_instance();

  static inline const AddFriendAskOp* internal_default_instance() {
    return reinterpret_cast<const AddFriendAskOp*>(
               &_AddFriendAskOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(AddFriendAskOp* other);
  friend void swap(AddFriendAskOp& a, AddFriendAskOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddFriendAskOp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddFriendAskOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddFriendAskOp& from);
  void MergeFrom(const AddFriendAskOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddFriendAskOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 1;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 1;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AddFriendAskOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelFriendAskOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelFriendAskOp) */ {
 public:
  DelFriendAskOp();
  virtual ~DelFriendAskOp();

  DelFriendAskOp(const DelFriendAskOp& from);

  inline DelFriendAskOp& operator=(const DelFriendAskOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelFriendAskOp(DelFriendAskOp&& from) noexcept
    : DelFriendAskOp() {
    *this = ::std::move(from);
  }

  inline DelFriendAskOp& operator=(DelFriendAskOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelFriendAskOp& default_instance();

  static inline const DelFriendAskOp* internal_default_instance() {
    return reinterpret_cast<const DelFriendAskOp*>(
               &_DelFriendAskOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(DelFriendAskOp* other);
  friend void swap(DelFriendAskOp& a, DelFriendAskOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelFriendAskOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelFriendAskOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelFriendAskOp& from);
  void MergeFrom(const DelFriendAskOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelFriendAskOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 target_uid = 1;
  void clear_target_uid();
  static const int kTargetUidFieldNumber = 1;
  ::google::protobuf::uint32 target_uid() const;
  void set_target_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DelFriendAskOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 target_uid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BanCustomDungeonOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BanCustomDungeonOp) */ {
 public:
  BanCustomDungeonOp();
  virtual ~BanCustomDungeonOp();

  BanCustomDungeonOp(const BanCustomDungeonOp& from);

  inline BanCustomDungeonOp& operator=(const BanCustomDungeonOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BanCustomDungeonOp(BanCustomDungeonOp&& from) noexcept
    : BanCustomDungeonOp() {
    *this = ::std::move(from);
  }

  inline BanCustomDungeonOp& operator=(BanCustomDungeonOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BanCustomDungeonOp& default_instance();

  static inline const BanCustomDungeonOp* internal_default_instance() {
    return reinterpret_cast<const BanCustomDungeonOp*>(
               &_BanCustomDungeonOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(BanCustomDungeonOp* other);
  friend void swap(BanCustomDungeonOp& a, BanCustomDungeonOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BanCustomDungeonOp* New() const PROTOBUF_FINAL { return New(NULL); }

  BanCustomDungeonOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BanCustomDungeonOp& from);
  void MergeFrom(const BanCustomDungeonOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BanCustomDungeonOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 ban_expire_time = 1;
  void clear_ban_expire_time();
  static const int kBanExpireTimeFieldNumber = 1;
  ::google::protobuf::uint32 ban_expire_time() const;
  void set_ban_expire_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BanCustomDungeonOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 ban_expire_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveInvalidMapMarksOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RemoveInvalidMapMarksOp) */ {
 public:
  RemoveInvalidMapMarksOp();
  virtual ~RemoveInvalidMapMarksOp();

  RemoveInvalidMapMarksOp(const RemoveInvalidMapMarksOp& from);

  inline RemoveInvalidMapMarksOp& operator=(const RemoveInvalidMapMarksOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RemoveInvalidMapMarksOp(RemoveInvalidMapMarksOp&& from) noexcept
    : RemoveInvalidMapMarksOp() {
    *this = ::std::move(from);
  }

  inline RemoveInvalidMapMarksOp& operator=(RemoveInvalidMapMarksOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveInvalidMapMarksOp& default_instance();

  static inline const RemoveInvalidMapMarksOp* internal_default_instance() {
    return reinterpret_cast<const RemoveInvalidMapMarksOp*>(
               &_RemoveInvalidMapMarksOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(RemoveInvalidMapMarksOp* other);
  friend void swap(RemoveInvalidMapMarksOp& a, RemoveInvalidMapMarksOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RemoveInvalidMapMarksOp* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveInvalidMapMarksOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveInvalidMapMarksOp& from);
  void MergeFrom(const RemoveInvalidMapMarksOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveInvalidMapMarksOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.FloatPairBin x_range = 2;
  bool has_x_range() const;
  void clear_x_range();
  static const int kXRangeFieldNumber = 2;
  const ::proto::FloatPairBin& x_range() const;
  ::proto::FloatPairBin* mutable_x_range();
  ::proto::FloatPairBin* release_x_range();
  void set_allocated_x_range(::proto::FloatPairBin* x_range);

  // .proto.FloatPairBin z_range = 3;
  bool has_z_range() const;
  void clear_z_range();
  static const int kZRangeFieldNumber = 3;
  const ::proto::FloatPairBin& z_range() const;
  ::proto::FloatPairBin* mutable_z_range();
  ::proto::FloatPairBin* release_z_range();
  void set_allocated_z_range(::proto::FloatPairBin* z_range);

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RemoveInvalidMapMarksOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::FloatPairBin* x_range_;
  ::proto::FloatPairBin* z_range_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RecalculateAreaExplorePointOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.RecalculateAreaExplorePointOp) */ {
 public:
  RecalculateAreaExplorePointOp();
  virtual ~RecalculateAreaExplorePointOp();

  RecalculateAreaExplorePointOp(const RecalculateAreaExplorePointOp& from);

  inline RecalculateAreaExplorePointOp& operator=(const RecalculateAreaExplorePointOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RecalculateAreaExplorePointOp(RecalculateAreaExplorePointOp&& from) noexcept
    : RecalculateAreaExplorePointOp() {
    *this = ::std::move(from);
  }

  inline RecalculateAreaExplorePointOp& operator=(RecalculateAreaExplorePointOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RecalculateAreaExplorePointOp& default_instance();

  static inline const RecalculateAreaExplorePointOp* internal_default_instance() {
    return reinterpret_cast<const RecalculateAreaExplorePointOp*>(
               &_RecalculateAreaExplorePointOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(RecalculateAreaExplorePointOp* other);
  friend void swap(RecalculateAreaExplorePointOp& a, RecalculateAreaExplorePointOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RecalculateAreaExplorePointOp* New() const PROTOBUF_FINAL { return New(NULL); }

  RecalculateAreaExplorePointOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecalculateAreaExplorePointOp& from);
  void MergeFrom(const RecalculateAreaExplorePointOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecalculateAreaExplorePointOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 area_id = 1;
  void clear_area_id();
  static const int kAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 area_id() const;
  void set_area_id(::google::protobuf::uint32 value);

  // uint32 old_exp = 2;
  void clear_old_exp();
  static const int kOldExpFieldNumber = 2;
  ::google::protobuf::uint32 old_exp() const;
  void set_old_exp(::google::protobuf::uint32 value);

  // uint32 recalc_exp = 3;
  void clear_recalc_exp();
  static const int kRecalcExpFieldNumber = 3;
  ::google::protobuf::uint32 recalc_exp() const;
  void set_recalc_exp(::google::protobuf::uint32 value);

  // uint32 new_exp = 4;
  void clear_new_exp();
  static const int kNewExpFieldNumber = 4;
  ::google::protobuf::uint32 new_exp() const;
  void set_new_exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.RecalculateAreaExplorePointOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 area_id_;
  ::google::protobuf::uint32 old_exp_;
  ::google::protobuf::uint32 recalc_exp_;
  ::google::protobuf::uint32 new_exp_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NicknameAuditResultOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.NicknameAuditResultOp) */ {
 public:
  NicknameAuditResultOp();
  virtual ~NicknameAuditResultOp();

  NicknameAuditResultOp(const NicknameAuditResultOp& from);

  inline NicknameAuditResultOp& operator=(const NicknameAuditResultOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NicknameAuditResultOp(NicknameAuditResultOp&& from) noexcept
    : NicknameAuditResultOp() {
    *this = ::std::move(from);
  }

  inline NicknameAuditResultOp& operator=(NicknameAuditResultOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NicknameAuditResultOp& default_instance();

  static inline const NicknameAuditResultOp* internal_default_instance() {
    return reinterpret_cast<const NicknameAuditResultOp*>(
               &_NicknameAuditResultOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(NicknameAuditResultOp* other);
  friend void swap(NicknameAuditResultOp& a, NicknameAuditResultOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NicknameAuditResultOp* New() const PROTOBUF_FINAL { return New(NULL); }

  NicknameAuditResultOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NicknameAuditResultOp& from);
  void MergeFrom(const NicknameAuditResultOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NicknameAuditResultOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nickname = 1;
  void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // bool is_ok = 2;
  void clear_is_ok();
  static const int kIsOkFieldNumber = 2;
  bool is_ok() const;
  void set_is_ok(bool value);

  // @@protoc_insertion_point(class_scope:proto.NicknameAuditResultOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  bool is_ok_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SignatureAuditResultOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SignatureAuditResultOp) */ {
 public:
  SignatureAuditResultOp();
  virtual ~SignatureAuditResultOp();

  SignatureAuditResultOp(const SignatureAuditResultOp& from);

  inline SignatureAuditResultOp& operator=(const SignatureAuditResultOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SignatureAuditResultOp(SignatureAuditResultOp&& from) noexcept
    : SignatureAuditResultOp() {
    *this = ::std::move(from);
  }

  inline SignatureAuditResultOp& operator=(SignatureAuditResultOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SignatureAuditResultOp& default_instance();

  static inline const SignatureAuditResultOp* internal_default_instance() {
    return reinterpret_cast<const SignatureAuditResultOp*>(
               &_SignatureAuditResultOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(SignatureAuditResultOp* other);
  friend void swap(SignatureAuditResultOp& a, SignatureAuditResultOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SignatureAuditResultOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SignatureAuditResultOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SignatureAuditResultOp& from);
  void MergeFrom(const SignatureAuditResultOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SignatureAuditResultOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string signature = 1;
  void clear_signature();
  static const int kSignatureFieldNumber = 1;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const char* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // bool is_ok = 2;
  void clear_is_ok();
  static const int kIsOkFieldNumber = 2;
  bool is_ok() const;
  void set_is_ok(bool value);

  // @@protoc_insertion_point(class_scope:proto.SignatureAuditResultOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  bool is_ok_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PassHomeSceneArrangementAuditOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PassHomeSceneArrangementAuditOp) */ {
 public:
  PassHomeSceneArrangementAuditOp();
  virtual ~PassHomeSceneArrangementAuditOp();

  PassHomeSceneArrangementAuditOp(const PassHomeSceneArrangementAuditOp& from);

  inline PassHomeSceneArrangementAuditOp& operator=(const PassHomeSceneArrangementAuditOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PassHomeSceneArrangementAuditOp(PassHomeSceneArrangementAuditOp&& from) noexcept
    : PassHomeSceneArrangementAuditOp() {
    *this = ::std::move(from);
  }

  inline PassHomeSceneArrangementAuditOp& operator=(PassHomeSceneArrangementAuditOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PassHomeSceneArrangementAuditOp& default_instance();

  static inline const PassHomeSceneArrangementAuditOp* internal_default_instance() {
    return reinterpret_cast<const PassHomeSceneArrangementAuditOp*>(
               &_PassHomeSceneArrangementAuditOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(PassHomeSceneArrangementAuditOp* other);
  friend void swap(PassHomeSceneArrangementAuditOp& a, PassHomeSceneArrangementAuditOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PassHomeSceneArrangementAuditOp* New() const PROTOBUF_FINAL { return New(NULL); }

  PassHomeSceneArrangementAuditOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PassHomeSceneArrangementAuditOp& from);
  void MergeFrom(const PassHomeSceneArrangementAuditOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PassHomeSceneArrangementAuditOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 module_id = 1;
  void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  ::google::protobuf::uint32 module_id() const;
  void set_module_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PassHomeSceneArrangementAuditOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 module_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 version_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FailHomeSceneArrangementAuditOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FailHomeSceneArrangementAuditOp) */ {
 public:
  FailHomeSceneArrangementAuditOp();
  virtual ~FailHomeSceneArrangementAuditOp();

  FailHomeSceneArrangementAuditOp(const FailHomeSceneArrangementAuditOp& from);

  inline FailHomeSceneArrangementAuditOp& operator=(const FailHomeSceneArrangementAuditOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FailHomeSceneArrangementAuditOp(FailHomeSceneArrangementAuditOp&& from) noexcept
    : FailHomeSceneArrangementAuditOp() {
    *this = ::std::move(from);
  }

  inline FailHomeSceneArrangementAuditOp& operator=(FailHomeSceneArrangementAuditOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FailHomeSceneArrangementAuditOp& default_instance();

  static inline const FailHomeSceneArrangementAuditOp* internal_default_instance() {
    return reinterpret_cast<const FailHomeSceneArrangementAuditOp*>(
               &_FailHomeSceneArrangementAuditOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(FailHomeSceneArrangementAuditOp* other);
  friend void swap(FailHomeSceneArrangementAuditOp& a, FailHomeSceneArrangementAuditOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FailHomeSceneArrangementAuditOp* New() const PROTOBUF_FINAL { return New(NULL); }

  FailHomeSceneArrangementAuditOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FailHomeSceneArrangementAuditOp& from);
  void MergeFrom(const FailHomeSceneArrangementAuditOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FailHomeSceneArrangementAuditOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 module_id = 1;
  void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  ::google::protobuf::uint32 module_id() const;
  void set_module_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FailHomeSceneArrangementAuditOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 module_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 version_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FailHomeModulesArrangementAuditOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FailHomeModulesArrangementAuditOp) */ {
 public:
  FailHomeModulesArrangementAuditOp();
  virtual ~FailHomeModulesArrangementAuditOp();

  FailHomeModulesArrangementAuditOp(const FailHomeModulesArrangementAuditOp& from);

  inline FailHomeModulesArrangementAuditOp& operator=(const FailHomeModulesArrangementAuditOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FailHomeModulesArrangementAuditOp(FailHomeModulesArrangementAuditOp&& from) noexcept
    : FailHomeModulesArrangementAuditOp() {
    *this = ::std::move(from);
  }

  inline FailHomeModulesArrangementAuditOp& operator=(FailHomeModulesArrangementAuditOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FailHomeModulesArrangementAuditOp& default_instance();

  static inline const FailHomeModulesArrangementAuditOp* internal_default_instance() {
    return reinterpret_cast<const FailHomeModulesArrangementAuditOp*>(
               &_FailHomeModulesArrangementAuditOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(FailHomeModulesArrangementAuditOp* other);
  friend void swap(FailHomeModulesArrangementAuditOp& a, FailHomeModulesArrangementAuditOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FailHomeModulesArrangementAuditOp* New() const PROTOBUF_FINAL { return New(NULL); }

  FailHomeModulesArrangementAuditOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FailHomeModulesArrangementAuditOp& from);
  void MergeFrom(const FailHomeModulesArrangementAuditOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FailHomeModulesArrangementAuditOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 module_id_list = 2;
  int module_id_list_size() const;
  void clear_module_id_list();
  static const int kModuleIdListFieldNumber = 2;
  ::google::protobuf::uint32 module_id_list(int index) const;
  void set_module_id_list(int index, ::google::protobuf::uint32 value);
  void add_module_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      module_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_module_id_list();

  // bool is_all_module = 1;
  void clear_is_all_module();
  static const int kIsAllModuleFieldNumber = 1;
  bool is_all_module() const;
  void set_is_all_module(bool value);

  // uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FailHomeModulesArrangementAuditOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > module_id_list_;
  mutable int _module_id_list_cached_byte_size_;
  bool is_all_module_;
  ::google::protobuf::uint32 version_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BanUgcPublishOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BanUgcPublishOp) */ {
 public:
  BanUgcPublishOp();
  virtual ~BanUgcPublishOp();

  BanUgcPublishOp(const BanUgcPublishOp& from);

  inline BanUgcPublishOp& operator=(const BanUgcPublishOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BanUgcPublishOp(BanUgcPublishOp&& from) noexcept
    : BanUgcPublishOp() {
    *this = ::std::move(from);
  }

  inline BanUgcPublishOp& operator=(BanUgcPublishOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BanUgcPublishOp& default_instance();

  static inline const BanUgcPublishOp* internal_default_instance() {
    return reinterpret_cast<const BanUgcPublishOp*>(
               &_BanUgcPublishOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(BanUgcPublishOp* other);
  friend void swap(BanUgcPublishOp& a, BanUgcPublishOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BanUgcPublishOp* New() const PROTOBUF_FINAL { return New(NULL); }

  BanUgcPublishOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BanUgcPublishOp& from);
  void MergeFrom(const BanUgcPublishOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BanUgcPublishOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 ban_publish_expire_time = 1;
  void clear_ban_publish_expire_time();
  static const int kBanPublishExpireTimeFieldNumber = 1;
  ::google::protobuf::uint32 ban_publish_expire_time() const;
  void set_ban_publish_expire_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BanUgcPublishOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 ban_publish_expire_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResetPlayerPersistentDungeonOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResetPlayerPersistentDungeonOp) */ {
 public:
  ResetPlayerPersistentDungeonOp();
  virtual ~ResetPlayerPersistentDungeonOp();

  ResetPlayerPersistentDungeonOp(const ResetPlayerPersistentDungeonOp& from);

  inline ResetPlayerPersistentDungeonOp& operator=(const ResetPlayerPersistentDungeonOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetPlayerPersistentDungeonOp(ResetPlayerPersistentDungeonOp&& from) noexcept
    : ResetPlayerPersistentDungeonOp() {
    *this = ::std::move(from);
  }

  inline ResetPlayerPersistentDungeonOp& operator=(ResetPlayerPersistentDungeonOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetPlayerPersistentDungeonOp& default_instance();

  static inline const ResetPlayerPersistentDungeonOp* internal_default_instance() {
    return reinterpret_cast<const ResetPlayerPersistentDungeonOp*>(
               &_ResetPlayerPersistentDungeonOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(ResetPlayerPersistentDungeonOp* other);
  friend void swap(ResetPlayerPersistentDungeonOp& a, ResetPlayerPersistentDungeonOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetPlayerPersistentDungeonOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ResetPlayerPersistentDungeonOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResetPlayerPersistentDungeonOp& from);
  void MergeFrom(const ResetPlayerPersistentDungeonOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResetPlayerPersistentDungeonOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ResetPlayerPersistentDungeonOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResetPlayerPosInPersistentDungeonOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResetPlayerPosInPersistentDungeonOp) */ {
 public:
  ResetPlayerPosInPersistentDungeonOp();
  virtual ~ResetPlayerPosInPersistentDungeonOp();

  ResetPlayerPosInPersistentDungeonOp(const ResetPlayerPosInPersistentDungeonOp& from);

  inline ResetPlayerPosInPersistentDungeonOp& operator=(const ResetPlayerPosInPersistentDungeonOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetPlayerPosInPersistentDungeonOp(ResetPlayerPosInPersistentDungeonOp&& from) noexcept
    : ResetPlayerPosInPersistentDungeonOp() {
    *this = ::std::move(from);
  }

  inline ResetPlayerPosInPersistentDungeonOp& operator=(ResetPlayerPosInPersistentDungeonOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetPlayerPosInPersistentDungeonOp& default_instance();

  static inline const ResetPlayerPosInPersistentDungeonOp* internal_default_instance() {
    return reinterpret_cast<const ResetPlayerPosInPersistentDungeonOp*>(
               &_ResetPlayerPosInPersistentDungeonOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(ResetPlayerPosInPersistentDungeonOp* other);
  friend void swap(ResetPlayerPosInPersistentDungeonOp& a, ResetPlayerPosInPersistentDungeonOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetPlayerPosInPersistentDungeonOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ResetPlayerPosInPersistentDungeonOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResetPlayerPosInPersistentDungeonOp& from);
  void MergeFrom(const ResetPlayerPosInPersistentDungeonOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResetPlayerPosInPersistentDungeonOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ResetPlayerPosInPersistentDungeonOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LevelTagChangeOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LevelTagChangeOp) */ {
 public:
  LevelTagChangeOp();
  virtual ~LevelTagChangeOp();

  LevelTagChangeOp(const LevelTagChangeOp& from);

  inline LevelTagChangeOp& operator=(const LevelTagChangeOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LevelTagChangeOp(LevelTagChangeOp&& from) noexcept
    : LevelTagChangeOp() {
    *this = ::std::move(from);
  }

  inline LevelTagChangeOp& operator=(LevelTagChangeOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelTagChangeOp& default_instance();

  static inline const LevelTagChangeOp* internal_default_instance() {
    return reinterpret_cast<const LevelTagChangeOp*>(
               &_LevelTagChangeOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(LevelTagChangeOp* other);
  friend void swap(LevelTagChangeOp& a, LevelTagChangeOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LevelTagChangeOp* New() const PROTOBUF_FINAL { return New(NULL); }

  LevelTagChangeOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LevelTagChangeOp& from);
  void MergeFrom(const LevelTagChangeOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LevelTagChangeOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 level_tag_id = 1;
  void clear_level_tag_id();
  static const int kLevelTagIdFieldNumber = 1;
  ::google::protobuf::uint32 level_tag_id() const;
  void set_level_tag_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LevelTagChangeOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 level_tag_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResetPlayerWayPointInPersistentDungeonOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResetPlayerWayPointInPersistentDungeonOp) */ {
 public:
  ResetPlayerWayPointInPersistentDungeonOp();
  virtual ~ResetPlayerWayPointInPersistentDungeonOp();

  ResetPlayerWayPointInPersistentDungeonOp(const ResetPlayerWayPointInPersistentDungeonOp& from);

  inline ResetPlayerWayPointInPersistentDungeonOp& operator=(const ResetPlayerWayPointInPersistentDungeonOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetPlayerWayPointInPersistentDungeonOp(ResetPlayerWayPointInPersistentDungeonOp&& from) noexcept
    : ResetPlayerWayPointInPersistentDungeonOp() {
    *this = ::std::move(from);
  }

  inline ResetPlayerWayPointInPersistentDungeonOp& operator=(ResetPlayerWayPointInPersistentDungeonOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetPlayerWayPointInPersistentDungeonOp& default_instance();

  static inline const ResetPlayerWayPointInPersistentDungeonOp* internal_default_instance() {
    return reinterpret_cast<const ResetPlayerWayPointInPersistentDungeonOp*>(
               &_ResetPlayerWayPointInPersistentDungeonOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(ResetPlayerWayPointInPersistentDungeonOp* other);
  friend void swap(ResetPlayerWayPointInPersistentDungeonOp& a, ResetPlayerWayPointInPersistentDungeonOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetPlayerWayPointInPersistentDungeonOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ResetPlayerWayPointInPersistentDungeonOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResetPlayerWayPointInPersistentDungeonOp& from);
  void MergeFrom(const ResetPlayerWayPointInPersistentDungeonOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResetPlayerWayPointInPersistentDungeonOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 scene_id = 1;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 1;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 way_point_id = 2;
  void clear_way_point_id();
  static const int kWayPointIdFieldNumber = 2;
  ::google::protobuf::uint32 way_point_id() const;
  void set_way_point_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ResetPlayerWayPointInPersistentDungeonOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 way_point_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExhibitionSetOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ExhibitionSetOp) */ {
 public:
  ExhibitionSetOp();
  virtual ~ExhibitionSetOp();

  ExhibitionSetOp(const ExhibitionSetOp& from);

  inline ExhibitionSetOp& operator=(const ExhibitionSetOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExhibitionSetOp(ExhibitionSetOp&& from) noexcept
    : ExhibitionSetOp() {
    *this = ::std::move(from);
  }

  inline ExhibitionSetOp& operator=(ExhibitionSetOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExhibitionSetOp& default_instance();

  enum OptionalAccumulableValCase {
    kAccumulableVal = 2,
    OPTIONAL_ACCUMULABLE_VAL_NOT_SET = 0,
  };

  enum OptionalReplaceableValCase {
    kReplaceableVal = 3,
    OPTIONAL_REPLACEABLE_VAL_NOT_SET = 0,
  };

  static inline const ExhibitionSetOp* internal_default_instance() {
    return reinterpret_cast<const ExhibitionSetOp*>(
               &_ExhibitionSetOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(ExhibitionSetOp* other);
  friend void swap(ExhibitionSetOp& a, ExhibitionSetOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExhibitionSetOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ExhibitionSetOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExhibitionSetOp& from);
  void MergeFrom(const ExhibitionSetOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExhibitionSetOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 exhibition_id = 1;
  void clear_exhibition_id();
  static const int kExhibitionIdFieldNumber = 1;
  ::google::protobuf::uint32 exhibition_id() const;
  void set_exhibition_id(::google::protobuf::uint32 value);

  // uint32 accumulable_val = 2;
  private:
  bool has_accumulable_val() const;
  public:
  void clear_accumulable_val();
  static const int kAccumulableValFieldNumber = 2;
  ::google::protobuf::uint32 accumulable_val() const;
  void set_accumulable_val(::google::protobuf::uint32 value);

  // uint32 replaceable_val = 3;
  private:
  bool has_replaceable_val() const;
  public:
  void clear_replaceable_val();
  static const int kReplaceableValFieldNumber = 3;
  ::google::protobuf::uint32 replaceable_val() const;
  void set_replaceable_val(::google::protobuf::uint32 value);

  OptionalAccumulableValCase optional_accumulable_val_case() const;
  OptionalReplaceableValCase optional_replaceable_val_case() const;
  // @@protoc_insertion_point(class_scope:proto.ExhibitionSetOp)
 private:
  void set_has_accumulable_val();
  void set_has_replaceable_val();

  inline bool has_optional_accumulable_val() const;
  void clear_optional_accumulable_val();
  inline void clear_has_optional_accumulable_val();

  inline bool has_optional_replaceable_val() const;
  void clear_optional_replaceable_val();
  inline void clear_has_optional_replaceable_val();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 exhibition_id_;
  union OptionalAccumulableValUnion {
    OptionalAccumulableValUnion() {}
    ::google::protobuf::uint32 accumulable_val_;
  } optional_accumulable_val_;
  union OptionalReplaceableValUnion {
    OptionalReplaceableValUnion() {}
    ::google::protobuf::uint32 replaceable_val_;
  } optional_replaceable_val_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[2];

  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetAvatarExtraPropOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetAvatarExtraPropOp) */ {
 public:
  SetAvatarExtraPropOp();
  virtual ~SetAvatarExtraPropOp();

  SetAvatarExtraPropOp(const SetAvatarExtraPropOp& from);

  inline SetAvatarExtraPropOp& operator=(const SetAvatarExtraPropOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetAvatarExtraPropOp(SetAvatarExtraPropOp&& from) noexcept
    : SetAvatarExtraPropOp() {
    *this = ::std::move(from);
  }

  inline SetAvatarExtraPropOp& operator=(SetAvatarExtraPropOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetAvatarExtraPropOp& default_instance();

  static inline const SetAvatarExtraPropOp* internal_default_instance() {
    return reinterpret_cast<const SetAvatarExtraPropOp*>(
               &_SetAvatarExtraPropOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(SetAvatarExtraPropOp* other);
  friend void swap(SetAvatarExtraPropOp& a, SetAvatarExtraPropOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetAvatarExtraPropOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetAvatarExtraPropOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetAvatarExtraPropOp& from);
  void MergeFrom(const SetAvatarExtraPropOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetAvatarExtraPropOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 extra_prop_id = 2;
  void clear_extra_prop_id();
  static const int kExtraPropIdFieldNumber = 2;
  ::google::protobuf::uint32 extra_prop_id() const;
  void set_extra_prop_id(::google::protobuf::uint32 value);

  // uint32 extra_prop_count = 3;
  void clear_extra_prop_count();
  static const int kExtraPropCountFieldNumber = 3;
  ::google::protobuf::uint32 extra_prop_count() const;
  void set_extra_prop_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetAvatarExtraPropOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 extra_prop_id_;
  ::google::protobuf::uint32 extra_prop_count_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddItemWithLimitOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddItemWithLimitOp) */ {
 public:
  AddItemWithLimitOp();
  virtual ~AddItemWithLimitOp();

  AddItemWithLimitOp(const AddItemWithLimitOp& from);

  inline AddItemWithLimitOp& operator=(const AddItemWithLimitOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddItemWithLimitOp(AddItemWithLimitOp&& from) noexcept
    : AddItemWithLimitOp() {
    *this = ::std::move(from);
  }

  inline AddItemWithLimitOp& operator=(AddItemWithLimitOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddItemWithLimitOp& default_instance();

  static inline const AddItemWithLimitOp* internal_default_instance() {
    return reinterpret_cast<const AddItemWithLimitOp*>(
               &_AddItemWithLimitOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(AddItemWithLimitOp* other);
  friend void swap(AddItemWithLimitOp& a, AddItemWithLimitOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddItemWithLimitOp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddItemWithLimitOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddItemWithLimitOp& from);
  void MergeFrom(const AddItemWithLimitOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddItemWithLimitOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.AddItemOp add_item_op = 1;
  bool has_add_item_op() const;
  void clear_add_item_op();
  static const int kAddItemOpFieldNumber = 1;
  const ::proto::AddItemOp& add_item_op() const;
  ::proto::AddItemOp* mutable_add_item_op();
  ::proto::AddItemOp* release_add_item_op();
  void set_allocated_add_item_op(::proto::AddItemOp* add_item_op);

  // uint32 max_item_count = 2;
  void clear_max_item_count();
  static const int kMaxItemCountFieldNumber = 2;
  ::google::protobuf::uint32 max_item_count() const;
  void set_max_item_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AddItemWithLimitOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::AddItemOp* add_item_op_;
  ::google::protobuf::uint32 max_item_count_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetGadgetChainLevelOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetGadgetChainLevelOp) */ {
 public:
  SetGadgetChainLevelOp();
  virtual ~SetGadgetChainLevelOp();

  SetGadgetChainLevelOp(const SetGadgetChainLevelOp& from);

  inline SetGadgetChainLevelOp& operator=(const SetGadgetChainLevelOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetGadgetChainLevelOp(SetGadgetChainLevelOp&& from) noexcept
    : SetGadgetChainLevelOp() {
    *this = ::std::move(from);
  }

  inline SetGadgetChainLevelOp& operator=(SetGadgetChainLevelOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetGadgetChainLevelOp& default_instance();

  static inline const SetGadgetChainLevelOp* internal_default_instance() {
    return reinterpret_cast<const SetGadgetChainLevelOp*>(
               &_SetGadgetChainLevelOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(SetGadgetChainLevelOp* other);
  friend void swap(SetGadgetChainLevelOp& a, SetGadgetChainLevelOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetGadgetChainLevelOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetGadgetChainLevelOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetGadgetChainLevelOp& from);
  void MergeFrom(const SetGadgetChainLevelOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetGadgetChainLevelOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gadgetchain_id = 1;
  void clear_gadgetchain_id();
  static const int kGadgetchainIdFieldNumber = 1;
  ::google::protobuf::uint32 gadgetchain_id() const;
  void set_gadgetchain_id(::google::protobuf::uint32 value);

  // uint32 gadgetchain_level = 2;
  void clear_gadgetchain_level();
  static const int kGadgetchainLevelFieldNumber = 2;
  ::google::protobuf::uint32 gadgetchain_level() const;
  void set_gadgetchain_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetGadgetChainLevelOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gadgetchain_id_;
  ::google::protobuf::uint32 gadgetchain_level_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetDailyTaskVarOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetDailyTaskVarOp) */ {
 public:
  SetDailyTaskVarOp();
  virtual ~SetDailyTaskVarOp();

  SetDailyTaskVarOp(const SetDailyTaskVarOp& from);

  inline SetDailyTaskVarOp& operator=(const SetDailyTaskVarOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetDailyTaskVarOp(SetDailyTaskVarOp&& from) noexcept
    : SetDailyTaskVarOp() {
    *this = ::std::move(from);
  }

  inline SetDailyTaskVarOp& operator=(SetDailyTaskVarOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetDailyTaskVarOp& default_instance();

  static inline const SetDailyTaskVarOp* internal_default_instance() {
    return reinterpret_cast<const SetDailyTaskVarOp*>(
               &_SetDailyTaskVarOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(SetDailyTaskVarOp* other);
  friend void swap(SetDailyTaskVarOp& a, SetDailyTaskVarOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetDailyTaskVarOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetDailyTaskVarOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetDailyTaskVarOp& from);
  void MergeFrom(const SetDailyTaskVarOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetDailyTaskVarOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 task_id = 1;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::uint32 task_id() const;
  void set_task_id(::google::protobuf::uint32 value);

  // uint32 index = 2;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // int32 value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.SetDailyTaskVarOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 task_id_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::int32 value_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AvatarRenameAuditResultOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AvatarRenameAuditResultOp) */ {
 public:
  AvatarRenameAuditResultOp();
  virtual ~AvatarRenameAuditResultOp();

  AvatarRenameAuditResultOp(const AvatarRenameAuditResultOp& from);

  inline AvatarRenameAuditResultOp& operator=(const AvatarRenameAuditResultOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AvatarRenameAuditResultOp(AvatarRenameAuditResultOp&& from) noexcept
    : AvatarRenameAuditResultOp() {
    *this = ::std::move(from);
  }

  inline AvatarRenameAuditResultOp& operator=(AvatarRenameAuditResultOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AvatarRenameAuditResultOp& default_instance();

  static inline const AvatarRenameAuditResultOp* internal_default_instance() {
    return reinterpret_cast<const AvatarRenameAuditResultOp*>(
               &_AvatarRenameAuditResultOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(AvatarRenameAuditResultOp* other);
  friend void swap(AvatarRenameAuditResultOp& a, AvatarRenameAuditResultOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AvatarRenameAuditResultOp* New() const PROTOBUF_FINAL { return New(NULL); }

  AvatarRenameAuditResultOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AvatarRenameAuditResultOp& from);
  void MergeFrom(const AvatarRenameAuditResultOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AvatarRenameAuditResultOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string target_name = 2;
  void clear_target_name();
  static const int kTargetNameFieldNumber = 2;
  const ::std::string& target_name() const;
  void set_target_name(const ::std::string& value);
  #if LANG_CXX11
  void set_target_name(::std::string&& value);
  #endif
  void set_target_name(const char* value);
  void set_target_name(const char* value, size_t size);
  ::std::string* mutable_target_name();
  ::std::string* release_target_name();
  void set_allocated_target_name(::std::string* target_name);

  // uint32 rename_id = 1;
  void clear_rename_id();
  static const int kRenameIdFieldNumber = 1;
  ::google::protobuf::uint32 rename_id() const;
  void set_rename_id(::google::protobuf::uint32 value);

  // bool is_succ = 3;
  void clear_is_succ();
  static const int kIsSuccFieldNumber = 3;
  bool is_succ() const;
  void set_is_succ(bool value);

  // uint32 source_type = 4;
  void clear_source_type();
  static const int kSourceTypeFieldNumber = 4;
  ::google::protobuf::uint32 source_type() const;
  void set_source_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AvatarRenameAuditResultOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr target_name_;
  ::google::protobuf::uint32 rename_id_;
  bool is_succ_;
  ::google::protobuf::uint32 source_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResetAvatarRenameOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResetAvatarRenameOp) */ {
 public:
  ResetAvatarRenameOp();
  virtual ~ResetAvatarRenameOp();

  ResetAvatarRenameOp(const ResetAvatarRenameOp& from);

  inline ResetAvatarRenameOp& operator=(const ResetAvatarRenameOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResetAvatarRenameOp(ResetAvatarRenameOp&& from) noexcept
    : ResetAvatarRenameOp() {
    *this = ::std::move(from);
  }

  inline ResetAvatarRenameOp& operator=(ResetAvatarRenameOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResetAvatarRenameOp& default_instance();

  static inline const ResetAvatarRenameOp* internal_default_instance() {
    return reinterpret_cast<const ResetAvatarRenameOp*>(
               &_ResetAvatarRenameOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(ResetAvatarRenameOp* other);
  friend void swap(ResetAvatarRenameOp& a, ResetAvatarRenameOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResetAvatarRenameOp* New() const PROTOBUF_FINAL { return New(NULL); }

  ResetAvatarRenameOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResetAvatarRenameOp& from);
  void MergeFrom(const ResetAvatarRenameOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResetAvatarRenameOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 reason = 2;
  void clear_reason();
  static const int kReasonFieldNumber = 2;
  ::google::protobuf::uint32 reason() const;
  void set_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ResetAvatarRenameOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 reason_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddFinishedTalkOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AddFinishedTalkOp) */ {
 public:
  AddFinishedTalkOp();
  virtual ~AddFinishedTalkOp();

  AddFinishedTalkOp(const AddFinishedTalkOp& from);

  inline AddFinishedTalkOp& operator=(const AddFinishedTalkOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AddFinishedTalkOp(AddFinishedTalkOp&& from) noexcept
    : AddFinishedTalkOp() {
    *this = ::std::move(from);
  }

  inline AddFinishedTalkOp& operator=(AddFinishedTalkOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AddFinishedTalkOp& default_instance();

  static inline const AddFinishedTalkOp* internal_default_instance() {
    return reinterpret_cast<const AddFinishedTalkOp*>(
               &_AddFinishedTalkOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(AddFinishedTalkOp* other);
  friend void swap(AddFinishedTalkOp& a, AddFinishedTalkOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AddFinishedTalkOp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddFinishedTalkOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddFinishedTalkOp& from);
  void MergeFrom(const AddFinishedTalkOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddFinishedTalkOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 talk_id = 1;
  void clear_talk_id();
  static const int kTalkIdFieldNumber = 1;
  ::google::protobuf::uint32 talk_id() const;
  void set_talk_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AddFinishedTalkOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 talk_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelFinishedTalkOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DelFinishedTalkOp) */ {
 public:
  DelFinishedTalkOp();
  virtual ~DelFinishedTalkOp();

  DelFinishedTalkOp(const DelFinishedTalkOp& from);

  inline DelFinishedTalkOp& operator=(const DelFinishedTalkOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DelFinishedTalkOp(DelFinishedTalkOp&& from) noexcept
    : DelFinishedTalkOp() {
    *this = ::std::move(from);
  }

  inline DelFinishedTalkOp& operator=(DelFinishedTalkOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DelFinishedTalkOp& default_instance();

  static inline const DelFinishedTalkOp* internal_default_instance() {
    return reinterpret_cast<const DelFinishedTalkOp*>(
               &_DelFinishedTalkOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(DelFinishedTalkOp* other);
  friend void swap(DelFinishedTalkOp& a, DelFinishedTalkOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DelFinishedTalkOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelFinishedTalkOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelFinishedTalkOp& from);
  void MergeFrom(const DelFinishedTalkOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelFinishedTalkOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 talk_id = 1;
  void clear_talk_id();
  static const int kTalkIdFieldNumber = 1;
  ::google::protobuf::uint32 talk_id() const;
  void set_talk_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DelFinishedTalkOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 talk_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPlayerGCGMatchScoreOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPlayerGCGMatchScoreOp) */ {
 public:
  SetPlayerGCGMatchScoreOp();
  virtual ~SetPlayerGCGMatchScoreOp();

  SetPlayerGCGMatchScoreOp(const SetPlayerGCGMatchScoreOp& from);

  inline SetPlayerGCGMatchScoreOp& operator=(const SetPlayerGCGMatchScoreOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPlayerGCGMatchScoreOp(SetPlayerGCGMatchScoreOp&& from) noexcept
    : SetPlayerGCGMatchScoreOp() {
    *this = ::std::move(from);
  }

  inline SetPlayerGCGMatchScoreOp& operator=(SetPlayerGCGMatchScoreOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerGCGMatchScoreOp& default_instance();

  static inline const SetPlayerGCGMatchScoreOp* internal_default_instance() {
    return reinterpret_cast<const SetPlayerGCGMatchScoreOp*>(
               &_SetPlayerGCGMatchScoreOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(SetPlayerGCGMatchScoreOp* other);
  friend void swap(SetPlayerGCGMatchScoreOp& a, SetPlayerGCGMatchScoreOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPlayerGCGMatchScoreOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPlayerGCGMatchScoreOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPlayerGCGMatchScoreOp& from);
  void MergeFrom(const SetPlayerGCGMatchScoreOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPlayerGCGMatchScoreOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 match_id = 1;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // uint32 score = 2;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPlayerGCGMatchScoreOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 score_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetPushTipsStateOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SetPushTipsStateOp) */ {
 public:
  SetPushTipsStateOp();
  virtual ~SetPushTipsStateOp();

  SetPushTipsStateOp(const SetPushTipsStateOp& from);

  inline SetPushTipsStateOp& operator=(const SetPushTipsStateOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SetPushTipsStateOp(SetPushTipsStateOp&& from) noexcept
    : SetPushTipsStateOp() {
    *this = ::std::move(from);
  }

  inline SetPushTipsStateOp& operator=(SetPushTipsStateOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPushTipsStateOp& default_instance();

  static inline const SetPushTipsStateOp* internal_default_instance() {
    return reinterpret_cast<const SetPushTipsStateOp*>(
               &_SetPushTipsStateOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(SetPushTipsStateOp* other);
  friend void swap(SetPushTipsStateOp& a, SetPushTipsStateOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SetPushTipsStateOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetPushTipsStateOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetPushTipsStateOp& from);
  void MergeFrom(const SetPushTipsStateOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetPushTipsStateOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 push_tips_id = 1;
  void clear_push_tips_id();
  static const int kPushTipsIdFieldNumber = 1;
  ::google::protobuf::uint32 push_tips_id() const;
  void set_push_tips_id(::google::protobuf::uint32 value);

  // uint32 push_tips_state = 2;
  void clear_push_tips_state();
  static const int kPushTipsStateFieldNumber = 2;
  ::google::protobuf::uint32 push_tips_state() const;
  void set_push_tips_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SetPushTipsStateOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 push_tips_id_;
  ::google::protobuf::uint32 push_tips_state_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeletePlayerGCGCardOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeletePlayerGCGCardOp) */ {
 public:
  DeletePlayerGCGCardOp();
  virtual ~DeletePlayerGCGCardOp();

  DeletePlayerGCGCardOp(const DeletePlayerGCGCardOp& from);

  inline DeletePlayerGCGCardOp& operator=(const DeletePlayerGCGCardOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeletePlayerGCGCardOp(DeletePlayerGCGCardOp&& from) noexcept
    : DeletePlayerGCGCardOp() {
    *this = ::std::move(from);
  }

  inline DeletePlayerGCGCardOp& operator=(DeletePlayerGCGCardOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePlayerGCGCardOp& default_instance();

  static inline const DeletePlayerGCGCardOp* internal_default_instance() {
    return reinterpret_cast<const DeletePlayerGCGCardOp*>(
               &_DeletePlayerGCGCardOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(DeletePlayerGCGCardOp* other);
  friend void swap(DeletePlayerGCGCardOp& a, DeletePlayerGCGCardOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeletePlayerGCGCardOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeletePlayerGCGCardOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeletePlayerGCGCardOp& from);
  void MergeFrom(const DeletePlayerGCGCardOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeletePlayerGCGCardOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 card_id = 1;
  void clear_card_id();
  static const int kCardIdFieldNumber = 1;
  ::google::protobuf::uint32 card_id() const;
  void set_card_id(::google::protobuf::uint32 value);

  // uint32 del_num = 2;
  void clear_del_num();
  static const int kDelNumFieldNumber = 2;
  ::google::protobuf::uint32 del_num() const;
  void set_del_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeletePlayerGCGCardOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 card_id_;
  ::google::protobuf::uint32 del_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeletePlayerGCGCardFaceOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeletePlayerGCGCardFaceOp) */ {
 public:
  DeletePlayerGCGCardFaceOp();
  virtual ~DeletePlayerGCGCardFaceOp();

  DeletePlayerGCGCardFaceOp(const DeletePlayerGCGCardFaceOp& from);

  inline DeletePlayerGCGCardFaceOp& operator=(const DeletePlayerGCGCardFaceOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeletePlayerGCGCardFaceOp(DeletePlayerGCGCardFaceOp&& from) noexcept
    : DeletePlayerGCGCardFaceOp() {
    *this = ::std::move(from);
  }

  inline DeletePlayerGCGCardFaceOp& operator=(DeletePlayerGCGCardFaceOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePlayerGCGCardFaceOp& default_instance();

  static inline const DeletePlayerGCGCardFaceOp* internal_default_instance() {
    return reinterpret_cast<const DeletePlayerGCGCardFaceOp*>(
               &_DeletePlayerGCGCardFaceOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(DeletePlayerGCGCardFaceOp* other);
  friend void swap(DeletePlayerGCGCardFaceOp& a, DeletePlayerGCGCardFaceOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeletePlayerGCGCardFaceOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeletePlayerGCGCardFaceOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeletePlayerGCGCardFaceOp& from);
  void MergeFrom(const DeletePlayerGCGCardFaceOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeletePlayerGCGCardFaceOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 card_face_id = 1;
  void clear_card_face_id();
  static const int kCardFaceIdFieldNumber = 1;
  ::google::protobuf::uint32 card_face_id() const;
  void set_card_face_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeletePlayerGCGCardFaceOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 card_face_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeletePlayerGCGCardBackOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeletePlayerGCGCardBackOp) */ {
 public:
  DeletePlayerGCGCardBackOp();
  virtual ~DeletePlayerGCGCardBackOp();

  DeletePlayerGCGCardBackOp(const DeletePlayerGCGCardBackOp& from);

  inline DeletePlayerGCGCardBackOp& operator=(const DeletePlayerGCGCardBackOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeletePlayerGCGCardBackOp(DeletePlayerGCGCardBackOp&& from) noexcept
    : DeletePlayerGCGCardBackOp() {
    *this = ::std::move(from);
  }

  inline DeletePlayerGCGCardBackOp& operator=(DeletePlayerGCGCardBackOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePlayerGCGCardBackOp& default_instance();

  static inline const DeletePlayerGCGCardBackOp* internal_default_instance() {
    return reinterpret_cast<const DeletePlayerGCGCardBackOp*>(
               &_DeletePlayerGCGCardBackOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(DeletePlayerGCGCardBackOp* other);
  friend void swap(DeletePlayerGCGCardBackOp& a, DeletePlayerGCGCardBackOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeletePlayerGCGCardBackOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeletePlayerGCGCardBackOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeletePlayerGCGCardBackOp& from);
  void MergeFrom(const DeletePlayerGCGCardBackOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeletePlayerGCGCardBackOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 card_back_id = 1;
  void clear_card_back_id();
  static const int kCardBackIdFieldNumber = 1;
  ::google::protobuf::uint32 card_back_id() const;
  void set_card_back_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeletePlayerGCGCardBackOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 card_back_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeletePlayerGCGDeckFieldOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DeletePlayerGCGDeckFieldOp) */ {
 public:
  DeletePlayerGCGDeckFieldOp();
  virtual ~DeletePlayerGCGDeckFieldOp();

  DeletePlayerGCGDeckFieldOp(const DeletePlayerGCGDeckFieldOp& from);

  inline DeletePlayerGCGDeckFieldOp& operator=(const DeletePlayerGCGDeckFieldOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeletePlayerGCGDeckFieldOp(DeletePlayerGCGDeckFieldOp&& from) noexcept
    : DeletePlayerGCGDeckFieldOp() {
    *this = ::std::move(from);
  }

  inline DeletePlayerGCGDeckFieldOp& operator=(DeletePlayerGCGDeckFieldOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePlayerGCGDeckFieldOp& default_instance();

  static inline const DeletePlayerGCGDeckFieldOp* internal_default_instance() {
    return reinterpret_cast<const DeletePlayerGCGDeckFieldOp*>(
               &_DeletePlayerGCGDeckFieldOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(DeletePlayerGCGDeckFieldOp* other);
  friend void swap(DeletePlayerGCGDeckFieldOp& a, DeletePlayerGCGDeckFieldOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeletePlayerGCGDeckFieldOp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeletePlayerGCGDeckFieldOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeletePlayerGCGDeckFieldOp& from);
  void MergeFrom(const DeletePlayerGCGDeckFieldOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeletePlayerGCGDeckFieldOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 deck_field_id = 1;
  void clear_deck_field_id();
  static const int kDeckFieldIdFieldNumber = 1;
  ::google::protobuf::uint32 deck_field_id() const;
  void set_deck_field_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.DeletePlayerGCGDeckFieldOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 deck_field_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BanPlayerGCGMatchOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BanPlayerGCGMatchOp) */ {
 public:
  BanPlayerGCGMatchOp();
  virtual ~BanPlayerGCGMatchOp();

  BanPlayerGCGMatchOp(const BanPlayerGCGMatchOp& from);

  inline BanPlayerGCGMatchOp& operator=(const BanPlayerGCGMatchOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BanPlayerGCGMatchOp(BanPlayerGCGMatchOp&& from) noexcept
    : BanPlayerGCGMatchOp() {
    *this = ::std::move(from);
  }

  inline BanPlayerGCGMatchOp& operator=(BanPlayerGCGMatchOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BanPlayerGCGMatchOp& default_instance();

  static inline const BanPlayerGCGMatchOp* internal_default_instance() {
    return reinterpret_cast<const BanPlayerGCGMatchOp*>(
               &_BanPlayerGCGMatchOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(BanPlayerGCGMatchOp* other);
  friend void swap(BanPlayerGCGMatchOp& a, BanPlayerGCGMatchOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BanPlayerGCGMatchOp* New() const PROTOBUF_FINAL { return New(NULL); }

  BanPlayerGCGMatchOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BanPlayerGCGMatchOp& from);
  void MergeFrom(const BanPlayerGCGMatchOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BanPlayerGCGMatchOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 expire_time = 1;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 1;
  ::google::protobuf::uint32 expire_time() const;
  void set_expire_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BanPlayerGCGMatchOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 expire_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BanPlayerGCGPVPOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BanPlayerGCGPVPOp) */ {
 public:
  BanPlayerGCGPVPOp();
  virtual ~BanPlayerGCGPVPOp();

  BanPlayerGCGPVPOp(const BanPlayerGCGPVPOp& from);

  inline BanPlayerGCGPVPOp& operator=(const BanPlayerGCGPVPOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BanPlayerGCGPVPOp(BanPlayerGCGPVPOp&& from) noexcept
    : BanPlayerGCGPVPOp() {
    *this = ::std::move(from);
  }

  inline BanPlayerGCGPVPOp& operator=(BanPlayerGCGPVPOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BanPlayerGCGPVPOp& default_instance();

  static inline const BanPlayerGCGPVPOp* internal_default_instance() {
    return reinterpret_cast<const BanPlayerGCGPVPOp*>(
               &_BanPlayerGCGPVPOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(BanPlayerGCGPVPOp* other);
  friend void swap(BanPlayerGCGPVPOp& a, BanPlayerGCGPVPOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BanPlayerGCGPVPOp* New() const PROTOBUF_FINAL { return New(NULL); }

  BanPlayerGCGPVPOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BanPlayerGCGPVPOp& from);
  void MergeFrom(const BanPlayerGCGPVPOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BanPlayerGCGPVPOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 expire_time = 1;
  void clear_expire_time();
  static const int kExpireTimeFieldNumber = 1;
  ::google::protobuf::uint32 expire_time() const;
  void set_expire_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BanPlayerGCGPVPOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 expire_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineMsgBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineMsgBin) */ {
 public:
  OfflineMsgBin();
  virtual ~OfflineMsgBin();

  OfflineMsgBin(const OfflineMsgBin& from);

  inline OfflineMsgBin& operator=(const OfflineMsgBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineMsgBin(OfflineMsgBin&& from) noexcept
    : OfflineMsgBin() {
    *this = ::std::move(from);
  }

  inline OfflineMsgBin& operator=(OfflineMsgBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineMsgBin& default_instance();

  enum DetailCase {
    kDelItemOp = 4,
    kGotoOp = 5,
    kResetParentQuestOp = 6,
    kRefreshGroupOp = 7,
    kSetScenePointLockStatusOp = 8,
    kSetNickNameOp = 9,
    kRefreshShopOp = 10,
    kUnlockTalentOp = 11,
    kTakeOffEquipOp = 12,
    kDelMailOp = 13,
    kFinishDailyTaskOp = 14,
    kUnlockAreaOp = 15,
    kDelItemNegativeOp = 16,
    kDelEquipOp = 17,
    kAddItemOp = 18,
    kModifyBornPosOp = 19,
    kSubCoinNegativeOp = 20,
    kSetQuestContentProgressOp = 21,
    kFinishOrderOp = 22,
    kAddOrModifyWatcherOp = 23,
    kDelWatcherOp = 24,
    kSetSignatureOp = 25,
    kAddOrSubResinOp = 26,
    kSetQuestGlobalVarValueOp = 27,
    kAddMcoinOp = 28,
    kGroupBinOp = 29,
    kDelOneOffOp = 30,
    kFinishRoutineOp = 31,
    kFinishDailyTaskGroupOp = 32,
    kRefreshBlossomCircleCampOp = 33,
    kBlessingGivePicOp = 34,
    kExpeditionAssistOp = 35,
    kRecoverWorldLevelOp = 36,
    kForceAcceptQuestOp = 37,
    kSetMainCoopConfidenceOp = 38,
    kAddCoopPointSavePointListOp = 39,
    kAddRegionSearchProgressOp = 40,
    kSetMatchPunishTimesOp = 41,
    kResetChannellerSlabCampGroupOp = 42,
    kProcSceneTagOp = 43,
    kSetClimateAreaTypeOp = 44,
    kExchangeMcoinOp = 45,
    kSetFinishedParentQuestChildStateOp = 46,
    kSetLevel1AreaExplorePointOp = 47,
    kSetCodexOpenOrCloseOp = 48,
    kChangeMapAreaInfoOp = 49,
    kGroupLinkOp = 50,
    kSetWatcherCompRecordValueOp = 51,
    kAddFriendOp = 52,
    kDelFriendOp = 53,
    kAddFriendAskOp = 54,
    kDelFriendAskOp = 55,
    kBanCustomDungeonOp = 56,
    kRemoveInvalidMapMarksOp = 57,
    kRecalculateAreaExplorePointOp = 58,
    kNicknameAuditResultOp = 59,
    kSignatureAuditResultOp = 60,
    kPassHomeSceneArrangementAuditOp = 61,
    kFailHomeSceneArrangementAuditOp = 62,
    kFailHomeModulesArrangementAuditOp = 63,
    kBanUgcPublishOp = 64,
    kResetPlayerPersistentDungeonOp = 28001,
    kResetPlayerPosInPersistentDungeonOp = 28002,
    kLevelTagChangeOp = 28003,
    kResetPlayerWayPointInPersistentDungeonOp = 28004,
    kExhibitionSetOp = 30000,
    kSetAvatarExtraPropOp = 30001,
    kAddItemWithLimitOp = 30002,
    kSetGadgetChainLevelOp = 31001,
    kSetDailyTaskVarOp = 32001,
    kAvatarRenameAuditResultOp = 33001,
    kResetAvatarRenameOp = 33002,
    kAddFinishedTalkOp = 33003,
    kDelFinishedTalkOp = 33004,
    kSetPlayerGcgMatchScoreOp = 33005,
    kSetPushTipsStateOp = 33006,
    kDeletePlayerGcgCardOp = 33007,
    kDeletePlayerGcgCardFaceOp = 33008,
    kDeletePlayerGcgCardBackOp = 33009,
    kDeletePlayerGcgDeckFieldOp = 33010,
    kBanPlayerGcgMatchOp = 33011,
    kBanPlayerGcgPvpOp = 33012,
    DETAIL_NOT_SET = 0,
  };

  static inline const OfflineMsgBin* internal_default_instance() {
    return reinterpret_cast<const OfflineMsgBin*>(
               &_OfflineMsgBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(OfflineMsgBin* other);
  friend void swap(OfflineMsgBin& a, OfflineMsgBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineMsgBin* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineMsgBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineMsgBin& from);
  void MergeFrom(const OfflineMsgBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineMsgBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ticket = 2;
  void clear_ticket();
  static const int kTicketFieldNumber = 2;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // fixed32 enque_time = 1;
  void clear_enque_time();
  static const int kEnqueTimeFieldNumber = 1;
  ::google::protobuf::uint32 enque_time() const;
  void set_enque_time(::google::protobuf::uint32 value);

  // uint32 index = 3;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // .proto.DelItemOp del_item_op = 4;
  bool has_del_item_op() const;
  void clear_del_item_op();
  static const int kDelItemOpFieldNumber = 4;
  const ::proto::DelItemOp& del_item_op() const;
  ::proto::DelItemOp* mutable_del_item_op();
  ::proto::DelItemOp* release_del_item_op();
  void set_allocated_del_item_op(::proto::DelItemOp* del_item_op);

  // .proto.PlayerGotoOp goto_op = 5;
  bool has_goto_op() const;
  void clear_goto_op();
  static const int kGotoOpFieldNumber = 5;
  const ::proto::PlayerGotoOp& goto_op() const;
  ::proto::PlayerGotoOp* mutable_goto_op();
  ::proto::PlayerGotoOp* release_goto_op();
  void set_allocated_goto_op(::proto::PlayerGotoOp* goto_op);

  // .proto.ResetParentQuestOp reset_parent_quest_op = 6;
  bool has_reset_parent_quest_op() const;
  void clear_reset_parent_quest_op();
  static const int kResetParentQuestOpFieldNumber = 6;
  const ::proto::ResetParentQuestOp& reset_parent_quest_op() const;
  ::proto::ResetParentQuestOp* mutable_reset_parent_quest_op();
  ::proto::ResetParentQuestOp* release_reset_parent_quest_op();
  void set_allocated_reset_parent_quest_op(::proto::ResetParentQuestOp* reset_parent_quest_op);

  // .proto.RefreshGroupOp refresh_group_op = 7;
  bool has_refresh_group_op() const;
  void clear_refresh_group_op();
  static const int kRefreshGroupOpFieldNumber = 7;
  const ::proto::RefreshGroupOp& refresh_group_op() const;
  ::proto::RefreshGroupOp* mutable_refresh_group_op();
  ::proto::RefreshGroupOp* release_refresh_group_op();
  void set_allocated_refresh_group_op(::proto::RefreshGroupOp* refresh_group_op);

  // .proto.SetScenePointLockStatusOp set_scene_point_lock_status_op = 8;
  bool has_set_scene_point_lock_status_op() const;
  void clear_set_scene_point_lock_status_op();
  static const int kSetScenePointLockStatusOpFieldNumber = 8;
  const ::proto::SetScenePointLockStatusOp& set_scene_point_lock_status_op() const;
  ::proto::SetScenePointLockStatusOp* mutable_set_scene_point_lock_status_op();
  ::proto::SetScenePointLockStatusOp* release_set_scene_point_lock_status_op();
  void set_allocated_set_scene_point_lock_status_op(::proto::SetScenePointLockStatusOp* set_scene_point_lock_status_op);

  // .proto.SetPlayerNickNameOp set_nick_name_op = 9;
  bool has_set_nick_name_op() const;
  void clear_set_nick_name_op();
  static const int kSetNickNameOpFieldNumber = 9;
  const ::proto::SetPlayerNickNameOp& set_nick_name_op() const;
  ::proto::SetPlayerNickNameOp* mutable_set_nick_name_op();
  ::proto::SetPlayerNickNameOp* release_set_nick_name_op();
  void set_allocated_set_nick_name_op(::proto::SetPlayerNickNameOp* set_nick_name_op);

  // .proto.RefreshShopOp refresh_shop_op = 10;
  bool has_refresh_shop_op() const;
  void clear_refresh_shop_op();
  static const int kRefreshShopOpFieldNumber = 10;
  const ::proto::RefreshShopOp& refresh_shop_op() const;
  ::proto::RefreshShopOp* mutable_refresh_shop_op();
  ::proto::RefreshShopOp* release_refresh_shop_op();
  void set_allocated_refresh_shop_op(::proto::RefreshShopOp* refresh_shop_op);

  // .proto.UnlockTalentOp unlock_talent_op = 11;
  bool has_unlock_talent_op() const;
  void clear_unlock_talent_op();
  static const int kUnlockTalentOpFieldNumber = 11;
  const ::proto::UnlockTalentOp& unlock_talent_op() const;
  ::proto::UnlockTalentOp* mutable_unlock_talent_op();
  ::proto::UnlockTalentOp* release_unlock_talent_op();
  void set_allocated_unlock_talent_op(::proto::UnlockTalentOp* unlock_talent_op);

  // .proto.TakeOffEquipOp take_off_equip_op = 12;
  bool has_take_off_equip_op() const;
  void clear_take_off_equip_op();
  static const int kTakeOffEquipOpFieldNumber = 12;
  const ::proto::TakeOffEquipOp& take_off_equip_op() const;
  ::proto::TakeOffEquipOp* mutable_take_off_equip_op();
  ::proto::TakeOffEquipOp* release_take_off_equip_op();
  void set_allocated_take_off_equip_op(::proto::TakeOffEquipOp* take_off_equip_op);

  // .proto.DelMailOp del_mail_op = 13;
  bool has_del_mail_op() const;
  void clear_del_mail_op();
  static const int kDelMailOpFieldNumber = 13;
  const ::proto::DelMailOp& del_mail_op() const;
  ::proto::DelMailOp* mutable_del_mail_op();
  ::proto::DelMailOp* release_del_mail_op();
  void set_allocated_del_mail_op(::proto::DelMailOp* del_mail_op);

  // .proto.FinishDailyTaskOp finish_daily_task_op = 14;
  bool has_finish_daily_task_op() const;
  void clear_finish_daily_task_op();
  static const int kFinishDailyTaskOpFieldNumber = 14;
  const ::proto::FinishDailyTaskOp& finish_daily_task_op() const;
  ::proto::FinishDailyTaskOp* mutable_finish_daily_task_op();
  ::proto::FinishDailyTaskOp* release_finish_daily_task_op();
  void set_allocated_finish_daily_task_op(::proto::FinishDailyTaskOp* finish_daily_task_op);

  // .proto.UnlockAreaOp unlock_area_op = 15;
  bool has_unlock_area_op() const;
  void clear_unlock_area_op();
  static const int kUnlockAreaOpFieldNumber = 15;
  const ::proto::UnlockAreaOp& unlock_area_op() const;
  ::proto::UnlockAreaOp* mutable_unlock_area_op();
  ::proto::UnlockAreaOp* release_unlock_area_op();
  void set_allocated_unlock_area_op(::proto::UnlockAreaOp* unlock_area_op);

  // .proto.DelItemNegativeOp del_item_negative_op = 16;
  bool has_del_item_negative_op() const;
  void clear_del_item_negative_op();
  static const int kDelItemNegativeOpFieldNumber = 16;
  const ::proto::DelItemNegativeOp& del_item_negative_op() const;
  ::proto::DelItemNegativeOp* mutable_del_item_negative_op();
  ::proto::DelItemNegativeOp* release_del_item_negative_op();
  void set_allocated_del_item_negative_op(::proto::DelItemNegativeOp* del_item_negative_op);

  // .proto.DelEquipOp del_equip_op = 17;
  bool has_del_equip_op() const;
  void clear_del_equip_op();
  static const int kDelEquipOpFieldNumber = 17;
  const ::proto::DelEquipOp& del_equip_op() const;
  ::proto::DelEquipOp* mutable_del_equip_op();
  ::proto::DelEquipOp* release_del_equip_op();
  void set_allocated_del_equip_op(::proto::DelEquipOp* del_equip_op);

  // .proto.AddItemOp add_item_op = 18;
  bool has_add_item_op() const;
  void clear_add_item_op();
  static const int kAddItemOpFieldNumber = 18;
  const ::proto::AddItemOp& add_item_op() const;
  ::proto::AddItemOp* mutable_add_item_op();
  ::proto::AddItemOp* release_add_item_op();
  void set_allocated_add_item_op(::proto::AddItemOp* add_item_op);

  // .proto.ModifyBornPosOp modify_born_pos_op = 19;
  bool has_modify_born_pos_op() const;
  void clear_modify_born_pos_op();
  static const int kModifyBornPosOpFieldNumber = 19;
  const ::proto::ModifyBornPosOp& modify_born_pos_op() const;
  ::proto::ModifyBornPosOp* mutable_modify_born_pos_op();
  ::proto::ModifyBornPosOp* release_modify_born_pos_op();
  void set_allocated_modify_born_pos_op(::proto::ModifyBornPosOp* modify_born_pos_op);

  // .proto.SubCoinNegativeOp sub_coin_negative_op = 20;
  bool has_sub_coin_negative_op() const;
  void clear_sub_coin_negative_op();
  static const int kSubCoinNegativeOpFieldNumber = 20;
  const ::proto::SubCoinNegativeOp& sub_coin_negative_op() const;
  ::proto::SubCoinNegativeOp* mutable_sub_coin_negative_op();
  ::proto::SubCoinNegativeOp* release_sub_coin_negative_op();
  void set_allocated_sub_coin_negative_op(::proto::SubCoinNegativeOp* sub_coin_negative_op);

  // .proto.SetQuestContentProgressOp set_quest_content_progress_op = 21;
  bool has_set_quest_content_progress_op() const;
  void clear_set_quest_content_progress_op();
  static const int kSetQuestContentProgressOpFieldNumber = 21;
  const ::proto::SetQuestContentProgressOp& set_quest_content_progress_op() const;
  ::proto::SetQuestContentProgressOp* mutable_set_quest_content_progress_op();
  ::proto::SetQuestContentProgressOp* release_set_quest_content_progress_op();
  void set_allocated_set_quest_content_progress_op(::proto::SetQuestContentProgressOp* set_quest_content_progress_op);

  // .proto.FinishOrderOp finish_order_op = 22;
  bool has_finish_order_op() const;
  void clear_finish_order_op();
  static const int kFinishOrderOpFieldNumber = 22;
  const ::proto::FinishOrderOp& finish_order_op() const;
  ::proto::FinishOrderOp* mutable_finish_order_op();
  ::proto::FinishOrderOp* release_finish_order_op();
  void set_allocated_finish_order_op(::proto::FinishOrderOp* finish_order_op);

  // .proto.AddOrModifyWatcherOp add_or_modify_watcher_op = 23;
  bool has_add_or_modify_watcher_op() const;
  void clear_add_or_modify_watcher_op();
  static const int kAddOrModifyWatcherOpFieldNumber = 23;
  const ::proto::AddOrModifyWatcherOp& add_or_modify_watcher_op() const;
  ::proto::AddOrModifyWatcherOp* mutable_add_or_modify_watcher_op();
  ::proto::AddOrModifyWatcherOp* release_add_or_modify_watcher_op();
  void set_allocated_add_or_modify_watcher_op(::proto::AddOrModifyWatcherOp* add_or_modify_watcher_op);

  // .proto.DelWatcherOp del_watcher_op = 24;
  bool has_del_watcher_op() const;
  void clear_del_watcher_op();
  static const int kDelWatcherOpFieldNumber = 24;
  const ::proto::DelWatcherOp& del_watcher_op() const;
  ::proto::DelWatcherOp* mutable_del_watcher_op();
  ::proto::DelWatcherOp* release_del_watcher_op();
  void set_allocated_del_watcher_op(::proto::DelWatcherOp* del_watcher_op);

  // .proto.SetSignatureOp set_signature_op = 25;
  bool has_set_signature_op() const;
  void clear_set_signature_op();
  static const int kSetSignatureOpFieldNumber = 25;
  const ::proto::SetSignatureOp& set_signature_op() const;
  ::proto::SetSignatureOp* mutable_set_signature_op();
  ::proto::SetSignatureOp* release_set_signature_op();
  void set_allocated_set_signature_op(::proto::SetSignatureOp* set_signature_op);

  // .proto.AddOrSubResinOp add_or_sub_resin_op = 26;
  bool has_add_or_sub_resin_op() const;
  void clear_add_or_sub_resin_op();
  static const int kAddOrSubResinOpFieldNumber = 26;
  const ::proto::AddOrSubResinOp& add_or_sub_resin_op() const;
  ::proto::AddOrSubResinOp* mutable_add_or_sub_resin_op();
  ::proto::AddOrSubResinOp* release_add_or_sub_resin_op();
  void set_allocated_add_or_sub_resin_op(::proto::AddOrSubResinOp* add_or_sub_resin_op);

  // .proto.SetQuestGlobalVarValueOp set_quest_global_var_value_op = 27;
  bool has_set_quest_global_var_value_op() const;
  void clear_set_quest_global_var_value_op();
  static const int kSetQuestGlobalVarValueOpFieldNumber = 27;
  const ::proto::SetQuestGlobalVarValueOp& set_quest_global_var_value_op() const;
  ::proto::SetQuestGlobalVarValueOp* mutable_set_quest_global_var_value_op();
  ::proto::SetQuestGlobalVarValueOp* release_set_quest_global_var_value_op();
  void set_allocated_set_quest_global_var_value_op(::proto::SetQuestGlobalVarValueOp* set_quest_global_var_value_op);

  // .proto.AddMcoinVipPointOp add_mcoin_op = 28;
  bool has_add_mcoin_op() const;
  void clear_add_mcoin_op();
  static const int kAddMcoinOpFieldNumber = 28;
  const ::proto::AddMcoinVipPointOp& add_mcoin_op() const;
  ::proto::AddMcoinVipPointOp* mutable_add_mcoin_op();
  ::proto::AddMcoinVipPointOp* release_add_mcoin_op();
  void set_allocated_add_mcoin_op(::proto::AddMcoinVipPointOp* add_mcoin_op);

  // .proto.GroupBinOp group_bin_op = 29;
  bool has_group_bin_op() const;
  void clear_group_bin_op();
  static const int kGroupBinOpFieldNumber = 29;
  const ::proto::GroupBinOp& group_bin_op() const;
  ::proto::GroupBinOp* mutable_group_bin_op();
  ::proto::GroupBinOp* release_group_bin_op();
  void set_allocated_group_bin_op(::proto::GroupBinOp* group_bin_op);

  // .proto.DelOneOffOp del_one_off_op = 30;
  bool has_del_one_off_op() const;
  void clear_del_one_off_op();
  static const int kDelOneOffOpFieldNumber = 30;
  const ::proto::DelOneOffOp& del_one_off_op() const;
  ::proto::DelOneOffOp* mutable_del_one_off_op();
  ::proto::DelOneOffOp* release_del_one_off_op();
  void set_allocated_del_one_off_op(::proto::DelOneOffOp* del_one_off_op);

  // .proto.FinishRoutineOp finish_routine_op = 31;
  bool has_finish_routine_op() const;
  void clear_finish_routine_op();
  static const int kFinishRoutineOpFieldNumber = 31;
  const ::proto::FinishRoutineOp& finish_routine_op() const;
  ::proto::FinishRoutineOp* mutable_finish_routine_op();
  ::proto::FinishRoutineOp* release_finish_routine_op();
  void set_allocated_finish_routine_op(::proto::FinishRoutineOp* finish_routine_op);

  // .proto.FinishDailyTaskUnloadGroupOp finish_daily_task_group_op = 32;
  bool has_finish_daily_task_group_op() const;
  void clear_finish_daily_task_group_op();
  static const int kFinishDailyTaskGroupOpFieldNumber = 32;
  const ::proto::FinishDailyTaskUnloadGroupOp& finish_daily_task_group_op() const;
  ::proto::FinishDailyTaskUnloadGroupOp* mutable_finish_daily_task_group_op();
  ::proto::FinishDailyTaskUnloadGroupOp* release_finish_daily_task_group_op();
  void set_allocated_finish_daily_task_group_op(::proto::FinishDailyTaskUnloadGroupOp* finish_daily_task_group_op);

  // .proto.RefreshBlossomCircleCampOp refresh_blossom_circle_camp_op = 33;
  bool has_refresh_blossom_circle_camp_op() const;
  void clear_refresh_blossom_circle_camp_op();
  static const int kRefreshBlossomCircleCampOpFieldNumber = 33;
  const ::proto::RefreshBlossomCircleCampOp& refresh_blossom_circle_camp_op() const;
  ::proto::RefreshBlossomCircleCampOp* mutable_refresh_blossom_circle_camp_op();
  ::proto::RefreshBlossomCircleCampOp* release_refresh_blossom_circle_camp_op();
  void set_allocated_refresh_blossom_circle_camp_op(::proto::RefreshBlossomCircleCampOp* refresh_blossom_circle_camp_op);

  // .proto.BlessingActivityGivePicOp blessing_give_pic_op = 34;
  bool has_blessing_give_pic_op() const;
  void clear_blessing_give_pic_op();
  static const int kBlessingGivePicOpFieldNumber = 34;
  const ::proto::BlessingActivityGivePicOp& blessing_give_pic_op() const;
  ::proto::BlessingActivityGivePicOp* mutable_blessing_give_pic_op();
  ::proto::BlessingActivityGivePicOp* release_blessing_give_pic_op();
  void set_allocated_blessing_give_pic_op(::proto::BlessingActivityGivePicOp* blessing_give_pic_op);

  // .proto.ExpeditionActivityAssistOp expedition_assist_op = 35;
  bool has_expedition_assist_op() const;
  void clear_expedition_assist_op();
  static const int kExpeditionAssistOpFieldNumber = 35;
  const ::proto::ExpeditionActivityAssistOp& expedition_assist_op() const;
  ::proto::ExpeditionActivityAssistOp* mutable_expedition_assist_op();
  ::proto::ExpeditionActivityAssistOp* release_expedition_assist_op();
  void set_allocated_expedition_assist_op(::proto::ExpeditionActivityAssistOp* expedition_assist_op);

  // .proto.RecoverWorldLevelOp recover_world_level_op = 36;
  bool has_recover_world_level_op() const;
  void clear_recover_world_level_op();
  static const int kRecoverWorldLevelOpFieldNumber = 36;
  const ::proto::RecoverWorldLevelOp& recover_world_level_op() const;
  ::proto::RecoverWorldLevelOp* mutable_recover_world_level_op();
  ::proto::RecoverWorldLevelOp* release_recover_world_level_op();
  void set_allocated_recover_world_level_op(::proto::RecoverWorldLevelOp* recover_world_level_op);

  // .proto.ForceAcceptQuestOp force_accept_quest_op = 37;
  bool has_force_accept_quest_op() const;
  void clear_force_accept_quest_op();
  static const int kForceAcceptQuestOpFieldNumber = 37;
  const ::proto::ForceAcceptQuestOp& force_accept_quest_op() const;
  ::proto::ForceAcceptQuestOp* mutable_force_accept_quest_op();
  ::proto::ForceAcceptQuestOp* release_force_accept_quest_op();
  void set_allocated_force_accept_quest_op(::proto::ForceAcceptQuestOp* force_accept_quest_op);

  // .proto.SetMainCoopConfidenceOp set_main_coop_confidence_op = 38;
  bool has_set_main_coop_confidence_op() const;
  void clear_set_main_coop_confidence_op();
  static const int kSetMainCoopConfidenceOpFieldNumber = 38;
  const ::proto::SetMainCoopConfidenceOp& set_main_coop_confidence_op() const;
  ::proto::SetMainCoopConfidenceOp* mutable_set_main_coop_confidence_op();
  ::proto::SetMainCoopConfidenceOp* release_set_main_coop_confidence_op();
  void set_allocated_set_main_coop_confidence_op(::proto::SetMainCoopConfidenceOp* set_main_coop_confidence_op);

  // .proto.AddCoopPointSavePointListOp add_coop_point_save_point_list_op = 39;
  bool has_add_coop_point_save_point_list_op() const;
  void clear_add_coop_point_save_point_list_op();
  static const int kAddCoopPointSavePointListOpFieldNumber = 39;
  const ::proto::AddCoopPointSavePointListOp& add_coop_point_save_point_list_op() const;
  ::proto::AddCoopPointSavePointListOp* mutable_add_coop_point_save_point_list_op();
  ::proto::AddCoopPointSavePointListOp* release_add_coop_point_save_point_list_op();
  void set_allocated_add_coop_point_save_point_list_op(::proto::AddCoopPointSavePointListOp* add_coop_point_save_point_list_op);

  // .proto.AddRegionSearchProgressOp add_region_search_progress_op = 40;
  bool has_add_region_search_progress_op() const;
  void clear_add_region_search_progress_op();
  static const int kAddRegionSearchProgressOpFieldNumber = 40;
  const ::proto::AddRegionSearchProgressOp& add_region_search_progress_op() const;
  ::proto::AddRegionSearchProgressOp* mutable_add_region_search_progress_op();
  ::proto::AddRegionSearchProgressOp* release_add_region_search_progress_op();
  void set_allocated_add_region_search_progress_op(::proto::AddRegionSearchProgressOp* add_region_search_progress_op);

  // .proto.SetMatchPunishTimesOp set_match_punish_times_op = 41;
  bool has_set_match_punish_times_op() const;
  void clear_set_match_punish_times_op();
  static const int kSetMatchPunishTimesOpFieldNumber = 41;
  const ::proto::SetMatchPunishTimesOp& set_match_punish_times_op() const;
  ::proto::SetMatchPunishTimesOp* mutable_set_match_punish_times_op();
  ::proto::SetMatchPunishTimesOp* release_set_match_punish_times_op();
  void set_allocated_set_match_punish_times_op(::proto::SetMatchPunishTimesOp* set_match_punish_times_op);

  // .proto.ResetChannellerSlabCampGroupOp reset_channeller_slab_camp_group_op = 42;
  bool has_reset_channeller_slab_camp_group_op() const;
  void clear_reset_channeller_slab_camp_group_op();
  static const int kResetChannellerSlabCampGroupOpFieldNumber = 42;
  const ::proto::ResetChannellerSlabCampGroupOp& reset_channeller_slab_camp_group_op() const;
  ::proto::ResetChannellerSlabCampGroupOp* mutable_reset_channeller_slab_camp_group_op();
  ::proto::ResetChannellerSlabCampGroupOp* release_reset_channeller_slab_camp_group_op();
  void set_allocated_reset_channeller_slab_camp_group_op(::proto::ResetChannellerSlabCampGroupOp* reset_channeller_slab_camp_group_op);

  // .proto.ProcSceneTagOp proc_scene_tag_op = 43;
  bool has_proc_scene_tag_op() const;
  void clear_proc_scene_tag_op();
  static const int kProcSceneTagOpFieldNumber = 43;
  const ::proto::ProcSceneTagOp& proc_scene_tag_op() const;
  ::proto::ProcSceneTagOp* mutable_proc_scene_tag_op();
  ::proto::ProcSceneTagOp* release_proc_scene_tag_op();
  void set_allocated_proc_scene_tag_op(::proto::ProcSceneTagOp* proc_scene_tag_op);

  // .proto.SetClimateAreaTypeOp set_climate_area_type_op = 44;
  bool has_set_climate_area_type_op() const;
  void clear_set_climate_area_type_op();
  static const int kSetClimateAreaTypeOpFieldNumber = 44;
  const ::proto::SetClimateAreaTypeOp& set_climate_area_type_op() const;
  ::proto::SetClimateAreaTypeOp* mutable_set_climate_area_type_op();
  ::proto::SetClimateAreaTypeOp* release_set_climate_area_type_op();
  void set_allocated_set_climate_area_type_op(::proto::SetClimateAreaTypeOp* set_climate_area_type_op);

  // .proto.ExchangeMcoinOp exchange_mcoin_op = 45;
  bool has_exchange_mcoin_op() const;
  void clear_exchange_mcoin_op();
  static const int kExchangeMcoinOpFieldNumber = 45;
  const ::proto::ExchangeMcoinOp& exchange_mcoin_op() const;
  ::proto::ExchangeMcoinOp* mutable_exchange_mcoin_op();
  ::proto::ExchangeMcoinOp* release_exchange_mcoin_op();
  void set_allocated_exchange_mcoin_op(::proto::ExchangeMcoinOp* exchange_mcoin_op);

  // .proto.SetFinishedParentQuestChildStateOp set_finished_parent_quest_child_state_op = 46;
  bool has_set_finished_parent_quest_child_state_op() const;
  void clear_set_finished_parent_quest_child_state_op();
  static const int kSetFinishedParentQuestChildStateOpFieldNumber = 46;
  const ::proto::SetFinishedParentQuestChildStateOp& set_finished_parent_quest_child_state_op() const;
  ::proto::SetFinishedParentQuestChildStateOp* mutable_set_finished_parent_quest_child_state_op();
  ::proto::SetFinishedParentQuestChildStateOp* release_set_finished_parent_quest_child_state_op();
  void set_allocated_set_finished_parent_quest_child_state_op(::proto::SetFinishedParentQuestChildStateOp* set_finished_parent_quest_child_state_op);

  // .proto.SetLevel1AreaExplorePointOp set_level1_area_explore_point_op = 47;
  bool has_set_level1_area_explore_point_op() const;
  void clear_set_level1_area_explore_point_op();
  static const int kSetLevel1AreaExplorePointOpFieldNumber = 47;
  const ::proto::SetLevel1AreaExplorePointOp& set_level1_area_explore_point_op() const;
  ::proto::SetLevel1AreaExplorePointOp* mutable_set_level1_area_explore_point_op();
  ::proto::SetLevel1AreaExplorePointOp* release_set_level1_area_explore_point_op();
  void set_allocated_set_level1_area_explore_point_op(::proto::SetLevel1AreaExplorePointOp* set_level1_area_explore_point_op);

  // .proto.SetCodexOpenOrCloseOp set_codex_open_or_close_op = 48;
  bool has_set_codex_open_or_close_op() const;
  void clear_set_codex_open_or_close_op();
  static const int kSetCodexOpenOrCloseOpFieldNumber = 48;
  const ::proto::SetCodexOpenOrCloseOp& set_codex_open_or_close_op() const;
  ::proto::SetCodexOpenOrCloseOp* mutable_set_codex_open_or_close_op();
  ::proto::SetCodexOpenOrCloseOp* release_set_codex_open_or_close_op();
  void set_allocated_set_codex_open_or_close_op(::proto::SetCodexOpenOrCloseOp* set_codex_open_or_close_op);

  // .proto.ChangeMapAreaInfoOp change_map_area_info_op = 49;
  bool has_change_map_area_info_op() const;
  void clear_change_map_area_info_op();
  static const int kChangeMapAreaInfoOpFieldNumber = 49;
  const ::proto::ChangeMapAreaInfoOp& change_map_area_info_op() const;
  ::proto::ChangeMapAreaInfoOp* mutable_change_map_area_info_op();
  ::proto::ChangeMapAreaInfoOp* release_change_map_area_info_op();
  void set_allocated_change_map_area_info_op(::proto::ChangeMapAreaInfoOp* change_map_area_info_op);

  // .proto.GroupLinkOp group_link_op = 50;
  bool has_group_link_op() const;
  void clear_group_link_op();
  static const int kGroupLinkOpFieldNumber = 50;
  const ::proto::GroupLinkOp& group_link_op() const;
  ::proto::GroupLinkOp* mutable_group_link_op();
  ::proto::GroupLinkOp* release_group_link_op();
  void set_allocated_group_link_op(::proto::GroupLinkOp* group_link_op);

  // .proto.SetWatcherCompRecordValueOp set_watcher_comp_record_value_op = 51;
  bool has_set_watcher_comp_record_value_op() const;
  void clear_set_watcher_comp_record_value_op();
  static const int kSetWatcherCompRecordValueOpFieldNumber = 51;
  const ::proto::SetWatcherCompRecordValueOp& set_watcher_comp_record_value_op() const;
  ::proto::SetWatcherCompRecordValueOp* mutable_set_watcher_comp_record_value_op();
  ::proto::SetWatcherCompRecordValueOp* release_set_watcher_comp_record_value_op();
  void set_allocated_set_watcher_comp_record_value_op(::proto::SetWatcherCompRecordValueOp* set_watcher_comp_record_value_op);

  // .proto.AddFriendOp add_friend_op = 52;
  bool has_add_friend_op() const;
  void clear_add_friend_op();
  static const int kAddFriendOpFieldNumber = 52;
  const ::proto::AddFriendOp& add_friend_op() const;
  ::proto::AddFriendOp* mutable_add_friend_op();
  ::proto::AddFriendOp* release_add_friend_op();
  void set_allocated_add_friend_op(::proto::AddFriendOp* add_friend_op);

  // .proto.DelFriendOp del_friend_op = 53;
  bool has_del_friend_op() const;
  void clear_del_friend_op();
  static const int kDelFriendOpFieldNumber = 53;
  const ::proto::DelFriendOp& del_friend_op() const;
  ::proto::DelFriendOp* mutable_del_friend_op();
  ::proto::DelFriendOp* release_del_friend_op();
  void set_allocated_del_friend_op(::proto::DelFriendOp* del_friend_op);

  // .proto.AddFriendAskOp add_friend_ask_op = 54;
  bool has_add_friend_ask_op() const;
  void clear_add_friend_ask_op();
  static const int kAddFriendAskOpFieldNumber = 54;
  const ::proto::AddFriendAskOp& add_friend_ask_op() const;
  ::proto::AddFriendAskOp* mutable_add_friend_ask_op();
  ::proto::AddFriendAskOp* release_add_friend_ask_op();
  void set_allocated_add_friend_ask_op(::proto::AddFriendAskOp* add_friend_ask_op);

  // .proto.DelFriendAskOp del_friend_ask_op = 55;
  bool has_del_friend_ask_op() const;
  void clear_del_friend_ask_op();
  static const int kDelFriendAskOpFieldNumber = 55;
  const ::proto::DelFriendAskOp& del_friend_ask_op() const;
  ::proto::DelFriendAskOp* mutable_del_friend_ask_op();
  ::proto::DelFriendAskOp* release_del_friend_ask_op();
  void set_allocated_del_friend_ask_op(::proto::DelFriendAskOp* del_friend_ask_op);

  // .proto.BanCustomDungeonOp ban_custom_dungeon_op = 56;
  bool has_ban_custom_dungeon_op() const;
  void clear_ban_custom_dungeon_op();
  static const int kBanCustomDungeonOpFieldNumber = 56;
  const ::proto::BanCustomDungeonOp& ban_custom_dungeon_op() const;
  ::proto::BanCustomDungeonOp* mutable_ban_custom_dungeon_op();
  ::proto::BanCustomDungeonOp* release_ban_custom_dungeon_op();
  void set_allocated_ban_custom_dungeon_op(::proto::BanCustomDungeonOp* ban_custom_dungeon_op);

  // .proto.RemoveInvalidMapMarksOp remove_invalid_map_marks_op = 57;
  bool has_remove_invalid_map_marks_op() const;
  void clear_remove_invalid_map_marks_op();
  static const int kRemoveInvalidMapMarksOpFieldNumber = 57;
  const ::proto::RemoveInvalidMapMarksOp& remove_invalid_map_marks_op() const;
  ::proto::RemoveInvalidMapMarksOp* mutable_remove_invalid_map_marks_op();
  ::proto::RemoveInvalidMapMarksOp* release_remove_invalid_map_marks_op();
  void set_allocated_remove_invalid_map_marks_op(::proto::RemoveInvalidMapMarksOp* remove_invalid_map_marks_op);

  // .proto.RecalculateAreaExplorePointOp recalculate_area_explore_point_op = 58;
  bool has_recalculate_area_explore_point_op() const;
  void clear_recalculate_area_explore_point_op();
  static const int kRecalculateAreaExplorePointOpFieldNumber = 58;
  const ::proto::RecalculateAreaExplorePointOp& recalculate_area_explore_point_op() const;
  ::proto::RecalculateAreaExplorePointOp* mutable_recalculate_area_explore_point_op();
  ::proto::RecalculateAreaExplorePointOp* release_recalculate_area_explore_point_op();
  void set_allocated_recalculate_area_explore_point_op(::proto::RecalculateAreaExplorePointOp* recalculate_area_explore_point_op);

  // .proto.NicknameAuditResultOp nickname_audit_result_op = 59;
  bool has_nickname_audit_result_op() const;
  void clear_nickname_audit_result_op();
  static const int kNicknameAuditResultOpFieldNumber = 59;
  const ::proto::NicknameAuditResultOp& nickname_audit_result_op() const;
  ::proto::NicknameAuditResultOp* mutable_nickname_audit_result_op();
  ::proto::NicknameAuditResultOp* release_nickname_audit_result_op();
  void set_allocated_nickname_audit_result_op(::proto::NicknameAuditResultOp* nickname_audit_result_op);

  // .proto.SignatureAuditResultOp signature_audit_result_op = 60;
  bool has_signature_audit_result_op() const;
  void clear_signature_audit_result_op();
  static const int kSignatureAuditResultOpFieldNumber = 60;
  const ::proto::SignatureAuditResultOp& signature_audit_result_op() const;
  ::proto::SignatureAuditResultOp* mutable_signature_audit_result_op();
  ::proto::SignatureAuditResultOp* release_signature_audit_result_op();
  void set_allocated_signature_audit_result_op(::proto::SignatureAuditResultOp* signature_audit_result_op);

  // .proto.PassHomeSceneArrangementAuditOp pass_home_scene_arrangement_audit_op = 61;
  bool has_pass_home_scene_arrangement_audit_op() const;
  void clear_pass_home_scene_arrangement_audit_op();
  static const int kPassHomeSceneArrangementAuditOpFieldNumber = 61;
  const ::proto::PassHomeSceneArrangementAuditOp& pass_home_scene_arrangement_audit_op() const;
  ::proto::PassHomeSceneArrangementAuditOp* mutable_pass_home_scene_arrangement_audit_op();
  ::proto::PassHomeSceneArrangementAuditOp* release_pass_home_scene_arrangement_audit_op();
  void set_allocated_pass_home_scene_arrangement_audit_op(::proto::PassHomeSceneArrangementAuditOp* pass_home_scene_arrangement_audit_op);

  // .proto.FailHomeSceneArrangementAuditOp fail_home_scene_arrangement_audit_op = 62;
  bool has_fail_home_scene_arrangement_audit_op() const;
  void clear_fail_home_scene_arrangement_audit_op();
  static const int kFailHomeSceneArrangementAuditOpFieldNumber = 62;
  const ::proto::FailHomeSceneArrangementAuditOp& fail_home_scene_arrangement_audit_op() const;
  ::proto::FailHomeSceneArrangementAuditOp* mutable_fail_home_scene_arrangement_audit_op();
  ::proto::FailHomeSceneArrangementAuditOp* release_fail_home_scene_arrangement_audit_op();
  void set_allocated_fail_home_scene_arrangement_audit_op(::proto::FailHomeSceneArrangementAuditOp* fail_home_scene_arrangement_audit_op);

  // .proto.FailHomeModulesArrangementAuditOp fail_home_modules_arrangement_audit_op = 63;
  bool has_fail_home_modules_arrangement_audit_op() const;
  void clear_fail_home_modules_arrangement_audit_op();
  static const int kFailHomeModulesArrangementAuditOpFieldNumber = 63;
  const ::proto::FailHomeModulesArrangementAuditOp& fail_home_modules_arrangement_audit_op() const;
  ::proto::FailHomeModulesArrangementAuditOp* mutable_fail_home_modules_arrangement_audit_op();
  ::proto::FailHomeModulesArrangementAuditOp* release_fail_home_modules_arrangement_audit_op();
  void set_allocated_fail_home_modules_arrangement_audit_op(::proto::FailHomeModulesArrangementAuditOp* fail_home_modules_arrangement_audit_op);

  // .proto.BanUgcPublishOp ban_ugc_publish_op = 64;
  bool has_ban_ugc_publish_op() const;
  void clear_ban_ugc_publish_op();
  static const int kBanUgcPublishOpFieldNumber = 64;
  const ::proto::BanUgcPublishOp& ban_ugc_publish_op() const;
  ::proto::BanUgcPublishOp* mutable_ban_ugc_publish_op();
  ::proto::BanUgcPublishOp* release_ban_ugc_publish_op();
  void set_allocated_ban_ugc_publish_op(::proto::BanUgcPublishOp* ban_ugc_publish_op);

  // .proto.ResetPlayerPersistentDungeonOp reset_player_persistent_dungeon_op = 28001;
  bool has_reset_player_persistent_dungeon_op() const;
  void clear_reset_player_persistent_dungeon_op();
  static const int kResetPlayerPersistentDungeonOpFieldNumber = 28001;
  const ::proto::ResetPlayerPersistentDungeonOp& reset_player_persistent_dungeon_op() const;
  ::proto::ResetPlayerPersistentDungeonOp* mutable_reset_player_persistent_dungeon_op();
  ::proto::ResetPlayerPersistentDungeonOp* release_reset_player_persistent_dungeon_op();
  void set_allocated_reset_player_persistent_dungeon_op(::proto::ResetPlayerPersistentDungeonOp* reset_player_persistent_dungeon_op);

  // .proto.ResetPlayerPosInPersistentDungeonOp reset_player_pos_in_persistent_dungeon_op = 28002;
  bool has_reset_player_pos_in_persistent_dungeon_op() const;
  void clear_reset_player_pos_in_persistent_dungeon_op();
  static const int kResetPlayerPosInPersistentDungeonOpFieldNumber = 28002;
  const ::proto::ResetPlayerPosInPersistentDungeonOp& reset_player_pos_in_persistent_dungeon_op() const;
  ::proto::ResetPlayerPosInPersistentDungeonOp* mutable_reset_player_pos_in_persistent_dungeon_op();
  ::proto::ResetPlayerPosInPersistentDungeonOp* release_reset_player_pos_in_persistent_dungeon_op();
  void set_allocated_reset_player_pos_in_persistent_dungeon_op(::proto::ResetPlayerPosInPersistentDungeonOp* reset_player_pos_in_persistent_dungeon_op);

  // .proto.LevelTagChangeOp level_tag_change_op = 28003;
  bool has_level_tag_change_op() const;
  void clear_level_tag_change_op();
  static const int kLevelTagChangeOpFieldNumber = 28003;
  const ::proto::LevelTagChangeOp& level_tag_change_op() const;
  ::proto::LevelTagChangeOp* mutable_level_tag_change_op();
  ::proto::LevelTagChangeOp* release_level_tag_change_op();
  void set_allocated_level_tag_change_op(::proto::LevelTagChangeOp* level_tag_change_op);

  // .proto.ResetPlayerWayPointInPersistentDungeonOp reset_player_way_point_in_persistent_dungeon_op = 28004;
  bool has_reset_player_way_point_in_persistent_dungeon_op() const;
  void clear_reset_player_way_point_in_persistent_dungeon_op();
  static const int kResetPlayerWayPointInPersistentDungeonOpFieldNumber = 28004;
  const ::proto::ResetPlayerWayPointInPersistentDungeonOp& reset_player_way_point_in_persistent_dungeon_op() const;
  ::proto::ResetPlayerWayPointInPersistentDungeonOp* mutable_reset_player_way_point_in_persistent_dungeon_op();
  ::proto::ResetPlayerWayPointInPersistentDungeonOp* release_reset_player_way_point_in_persistent_dungeon_op();
  void set_allocated_reset_player_way_point_in_persistent_dungeon_op(::proto::ResetPlayerWayPointInPersistentDungeonOp* reset_player_way_point_in_persistent_dungeon_op);

  // .proto.ExhibitionSetOp exhibition_set_op = 30000;
  bool has_exhibition_set_op() const;
  void clear_exhibition_set_op();
  static const int kExhibitionSetOpFieldNumber = 30000;
  const ::proto::ExhibitionSetOp& exhibition_set_op() const;
  ::proto::ExhibitionSetOp* mutable_exhibition_set_op();
  ::proto::ExhibitionSetOp* release_exhibition_set_op();
  void set_allocated_exhibition_set_op(::proto::ExhibitionSetOp* exhibition_set_op);

  // .proto.SetAvatarExtraPropOp set_avatar_extra_prop_op = 30001;
  bool has_set_avatar_extra_prop_op() const;
  void clear_set_avatar_extra_prop_op();
  static const int kSetAvatarExtraPropOpFieldNumber = 30001;
  const ::proto::SetAvatarExtraPropOp& set_avatar_extra_prop_op() const;
  ::proto::SetAvatarExtraPropOp* mutable_set_avatar_extra_prop_op();
  ::proto::SetAvatarExtraPropOp* release_set_avatar_extra_prop_op();
  void set_allocated_set_avatar_extra_prop_op(::proto::SetAvatarExtraPropOp* set_avatar_extra_prop_op);

  // .proto.AddItemWithLimitOp add_item_with_limit_op = 30002;
  bool has_add_item_with_limit_op() const;
  void clear_add_item_with_limit_op();
  static const int kAddItemWithLimitOpFieldNumber = 30002;
  const ::proto::AddItemWithLimitOp& add_item_with_limit_op() const;
  ::proto::AddItemWithLimitOp* mutable_add_item_with_limit_op();
  ::proto::AddItemWithLimitOp* release_add_item_with_limit_op();
  void set_allocated_add_item_with_limit_op(::proto::AddItemWithLimitOp* add_item_with_limit_op);

  // .proto.SetGadgetChainLevelOp set_gadget_chain_level_op = 31001;
  bool has_set_gadget_chain_level_op() const;
  void clear_set_gadget_chain_level_op();
  static const int kSetGadgetChainLevelOpFieldNumber = 31001;
  const ::proto::SetGadgetChainLevelOp& set_gadget_chain_level_op() const;
  ::proto::SetGadgetChainLevelOp* mutable_set_gadget_chain_level_op();
  ::proto::SetGadgetChainLevelOp* release_set_gadget_chain_level_op();
  void set_allocated_set_gadget_chain_level_op(::proto::SetGadgetChainLevelOp* set_gadget_chain_level_op);

  // .proto.SetDailyTaskVarOp set_daily_task_var_op = 32001;
  bool has_set_daily_task_var_op() const;
  void clear_set_daily_task_var_op();
  static const int kSetDailyTaskVarOpFieldNumber = 32001;
  const ::proto::SetDailyTaskVarOp& set_daily_task_var_op() const;
  ::proto::SetDailyTaskVarOp* mutable_set_daily_task_var_op();
  ::proto::SetDailyTaskVarOp* release_set_daily_task_var_op();
  void set_allocated_set_daily_task_var_op(::proto::SetDailyTaskVarOp* set_daily_task_var_op);

  // .proto.AvatarRenameAuditResultOp avatar_rename_audit_result_op = 33001;
  bool has_avatar_rename_audit_result_op() const;
  void clear_avatar_rename_audit_result_op();
  static const int kAvatarRenameAuditResultOpFieldNumber = 33001;
  const ::proto::AvatarRenameAuditResultOp& avatar_rename_audit_result_op() const;
  ::proto::AvatarRenameAuditResultOp* mutable_avatar_rename_audit_result_op();
  ::proto::AvatarRenameAuditResultOp* release_avatar_rename_audit_result_op();
  void set_allocated_avatar_rename_audit_result_op(::proto::AvatarRenameAuditResultOp* avatar_rename_audit_result_op);

  // .proto.ResetAvatarRenameOp reset_avatar_rename_op = 33002;
  bool has_reset_avatar_rename_op() const;
  void clear_reset_avatar_rename_op();
  static const int kResetAvatarRenameOpFieldNumber = 33002;
  const ::proto::ResetAvatarRenameOp& reset_avatar_rename_op() const;
  ::proto::ResetAvatarRenameOp* mutable_reset_avatar_rename_op();
  ::proto::ResetAvatarRenameOp* release_reset_avatar_rename_op();
  void set_allocated_reset_avatar_rename_op(::proto::ResetAvatarRenameOp* reset_avatar_rename_op);

  // .proto.AddFinishedTalkOp add_finished_talk_op = 33003;
  bool has_add_finished_talk_op() const;
  void clear_add_finished_talk_op();
  static const int kAddFinishedTalkOpFieldNumber = 33003;
  const ::proto::AddFinishedTalkOp& add_finished_talk_op() const;
  ::proto::AddFinishedTalkOp* mutable_add_finished_talk_op();
  ::proto::AddFinishedTalkOp* release_add_finished_talk_op();
  void set_allocated_add_finished_talk_op(::proto::AddFinishedTalkOp* add_finished_talk_op);

  // .proto.DelFinishedTalkOp del_finished_talk_op = 33004;
  bool has_del_finished_talk_op() const;
  void clear_del_finished_talk_op();
  static const int kDelFinishedTalkOpFieldNumber = 33004;
  const ::proto::DelFinishedTalkOp& del_finished_talk_op() const;
  ::proto::DelFinishedTalkOp* mutable_del_finished_talk_op();
  ::proto::DelFinishedTalkOp* release_del_finished_talk_op();
  void set_allocated_del_finished_talk_op(::proto::DelFinishedTalkOp* del_finished_talk_op);

  // .proto.SetPlayerGCGMatchScoreOp set_player_gcg_match_score_op = 33005;
  bool has_set_player_gcg_match_score_op() const;
  void clear_set_player_gcg_match_score_op();
  static const int kSetPlayerGcgMatchScoreOpFieldNumber = 33005;
  const ::proto::SetPlayerGCGMatchScoreOp& set_player_gcg_match_score_op() const;
  ::proto::SetPlayerGCGMatchScoreOp* mutable_set_player_gcg_match_score_op();
  ::proto::SetPlayerGCGMatchScoreOp* release_set_player_gcg_match_score_op();
  void set_allocated_set_player_gcg_match_score_op(::proto::SetPlayerGCGMatchScoreOp* set_player_gcg_match_score_op);

  // .proto.SetPushTipsStateOp set_push_tips_state_op = 33006;
  bool has_set_push_tips_state_op() const;
  void clear_set_push_tips_state_op();
  static const int kSetPushTipsStateOpFieldNumber = 33006;
  const ::proto::SetPushTipsStateOp& set_push_tips_state_op() const;
  ::proto::SetPushTipsStateOp* mutable_set_push_tips_state_op();
  ::proto::SetPushTipsStateOp* release_set_push_tips_state_op();
  void set_allocated_set_push_tips_state_op(::proto::SetPushTipsStateOp* set_push_tips_state_op);

  // .proto.DeletePlayerGCGCardOp delete_player_gcg_card_op = 33007;
  bool has_delete_player_gcg_card_op() const;
  void clear_delete_player_gcg_card_op();
  static const int kDeletePlayerGcgCardOpFieldNumber = 33007;
  const ::proto::DeletePlayerGCGCardOp& delete_player_gcg_card_op() const;
  ::proto::DeletePlayerGCGCardOp* mutable_delete_player_gcg_card_op();
  ::proto::DeletePlayerGCGCardOp* release_delete_player_gcg_card_op();
  void set_allocated_delete_player_gcg_card_op(::proto::DeletePlayerGCGCardOp* delete_player_gcg_card_op);

  // .proto.DeletePlayerGCGCardFaceOp delete_player_gcg_card_face_op = 33008;
  bool has_delete_player_gcg_card_face_op() const;
  void clear_delete_player_gcg_card_face_op();
  static const int kDeletePlayerGcgCardFaceOpFieldNumber = 33008;
  const ::proto::DeletePlayerGCGCardFaceOp& delete_player_gcg_card_face_op() const;
  ::proto::DeletePlayerGCGCardFaceOp* mutable_delete_player_gcg_card_face_op();
  ::proto::DeletePlayerGCGCardFaceOp* release_delete_player_gcg_card_face_op();
  void set_allocated_delete_player_gcg_card_face_op(::proto::DeletePlayerGCGCardFaceOp* delete_player_gcg_card_face_op);

  // .proto.DeletePlayerGCGCardBackOp delete_player_gcg_card_back_op = 33009;
  bool has_delete_player_gcg_card_back_op() const;
  void clear_delete_player_gcg_card_back_op();
  static const int kDeletePlayerGcgCardBackOpFieldNumber = 33009;
  const ::proto::DeletePlayerGCGCardBackOp& delete_player_gcg_card_back_op() const;
  ::proto::DeletePlayerGCGCardBackOp* mutable_delete_player_gcg_card_back_op();
  ::proto::DeletePlayerGCGCardBackOp* release_delete_player_gcg_card_back_op();
  void set_allocated_delete_player_gcg_card_back_op(::proto::DeletePlayerGCGCardBackOp* delete_player_gcg_card_back_op);

  // .proto.DeletePlayerGCGDeckFieldOp delete_player_gcg_deck_field_op = 33010;
  bool has_delete_player_gcg_deck_field_op() const;
  void clear_delete_player_gcg_deck_field_op();
  static const int kDeletePlayerGcgDeckFieldOpFieldNumber = 33010;
  const ::proto::DeletePlayerGCGDeckFieldOp& delete_player_gcg_deck_field_op() const;
  ::proto::DeletePlayerGCGDeckFieldOp* mutable_delete_player_gcg_deck_field_op();
  ::proto::DeletePlayerGCGDeckFieldOp* release_delete_player_gcg_deck_field_op();
  void set_allocated_delete_player_gcg_deck_field_op(::proto::DeletePlayerGCGDeckFieldOp* delete_player_gcg_deck_field_op);

  // .proto.BanPlayerGCGMatchOp ban_player_gcg_match_op = 33011;
  bool has_ban_player_gcg_match_op() const;
  void clear_ban_player_gcg_match_op();
  static const int kBanPlayerGcgMatchOpFieldNumber = 33011;
  const ::proto::BanPlayerGCGMatchOp& ban_player_gcg_match_op() const;
  ::proto::BanPlayerGCGMatchOp* mutable_ban_player_gcg_match_op();
  ::proto::BanPlayerGCGMatchOp* release_ban_player_gcg_match_op();
  void set_allocated_ban_player_gcg_match_op(::proto::BanPlayerGCGMatchOp* ban_player_gcg_match_op);

  // .proto.BanPlayerGCGPVPOp ban_player_gcg_pvp_op = 33012;
  bool has_ban_player_gcg_pvp_op() const;
  void clear_ban_player_gcg_pvp_op();
  static const int kBanPlayerGcgPvpOpFieldNumber = 33012;
  const ::proto::BanPlayerGCGPVPOp& ban_player_gcg_pvp_op() const;
  ::proto::BanPlayerGCGPVPOp* mutable_ban_player_gcg_pvp_op();
  ::proto::BanPlayerGCGPVPOp* release_ban_player_gcg_pvp_op();
  void set_allocated_ban_player_gcg_pvp_op(::proto::BanPlayerGCGPVPOp* ban_player_gcg_pvp_op);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.OfflineMsgBin)
 private:
  void set_has_del_item_op();
  void set_has_goto_op();
  void set_has_reset_parent_quest_op();
  void set_has_refresh_group_op();
  void set_has_set_scene_point_lock_status_op();
  void set_has_set_nick_name_op();
  void set_has_refresh_shop_op();
  void set_has_unlock_talent_op();
  void set_has_take_off_equip_op();
  void set_has_del_mail_op();
  void set_has_finish_daily_task_op();
  void set_has_unlock_area_op();
  void set_has_del_item_negative_op();
  void set_has_del_equip_op();
  void set_has_add_item_op();
  void set_has_modify_born_pos_op();
  void set_has_sub_coin_negative_op();
  void set_has_set_quest_content_progress_op();
  void set_has_finish_order_op();
  void set_has_add_or_modify_watcher_op();
  void set_has_del_watcher_op();
  void set_has_set_signature_op();
  void set_has_add_or_sub_resin_op();
  void set_has_set_quest_global_var_value_op();
  void set_has_add_mcoin_op();
  void set_has_group_bin_op();
  void set_has_del_one_off_op();
  void set_has_finish_routine_op();
  void set_has_finish_daily_task_group_op();
  void set_has_refresh_blossom_circle_camp_op();
  void set_has_blessing_give_pic_op();
  void set_has_expedition_assist_op();
  void set_has_recover_world_level_op();
  void set_has_force_accept_quest_op();
  void set_has_set_main_coop_confidence_op();
  void set_has_add_coop_point_save_point_list_op();
  void set_has_add_region_search_progress_op();
  void set_has_set_match_punish_times_op();
  void set_has_reset_channeller_slab_camp_group_op();
  void set_has_proc_scene_tag_op();
  void set_has_set_climate_area_type_op();
  void set_has_exchange_mcoin_op();
  void set_has_set_finished_parent_quest_child_state_op();
  void set_has_set_level1_area_explore_point_op();
  void set_has_set_codex_open_or_close_op();
  void set_has_change_map_area_info_op();
  void set_has_group_link_op();
  void set_has_set_watcher_comp_record_value_op();
  void set_has_add_friend_op();
  void set_has_del_friend_op();
  void set_has_add_friend_ask_op();
  void set_has_del_friend_ask_op();
  void set_has_ban_custom_dungeon_op();
  void set_has_remove_invalid_map_marks_op();
  void set_has_recalculate_area_explore_point_op();
  void set_has_nickname_audit_result_op();
  void set_has_signature_audit_result_op();
  void set_has_pass_home_scene_arrangement_audit_op();
  void set_has_fail_home_scene_arrangement_audit_op();
  void set_has_fail_home_modules_arrangement_audit_op();
  void set_has_ban_ugc_publish_op();
  void set_has_reset_player_persistent_dungeon_op();
  void set_has_reset_player_pos_in_persistent_dungeon_op();
  void set_has_level_tag_change_op();
  void set_has_reset_player_way_point_in_persistent_dungeon_op();
  void set_has_exhibition_set_op();
  void set_has_set_avatar_extra_prop_op();
  void set_has_add_item_with_limit_op();
  void set_has_set_gadget_chain_level_op();
  void set_has_set_daily_task_var_op();
  void set_has_avatar_rename_audit_result_op();
  void set_has_reset_avatar_rename_op();
  void set_has_add_finished_talk_op();
  void set_has_del_finished_talk_op();
  void set_has_set_player_gcg_match_score_op();
  void set_has_set_push_tips_state_op();
  void set_has_delete_player_gcg_card_op();
  void set_has_delete_player_gcg_card_face_op();
  void set_has_delete_player_gcg_card_back_op();
  void set_has_delete_player_gcg_deck_field_op();
  void set_has_ban_player_gcg_match_op();
  void set_has_ban_player_gcg_pvp_op();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::google::protobuf::uint32 enque_time_;
  ::google::protobuf::uint32 index_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::DelItemOp* del_item_op_;
    ::proto::PlayerGotoOp* goto_op_;
    ::proto::ResetParentQuestOp* reset_parent_quest_op_;
    ::proto::RefreshGroupOp* refresh_group_op_;
    ::proto::SetScenePointLockStatusOp* set_scene_point_lock_status_op_;
    ::proto::SetPlayerNickNameOp* set_nick_name_op_;
    ::proto::RefreshShopOp* refresh_shop_op_;
    ::proto::UnlockTalentOp* unlock_talent_op_;
    ::proto::TakeOffEquipOp* take_off_equip_op_;
    ::proto::DelMailOp* del_mail_op_;
    ::proto::FinishDailyTaskOp* finish_daily_task_op_;
    ::proto::UnlockAreaOp* unlock_area_op_;
    ::proto::DelItemNegativeOp* del_item_negative_op_;
    ::proto::DelEquipOp* del_equip_op_;
    ::proto::AddItemOp* add_item_op_;
    ::proto::ModifyBornPosOp* modify_born_pos_op_;
    ::proto::SubCoinNegativeOp* sub_coin_negative_op_;
    ::proto::SetQuestContentProgressOp* set_quest_content_progress_op_;
    ::proto::FinishOrderOp* finish_order_op_;
    ::proto::AddOrModifyWatcherOp* add_or_modify_watcher_op_;
    ::proto::DelWatcherOp* del_watcher_op_;
    ::proto::SetSignatureOp* set_signature_op_;
    ::proto::AddOrSubResinOp* add_or_sub_resin_op_;
    ::proto::SetQuestGlobalVarValueOp* set_quest_global_var_value_op_;
    ::proto::AddMcoinVipPointOp* add_mcoin_op_;
    ::proto::GroupBinOp* group_bin_op_;
    ::proto::DelOneOffOp* del_one_off_op_;
    ::proto::FinishRoutineOp* finish_routine_op_;
    ::proto::FinishDailyTaskUnloadGroupOp* finish_daily_task_group_op_;
    ::proto::RefreshBlossomCircleCampOp* refresh_blossom_circle_camp_op_;
    ::proto::BlessingActivityGivePicOp* blessing_give_pic_op_;
    ::proto::ExpeditionActivityAssistOp* expedition_assist_op_;
    ::proto::RecoverWorldLevelOp* recover_world_level_op_;
    ::proto::ForceAcceptQuestOp* force_accept_quest_op_;
    ::proto::SetMainCoopConfidenceOp* set_main_coop_confidence_op_;
    ::proto::AddCoopPointSavePointListOp* add_coop_point_save_point_list_op_;
    ::proto::AddRegionSearchProgressOp* add_region_search_progress_op_;
    ::proto::SetMatchPunishTimesOp* set_match_punish_times_op_;
    ::proto::ResetChannellerSlabCampGroupOp* reset_channeller_slab_camp_group_op_;
    ::proto::ProcSceneTagOp* proc_scene_tag_op_;
    ::proto::SetClimateAreaTypeOp* set_climate_area_type_op_;
    ::proto::ExchangeMcoinOp* exchange_mcoin_op_;
    ::proto::SetFinishedParentQuestChildStateOp* set_finished_parent_quest_child_state_op_;
    ::proto::SetLevel1AreaExplorePointOp* set_level1_area_explore_point_op_;
    ::proto::SetCodexOpenOrCloseOp* set_codex_open_or_close_op_;
    ::proto::ChangeMapAreaInfoOp* change_map_area_info_op_;
    ::proto::GroupLinkOp* group_link_op_;
    ::proto::SetWatcherCompRecordValueOp* set_watcher_comp_record_value_op_;
    ::proto::AddFriendOp* add_friend_op_;
    ::proto::DelFriendOp* del_friend_op_;
    ::proto::AddFriendAskOp* add_friend_ask_op_;
    ::proto::DelFriendAskOp* del_friend_ask_op_;
    ::proto::BanCustomDungeonOp* ban_custom_dungeon_op_;
    ::proto::RemoveInvalidMapMarksOp* remove_invalid_map_marks_op_;
    ::proto::RecalculateAreaExplorePointOp* recalculate_area_explore_point_op_;
    ::proto::NicknameAuditResultOp* nickname_audit_result_op_;
    ::proto::SignatureAuditResultOp* signature_audit_result_op_;
    ::proto::PassHomeSceneArrangementAuditOp* pass_home_scene_arrangement_audit_op_;
    ::proto::FailHomeSceneArrangementAuditOp* fail_home_scene_arrangement_audit_op_;
    ::proto::FailHomeModulesArrangementAuditOp* fail_home_modules_arrangement_audit_op_;
    ::proto::BanUgcPublishOp* ban_ugc_publish_op_;
    ::proto::ResetPlayerPersistentDungeonOp* reset_player_persistent_dungeon_op_;
    ::proto::ResetPlayerPosInPersistentDungeonOp* reset_player_pos_in_persistent_dungeon_op_;
    ::proto::LevelTagChangeOp* level_tag_change_op_;
    ::proto::ResetPlayerWayPointInPersistentDungeonOp* reset_player_way_point_in_persistent_dungeon_op_;
    ::proto::ExhibitionSetOp* exhibition_set_op_;
    ::proto::SetAvatarExtraPropOp* set_avatar_extra_prop_op_;
    ::proto::AddItemWithLimitOp* add_item_with_limit_op_;
    ::proto::SetGadgetChainLevelOp* set_gadget_chain_level_op_;
    ::proto::SetDailyTaskVarOp* set_daily_task_var_op_;
    ::proto::AvatarRenameAuditResultOp* avatar_rename_audit_result_op_;
    ::proto::ResetAvatarRenameOp* reset_avatar_rename_op_;
    ::proto::AddFinishedTalkOp* add_finished_talk_op_;
    ::proto::DelFinishedTalkOp* del_finished_talk_op_;
    ::proto::SetPlayerGCGMatchScoreOp* set_player_gcg_match_score_op_;
    ::proto::SetPushTipsStateOp* set_push_tips_state_op_;
    ::proto::DeletePlayerGCGCardOp* delete_player_gcg_card_op_;
    ::proto::DeletePlayerGCGCardFaceOp* delete_player_gcg_card_face_op_;
    ::proto::DeletePlayerGCGCardBackOp* delete_player_gcg_card_back_op_;
    ::proto::DeletePlayerGCGDeckFieldOp* delete_player_gcg_deck_field_op_;
    ::proto::BanPlayerGCGMatchOp* ban_player_gcg_match_op_;
    ::proto::BanPlayerGCGPVPOp* ban_player_gcg_pvp_op_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeTestOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeTestOp) */ {
 public:
  HomeTestOp();
  virtual ~HomeTestOp();

  HomeTestOp(const HomeTestOp& from);

  inline HomeTestOp& operator=(const HomeTestOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeTestOp(HomeTestOp&& from) noexcept
    : HomeTestOp() {
    *this = ::std::move(from);
  }

  inline HomeTestOp& operator=(HomeTestOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeTestOp& default_instance();

  static inline const HomeTestOp* internal_default_instance() {
    return reinterpret_cast<const HomeTestOp*>(
               &_HomeTestOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(HomeTestOp* other);
  friend void swap(HomeTestOp& a, HomeTestOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeTestOp* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeTestOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeTestOp& from);
  void MergeFrom(const HomeTestOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeTestOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 val = 1;
  void clear_val();
  static const int kValFieldNumber = 1;
  ::google::protobuf::uint32 val() const;
  void set_val(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeTestOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 val_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeRestoreDefaultsArrangementOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeRestoreDefaultsArrangementOp) */ {
 public:
  HomeRestoreDefaultsArrangementOp();
  virtual ~HomeRestoreDefaultsArrangementOp();

  HomeRestoreDefaultsArrangementOp(const HomeRestoreDefaultsArrangementOp& from);

  inline HomeRestoreDefaultsArrangementOp& operator=(const HomeRestoreDefaultsArrangementOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeRestoreDefaultsArrangementOp(HomeRestoreDefaultsArrangementOp&& from) noexcept
    : HomeRestoreDefaultsArrangementOp() {
    *this = ::std::move(from);
  }

  inline HomeRestoreDefaultsArrangementOp& operator=(HomeRestoreDefaultsArrangementOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeRestoreDefaultsArrangementOp& default_instance();

  static inline const HomeRestoreDefaultsArrangementOp* internal_default_instance() {
    return reinterpret_cast<const HomeRestoreDefaultsArrangementOp*>(
               &_HomeRestoreDefaultsArrangementOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(HomeRestoreDefaultsArrangementOp* other);
  friend void swap(HomeRestoreDefaultsArrangementOp& a, HomeRestoreDefaultsArrangementOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeRestoreDefaultsArrangementOp* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeRestoreDefaultsArrangementOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeRestoreDefaultsArrangementOp& from);
  void MergeFrom(const HomeRestoreDefaultsArrangementOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeRestoreDefaultsArrangementOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 module_id_list = 2;
  int module_id_list_size() const;
  void clear_module_id_list();
  static const int kModuleIdListFieldNumber = 2;
  ::google::protobuf::uint32 module_id_list(int index) const;
  void set_module_id_list(int index, ::google::protobuf::uint32 value);
  void add_module_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      module_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_module_id_list();

  // bool is_all_module = 1;
  void clear_is_all_module();
  static const int kIsAllModuleFieldNumber = 1;
  bool is_all_module() const;
  void set_is_all_module(bool value);

  // uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeRestoreDefaultsArrangementOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > module_id_list_;
  mutable int _module_id_list_cached_byte_size_;
  bool is_all_module_;
  ::google::protobuf::uint32 version_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeRestoreDefaultsSceneArrangementOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeRestoreDefaultsSceneArrangementOp) */ {
 public:
  HomeRestoreDefaultsSceneArrangementOp();
  virtual ~HomeRestoreDefaultsSceneArrangementOp();

  HomeRestoreDefaultsSceneArrangementOp(const HomeRestoreDefaultsSceneArrangementOp& from);

  inline HomeRestoreDefaultsSceneArrangementOp& operator=(const HomeRestoreDefaultsSceneArrangementOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeRestoreDefaultsSceneArrangementOp(HomeRestoreDefaultsSceneArrangementOp&& from) noexcept
    : HomeRestoreDefaultsSceneArrangementOp() {
    *this = ::std::move(from);
  }

  inline HomeRestoreDefaultsSceneArrangementOp& operator=(HomeRestoreDefaultsSceneArrangementOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeRestoreDefaultsSceneArrangementOp& default_instance();

  static inline const HomeRestoreDefaultsSceneArrangementOp* internal_default_instance() {
    return reinterpret_cast<const HomeRestoreDefaultsSceneArrangementOp*>(
               &_HomeRestoreDefaultsSceneArrangementOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(HomeRestoreDefaultsSceneArrangementOp* other);
  friend void swap(HomeRestoreDefaultsSceneArrangementOp& a, HomeRestoreDefaultsSceneArrangementOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeRestoreDefaultsSceneArrangementOp* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeRestoreDefaultsSceneArrangementOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeRestoreDefaultsSceneArrangementOp& from);
  void MergeFrom(const HomeRestoreDefaultsSceneArrangementOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeRestoreDefaultsSceneArrangementOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 module_id = 1;
  void clear_module_id();
  static const int kModuleIdFieldNumber = 1;
  ::google::protobuf::uint32 module_id() const;
  void set_module_id(::google::protobuf::uint32 value);

  // uint32 scene_id = 2;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 2;
  ::google::protobuf::uint32 scene_id() const;
  void set_scene_id(::google::protobuf::uint32 value);

  // uint32 version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.HomeRestoreDefaultsSceneArrangementOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 module_id_;
  ::google::protobuf::uint32 scene_id_;
  ::google::protobuf::uint32 version_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HomeOfflineMsgBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HomeOfflineMsgBin) */ {
 public:
  HomeOfflineMsgBin();
  virtual ~HomeOfflineMsgBin();

  HomeOfflineMsgBin(const HomeOfflineMsgBin& from);

  inline HomeOfflineMsgBin& operator=(const HomeOfflineMsgBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HomeOfflineMsgBin(HomeOfflineMsgBin&& from) noexcept
    : HomeOfflineMsgBin() {
    *this = ::std::move(from);
  }

  inline HomeOfflineMsgBin& operator=(HomeOfflineMsgBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HomeOfflineMsgBin& default_instance();

  enum DetailCase {
    kTestOp = 101,
    kRestoreDefaultsArrangementOp = 102,
    kRestoreDefaultsSceneArrangementOp = 103,
    DETAIL_NOT_SET = 0,
  };

  static inline const HomeOfflineMsgBin* internal_default_instance() {
    return reinterpret_cast<const HomeOfflineMsgBin*>(
               &_HomeOfflineMsgBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(HomeOfflineMsgBin* other);
  friend void swap(HomeOfflineMsgBin& a, HomeOfflineMsgBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HomeOfflineMsgBin* New() const PROTOBUF_FINAL { return New(NULL); }

  HomeOfflineMsgBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HomeOfflineMsgBin& from);
  void MergeFrom(const HomeOfflineMsgBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HomeOfflineMsgBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ticket = 2;
  void clear_ticket();
  static const int kTicketFieldNumber = 2;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // fixed32 enque_time = 1;
  void clear_enque_time();
  static const int kEnqueTimeFieldNumber = 1;
  ::google::protobuf::uint32 enque_time() const;
  void set_enque_time(::google::protobuf::uint32 value);

  // uint32 index = 3;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // .proto.HomeTestOp test_op = 101;
  bool has_test_op() const;
  void clear_test_op();
  static const int kTestOpFieldNumber = 101;
  const ::proto::HomeTestOp& test_op() const;
  ::proto::HomeTestOp* mutable_test_op();
  ::proto::HomeTestOp* release_test_op();
  void set_allocated_test_op(::proto::HomeTestOp* test_op);

  // .proto.HomeRestoreDefaultsArrangementOp restore_defaults_arrangement_op = 102;
  bool has_restore_defaults_arrangement_op() const;
  void clear_restore_defaults_arrangement_op();
  static const int kRestoreDefaultsArrangementOpFieldNumber = 102;
  const ::proto::HomeRestoreDefaultsArrangementOp& restore_defaults_arrangement_op() const;
  ::proto::HomeRestoreDefaultsArrangementOp* mutable_restore_defaults_arrangement_op();
  ::proto::HomeRestoreDefaultsArrangementOp* release_restore_defaults_arrangement_op();
  void set_allocated_restore_defaults_arrangement_op(::proto::HomeRestoreDefaultsArrangementOp* restore_defaults_arrangement_op);

  // .proto.HomeRestoreDefaultsSceneArrangementOp restore_defaults_scene_arrangement_op = 103;
  bool has_restore_defaults_scene_arrangement_op() const;
  void clear_restore_defaults_scene_arrangement_op();
  static const int kRestoreDefaultsSceneArrangementOpFieldNumber = 103;
  const ::proto::HomeRestoreDefaultsSceneArrangementOp& restore_defaults_scene_arrangement_op() const;
  ::proto::HomeRestoreDefaultsSceneArrangementOp* mutable_restore_defaults_scene_arrangement_op();
  ::proto::HomeRestoreDefaultsSceneArrangementOp* release_restore_defaults_scene_arrangement_op();
  void set_allocated_restore_defaults_scene_arrangement_op(::proto::HomeRestoreDefaultsSceneArrangementOp* restore_defaults_scene_arrangement_op);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.HomeOfflineMsgBin)
 private:
  void set_has_test_op();
  void set_has_restore_defaults_arrangement_op();
  void set_has_restore_defaults_scene_arrangement_op();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::google::protobuf::uint32 enque_time_;
  ::google::protobuf::uint32 index_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::HomeTestOp* test_op_;
    ::proto::HomeRestoreDefaultsArrangementOp* restore_defaults_arrangement_op_;
    ::proto::HomeRestoreDefaultsSceneArrangementOp* restore_defaults_scene_arrangement_op_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupVariableBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupVariableBin) */ {
 public:
  GroupVariableBin();
  virtual ~GroupVariableBin();

  GroupVariableBin(const GroupVariableBin& from);

  inline GroupVariableBin& operator=(const GroupVariableBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupVariableBin(GroupVariableBin&& from) noexcept
    : GroupVariableBin() {
    *this = ::std::move(from);
  }

  inline GroupVariableBin& operator=(GroupVariableBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupVariableBin& default_instance();

  static inline const GroupVariableBin* internal_default_instance() {
    return reinterpret_cast<const GroupVariableBin*>(
               &_GroupVariableBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(GroupVariableBin* other);
  friend void swap(GroupVariableBin& a, GroupVariableBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupVariableBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupVariableBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupVariableBin& from);
  void MergeFrom(const GroupVariableBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupVariableBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GroupVariableBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 value_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GroupVariableConfigIdBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupVariableConfigIdBin) */ {
 public:
  GroupVariableConfigIdBin();
  virtual ~GroupVariableConfigIdBin();

  GroupVariableConfigIdBin(const GroupVariableConfigIdBin& from);

  inline GroupVariableConfigIdBin& operator=(const GroupVariableConfigIdBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupVariableConfigIdBin(GroupVariableConfigIdBin&& from) noexcept
    : GroupVariableConfigIdBin() {
    *this = ::std::move(from);
  }

  inline GroupVariableConfigIdBin& operator=(GroupVariableConfigIdBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupVariableConfigIdBin& default_instance();

  static inline const GroupVariableConfigIdBin* internal_default_instance() {
    return reinterpret_cast<const GroupVariableConfigIdBin*>(
               &_GroupVariableConfigIdBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(GroupVariableConfigIdBin* other);
  friend void swap(GroupVariableConfigIdBin& a, GroupVariableConfigIdBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupVariableConfigIdBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupVariableConfigIdBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupVariableConfigIdBin& from);
  void MergeFrom(const GroupVariableConfigIdBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupVariableConfigIdBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 config_id = 1;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 1;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // int32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GroupVariableConfigIdBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::int32 value_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GroupProductBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GroupProductBin) */ {
 public:
  GroupProductBin();
  virtual ~GroupProductBin();

  GroupProductBin(const GroupProductBin& from);

  inline GroupProductBin& operator=(const GroupProductBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GroupProductBin(GroupProductBin&& from) noexcept
    : GroupProductBin() {
    *this = ::std::move(from);
  }

  inline GroupProductBin& operator=(GroupProductBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupProductBin& default_instance();

  static inline const GroupProductBin* internal_default_instance() {
    return reinterpret_cast<const GroupProductBin*>(
               &_GroupProductBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(GroupProductBin* other);
  friend void swap(GroupProductBin& a, GroupProductBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroupProductBin* New() const PROTOBUF_FINAL { return New(NULL); }

  GroupProductBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GroupProductBin& from);
  void MergeFrom(const GroupProductBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GroupProductBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> gadget_one_off_map = 1;
  int gadget_one_off_map_size() const;
  void clear_gadget_one_off_map();
  static const int kGadgetOneOffMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      gadget_one_off_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_gadget_one_off_map();

  // map<uint32, uint32> monster_one_off_map = 2;
  int monster_one_off_map_size() const;
  void clear_monster_one_off_map();
  static const int kMonsterOneOffMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      monster_one_off_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_monster_one_off_map();

  // @@protoc_insertion_point(class_scope:proto.GroupProductBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GroupProductBin_GadgetOneOffMapEntry : public ::google::protobuf::internal::MapEntry<GroupProductBin_GadgetOneOffMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GroupProductBin_GadgetOneOffMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GroupProductBin_GadgetOneOffMapEntry();
    GroupProductBin_GadgetOneOffMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GroupProductBin_GadgetOneOffMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GroupProductBin_GadgetOneOffMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GroupProductBin_GadgetOneOffMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > gadget_one_off_map_;
  private:
  public:
  class GroupProductBin_MonsterOneOffMapEntry : public ::google::protobuf::internal::MapEntry<GroupProductBin_MonsterOneOffMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GroupProductBin_MonsterOneOffMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GroupProductBin_MonsterOneOffMapEntry();
    GroupProductBin_MonsterOneOffMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GroupProductBin_MonsterOneOffMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GroupProductBin_MonsterOneOffMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GroupProductBin_MonsterOneOffMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > monster_one_off_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InteractGadget : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.InteractGadget) */ {
 public:
  InteractGadget();
  virtual ~InteractGadget();

  InteractGadget(const InteractGadget& from);

  inline InteractGadget& operator=(const InteractGadget& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InteractGadget(InteractGadget&& from) noexcept
    : InteractGadget() {
    *this = ::std::move(from);
  }

  inline InteractGadget& operator=(InteractGadget&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const InteractGadget& default_instance();

  static inline const InteractGadget* internal_default_instance() {
    return reinterpret_cast<const InteractGadget*>(
               &_InteractGadget_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(InteractGadget* other);
  friend void swap(InteractGadget& a, InteractGadget& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InteractGadget* New() const PROTOBUF_FINAL { return New(NULL); }

  InteractGadget* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InteractGadget& from);
  void MergeFrom(const InteractGadget& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InteractGadget* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 group_id = 1;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 group_id() const;
  void set_group_id(::google::protobuf::uint32 value);

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.InteractGadget)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::uint32 config_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AreaBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.AreaBin) */ {
 public:
  AreaBin();
  virtual ~AreaBin();

  AreaBin(const AreaBin& from);

  inline AreaBin& operator=(const AreaBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AreaBin(AreaBin&& from) noexcept
    : AreaBin() {
    *this = ::std::move(from);
  }

  inline AreaBin& operator=(AreaBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const AreaBin& default_instance();

  static inline const AreaBin* internal_default_instance() {
    return reinterpret_cast<const AreaBin*>(
               &_AreaBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(AreaBin* other);
  friend void swap(AreaBin& a, AreaBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AreaBin* New() const PROTOBUF_FINAL { return New(NULL); }

  AreaBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AreaBin& from);
  void MergeFrom(const AreaBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AreaBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 unlock_point_list = 3;
  int unlock_point_list_size() const;
  void clear_unlock_point_list();
  static const int kUnlockPointListFieldNumber = 3;
  ::google::protobuf::uint32 unlock_point_list(int index) const;
  void set_unlock_point_list(int index, ::google::protobuf::uint32 value);
  void add_unlock_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlock_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlock_point_list();

  // repeated .proto.InteractGadget interact_gadget_list = 4;
  int interact_gadget_list_size() const;
  void clear_interact_gadget_list();
  static const int kInteractGadgetListFieldNumber = 4;
  const ::proto::InteractGadget& interact_gadget_list(int index) const;
  ::proto::InteractGadget* mutable_interact_gadget_list(int index);
  ::proto::InteractGadget* add_interact_gadget_list();
  ::google::protobuf::RepeatedPtrField< ::proto::InteractGadget >*
      mutable_interact_gadget_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::InteractGadget >&
      interact_gadget_list() const;

  // uint32 explore_num = 1;
  void clear_explore_num();
  static const int kExploreNumFieldNumber = 1;
  ::google::protobuf::uint32 explore_num() const;
  void set_explore_num(::google::protobuf::uint32 value);

  // uint32 explore_point = 2;
  void clear_explore_point();
  static const int kExplorePointFieldNumber = 2;
  ::google::protobuf::uint32 explore_point() const;
  void set_explore_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.AreaBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlock_point_list_;
  mutable int _unlock_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::InteractGadget > interact_gadget_list_;
  ::google::protobuf::uint32 explore_num_;
  ::google::protobuf::uint32 explore_point_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CityBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CityBin) */ {
 public:
  CityBin();
  virtual ~CityBin();

  CityBin(const CityBin& from);

  inline CityBin& operator=(const CityBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CityBin(CityBin&& from) noexcept
    : CityBin() {
    *this = ::std::move(from);
  }

  inline CityBin& operator=(CityBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CityBin& default_instance();

  static inline const CityBin* internal_default_instance() {
    return reinterpret_cast<const CityBin*>(
               &_CityBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(CityBin* other);
  friend void swap(CityBin& a, CityBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CityBin* New() const PROTOBUF_FINAL { return New(NULL); }

  CityBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CityBin& from);
  void MergeFrom(const CityBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CityBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 crystal_num = 2;
  void clear_crystal_num();
  static const int kCrystalNumFieldNumber = 2;
  ::google::protobuf::uint32 crystal_num() const;
  void set_crystal_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CityBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 crystal_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScenePlayerLocationBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ScenePlayerLocationBin) */ {
 public:
  ScenePlayerLocationBin();
  virtual ~ScenePlayerLocationBin();

  ScenePlayerLocationBin(const ScenePlayerLocationBin& from);

  inline ScenePlayerLocationBin& operator=(const ScenePlayerLocationBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScenePlayerLocationBin(ScenePlayerLocationBin&& from) noexcept
    : ScenePlayerLocationBin() {
    *this = ::std::move(from);
  }

  inline ScenePlayerLocationBin& operator=(ScenePlayerLocationBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScenePlayerLocationBin& default_instance();

  static inline const ScenePlayerLocationBin* internal_default_instance() {
    return reinterpret_cast<const ScenePlayerLocationBin*>(
               &_ScenePlayerLocationBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(ScenePlayerLocationBin* other);
  friend void swap(ScenePlayerLocationBin& a, ScenePlayerLocationBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScenePlayerLocationBin* New() const PROTOBUF_FINAL { return New(NULL); }

  ScenePlayerLocationBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScenePlayerLocationBin& from);
  void MergeFrom(const ScenePlayerLocationBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScenePlayerLocationBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.VectorBin cur_pos = 1;
  bool has_cur_pos() const;
  void clear_cur_pos();
  static const int kCurPosFieldNumber = 1;
  const ::proto::VectorBin& cur_pos() const;
  ::proto::VectorBin* mutable_cur_pos();
  ::proto::VectorBin* release_cur_pos();
  void set_allocated_cur_pos(::proto::VectorBin* cur_pos);

  // .proto.VectorBin cur_rot = 2;
  bool has_cur_rot() const;
  void clear_cur_rot();
  static const int kCurRotFieldNumber = 2;
  const ::proto::VectorBin& cur_rot() const;
  ::proto::VectorBin* mutable_cur_rot();
  ::proto::VectorBin* release_cur_rot();
  void set_allocated_cur_rot(::proto::VectorBin* cur_rot);

  // .proto.VectorBin last_valid_pos = 3;
  bool has_last_valid_pos() const;
  void clear_last_valid_pos();
  static const int kLastValidPosFieldNumber = 3;
  const ::proto::VectorBin& last_valid_pos() const;
  ::proto::VectorBin* mutable_last_valid_pos();
  ::proto::VectorBin* release_last_valid_pos();
  void set_allocated_last_valid_pos(::proto::VectorBin* last_valid_pos);

  // .proto.VectorBin last_valid_rot = 4;
  bool has_last_valid_rot() const;
  void clear_last_valid_rot();
  static const int kLastValidRotFieldNumber = 4;
  const ::proto::VectorBin& last_valid_rot() const;
  ::proto::VectorBin* mutable_last_valid_rot();
  ::proto::VectorBin* release_last_valid_rot();
  void set_allocated_last_valid_rot(::proto::VectorBin* last_valid_rot);

  // @@protoc_insertion_point(class_scope:proto.ScenePlayerLocationBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::VectorBin* cur_pos_;
  ::proto::VectorBin* cur_rot_;
  ::proto::VectorBin* last_valid_pos_;
  ::proto::VectorBin* last_valid_rot_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnvZoneInfoBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.EnvZoneInfoBin) */ {
 public:
  EnvZoneInfoBin();
  virtual ~EnvZoneInfoBin();

  EnvZoneInfoBin(const EnvZoneInfoBin& from);

  inline EnvZoneInfoBin& operator=(const EnvZoneInfoBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EnvZoneInfoBin(EnvZoneInfoBin&& from) noexcept
    : EnvZoneInfoBin() {
    *this = ::std::move(from);
  }

  inline EnvZoneInfoBin& operator=(EnvZoneInfoBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EnvZoneInfoBin& default_instance();

  static inline const EnvZoneInfoBin* internal_default_instance() {
    return reinterpret_cast<const EnvZoneInfoBin*>(
               &_EnvZoneInfoBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(EnvZoneInfoBin* other);
  friend void swap(EnvZoneInfoBin& a, EnvZoneInfoBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EnvZoneInfoBin* New() const PROTOBUF_FINAL { return New(NULL); }

  EnvZoneInfoBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnvZoneInfoBin& from);
  void MergeFrom(const EnvZoneInfoBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnvZoneInfoBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 last_refresh_time = 1;
  void clear_last_refresh_time();
  static const int kLastRefreshTimeFieldNumber = 1;
  ::google::protobuf::uint32 last_refresh_time() const;
  void set_last_refresh_time(::google::protobuf::uint32 value);

  // uint32 animal_num = 2;
  void clear_animal_num();
  static const int kAnimalNumFieldNumber = 2;
  ::google::protobuf::uint32 animal_num() const;
  void set_animal_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.EnvZoneInfoBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 last_refresh_time_;
  ::google::protobuf::uint32 animal_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneEnvAnimalCompBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEnvAnimalCompBin) */ {
 public:
  SceneEnvAnimalCompBin();
  virtual ~SceneEnvAnimalCompBin();

  SceneEnvAnimalCompBin(const SceneEnvAnimalCompBin& from);

  inline SceneEnvAnimalCompBin& operator=(const SceneEnvAnimalCompBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEnvAnimalCompBin(SceneEnvAnimalCompBin&& from) noexcept
    : SceneEnvAnimalCompBin() {
    *this = ::std::move(from);
  }

  inline SceneEnvAnimalCompBin& operator=(SceneEnvAnimalCompBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEnvAnimalCompBin& default_instance();

  static inline const SceneEnvAnimalCompBin* internal_default_instance() {
    return reinterpret_cast<const SceneEnvAnimalCompBin*>(
               &_SceneEnvAnimalCompBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(SceneEnvAnimalCompBin* other);
  friend void swap(SceneEnvAnimalCompBin& a, SceneEnvAnimalCompBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEnvAnimalCompBin* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEnvAnimalCompBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEnvAnimalCompBin& from);
  void MergeFrom(const SceneEnvAnimalCompBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEnvAnimalCompBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.EnvZoneInfoBin> zone_info_map = 1;
  int zone_info_map_size() const;
  void clear_zone_info_map();
  static const int kZoneInfoMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >&
      zone_info_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >*
      mutable_zone_info_map();

  // @@protoc_insertion_point(class_scope:proto.SceneEnvAnimalCompBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class SceneEnvAnimalCompBin_ZoneInfoMapEntry : public ::google::protobuf::internal::MapEntry<SceneEnvAnimalCompBin_ZoneInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::EnvZoneInfoBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneEnvAnimalCompBin_ZoneInfoMapEntry, 
      ::google::protobuf::uint32, ::proto::EnvZoneInfoBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    SceneEnvAnimalCompBin_ZoneInfoMapEntry();
    SceneEnvAnimalCompBin_ZoneInfoMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneEnvAnimalCompBin_ZoneInfoMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneEnvAnimalCompBin_ZoneInfoMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneEnvAnimalCompBin_ZoneInfoMapEntry,
      ::google::protobuf::uint32, ::proto::EnvZoneInfoBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > zone_info_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneWeatherInfoBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneWeatherInfoBin) */ {
 public:
  SceneWeatherInfoBin();
  virtual ~SceneWeatherInfoBin();

  SceneWeatherInfoBin(const SceneWeatherInfoBin& from);

  inline SceneWeatherInfoBin& operator=(const SceneWeatherInfoBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneWeatherInfoBin(SceneWeatherInfoBin&& from) noexcept
    : SceneWeatherInfoBin() {
    *this = ::std::move(from);
  }

  inline SceneWeatherInfoBin& operator=(SceneWeatherInfoBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneWeatherInfoBin& default_instance();

  static inline const SceneWeatherInfoBin* internal_default_instance() {
    return reinterpret_cast<const SceneWeatherInfoBin*>(
               &_SceneWeatherInfoBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(SceneWeatherInfoBin* other);
  friend void swap(SceneWeatherInfoBin& a, SceneWeatherInfoBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneWeatherInfoBin* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneWeatherInfoBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneWeatherInfoBin& from);
  void MergeFrom(const SceneWeatherInfoBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneWeatherInfoBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 forcast_climate_list = 4;
  int forcast_climate_list_size() const;
  void clear_forcast_climate_list();
  static const int kForcastClimateListFieldNumber = 4;
  ::google::protobuf::uint32 forcast_climate_list(int index) const;
  void set_forcast_climate_list(int index, ::google::protobuf::uint32 value);
  void add_forcast_climate_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      forcast_climate_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_forcast_climate_list();

  // uint32 height_area_id = 1;
  void clear_height_area_id();
  static const int kHeightAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 height_area_id() const;
  void set_height_area_id(::google::protobuf::uint32 value);

  // uint32 climate_type = 2;
  void clear_climate_type();
  static const int kClimateTypeFieldNumber = 2;
  ::google::protobuf::uint32 climate_type() const;
  void set_climate_type(::google::protobuf::uint32 value);

  // uint64 next_climate_time = 3;
  void clear_next_climate_time();
  static const int kNextClimateTimeFieldNumber = 3;
  ::google::protobuf::uint64 next_climate_time() const;
  void set_next_climate_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.SceneWeatherInfoBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > forcast_climate_list_;
  mutable int _forcast_climate_list_cached_byte_size_;
  ::google::protobuf::uint32 height_area_id_;
  ::google::protobuf::uint32 climate_type_;
  ::google::protobuf::uint64 next_climate_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneClimateAreaInfoBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneClimateAreaInfoBin) */ {
 public:
  SceneClimateAreaInfoBin();
  virtual ~SceneClimateAreaInfoBin();

  SceneClimateAreaInfoBin(const SceneClimateAreaInfoBin& from);

  inline SceneClimateAreaInfoBin& operator=(const SceneClimateAreaInfoBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneClimateAreaInfoBin(SceneClimateAreaInfoBin&& from) noexcept
    : SceneClimateAreaInfoBin() {
    *this = ::std::move(from);
  }

  inline SceneClimateAreaInfoBin& operator=(SceneClimateAreaInfoBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneClimateAreaInfoBin& default_instance();

  static inline const SceneClimateAreaInfoBin* internal_default_instance() {
    return reinterpret_cast<const SceneClimateAreaInfoBin*>(
               &_SceneClimateAreaInfoBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(SceneClimateAreaInfoBin* other);
  friend void swap(SceneClimateAreaInfoBin& a, SceneClimateAreaInfoBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneClimateAreaInfoBin* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneClimateAreaInfoBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneClimateAreaInfoBin& from);
  void MergeFrom(const SceneClimateAreaInfoBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneClimateAreaInfoBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 climate_area_id = 1;
  void clear_climate_area_id();
  static const int kClimateAreaIdFieldNumber = 1;
  ::google::protobuf::uint32 climate_area_id() const;
  void set_climate_area_id(::google::protobuf::uint32 value);

  // uint32 json_climate_type = 2;
  void clear_json_climate_type();
  static const int kJsonClimateTypeFieldNumber = 2;
  ::google::protobuf::uint32 json_climate_type() const;
  void set_json_climate_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneClimateAreaInfoBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 climate_area_id_;
  ::google::protobuf::uint32 json_climate_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneAllWeatherInfoBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAllWeatherInfoBin) */ {
 public:
  SceneAllWeatherInfoBin();
  virtual ~SceneAllWeatherInfoBin();

  SceneAllWeatherInfoBin(const SceneAllWeatherInfoBin& from);

  inline SceneAllWeatherInfoBin& operator=(const SceneAllWeatherInfoBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAllWeatherInfoBin(SceneAllWeatherInfoBin&& from) noexcept
    : SceneAllWeatherInfoBin() {
    *this = ::std::move(from);
  }

  inline SceneAllWeatherInfoBin& operator=(SceneAllWeatherInfoBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAllWeatherInfoBin& default_instance();

  static inline const SceneAllWeatherInfoBin* internal_default_instance() {
    return reinterpret_cast<const SceneAllWeatherInfoBin*>(
               &_SceneAllWeatherInfoBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(SceneAllWeatherInfoBin* other);
  friend void swap(SceneAllWeatherInfoBin& a, SceneAllWeatherInfoBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAllWeatherInfoBin* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAllWeatherInfoBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAllWeatherInfoBin& from);
  void MergeFrom(const SceneAllWeatherInfoBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAllWeatherInfoBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.SceneWeatherInfoBin weather_info_list = 1;
  int weather_info_list_size() const;
  void clear_weather_info_list();
  static const int kWeatherInfoListFieldNumber = 1;
  const ::proto::SceneWeatherInfoBin& weather_info_list(int index) const;
  ::proto::SceneWeatherInfoBin* mutable_weather_info_list(int index);
  ::proto::SceneWeatherInfoBin* add_weather_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneWeatherInfoBin >*
      mutable_weather_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneWeatherInfoBin >&
      weather_info_list() const;

  // repeated uint32 closed_weather_area_list = 2;
  int closed_weather_area_list_size() const;
  void clear_closed_weather_area_list();
  static const int kClosedWeatherAreaListFieldNumber = 2;
  ::google::protobuf::uint32 closed_weather_area_list(int index) const;
  void set_closed_weather_area_list(int index, ::google::protobuf::uint32 value);
  void add_closed_weather_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      closed_weather_area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_closed_weather_area_list();

  // repeated .proto.SceneClimateAreaInfoBin climate_area_info_list = 3;
  int climate_area_info_list_size() const;
  void clear_climate_area_info_list();
  static const int kClimateAreaInfoListFieldNumber = 3;
  const ::proto::SceneClimateAreaInfoBin& climate_area_info_list(int index) const;
  ::proto::SceneClimateAreaInfoBin* mutable_climate_area_info_list(int index);
  ::proto::SceneClimateAreaInfoBin* add_climate_area_info_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneClimateAreaInfoBin >*
      mutable_climate_area_info_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneClimateAreaInfoBin >&
      climate_area_info_list() const;

  // repeated uint32 closed_climate_area_list = 4;
  int closed_climate_area_list_size() const;
  void clear_closed_climate_area_list();
  static const int kClosedClimateAreaListFieldNumber = 4;
  ::google::protobuf::uint32 closed_climate_area_list(int index) const;
  void set_closed_climate_area_list(int index, ::google::protobuf::uint32 value);
  void add_closed_climate_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      closed_climate_area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_closed_climate_area_list();

  // @@protoc_insertion_point(class_scope:proto.SceneAllWeatherInfoBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneWeatherInfoBin > weather_info_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > closed_weather_area_list_;
  mutable int _closed_weather_area_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneClimateAreaInfoBin > climate_area_info_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > closed_climate_area_list_;
  mutable int _closed_climate_area_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class BackupGroupBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BackupGroupBin) */ {
 public:
  BackupGroupBin();
  virtual ~BackupGroupBin();

  BackupGroupBin(const BackupGroupBin& from);

  inline BackupGroupBin& operator=(const BackupGroupBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BackupGroupBin(BackupGroupBin&& from) noexcept
    : BackupGroupBin() {
    *this = ::std::move(from);
  }

  inline BackupGroupBin& operator=(BackupGroupBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BackupGroupBin& default_instance();

  static inline const BackupGroupBin* internal_default_instance() {
    return reinterpret_cast<const BackupGroupBin*>(
               &_BackupGroupBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(BackupGroupBin* other);
  friend void swap(BackupGroupBin& a, BackupGroupBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BackupGroupBin* New() const PROTOBUF_FINAL { return New(NULL); }

  BackupGroupBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackupGroupBin& from);
  void MergeFrom(const BackupGroupBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackupGroupBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 del_monster_list = 1;
  int del_monster_list_size() const;
  void clear_del_monster_list();
  static const int kDelMonsterListFieldNumber = 1;
  ::google::protobuf::uint32 del_monster_list(int index) const;
  void set_del_monster_list(int index, ::google::protobuf::uint32 value);
  void add_del_monster_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      del_monster_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_del_monster_list();

  // map<string, .proto.GroupVariableBin> variable_map = 2;
  int variable_map_size() const;
  void clear_variable_map();
  static const int kVariableMapFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >&
      variable_map() const;
  ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >*
      mutable_variable_map();

  // uint32 revise_level = 3;
  void clear_revise_level();
  static const int kReviseLevelFieldNumber = 3;
  ::google::protobuf::uint32 revise_level() const;
  void set_revise_level(::google::protobuf::uint32 value);

  // fixed32 last_refresh_time = 4;
  void clear_last_refresh_time();
  static const int kLastRefreshTimeFieldNumber = 4;
  ::google::protobuf::uint32 last_refresh_time() const;
  void set_last_refresh_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BackupGroupBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > del_monster_list_;
  mutable int _del_monster_list_cached_byte_size_;
  public:
  class BackupGroupBin_VariableMapEntry : public ::google::protobuf::internal::MapEntry<BackupGroupBin_VariableMapEntry, 
      ::std::string, ::proto::GroupVariableBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<BackupGroupBin_VariableMapEntry, 
      ::std::string, ::proto::GroupVariableBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    BackupGroupBin_VariableMapEntry();
    BackupGroupBin_VariableMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const BackupGroupBin_VariableMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_BackupGroupBin_VariableMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      BackupGroupBin_VariableMapEntry,
      ::std::string, ::proto::GroupVariableBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > variable_map_;
  private:
  ::google::protobuf::uint32 revise_level_;
  ::google::protobuf::uint32 last_refresh_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneBlockGroupCompBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneBlockGroupCompBin) */ {
 public:
  SceneBlockGroupCompBin();
  virtual ~SceneBlockGroupCompBin();

  SceneBlockGroupCompBin(const SceneBlockGroupCompBin& from);

  inline SceneBlockGroupCompBin& operator=(const SceneBlockGroupCompBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneBlockGroupCompBin(SceneBlockGroupCompBin&& from) noexcept
    : SceneBlockGroupCompBin() {
    *this = ::std::move(from);
  }

  inline SceneBlockGroupCompBin& operator=(SceneBlockGroupCompBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneBlockGroupCompBin& default_instance();

  static inline const SceneBlockGroupCompBin* internal_default_instance() {
    return reinterpret_cast<const SceneBlockGroupCompBin*>(
               &_SceneBlockGroupCompBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(SceneBlockGroupCompBin* other);
  friend void swap(SceneBlockGroupCompBin& a, SceneBlockGroupCompBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneBlockGroupCompBin* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneBlockGroupCompBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneBlockGroupCompBin& from);
  void MergeFrom(const SceneBlockGroupCompBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneBlockGroupCompBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 dead_group_list = 1;
  int dead_group_list_size() const;
  void clear_dead_group_list();
  static const int kDeadGroupListFieldNumber = 1;
  ::google::protobuf::uint32 dead_group_list(int index) const;
  void set_dead_group_list(int index, ::google::protobuf::uint32 value);
  void add_dead_group_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dead_group_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dead_group_list();

  // map<uint32, .proto.BackupGroupBin> backup_group_map = 2;
  int backup_group_map_size() const;
  void clear_backup_group_map();
  static const int kBackupGroupMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >&
      backup_group_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >*
      mutable_backup_group_map();

  // bool is_scene_group_all_dead = 3;
  void clear_is_scene_group_all_dead();
  static const int kIsSceneGroupAllDeadFieldNumber = 3;
  bool is_scene_group_all_dead() const;
  void set_is_scene_group_all_dead(bool value);

  // @@protoc_insertion_point(class_scope:proto.SceneBlockGroupCompBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dead_group_list_;
  mutable int _dead_group_list_cached_byte_size_;
  public:
  class SceneBlockGroupCompBin_BackupGroupMapEntry : public ::google::protobuf::internal::MapEntry<SceneBlockGroupCompBin_BackupGroupMapEntry, 
      ::google::protobuf::uint32, ::proto::BackupGroupBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneBlockGroupCompBin_BackupGroupMapEntry, 
      ::google::protobuf::uint32, ::proto::BackupGroupBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    SceneBlockGroupCompBin_BackupGroupMapEntry();
    SceneBlockGroupCompBin_BackupGroupMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneBlockGroupCompBin_BackupGroupMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneBlockGroupCompBin_BackupGroupMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneBlockGroupCompBin_BackupGroupMapEntry,
      ::google::protobuf::uint32, ::proto::BackupGroupBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > backup_group_map_;
  private:
  bool is_scene_group_all_dead_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class SceneAreaCompBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneAreaCompBin) */ {
 public:
  SceneAreaCompBin();
  virtual ~SceneAreaCompBin();

  SceneAreaCompBin(const SceneAreaCompBin& from);

  inline SceneAreaCompBin& operator=(const SceneAreaCompBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneAreaCompBin(SceneAreaCompBin&& from) noexcept
    : SceneAreaCompBin() {
    *this = ::std::move(from);
  }

  inline SceneAreaCompBin& operator=(SceneAreaCompBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneAreaCompBin& default_instance();

  static inline const SceneAreaCompBin* internal_default_instance() {
    return reinterpret_cast<const SceneAreaCompBin*>(
               &_SceneAreaCompBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(SceneAreaCompBin* other);
  friend void swap(SceneAreaCompBin& a, SceneAreaCompBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneAreaCompBin* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneAreaCompBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneAreaCompBin& from);
  void MergeFrom(const SceneAreaCompBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneAreaCompBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated uint32 unlocked_area_list = 1;
  int unlocked_area_list_size() const;
  void clear_unlocked_area_list();
  static const int kUnlockedAreaListFieldNumber = 1;
  ::google::protobuf::uint32 unlocked_area_list(int index) const;
  void set_unlocked_area_list(int index, ::google::protobuf::uint32 value);
  void add_unlocked_area_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlocked_area_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlocked_area_list();

  // map<uint32, .proto.AreaBin> area_map = 2;
  int area_map_size() const;
  void clear_area_map();
  static const int kAreaMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >&
      area_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >*
      mutable_area_map();

  // map<uint32, .proto.CityBin> city_map = 3;
  int city_map_size() const;
  void clear_city_map();
  static const int kCityMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >&
      city_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >*
      mutable_city_map();

  // @@protoc_insertion_point(class_scope:proto.SceneAreaCompBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlocked_area_list_;
  mutable int _unlocked_area_list_cached_byte_size_;
  public:
  class SceneAreaCompBin_AreaMapEntry : public ::google::protobuf::internal::MapEntry<SceneAreaCompBin_AreaMapEntry, 
      ::google::protobuf::uint32, ::proto::AreaBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneAreaCompBin_AreaMapEntry, 
      ::google::protobuf::uint32, ::proto::AreaBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    SceneAreaCompBin_AreaMapEntry();
    SceneAreaCompBin_AreaMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneAreaCompBin_AreaMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneAreaCompBin_AreaMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneAreaCompBin_AreaMapEntry,
      ::google::protobuf::uint32, ::proto::AreaBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > area_map_;
  private:
  public:
  class SceneAreaCompBin_CityMapEntry : public ::google::protobuf::internal::MapEntry<SceneAreaCompBin_CityMapEntry, 
      ::google::protobuf::uint32, ::proto::CityBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<SceneAreaCompBin_CityMapEntry, 
      ::google::protobuf::uint32, ::proto::CityBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    SceneAreaCompBin_CityMapEntry();
    SceneAreaCompBin_CityMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const SceneAreaCompBin_CityMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_SceneAreaCompBin_CityMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      SceneAreaCompBin_CityMapEntry,
      ::google::protobuf::uint32, ::proto::CityBin,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > city_map_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneEncounterCompBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneEncounterCompBin) */ {
 public:
  SceneEncounterCompBin();
  virtual ~SceneEncounterCompBin();

  SceneEncounterCompBin(const SceneEncounterCompBin& from);

  inline SceneEncounterCompBin& operator=(const SceneEncounterCompBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneEncounterCompBin(SceneEncounterCompBin&& from) noexcept
    : SceneEncounterCompBin() {
    *this = ::std::move(from);
  }

  inline SceneEncounterCompBin& operator=(SceneEncounterCompBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneEncounterCompBin& default_instance();

  static inline const SceneEncounterCompBin* internal_default_instance() {
    return reinterpret_cast<const SceneEncounterCompBin*>(
               &_SceneEncounterCompBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(SceneEncounterCompBin* other);
  friend void swap(SceneEncounterCompBin& a, SceneEncounterCompBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneEncounterCompBin* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneEncounterCompBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneEncounterCompBin& from);
  void MergeFrom(const SceneEncounterCompBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneEncounterCompBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 parent_quest_id_list = 1;
  int parent_quest_id_list_size() const;
  void clear_parent_quest_id_list();
  static const int kParentQuestIdListFieldNumber = 1;
  ::google::protobuf::uint32 parent_quest_id_list(int index) const;
  void set_parent_quest_id_list(int index, ::google::protobuf::uint32 value);
  void add_parent_quest_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      parent_quest_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_parent_quest_id_list();

  // @@protoc_insertion_point(class_scope:proto.SceneEncounterCompBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > parent_quest_id_list_;
  mutable int _parent_quest_id_list_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActivitySceneBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ActivitySceneBin) */ {
 public:
  ActivitySceneBin();
  virtual ~ActivitySceneBin();

  ActivitySceneBin(const ActivitySceneBin& from);

  inline ActivitySceneBin& operator=(const ActivitySceneBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ActivitySceneBin(ActivitySceneBin&& from) noexcept
    : ActivitySceneBin() {
    *this = ::std::move(from);
  }

  inline ActivitySceneBin& operator=(ActivitySceneBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivitySceneBin& default_instance();

  static inline const ActivitySceneBin* internal_default_instance() {
    return reinterpret_cast<const ActivitySceneBin*>(
               &_ActivitySceneBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(ActivitySceneBin* other);
  friend void swap(ActivitySceneBin& a, ActivitySceneBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ActivitySceneBin* New() const PROTOBUF_FINAL { return New(NULL); }

  ActivitySceneBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActivitySceneBin& from);
  void MergeFrom(const ActivitySceneBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActivitySceneBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_open = 1;
  void clear_is_open();
  static const int kIsOpenFieldNumber = 1;
  bool is_open() const;
  void set_is_open(bool value);

  // @@protoc_insertion_point(class_scope:proto.ActivitySceneBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_open_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneVehicleBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneVehicleBin) */ {
 public:
  SceneVehicleBin();
  virtual ~SceneVehicleBin();

  SceneVehicleBin(const SceneVehicleBin& from);

  inline SceneVehicleBin& operator=(const SceneVehicleBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneVehicleBin(SceneVehicleBin&& from) noexcept
    : SceneVehicleBin() {
    *this = ::std::move(from);
  }

  inline SceneVehicleBin& operator=(SceneVehicleBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneVehicleBin& default_instance();

  static inline const SceneVehicleBin* internal_default_instance() {
    return reinterpret_cast<const SceneVehicleBin*>(
               &_SceneVehicleBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(SceneVehicleBin* other);
  friend void swap(SceneVehicleBin& a, SceneVehicleBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneVehicleBin* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneVehicleBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneVehicleBin& from);
  void MergeFrom(const SceneVehicleBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneVehicleBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.VectorBin cur_pos = 2;
  bool has_cur_pos() const;
  void clear_cur_pos();
  static const int kCurPosFieldNumber = 2;
  const ::proto::VectorBin& cur_pos() const;
  ::proto::VectorBin* mutable_cur_pos();
  ::proto::VectorBin* release_cur_pos();
  void set_allocated_cur_pos(::proto::VectorBin* cur_pos);

  // .proto.VectorBin cur_rot = 3;
  bool has_cur_rot() const;
  void clear_cur_rot();
  static const int kCurRotFieldNumber = 3;
  const ::proto::VectorBin& cur_rot() const;
  ::proto::VectorBin* mutable_cur_rot();
  ::proto::VectorBin* release_cur_rot();
  void set_allocated_cur_rot(::proto::VectorBin* cur_rot);

  // uint32 config_id = 1;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 1;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SceneVehicleBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::VectorBin* cur_pos_;
  ::proto::VectorBin* cur_rot_;
  ::google::protobuf::uint32 config_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneTagOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneTagOp) */ {
 public:
  SceneTagOp();
  virtual ~SceneTagOp();

  SceneTagOp(const SceneTagOp& from);

  inline SceneTagOp& operator=(const SceneTagOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneTagOp(SceneTagOp&& from) noexcept
    : SceneTagOp() {
    *this = ::std::move(from);
  }

  inline SceneTagOp& operator=(SceneTagOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneTagOp& default_instance();

  static inline const SceneTagOp* internal_default_instance() {
    return reinterpret_cast<const SceneTagOp*>(
               &_SceneTagOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(SceneTagOp* other);
  friend void swap(SceneTagOp& a, SceneTagOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneTagOp* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneTagOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneTagOp& from);
  void MergeFrom(const SceneTagOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneTagOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // .proto.SceneTagOpType op_type = 2;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 2;
  ::proto::SceneTagOpType op_type() const;
  void set_op_type(::proto::SceneTagOpType value);

  // @@protoc_insertion_point(class_scope:proto.SceneTagOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  int op_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class WayPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.WayPoint) */ {
 public:
  WayPoint();
  virtual ~WayPoint();

  WayPoint(const WayPoint& from);

  inline WayPoint& operator=(const WayPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WayPoint(WayPoint&& from) noexcept
    : WayPoint() {
    *this = ::std::move(from);
  }

  inline WayPoint& operator=(WayPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WayPoint& default_instance();

  static inline const WayPoint* internal_default_instance() {
    return reinterpret_cast<const WayPoint*>(
               &_WayPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(WayPoint* other);
  friend void swap(WayPoint& a, WayPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WayPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  WayPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WayPoint& from);
  void MergeFrom(const WayPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WayPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 point_id = 1;
  void clear_point_id();
  static const int kPointIdFieldNumber = 1;
  ::google::protobuf::uint32 point_id() const;
  void set_point_id(::google::protobuf::uint32 value);

  // uint32 activate_time = 2;
  void clear_activate_time();
  static const int kActivateTimeFieldNumber = 2;
  ::google::protobuf::uint32 activate_time() const;
  void set_activate_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.WayPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 point_id_;
  ::google::protobuf::uint32 activate_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DungeonSceneBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.DungeonSceneBin) */ {
 public:
  DungeonSceneBin();
  virtual ~DungeonSceneBin();

  DungeonSceneBin(const DungeonSceneBin& from);

  inline DungeonSceneBin& operator=(const DungeonSceneBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DungeonSceneBin(DungeonSceneBin&& from) noexcept
    : DungeonSceneBin() {
    *this = ::std::move(from);
  }

  inline DungeonSceneBin& operator=(DungeonSceneBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonSceneBin& default_instance();

  static inline const DungeonSceneBin* internal_default_instance() {
    return reinterpret_cast<const DungeonSceneBin*>(
               &_DungeonSceneBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(DungeonSceneBin* other);
  friend void swap(DungeonSceneBin& a, DungeonSceneBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DungeonSceneBin* New() const PROTOBUF_FINAL { return New(NULL); }

  DungeonSceneBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DungeonSceneBin& from);
  void MergeFrom(const DungeonSceneBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DungeonSceneBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.WayPoint activated_way_point_list = 1;
  int activated_way_point_list_size() const;
  void clear_activated_way_point_list();
  static const int kActivatedWayPointListFieldNumber = 1;
  const ::proto::WayPoint& activated_way_point_list(int index) const;
  ::proto::WayPoint* mutable_activated_way_point_list(int index);
  ::proto::WayPoint* add_activated_way_point_list();
  ::google::protobuf::RepeatedPtrField< ::proto::WayPoint >*
      mutable_activated_way_point_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::WayPoint >&
      activated_way_point_list() const;

  // repeated .proto.WayPoint activated_slip_revive_list = 2;
  int activated_slip_revive_list_size() const;
  void clear_activated_slip_revive_list();
  static const int kActivatedSlipReviveListFieldNumber = 2;
  const ::proto::WayPoint& activated_slip_revive_list(int index) const;
  ::proto::WayPoint* mutable_activated_slip_revive_list(int index);
  ::proto::WayPoint* add_activated_slip_revive_list();
  ::google::protobuf::RepeatedPtrField< ::proto::WayPoint >*
      mutable_activated_slip_revive_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::WayPoint >&
      activated_slip_revive_list() const;

  // @@protoc_insertion_point(class_scope:proto.DungeonSceneBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::WayPoint > activated_way_point_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::WayPoint > activated_slip_revive_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SceneBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SceneBin) */ {
 public:
  SceneBin();
  virtual ~SceneBin();

  SceneBin(const SceneBin& from);

  inline SceneBin& operator=(const SceneBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneBin(SceneBin&& from) noexcept
    : SceneBin() {
    *this = ::std::move(from);
  }

  inline SceneBin& operator=(SceneBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneBin& default_instance();

  enum DetailCase {
    kActivitySceneBin = 101,
    kDungeonSceneBin = 102,
    DETAIL_NOT_SET = 0,
  };

  static inline const SceneBin* internal_default_instance() {
    return reinterpret_cast<const SceneBin*>(
               &_SceneBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(SceneBin* other);
  friend void swap(SceneBin& a, SceneBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneBin* New() const PROTOBUF_FINAL { return New(NULL); }

  SceneBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneBin& from);
  void MergeFrom(const SceneBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 unlocked_point_list = 1;
  int unlocked_point_list_size() const;
  void clear_unlocked_point_list();
  static const int kUnlockedPointListFieldNumber = 1;
  ::google::protobuf::uint32 unlocked_point_list(int index) const;
  void set_unlocked_point_list(int index, ::google::protobuf::uint32 value);
  void add_unlocked_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlocked_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlocked_point_list();

  // repeated uint32 unlocked_force_list = 2;
  int unlocked_force_list_size() const;
  void clear_unlocked_force_list();
  static const int kUnlockedForceListFieldNumber = 2;
  ::google::protobuf::uint32 unlocked_force_list(int index) const;
  void set_unlocked_force_list(int index, ::google::protobuf::uint32 value);
  void add_unlocked_force_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unlocked_force_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unlocked_force_list();

  // repeated uint32 locked_point_list = 3;
  int locked_point_list_size() const;
  void clear_locked_point_list();
  static const int kLockedPointListFieldNumber = 3;
  ::google::protobuf::uint32 locked_point_list(int index) const;
  void set_locked_point_list(int index, ::google::protobuf::uint32 value);
  void add_locked_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      locked_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_locked_point_list();

  // repeated uint32 group_unlimit_point_list = 11;
  int group_unlimit_point_list_size() const;
  void clear_group_unlimit_point_list();
  static const int kGroupUnlimitPointListFieldNumber = 11;
  ::google::protobuf::uint32 group_unlimit_point_list(int index) const;
  void set_group_unlimit_point_list(int index, ::google::protobuf::uint32 value);
  void add_group_unlimit_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      group_unlimit_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_group_unlimit_point_list();

  // repeated uint32 interacted_to_be_explored_point_list = 12;
  int interacted_to_be_explored_point_list_size() const;
  void clear_interacted_to_be_explored_point_list();
  static const int kInteractedToBeExploredPointListFieldNumber = 12;
  ::google::protobuf::uint32 interacted_to_be_explored_point_list(int index) const;
  void set_interacted_to_be_explored_point_list(int index, ::google::protobuf::uint32 value);
  void add_interacted_to_be_explored_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      interacted_to_be_explored_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_interacted_to_be_explored_point_list();

  // repeated .proto.SceneVehicleBin vehicle_list = 15;
  int vehicle_list_size() const;
  void clear_vehicle_list();
  static const int kVehicleListFieldNumber = 15;
  const ::proto::SceneVehicleBin& vehicle_list(int index) const;
  ::proto::SceneVehicleBin* mutable_vehicle_list(int index);
  ::proto::SceneVehicleBin* add_vehicle_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneVehicleBin >*
      mutable_vehicle_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneVehicleBin >&
      vehicle_list() const;

  // repeated .proto.SceneTagOp scene_tag_op_list = 16;
  int scene_tag_op_list_size() const;
  void clear_scene_tag_op_list();
  static const int kSceneTagOpListFieldNumber = 16;
  const ::proto::SceneTagOp& scene_tag_op_list(int index) const;
  ::proto::SceneTagOp* mutable_scene_tag_op_list(int index);
  ::proto::SceneTagOp* add_scene_tag_op_list();
  ::google::protobuf::RepeatedPtrField< ::proto::SceneTagOp >*
      mutable_scene_tag_op_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::SceneTagOp >&
      scene_tag_op_list() const;

  // repeated uint32 hide_point_list = 17;
  int hide_point_list_size() const;
  void clear_hide_point_list();
  static const int kHidePointListFieldNumber = 17;
  ::google::protobuf::uint32 hide_point_list(int index) const;
  void set_hide_point_list(int index, ::google::protobuf::uint32 value);
  void add_hide_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hide_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hide_point_list();

  // repeated uint32 unhide_point_list = 18;
  int unhide_point_list_size() const;
  void clear_unhide_point_list();
  static const int kUnhidePointListFieldNumber = 18;
  ::google::protobuf::uint32 unhide_point_list(int index) const;
  void set_unhide_point_list(int index, ::google::protobuf::uint32 value);
  void add_unhide_point_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unhide_point_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unhide_point_list();

  // .proto.SceneAllWeatherInfoBin all_weather_info = 4;
  bool has_all_weather_info() const;
  void clear_all_weather_info();
  static const int kAllWeatherInfoFieldNumber = 4;
  const ::proto::SceneAllWeatherInfoBin& all_weather_info() const;
  ::proto::SceneAllWeatherInfoBin* mutable_all_weather_info();
  ::proto::SceneAllWeatherInfoBin* release_all_weather_info();
  void set_allocated_all_weather_info(::proto::SceneAllWeatherInfoBin* all_weather_info);

  // .proto.ScenePlayerLocationBin owner_player_location = 5;
  bool has_owner_player_location() const;
  void clear_owner_player_location();
  static const int kOwnerPlayerLocationFieldNumber = 5;
  const ::proto::ScenePlayerLocationBin& owner_player_location() const;
  ::proto::ScenePlayerLocationBin* mutable_owner_player_location();
  ::proto::ScenePlayerLocationBin* release_owner_player_location();
  void set_allocated_owner_player_location(::proto::ScenePlayerLocationBin* owner_player_location);

  // .proto.SceneBlockGroupCompBin block_group_bin = 6;
  bool has_block_group_bin() const;
  void clear_block_group_bin();
  static const int kBlockGroupBinFieldNumber = 6;
  const ::proto::SceneBlockGroupCompBin& block_group_bin() const;
  ::proto::SceneBlockGroupCompBin* mutable_block_group_bin();
  ::proto::SceneBlockGroupCompBin* release_block_group_bin();
  void set_allocated_block_group_bin(::proto::SceneBlockGroupCompBin* block_group_bin);

  // .proto.SceneEnvAnimalCompBin env_animal_bin = 7;
  bool has_env_animal_bin() const;
  void clear_env_animal_bin();
  static const int kEnvAnimalBinFieldNumber = 7;
  const ::proto::SceneEnvAnimalCompBin& env_animal_bin() const;
  ::proto::SceneEnvAnimalCompBin* mutable_env_animal_bin();
  ::proto::SceneEnvAnimalCompBin* release_env_animal_bin();
  void set_allocated_env_animal_bin(::proto::SceneEnvAnimalCompBin* env_animal_bin);

  // .proto.SceneAreaCompBin area_comp_bin = 8;
  bool has_area_comp_bin() const;
  void clear_area_comp_bin();
  static const int kAreaCompBinFieldNumber = 8;
  const ::proto::SceneAreaCompBin& area_comp_bin() const;
  ::proto::SceneAreaCompBin* mutable_area_comp_bin();
  ::proto::SceneAreaCompBin* release_area_comp_bin();
  void set_allocated_area_comp_bin(::proto::SceneAreaCompBin* area_comp_bin);

  // .proto.SceneEncounterCompBin encounter_comp_bin = 9;
  bool has_encounter_comp_bin() const;
  void clear_encounter_comp_bin();
  static const int kEncounterCompBinFieldNumber = 9;
  const ::proto::SceneEncounterCompBin& encounter_comp_bin() const;
  ::proto::SceneEncounterCompBin* mutable_encounter_comp_bin();
  ::proto::SceneEncounterCompBin* release_encounter_comp_bin();
  void set_allocated_encounter_comp_bin(::proto::SceneEncounterCompBin* encounter_comp_bin);

  // uint64 last_spring_recover_time_ms = 10;
  void clear_last_spring_recover_time_ms();
  static const int kLastSpringRecoverTimeMsFieldNumber = 10;
  ::google::protobuf::uint64 last_spring_recover_time_ms() const;
  void set_last_spring_recover_time_ms(::google::protobuf::uint64 value);

  // float cur_spring_volume = 13;
  void clear_cur_spring_volume();
  static const int kCurSpringVolumeFieldNumber = 13;
  float cur_spring_volume() const;
  void set_cur_spring_volume(float value);

  // bool is_locked = 14;
  void clear_is_locked();
  static const int kIsLockedFieldNumber = 14;
  bool is_locked() const;
  void set_is_locked(bool value);

  // .proto.ActivitySceneBin activity_scene_bin = 101;
  bool has_activity_scene_bin() const;
  void clear_activity_scene_bin();
  static const int kActivitySceneBinFieldNumber = 101;
  const ::proto::ActivitySceneBin& activity_scene_bin() const;
  ::proto::ActivitySceneBin* mutable_activity_scene_bin();
  ::proto::ActivitySceneBin* release_activity_scene_bin();
  void set_allocated_activity_scene_bin(::proto::ActivitySceneBin* activity_scene_bin);

  // .proto.DungeonSceneBin dungeon_scene_bin = 102;
  bool has_dungeon_scene_bin() const;
  void clear_dungeon_scene_bin();
  static const int kDungeonSceneBinFieldNumber = 102;
  const ::proto::DungeonSceneBin& dungeon_scene_bin() const;
  ::proto::DungeonSceneBin* mutable_dungeon_scene_bin();
  ::proto::DungeonSceneBin* release_dungeon_scene_bin();
  void set_allocated_dungeon_scene_bin(::proto::DungeonSceneBin* dungeon_scene_bin);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.SceneBin)
 private:
  void set_has_activity_scene_bin();
  void set_has_dungeon_scene_bin();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlocked_point_list_;
  mutable int _unlocked_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unlocked_force_list_;
  mutable int _unlocked_force_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > locked_point_list_;
  mutable int _locked_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > group_unlimit_point_list_;
  mutable int _group_unlimit_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > interacted_to_be_explored_point_list_;
  mutable int _interacted_to_be_explored_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneVehicleBin > vehicle_list_;
  ::google::protobuf::RepeatedPtrField< ::proto::SceneTagOp > scene_tag_op_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hide_point_list_;
  mutable int _hide_point_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unhide_point_list_;
  mutable int _unhide_point_list_cached_byte_size_;
  ::proto::SceneAllWeatherInfoBin* all_weather_info_;
  ::proto::ScenePlayerLocationBin* owner_player_location_;
  ::proto::SceneBlockGroupCompBin* block_group_bin_;
  ::proto::SceneEnvAnimalCompBin* env_animal_bin_;
  ::proto::SceneAreaCompBin* area_comp_bin_;
  ::proto::SceneEncounterCompBin* encounter_comp_bin_;
  ::google::protobuf::uint64 last_spring_recover_time_ms_;
  float cur_spring_volume_;
  bool is_locked_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::ActivitySceneBin* activity_scene_bin_;
    ::proto::DungeonSceneBin* dungeon_scene_bin_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GCGSettleData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GCGSettleData) */ {
 public:
  GCGSettleData();
  virtual ~GCGSettleData();

  GCGSettleData(const GCGSettleData& from);

  inline GCGSettleData& operator=(const GCGSettleData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GCGSettleData(GCGSettleData&& from) noexcept
    : GCGSettleData() {
    *this = ::std::move(from);
  }

  inline GCGSettleData& operator=(GCGSettleData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GCGSettleData& default_instance();

  static inline const GCGSettleData* internal_default_instance() {
    return reinterpret_cast<const GCGSettleData*>(
               &_GCGSettleData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    132;

  void Swap(GCGSettleData* other);
  friend void swap(GCGSettleData& a, GCGSettleData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GCGSettleData* New() const PROTOBUF_FINAL { return New(NULL); }

  GCGSettleData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GCGSettleData& from);
  void MergeFrom(const GCGSettleData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GCGSettleData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> uid_map = 8;
  int uid_map_size() const;
  void clear_uid_map();
  static const int kUidMapFieldNumber = 8;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      uid_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_uid_map();

  // map<uint32, uint32> challenge_progress_map = 10;
  int challenge_progress_map_size() const;
  void clear_challenge_progress_map();
  static const int kChallengeProgressMapFieldNumber = 10;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      challenge_progress_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_challenge_progress_map();

  // repeated uint32 card_id_list = 11;
  int card_id_list_size() const;
  void clear_card_id_list();
  static const int kCardIdListFieldNumber = 11;
  ::google::protobuf::uint32 card_id_list(int index) const;
  void set_card_id_list(int index, ::google::protobuf::uint32 value);
  void add_card_id_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      card_id_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_card_id_list();

  // map<uint32, uint32> score_map = 13;
  int score_map_size() const;
  void clear_score_map();
  static const int kScoreMapFieldNumber = 13;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      score_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_score_map();

  // repeated uint32 custom_param_list = 15;
  int custom_param_list_size() const;
  void clear_custom_param_list();
  static const int kCustomParamListFieldNumber = 15;
  ::google::protobuf::uint32 custom_param_list(int index) const;
  void set_custom_param_list(int index, ::google::protobuf::uint32 value);
  void add_custom_param_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      custom_param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_custom_param_list();

  // repeated uint32 forbid_finish_challenge_list = 16;
  int forbid_finish_challenge_list_size() const;
  void clear_forbid_finish_challenge_list();
  static const int kForbidFinishChallengeListFieldNumber = 16;
  ::google::protobuf::uint32 forbid_finish_challenge_list(int index) const;
  void set_forbid_finish_challenge_list(int index, ::google::protobuf::uint32 value);
  void add_forbid_finish_challenge_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      forbid_finish_challenge_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_forbid_finish_challenge_list();

  // uint32 app_id = 1;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // uint32 thread_index = 2;
  void clear_thread_index();
  static const int kThreadIndexFieldNumber = 2;
  ::google::protobuf::uint32 thread_index() const;
  void set_thread_index(::google::protobuf::uint32 value);

  // uint32 game_id = 3;
  void clear_game_id();
  static const int kGameIdFieldNumber = 3;
  ::google::protobuf::uint32 game_id() const;
  void set_game_id(::google::protobuf::uint32 value);

  // uint32 game_uid = 4;
  void clear_game_uid();
  static const int kGameUidFieldNumber = 4;
  ::google::protobuf::uint32 game_uid() const;
  void set_game_uid(::google::protobuf::uint32 value);

  // uint32 verify_code = 5;
  void clear_verify_code();
  static const int kVerifyCodeFieldNumber = 5;
  ::google::protobuf::uint32 verify_code() const;
  void set_verify_code(::google::protobuf::uint32 value);

  // uint32 reason = 6;
  void clear_reason();
  static const int kReasonFieldNumber = 6;
  ::google::protobuf::uint32 reason() const;
  void set_reason(::google::protobuf::uint32 value);

  // uint32 business_type = 7;
  void clear_business_type();
  static const int kBusinessTypeFieldNumber = 7;
  ::google::protobuf::uint32 business_type() const;
  void set_business_type(::google::protobuf::uint32 value);

  // uint32 winner_controller = 9;
  void clear_winner_controller();
  static const int kWinnerControllerFieldNumber = 9;
  ::google::protobuf::uint32 winner_controller() const;
  void set_winner_controller(::google::protobuf::uint32 value);

  // uint32 card_group_id = 12;
  void clear_card_group_id();
  static const int kCardGroupIdFieldNumber = 12;
  ::google::protobuf::uint32 card_group_id() const;
  void set_card_group_id(::google::protobuf::uint32 value);

  // uint32 match_id = 14;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 14;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GCGSettleData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GCGSettleData_UidMapEntry : public ::google::protobuf::internal::MapEntry<GCGSettleData_UidMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GCGSettleData_UidMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GCGSettleData_UidMapEntry();
    GCGSettleData_UidMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GCGSettleData_UidMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GCGSettleData_UidMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GCGSettleData_UidMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > uid_map_;
  private:
  public:
  class GCGSettleData_ChallengeProgressMapEntry : public ::google::protobuf::internal::MapEntry<GCGSettleData_ChallengeProgressMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GCGSettleData_ChallengeProgressMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GCGSettleData_ChallengeProgressMapEntry();
    GCGSettleData_ChallengeProgressMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GCGSettleData_ChallengeProgressMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GCGSettleData_ChallengeProgressMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GCGSettleData_ChallengeProgressMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > challenge_progress_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > card_id_list_;
  mutable int _card_id_list_cached_byte_size_;
  public:
  class GCGSettleData_ScoreMapEntry : public ::google::protobuf::internal::MapEntry<GCGSettleData_ScoreMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GCGSettleData_ScoreMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GCGSettleData_ScoreMapEntry();
    GCGSettleData_ScoreMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GCGSettleData_ScoreMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GCGSettleData_ScoreMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GCGSettleData_ScoreMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > score_map_;
  private:
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > custom_param_list_;
  mutable int _custom_param_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > forbid_finish_challenge_list_;
  mutable int _forbid_finish_challenge_list_cached_byte_size_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 thread_index_;
  ::google::protobuf::uint32 game_id_;
  ::google::protobuf::uint32 game_uid_;
  ::google::protobuf::uint32 verify_code_;
  ::google::protobuf::uint32 reason_;
  ::google::protobuf::uint32 business_type_;
  ::google::protobuf::uint32 winner_controller_;
  ::google::protobuf::uint32 card_group_id_;
  ::google::protobuf::uint32 match_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineOpTestOp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineOpTestOp) */ {
 public:
  OfflineOpTestOp();
  virtual ~OfflineOpTestOp();

  OfflineOpTestOp(const OfflineOpTestOp& from);

  inline OfflineOpTestOp& operator=(const OfflineOpTestOp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineOpTestOp(OfflineOpTestOp&& from) noexcept
    : OfflineOpTestOp() {
    *this = ::std::move(from);
  }

  inline OfflineOpTestOp& operator=(OfflineOpTestOp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineOpTestOp& default_instance();

  static inline const OfflineOpTestOp* internal_default_instance() {
    return reinterpret_cast<const OfflineOpTestOp*>(
               &_OfflineOpTestOp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    133;

  void Swap(OfflineOpTestOp* other);
  friend void swap(OfflineOpTestOp& a, OfflineOpTestOp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineOpTestOp* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineOpTestOp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineOpTestOp& from);
  void MergeFrom(const OfflineOpTestOp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineOpTestOp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:proto.OfflineOpTestOp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineOpFurnitureMakeHelp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineOpFurnitureMakeHelp) */ {
 public:
  OfflineOpFurnitureMakeHelp();
  virtual ~OfflineOpFurnitureMakeHelp();

  OfflineOpFurnitureMakeHelp(const OfflineOpFurnitureMakeHelp& from);

  inline OfflineOpFurnitureMakeHelp& operator=(const OfflineOpFurnitureMakeHelp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineOpFurnitureMakeHelp(OfflineOpFurnitureMakeHelp&& from) noexcept
    : OfflineOpFurnitureMakeHelp() {
    *this = ::std::move(from);
  }

  inline OfflineOpFurnitureMakeHelp& operator=(OfflineOpFurnitureMakeHelp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineOpFurnitureMakeHelp& default_instance();

  static inline const OfflineOpFurnitureMakeHelp* internal_default_instance() {
    return reinterpret_cast<const OfflineOpFurnitureMakeHelp*>(
               &_OfflineOpFurnitureMakeHelp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(OfflineOpFurnitureMakeHelp* other);
  friend void swap(OfflineOpFurnitureMakeHelp& a, OfflineOpFurnitureMakeHelp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineOpFurnitureMakeHelp* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineOpFurnitureMakeHelp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineOpFurnitureMakeHelp& from);
  void MergeFrom(const OfflineOpFurnitureMakeHelp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineOpFurnitureMakeHelp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string player_name = 1;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 1;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // .proto.ProfilePictureBin profile_picture_bin = 5;
  bool has_profile_picture_bin() const;
  void clear_profile_picture_bin();
  static const int kProfilePictureBinFieldNumber = 5;
  const ::proto::ProfilePictureBin& profile_picture_bin() const;
  ::proto::ProfilePictureBin* mutable_profile_picture_bin();
  ::proto::ProfilePictureBin* release_profile_picture_bin();
  void set_allocated_profile_picture_bin(::proto::ProfilePictureBin* profile_picture_bin);

  // fixed32 time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // uint32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 icon = 4;
  void clear_icon();
  static const int kIconFieldNumber = 4;
  ::google::protobuf::uint32 icon() const;
  void set_icon(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OfflineOpFurnitureMakeHelp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::proto::ProfilePictureBin* profile_picture_bin_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 icon_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class OfflineOpPlantFlowerActivityGiveFlower : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineOpPlantFlowerActivityGiveFlower) */ {
 public:
  OfflineOpPlantFlowerActivityGiveFlower();
  virtual ~OfflineOpPlantFlowerActivityGiveFlower();

  OfflineOpPlantFlowerActivityGiveFlower(const OfflineOpPlantFlowerActivityGiveFlower& from);

  inline OfflineOpPlantFlowerActivityGiveFlower& operator=(const OfflineOpPlantFlowerActivityGiveFlower& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineOpPlantFlowerActivityGiveFlower(OfflineOpPlantFlowerActivityGiveFlower&& from) noexcept
    : OfflineOpPlantFlowerActivityGiveFlower() {
    *this = ::std::move(from);
  }

  inline OfflineOpPlantFlowerActivityGiveFlower& operator=(OfflineOpPlantFlowerActivityGiveFlower&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineOpPlantFlowerActivityGiveFlower& default_instance();

  static inline const OfflineOpPlantFlowerActivityGiveFlower* internal_default_instance() {
    return reinterpret_cast<const OfflineOpPlantFlowerActivityGiveFlower*>(
               &_OfflineOpPlantFlowerActivityGiveFlower_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    136;

  void Swap(OfflineOpPlantFlowerActivityGiveFlower* other);
  friend void swap(OfflineOpPlantFlowerActivityGiveFlower& a, OfflineOpPlantFlowerActivityGiveFlower& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineOpPlantFlowerActivityGiveFlower* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineOpPlantFlowerActivityGiveFlower* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineOpPlantFlowerActivityGiveFlower& from);
  void MergeFrom(const OfflineOpPlantFlowerActivityGiveFlower& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineOpPlantFlowerActivityGiveFlower* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> flower_num_map = 2;
  int flower_num_map_size() const;
  void clear_flower_num_map();
  static const int kFlowerNumMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      flower_num_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_flower_num_map();

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 schedule_id = 3;
  void clear_schedule_id();
  static const int kScheduleIdFieldNumber = 3;
  ::google::protobuf::uint32 schedule_id() const;
  void set_schedule_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OfflineOpPlantFlowerActivityGiveFlower)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry : public ::google::protobuf::internal::MapEntry<OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry();
    OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      OfflineOpPlantFlowerActivityGiveFlower_FlowerNumMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > flower_num_map_;
  private:
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 schedule_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineOpWinterCampActivityGiveItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineOpWinterCampActivityGiveItem) */ {
 public:
  OfflineOpWinterCampActivityGiveItem();
  virtual ~OfflineOpWinterCampActivityGiveItem();

  OfflineOpWinterCampActivityGiveItem(const OfflineOpWinterCampActivityGiveItem& from);

  inline OfflineOpWinterCampActivityGiveItem& operator=(const OfflineOpWinterCampActivityGiveItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineOpWinterCampActivityGiveItem(OfflineOpWinterCampActivityGiveItem&& from) noexcept
    : OfflineOpWinterCampActivityGiveItem() {
    *this = ::std::move(from);
  }

  inline OfflineOpWinterCampActivityGiveItem& operator=(OfflineOpWinterCampActivityGiveItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineOpWinterCampActivityGiveItem& default_instance();

  static inline const OfflineOpWinterCampActivityGiveItem* internal_default_instance() {
    return reinterpret_cast<const OfflineOpWinterCampActivityGiveItem*>(
               &_OfflineOpWinterCampActivityGiveItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    137;

  void Swap(OfflineOpWinterCampActivityGiveItem* other);
  friend void swap(OfflineOpWinterCampActivityGiveItem& a, OfflineOpWinterCampActivityGiveItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineOpWinterCampActivityGiveItem* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineOpWinterCampActivityGiveItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineOpWinterCampActivityGiveItem& from);
  void MergeFrom(const OfflineOpWinterCampActivityGiveItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineOpWinterCampActivityGiveItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.ItemParamBin item_bin_list = 2;
  int item_bin_list_size() const;
  void clear_item_bin_list();
  static const int kItemBinListFieldNumber = 2;
  const ::proto::ItemParamBin& item_bin_list(int index) const;
  ::proto::ItemParamBin* mutable_item_bin_list(int index);
  ::proto::ItemParamBin* add_item_bin_list();
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin >*
      mutable_item_bin_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin >&
      item_bin_list() const;

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 schedule_id = 3;
  void clear_schedule_id();
  static const int kScheduleIdFieldNumber = 3;
  ::google::protobuf::uint32 schedule_id() const;
  void set_schedule_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OfflineOpWinterCampActivityGiveItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin > item_bin_list_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 schedule_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineOpGCGSettle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineOpGCGSettle) */ {
 public:
  OfflineOpGCGSettle();
  virtual ~OfflineOpGCGSettle();

  OfflineOpGCGSettle(const OfflineOpGCGSettle& from);

  inline OfflineOpGCGSettle& operator=(const OfflineOpGCGSettle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineOpGCGSettle(OfflineOpGCGSettle&& from) noexcept
    : OfflineOpGCGSettle() {
    *this = ::std::move(from);
  }

  inline OfflineOpGCGSettle& operator=(OfflineOpGCGSettle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineOpGCGSettle& default_instance();

  static inline const OfflineOpGCGSettle* internal_default_instance() {
    return reinterpret_cast<const OfflineOpGCGSettle*>(
               &_OfflineOpGCGSettle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    138;

  void Swap(OfflineOpGCGSettle* other);
  friend void swap(OfflineOpGCGSettle& a, OfflineOpGCGSettle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineOpGCGSettle* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineOpGCGSettle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineOpGCGSettle& from);
  void MergeFrom(const OfflineOpGCGSettle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineOpGCGSettle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.GCGSettleData settle_data = 1;
  bool has_settle_data() const;
  void clear_settle_data();
  static const int kSettleDataFieldNumber = 1;
  const ::proto::GCGSettleData& settle_data() const;
  ::proto::GCGSettleData* mutable_settle_data();
  ::proto::GCGSettleData* release_settle_data();
  void set_allocated_settle_data(::proto::GCGSettleData* settle_data);

  // @@protoc_insertion_point(class_scope:proto.OfflineOpGCGSettle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::GCGSettleData* settle_data_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class OfflineOpActivityGiveGift : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineOpActivityGiveGift) */ {
 public:
  OfflineOpActivityGiveGift();
  virtual ~OfflineOpActivityGiveGift();

  OfflineOpActivityGiveGift(const OfflineOpActivityGiveGift& from);

  inline OfflineOpActivityGiveGift& operator=(const OfflineOpActivityGiveGift& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineOpActivityGiveGift(OfflineOpActivityGiveGift&& from) noexcept
    : OfflineOpActivityGiveGift() {
    *this = ::std::move(from);
  }

  inline OfflineOpActivityGiveGift& operator=(OfflineOpActivityGiveGift&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineOpActivityGiveGift& default_instance();

  static inline const OfflineOpActivityGiveGift* internal_default_instance() {
    return reinterpret_cast<const OfflineOpActivityGiveGift*>(
               &_OfflineOpActivityGiveGift_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(OfflineOpActivityGiveGift* other);
  friend void swap(OfflineOpActivityGiveGift& a, OfflineOpActivityGiveGift& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineOpActivityGiveGift* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineOpActivityGiveGift* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineOpActivityGiveGift& from);
  void MergeFrom(const OfflineOpActivityGiveGift& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineOpActivityGiveGift* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> gift_num_map = 2;
  int gift_num_map_size() const;
  void clear_gift_num_map();
  static const int kGiftNumMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      gift_num_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_gift_num_map();

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 schedule_id = 3;
  void clear_schedule_id();
  static const int kScheduleIdFieldNumber = 3;
  ::google::protobuf::uint32 schedule_id() const;
  void set_schedule_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OfflineOpActivityGiveGift)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class OfflineOpActivityGiveGift_GiftNumMapEntry : public ::google::protobuf::internal::MapEntry<OfflineOpActivityGiveGift_GiftNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<OfflineOpActivityGiveGift_GiftNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    OfflineOpActivityGiveGift_GiftNumMapEntry();
    OfflineOpActivityGiveGift_GiftNumMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const OfflineOpActivityGiveGift_GiftNumMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_OfflineOpActivityGiveGift_GiftNumMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      OfflineOpActivityGiveGift_GiftNumMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > gift_num_map_;
  private:
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 schedule_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineOpVintageActivityDividend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineOpVintageActivityDividend) */ {
 public:
  OfflineOpVintageActivityDividend();
  virtual ~OfflineOpVintageActivityDividend();

  OfflineOpVintageActivityDividend(const OfflineOpVintageActivityDividend& from);

  inline OfflineOpVintageActivityDividend& operator=(const OfflineOpVintageActivityDividend& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineOpVintageActivityDividend(OfflineOpVintageActivityDividend&& from) noexcept
    : OfflineOpVintageActivityDividend() {
    *this = ::std::move(from);
  }

  inline OfflineOpVintageActivityDividend& operator=(OfflineOpVintageActivityDividend&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineOpVintageActivityDividend& default_instance();

  static inline const OfflineOpVintageActivityDividend* internal_default_instance() {
    return reinterpret_cast<const OfflineOpVintageActivityDividend*>(
               &_OfflineOpVintageActivityDividend_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    141;

  void Swap(OfflineOpVintageActivityDividend* other);
  friend void swap(OfflineOpVintageActivityDividend& a, OfflineOpVintageActivityDividend& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineOpVintageActivityDividend* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineOpVintageActivityDividend* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineOpVintageActivityDividend& from);
  void MergeFrom(const OfflineOpVintageActivityDividend& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineOpVintageActivityDividend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 schedule_id = 2;
  void clear_schedule_id();
  static const int kScheduleIdFieldNumber = 2;
  ::google::protobuf::uint32 schedule_id() const;
  void set_schedule_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OfflineOpVintageActivityDividend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 schedule_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineOpBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OfflineOpBin) */ {
 public:
  OfflineOpBin();
  virtual ~OfflineOpBin();

  OfflineOpBin(const OfflineOpBin& from);

  inline OfflineOpBin& operator=(const OfflineOpBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OfflineOpBin(OfflineOpBin&& from) noexcept
    : OfflineOpBin() {
    *this = ::std::move(from);
  }

  inline OfflineOpBin& operator=(OfflineOpBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineOpBin& default_instance();

  enum DetailCase {
    kTestOp = 1,
    kFurnitureMakeHelpOp = 2,
    kPlantFlowerGiveFlowerOp = 3,
    kWinterCampGiveItemOp = 4,
    kActivityGiveGiftOp = 5,
    kVintageDividendOp = 6,
    kGcgSettleOp = 7,
    DETAIL_NOT_SET = 0,
  };

  static inline const OfflineOpBin* internal_default_instance() {
    return reinterpret_cast<const OfflineOpBin*>(
               &_OfflineOpBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    142;

  void Swap(OfflineOpBin* other);
  friend void swap(OfflineOpBin& a, OfflineOpBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OfflineOpBin* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineOpBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineOpBin& from);
  void MergeFrom(const OfflineOpBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineOpBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .proto.OfflineOpTestOp test_op = 1;
  bool has_test_op() const;
  void clear_test_op();
  static const int kTestOpFieldNumber = 1;
  const ::proto::OfflineOpTestOp& test_op() const;
  ::proto::OfflineOpTestOp* mutable_test_op();
  ::proto::OfflineOpTestOp* release_test_op();
  void set_allocated_test_op(::proto::OfflineOpTestOp* test_op);

  // .proto.OfflineOpFurnitureMakeHelp furniture_make_help_op = 2;
  bool has_furniture_make_help_op() const;
  void clear_furniture_make_help_op();
  static const int kFurnitureMakeHelpOpFieldNumber = 2;
  const ::proto::OfflineOpFurnitureMakeHelp& furniture_make_help_op() const;
  ::proto::OfflineOpFurnitureMakeHelp* mutable_furniture_make_help_op();
  ::proto::OfflineOpFurnitureMakeHelp* release_furniture_make_help_op();
  void set_allocated_furniture_make_help_op(::proto::OfflineOpFurnitureMakeHelp* furniture_make_help_op);

  // .proto.OfflineOpPlantFlowerActivityGiveFlower plant_flower_give_flower_op = 3;
  bool has_plant_flower_give_flower_op() const;
  void clear_plant_flower_give_flower_op();
  static const int kPlantFlowerGiveFlowerOpFieldNumber = 3;
  const ::proto::OfflineOpPlantFlowerActivityGiveFlower& plant_flower_give_flower_op() const;
  ::proto::OfflineOpPlantFlowerActivityGiveFlower* mutable_plant_flower_give_flower_op();
  ::proto::OfflineOpPlantFlowerActivityGiveFlower* release_plant_flower_give_flower_op();
  void set_allocated_plant_flower_give_flower_op(::proto::OfflineOpPlantFlowerActivityGiveFlower* plant_flower_give_flower_op);

  // .proto.OfflineOpWinterCampActivityGiveItem winter_camp_give_item_op = 4;
  bool has_winter_camp_give_item_op() const;
  void clear_winter_camp_give_item_op();
  static const int kWinterCampGiveItemOpFieldNumber = 4;
  const ::proto::OfflineOpWinterCampActivityGiveItem& winter_camp_give_item_op() const;
  ::proto::OfflineOpWinterCampActivityGiveItem* mutable_winter_camp_give_item_op();
  ::proto::OfflineOpWinterCampActivityGiveItem* release_winter_camp_give_item_op();
  void set_allocated_winter_camp_give_item_op(::proto::OfflineOpWinterCampActivityGiveItem* winter_camp_give_item_op);

  // .proto.OfflineOpActivityGiveGift activity_give_gift_op = 5;
  bool has_activity_give_gift_op() const;
  void clear_activity_give_gift_op();
  static const int kActivityGiveGiftOpFieldNumber = 5;
  const ::proto::OfflineOpActivityGiveGift& activity_give_gift_op() const;
  ::proto::OfflineOpActivityGiveGift* mutable_activity_give_gift_op();
  ::proto::OfflineOpActivityGiveGift* release_activity_give_gift_op();
  void set_allocated_activity_give_gift_op(::proto::OfflineOpActivityGiveGift* activity_give_gift_op);

  // .proto.OfflineOpVintageActivityDividend vintage_dividend_op = 6;
  bool has_vintage_dividend_op() const;
  void clear_vintage_dividend_op();
  static const int kVintageDividendOpFieldNumber = 6;
  const ::proto::OfflineOpVintageActivityDividend& vintage_dividend_op() const;
  ::proto::OfflineOpVintageActivityDividend* mutable_vintage_dividend_op();
  ::proto::OfflineOpVintageActivityDividend* release_vintage_dividend_op();
  void set_allocated_vintage_dividend_op(::proto::OfflineOpVintageActivityDividend* vintage_dividend_op);

  // .proto.OfflineOpGCGSettle gcg_settle_op = 7;
  bool has_gcg_settle_op() const;
  void clear_gcg_settle_op();
  static const int kGcgSettleOpFieldNumber = 7;
  const ::proto::OfflineOpGCGSettle& gcg_settle_op() const;
  ::proto::OfflineOpGCGSettle* mutable_gcg_settle_op();
  ::proto::OfflineOpGCGSettle* release_gcg_settle_op();
  void set_allocated_gcg_settle_op(::proto::OfflineOpGCGSettle* gcg_settle_op);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.OfflineOpBin)
 private:
  void set_has_test_op();
  void set_has_furniture_make_help_op();
  void set_has_plant_flower_give_flower_op();
  void set_has_winter_camp_give_item_op();
  void set_has_activity_give_gift_op();
  void set_has_vintage_dividend_op();
  void set_has_gcg_settle_op();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::OfflineOpTestOp* test_op_;
    ::proto::OfflineOpFurnitureMakeHelp* furniture_make_help_op_;
    ::proto::OfflineOpPlantFlowerActivityGiveFlower* plant_flower_give_flower_op_;
    ::proto::OfflineOpWinterCampActivityGiveItem* winter_camp_give_item_op_;
    ::proto::OfflineOpActivityGiveGift* activity_give_gift_op_;
    ::proto::OfflineOpVintageActivityDividend* vintage_dividend_op_;
    ::proto::OfflineOpGCGSettle* gcg_settle_op_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FurnitureMakeSlotsBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FurnitureMakeSlotsBin) */ {
 public:
  FurnitureMakeSlotsBin();
  virtual ~FurnitureMakeSlotsBin();

  FurnitureMakeSlotsBin(const FurnitureMakeSlotsBin& from);

  inline FurnitureMakeSlotsBin& operator=(const FurnitureMakeSlotsBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FurnitureMakeSlotsBin(FurnitureMakeSlotsBin&& from) noexcept
    : FurnitureMakeSlotsBin() {
    *this = ::std::move(from);
  }

  inline FurnitureMakeSlotsBin& operator=(FurnitureMakeSlotsBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FurnitureMakeSlotsBin& default_instance();

  static inline const FurnitureMakeSlotsBin* internal_default_instance() {
    return reinterpret_cast<const FurnitureMakeSlotsBin*>(
               &_FurnitureMakeSlotsBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    143;

  void Swap(FurnitureMakeSlotsBin* other);
  friend void swap(FurnitureMakeSlotsBin& a, FurnitureMakeSlotsBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FurnitureMakeSlotsBin* New() const PROTOBUF_FINAL { return New(NULL); }

  FurnitureMakeSlotsBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FurnitureMakeSlotsBin& from);
  void MergeFrom(const FurnitureMakeSlotsBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FurnitureMakeSlotsBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 make_id = 1;
  void clear_make_id();
  static const int kMakeIdFieldNumber = 1;
  ::google::protobuf::uint32 make_id() const;
  void set_make_id(::google::protobuf::uint32 value);

  // fixed32 begin_time = 2;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 2;
  ::google::protobuf::uint32 begin_time() const;
  void set_begin_time(::google::protobuf::uint32 value);

  // uint32 dur_time = 3;
  void clear_dur_time();
  static const int kDurTimeFieldNumber = 3;
  ::google::protobuf::uint32 dur_time() const;
  void set_dur_time(::google::protobuf::uint32 value);

  // fixed32 accelerate_time = 4;
  void clear_accelerate_time();
  static const int kAccelerateTimeFieldNumber = 4;
  ::google::protobuf::uint32 accelerate_time() const;
  void set_accelerate_time(::google::protobuf::uint32 value);

  // uint32 accelerate_count = 6;
  void clear_accelerate_count();
  static const int kAccelerateCountFieldNumber = 6;
  ::google::protobuf::uint32 accelerate_count() const;
  void set_accelerate_count(::google::protobuf::uint32 value);

  // uint32 avatar_id = 7;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 7;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FurnitureMakeSlotsBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 make_id_;
  ::google::protobuf::uint32 begin_time_;
  ::google::protobuf::uint32 dur_time_;
  ::google::protobuf::uint32 accelerate_time_;
  ::google::protobuf::uint32 accelerate_count_;
  ::google::protobuf::uint32 avatar_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProfilePictureBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ProfilePictureBin) */ {
 public:
  ProfilePictureBin();
  virtual ~ProfilePictureBin();

  ProfilePictureBin(const ProfilePictureBin& from);

  inline ProfilePictureBin& operator=(const ProfilePictureBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProfilePictureBin(ProfilePictureBin&& from) noexcept
    : ProfilePictureBin() {
    *this = ::std::move(from);
  }

  inline ProfilePictureBin& operator=(ProfilePictureBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProfilePictureBin& default_instance();

  static inline const ProfilePictureBin* internal_default_instance() {
    return reinterpret_cast<const ProfilePictureBin*>(
               &_ProfilePictureBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    144;

  void Swap(ProfilePictureBin* other);
  friend void swap(ProfilePictureBin& a, ProfilePictureBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProfilePictureBin* New() const PROTOBUF_FINAL { return New(NULL); }

  ProfilePictureBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProfilePictureBin& from);
  void MergeFrom(const ProfilePictureBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProfilePictureBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 avatar_id = 1;
  void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 1;
  ::google::protobuf::uint32 avatar_id() const;
  void set_avatar_id(::google::protobuf::uint32 value);

  // uint32 costume_id = 2;
  void clear_costume_id();
  static const int kCostumeIdFieldNumber = 2;
  ::google::protobuf::uint32 costume_id() const;
  void set_costume_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ProfilePictureBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint32 costume_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CustomDungeonSettingBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CustomDungeonSettingBin) */ {
 public:
  CustomDungeonSettingBin();
  virtual ~CustomDungeonSettingBin();

  CustomDungeonSettingBin(const CustomDungeonSettingBin& from);

  inline CustomDungeonSettingBin& operator=(const CustomDungeonSettingBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomDungeonSettingBin(CustomDungeonSettingBin&& from) noexcept
    : CustomDungeonSettingBin() {
    *this = ::std::move(from);
  }

  inline CustomDungeonSettingBin& operator=(CustomDungeonSettingBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomDungeonSettingBin& default_instance();

  static inline const CustomDungeonSettingBin* internal_default_instance() {
    return reinterpret_cast<const CustomDungeonSettingBin*>(
               &_CustomDungeonSettingBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    145;

  void Swap(CustomDungeonSettingBin* other);
  friend void swap(CustomDungeonSettingBin& a, CustomDungeonSettingBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomDungeonSettingBin* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomDungeonSettingBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomDungeonSettingBin& from);
  void MergeFrom(const CustomDungeonSettingBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomDungeonSettingBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 open_room_list = 5;
  int open_room_list_size() const;
  void clear_open_room_list();
  static const int kOpenRoomListFieldNumber = 5;
  ::google::protobuf::uint32 open_room_list(int index) const;
  void set_open_room_list(int index, ::google::protobuf::uint32 value);
  void add_open_room_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      open_room_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_open_room_list();

  // uint32 coin_limit = 2;
  void clear_coin_limit();
  static const int kCoinLimitFieldNumber = 2;
  ::google::protobuf::uint32 coin_limit() const;
  void set_coin_limit(::google::protobuf::uint32 value);

  // bool is_arrive_finish = 1;
  void clear_is_arrive_finish();
  static const int kIsArriveFinishFieldNumber = 1;
  bool is_arrive_finish() const;
  void set_is_arrive_finish(bool value);

  // bool is_forbid_skill = 4;
  void clear_is_forbid_skill();
  static const int kIsForbidSkillFieldNumber = 4;
  bool is_forbid_skill() const;
  void set_is_forbid_skill(bool value);

  // uint32 time_limit = 3;
  void clear_time_limit();
  static const int kTimeLimitFieldNumber = 3;
  ::google::protobuf::uint32 time_limit() const;
  void set_time_limit(::google::protobuf::uint32 value);

  // uint32 start_room_id = 6;
  void clear_start_room_id();
  static const int kStartRoomIdFieldNumber = 6;
  ::google::protobuf::uint32 start_room_id() const;
  void set_start_room_id(::google::protobuf::uint32 value);

  // uint32 life_num = 7;
  void clear_life_num();
  static const int kLifeNumFieldNumber = 7;
  ::google::protobuf::uint32 life_num() const;
  void set_life_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CustomDungeonSettingBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > open_room_list_;
  mutable int _open_room_list_cached_byte_size_;
  ::google::protobuf::uint32 coin_limit_;
  bool is_arrive_finish_;
  bool is_forbid_skill_;
  ::google::protobuf::uint32 time_limit_;
  ::google::protobuf::uint32 start_room_id_;
  ::google::protobuf::uint32 life_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class CustomDungeonAbstractBin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CustomDungeonAbstractBin) */ {
 public:
  CustomDungeonAbstractBin();
  virtual ~CustomDungeonAbstractBin();

  CustomDungeonAbstractBin(const CustomDungeonAbstractBin& from);

  inline CustomDungeonAbstractBin& operator=(const CustomDungeonAbstractBin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CustomDungeonAbstractBin(CustomDungeonAbstractBin&& from) noexcept
    : CustomDungeonAbstractBin() {
    *this = ::std::move(from);
  }

  inline CustomDungeonAbstractBin& operator=(CustomDungeonAbstractBin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CustomDungeonAbstractBin& default_instance();

  static inline const CustomDungeonAbstractBin* internal_default_instance() {
    return reinterpret_cast<const CustomDungeonAbstractBin*>(
               &_CustomDungeonAbstractBin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    147;

  void Swap(CustomDungeonAbstractBin* other);
  friend void swap(CustomDungeonAbstractBin& a, CustomDungeonAbstractBin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CustomDungeonAbstractBin* New() const PROTOBUF_FINAL { return New(NULL); }

  CustomDungeonAbstractBin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CustomDungeonAbstractBin& from);
  void MergeFrom(const CustomDungeonAbstractBin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CustomDungeonAbstractBin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> brick_statistics_map = 5;
  int brick_statistics_map_size() const;
  void clear_brick_statistics_map();
  static const int kBrickStatisticsMapFieldNumber = 5;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      brick_statistics_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_brick_statistics_map();

  // uint32 finish_room_id = 1;
  void clear_finish_room_id();
  static const int kFinishRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 finish_room_id() const;
  void set_finish_room_id(::google::protobuf::uint32 value);

  // uint32 total_coin_num = 2;
  void clear_total_coin_num();
  static const int kTotalCoinNumFieldNumber = 2;
  ::google::protobuf::uint32 total_coin_num() const;
  void set_total_coin_num(::google::protobuf::uint32 value);

  // uint32 first_publish_time = 3;
  void clear_first_publish_time();
  static const int kFirstPublishTimeFieldNumber = 3;
  ::google::protobuf::uint32 first_publish_time() const;
  void set_first_publish_time(::google::protobuf::uint32 value);

  // uint32 last_publish_time = 4;
  void clear_last_publish_time();
  static const int kLastPublishTimeFieldNumber = 4;
  ::google::protobuf::uint32 last_publish_time() const;
  void set_last_publish_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CustomDungeonAbstractBin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class CustomDungeonAbstractBin_BrickStatisticsMapEntry : public ::google::protobuf::internal::MapEntry<CustomDungeonAbstractBin_BrickStatisticsMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<CustomDungeonAbstractBin_BrickStatisticsMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    CustomDungeonAbstractBin_BrickStatisticsMapEntry();
    CustomDungeonAbstractBin_BrickStatisticsMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const CustomDungeonAbstractBin_BrickStatisticsMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_CustomDungeonAbstractBin_BrickStatisticsMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      CustomDungeonAbstractBin_BrickStatisticsMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > brick_statistics_map_;
  private:
  ::google::protobuf::uint32 finish_room_id_;
  ::google::protobuf::uint32 total_coin_num_;
  ::google::protobuf::uint32 first_publish_time_;
  ::google::protobuf::uint32 last_publish_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fbin_5fcommon_2eserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VectorBin

// float x = 1;
inline void VectorBin::clear_x() {
  x_ = 0;
}
inline float VectorBin::x() const {
  // @@protoc_insertion_point(field_get:proto.VectorBin.x)
  return x_;
}
inline void VectorBin::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.VectorBin.x)
}

// float y = 2;
inline void VectorBin::clear_y() {
  y_ = 0;
}
inline float VectorBin::y() const {
  // @@protoc_insertion_point(field_get:proto.VectorBin.y)
  return y_;
}
inline void VectorBin::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.VectorBin.y)
}

// float z = 3;
inline void VectorBin::clear_z() {
  z_ = 0;
}
inline float VectorBin::z() const {
  // @@protoc_insertion_point(field_get:proto.VectorBin.z)
  return z_;
}
inline void VectorBin::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.VectorBin.z)
}

// -------------------------------------------------------------------

// Uint32PairBin

// uint32 key = 1;
inline void Uint32PairBin::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 Uint32PairBin::key() const {
  // @@protoc_insertion_point(field_get:proto.Uint32PairBin.key)
  return key_;
}
inline void Uint32PairBin::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.Uint32PairBin.key)
}

// uint32 value = 2;
inline void Uint32PairBin::clear_value() {
  value_ = 0u;
}
inline ::google::protobuf::uint32 Uint32PairBin::value() const {
  // @@protoc_insertion_point(field_get:proto.Uint32PairBin.value)
  return value_;
}
inline void Uint32PairBin::set_value(::google::protobuf::uint32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.Uint32PairBin.value)
}

// -------------------------------------------------------------------

// Uint32ToInt32PairBin

// uint32 key = 1;
inline void Uint32ToInt32PairBin::clear_key() {
  key_ = 0u;
}
inline ::google::protobuf::uint32 Uint32ToInt32PairBin::key() const {
  // @@protoc_insertion_point(field_get:proto.Uint32ToInt32PairBin.key)
  return key_;
}
inline void Uint32ToInt32PairBin::set_key(::google::protobuf::uint32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.Uint32ToInt32PairBin.key)
}

// int32 value = 2;
inline void Uint32ToInt32PairBin::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 Uint32ToInt32PairBin::value() const {
  // @@protoc_insertion_point(field_get:proto.Uint32ToInt32PairBin.value)
  return value_;
}
inline void Uint32ToInt32PairBin::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.Uint32ToInt32PairBin.value)
}

// -------------------------------------------------------------------

// FloatPairBin

// float first = 1;
inline void FloatPairBin::clear_first() {
  first_ = 0;
}
inline float FloatPairBin::first() const {
  // @@protoc_insertion_point(field_get:proto.FloatPairBin.first)
  return first_;
}
inline void FloatPairBin::set_first(float value) {
  
  first_ = value;
  // @@protoc_insertion_point(field_set:proto.FloatPairBin.first)
}

// float second = 2;
inline void FloatPairBin::clear_second() {
  second_ = 0;
}
inline float FloatPairBin::second() const {
  // @@protoc_insertion_point(field_get:proto.FloatPairBin.second)
  return second_;
}
inline void FloatPairBin::set_second(float value) {
  
  second_ = value;
  // @@protoc_insertion_point(field_set:proto.FloatPairBin.second)
}

// -------------------------------------------------------------------

// Uint32List

// repeated uint32 uint32_list = 1;
inline int Uint32List::uint32_list_size() const {
  return uint32_list_.size();
}
inline void Uint32List::clear_uint32_list() {
  uint32_list_.Clear();
}
inline ::google::protobuf::uint32 Uint32List::uint32_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Uint32List.uint32_list)
  return uint32_list_.Get(index);
}
inline void Uint32List::set_uint32_list(int index, ::google::protobuf::uint32 value) {
  uint32_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Uint32List.uint32_list)
}
inline void Uint32List::add_uint32_list(::google::protobuf::uint32 value) {
  uint32_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Uint32List.uint32_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Uint32List::uint32_list() const {
  // @@protoc_insertion_point(field_list:proto.Uint32List.uint32_list)
  return uint32_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Uint32List::mutable_uint32_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Uint32List.uint32_list)
  return &uint32_list_;
}

// -------------------------------------------------------------------

// Int32List

// repeated int32 int32_list = 1;
inline int Int32List::int32_list_size() const {
  return int32_list_.size();
}
inline void Int32List::clear_int32_list() {
  int32_list_.Clear();
}
inline ::google::protobuf::int32 Int32List::int32_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.Int32List.int32_list)
  return int32_list_.Get(index);
}
inline void Int32List::set_int32_list(int index, ::google::protobuf::int32 value) {
  int32_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.Int32List.int32_list)
}
inline void Int32List::add_int32_list(::google::protobuf::int32 value) {
  int32_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.Int32List.int32_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Int32List::int32_list() const {
  // @@protoc_insertion_point(field_list:proto.Int32List.int32_list)
  return int32_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Int32List::mutable_int32_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.Int32List.int32_list)
  return &int32_list_;
}

// -------------------------------------------------------------------

// ReliquaryBin

// uint32 level = 1;
inline void ReliquaryBin::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 ReliquaryBin::level() const {
  // @@protoc_insertion_point(field_get:proto.ReliquaryBin.level)
  return level_;
}
inline void ReliquaryBin::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.ReliquaryBin.level)
}

// uint32 exp = 2;
inline void ReliquaryBin::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 ReliquaryBin::exp() const {
  // @@protoc_insertion_point(field_get:proto.ReliquaryBin.exp)
  return exp_;
}
inline void ReliquaryBin::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.ReliquaryBin.exp)
}

// uint32 main_prop_id = 4;
inline void ReliquaryBin::clear_main_prop_id() {
  main_prop_id_ = 0u;
}
inline ::google::protobuf::uint32 ReliquaryBin::main_prop_id() const {
  // @@protoc_insertion_point(field_get:proto.ReliquaryBin.main_prop_id)
  return main_prop_id_;
}
inline void ReliquaryBin::set_main_prop_id(::google::protobuf::uint32 value) {
  
  main_prop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ReliquaryBin.main_prop_id)
}

// repeated uint32 append_prop_id_list = 5;
inline int ReliquaryBin::append_prop_id_list_size() const {
  return append_prop_id_list_.size();
}
inline void ReliquaryBin::clear_append_prop_id_list() {
  append_prop_id_list_.Clear();
}
inline ::google::protobuf::uint32 ReliquaryBin::append_prop_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.ReliquaryBin.append_prop_id_list)
  return append_prop_id_list_.Get(index);
}
inline void ReliquaryBin::set_append_prop_id_list(int index, ::google::protobuf::uint32 value) {
  append_prop_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.ReliquaryBin.append_prop_id_list)
}
inline void ReliquaryBin::add_append_prop_id_list(::google::protobuf::uint32 value) {
  append_prop_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.ReliquaryBin.append_prop_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ReliquaryBin::append_prop_id_list() const {
  // @@protoc_insertion_point(field_list:proto.ReliquaryBin.append_prop_id_list)
  return append_prop_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ReliquaryBin::mutable_append_prop_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.ReliquaryBin.append_prop_id_list)
  return &append_prop_id_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// WeaponBin

// uint32 level = 1;
inline void WeaponBin::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 WeaponBin::level() const {
  // @@protoc_insertion_point(field_get:proto.WeaponBin.level)
  return level_;
}
inline void WeaponBin::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.WeaponBin.level)
}

// uint32 exp = 2;
inline void WeaponBin::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 WeaponBin::exp() const {
  // @@protoc_insertion_point(field_get:proto.WeaponBin.exp)
  return exp_;
}
inline void WeaponBin::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.WeaponBin.exp)
}

// uint32 promote_level = 3;
inline void WeaponBin::clear_promote_level() {
  promote_level_ = 0u;
}
inline ::google::protobuf::uint32 WeaponBin::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.WeaponBin.promote_level)
  return promote_level_;
}
inline void WeaponBin::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.WeaponBin.promote_level)
}

// map<uint32, uint32> affix_map = 4;
inline int WeaponBin::affix_map_size() const {
  return affix_map_.size();
}
inline void WeaponBin::clear_affix_map() {
  affix_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
WeaponBin::affix_map() const {
  // @@protoc_insertion_point(field_map:proto.WeaponBin.affix_map)
  return affix_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
WeaponBin::mutable_affix_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.WeaponBin.affix_map)
  return affix_map_.MutableMap();
}

// -------------------------------------------------------------------

// ItemParamBin

// uint32 item_id = 1;
inline void ItemParamBin::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 ItemParamBin::item_id() const {
  // @@protoc_insertion_point(field_get:proto.ItemParamBin.item_id)
  return item_id_;
}
inline void ItemParamBin::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParamBin.item_id)
}

// uint32 count = 2;
inline void ItemParamBin::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 ItemParamBin::count() const {
  // @@protoc_insertion_point(field_get:proto.ItemParamBin.count)
  return count_;
}
inline void ItemParamBin::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParamBin.count)
}

// uint32 level = 3;
inline void ItemParamBin::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 ItemParamBin::level() const {
  // @@protoc_insertion_point(field_get:proto.ItemParamBin.level)
  return level_;
}
inline void ItemParamBin::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParamBin.level)
}

// uint32 promote_level = 4;
inline void ItemParamBin::clear_promote_level() {
  promote_level_ = 0u;
}
inline ::google::protobuf::uint32 ItemParamBin::promote_level() const {
  // @@protoc_insertion_point(field_get:proto.ItemParamBin.promote_level)
  return promote_level_;
}
inline void ItemParamBin::set_promote_level(::google::protobuf::uint32 value) {
  
  promote_level_ = value;
  // @@protoc_insertion_point(field_set:proto.ItemParamBin.promote_level)
}

// -------------------------------------------------------------------

// MailBin

// string title = 1;
inline void MailBin::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailBin::title() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.title)
  return title_.GetNoArena();
}
inline void MailBin::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailBin.title)
}
#if LANG_CXX11
inline void MailBin::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailBin.title)
}
#endif
inline void MailBin::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailBin.title)
}
inline void MailBin::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailBin.title)
}
inline ::std::string* MailBin::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailBin.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailBin::release_title() {
  // @@protoc_insertion_point(field_release:proto.MailBin.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailBin::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.MailBin.title)
}

// string content = 2;
inline void MailBin::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailBin::content() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.content)
  return content_.GetNoArena();
}
inline void MailBin::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailBin.content)
}
#if LANG_CXX11
inline void MailBin::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailBin.content)
}
#endif
inline void MailBin::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailBin.content)
}
inline void MailBin::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailBin.content)
}
inline ::std::string* MailBin::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailBin.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailBin::release_content() {
  // @@protoc_insertion_point(field_release:proto.MailBin.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailBin::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:proto.MailBin.content)
}

// string sender = 3;
inline void MailBin::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailBin::sender() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.sender)
  return sender_.GetNoArena();
}
inline void MailBin::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailBin.sender)
}
#if LANG_CXX11
inline void MailBin::set_sender(::std::string&& value) {
  
  sender_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailBin.sender)
}
#endif
inline void MailBin::set_sender(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailBin.sender)
}
inline void MailBin::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailBin.sender)
}
inline ::std::string* MailBin::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailBin.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailBin::release_sender() {
  // @@protoc_insertion_point(field_release:proto.MailBin.sender)
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailBin::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:proto.MailBin.sender)
}

// repeated .proto.ItemParamBin item_param_list = 4;
inline int MailBin::item_param_list_size() const {
  return item_param_list_.size();
}
inline void MailBin::clear_item_param_list() {
  item_param_list_.Clear();
}
inline const ::proto::ItemParamBin& MailBin::item_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MailBin.item_param_list)
  return item_param_list_.Get(index);
}
inline ::proto::ItemParamBin* MailBin::mutable_item_param_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MailBin.item_param_list)
  return item_param_list_.Mutable(index);
}
inline ::proto::ItemParamBin* MailBin::add_item_param_list() {
  // @@protoc_insertion_point(field_add:proto.MailBin.item_param_list)
  return item_param_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin >*
MailBin::mutable_item_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MailBin.item_param_list)
  return &item_param_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin >&
MailBin::item_param_list() const {
  // @@protoc_insertion_point(field_list:proto.MailBin.item_param_list)
  return item_param_list_;
}

// fixed32 send_time = 5;
inline void MailBin::clear_send_time() {
  send_time_ = 0u;
}
inline ::google::protobuf::uint32 MailBin::send_time() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.send_time)
  return send_time_;
}
inline void MailBin::set_send_time(::google::protobuf::uint32 value) {
  
  send_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.send_time)
}

// fixed32 expire_time = 6;
inline void MailBin::clear_expire_time() {
  expire_time_ = 0u;
}
inline ::google::protobuf::uint32 MailBin::expire_time() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.expire_time)
  return expire_time_;
}
inline void MailBin::set_expire_time(::google::protobuf::uint32 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.expire_time)
}

// uint32 importance = 7;
inline void MailBin::clear_importance() {
  importance_ = 0u;
}
inline ::google::protobuf::uint32 MailBin::importance() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.importance)
  return importance_;
}
inline void MailBin::set_importance(::google::protobuf::uint32 value) {
  
  importance_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.importance)
}

// uint32 config_id = 8;
inline void MailBin::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 MailBin::config_id() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.config_id)
  return config_id_;
}
inline void MailBin::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.config_id)
}

// repeated string argument_list = 9;
inline int MailBin::argument_list_size() const {
  return argument_list_.size();
}
inline void MailBin::clear_argument_list() {
  argument_list_.Clear();
}
inline const ::std::string& MailBin::argument_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.MailBin.argument_list)
  return argument_list_.Get(index);
}
inline ::std::string* MailBin::mutable_argument_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.MailBin.argument_list)
  return argument_list_.Mutable(index);
}
inline void MailBin::set_argument_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.MailBin.argument_list)
  argument_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MailBin::set_argument_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.MailBin.argument_list)
  argument_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MailBin::set_argument_list(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  argument_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.MailBin.argument_list)
}
inline void MailBin::set_argument_list(int index, const char* value, size_t size) {
  argument_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.MailBin.argument_list)
}
inline ::std::string* MailBin::add_argument_list() {
  // @@protoc_insertion_point(field_add_mutable:proto.MailBin.argument_list)
  return argument_list_.Add();
}
inline void MailBin::add_argument_list(const ::std::string& value) {
  argument_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.MailBin.argument_list)
}
#if LANG_CXX11
inline void MailBin::add_argument_list(::std::string&& value) {
  argument_list_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.MailBin.argument_list)
}
#endif
inline void MailBin::add_argument_list(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  argument_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.MailBin.argument_list)
}
inline void MailBin::add_argument_list(const char* value, size_t size) {
  argument_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.MailBin.argument_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MailBin::argument_list() const {
  // @@protoc_insertion_point(field_list:proto.MailBin.argument_list)
  return argument_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MailBin::mutable_argument_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.MailBin.argument_list)
  return &argument_list_;
}

// uint32 item_limit_type = 10;
inline void MailBin::clear_item_limit_type() {
  item_limit_type_ = 0u;
}
inline ::google::protobuf::uint32 MailBin::item_limit_type() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.item_limit_type)
  return item_limit_type_;
}
inline void MailBin::set_item_limit_type(::google::protobuf::uint32 value) {
  
  item_limit_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.item_limit_type)
}

// uint32 source_type = 11;
inline void MailBin::clear_source_type() {
  source_type_ = 0u;
}
inline ::google::protobuf::uint32 MailBin::source_type() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.source_type)
  return source_type_;
}
inline void MailBin::set_source_type(::google::protobuf::uint32 value) {
  
  source_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.source_type)
}

// string tag = 12;
inline void MailBin::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MailBin::tag() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.tag)
  return tag_.GetNoArena();
}
inline void MailBin::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.MailBin.tag)
}
#if LANG_CXX11
inline void MailBin::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.MailBin.tag)
}
#endif
inline void MailBin::set_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.MailBin.tag)
}
inline void MailBin::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.MailBin.tag)
}
inline ::std::string* MailBin::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:proto.MailBin.tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MailBin::release_tag() {
  // @@protoc_insertion_point(field_release:proto.MailBin.tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MailBin::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:proto.MailBin.tag)
}

// uint32 reason_type = 13;
inline void MailBin::clear_reason_type() {
  reason_type_ = 0u;
}
inline ::google::protobuf::uint32 MailBin::reason_type() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.reason_type)
  return reason_type_;
}
inline void MailBin::set_reason_type(::google::protobuf::uint32 value) {
  
  reason_type_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.reason_type)
}

// uint32 collect_state = 14;
inline void MailBin::clear_collect_state() {
  collect_state_ = 0u;
}
inline ::google::protobuf::uint32 MailBin::collect_state() const {
  // @@protoc_insertion_point(field_get:proto.MailBin.collect_state)
  return collect_state_;
}
inline void MailBin::set_collect_state(::google::protobuf::uint32 value) {
  
  collect_state_ = value;
  // @@protoc_insertion_point(field_set:proto.MailBin.collect_state)
}

// -------------------------------------------------------------------

// DelItemOp

// uint32 item_id = 1;
inline void DelItemOp::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 DelItemOp::item_id() const {
  // @@protoc_insertion_point(field_get:proto.DelItemOp.item_id)
  return item_id_;
}
inline void DelItemOp::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelItemOp.item_id)
}

// uint32 item_num = 2;
inline void DelItemOp::clear_item_num() {
  item_num_ = 0u;
}
inline ::google::protobuf::uint32 DelItemOp::item_num() const {
  // @@protoc_insertion_point(field_get:proto.DelItemOp.item_num)
  return item_num_;
}
inline void DelItemOp::set_item_num(::google::protobuf::uint32 value) {
  
  item_num_ = value;
  // @@protoc_insertion_point(field_set:proto.DelItemOp.item_num)
}

// -------------------------------------------------------------------

// DelItemNegativeOp

// uint32 item_id = 1;
inline void DelItemNegativeOp::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 DelItemNegativeOp::item_id() const {
  // @@protoc_insertion_point(field_get:proto.DelItemNegativeOp.item_id)
  return item_id_;
}
inline void DelItemNegativeOp::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelItemNegativeOp.item_id)
}

// uint32 item_num = 2;
inline void DelItemNegativeOp::clear_item_num() {
  item_num_ = 0u;
}
inline ::google::protobuf::uint32 DelItemNegativeOp::item_num() const {
  // @@protoc_insertion_point(field_get:proto.DelItemNegativeOp.item_num)
  return item_num_;
}
inline void DelItemNegativeOp::set_item_num(::google::protobuf::uint32 value) {
  
  item_num_ = value;
  // @@protoc_insertion_point(field_set:proto.DelItemNegativeOp.item_num)
}

// uint32 remain_num = 3;
inline void DelItemNegativeOp::clear_remain_num() {
  remain_num_ = 0u;
}
inline ::google::protobuf::uint32 DelItemNegativeOp::remain_num() const {
  // @@protoc_insertion_point(field_get:proto.DelItemNegativeOp.remain_num)
  return remain_num_;
}
inline void DelItemNegativeOp::set_remain_num(::google::protobuf::uint32 value) {
  
  remain_num_ = value;
  // @@protoc_insertion_point(field_set:proto.DelItemNegativeOp.remain_num)
}

// -------------------------------------------------------------------

// DelEquipOp

// uint64 guid = 1;
inline void DelEquipOp::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DelEquipOp::guid() const {
  // @@protoc_insertion_point(field_get:proto.DelEquipOp.guid)
  return guid_;
}
inline void DelEquipOp::set_guid(::google::protobuf::uint64 value) {
  
  guid_ = value;
  // @@protoc_insertion_point(field_set:proto.DelEquipOp.guid)
}

// -------------------------------------------------------------------

// PlayerGotoOp

// uint32 scene_id = 1;
inline void PlayerGotoOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerGotoOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerGotoOp.scene_id)
  return scene_id_;
}
inline void PlayerGotoOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerGotoOp.scene_id)
}

// .proto.VectorBin pos = 2;
inline bool PlayerGotoOp::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void PlayerGotoOp::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::VectorBin& PlayerGotoOp::pos() const {
  const ::proto::VectorBin* p = pos_;
  // @@protoc_insertion_point(field_get:proto.PlayerGotoOp.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* PlayerGotoOp::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerGotoOp.pos)
  return pos_;
}
inline ::proto::VectorBin* PlayerGotoOp::release_pos() {
  // @@protoc_insertion_point(field_release:proto.PlayerGotoOp.pos)
  
  ::proto::VectorBin* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PlayerGotoOp::set_allocated_pos(::proto::VectorBin* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerGotoOp.pos)
}

// -------------------------------------------------------------------

// ResetParentQuestOp

// uint32 parent_quest_id = 3;
inline void ResetParentQuestOp::clear_parent_quest_id() {
  parent_quest_id_ = 0u;
}
inline ::google::protobuf::uint32 ResetParentQuestOp::parent_quest_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetParentQuestOp.parent_quest_id)
  return parent_quest_id_;
}
inline void ResetParentQuestOp::set_parent_quest_id(::google::protobuf::uint32 value) {
  
  parent_quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetParentQuestOp.parent_quest_id)
}

// -------------------------------------------------------------------

// RefreshGroupOp

// uint32 group_id = 1;
inline void RefreshGroupOp::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 RefreshGroupOp::group_id() const {
  // @@protoc_insertion_point(field_get:proto.RefreshGroupOp.group_id)
  return group_id_;
}
inline void RefreshGroupOp::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RefreshGroupOp.group_id)
}

// uint32 suite_id = 2;
inline void RefreshGroupOp::clear_suite_id() {
  suite_id_ = 0u;
}
inline ::google::protobuf::uint32 RefreshGroupOp::suite_id() const {
  // @@protoc_insertion_point(field_get:proto.RefreshGroupOp.suite_id)
  return suite_id_;
}
inline void RefreshGroupOp::set_suite_id(::google::protobuf::uint32 value) {
  
  suite_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RefreshGroupOp.suite_id)
}

// uint32 scene_id = 3;
inline void RefreshGroupOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 RefreshGroupOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.RefreshGroupOp.scene_id)
  return scene_id_;
}
inline void RefreshGroupOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RefreshGroupOp.scene_id)
}

// -------------------------------------------------------------------

// SetScenePointLockStatusOp

// uint32 scene_id = 1;
inline void SetScenePointLockStatusOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SetScenePointLockStatusOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SetScenePointLockStatusOp.scene_id)
  return scene_id_;
}
inline void SetScenePointLockStatusOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetScenePointLockStatusOp.scene_id)
}

// uint32 point_id = 2;
inline void SetScenePointLockStatusOp::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 SetScenePointLockStatusOp::point_id() const {
  // @@protoc_insertion_point(field_get:proto.SetScenePointLockStatusOp.point_id)
  return point_id_;
}
inline void SetScenePointLockStatusOp::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetScenePointLockStatusOp.point_id)
}

// bool is_locked = 3;
inline void SetScenePointLockStatusOp::clear_is_locked() {
  is_locked_ = false;
}
inline bool SetScenePointLockStatusOp::is_locked() const {
  // @@protoc_insertion_point(field_get:proto.SetScenePointLockStatusOp.is_locked)
  return is_locked_;
}
inline void SetScenePointLockStatusOp::set_is_locked(bool value) {
  
  is_locked_ = value;
  // @@protoc_insertion_point(field_set:proto.SetScenePointLockStatusOp.is_locked)
}

// -------------------------------------------------------------------

// SetPlayerNickNameOp

// string nick_name = 1;
inline void SetPlayerNickNameOp::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetPlayerNickNameOp::nick_name() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerNickNameOp.nick_name)
  return nick_name_.GetNoArena();
}
inline void SetPlayerNickNameOp::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetPlayerNickNameOp.nick_name)
}
#if LANG_CXX11
inline void SetPlayerNickNameOp::set_nick_name(::std::string&& value) {
  
  nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetPlayerNickNameOp.nick_name)
}
#endif
inline void SetPlayerNickNameOp::set_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetPlayerNickNameOp.nick_name)
}
inline void SetPlayerNickNameOp::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetPlayerNickNameOp.nick_name)
}
inline ::std::string* SetPlayerNickNameOp::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetPlayerNickNameOp.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetPlayerNickNameOp::release_nick_name() {
  // @@protoc_insertion_point(field_release:proto.SetPlayerNickNameOp.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetPlayerNickNameOp::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.SetPlayerNickNameOp.nick_name)
}

// -------------------------------------------------------------------

// RefreshShopOp

// -------------------------------------------------------------------

// UnlockTalentOp

// uint32 avatar_id = 1;
inline void UnlockTalentOp::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 UnlockTalentOp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTalentOp.avatar_id)
  return avatar_id_;
}
inline void UnlockTalentOp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTalentOp.avatar_id)
}

// uint32 skill_depot_id = 2;
inline void UnlockTalentOp::clear_skill_depot_id() {
  skill_depot_id_ = 0u;
}
inline ::google::protobuf::uint32 UnlockTalentOp::skill_depot_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTalentOp.skill_depot_id)
  return skill_depot_id_;
}
inline void UnlockTalentOp::set_skill_depot_id(::google::protobuf::uint32 value) {
  
  skill_depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTalentOp.skill_depot_id)
}

// uint32 talent_id = 3;
inline void UnlockTalentOp::clear_talent_id() {
  talent_id_ = 0u;
}
inline ::google::protobuf::uint32 UnlockTalentOp::talent_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockTalentOp.talent_id)
  return talent_id_;
}
inline void UnlockTalentOp::set_talent_id(::google::protobuf::uint32 value) {
  
  talent_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockTalentOp.talent_id)
}

// -------------------------------------------------------------------

// TakeOffEquipOp

// uint32 avatar_id = 1;
inline void TakeOffEquipOp::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 TakeOffEquipOp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.TakeOffEquipOp.avatar_id)
  return avatar_id_;
}
inline void TakeOffEquipOp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeOffEquipOp.avatar_id)
}

// uint32 equip_type = 2;
inline void TakeOffEquipOp::clear_equip_type() {
  equip_type_ = 0u;
}
inline ::google::protobuf::uint32 TakeOffEquipOp::equip_type() const {
  // @@protoc_insertion_point(field_get:proto.TakeOffEquipOp.equip_type)
  return equip_type_;
}
inline void TakeOffEquipOp::set_equip_type(::google::protobuf::uint32 value) {
  
  equip_type_ = value;
  // @@protoc_insertion_point(field_set:proto.TakeOffEquipOp.equip_type)
}

// -------------------------------------------------------------------

// DelMailOp

// repeated uint32 mail_id_list = 1;
inline int DelMailOp::mail_id_list_size() const {
  return mail_id_list_.size();
}
inline void DelMailOp::clear_mail_id_list() {
  mail_id_list_.Clear();
}
inline ::google::protobuf::uint32 DelMailOp::mail_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DelMailOp.mail_id_list)
  return mail_id_list_.Get(index);
}
inline void DelMailOp::set_mail_id_list(int index, ::google::protobuf::uint32 value) {
  mail_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.DelMailOp.mail_id_list)
}
inline void DelMailOp::add_mail_id_list(::google::protobuf::uint32 value) {
  mail_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.DelMailOp.mail_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
DelMailOp::mail_id_list() const {
  // @@protoc_insertion_point(field_list:proto.DelMailOp.mail_id_list)
  return mail_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
DelMailOp::mutable_mail_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DelMailOp.mail_id_list)
  return &mail_id_list_;
}

// -------------------------------------------------------------------

// UnlockAreaOp

// uint32 area_id = 1;
inline void UnlockAreaOp::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 UnlockAreaOp::area_id() const {
  // @@protoc_insertion_point(field_get:proto.UnlockAreaOp.area_id)
  return area_id_;
}
inline void UnlockAreaOp::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.UnlockAreaOp.area_id)
}

// -------------------------------------------------------------------

// FinishDailyTaskOp

// uint32 daily_task_id = 1;
inline void FinishDailyTaskOp::clear_daily_task_id() {
  daily_task_id_ = 0u;
}
inline ::google::protobuf::uint32 FinishDailyTaskOp::daily_task_id() const {
  // @@protoc_insertion_point(field_get:proto.FinishDailyTaskOp.daily_task_id)
  return daily_task_id_;
}
inline void FinishDailyTaskOp::set_daily_task_id(::google::protobuf::uint32 value) {
  
  daily_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishDailyTaskOp.daily_task_id)
}

// uint32 daily_time = 2;
inline void FinishDailyTaskOp::clear_daily_time() {
  daily_time_ = 0u;
}
inline ::google::protobuf::uint32 FinishDailyTaskOp::daily_time() const {
  // @@protoc_insertion_point(field_get:proto.FinishDailyTaskOp.daily_time)
  return daily_time_;
}
inline void FinishDailyTaskOp::set_daily_time(::google::protobuf::uint32 value) {
  
  daily_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishDailyTaskOp.daily_time)
}

// -------------------------------------------------------------------

// AddItemOp

// uint32 item_id = 1;
inline void AddItemOp::clear_item_id() {
  item_id_ = 0u;
}
inline ::google::protobuf::uint32 AddItemOp::item_id() const {
  // @@protoc_insertion_point(field_get:proto.AddItemOp.item_id)
  return item_id_;
}
inline void AddItemOp::set_item_id(::google::protobuf::uint32 value) {
  
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddItemOp.item_id)
}

// uint32 item_count = 2;
inline void AddItemOp::clear_item_count() {
  item_count_ = 0u;
}
inline ::google::protobuf::uint32 AddItemOp::item_count() const {
  // @@protoc_insertion_point(field_get:proto.AddItemOp.item_count)
  return item_count_;
}
inline void AddItemOp::set_item_count(::google::protobuf::uint32 value) {
  
  item_count_ = value;
  // @@protoc_insertion_point(field_set:proto.AddItemOp.item_count)
}

// .proto.ReliquaryBin reliquary = 101;
inline bool AddItemOp::has_reliquary() const {
  return detail_case() == kReliquary;
}
inline void AddItemOp::set_has_reliquary() {
  _oneof_case_[0] = kReliquary;
}
inline void AddItemOp::clear_reliquary() {
  if (has_reliquary()) {
    delete detail_.reliquary_;
    clear_has_detail();
  }
}
inline  const ::proto::ReliquaryBin& AddItemOp::reliquary() const {
  // @@protoc_insertion_point(field_get:proto.AddItemOp.reliquary)
  return has_reliquary()
      ? *detail_.reliquary_
      : ::proto::ReliquaryBin::default_instance();
}
inline ::proto::ReliquaryBin* AddItemOp::mutable_reliquary() {
  if (!has_reliquary()) {
    clear_detail();
    set_has_reliquary();
    detail_.reliquary_ = new ::proto::ReliquaryBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddItemOp.reliquary)
  return detail_.reliquary_;
}
inline ::proto::ReliquaryBin* AddItemOp::release_reliquary() {
  // @@protoc_insertion_point(field_release:proto.AddItemOp.reliquary)
  if (has_reliquary()) {
    clear_has_detail();
    ::proto::ReliquaryBin* temp = detail_.reliquary_;
    detail_.reliquary_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AddItemOp::set_allocated_reliquary(::proto::ReliquaryBin* reliquary) {
  clear_detail();
  if (reliquary) {
    set_has_reliquary();
    detail_.reliquary_ = reliquary;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddItemOp.reliquary)
}

// .proto.WeaponBin weapon = 102;
inline bool AddItemOp::has_weapon() const {
  return detail_case() == kWeapon;
}
inline void AddItemOp::set_has_weapon() {
  _oneof_case_[0] = kWeapon;
}
inline void AddItemOp::clear_weapon() {
  if (has_weapon()) {
    delete detail_.weapon_;
    clear_has_detail();
  }
}
inline  const ::proto::WeaponBin& AddItemOp::weapon() const {
  // @@protoc_insertion_point(field_get:proto.AddItemOp.weapon)
  return has_weapon()
      ? *detail_.weapon_
      : ::proto::WeaponBin::default_instance();
}
inline ::proto::WeaponBin* AddItemOp::mutable_weapon() {
  if (!has_weapon()) {
    clear_detail();
    set_has_weapon();
    detail_.weapon_ = new ::proto::WeaponBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddItemOp.weapon)
  return detail_.weapon_;
}
inline ::proto::WeaponBin* AddItemOp::release_weapon() {
  // @@protoc_insertion_point(field_release:proto.AddItemOp.weapon)
  if (has_weapon()) {
    clear_has_detail();
    ::proto::WeaponBin* temp = detail_.weapon_;
    detail_.weapon_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void AddItemOp::set_allocated_weapon(::proto::WeaponBin* weapon) {
  clear_detail();
  if (weapon) {
    set_has_weapon();
    detail_.weapon_ = weapon;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddItemOp.weapon)
}

inline bool AddItemOp::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void AddItemOp::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline AddItemOp::DetailCase AddItemOp::detail_case() const {
  return AddItemOp::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ModifyBornPosOp

// uint32 scene_id = 1;
inline void ModifyBornPosOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ModifyBornPosOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ModifyBornPosOp.scene_id)
  return scene_id_;
}
inline void ModifyBornPosOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ModifyBornPosOp.scene_id)
}

// .proto.VectorBin pos = 2;
inline bool ModifyBornPosOp::has_pos() const {
  return this != internal_default_instance() && pos_ != NULL;
}
inline void ModifyBornPosOp::clear_pos() {
  if (GetArenaNoVirtual() == NULL && pos_ != NULL) delete pos_;
  pos_ = NULL;
}
inline const ::proto::VectorBin& ModifyBornPosOp::pos() const {
  const ::proto::VectorBin* p = pos_;
  // @@protoc_insertion_point(field_get:proto.ModifyBornPosOp.pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* ModifyBornPosOp::mutable_pos() {
  
  if (pos_ == NULL) {
    pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.ModifyBornPosOp.pos)
  return pos_;
}
inline ::proto::VectorBin* ModifyBornPosOp::release_pos() {
  // @@protoc_insertion_point(field_release:proto.ModifyBornPosOp.pos)
  
  ::proto::VectorBin* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void ModifyBornPosOp::set_allocated_pos(::proto::VectorBin* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ModifyBornPosOp.pos)
}

// -------------------------------------------------------------------

// SubCoinNegativeOp

// uint32 scoin = 1;
inline void SubCoinNegativeOp::clear_scoin() {
  scoin_ = 0u;
}
inline ::google::protobuf::uint32 SubCoinNegativeOp::scoin() const {
  // @@protoc_insertion_point(field_get:proto.SubCoinNegativeOp.scoin)
  return scoin_;
}
inline void SubCoinNegativeOp::set_scoin(::google::protobuf::uint32 value) {
  
  scoin_ = value;
  // @@protoc_insertion_point(field_set:proto.SubCoinNegativeOp.scoin)
}

// uint32 hcoin = 2;
inline void SubCoinNegativeOp::clear_hcoin() {
  hcoin_ = 0u;
}
inline ::google::protobuf::uint32 SubCoinNegativeOp::hcoin() const {
  // @@protoc_insertion_point(field_get:proto.SubCoinNegativeOp.hcoin)
  return hcoin_;
}
inline void SubCoinNegativeOp::set_hcoin(::google::protobuf::uint32 value) {
  
  hcoin_ = value;
  // @@protoc_insertion_point(field_set:proto.SubCoinNegativeOp.hcoin)
}

// uint32 mcoin = 3;
inline void SubCoinNegativeOp::clear_mcoin() {
  mcoin_ = 0u;
}
inline ::google::protobuf::uint32 SubCoinNegativeOp::mcoin() const {
  // @@protoc_insertion_point(field_get:proto.SubCoinNegativeOp.mcoin)
  return mcoin_;
}
inline void SubCoinNegativeOp::set_mcoin(::google::protobuf::uint32 value) {
  
  mcoin_ = value;
  // @@protoc_insertion_point(field_set:proto.SubCoinNegativeOp.mcoin)
}

// uint32 home_coin = 4;
inline void SubCoinNegativeOp::clear_home_coin() {
  home_coin_ = 0u;
}
inline ::google::protobuf::uint32 SubCoinNegativeOp::home_coin() const {
  // @@protoc_insertion_point(field_get:proto.SubCoinNegativeOp.home_coin)
  return home_coin_;
}
inline void SubCoinNegativeOp::set_home_coin(::google::protobuf::uint32 value) {
  
  home_coin_ = value;
  // @@protoc_insertion_point(field_set:proto.SubCoinNegativeOp.home_coin)
}

// .proto.PlatformType platform_type = 5;
inline void SubCoinNegativeOp::clear_platform_type() {
  platform_type_ = 0;
}
inline ::proto::PlatformType SubCoinNegativeOp::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.SubCoinNegativeOp.platform_type)
  return static_cast< ::proto::PlatformType >(platform_type_);
}
inline void SubCoinNegativeOp::set_platform_type(::proto::PlatformType value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SubCoinNegativeOp.platform_type)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SetQuestContentProgressOp

// uint32 quest_id = 1;
inline void SetQuestContentProgressOp::clear_quest_id() {
  quest_id_ = 0u;
}
inline ::google::protobuf::uint32 SetQuestContentProgressOp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.SetQuestContentProgressOp.quest_id)
  return quest_id_;
}
inline void SetQuestContentProgressOp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetQuestContentProgressOp.quest_id)
}

// map<uint32, uint32> finish_progress_map = 2;
inline int SetQuestContentProgressOp::finish_progress_map_size() const {
  return finish_progress_map_.size();
}
inline void SetQuestContentProgressOp::clear_finish_progress_map() {
  finish_progress_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SetQuestContentProgressOp::finish_progress_map() const {
  // @@protoc_insertion_point(field_map:proto.SetQuestContentProgressOp.finish_progress_map)
  return finish_progress_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SetQuestContentProgressOp::mutable_finish_progress_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SetQuestContentProgressOp.finish_progress_map)
  return finish_progress_map_.MutableMap();
}

// map<uint32, uint32> fail_progress_map = 3;
inline int SetQuestContentProgressOp::fail_progress_map_size() const {
  return fail_progress_map_.size();
}
inline void SetQuestContentProgressOp::clear_fail_progress_map() {
  fail_progress_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
SetQuestContentProgressOp::fail_progress_map() const {
  // @@protoc_insertion_point(field_map:proto.SetQuestContentProgressOp.fail_progress_map)
  return fail_progress_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
SetQuestContentProgressOp::mutable_fail_progress_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SetQuestContentProgressOp.fail_progress_map)
  return fail_progress_map_.MutableMap();
}

// -------------------------------------------------------------------

// FinishOrderOp

// uint32 order_id = 1;
inline void FinishOrderOp::clear_order_id() {
  order_id_ = 0u;
}
inline ::google::protobuf::uint32 FinishOrderOp::order_id() const {
  // @@protoc_insertion_point(field_get:proto.FinishOrderOp.order_id)
  return order_id_;
}
inline void FinishOrderOp::set_order_id(::google::protobuf::uint32 value) {
  
  order_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishOrderOp.order_id)
}

// -------------------------------------------------------------------

// AddOrModifyWatcherOp

// uint32 watcher_id = 1;
inline void AddOrModifyWatcherOp::clear_watcher_id() {
  watcher_id_ = 0u;
}
inline ::google::protobuf::uint32 AddOrModifyWatcherOp::watcher_id() const {
  // @@protoc_insertion_point(field_get:proto.AddOrModifyWatcherOp.watcher_id)
  return watcher_id_;
}
inline void AddOrModifyWatcherOp::set_watcher_id(::google::protobuf::uint32 value) {
  
  watcher_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddOrModifyWatcherOp.watcher_id)
}

// uint32 progress = 2;
inline void AddOrModifyWatcherOp::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 AddOrModifyWatcherOp::progress() const {
  // @@protoc_insertion_point(field_get:proto.AddOrModifyWatcherOp.progress)
  return progress_;
}
inline void AddOrModifyWatcherOp::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.AddOrModifyWatcherOp.progress)
}

// -------------------------------------------------------------------

// DelWatcherOp

// uint32 watcher_id = 1;
inline void DelWatcherOp::clear_watcher_id() {
  watcher_id_ = 0u;
}
inline ::google::protobuf::uint32 DelWatcherOp::watcher_id() const {
  // @@protoc_insertion_point(field_get:proto.DelWatcherOp.watcher_id)
  return watcher_id_;
}
inline void DelWatcherOp::set_watcher_id(::google::protobuf::uint32 value) {
  
  watcher_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelWatcherOp.watcher_id)
}

// -------------------------------------------------------------------

// SetSignatureOp

// string signature = 1;
inline void SetSignatureOp::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetSignatureOp::signature() const {
  // @@protoc_insertion_point(field_get:proto.SetSignatureOp.signature)
  return signature_.GetNoArena();
}
inline void SetSignatureOp::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SetSignatureOp.signature)
}
#if LANG_CXX11
inline void SetSignatureOp::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SetSignatureOp.signature)
}
#endif
inline void SetSignatureOp::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SetSignatureOp.signature)
}
inline void SetSignatureOp::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SetSignatureOp.signature)
}
inline ::std::string* SetSignatureOp::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SetSignatureOp.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetSignatureOp::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SetSignatureOp.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetSignatureOp::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SetSignatureOp.signature)
}

// -------------------------------------------------------------------

// AddOrSubResinOp

// uint32 delta_count = 1;
inline void AddOrSubResinOp::clear_delta_count() {
  delta_count_ = 0u;
}
inline ::google::protobuf::uint32 AddOrSubResinOp::delta_count() const {
  // @@protoc_insertion_point(field_get:proto.AddOrSubResinOp.delta_count)
  return delta_count_;
}
inline void AddOrSubResinOp::set_delta_count(::google::protobuf::uint32 value) {
  
  delta_count_ = value;
  // @@protoc_insertion_point(field_set:proto.AddOrSubResinOp.delta_count)
}

// bool is_sub = 2;
inline void AddOrSubResinOp::clear_is_sub() {
  is_sub_ = false;
}
inline bool AddOrSubResinOp::is_sub() const {
  // @@protoc_insertion_point(field_get:proto.AddOrSubResinOp.is_sub)
  return is_sub_;
}
inline void AddOrSubResinOp::set_is_sub(bool value) {
  
  is_sub_ = value;
  // @@protoc_insertion_point(field_set:proto.AddOrSubResinOp.is_sub)
}

// -------------------------------------------------------------------

// SetQuestGlobalVarValueOp

// uint32 id = 1;
inline void SetQuestGlobalVarValueOp::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SetQuestGlobalVarValueOp::id() const {
  // @@protoc_insertion_point(field_get:proto.SetQuestGlobalVarValueOp.id)
  return id_;
}
inline void SetQuestGlobalVarValueOp::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetQuestGlobalVarValueOp.id)
}

// int32 value = 2;
inline void SetQuestGlobalVarValueOp::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 SetQuestGlobalVarValueOp::value() const {
  // @@protoc_insertion_point(field_get:proto.SetQuestGlobalVarValueOp.value)
  return value_;
}
inline void SetQuestGlobalVarValueOp::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.SetQuestGlobalVarValueOp.value)
}

// -------------------------------------------------------------------

// AddMcoinVipPointOp

// uint32 mcoin = 1;
inline void AddMcoinVipPointOp::clear_mcoin() {
  mcoin_ = 0u;
}
inline ::google::protobuf::uint32 AddMcoinVipPointOp::mcoin() const {
  // @@protoc_insertion_point(field_get:proto.AddMcoinVipPointOp.mcoin)
  return mcoin_;
}
inline void AddMcoinVipPointOp::set_mcoin(::google::protobuf::uint32 value) {
  
  mcoin_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMcoinVipPointOp.mcoin)
}

// uint32 vip_point = 2;
inline void AddMcoinVipPointOp::clear_vip_point() {
  vip_point_ = 0u;
}
inline ::google::protobuf::uint32 AddMcoinVipPointOp::vip_point() const {
  // @@protoc_insertion_point(field_get:proto.AddMcoinVipPointOp.vip_point)
  return vip_point_;
}
inline void AddMcoinVipPointOp::set_vip_point(::google::protobuf::uint32 value) {
  
  vip_point_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMcoinVipPointOp.vip_point)
}

// .proto.PlatformType platform_type = 3;
inline void AddMcoinVipPointOp::clear_platform_type() {
  platform_type_ = 0;
}
inline ::proto::PlatformType AddMcoinVipPointOp::platform_type() const {
  // @@protoc_insertion_point(field_get:proto.AddMcoinVipPointOp.platform_type)
  return static_cast< ::proto::PlatformType >(platform_type_);
}
inline void AddMcoinVipPointOp::set_platform_type(::proto::PlatformType value) {
  
  platform_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AddMcoinVipPointOp.platform_type)
}

// -------------------------------------------------------------------

// ExchangeMcoinOp

// uint32 num = 1;
inline void ExchangeMcoinOp::clear_num() {
  num_ = 0u;
}
inline ::google::protobuf::uint32 ExchangeMcoinOp::num() const {
  // @@protoc_insertion_point(field_get:proto.ExchangeMcoinOp.num)
  return num_;
}
inline void ExchangeMcoinOp::set_num(::google::protobuf::uint32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:proto.ExchangeMcoinOp.num)
}

// .proto.ExchangeMcoinType exchange_type = 2;
inline void ExchangeMcoinOp::clear_exchange_type() {
  exchange_type_ = 0;
}
inline ::proto::ExchangeMcoinType ExchangeMcoinOp::exchange_type() const {
  // @@protoc_insertion_point(field_get:proto.ExchangeMcoinOp.exchange_type)
  return static_cast< ::proto::ExchangeMcoinType >(exchange_type_);
}
inline void ExchangeMcoinOp::set_exchange_type(::proto::ExchangeMcoinType value) {
  
  exchange_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ExchangeMcoinOp.exchange_type)
}

// -------------------------------------------------------------------

// GroupBinOp

// .proto.GroupBinOperation op_type = 1;
inline void GroupBinOp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::GroupBinOperation GroupBinOp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.op_type)
  return static_cast< ::proto::GroupBinOperation >(op_type_);
}
inline void GroupBinOp::set_op_type(::proto::GroupBinOperation value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.op_type)
}

// uint32 group_id = 2;
inline void GroupBinOp::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 GroupBinOp::group_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.group_id)
  return group_id_;
}
inline void GroupBinOp::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.group_id)
}

// uint32 config_id = 3;
inline void GroupBinOp::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 GroupBinOp::config_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.config_id)
  return config_id_;
}
inline void GroupBinOp::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.config_id)
}

// bool is_add = 4;
inline void GroupBinOp::clear_is_add() {
  is_add_ = false;
}
inline bool GroupBinOp::is_add() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.is_add)
  return is_add_;
}
inline void GroupBinOp::set_is_add(bool value) {
  
  is_add_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.is_add)
}

// uint32 state = 5;
inline void GroupBinOp::clear_state() {
  state_ = 0u;
}
inline ::google::protobuf::uint32 GroupBinOp::state() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.state)
  return state_;
}
inline void GroupBinOp::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.state)
}

// bool is_create = 6;
inline void GroupBinOp::clear_is_create() {
  is_create_ = false;
}
inline bool GroupBinOp::is_create() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.is_create)
  return is_create_;
}
inline void GroupBinOp::set_is_create(bool value) {
  
  is_create_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.is_create)
}

// string trigger_name = 7;
inline void GroupBinOp::clear_trigger_name() {
  trigger_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupBinOp::trigger_name() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.trigger_name)
  return trigger_name_.GetNoArena();
}
inline void GroupBinOp::set_trigger_name(const ::std::string& value) {
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.trigger_name)
}
#if LANG_CXX11
inline void GroupBinOp::set_trigger_name(::std::string&& value) {
  
  trigger_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GroupBinOp.trigger_name)
}
#endif
inline void GroupBinOp::set_trigger_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GroupBinOp.trigger_name)
}
inline void GroupBinOp::set_trigger_name(const char* value, size_t size) {
  
  trigger_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GroupBinOp.trigger_name)
}
inline ::std::string* GroupBinOp::mutable_trigger_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.GroupBinOp.trigger_name)
  return trigger_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupBinOp::release_trigger_name() {
  // @@protoc_insertion_point(field_release:proto.GroupBinOp.trigger_name)
  
  return trigger_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupBinOp::set_allocated_trigger_name(::std::string* trigger_name) {
  if (trigger_name != NULL) {
    
  } else {
    
  }
  trigger_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trigger_name);
  // @@protoc_insertion_point(field_set_allocated:proto.GroupBinOp.trigger_name)
}

// uint32 trigger_count = 8;
inline void GroupBinOp::clear_trigger_count() {
  trigger_count_ = 0u;
}
inline ::google::protobuf::uint32 GroupBinOp::trigger_count() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.trigger_count)
  return trigger_count_;
}
inline void GroupBinOp::set_trigger_count(::google::protobuf::uint32 value) {
  
  trigger_count_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.trigger_count)
}

// string variable_name = 9;
inline void GroupBinOp::clear_variable_name() {
  variable_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GroupBinOp::variable_name() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.variable_name)
  return variable_name_.GetNoArena();
}
inline void GroupBinOp::set_variable_name(const ::std::string& value) {
  
  variable_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.variable_name)
}
#if LANG_CXX11
inline void GroupBinOp::set_variable_name(::std::string&& value) {
  
  variable_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.GroupBinOp.variable_name)
}
#endif
inline void GroupBinOp::set_variable_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  variable_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.GroupBinOp.variable_name)
}
inline void GroupBinOp::set_variable_name(const char* value, size_t size) {
  
  variable_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.GroupBinOp.variable_name)
}
inline ::std::string* GroupBinOp::mutable_variable_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.GroupBinOp.variable_name)
  return variable_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GroupBinOp::release_variable_name() {
  // @@protoc_insertion_point(field_release:proto.GroupBinOp.variable_name)
  
  return variable_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GroupBinOp::set_allocated_variable_name(::std::string* variable_name) {
  if (variable_name != NULL) {
    
  } else {
    
  }
  variable_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), variable_name);
  // @@protoc_insertion_point(field_set_allocated:proto.GroupBinOp.variable_name)
}

// int32 variable_value = 10;
inline void GroupBinOp::clear_variable_value() {
  variable_value_ = 0;
}
inline ::google::protobuf::int32 GroupBinOp::variable_value() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.variable_value)
  return variable_value_;
}
inline void GroupBinOp::set_variable_value(::google::protobuf::int32 value) {
  
  variable_value_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.variable_value)
}

// uint32 target_suite = 11;
inline void GroupBinOp::clear_target_suite() {
  target_suite_ = 0u;
}
inline ::google::protobuf::uint32 GroupBinOp::target_suite() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.target_suite)
  return target_suite_;
}
inline void GroupBinOp::set_target_suite(::google::protobuf::uint32 value) {
  
  target_suite_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.target_suite)
}

// uint32 scene_id = 12;
inline void GroupBinOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 GroupBinOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupBinOp.scene_id)
  return scene_id_;
}
inline void GroupBinOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupBinOp.scene_id)
}

// -------------------------------------------------------------------

// DelOneOffOp

// uint32 group_id = 1;
inline void DelOneOffOp::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 DelOneOffOp::group_id() const {
  // @@protoc_insertion_point(field_get:proto.DelOneOffOp.group_id)
  return group_id_;
}
inline void DelOneOffOp::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelOneOffOp.group_id)
}

// uint32 config_id = 2;
inline void DelOneOffOp::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 DelOneOffOp::config_id() const {
  // @@protoc_insertion_point(field_get:proto.DelOneOffOp.config_id)
  return config_id_;
}
inline void DelOneOffOp::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelOneOffOp.config_id)
}

// bool is_monster = 3;
inline void DelOneOffOp::clear_is_monster() {
  is_monster_ = false;
}
inline bool DelOneOffOp::is_monster() const {
  // @@protoc_insertion_point(field_get:proto.DelOneOffOp.is_monster)
  return is_monster_;
}
inline void DelOneOffOp::set_is_monster(bool value) {
  
  is_monster_ = value;
  // @@protoc_insertion_point(field_set:proto.DelOneOffOp.is_monster)
}

// uint32 scene_id = 4;
inline void DelOneOffOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 DelOneOffOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.DelOneOffOp.scene_id)
  return scene_id_;
}
inline void DelOneOffOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelOneOffOp.scene_id)
}

// -------------------------------------------------------------------

// FinishRoutineOp

// uint32 routine_id = 1;
inline void FinishRoutineOp::clear_routine_id() {
  routine_id_ = 0u;
}
inline ::google::protobuf::uint32 FinishRoutineOp::routine_id() const {
  // @@protoc_insertion_point(field_get:proto.FinishRoutineOp.routine_id)
  return routine_id_;
}
inline void FinishRoutineOp::set_routine_id(::google::protobuf::uint32 value) {
  
  routine_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishRoutineOp.routine_id)
}

// -------------------------------------------------------------------

// FinishDailyTaskUnloadGroupOp

// uint32 daily_task_id = 1;
inline void FinishDailyTaskUnloadGroupOp::clear_daily_task_id() {
  daily_task_id_ = 0u;
}
inline ::google::protobuf::uint32 FinishDailyTaskUnloadGroupOp::daily_task_id() const {
  // @@protoc_insertion_point(field_get:proto.FinishDailyTaskUnloadGroupOp.daily_task_id)
  return daily_task_id_;
}
inline void FinishDailyTaskUnloadGroupOp::set_daily_task_id(::google::protobuf::uint32 value) {
  
  daily_task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishDailyTaskUnloadGroupOp.daily_task_id)
}

// uint32 daily_time = 2;
inline void FinishDailyTaskUnloadGroupOp::clear_daily_time() {
  daily_time_ = 0u;
}
inline ::google::protobuf::uint32 FinishDailyTaskUnloadGroupOp::daily_time() const {
  // @@protoc_insertion_point(field_get:proto.FinishDailyTaskUnloadGroupOp.daily_time)
  return daily_time_;
}
inline void FinishDailyTaskUnloadGroupOp::set_daily_time(::google::protobuf::uint32 value) {
  
  daily_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FinishDailyTaskUnloadGroupOp.daily_time)
}

// -------------------------------------------------------------------

// RefreshBlossomCircleCampOp

// uint32 refresh_id = 1;
inline void RefreshBlossomCircleCampOp::clear_refresh_id() {
  refresh_id_ = 0u;
}
inline ::google::protobuf::uint32 RefreshBlossomCircleCampOp::refresh_id() const {
  // @@protoc_insertion_point(field_get:proto.RefreshBlossomCircleCampOp.refresh_id)
  return refresh_id_;
}
inline void RefreshBlossomCircleCampOp::set_refresh_id(::google::protobuf::uint32 value) {
  
  refresh_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RefreshBlossomCircleCampOp.refresh_id)
}

// uint32 circle_camp_id = 2;
inline void RefreshBlossomCircleCampOp::clear_circle_camp_id() {
  circle_camp_id_ = 0u;
}
inline ::google::protobuf::uint32 RefreshBlossomCircleCampOp::circle_camp_id() const {
  // @@protoc_insertion_point(field_get:proto.RefreshBlossomCircleCampOp.circle_camp_id)
  return circle_camp_id_;
}
inline void RefreshBlossomCircleCampOp::set_circle_camp_id(::google::protobuf::uint32 value) {
  
  circle_camp_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RefreshBlossomCircleCampOp.circle_camp_id)
}

// -------------------------------------------------------------------

// BlessingActivityGivePicOp

// uint32 source_uid = 1;
inline void BlessingActivityGivePicOp::clear_source_uid() {
  source_uid_ = 0u;
}
inline ::google::protobuf::uint32 BlessingActivityGivePicOp::source_uid() const {
  // @@protoc_insertion_point(field_get:proto.BlessingActivityGivePicOp.source_uid)
  return source_uid_;
}
inline void BlessingActivityGivePicOp::set_source_uid(::google::protobuf::uint32 value) {
  
  source_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BlessingActivityGivePicOp.source_uid)
}

// uint32 target_uid = 2;
inline void BlessingActivityGivePicOp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 BlessingActivityGivePicOp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.BlessingActivityGivePicOp.target_uid)
  return target_uid_;
}
inline void BlessingActivityGivePicOp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BlessingActivityGivePicOp.target_uid)
}

// uint32 pic_id = 3;
inline void BlessingActivityGivePicOp::clear_pic_id() {
  pic_id_ = 0u;
}
inline ::google::protobuf::uint32 BlessingActivityGivePicOp::pic_id() const {
  // @@protoc_insertion_point(field_get:proto.BlessingActivityGivePicOp.pic_id)
  return pic_id_;
}
inline void BlessingActivityGivePicOp::set_pic_id(::google::protobuf::uint32 value) {
  
  pic_id_ = value;
  // @@protoc_insertion_point(field_set:proto.BlessingActivityGivePicOp.pic_id)
}

// -------------------------------------------------------------------

// ExpeditionActivityAssistOp

// uint32 avatar_id = 1;
inline void ExpeditionActivityAssistOp::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 ExpeditionActivityAssistOp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.ExpeditionActivityAssistOp.avatar_id)
  return avatar_id_;
}
inline void ExpeditionActivityAssistOp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExpeditionActivityAssistOp.avatar_id)
}

// uint32 assist_time = 2;
inline void ExpeditionActivityAssistOp::clear_assist_time() {
  assist_time_ = 0u;
}
inline ::google::protobuf::uint32 ExpeditionActivityAssistOp::assist_time() const {
  // @@protoc_insertion_point(field_get:proto.ExpeditionActivityAssistOp.assist_time)
  return assist_time_;
}
inline void ExpeditionActivityAssistOp::set_assist_time(::google::protobuf::uint32 value) {
  
  assist_time_ = value;
  // @@protoc_insertion_point(field_set:proto.ExpeditionActivityAssistOp.assist_time)
}

// uint32 target_uid = 3;
inline void ExpeditionActivityAssistOp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 ExpeditionActivityAssistOp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.ExpeditionActivityAssistOp.target_uid)
  return target_uid_;
}
inline void ExpeditionActivityAssistOp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ExpeditionActivityAssistOp.target_uid)
}

// string target_nick_name = 4;
inline void ExpeditionActivityAssistOp::clear_target_nick_name() {
  target_nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExpeditionActivityAssistOp::target_nick_name() const {
  // @@protoc_insertion_point(field_get:proto.ExpeditionActivityAssistOp.target_nick_name)
  return target_nick_name_.GetNoArena();
}
inline void ExpeditionActivityAssistOp::set_target_nick_name(const ::std::string& value) {
  
  target_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ExpeditionActivityAssistOp.target_nick_name)
}
#if LANG_CXX11
inline void ExpeditionActivityAssistOp::set_target_nick_name(::std::string&& value) {
  
  target_nick_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ExpeditionActivityAssistOp.target_nick_name)
}
#endif
inline void ExpeditionActivityAssistOp::set_target_nick_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ExpeditionActivityAssistOp.target_nick_name)
}
inline void ExpeditionActivityAssistOp::set_target_nick_name(const char* value, size_t size) {
  
  target_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ExpeditionActivityAssistOp.target_nick_name)
}
inline ::std::string* ExpeditionActivityAssistOp::mutable_target_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.ExpeditionActivityAssistOp.target_nick_name)
  return target_nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExpeditionActivityAssistOp::release_target_nick_name() {
  // @@protoc_insertion_point(field_release:proto.ExpeditionActivityAssistOp.target_nick_name)
  
  return target_nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExpeditionActivityAssistOp::set_allocated_target_nick_name(::std::string* target_nick_name) {
  if (target_nick_name != NULL) {
    
  } else {
    
  }
  target_nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_nick_name);
  // @@protoc_insertion_point(field_set_allocated:proto.ExpeditionActivityAssistOp.target_nick_name)
}

// string online_id = 5;
inline void ExpeditionActivityAssistOp::clear_online_id() {
  online_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExpeditionActivityAssistOp::online_id() const {
  // @@protoc_insertion_point(field_get:proto.ExpeditionActivityAssistOp.online_id)
  return online_id_.GetNoArena();
}
inline void ExpeditionActivityAssistOp::set_online_id(const ::std::string& value) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.ExpeditionActivityAssistOp.online_id)
}
#if LANG_CXX11
inline void ExpeditionActivityAssistOp::set_online_id(::std::string&& value) {
  
  online_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.ExpeditionActivityAssistOp.online_id)
}
#endif
inline void ExpeditionActivityAssistOp::set_online_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.ExpeditionActivityAssistOp.online_id)
}
inline void ExpeditionActivityAssistOp::set_online_id(const char* value, size_t size) {
  
  online_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.ExpeditionActivityAssistOp.online_id)
}
inline ::std::string* ExpeditionActivityAssistOp::mutable_online_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.ExpeditionActivityAssistOp.online_id)
  return online_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExpeditionActivityAssistOp::release_online_id() {
  // @@protoc_insertion_point(field_release:proto.ExpeditionActivityAssistOp.online_id)
  
  return online_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExpeditionActivityAssistOp::set_allocated_online_id(::std::string* online_id) {
  if (online_id != NULL) {
    
  } else {
    
  }
  online_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), online_id);
  // @@protoc_insertion_point(field_set_allocated:proto.ExpeditionActivityAssistOp.online_id)
}

// uint32 assist_uid = 6;
inline void ExpeditionActivityAssistOp::clear_assist_uid() {
  assist_uid_ = 0u;
}
inline ::google::protobuf::uint32 ExpeditionActivityAssistOp::assist_uid() const {
  // @@protoc_insertion_point(field_get:proto.ExpeditionActivityAssistOp.assist_uid)
  return assist_uid_;
}
inline void ExpeditionActivityAssistOp::set_assist_uid(::google::protobuf::uint32 value) {
  
  assist_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.ExpeditionActivityAssistOp.assist_uid)
}

// -------------------------------------------------------------------

// RecoverWorldLevelOp

// -------------------------------------------------------------------

// AddRegionSearchProgressOp

// uint32 region_id = 1;
inline void AddRegionSearchProgressOp::clear_region_id() {
  region_id_ = 0u;
}
inline ::google::protobuf::uint32 AddRegionSearchProgressOp::region_id() const {
  // @@protoc_insertion_point(field_get:proto.AddRegionSearchProgressOp.region_id)
  return region_id_;
}
inline void AddRegionSearchProgressOp::set_region_id(::google::protobuf::uint32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRegionSearchProgressOp.region_id)
}

// uint32 add_recycle = 2;
inline void AddRegionSearchProgressOp::clear_add_recycle() {
  add_recycle_ = 0u;
}
inline ::google::protobuf::uint32 AddRegionSearchProgressOp::add_recycle() const {
  // @@protoc_insertion_point(field_get:proto.AddRegionSearchProgressOp.add_recycle)
  return add_recycle_;
}
inline void AddRegionSearchProgressOp::set_add_recycle(::google::protobuf::uint32 value) {
  
  add_recycle_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRegionSearchProgressOp.add_recycle)
}

// uint32 add_progress = 3;
inline void AddRegionSearchProgressOp::clear_add_progress() {
  add_progress_ = 0u;
}
inline ::google::protobuf::uint32 AddRegionSearchProgressOp::add_progress() const {
  // @@protoc_insertion_point(field_get:proto.AddRegionSearchProgressOp.add_progress)
  return add_progress_;
}
inline void AddRegionSearchProgressOp::set_add_progress(::google::protobuf::uint32 value) {
  
  add_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.AddRegionSearchProgressOp.add_progress)
}

// -------------------------------------------------------------------

// SetMatchPunishTimesOp

// uint32 match_id = 1;
inline void SetMatchPunishTimesOp::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 SetMatchPunishTimesOp::match_id() const {
  // @@protoc_insertion_point(field_get:proto.SetMatchPunishTimesOp.match_id)
  return match_id_;
}
inline void SetMatchPunishTimesOp::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetMatchPunishTimesOp.match_id)
}

// uint32 punish_times = 2;
inline void SetMatchPunishTimesOp::clear_punish_times() {
  punish_times_ = 0u;
}
inline ::google::protobuf::uint32 SetMatchPunishTimesOp::punish_times() const {
  // @@protoc_insertion_point(field_get:proto.SetMatchPunishTimesOp.punish_times)
  return punish_times_;
}
inline void SetMatchPunishTimesOp::set_punish_times(::google::protobuf::uint32 value) {
  
  punish_times_ = value;
  // @@protoc_insertion_point(field_set:proto.SetMatchPunishTimesOp.punish_times)
}

// -------------------------------------------------------------------

// ResetChannellerSlabCampGroupOp

// uint32 stage_id = 1;
inline void ResetChannellerSlabCampGroupOp::clear_stage_id() {
  stage_id_ = 0u;
}
inline ::google::protobuf::uint32 ResetChannellerSlabCampGroupOp::stage_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetChannellerSlabCampGroupOp.stage_id)
  return stage_id_;
}
inline void ResetChannellerSlabCampGroupOp::set_stage_id(::google::protobuf::uint32 value) {
  
  stage_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetChannellerSlabCampGroupOp.stage_id)
}

// uint32 round_id = 2;
inline void ResetChannellerSlabCampGroupOp::clear_round_id() {
  round_id_ = 0u;
}
inline ::google::protobuf::uint32 ResetChannellerSlabCampGroupOp::round_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetChannellerSlabCampGroupOp.round_id)
  return round_id_;
}
inline void ResetChannellerSlabCampGroupOp::set_round_id(::google::protobuf::uint32 value) {
  
  round_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetChannellerSlabCampGroupOp.round_id)
}

// -------------------------------------------------------------------

// ForceAcceptQuestOp

// uint32 quest_id = 1;
inline void ForceAcceptQuestOp::clear_quest_id() {
  quest_id_ = 0u;
}
inline ::google::protobuf::uint32 ForceAcceptQuestOp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.ForceAcceptQuestOp.quest_id)
  return quest_id_;
}
inline void ForceAcceptQuestOp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ForceAcceptQuestOp.quest_id)
}

// -------------------------------------------------------------------

// SetMainCoopConfidenceOp

// uint32 confidence = 1;
inline void SetMainCoopConfidenceOp::clear_confidence() {
  confidence_ = 0u;
}
inline ::google::protobuf::uint32 SetMainCoopConfidenceOp::confidence() const {
  // @@protoc_insertion_point(field_get:proto.SetMainCoopConfidenceOp.confidence)
  return confidence_;
}
inline void SetMainCoopConfidenceOp::set_confidence(::google::protobuf::uint32 value) {
  
  confidence_ = value;
  // @@protoc_insertion_point(field_set:proto.SetMainCoopConfidenceOp.confidence)
}

// -------------------------------------------------------------------

// AddCoopPointSavePointListOp

// uint32 coop_point_id = 1;
inline void AddCoopPointSavePointListOp::clear_coop_point_id() {
  coop_point_id_ = 0u;
}
inline ::google::protobuf::uint32 AddCoopPointSavePointListOp::coop_point_id() const {
  // @@protoc_insertion_point(field_get:proto.AddCoopPointSavePointListOp.coop_point_id)
  return coop_point_id_;
}
inline void AddCoopPointSavePointListOp::set_coop_point_id(::google::protobuf::uint32 value) {
  
  coop_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddCoopPointSavePointListOp.coop_point_id)
}

// repeated uint32 save_point_list = 2;
inline int AddCoopPointSavePointListOp::save_point_list_size() const {
  return save_point_list_.size();
}
inline void AddCoopPointSavePointListOp::clear_save_point_list() {
  save_point_list_.Clear();
}
inline ::google::protobuf::uint32 AddCoopPointSavePointListOp::save_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AddCoopPointSavePointListOp.save_point_list)
  return save_point_list_.Get(index);
}
inline void AddCoopPointSavePointListOp::set_save_point_list(int index, ::google::protobuf::uint32 value) {
  save_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AddCoopPointSavePointListOp.save_point_list)
}
inline void AddCoopPointSavePointListOp::add_save_point_list(::google::protobuf::uint32 value) {
  save_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AddCoopPointSavePointListOp.save_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AddCoopPointSavePointListOp::save_point_list() const {
  // @@protoc_insertion_point(field_list:proto.AddCoopPointSavePointListOp.save_point_list)
  return save_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AddCoopPointSavePointListOp::mutable_save_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AddCoopPointSavePointListOp.save_point_list)
  return &save_point_list_;
}

// -------------------------------------------------------------------

// SetClimateAreaTypeOp

// uint32 scene_id = 1;
inline void SetClimateAreaTypeOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SetClimateAreaTypeOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SetClimateAreaTypeOp.scene_id)
  return scene_id_;
}
inline void SetClimateAreaTypeOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetClimateAreaTypeOp.scene_id)
}

// uint32 climate_area_id = 2;
inline void SetClimateAreaTypeOp::clear_climate_area_id() {
  climate_area_id_ = 0u;
}
inline ::google::protobuf::uint32 SetClimateAreaTypeOp::climate_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SetClimateAreaTypeOp.climate_area_id)
  return climate_area_id_;
}
inline void SetClimateAreaTypeOp::set_climate_area_id(::google::protobuf::uint32 value) {
  
  climate_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetClimateAreaTypeOp.climate_area_id)
}

// uint32 climate_type = 3;
inline void SetClimateAreaTypeOp::clear_climate_type() {
  climate_type_ = 0u;
}
inline ::google::protobuf::uint32 SetClimateAreaTypeOp::climate_type() const {
  // @@protoc_insertion_point(field_get:proto.SetClimateAreaTypeOp.climate_type)
  return climate_type_;
}
inline void SetClimateAreaTypeOp::set_climate_type(::google::protobuf::uint32 value) {
  
  climate_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SetClimateAreaTypeOp.climate_type)
}

// -------------------------------------------------------------------

// ProcSceneTagOp

// uint32 scene_id = 1;
inline void ProcSceneTagOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ProcSceneTagOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ProcSceneTagOp.scene_id)
  return scene_id_;
}
inline void ProcSceneTagOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ProcSceneTagOp.scene_id)
}

// uint32 scene_tag_id = 2;
inline void ProcSceneTagOp::clear_scene_tag_id() {
  scene_tag_id_ = 0u;
}
inline ::google::protobuf::uint32 ProcSceneTagOp::scene_tag_id() const {
  // @@protoc_insertion_point(field_get:proto.ProcSceneTagOp.scene_tag_id)
  return scene_tag_id_;
}
inline void ProcSceneTagOp::set_scene_tag_id(::google::protobuf::uint32 value) {
  
  scene_tag_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ProcSceneTagOp.scene_tag_id)
}

// .proto.SceneTagOpType op_type = 3;
inline void ProcSceneTagOp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::SceneTagOpType ProcSceneTagOp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.ProcSceneTagOp.op_type)
  return static_cast< ::proto::SceneTagOpType >(op_type_);
}
inline void ProcSceneTagOp::set_op_type(::proto::SceneTagOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.ProcSceneTagOp.op_type)
}

// -------------------------------------------------------------------

// SetFinishedParentQuestChildStateOp

// uint32 quest_id = 1;
inline void SetFinishedParentQuestChildStateOp::clear_quest_id() {
  quest_id_ = 0u;
}
inline ::google::protobuf::uint32 SetFinishedParentQuestChildStateOp::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.SetFinishedParentQuestChildStateOp.quest_id)
  return quest_id_;
}
inline void SetFinishedParentQuestChildStateOp::set_quest_id(::google::protobuf::uint32 value) {
  
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetFinishedParentQuestChildStateOp.quest_id)
}

// uint32 state = 2;
inline void SetFinishedParentQuestChildStateOp::clear_state() {
  state_ = 0u;
}
inline ::google::protobuf::uint32 SetFinishedParentQuestChildStateOp::state() const {
  // @@protoc_insertion_point(field_get:proto.SetFinishedParentQuestChildStateOp.state)
  return state_;
}
inline void SetFinishedParentQuestChildStateOp::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.SetFinishedParentQuestChildStateOp.state)
}

// -------------------------------------------------------------------

// ChangeMapAreaInfoOp

// uint32 map_area_id = 1;
inline void ChangeMapAreaInfoOp::clear_map_area_id() {
  map_area_id_ = 0u;
}
inline ::google::protobuf::uint32 ChangeMapAreaInfoOp::map_area_id() const {
  // @@protoc_insertion_point(field_get:proto.ChangeMapAreaInfoOp.map_area_id)
  return map_area_id_;
}
inline void ChangeMapAreaInfoOp::set_map_area_id(::google::protobuf::uint32 value) {
  
  map_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeMapAreaInfoOp.map_area_id)
}

// bool is_open = 2;
inline void ChangeMapAreaInfoOp::clear_is_open() {
  is_open_ = false;
}
inline bool ChangeMapAreaInfoOp::is_open() const {
  // @@protoc_insertion_point(field_get:proto.ChangeMapAreaInfoOp.is_open)
  return is_open_;
}
inline void ChangeMapAreaInfoOp::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.ChangeMapAreaInfoOp.is_open)
}

// -------------------------------------------------------------------

// SetLevel1AreaExplorePointOp

// uint32 scene_id = 1;
inline void SetLevel1AreaExplorePointOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 SetLevel1AreaExplorePointOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.SetLevel1AreaExplorePointOp.scene_id)
  return scene_id_;
}
inline void SetLevel1AreaExplorePointOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetLevel1AreaExplorePointOp.scene_id)
}

// uint32 level1_area_id = 2;
inline void SetLevel1AreaExplorePointOp::clear_level1_area_id() {
  level1_area_id_ = 0u;
}
inline ::google::protobuf::uint32 SetLevel1AreaExplorePointOp::level1_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SetLevel1AreaExplorePointOp.level1_area_id)
  return level1_area_id_;
}
inline void SetLevel1AreaExplorePointOp::set_level1_area_id(::google::protobuf::uint32 value) {
  
  level1_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetLevel1AreaExplorePointOp.level1_area_id)
}

// uint32 explore_point = 3;
inline void SetLevel1AreaExplorePointOp::clear_explore_point() {
  explore_point_ = 0u;
}
inline ::google::protobuf::uint32 SetLevel1AreaExplorePointOp::explore_point() const {
  // @@protoc_insertion_point(field_get:proto.SetLevel1AreaExplorePointOp.explore_point)
  return explore_point_;
}
inline void SetLevel1AreaExplorePointOp::set_explore_point(::google::protobuf::uint32 value) {
  
  explore_point_ = value;
  // @@protoc_insertion_point(field_set:proto.SetLevel1AreaExplorePointOp.explore_point)
}

// -------------------------------------------------------------------

// SetCodexOpenOrCloseOp

// uint32 codex_type = 1;
inline void SetCodexOpenOrCloseOp::clear_codex_type() {
  codex_type_ = 0u;
}
inline ::google::protobuf::uint32 SetCodexOpenOrCloseOp::codex_type() const {
  // @@protoc_insertion_point(field_get:proto.SetCodexOpenOrCloseOp.codex_type)
  return codex_type_;
}
inline void SetCodexOpenOrCloseOp::set_codex_type(::google::protobuf::uint32 value) {
  
  codex_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SetCodexOpenOrCloseOp.codex_type)
}

// uint32 codex_id = 2;
inline void SetCodexOpenOrCloseOp::clear_codex_id() {
  codex_id_ = 0u;
}
inline ::google::protobuf::uint32 SetCodexOpenOrCloseOp::codex_id() const {
  // @@protoc_insertion_point(field_get:proto.SetCodexOpenOrCloseOp.codex_id)
  return codex_id_;
}
inline void SetCodexOpenOrCloseOp::set_codex_id(::google::protobuf::uint32 value) {
  
  codex_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetCodexOpenOrCloseOp.codex_id)
}

// bool is_open = 3;
inline void SetCodexOpenOrCloseOp::clear_is_open() {
  is_open_ = false;
}
inline bool SetCodexOpenOrCloseOp::is_open() const {
  // @@protoc_insertion_point(field_get:proto.SetCodexOpenOrCloseOp.is_open)
  return is_open_;
}
inline void SetCodexOpenOrCloseOp::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.SetCodexOpenOrCloseOp.is_open)
}

// -------------------------------------------------------------------

// GroupLinkOp

// .proto.GroupLinkOpType op_type = 1;
inline void GroupLinkOp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::GroupLinkOpType GroupLinkOp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkOp.op_type)
  return static_cast< ::proto::GroupLinkOpType >(op_type_);
}
inline void GroupLinkOp::set_op_type(::proto::GroupLinkOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupLinkOp.op_type)
}

// uint32 group_bundle_id = 2;
inline void GroupLinkOp::clear_group_bundle_id() {
  group_bundle_id_ = 0u;
}
inline ::google::protobuf::uint32 GroupLinkOp::group_bundle_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkOp.group_bundle_id)
  return group_bundle_id_;
}
inline void GroupLinkOp::set_group_bundle_id(::google::protobuf::uint32 value) {
  
  group_bundle_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupLinkOp.group_bundle_id)
}

// uint32 activity_id = 3;
inline void GroupLinkOp::clear_activity_id() {
  activity_id_ = 0u;
}
inline ::google::protobuf::uint32 GroupLinkOp::activity_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupLinkOp.activity_id)
  return activity_id_;
}
inline void GroupLinkOp::set_activity_id(::google::protobuf::uint32 value) {
  
  activity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupLinkOp.activity_id)
}

// -------------------------------------------------------------------

// SetWatcherCompRecordValueOp

// float max_critical_damage = 1;
inline bool SetWatcherCompRecordValueOp::has_max_critical_damage() const {
  return optional_max_critical_damage_case() == kMaxCriticalDamage;
}
inline void SetWatcherCompRecordValueOp::set_has_max_critical_damage() {
  _oneof_case_[0] = kMaxCriticalDamage;
}
inline void SetWatcherCompRecordValueOp::clear_max_critical_damage() {
  if (has_max_critical_damage()) {
    optional_max_critical_damage_.max_critical_damage_ = 0;
    clear_has_optional_max_critical_damage();
  }
}
inline float SetWatcherCompRecordValueOp::max_critical_damage() const {
  // @@protoc_insertion_point(field_get:proto.SetWatcherCompRecordValueOp.max_critical_damage)
  if (has_max_critical_damage()) {
    return optional_max_critical_damage_.max_critical_damage_;
  }
  return 0;
}
inline void SetWatcherCompRecordValueOp::set_max_critical_damage(float value) {
  if (!has_max_critical_damage()) {
    clear_optional_max_critical_damage();
    set_has_max_critical_damage();
  }
  optional_max_critical_damage_.max_critical_damage_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWatcherCompRecordValueOp.max_critical_damage)
}

// float max_fly_map_distance = 2;
inline bool SetWatcherCompRecordValueOp::has_max_fly_map_distance() const {
  return optional_max_fly_map_distance_case() == kMaxFlyMapDistance;
}
inline void SetWatcherCompRecordValueOp::set_has_max_fly_map_distance() {
  _oneof_case_[1] = kMaxFlyMapDistance;
}
inline void SetWatcherCompRecordValueOp::clear_max_fly_map_distance() {
  if (has_max_fly_map_distance()) {
    optional_max_fly_map_distance_.max_fly_map_distance_ = 0;
    clear_has_optional_max_fly_map_distance();
  }
}
inline float SetWatcherCompRecordValueOp::max_fly_map_distance() const {
  // @@protoc_insertion_point(field_get:proto.SetWatcherCompRecordValueOp.max_fly_map_distance)
  if (has_max_fly_map_distance()) {
    return optional_max_fly_map_distance_.max_fly_map_distance_;
  }
  return 0;
}
inline void SetWatcherCompRecordValueOp::set_max_fly_map_distance(float value) {
  if (!has_max_fly_map_distance()) {
    clear_optional_max_fly_map_distance();
    set_has_max_fly_map_distance();
  }
  optional_max_fly_map_distance_.max_fly_map_distance_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWatcherCompRecordValueOp.max_fly_map_distance)
}

// float max_fly_time = 3;
inline bool SetWatcherCompRecordValueOp::has_max_fly_time() const {
  return optional_max_fly_time_case() == kMaxFlyTime;
}
inline void SetWatcherCompRecordValueOp::set_has_max_fly_time() {
  _oneof_case_[2] = kMaxFlyTime;
}
inline void SetWatcherCompRecordValueOp::clear_max_fly_time() {
  if (has_max_fly_time()) {
    optional_max_fly_time_.max_fly_time_ = 0;
    clear_has_optional_max_fly_time();
  }
}
inline float SetWatcherCompRecordValueOp::max_fly_time() const {
  // @@protoc_insertion_point(field_get:proto.SetWatcherCompRecordValueOp.max_fly_time)
  if (has_max_fly_time()) {
    return optional_max_fly_time_.max_fly_time_;
  }
  return 0;
}
inline void SetWatcherCompRecordValueOp::set_max_fly_time(float value) {
  if (!has_max_fly_time()) {
    clear_optional_max_fly_time();
    set_has_max_fly_time();
  }
  optional_max_fly_time_.max_fly_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWatcherCompRecordValueOp.max_fly_time)
}

// float max_dash_time = 4;
inline bool SetWatcherCompRecordValueOp::has_max_dash_time() const {
  return optional_max_dash_time_case() == kMaxDashTime;
}
inline void SetWatcherCompRecordValueOp::set_has_max_dash_time() {
  _oneof_case_[3] = kMaxDashTime;
}
inline void SetWatcherCompRecordValueOp::clear_max_dash_time() {
  if (has_max_dash_time()) {
    optional_max_dash_time_.max_dash_time_ = 0;
    clear_has_optional_max_dash_time();
  }
}
inline float SetWatcherCompRecordValueOp::max_dash_time() const {
  // @@protoc_insertion_point(field_get:proto.SetWatcherCompRecordValueOp.max_dash_time)
  if (has_max_dash_time()) {
    return optional_max_dash_time_.max_dash_time_;
  }
  return 0;
}
inline void SetWatcherCompRecordValueOp::set_max_dash_time(float value) {
  if (!has_max_dash_time()) {
    clear_optional_max_dash_time();
    set_has_max_dash_time();
  }
  optional_max_dash_time_.max_dash_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SetWatcherCompRecordValueOp.max_dash_time)
}

inline bool SetWatcherCompRecordValueOp::has_optional_max_critical_damage() const {
  return optional_max_critical_damage_case() != OPTIONAL_MAX_CRITICAL_DAMAGE_NOT_SET;
}
inline void SetWatcherCompRecordValueOp::clear_has_optional_max_critical_damage() {
  _oneof_case_[0] = OPTIONAL_MAX_CRITICAL_DAMAGE_NOT_SET;
}
inline bool SetWatcherCompRecordValueOp::has_optional_max_fly_map_distance() const {
  return optional_max_fly_map_distance_case() != OPTIONAL_MAX_FLY_MAP_DISTANCE_NOT_SET;
}
inline void SetWatcherCompRecordValueOp::clear_has_optional_max_fly_map_distance() {
  _oneof_case_[1] = OPTIONAL_MAX_FLY_MAP_DISTANCE_NOT_SET;
}
inline bool SetWatcherCompRecordValueOp::has_optional_max_fly_time() const {
  return optional_max_fly_time_case() != OPTIONAL_MAX_FLY_TIME_NOT_SET;
}
inline void SetWatcherCompRecordValueOp::clear_has_optional_max_fly_time() {
  _oneof_case_[2] = OPTIONAL_MAX_FLY_TIME_NOT_SET;
}
inline bool SetWatcherCompRecordValueOp::has_optional_max_dash_time() const {
  return optional_max_dash_time_case() != OPTIONAL_MAX_DASH_TIME_NOT_SET;
}
inline void SetWatcherCompRecordValueOp::clear_has_optional_max_dash_time() {
  _oneof_case_[3] = OPTIONAL_MAX_DASH_TIME_NOT_SET;
}
inline SetWatcherCompRecordValueOp::OptionalMaxCriticalDamageCase SetWatcherCompRecordValueOp::optional_max_critical_damage_case() const {
  return SetWatcherCompRecordValueOp::OptionalMaxCriticalDamageCase(_oneof_case_[0]);
}
inline SetWatcherCompRecordValueOp::OptionalMaxFlyMapDistanceCase SetWatcherCompRecordValueOp::optional_max_fly_map_distance_case() const {
  return SetWatcherCompRecordValueOp::OptionalMaxFlyMapDistanceCase(_oneof_case_[1]);
}
inline SetWatcherCompRecordValueOp::OptionalMaxFlyTimeCase SetWatcherCompRecordValueOp::optional_max_fly_time_case() const {
  return SetWatcherCompRecordValueOp::OptionalMaxFlyTimeCase(_oneof_case_[2]);
}
inline SetWatcherCompRecordValueOp::OptionalMaxDashTimeCase SetWatcherCompRecordValueOp::optional_max_dash_time_case() const {
  return SetWatcherCompRecordValueOp::OptionalMaxDashTimeCase(_oneof_case_[3]);
}
// -------------------------------------------------------------------

// AddFriendOp

// uint32 target_uid = 1;
inline void AddFriendOp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 AddFriendOp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AddFriendOp.target_uid)
  return target_uid_;
}
inline void AddFriendOp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AddFriendOp.target_uid)
}

// -------------------------------------------------------------------

// DelFriendOp

// uint32 target_uid = 1;
inline void DelFriendOp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 DelFriendOp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DelFriendOp.target_uid)
  return target_uid_;
}
inline void DelFriendOp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DelFriendOp.target_uid)
}

// -------------------------------------------------------------------

// AddFriendAskOp

// uint32 target_uid = 1;
inline void AddFriendAskOp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 AddFriendAskOp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.AddFriendAskOp.target_uid)
  return target_uid_;
}
inline void AddFriendAskOp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.AddFriendAskOp.target_uid)
}

// -------------------------------------------------------------------

// DelFriendAskOp

// uint32 target_uid = 1;
inline void DelFriendAskOp::clear_target_uid() {
  target_uid_ = 0u;
}
inline ::google::protobuf::uint32 DelFriendAskOp::target_uid() const {
  // @@protoc_insertion_point(field_get:proto.DelFriendAskOp.target_uid)
  return target_uid_;
}
inline void DelFriendAskOp::set_target_uid(::google::protobuf::uint32 value) {
  
  target_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.DelFriendAskOp.target_uid)
}

// -------------------------------------------------------------------

// BanCustomDungeonOp

// uint32 ban_expire_time = 1;
inline void BanCustomDungeonOp::clear_ban_expire_time() {
  ban_expire_time_ = 0u;
}
inline ::google::protobuf::uint32 BanCustomDungeonOp::ban_expire_time() const {
  // @@protoc_insertion_point(field_get:proto.BanCustomDungeonOp.ban_expire_time)
  return ban_expire_time_;
}
inline void BanCustomDungeonOp::set_ban_expire_time(::google::protobuf::uint32 value) {
  
  ban_expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BanCustomDungeonOp.ban_expire_time)
}

// -------------------------------------------------------------------

// RemoveInvalidMapMarksOp

// uint32 scene_id = 1;
inline void RemoveInvalidMapMarksOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 RemoveInvalidMapMarksOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.RemoveInvalidMapMarksOp.scene_id)
  return scene_id_;
}
inline void RemoveInvalidMapMarksOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RemoveInvalidMapMarksOp.scene_id)
}

// .proto.FloatPairBin x_range = 2;
inline bool RemoveInvalidMapMarksOp::has_x_range() const {
  return this != internal_default_instance() && x_range_ != NULL;
}
inline void RemoveInvalidMapMarksOp::clear_x_range() {
  if (GetArenaNoVirtual() == NULL && x_range_ != NULL) delete x_range_;
  x_range_ = NULL;
}
inline const ::proto::FloatPairBin& RemoveInvalidMapMarksOp::x_range() const {
  const ::proto::FloatPairBin* p = x_range_;
  // @@protoc_insertion_point(field_get:proto.RemoveInvalidMapMarksOp.x_range)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FloatPairBin*>(
      &::proto::_FloatPairBin_default_instance_);
}
inline ::proto::FloatPairBin* RemoveInvalidMapMarksOp::mutable_x_range() {
  
  if (x_range_ == NULL) {
    x_range_ = new ::proto::FloatPairBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.RemoveInvalidMapMarksOp.x_range)
  return x_range_;
}
inline ::proto::FloatPairBin* RemoveInvalidMapMarksOp::release_x_range() {
  // @@protoc_insertion_point(field_release:proto.RemoveInvalidMapMarksOp.x_range)
  
  ::proto::FloatPairBin* temp = x_range_;
  x_range_ = NULL;
  return temp;
}
inline void RemoveInvalidMapMarksOp::set_allocated_x_range(::proto::FloatPairBin* x_range) {
  delete x_range_;
  x_range_ = x_range;
  if (x_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RemoveInvalidMapMarksOp.x_range)
}

// .proto.FloatPairBin z_range = 3;
inline bool RemoveInvalidMapMarksOp::has_z_range() const {
  return this != internal_default_instance() && z_range_ != NULL;
}
inline void RemoveInvalidMapMarksOp::clear_z_range() {
  if (GetArenaNoVirtual() == NULL && z_range_ != NULL) delete z_range_;
  z_range_ = NULL;
}
inline const ::proto::FloatPairBin& RemoveInvalidMapMarksOp::z_range() const {
  const ::proto::FloatPairBin* p = z_range_;
  // @@protoc_insertion_point(field_get:proto.RemoveInvalidMapMarksOp.z_range)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::FloatPairBin*>(
      &::proto::_FloatPairBin_default_instance_);
}
inline ::proto::FloatPairBin* RemoveInvalidMapMarksOp::mutable_z_range() {
  
  if (z_range_ == NULL) {
    z_range_ = new ::proto::FloatPairBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.RemoveInvalidMapMarksOp.z_range)
  return z_range_;
}
inline ::proto::FloatPairBin* RemoveInvalidMapMarksOp::release_z_range() {
  // @@protoc_insertion_point(field_release:proto.RemoveInvalidMapMarksOp.z_range)
  
  ::proto::FloatPairBin* temp = z_range_;
  z_range_ = NULL;
  return temp;
}
inline void RemoveInvalidMapMarksOp::set_allocated_z_range(::proto::FloatPairBin* z_range) {
  delete z_range_;
  z_range_ = z_range;
  if (z_range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RemoveInvalidMapMarksOp.z_range)
}

// -------------------------------------------------------------------

// RecalculateAreaExplorePointOp

// uint32 area_id = 1;
inline void RecalculateAreaExplorePointOp::clear_area_id() {
  area_id_ = 0u;
}
inline ::google::protobuf::uint32 RecalculateAreaExplorePointOp::area_id() const {
  // @@protoc_insertion_point(field_get:proto.RecalculateAreaExplorePointOp.area_id)
  return area_id_;
}
inline void RecalculateAreaExplorePointOp::set_area_id(::google::protobuf::uint32 value) {
  
  area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.RecalculateAreaExplorePointOp.area_id)
}

// uint32 old_exp = 2;
inline void RecalculateAreaExplorePointOp::clear_old_exp() {
  old_exp_ = 0u;
}
inline ::google::protobuf::uint32 RecalculateAreaExplorePointOp::old_exp() const {
  // @@protoc_insertion_point(field_get:proto.RecalculateAreaExplorePointOp.old_exp)
  return old_exp_;
}
inline void RecalculateAreaExplorePointOp::set_old_exp(::google::protobuf::uint32 value) {
  
  old_exp_ = value;
  // @@protoc_insertion_point(field_set:proto.RecalculateAreaExplorePointOp.old_exp)
}

// uint32 recalc_exp = 3;
inline void RecalculateAreaExplorePointOp::clear_recalc_exp() {
  recalc_exp_ = 0u;
}
inline ::google::protobuf::uint32 RecalculateAreaExplorePointOp::recalc_exp() const {
  // @@protoc_insertion_point(field_get:proto.RecalculateAreaExplorePointOp.recalc_exp)
  return recalc_exp_;
}
inline void RecalculateAreaExplorePointOp::set_recalc_exp(::google::protobuf::uint32 value) {
  
  recalc_exp_ = value;
  // @@protoc_insertion_point(field_set:proto.RecalculateAreaExplorePointOp.recalc_exp)
}

// uint32 new_exp = 4;
inline void RecalculateAreaExplorePointOp::clear_new_exp() {
  new_exp_ = 0u;
}
inline ::google::protobuf::uint32 RecalculateAreaExplorePointOp::new_exp() const {
  // @@protoc_insertion_point(field_get:proto.RecalculateAreaExplorePointOp.new_exp)
  return new_exp_;
}
inline void RecalculateAreaExplorePointOp::set_new_exp(::google::protobuf::uint32 value) {
  
  new_exp_ = value;
  // @@protoc_insertion_point(field_set:proto.RecalculateAreaExplorePointOp.new_exp)
}

// -------------------------------------------------------------------

// NicknameAuditResultOp

// string nickname = 1;
inline void NicknameAuditResultOp::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NicknameAuditResultOp::nickname() const {
  // @@protoc_insertion_point(field_get:proto.NicknameAuditResultOp.nickname)
  return nickname_.GetNoArena();
}
inline void NicknameAuditResultOp::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.NicknameAuditResultOp.nickname)
}
#if LANG_CXX11
inline void NicknameAuditResultOp::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.NicknameAuditResultOp.nickname)
}
#endif
inline void NicknameAuditResultOp::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.NicknameAuditResultOp.nickname)
}
inline void NicknameAuditResultOp::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.NicknameAuditResultOp.nickname)
}
inline ::std::string* NicknameAuditResultOp::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.NicknameAuditResultOp.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NicknameAuditResultOp::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.NicknameAuditResultOp.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NicknameAuditResultOp::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.NicknameAuditResultOp.nickname)
}

// bool is_ok = 2;
inline void NicknameAuditResultOp::clear_is_ok() {
  is_ok_ = false;
}
inline bool NicknameAuditResultOp::is_ok() const {
  // @@protoc_insertion_point(field_get:proto.NicknameAuditResultOp.is_ok)
  return is_ok_;
}
inline void NicknameAuditResultOp::set_is_ok(bool value) {
  
  is_ok_ = value;
  // @@protoc_insertion_point(field_set:proto.NicknameAuditResultOp.is_ok)
}

// -------------------------------------------------------------------

// SignatureAuditResultOp

// string signature = 1;
inline void SignatureAuditResultOp::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SignatureAuditResultOp::signature() const {
  // @@protoc_insertion_point(field_get:proto.SignatureAuditResultOp.signature)
  return signature_.GetNoArena();
}
inline void SignatureAuditResultOp::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SignatureAuditResultOp.signature)
}
#if LANG_CXX11
inline void SignatureAuditResultOp::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SignatureAuditResultOp.signature)
}
#endif
inline void SignatureAuditResultOp::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SignatureAuditResultOp.signature)
}
inline void SignatureAuditResultOp::set_signature(const char* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SignatureAuditResultOp.signature)
}
inline ::std::string* SignatureAuditResultOp::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:proto.SignatureAuditResultOp.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignatureAuditResultOp::release_signature() {
  // @@protoc_insertion_point(field_release:proto.SignatureAuditResultOp.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignatureAuditResultOp::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.SignatureAuditResultOp.signature)
}

// bool is_ok = 2;
inline void SignatureAuditResultOp::clear_is_ok() {
  is_ok_ = false;
}
inline bool SignatureAuditResultOp::is_ok() const {
  // @@protoc_insertion_point(field_get:proto.SignatureAuditResultOp.is_ok)
  return is_ok_;
}
inline void SignatureAuditResultOp::set_is_ok(bool value) {
  
  is_ok_ = value;
  // @@protoc_insertion_point(field_set:proto.SignatureAuditResultOp.is_ok)
}

// -------------------------------------------------------------------

// PassHomeSceneArrangementAuditOp

// uint32 module_id = 1;
inline void PassHomeSceneArrangementAuditOp::clear_module_id() {
  module_id_ = 0u;
}
inline ::google::protobuf::uint32 PassHomeSceneArrangementAuditOp::module_id() const {
  // @@protoc_insertion_point(field_get:proto.PassHomeSceneArrangementAuditOp.module_id)
  return module_id_;
}
inline void PassHomeSceneArrangementAuditOp::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PassHomeSceneArrangementAuditOp.module_id)
}

// uint32 scene_id = 2;
inline void PassHomeSceneArrangementAuditOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 PassHomeSceneArrangementAuditOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.PassHomeSceneArrangementAuditOp.scene_id)
  return scene_id_;
}
inline void PassHomeSceneArrangementAuditOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PassHomeSceneArrangementAuditOp.scene_id)
}

// uint32 version = 3;
inline void PassHomeSceneArrangementAuditOp::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 PassHomeSceneArrangementAuditOp::version() const {
  // @@protoc_insertion_point(field_get:proto.PassHomeSceneArrangementAuditOp.version)
  return version_;
}
inline void PassHomeSceneArrangementAuditOp::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.PassHomeSceneArrangementAuditOp.version)
}

// -------------------------------------------------------------------

// FailHomeSceneArrangementAuditOp

// uint32 module_id = 1;
inline void FailHomeSceneArrangementAuditOp::clear_module_id() {
  module_id_ = 0u;
}
inline ::google::protobuf::uint32 FailHomeSceneArrangementAuditOp::module_id() const {
  // @@protoc_insertion_point(field_get:proto.FailHomeSceneArrangementAuditOp.module_id)
  return module_id_;
}
inline void FailHomeSceneArrangementAuditOp::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FailHomeSceneArrangementAuditOp.module_id)
}

// uint32 scene_id = 2;
inline void FailHomeSceneArrangementAuditOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 FailHomeSceneArrangementAuditOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.FailHomeSceneArrangementAuditOp.scene_id)
  return scene_id_;
}
inline void FailHomeSceneArrangementAuditOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FailHomeSceneArrangementAuditOp.scene_id)
}

// uint32 version = 3;
inline void FailHomeSceneArrangementAuditOp::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 FailHomeSceneArrangementAuditOp::version() const {
  // @@protoc_insertion_point(field_get:proto.FailHomeSceneArrangementAuditOp.version)
  return version_;
}
inline void FailHomeSceneArrangementAuditOp::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.FailHomeSceneArrangementAuditOp.version)
}

// -------------------------------------------------------------------

// FailHomeModulesArrangementAuditOp

// bool is_all_module = 1;
inline void FailHomeModulesArrangementAuditOp::clear_is_all_module() {
  is_all_module_ = false;
}
inline bool FailHomeModulesArrangementAuditOp::is_all_module() const {
  // @@protoc_insertion_point(field_get:proto.FailHomeModulesArrangementAuditOp.is_all_module)
  return is_all_module_;
}
inline void FailHomeModulesArrangementAuditOp::set_is_all_module(bool value) {
  
  is_all_module_ = value;
  // @@protoc_insertion_point(field_set:proto.FailHomeModulesArrangementAuditOp.is_all_module)
}

// repeated uint32 module_id_list = 2;
inline int FailHomeModulesArrangementAuditOp::module_id_list_size() const {
  return module_id_list_.size();
}
inline void FailHomeModulesArrangementAuditOp::clear_module_id_list() {
  module_id_list_.Clear();
}
inline ::google::protobuf::uint32 FailHomeModulesArrangementAuditOp::module_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.FailHomeModulesArrangementAuditOp.module_id_list)
  return module_id_list_.Get(index);
}
inline void FailHomeModulesArrangementAuditOp::set_module_id_list(int index, ::google::protobuf::uint32 value) {
  module_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.FailHomeModulesArrangementAuditOp.module_id_list)
}
inline void FailHomeModulesArrangementAuditOp::add_module_id_list(::google::protobuf::uint32 value) {
  module_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.FailHomeModulesArrangementAuditOp.module_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
FailHomeModulesArrangementAuditOp::module_id_list() const {
  // @@protoc_insertion_point(field_list:proto.FailHomeModulesArrangementAuditOp.module_id_list)
  return module_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
FailHomeModulesArrangementAuditOp::mutable_module_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.FailHomeModulesArrangementAuditOp.module_id_list)
  return &module_id_list_;
}

// uint32 version = 3;
inline void FailHomeModulesArrangementAuditOp::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 FailHomeModulesArrangementAuditOp::version() const {
  // @@protoc_insertion_point(field_get:proto.FailHomeModulesArrangementAuditOp.version)
  return version_;
}
inline void FailHomeModulesArrangementAuditOp::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.FailHomeModulesArrangementAuditOp.version)
}

// -------------------------------------------------------------------

// BanUgcPublishOp

// uint32 ban_publish_expire_time = 1;
inline void BanUgcPublishOp::clear_ban_publish_expire_time() {
  ban_publish_expire_time_ = 0u;
}
inline ::google::protobuf::uint32 BanUgcPublishOp::ban_publish_expire_time() const {
  // @@protoc_insertion_point(field_get:proto.BanUgcPublishOp.ban_publish_expire_time)
  return ban_publish_expire_time_;
}
inline void BanUgcPublishOp::set_ban_publish_expire_time(::google::protobuf::uint32 value) {
  
  ban_publish_expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BanUgcPublishOp.ban_publish_expire_time)
}

// -------------------------------------------------------------------

// ResetPlayerPersistentDungeonOp

// uint32 scene_id = 1;
inline void ResetPlayerPersistentDungeonOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ResetPlayerPersistentDungeonOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetPlayerPersistentDungeonOp.scene_id)
  return scene_id_;
}
inline void ResetPlayerPersistentDungeonOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetPlayerPersistentDungeonOp.scene_id)
}

// -------------------------------------------------------------------

// ResetPlayerPosInPersistentDungeonOp

// uint32 scene_id = 1;
inline void ResetPlayerPosInPersistentDungeonOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ResetPlayerPosInPersistentDungeonOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetPlayerPosInPersistentDungeonOp.scene_id)
  return scene_id_;
}
inline void ResetPlayerPosInPersistentDungeonOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetPlayerPosInPersistentDungeonOp.scene_id)
}

// -------------------------------------------------------------------

// LevelTagChangeOp

// uint32 level_tag_id = 1;
inline void LevelTagChangeOp::clear_level_tag_id() {
  level_tag_id_ = 0u;
}
inline ::google::protobuf::uint32 LevelTagChangeOp::level_tag_id() const {
  // @@protoc_insertion_point(field_get:proto.LevelTagChangeOp.level_tag_id)
  return level_tag_id_;
}
inline void LevelTagChangeOp::set_level_tag_id(::google::protobuf::uint32 value) {
  
  level_tag_id_ = value;
  // @@protoc_insertion_point(field_set:proto.LevelTagChangeOp.level_tag_id)
}

// -------------------------------------------------------------------

// ResetPlayerWayPointInPersistentDungeonOp

// uint32 scene_id = 1;
inline void ResetPlayerWayPointInPersistentDungeonOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 ResetPlayerWayPointInPersistentDungeonOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetPlayerWayPointInPersistentDungeonOp.scene_id)
  return scene_id_;
}
inline void ResetPlayerWayPointInPersistentDungeonOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetPlayerWayPointInPersistentDungeonOp.scene_id)
}

// uint32 way_point_id = 2;
inline void ResetPlayerWayPointInPersistentDungeonOp::clear_way_point_id() {
  way_point_id_ = 0u;
}
inline ::google::protobuf::uint32 ResetPlayerWayPointInPersistentDungeonOp::way_point_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetPlayerWayPointInPersistentDungeonOp.way_point_id)
  return way_point_id_;
}
inline void ResetPlayerWayPointInPersistentDungeonOp::set_way_point_id(::google::protobuf::uint32 value) {
  
  way_point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetPlayerWayPointInPersistentDungeonOp.way_point_id)
}

// -------------------------------------------------------------------

// ExhibitionSetOp

// uint32 exhibition_id = 1;
inline void ExhibitionSetOp::clear_exhibition_id() {
  exhibition_id_ = 0u;
}
inline ::google::protobuf::uint32 ExhibitionSetOp::exhibition_id() const {
  // @@protoc_insertion_point(field_get:proto.ExhibitionSetOp.exhibition_id)
  return exhibition_id_;
}
inline void ExhibitionSetOp::set_exhibition_id(::google::protobuf::uint32 value) {
  
  exhibition_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ExhibitionSetOp.exhibition_id)
}

// uint32 accumulable_val = 2;
inline bool ExhibitionSetOp::has_accumulable_val() const {
  return optional_accumulable_val_case() == kAccumulableVal;
}
inline void ExhibitionSetOp::set_has_accumulable_val() {
  _oneof_case_[0] = kAccumulableVal;
}
inline void ExhibitionSetOp::clear_accumulable_val() {
  if (has_accumulable_val()) {
    optional_accumulable_val_.accumulable_val_ = 0u;
    clear_has_optional_accumulable_val();
  }
}
inline ::google::protobuf::uint32 ExhibitionSetOp::accumulable_val() const {
  // @@protoc_insertion_point(field_get:proto.ExhibitionSetOp.accumulable_val)
  if (has_accumulable_val()) {
    return optional_accumulable_val_.accumulable_val_;
  }
  return 0u;
}
inline void ExhibitionSetOp::set_accumulable_val(::google::protobuf::uint32 value) {
  if (!has_accumulable_val()) {
    clear_optional_accumulable_val();
    set_has_accumulable_val();
  }
  optional_accumulable_val_.accumulable_val_ = value;
  // @@protoc_insertion_point(field_set:proto.ExhibitionSetOp.accumulable_val)
}

// uint32 replaceable_val = 3;
inline bool ExhibitionSetOp::has_replaceable_val() const {
  return optional_replaceable_val_case() == kReplaceableVal;
}
inline void ExhibitionSetOp::set_has_replaceable_val() {
  _oneof_case_[1] = kReplaceableVal;
}
inline void ExhibitionSetOp::clear_replaceable_val() {
  if (has_replaceable_val()) {
    optional_replaceable_val_.replaceable_val_ = 0u;
    clear_has_optional_replaceable_val();
  }
}
inline ::google::protobuf::uint32 ExhibitionSetOp::replaceable_val() const {
  // @@protoc_insertion_point(field_get:proto.ExhibitionSetOp.replaceable_val)
  if (has_replaceable_val()) {
    return optional_replaceable_val_.replaceable_val_;
  }
  return 0u;
}
inline void ExhibitionSetOp::set_replaceable_val(::google::protobuf::uint32 value) {
  if (!has_replaceable_val()) {
    clear_optional_replaceable_val();
    set_has_replaceable_val();
  }
  optional_replaceable_val_.replaceable_val_ = value;
  // @@protoc_insertion_point(field_set:proto.ExhibitionSetOp.replaceable_val)
}

inline bool ExhibitionSetOp::has_optional_accumulable_val() const {
  return optional_accumulable_val_case() != OPTIONAL_ACCUMULABLE_VAL_NOT_SET;
}
inline void ExhibitionSetOp::clear_has_optional_accumulable_val() {
  _oneof_case_[0] = OPTIONAL_ACCUMULABLE_VAL_NOT_SET;
}
inline bool ExhibitionSetOp::has_optional_replaceable_val() const {
  return optional_replaceable_val_case() != OPTIONAL_REPLACEABLE_VAL_NOT_SET;
}
inline void ExhibitionSetOp::clear_has_optional_replaceable_val() {
  _oneof_case_[1] = OPTIONAL_REPLACEABLE_VAL_NOT_SET;
}
inline ExhibitionSetOp::OptionalAccumulableValCase ExhibitionSetOp::optional_accumulable_val_case() const {
  return ExhibitionSetOp::OptionalAccumulableValCase(_oneof_case_[0]);
}
inline ExhibitionSetOp::OptionalReplaceableValCase ExhibitionSetOp::optional_replaceable_val_case() const {
  return ExhibitionSetOp::OptionalReplaceableValCase(_oneof_case_[1]);
}
// -------------------------------------------------------------------

// SetAvatarExtraPropOp

// uint32 avatar_id = 1;
inline void SetAvatarExtraPropOp::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 SetAvatarExtraPropOp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.SetAvatarExtraPropOp.avatar_id)
  return avatar_id_;
}
inline void SetAvatarExtraPropOp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetAvatarExtraPropOp.avatar_id)
}

// uint32 extra_prop_id = 2;
inline void SetAvatarExtraPropOp::clear_extra_prop_id() {
  extra_prop_id_ = 0u;
}
inline ::google::protobuf::uint32 SetAvatarExtraPropOp::extra_prop_id() const {
  // @@protoc_insertion_point(field_get:proto.SetAvatarExtraPropOp.extra_prop_id)
  return extra_prop_id_;
}
inline void SetAvatarExtraPropOp::set_extra_prop_id(::google::protobuf::uint32 value) {
  
  extra_prop_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetAvatarExtraPropOp.extra_prop_id)
}

// uint32 extra_prop_count = 3;
inline void SetAvatarExtraPropOp::clear_extra_prop_count() {
  extra_prop_count_ = 0u;
}
inline ::google::protobuf::uint32 SetAvatarExtraPropOp::extra_prop_count() const {
  // @@protoc_insertion_point(field_get:proto.SetAvatarExtraPropOp.extra_prop_count)
  return extra_prop_count_;
}
inline void SetAvatarExtraPropOp::set_extra_prop_count(::google::protobuf::uint32 value) {
  
  extra_prop_count_ = value;
  // @@protoc_insertion_point(field_set:proto.SetAvatarExtraPropOp.extra_prop_count)
}

// -------------------------------------------------------------------

// AddItemWithLimitOp

// .proto.AddItemOp add_item_op = 1;
inline bool AddItemWithLimitOp::has_add_item_op() const {
  return this != internal_default_instance() && add_item_op_ != NULL;
}
inline void AddItemWithLimitOp::clear_add_item_op() {
  if (GetArenaNoVirtual() == NULL && add_item_op_ != NULL) delete add_item_op_;
  add_item_op_ = NULL;
}
inline const ::proto::AddItemOp& AddItemWithLimitOp::add_item_op() const {
  const ::proto::AddItemOp* p = add_item_op_;
  // @@protoc_insertion_point(field_get:proto.AddItemWithLimitOp.add_item_op)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::AddItemOp*>(
      &::proto::_AddItemOp_default_instance_);
}
inline ::proto::AddItemOp* AddItemWithLimitOp::mutable_add_item_op() {
  
  if (add_item_op_ == NULL) {
    add_item_op_ = new ::proto::AddItemOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.AddItemWithLimitOp.add_item_op)
  return add_item_op_;
}
inline ::proto::AddItemOp* AddItemWithLimitOp::release_add_item_op() {
  // @@protoc_insertion_point(field_release:proto.AddItemWithLimitOp.add_item_op)
  
  ::proto::AddItemOp* temp = add_item_op_;
  add_item_op_ = NULL;
  return temp;
}
inline void AddItemWithLimitOp::set_allocated_add_item_op(::proto::AddItemOp* add_item_op) {
  delete add_item_op_;
  add_item_op_ = add_item_op;
  if (add_item_op) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.AddItemWithLimitOp.add_item_op)
}

// uint32 max_item_count = 2;
inline void AddItemWithLimitOp::clear_max_item_count() {
  max_item_count_ = 0u;
}
inline ::google::protobuf::uint32 AddItemWithLimitOp::max_item_count() const {
  // @@protoc_insertion_point(field_get:proto.AddItemWithLimitOp.max_item_count)
  return max_item_count_;
}
inline void AddItemWithLimitOp::set_max_item_count(::google::protobuf::uint32 value) {
  
  max_item_count_ = value;
  // @@protoc_insertion_point(field_set:proto.AddItemWithLimitOp.max_item_count)
}

// -------------------------------------------------------------------

// SetGadgetChainLevelOp

// uint32 gadgetchain_id = 1;
inline void SetGadgetChainLevelOp::clear_gadgetchain_id() {
  gadgetchain_id_ = 0u;
}
inline ::google::protobuf::uint32 SetGadgetChainLevelOp::gadgetchain_id() const {
  // @@protoc_insertion_point(field_get:proto.SetGadgetChainLevelOp.gadgetchain_id)
  return gadgetchain_id_;
}
inline void SetGadgetChainLevelOp::set_gadgetchain_id(::google::protobuf::uint32 value) {
  
  gadgetchain_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetGadgetChainLevelOp.gadgetchain_id)
}

// uint32 gadgetchain_level = 2;
inline void SetGadgetChainLevelOp::clear_gadgetchain_level() {
  gadgetchain_level_ = 0u;
}
inline ::google::protobuf::uint32 SetGadgetChainLevelOp::gadgetchain_level() const {
  // @@protoc_insertion_point(field_get:proto.SetGadgetChainLevelOp.gadgetchain_level)
  return gadgetchain_level_;
}
inline void SetGadgetChainLevelOp::set_gadgetchain_level(::google::protobuf::uint32 value) {
  
  gadgetchain_level_ = value;
  // @@protoc_insertion_point(field_set:proto.SetGadgetChainLevelOp.gadgetchain_level)
}

// -------------------------------------------------------------------

// SetDailyTaskVarOp

// uint32 task_id = 1;
inline void SetDailyTaskVarOp::clear_task_id() {
  task_id_ = 0u;
}
inline ::google::protobuf::uint32 SetDailyTaskVarOp::task_id() const {
  // @@protoc_insertion_point(field_get:proto.SetDailyTaskVarOp.task_id)
  return task_id_;
}
inline void SetDailyTaskVarOp::set_task_id(::google::protobuf::uint32 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetDailyTaskVarOp.task_id)
}

// uint32 index = 2;
inline void SetDailyTaskVarOp::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 SetDailyTaskVarOp::index() const {
  // @@protoc_insertion_point(field_get:proto.SetDailyTaskVarOp.index)
  return index_;
}
inline void SetDailyTaskVarOp::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.SetDailyTaskVarOp.index)
}

// int32 value = 3;
inline void SetDailyTaskVarOp::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 SetDailyTaskVarOp::value() const {
  // @@protoc_insertion_point(field_get:proto.SetDailyTaskVarOp.value)
  return value_;
}
inline void SetDailyTaskVarOp::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.SetDailyTaskVarOp.value)
}

// -------------------------------------------------------------------

// AvatarRenameAuditResultOp

// uint32 rename_id = 1;
inline void AvatarRenameAuditResultOp::clear_rename_id() {
  rename_id_ = 0u;
}
inline ::google::protobuf::uint32 AvatarRenameAuditResultOp::rename_id() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditResultOp.rename_id)
  return rename_id_;
}
inline void AvatarRenameAuditResultOp::set_rename_id(::google::protobuf::uint32 value) {
  
  rename_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditResultOp.rename_id)
}

// string target_name = 2;
inline void AvatarRenameAuditResultOp::clear_target_name() {
  target_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AvatarRenameAuditResultOp::target_name() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditResultOp.target_name)
  return target_name_.GetNoArena();
}
inline void AvatarRenameAuditResultOp::set_target_name(const ::std::string& value) {
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditResultOp.target_name)
}
#if LANG_CXX11
inline void AvatarRenameAuditResultOp::set_target_name(::std::string&& value) {
  
  target_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.AvatarRenameAuditResultOp.target_name)
}
#endif
inline void AvatarRenameAuditResultOp::set_target_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.AvatarRenameAuditResultOp.target_name)
}
inline void AvatarRenameAuditResultOp::set_target_name(const char* value, size_t size) {
  
  target_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.AvatarRenameAuditResultOp.target_name)
}
inline ::std::string* AvatarRenameAuditResultOp::mutable_target_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.AvatarRenameAuditResultOp.target_name)
  return target_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AvatarRenameAuditResultOp::release_target_name() {
  // @@protoc_insertion_point(field_release:proto.AvatarRenameAuditResultOp.target_name)
  
  return target_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AvatarRenameAuditResultOp::set_allocated_target_name(::std::string* target_name) {
  if (target_name != NULL) {
    
  } else {
    
  }
  target_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_name);
  // @@protoc_insertion_point(field_set_allocated:proto.AvatarRenameAuditResultOp.target_name)
}

// bool is_succ = 3;
inline void AvatarRenameAuditResultOp::clear_is_succ() {
  is_succ_ = false;
}
inline bool AvatarRenameAuditResultOp::is_succ() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditResultOp.is_succ)
  return is_succ_;
}
inline void AvatarRenameAuditResultOp::set_is_succ(bool value) {
  
  is_succ_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditResultOp.is_succ)
}

// uint32 source_type = 4;
inline void AvatarRenameAuditResultOp::clear_source_type() {
  source_type_ = 0u;
}
inline ::google::protobuf::uint32 AvatarRenameAuditResultOp::source_type() const {
  // @@protoc_insertion_point(field_get:proto.AvatarRenameAuditResultOp.source_type)
  return source_type_;
}
inline void AvatarRenameAuditResultOp::set_source_type(::google::protobuf::uint32 value) {
  
  source_type_ = value;
  // @@protoc_insertion_point(field_set:proto.AvatarRenameAuditResultOp.source_type)
}

// -------------------------------------------------------------------

// ResetAvatarRenameOp

// uint32 avatar_id = 1;
inline void ResetAvatarRenameOp::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 ResetAvatarRenameOp::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.ResetAvatarRenameOp.avatar_id)
  return avatar_id_;
}
inline void ResetAvatarRenameOp::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetAvatarRenameOp.avatar_id)
}

// uint32 reason = 2;
inline void ResetAvatarRenameOp::clear_reason() {
  reason_ = 0u;
}
inline ::google::protobuf::uint32 ResetAvatarRenameOp::reason() const {
  // @@protoc_insertion_point(field_get:proto.ResetAvatarRenameOp.reason)
  return reason_;
}
inline void ResetAvatarRenameOp::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.ResetAvatarRenameOp.reason)
}

// -------------------------------------------------------------------

// AddFinishedTalkOp

// uint32 talk_id = 1;
inline void AddFinishedTalkOp::clear_talk_id() {
  talk_id_ = 0u;
}
inline ::google::protobuf::uint32 AddFinishedTalkOp::talk_id() const {
  // @@protoc_insertion_point(field_get:proto.AddFinishedTalkOp.talk_id)
  return talk_id_;
}
inline void AddFinishedTalkOp::set_talk_id(::google::protobuf::uint32 value) {
  
  talk_id_ = value;
  // @@protoc_insertion_point(field_set:proto.AddFinishedTalkOp.talk_id)
}

// -------------------------------------------------------------------

// DelFinishedTalkOp

// uint32 talk_id = 1;
inline void DelFinishedTalkOp::clear_talk_id() {
  talk_id_ = 0u;
}
inline ::google::protobuf::uint32 DelFinishedTalkOp::talk_id() const {
  // @@protoc_insertion_point(field_get:proto.DelFinishedTalkOp.talk_id)
  return talk_id_;
}
inline void DelFinishedTalkOp::set_talk_id(::google::protobuf::uint32 value) {
  
  talk_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DelFinishedTalkOp.talk_id)
}

// -------------------------------------------------------------------

// SetPlayerGCGMatchScoreOp

// uint32 match_id = 1;
inline void SetPlayerGCGMatchScoreOp::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 SetPlayerGCGMatchScoreOp::match_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerGCGMatchScoreOp.match_id)
  return match_id_;
}
inline void SetPlayerGCGMatchScoreOp::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerGCGMatchScoreOp.match_id)
}

// uint32 score = 2;
inline void SetPlayerGCGMatchScoreOp::clear_score() {
  score_ = 0u;
}
inline ::google::protobuf::uint32 SetPlayerGCGMatchScoreOp::score() const {
  // @@protoc_insertion_point(field_get:proto.SetPlayerGCGMatchScoreOp.score)
  return score_;
}
inline void SetPlayerGCGMatchScoreOp::set_score(::google::protobuf::uint32 value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPlayerGCGMatchScoreOp.score)
}

// -------------------------------------------------------------------

// SetPushTipsStateOp

// uint32 push_tips_id = 1;
inline void SetPushTipsStateOp::clear_push_tips_id() {
  push_tips_id_ = 0u;
}
inline ::google::protobuf::uint32 SetPushTipsStateOp::push_tips_id() const {
  // @@protoc_insertion_point(field_get:proto.SetPushTipsStateOp.push_tips_id)
  return push_tips_id_;
}
inline void SetPushTipsStateOp::set_push_tips_id(::google::protobuf::uint32 value) {
  
  push_tips_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPushTipsStateOp.push_tips_id)
}

// uint32 push_tips_state = 2;
inline void SetPushTipsStateOp::clear_push_tips_state() {
  push_tips_state_ = 0u;
}
inline ::google::protobuf::uint32 SetPushTipsStateOp::push_tips_state() const {
  // @@protoc_insertion_point(field_get:proto.SetPushTipsStateOp.push_tips_state)
  return push_tips_state_;
}
inline void SetPushTipsStateOp::set_push_tips_state(::google::protobuf::uint32 value) {
  
  push_tips_state_ = value;
  // @@protoc_insertion_point(field_set:proto.SetPushTipsStateOp.push_tips_state)
}

// -------------------------------------------------------------------

// DeletePlayerGCGCardOp

// uint32 card_id = 1;
inline void DeletePlayerGCGCardOp::clear_card_id() {
  card_id_ = 0u;
}
inline ::google::protobuf::uint32 DeletePlayerGCGCardOp::card_id() const {
  // @@protoc_insertion_point(field_get:proto.DeletePlayerGCGCardOp.card_id)
  return card_id_;
}
inline void DeletePlayerGCGCardOp::set_card_id(::google::protobuf::uint32 value) {
  
  card_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeletePlayerGCGCardOp.card_id)
}

// uint32 del_num = 2;
inline void DeletePlayerGCGCardOp::clear_del_num() {
  del_num_ = 0u;
}
inline ::google::protobuf::uint32 DeletePlayerGCGCardOp::del_num() const {
  // @@protoc_insertion_point(field_get:proto.DeletePlayerGCGCardOp.del_num)
  return del_num_;
}
inline void DeletePlayerGCGCardOp::set_del_num(::google::protobuf::uint32 value) {
  
  del_num_ = value;
  // @@protoc_insertion_point(field_set:proto.DeletePlayerGCGCardOp.del_num)
}

// -------------------------------------------------------------------

// DeletePlayerGCGCardFaceOp

// uint32 card_face_id = 1;
inline void DeletePlayerGCGCardFaceOp::clear_card_face_id() {
  card_face_id_ = 0u;
}
inline ::google::protobuf::uint32 DeletePlayerGCGCardFaceOp::card_face_id() const {
  // @@protoc_insertion_point(field_get:proto.DeletePlayerGCGCardFaceOp.card_face_id)
  return card_face_id_;
}
inline void DeletePlayerGCGCardFaceOp::set_card_face_id(::google::protobuf::uint32 value) {
  
  card_face_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeletePlayerGCGCardFaceOp.card_face_id)
}

// -------------------------------------------------------------------

// DeletePlayerGCGCardBackOp

// uint32 card_back_id = 1;
inline void DeletePlayerGCGCardBackOp::clear_card_back_id() {
  card_back_id_ = 0u;
}
inline ::google::protobuf::uint32 DeletePlayerGCGCardBackOp::card_back_id() const {
  // @@protoc_insertion_point(field_get:proto.DeletePlayerGCGCardBackOp.card_back_id)
  return card_back_id_;
}
inline void DeletePlayerGCGCardBackOp::set_card_back_id(::google::protobuf::uint32 value) {
  
  card_back_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeletePlayerGCGCardBackOp.card_back_id)
}

// -------------------------------------------------------------------

// DeletePlayerGCGDeckFieldOp

// uint32 deck_field_id = 1;
inline void DeletePlayerGCGDeckFieldOp::clear_deck_field_id() {
  deck_field_id_ = 0u;
}
inline ::google::protobuf::uint32 DeletePlayerGCGDeckFieldOp::deck_field_id() const {
  // @@protoc_insertion_point(field_get:proto.DeletePlayerGCGDeckFieldOp.deck_field_id)
  return deck_field_id_;
}
inline void DeletePlayerGCGDeckFieldOp::set_deck_field_id(::google::protobuf::uint32 value) {
  
  deck_field_id_ = value;
  // @@protoc_insertion_point(field_set:proto.DeletePlayerGCGDeckFieldOp.deck_field_id)
}

// -------------------------------------------------------------------

// BanPlayerGCGMatchOp

// uint32 expire_time = 1;
inline void BanPlayerGCGMatchOp::clear_expire_time() {
  expire_time_ = 0u;
}
inline ::google::protobuf::uint32 BanPlayerGCGMatchOp::expire_time() const {
  // @@protoc_insertion_point(field_get:proto.BanPlayerGCGMatchOp.expire_time)
  return expire_time_;
}
inline void BanPlayerGCGMatchOp::set_expire_time(::google::protobuf::uint32 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BanPlayerGCGMatchOp.expire_time)
}

// -------------------------------------------------------------------

// BanPlayerGCGPVPOp

// uint32 expire_time = 1;
inline void BanPlayerGCGPVPOp::clear_expire_time() {
  expire_time_ = 0u;
}
inline ::google::protobuf::uint32 BanPlayerGCGPVPOp::expire_time() const {
  // @@protoc_insertion_point(field_get:proto.BanPlayerGCGPVPOp.expire_time)
  return expire_time_;
}
inline void BanPlayerGCGPVPOp::set_expire_time(::google::protobuf::uint32 value) {
  
  expire_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BanPlayerGCGPVPOp.expire_time)
}

// -------------------------------------------------------------------

// OfflineMsgBin

// fixed32 enque_time = 1;
inline void OfflineMsgBin::clear_enque_time() {
  enque_time_ = 0u;
}
inline ::google::protobuf::uint32 OfflineMsgBin::enque_time() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.enque_time)
  return enque_time_;
}
inline void OfflineMsgBin::set_enque_time(::google::protobuf::uint32 value) {
  
  enque_time_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineMsgBin.enque_time)
}

// string ticket = 2;
inline void OfflineMsgBin::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineMsgBin::ticket() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.ticket)
  return ticket_.GetNoArena();
}
inline void OfflineMsgBin::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OfflineMsgBin.ticket)
}
#if LANG_CXX11
inline void OfflineMsgBin::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OfflineMsgBin.ticket)
}
#endif
inline void OfflineMsgBin::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OfflineMsgBin.ticket)
}
inline void OfflineMsgBin::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OfflineMsgBin.ticket)
}
inline ::std::string* OfflineMsgBin::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineMsgBin::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineMsgBin::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.ticket)
}

// uint32 index = 3;
inline void OfflineMsgBin::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 OfflineMsgBin::index() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.index)
  return index_;
}
inline void OfflineMsgBin::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineMsgBin.index)
}

// .proto.DelItemOp del_item_op = 4;
inline bool OfflineMsgBin::has_del_item_op() const {
  return detail_case() == kDelItemOp;
}
inline void OfflineMsgBin::set_has_del_item_op() {
  _oneof_case_[0] = kDelItemOp;
}
inline void OfflineMsgBin::clear_del_item_op() {
  if (has_del_item_op()) {
    delete detail_.del_item_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DelItemOp& OfflineMsgBin::del_item_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_item_op)
  return has_del_item_op()
      ? *detail_.del_item_op_
      : ::proto::DelItemOp::default_instance();
}
inline ::proto::DelItemOp* OfflineMsgBin::mutable_del_item_op() {
  if (!has_del_item_op()) {
    clear_detail();
    set_has_del_item_op();
    detail_.del_item_op_ = new ::proto::DelItemOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_item_op)
  return detail_.del_item_op_;
}
inline ::proto::DelItemOp* OfflineMsgBin::release_del_item_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_item_op)
  if (has_del_item_op()) {
    clear_has_detail();
    ::proto::DelItemOp* temp = detail_.del_item_op_;
    detail_.del_item_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_del_item_op(::proto::DelItemOp* del_item_op) {
  clear_detail();
  if (del_item_op) {
    set_has_del_item_op();
    detail_.del_item_op_ = del_item_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_item_op)
}

// .proto.PlayerGotoOp goto_op = 5;
inline bool OfflineMsgBin::has_goto_op() const {
  return detail_case() == kGotoOp;
}
inline void OfflineMsgBin::set_has_goto_op() {
  _oneof_case_[0] = kGotoOp;
}
inline void OfflineMsgBin::clear_goto_op() {
  if (has_goto_op()) {
    delete detail_.goto_op_;
    clear_has_detail();
  }
}
inline  const ::proto::PlayerGotoOp& OfflineMsgBin::goto_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.goto_op)
  return has_goto_op()
      ? *detail_.goto_op_
      : ::proto::PlayerGotoOp::default_instance();
}
inline ::proto::PlayerGotoOp* OfflineMsgBin::mutable_goto_op() {
  if (!has_goto_op()) {
    clear_detail();
    set_has_goto_op();
    detail_.goto_op_ = new ::proto::PlayerGotoOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.goto_op)
  return detail_.goto_op_;
}
inline ::proto::PlayerGotoOp* OfflineMsgBin::release_goto_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.goto_op)
  if (has_goto_op()) {
    clear_has_detail();
    ::proto::PlayerGotoOp* temp = detail_.goto_op_;
    detail_.goto_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_goto_op(::proto::PlayerGotoOp* goto_op) {
  clear_detail();
  if (goto_op) {
    set_has_goto_op();
    detail_.goto_op_ = goto_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.goto_op)
}

// .proto.ResetParentQuestOp reset_parent_quest_op = 6;
inline bool OfflineMsgBin::has_reset_parent_quest_op() const {
  return detail_case() == kResetParentQuestOp;
}
inline void OfflineMsgBin::set_has_reset_parent_quest_op() {
  _oneof_case_[0] = kResetParentQuestOp;
}
inline void OfflineMsgBin::clear_reset_parent_quest_op() {
  if (has_reset_parent_quest_op()) {
    delete detail_.reset_parent_quest_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ResetParentQuestOp& OfflineMsgBin::reset_parent_quest_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.reset_parent_quest_op)
  return has_reset_parent_quest_op()
      ? *detail_.reset_parent_quest_op_
      : ::proto::ResetParentQuestOp::default_instance();
}
inline ::proto::ResetParentQuestOp* OfflineMsgBin::mutable_reset_parent_quest_op() {
  if (!has_reset_parent_quest_op()) {
    clear_detail();
    set_has_reset_parent_quest_op();
    detail_.reset_parent_quest_op_ = new ::proto::ResetParentQuestOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.reset_parent_quest_op)
  return detail_.reset_parent_quest_op_;
}
inline ::proto::ResetParentQuestOp* OfflineMsgBin::release_reset_parent_quest_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.reset_parent_quest_op)
  if (has_reset_parent_quest_op()) {
    clear_has_detail();
    ::proto::ResetParentQuestOp* temp = detail_.reset_parent_quest_op_;
    detail_.reset_parent_quest_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_reset_parent_quest_op(::proto::ResetParentQuestOp* reset_parent_quest_op) {
  clear_detail();
  if (reset_parent_quest_op) {
    set_has_reset_parent_quest_op();
    detail_.reset_parent_quest_op_ = reset_parent_quest_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.reset_parent_quest_op)
}

// .proto.RefreshGroupOp refresh_group_op = 7;
inline bool OfflineMsgBin::has_refresh_group_op() const {
  return detail_case() == kRefreshGroupOp;
}
inline void OfflineMsgBin::set_has_refresh_group_op() {
  _oneof_case_[0] = kRefreshGroupOp;
}
inline void OfflineMsgBin::clear_refresh_group_op() {
  if (has_refresh_group_op()) {
    delete detail_.refresh_group_op_;
    clear_has_detail();
  }
}
inline  const ::proto::RefreshGroupOp& OfflineMsgBin::refresh_group_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.refresh_group_op)
  return has_refresh_group_op()
      ? *detail_.refresh_group_op_
      : ::proto::RefreshGroupOp::default_instance();
}
inline ::proto::RefreshGroupOp* OfflineMsgBin::mutable_refresh_group_op() {
  if (!has_refresh_group_op()) {
    clear_detail();
    set_has_refresh_group_op();
    detail_.refresh_group_op_ = new ::proto::RefreshGroupOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.refresh_group_op)
  return detail_.refresh_group_op_;
}
inline ::proto::RefreshGroupOp* OfflineMsgBin::release_refresh_group_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.refresh_group_op)
  if (has_refresh_group_op()) {
    clear_has_detail();
    ::proto::RefreshGroupOp* temp = detail_.refresh_group_op_;
    detail_.refresh_group_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_refresh_group_op(::proto::RefreshGroupOp* refresh_group_op) {
  clear_detail();
  if (refresh_group_op) {
    set_has_refresh_group_op();
    detail_.refresh_group_op_ = refresh_group_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.refresh_group_op)
}

// .proto.SetScenePointLockStatusOp set_scene_point_lock_status_op = 8;
inline bool OfflineMsgBin::has_set_scene_point_lock_status_op() const {
  return detail_case() == kSetScenePointLockStatusOp;
}
inline void OfflineMsgBin::set_has_set_scene_point_lock_status_op() {
  _oneof_case_[0] = kSetScenePointLockStatusOp;
}
inline void OfflineMsgBin::clear_set_scene_point_lock_status_op() {
  if (has_set_scene_point_lock_status_op()) {
    delete detail_.set_scene_point_lock_status_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetScenePointLockStatusOp& OfflineMsgBin::set_scene_point_lock_status_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_scene_point_lock_status_op)
  return has_set_scene_point_lock_status_op()
      ? *detail_.set_scene_point_lock_status_op_
      : ::proto::SetScenePointLockStatusOp::default_instance();
}
inline ::proto::SetScenePointLockStatusOp* OfflineMsgBin::mutable_set_scene_point_lock_status_op() {
  if (!has_set_scene_point_lock_status_op()) {
    clear_detail();
    set_has_set_scene_point_lock_status_op();
    detail_.set_scene_point_lock_status_op_ = new ::proto::SetScenePointLockStatusOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_scene_point_lock_status_op)
  return detail_.set_scene_point_lock_status_op_;
}
inline ::proto::SetScenePointLockStatusOp* OfflineMsgBin::release_set_scene_point_lock_status_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_scene_point_lock_status_op)
  if (has_set_scene_point_lock_status_op()) {
    clear_has_detail();
    ::proto::SetScenePointLockStatusOp* temp = detail_.set_scene_point_lock_status_op_;
    detail_.set_scene_point_lock_status_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_scene_point_lock_status_op(::proto::SetScenePointLockStatusOp* set_scene_point_lock_status_op) {
  clear_detail();
  if (set_scene_point_lock_status_op) {
    set_has_set_scene_point_lock_status_op();
    detail_.set_scene_point_lock_status_op_ = set_scene_point_lock_status_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_scene_point_lock_status_op)
}

// .proto.SetPlayerNickNameOp set_nick_name_op = 9;
inline bool OfflineMsgBin::has_set_nick_name_op() const {
  return detail_case() == kSetNickNameOp;
}
inline void OfflineMsgBin::set_has_set_nick_name_op() {
  _oneof_case_[0] = kSetNickNameOp;
}
inline void OfflineMsgBin::clear_set_nick_name_op() {
  if (has_set_nick_name_op()) {
    delete detail_.set_nick_name_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetPlayerNickNameOp& OfflineMsgBin::set_nick_name_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_nick_name_op)
  return has_set_nick_name_op()
      ? *detail_.set_nick_name_op_
      : ::proto::SetPlayerNickNameOp::default_instance();
}
inline ::proto::SetPlayerNickNameOp* OfflineMsgBin::mutable_set_nick_name_op() {
  if (!has_set_nick_name_op()) {
    clear_detail();
    set_has_set_nick_name_op();
    detail_.set_nick_name_op_ = new ::proto::SetPlayerNickNameOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_nick_name_op)
  return detail_.set_nick_name_op_;
}
inline ::proto::SetPlayerNickNameOp* OfflineMsgBin::release_set_nick_name_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_nick_name_op)
  if (has_set_nick_name_op()) {
    clear_has_detail();
    ::proto::SetPlayerNickNameOp* temp = detail_.set_nick_name_op_;
    detail_.set_nick_name_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_nick_name_op(::proto::SetPlayerNickNameOp* set_nick_name_op) {
  clear_detail();
  if (set_nick_name_op) {
    set_has_set_nick_name_op();
    detail_.set_nick_name_op_ = set_nick_name_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_nick_name_op)
}

// .proto.RefreshShopOp refresh_shop_op = 10;
inline bool OfflineMsgBin::has_refresh_shop_op() const {
  return detail_case() == kRefreshShopOp;
}
inline void OfflineMsgBin::set_has_refresh_shop_op() {
  _oneof_case_[0] = kRefreshShopOp;
}
inline void OfflineMsgBin::clear_refresh_shop_op() {
  if (has_refresh_shop_op()) {
    delete detail_.refresh_shop_op_;
    clear_has_detail();
  }
}
inline  const ::proto::RefreshShopOp& OfflineMsgBin::refresh_shop_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.refresh_shop_op)
  return has_refresh_shop_op()
      ? *detail_.refresh_shop_op_
      : ::proto::RefreshShopOp::default_instance();
}
inline ::proto::RefreshShopOp* OfflineMsgBin::mutable_refresh_shop_op() {
  if (!has_refresh_shop_op()) {
    clear_detail();
    set_has_refresh_shop_op();
    detail_.refresh_shop_op_ = new ::proto::RefreshShopOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.refresh_shop_op)
  return detail_.refresh_shop_op_;
}
inline ::proto::RefreshShopOp* OfflineMsgBin::release_refresh_shop_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.refresh_shop_op)
  if (has_refresh_shop_op()) {
    clear_has_detail();
    ::proto::RefreshShopOp* temp = detail_.refresh_shop_op_;
    detail_.refresh_shop_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_refresh_shop_op(::proto::RefreshShopOp* refresh_shop_op) {
  clear_detail();
  if (refresh_shop_op) {
    set_has_refresh_shop_op();
    detail_.refresh_shop_op_ = refresh_shop_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.refresh_shop_op)
}

// .proto.UnlockTalentOp unlock_talent_op = 11;
inline bool OfflineMsgBin::has_unlock_talent_op() const {
  return detail_case() == kUnlockTalentOp;
}
inline void OfflineMsgBin::set_has_unlock_talent_op() {
  _oneof_case_[0] = kUnlockTalentOp;
}
inline void OfflineMsgBin::clear_unlock_talent_op() {
  if (has_unlock_talent_op()) {
    delete detail_.unlock_talent_op_;
    clear_has_detail();
  }
}
inline  const ::proto::UnlockTalentOp& OfflineMsgBin::unlock_talent_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.unlock_talent_op)
  return has_unlock_talent_op()
      ? *detail_.unlock_talent_op_
      : ::proto::UnlockTalentOp::default_instance();
}
inline ::proto::UnlockTalentOp* OfflineMsgBin::mutable_unlock_talent_op() {
  if (!has_unlock_talent_op()) {
    clear_detail();
    set_has_unlock_talent_op();
    detail_.unlock_talent_op_ = new ::proto::UnlockTalentOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.unlock_talent_op)
  return detail_.unlock_talent_op_;
}
inline ::proto::UnlockTalentOp* OfflineMsgBin::release_unlock_talent_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.unlock_talent_op)
  if (has_unlock_talent_op()) {
    clear_has_detail();
    ::proto::UnlockTalentOp* temp = detail_.unlock_talent_op_;
    detail_.unlock_talent_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_unlock_talent_op(::proto::UnlockTalentOp* unlock_talent_op) {
  clear_detail();
  if (unlock_talent_op) {
    set_has_unlock_talent_op();
    detail_.unlock_talent_op_ = unlock_talent_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.unlock_talent_op)
}

// .proto.TakeOffEquipOp take_off_equip_op = 12;
inline bool OfflineMsgBin::has_take_off_equip_op() const {
  return detail_case() == kTakeOffEquipOp;
}
inline void OfflineMsgBin::set_has_take_off_equip_op() {
  _oneof_case_[0] = kTakeOffEquipOp;
}
inline void OfflineMsgBin::clear_take_off_equip_op() {
  if (has_take_off_equip_op()) {
    delete detail_.take_off_equip_op_;
    clear_has_detail();
  }
}
inline  const ::proto::TakeOffEquipOp& OfflineMsgBin::take_off_equip_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.take_off_equip_op)
  return has_take_off_equip_op()
      ? *detail_.take_off_equip_op_
      : ::proto::TakeOffEquipOp::default_instance();
}
inline ::proto::TakeOffEquipOp* OfflineMsgBin::mutable_take_off_equip_op() {
  if (!has_take_off_equip_op()) {
    clear_detail();
    set_has_take_off_equip_op();
    detail_.take_off_equip_op_ = new ::proto::TakeOffEquipOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.take_off_equip_op)
  return detail_.take_off_equip_op_;
}
inline ::proto::TakeOffEquipOp* OfflineMsgBin::release_take_off_equip_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.take_off_equip_op)
  if (has_take_off_equip_op()) {
    clear_has_detail();
    ::proto::TakeOffEquipOp* temp = detail_.take_off_equip_op_;
    detail_.take_off_equip_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_take_off_equip_op(::proto::TakeOffEquipOp* take_off_equip_op) {
  clear_detail();
  if (take_off_equip_op) {
    set_has_take_off_equip_op();
    detail_.take_off_equip_op_ = take_off_equip_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.take_off_equip_op)
}

// .proto.DelMailOp del_mail_op = 13;
inline bool OfflineMsgBin::has_del_mail_op() const {
  return detail_case() == kDelMailOp;
}
inline void OfflineMsgBin::set_has_del_mail_op() {
  _oneof_case_[0] = kDelMailOp;
}
inline void OfflineMsgBin::clear_del_mail_op() {
  if (has_del_mail_op()) {
    delete detail_.del_mail_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DelMailOp& OfflineMsgBin::del_mail_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_mail_op)
  return has_del_mail_op()
      ? *detail_.del_mail_op_
      : ::proto::DelMailOp::default_instance();
}
inline ::proto::DelMailOp* OfflineMsgBin::mutable_del_mail_op() {
  if (!has_del_mail_op()) {
    clear_detail();
    set_has_del_mail_op();
    detail_.del_mail_op_ = new ::proto::DelMailOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_mail_op)
  return detail_.del_mail_op_;
}
inline ::proto::DelMailOp* OfflineMsgBin::release_del_mail_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_mail_op)
  if (has_del_mail_op()) {
    clear_has_detail();
    ::proto::DelMailOp* temp = detail_.del_mail_op_;
    detail_.del_mail_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_del_mail_op(::proto::DelMailOp* del_mail_op) {
  clear_detail();
  if (del_mail_op) {
    set_has_del_mail_op();
    detail_.del_mail_op_ = del_mail_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_mail_op)
}

// .proto.FinishDailyTaskOp finish_daily_task_op = 14;
inline bool OfflineMsgBin::has_finish_daily_task_op() const {
  return detail_case() == kFinishDailyTaskOp;
}
inline void OfflineMsgBin::set_has_finish_daily_task_op() {
  _oneof_case_[0] = kFinishDailyTaskOp;
}
inline void OfflineMsgBin::clear_finish_daily_task_op() {
  if (has_finish_daily_task_op()) {
    delete detail_.finish_daily_task_op_;
    clear_has_detail();
  }
}
inline  const ::proto::FinishDailyTaskOp& OfflineMsgBin::finish_daily_task_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.finish_daily_task_op)
  return has_finish_daily_task_op()
      ? *detail_.finish_daily_task_op_
      : ::proto::FinishDailyTaskOp::default_instance();
}
inline ::proto::FinishDailyTaskOp* OfflineMsgBin::mutable_finish_daily_task_op() {
  if (!has_finish_daily_task_op()) {
    clear_detail();
    set_has_finish_daily_task_op();
    detail_.finish_daily_task_op_ = new ::proto::FinishDailyTaskOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.finish_daily_task_op)
  return detail_.finish_daily_task_op_;
}
inline ::proto::FinishDailyTaskOp* OfflineMsgBin::release_finish_daily_task_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.finish_daily_task_op)
  if (has_finish_daily_task_op()) {
    clear_has_detail();
    ::proto::FinishDailyTaskOp* temp = detail_.finish_daily_task_op_;
    detail_.finish_daily_task_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_finish_daily_task_op(::proto::FinishDailyTaskOp* finish_daily_task_op) {
  clear_detail();
  if (finish_daily_task_op) {
    set_has_finish_daily_task_op();
    detail_.finish_daily_task_op_ = finish_daily_task_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.finish_daily_task_op)
}

// .proto.UnlockAreaOp unlock_area_op = 15;
inline bool OfflineMsgBin::has_unlock_area_op() const {
  return detail_case() == kUnlockAreaOp;
}
inline void OfflineMsgBin::set_has_unlock_area_op() {
  _oneof_case_[0] = kUnlockAreaOp;
}
inline void OfflineMsgBin::clear_unlock_area_op() {
  if (has_unlock_area_op()) {
    delete detail_.unlock_area_op_;
    clear_has_detail();
  }
}
inline  const ::proto::UnlockAreaOp& OfflineMsgBin::unlock_area_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.unlock_area_op)
  return has_unlock_area_op()
      ? *detail_.unlock_area_op_
      : ::proto::UnlockAreaOp::default_instance();
}
inline ::proto::UnlockAreaOp* OfflineMsgBin::mutable_unlock_area_op() {
  if (!has_unlock_area_op()) {
    clear_detail();
    set_has_unlock_area_op();
    detail_.unlock_area_op_ = new ::proto::UnlockAreaOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.unlock_area_op)
  return detail_.unlock_area_op_;
}
inline ::proto::UnlockAreaOp* OfflineMsgBin::release_unlock_area_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.unlock_area_op)
  if (has_unlock_area_op()) {
    clear_has_detail();
    ::proto::UnlockAreaOp* temp = detail_.unlock_area_op_;
    detail_.unlock_area_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_unlock_area_op(::proto::UnlockAreaOp* unlock_area_op) {
  clear_detail();
  if (unlock_area_op) {
    set_has_unlock_area_op();
    detail_.unlock_area_op_ = unlock_area_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.unlock_area_op)
}

// .proto.DelItemNegativeOp del_item_negative_op = 16;
inline bool OfflineMsgBin::has_del_item_negative_op() const {
  return detail_case() == kDelItemNegativeOp;
}
inline void OfflineMsgBin::set_has_del_item_negative_op() {
  _oneof_case_[0] = kDelItemNegativeOp;
}
inline void OfflineMsgBin::clear_del_item_negative_op() {
  if (has_del_item_negative_op()) {
    delete detail_.del_item_negative_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DelItemNegativeOp& OfflineMsgBin::del_item_negative_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_item_negative_op)
  return has_del_item_negative_op()
      ? *detail_.del_item_negative_op_
      : ::proto::DelItemNegativeOp::default_instance();
}
inline ::proto::DelItemNegativeOp* OfflineMsgBin::mutable_del_item_negative_op() {
  if (!has_del_item_negative_op()) {
    clear_detail();
    set_has_del_item_negative_op();
    detail_.del_item_negative_op_ = new ::proto::DelItemNegativeOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_item_negative_op)
  return detail_.del_item_negative_op_;
}
inline ::proto::DelItemNegativeOp* OfflineMsgBin::release_del_item_negative_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_item_negative_op)
  if (has_del_item_negative_op()) {
    clear_has_detail();
    ::proto::DelItemNegativeOp* temp = detail_.del_item_negative_op_;
    detail_.del_item_negative_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_del_item_negative_op(::proto::DelItemNegativeOp* del_item_negative_op) {
  clear_detail();
  if (del_item_negative_op) {
    set_has_del_item_negative_op();
    detail_.del_item_negative_op_ = del_item_negative_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_item_negative_op)
}

// .proto.DelEquipOp del_equip_op = 17;
inline bool OfflineMsgBin::has_del_equip_op() const {
  return detail_case() == kDelEquipOp;
}
inline void OfflineMsgBin::set_has_del_equip_op() {
  _oneof_case_[0] = kDelEquipOp;
}
inline void OfflineMsgBin::clear_del_equip_op() {
  if (has_del_equip_op()) {
    delete detail_.del_equip_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DelEquipOp& OfflineMsgBin::del_equip_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_equip_op)
  return has_del_equip_op()
      ? *detail_.del_equip_op_
      : ::proto::DelEquipOp::default_instance();
}
inline ::proto::DelEquipOp* OfflineMsgBin::mutable_del_equip_op() {
  if (!has_del_equip_op()) {
    clear_detail();
    set_has_del_equip_op();
    detail_.del_equip_op_ = new ::proto::DelEquipOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_equip_op)
  return detail_.del_equip_op_;
}
inline ::proto::DelEquipOp* OfflineMsgBin::release_del_equip_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_equip_op)
  if (has_del_equip_op()) {
    clear_has_detail();
    ::proto::DelEquipOp* temp = detail_.del_equip_op_;
    detail_.del_equip_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_del_equip_op(::proto::DelEquipOp* del_equip_op) {
  clear_detail();
  if (del_equip_op) {
    set_has_del_equip_op();
    detail_.del_equip_op_ = del_equip_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_equip_op)
}

// .proto.AddItemOp add_item_op = 18;
inline bool OfflineMsgBin::has_add_item_op() const {
  return detail_case() == kAddItemOp;
}
inline void OfflineMsgBin::set_has_add_item_op() {
  _oneof_case_[0] = kAddItemOp;
}
inline void OfflineMsgBin::clear_add_item_op() {
  if (has_add_item_op()) {
    delete detail_.add_item_op_;
    clear_has_detail();
  }
}
inline  const ::proto::AddItemOp& OfflineMsgBin::add_item_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_item_op)
  return has_add_item_op()
      ? *detail_.add_item_op_
      : ::proto::AddItemOp::default_instance();
}
inline ::proto::AddItemOp* OfflineMsgBin::mutable_add_item_op() {
  if (!has_add_item_op()) {
    clear_detail();
    set_has_add_item_op();
    detail_.add_item_op_ = new ::proto::AddItemOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_item_op)
  return detail_.add_item_op_;
}
inline ::proto::AddItemOp* OfflineMsgBin::release_add_item_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_item_op)
  if (has_add_item_op()) {
    clear_has_detail();
    ::proto::AddItemOp* temp = detail_.add_item_op_;
    detail_.add_item_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_add_item_op(::proto::AddItemOp* add_item_op) {
  clear_detail();
  if (add_item_op) {
    set_has_add_item_op();
    detail_.add_item_op_ = add_item_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_item_op)
}

// .proto.ModifyBornPosOp modify_born_pos_op = 19;
inline bool OfflineMsgBin::has_modify_born_pos_op() const {
  return detail_case() == kModifyBornPosOp;
}
inline void OfflineMsgBin::set_has_modify_born_pos_op() {
  _oneof_case_[0] = kModifyBornPosOp;
}
inline void OfflineMsgBin::clear_modify_born_pos_op() {
  if (has_modify_born_pos_op()) {
    delete detail_.modify_born_pos_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ModifyBornPosOp& OfflineMsgBin::modify_born_pos_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.modify_born_pos_op)
  return has_modify_born_pos_op()
      ? *detail_.modify_born_pos_op_
      : ::proto::ModifyBornPosOp::default_instance();
}
inline ::proto::ModifyBornPosOp* OfflineMsgBin::mutable_modify_born_pos_op() {
  if (!has_modify_born_pos_op()) {
    clear_detail();
    set_has_modify_born_pos_op();
    detail_.modify_born_pos_op_ = new ::proto::ModifyBornPosOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.modify_born_pos_op)
  return detail_.modify_born_pos_op_;
}
inline ::proto::ModifyBornPosOp* OfflineMsgBin::release_modify_born_pos_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.modify_born_pos_op)
  if (has_modify_born_pos_op()) {
    clear_has_detail();
    ::proto::ModifyBornPosOp* temp = detail_.modify_born_pos_op_;
    detail_.modify_born_pos_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_modify_born_pos_op(::proto::ModifyBornPosOp* modify_born_pos_op) {
  clear_detail();
  if (modify_born_pos_op) {
    set_has_modify_born_pos_op();
    detail_.modify_born_pos_op_ = modify_born_pos_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.modify_born_pos_op)
}

// .proto.SubCoinNegativeOp sub_coin_negative_op = 20;
inline bool OfflineMsgBin::has_sub_coin_negative_op() const {
  return detail_case() == kSubCoinNegativeOp;
}
inline void OfflineMsgBin::set_has_sub_coin_negative_op() {
  _oneof_case_[0] = kSubCoinNegativeOp;
}
inline void OfflineMsgBin::clear_sub_coin_negative_op() {
  if (has_sub_coin_negative_op()) {
    delete detail_.sub_coin_negative_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SubCoinNegativeOp& OfflineMsgBin::sub_coin_negative_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.sub_coin_negative_op)
  return has_sub_coin_negative_op()
      ? *detail_.sub_coin_negative_op_
      : ::proto::SubCoinNegativeOp::default_instance();
}
inline ::proto::SubCoinNegativeOp* OfflineMsgBin::mutable_sub_coin_negative_op() {
  if (!has_sub_coin_negative_op()) {
    clear_detail();
    set_has_sub_coin_negative_op();
    detail_.sub_coin_negative_op_ = new ::proto::SubCoinNegativeOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.sub_coin_negative_op)
  return detail_.sub_coin_negative_op_;
}
inline ::proto::SubCoinNegativeOp* OfflineMsgBin::release_sub_coin_negative_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.sub_coin_negative_op)
  if (has_sub_coin_negative_op()) {
    clear_has_detail();
    ::proto::SubCoinNegativeOp* temp = detail_.sub_coin_negative_op_;
    detail_.sub_coin_negative_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_sub_coin_negative_op(::proto::SubCoinNegativeOp* sub_coin_negative_op) {
  clear_detail();
  if (sub_coin_negative_op) {
    set_has_sub_coin_negative_op();
    detail_.sub_coin_negative_op_ = sub_coin_negative_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.sub_coin_negative_op)
}

// .proto.SetQuestContentProgressOp set_quest_content_progress_op = 21;
inline bool OfflineMsgBin::has_set_quest_content_progress_op() const {
  return detail_case() == kSetQuestContentProgressOp;
}
inline void OfflineMsgBin::set_has_set_quest_content_progress_op() {
  _oneof_case_[0] = kSetQuestContentProgressOp;
}
inline void OfflineMsgBin::clear_set_quest_content_progress_op() {
  if (has_set_quest_content_progress_op()) {
    delete detail_.set_quest_content_progress_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetQuestContentProgressOp& OfflineMsgBin::set_quest_content_progress_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_quest_content_progress_op)
  return has_set_quest_content_progress_op()
      ? *detail_.set_quest_content_progress_op_
      : ::proto::SetQuestContentProgressOp::default_instance();
}
inline ::proto::SetQuestContentProgressOp* OfflineMsgBin::mutable_set_quest_content_progress_op() {
  if (!has_set_quest_content_progress_op()) {
    clear_detail();
    set_has_set_quest_content_progress_op();
    detail_.set_quest_content_progress_op_ = new ::proto::SetQuestContentProgressOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_quest_content_progress_op)
  return detail_.set_quest_content_progress_op_;
}
inline ::proto::SetQuestContentProgressOp* OfflineMsgBin::release_set_quest_content_progress_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_quest_content_progress_op)
  if (has_set_quest_content_progress_op()) {
    clear_has_detail();
    ::proto::SetQuestContentProgressOp* temp = detail_.set_quest_content_progress_op_;
    detail_.set_quest_content_progress_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_quest_content_progress_op(::proto::SetQuestContentProgressOp* set_quest_content_progress_op) {
  clear_detail();
  if (set_quest_content_progress_op) {
    set_has_set_quest_content_progress_op();
    detail_.set_quest_content_progress_op_ = set_quest_content_progress_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_quest_content_progress_op)
}

// .proto.FinishOrderOp finish_order_op = 22;
inline bool OfflineMsgBin::has_finish_order_op() const {
  return detail_case() == kFinishOrderOp;
}
inline void OfflineMsgBin::set_has_finish_order_op() {
  _oneof_case_[0] = kFinishOrderOp;
}
inline void OfflineMsgBin::clear_finish_order_op() {
  if (has_finish_order_op()) {
    delete detail_.finish_order_op_;
    clear_has_detail();
  }
}
inline  const ::proto::FinishOrderOp& OfflineMsgBin::finish_order_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.finish_order_op)
  return has_finish_order_op()
      ? *detail_.finish_order_op_
      : ::proto::FinishOrderOp::default_instance();
}
inline ::proto::FinishOrderOp* OfflineMsgBin::mutable_finish_order_op() {
  if (!has_finish_order_op()) {
    clear_detail();
    set_has_finish_order_op();
    detail_.finish_order_op_ = new ::proto::FinishOrderOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.finish_order_op)
  return detail_.finish_order_op_;
}
inline ::proto::FinishOrderOp* OfflineMsgBin::release_finish_order_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.finish_order_op)
  if (has_finish_order_op()) {
    clear_has_detail();
    ::proto::FinishOrderOp* temp = detail_.finish_order_op_;
    detail_.finish_order_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_finish_order_op(::proto::FinishOrderOp* finish_order_op) {
  clear_detail();
  if (finish_order_op) {
    set_has_finish_order_op();
    detail_.finish_order_op_ = finish_order_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.finish_order_op)
}

// .proto.AddOrModifyWatcherOp add_or_modify_watcher_op = 23;
inline bool OfflineMsgBin::has_add_or_modify_watcher_op() const {
  return detail_case() == kAddOrModifyWatcherOp;
}
inline void OfflineMsgBin::set_has_add_or_modify_watcher_op() {
  _oneof_case_[0] = kAddOrModifyWatcherOp;
}
inline void OfflineMsgBin::clear_add_or_modify_watcher_op() {
  if (has_add_or_modify_watcher_op()) {
    delete detail_.add_or_modify_watcher_op_;
    clear_has_detail();
  }
}
inline  const ::proto::AddOrModifyWatcherOp& OfflineMsgBin::add_or_modify_watcher_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_or_modify_watcher_op)
  return has_add_or_modify_watcher_op()
      ? *detail_.add_or_modify_watcher_op_
      : ::proto::AddOrModifyWatcherOp::default_instance();
}
inline ::proto::AddOrModifyWatcherOp* OfflineMsgBin::mutable_add_or_modify_watcher_op() {
  if (!has_add_or_modify_watcher_op()) {
    clear_detail();
    set_has_add_or_modify_watcher_op();
    detail_.add_or_modify_watcher_op_ = new ::proto::AddOrModifyWatcherOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_or_modify_watcher_op)
  return detail_.add_or_modify_watcher_op_;
}
inline ::proto::AddOrModifyWatcherOp* OfflineMsgBin::release_add_or_modify_watcher_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_or_modify_watcher_op)
  if (has_add_or_modify_watcher_op()) {
    clear_has_detail();
    ::proto::AddOrModifyWatcherOp* temp = detail_.add_or_modify_watcher_op_;
    detail_.add_or_modify_watcher_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_add_or_modify_watcher_op(::proto::AddOrModifyWatcherOp* add_or_modify_watcher_op) {
  clear_detail();
  if (add_or_modify_watcher_op) {
    set_has_add_or_modify_watcher_op();
    detail_.add_or_modify_watcher_op_ = add_or_modify_watcher_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_or_modify_watcher_op)
}

// .proto.DelWatcherOp del_watcher_op = 24;
inline bool OfflineMsgBin::has_del_watcher_op() const {
  return detail_case() == kDelWatcherOp;
}
inline void OfflineMsgBin::set_has_del_watcher_op() {
  _oneof_case_[0] = kDelWatcherOp;
}
inline void OfflineMsgBin::clear_del_watcher_op() {
  if (has_del_watcher_op()) {
    delete detail_.del_watcher_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DelWatcherOp& OfflineMsgBin::del_watcher_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_watcher_op)
  return has_del_watcher_op()
      ? *detail_.del_watcher_op_
      : ::proto::DelWatcherOp::default_instance();
}
inline ::proto::DelWatcherOp* OfflineMsgBin::mutable_del_watcher_op() {
  if (!has_del_watcher_op()) {
    clear_detail();
    set_has_del_watcher_op();
    detail_.del_watcher_op_ = new ::proto::DelWatcherOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_watcher_op)
  return detail_.del_watcher_op_;
}
inline ::proto::DelWatcherOp* OfflineMsgBin::release_del_watcher_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_watcher_op)
  if (has_del_watcher_op()) {
    clear_has_detail();
    ::proto::DelWatcherOp* temp = detail_.del_watcher_op_;
    detail_.del_watcher_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_del_watcher_op(::proto::DelWatcherOp* del_watcher_op) {
  clear_detail();
  if (del_watcher_op) {
    set_has_del_watcher_op();
    detail_.del_watcher_op_ = del_watcher_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_watcher_op)
}

// .proto.SetSignatureOp set_signature_op = 25;
inline bool OfflineMsgBin::has_set_signature_op() const {
  return detail_case() == kSetSignatureOp;
}
inline void OfflineMsgBin::set_has_set_signature_op() {
  _oneof_case_[0] = kSetSignatureOp;
}
inline void OfflineMsgBin::clear_set_signature_op() {
  if (has_set_signature_op()) {
    delete detail_.set_signature_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetSignatureOp& OfflineMsgBin::set_signature_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_signature_op)
  return has_set_signature_op()
      ? *detail_.set_signature_op_
      : ::proto::SetSignatureOp::default_instance();
}
inline ::proto::SetSignatureOp* OfflineMsgBin::mutable_set_signature_op() {
  if (!has_set_signature_op()) {
    clear_detail();
    set_has_set_signature_op();
    detail_.set_signature_op_ = new ::proto::SetSignatureOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_signature_op)
  return detail_.set_signature_op_;
}
inline ::proto::SetSignatureOp* OfflineMsgBin::release_set_signature_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_signature_op)
  if (has_set_signature_op()) {
    clear_has_detail();
    ::proto::SetSignatureOp* temp = detail_.set_signature_op_;
    detail_.set_signature_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_signature_op(::proto::SetSignatureOp* set_signature_op) {
  clear_detail();
  if (set_signature_op) {
    set_has_set_signature_op();
    detail_.set_signature_op_ = set_signature_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_signature_op)
}

// .proto.AddOrSubResinOp add_or_sub_resin_op = 26;
inline bool OfflineMsgBin::has_add_or_sub_resin_op() const {
  return detail_case() == kAddOrSubResinOp;
}
inline void OfflineMsgBin::set_has_add_or_sub_resin_op() {
  _oneof_case_[0] = kAddOrSubResinOp;
}
inline void OfflineMsgBin::clear_add_or_sub_resin_op() {
  if (has_add_or_sub_resin_op()) {
    delete detail_.add_or_sub_resin_op_;
    clear_has_detail();
  }
}
inline  const ::proto::AddOrSubResinOp& OfflineMsgBin::add_or_sub_resin_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_or_sub_resin_op)
  return has_add_or_sub_resin_op()
      ? *detail_.add_or_sub_resin_op_
      : ::proto::AddOrSubResinOp::default_instance();
}
inline ::proto::AddOrSubResinOp* OfflineMsgBin::mutable_add_or_sub_resin_op() {
  if (!has_add_or_sub_resin_op()) {
    clear_detail();
    set_has_add_or_sub_resin_op();
    detail_.add_or_sub_resin_op_ = new ::proto::AddOrSubResinOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_or_sub_resin_op)
  return detail_.add_or_sub_resin_op_;
}
inline ::proto::AddOrSubResinOp* OfflineMsgBin::release_add_or_sub_resin_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_or_sub_resin_op)
  if (has_add_or_sub_resin_op()) {
    clear_has_detail();
    ::proto::AddOrSubResinOp* temp = detail_.add_or_sub_resin_op_;
    detail_.add_or_sub_resin_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_add_or_sub_resin_op(::proto::AddOrSubResinOp* add_or_sub_resin_op) {
  clear_detail();
  if (add_or_sub_resin_op) {
    set_has_add_or_sub_resin_op();
    detail_.add_or_sub_resin_op_ = add_or_sub_resin_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_or_sub_resin_op)
}

// .proto.SetQuestGlobalVarValueOp set_quest_global_var_value_op = 27;
inline bool OfflineMsgBin::has_set_quest_global_var_value_op() const {
  return detail_case() == kSetQuestGlobalVarValueOp;
}
inline void OfflineMsgBin::set_has_set_quest_global_var_value_op() {
  _oneof_case_[0] = kSetQuestGlobalVarValueOp;
}
inline void OfflineMsgBin::clear_set_quest_global_var_value_op() {
  if (has_set_quest_global_var_value_op()) {
    delete detail_.set_quest_global_var_value_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetQuestGlobalVarValueOp& OfflineMsgBin::set_quest_global_var_value_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_quest_global_var_value_op)
  return has_set_quest_global_var_value_op()
      ? *detail_.set_quest_global_var_value_op_
      : ::proto::SetQuestGlobalVarValueOp::default_instance();
}
inline ::proto::SetQuestGlobalVarValueOp* OfflineMsgBin::mutable_set_quest_global_var_value_op() {
  if (!has_set_quest_global_var_value_op()) {
    clear_detail();
    set_has_set_quest_global_var_value_op();
    detail_.set_quest_global_var_value_op_ = new ::proto::SetQuestGlobalVarValueOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_quest_global_var_value_op)
  return detail_.set_quest_global_var_value_op_;
}
inline ::proto::SetQuestGlobalVarValueOp* OfflineMsgBin::release_set_quest_global_var_value_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_quest_global_var_value_op)
  if (has_set_quest_global_var_value_op()) {
    clear_has_detail();
    ::proto::SetQuestGlobalVarValueOp* temp = detail_.set_quest_global_var_value_op_;
    detail_.set_quest_global_var_value_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_quest_global_var_value_op(::proto::SetQuestGlobalVarValueOp* set_quest_global_var_value_op) {
  clear_detail();
  if (set_quest_global_var_value_op) {
    set_has_set_quest_global_var_value_op();
    detail_.set_quest_global_var_value_op_ = set_quest_global_var_value_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_quest_global_var_value_op)
}

// .proto.AddMcoinVipPointOp add_mcoin_op = 28;
inline bool OfflineMsgBin::has_add_mcoin_op() const {
  return detail_case() == kAddMcoinOp;
}
inline void OfflineMsgBin::set_has_add_mcoin_op() {
  _oneof_case_[0] = kAddMcoinOp;
}
inline void OfflineMsgBin::clear_add_mcoin_op() {
  if (has_add_mcoin_op()) {
    delete detail_.add_mcoin_op_;
    clear_has_detail();
  }
}
inline  const ::proto::AddMcoinVipPointOp& OfflineMsgBin::add_mcoin_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_mcoin_op)
  return has_add_mcoin_op()
      ? *detail_.add_mcoin_op_
      : ::proto::AddMcoinVipPointOp::default_instance();
}
inline ::proto::AddMcoinVipPointOp* OfflineMsgBin::mutable_add_mcoin_op() {
  if (!has_add_mcoin_op()) {
    clear_detail();
    set_has_add_mcoin_op();
    detail_.add_mcoin_op_ = new ::proto::AddMcoinVipPointOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_mcoin_op)
  return detail_.add_mcoin_op_;
}
inline ::proto::AddMcoinVipPointOp* OfflineMsgBin::release_add_mcoin_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_mcoin_op)
  if (has_add_mcoin_op()) {
    clear_has_detail();
    ::proto::AddMcoinVipPointOp* temp = detail_.add_mcoin_op_;
    detail_.add_mcoin_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_add_mcoin_op(::proto::AddMcoinVipPointOp* add_mcoin_op) {
  clear_detail();
  if (add_mcoin_op) {
    set_has_add_mcoin_op();
    detail_.add_mcoin_op_ = add_mcoin_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_mcoin_op)
}

// .proto.GroupBinOp group_bin_op = 29;
inline bool OfflineMsgBin::has_group_bin_op() const {
  return detail_case() == kGroupBinOp;
}
inline void OfflineMsgBin::set_has_group_bin_op() {
  _oneof_case_[0] = kGroupBinOp;
}
inline void OfflineMsgBin::clear_group_bin_op() {
  if (has_group_bin_op()) {
    delete detail_.group_bin_op_;
    clear_has_detail();
  }
}
inline  const ::proto::GroupBinOp& OfflineMsgBin::group_bin_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.group_bin_op)
  return has_group_bin_op()
      ? *detail_.group_bin_op_
      : ::proto::GroupBinOp::default_instance();
}
inline ::proto::GroupBinOp* OfflineMsgBin::mutable_group_bin_op() {
  if (!has_group_bin_op()) {
    clear_detail();
    set_has_group_bin_op();
    detail_.group_bin_op_ = new ::proto::GroupBinOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.group_bin_op)
  return detail_.group_bin_op_;
}
inline ::proto::GroupBinOp* OfflineMsgBin::release_group_bin_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.group_bin_op)
  if (has_group_bin_op()) {
    clear_has_detail();
    ::proto::GroupBinOp* temp = detail_.group_bin_op_;
    detail_.group_bin_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_group_bin_op(::proto::GroupBinOp* group_bin_op) {
  clear_detail();
  if (group_bin_op) {
    set_has_group_bin_op();
    detail_.group_bin_op_ = group_bin_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.group_bin_op)
}

// .proto.DelOneOffOp del_one_off_op = 30;
inline bool OfflineMsgBin::has_del_one_off_op() const {
  return detail_case() == kDelOneOffOp;
}
inline void OfflineMsgBin::set_has_del_one_off_op() {
  _oneof_case_[0] = kDelOneOffOp;
}
inline void OfflineMsgBin::clear_del_one_off_op() {
  if (has_del_one_off_op()) {
    delete detail_.del_one_off_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DelOneOffOp& OfflineMsgBin::del_one_off_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_one_off_op)
  return has_del_one_off_op()
      ? *detail_.del_one_off_op_
      : ::proto::DelOneOffOp::default_instance();
}
inline ::proto::DelOneOffOp* OfflineMsgBin::mutable_del_one_off_op() {
  if (!has_del_one_off_op()) {
    clear_detail();
    set_has_del_one_off_op();
    detail_.del_one_off_op_ = new ::proto::DelOneOffOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_one_off_op)
  return detail_.del_one_off_op_;
}
inline ::proto::DelOneOffOp* OfflineMsgBin::release_del_one_off_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_one_off_op)
  if (has_del_one_off_op()) {
    clear_has_detail();
    ::proto::DelOneOffOp* temp = detail_.del_one_off_op_;
    detail_.del_one_off_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_del_one_off_op(::proto::DelOneOffOp* del_one_off_op) {
  clear_detail();
  if (del_one_off_op) {
    set_has_del_one_off_op();
    detail_.del_one_off_op_ = del_one_off_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_one_off_op)
}

// .proto.FinishRoutineOp finish_routine_op = 31;
inline bool OfflineMsgBin::has_finish_routine_op() const {
  return detail_case() == kFinishRoutineOp;
}
inline void OfflineMsgBin::set_has_finish_routine_op() {
  _oneof_case_[0] = kFinishRoutineOp;
}
inline void OfflineMsgBin::clear_finish_routine_op() {
  if (has_finish_routine_op()) {
    delete detail_.finish_routine_op_;
    clear_has_detail();
  }
}
inline  const ::proto::FinishRoutineOp& OfflineMsgBin::finish_routine_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.finish_routine_op)
  return has_finish_routine_op()
      ? *detail_.finish_routine_op_
      : ::proto::FinishRoutineOp::default_instance();
}
inline ::proto::FinishRoutineOp* OfflineMsgBin::mutable_finish_routine_op() {
  if (!has_finish_routine_op()) {
    clear_detail();
    set_has_finish_routine_op();
    detail_.finish_routine_op_ = new ::proto::FinishRoutineOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.finish_routine_op)
  return detail_.finish_routine_op_;
}
inline ::proto::FinishRoutineOp* OfflineMsgBin::release_finish_routine_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.finish_routine_op)
  if (has_finish_routine_op()) {
    clear_has_detail();
    ::proto::FinishRoutineOp* temp = detail_.finish_routine_op_;
    detail_.finish_routine_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_finish_routine_op(::proto::FinishRoutineOp* finish_routine_op) {
  clear_detail();
  if (finish_routine_op) {
    set_has_finish_routine_op();
    detail_.finish_routine_op_ = finish_routine_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.finish_routine_op)
}

// .proto.FinishDailyTaskUnloadGroupOp finish_daily_task_group_op = 32;
inline bool OfflineMsgBin::has_finish_daily_task_group_op() const {
  return detail_case() == kFinishDailyTaskGroupOp;
}
inline void OfflineMsgBin::set_has_finish_daily_task_group_op() {
  _oneof_case_[0] = kFinishDailyTaskGroupOp;
}
inline void OfflineMsgBin::clear_finish_daily_task_group_op() {
  if (has_finish_daily_task_group_op()) {
    delete detail_.finish_daily_task_group_op_;
    clear_has_detail();
  }
}
inline  const ::proto::FinishDailyTaskUnloadGroupOp& OfflineMsgBin::finish_daily_task_group_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.finish_daily_task_group_op)
  return has_finish_daily_task_group_op()
      ? *detail_.finish_daily_task_group_op_
      : ::proto::FinishDailyTaskUnloadGroupOp::default_instance();
}
inline ::proto::FinishDailyTaskUnloadGroupOp* OfflineMsgBin::mutable_finish_daily_task_group_op() {
  if (!has_finish_daily_task_group_op()) {
    clear_detail();
    set_has_finish_daily_task_group_op();
    detail_.finish_daily_task_group_op_ = new ::proto::FinishDailyTaskUnloadGroupOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.finish_daily_task_group_op)
  return detail_.finish_daily_task_group_op_;
}
inline ::proto::FinishDailyTaskUnloadGroupOp* OfflineMsgBin::release_finish_daily_task_group_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.finish_daily_task_group_op)
  if (has_finish_daily_task_group_op()) {
    clear_has_detail();
    ::proto::FinishDailyTaskUnloadGroupOp* temp = detail_.finish_daily_task_group_op_;
    detail_.finish_daily_task_group_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_finish_daily_task_group_op(::proto::FinishDailyTaskUnloadGroupOp* finish_daily_task_group_op) {
  clear_detail();
  if (finish_daily_task_group_op) {
    set_has_finish_daily_task_group_op();
    detail_.finish_daily_task_group_op_ = finish_daily_task_group_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.finish_daily_task_group_op)
}

// .proto.RefreshBlossomCircleCampOp refresh_blossom_circle_camp_op = 33;
inline bool OfflineMsgBin::has_refresh_blossom_circle_camp_op() const {
  return detail_case() == kRefreshBlossomCircleCampOp;
}
inline void OfflineMsgBin::set_has_refresh_blossom_circle_camp_op() {
  _oneof_case_[0] = kRefreshBlossomCircleCampOp;
}
inline void OfflineMsgBin::clear_refresh_blossom_circle_camp_op() {
  if (has_refresh_blossom_circle_camp_op()) {
    delete detail_.refresh_blossom_circle_camp_op_;
    clear_has_detail();
  }
}
inline  const ::proto::RefreshBlossomCircleCampOp& OfflineMsgBin::refresh_blossom_circle_camp_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.refresh_blossom_circle_camp_op)
  return has_refresh_blossom_circle_camp_op()
      ? *detail_.refresh_blossom_circle_camp_op_
      : ::proto::RefreshBlossomCircleCampOp::default_instance();
}
inline ::proto::RefreshBlossomCircleCampOp* OfflineMsgBin::mutable_refresh_blossom_circle_camp_op() {
  if (!has_refresh_blossom_circle_camp_op()) {
    clear_detail();
    set_has_refresh_blossom_circle_camp_op();
    detail_.refresh_blossom_circle_camp_op_ = new ::proto::RefreshBlossomCircleCampOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.refresh_blossom_circle_camp_op)
  return detail_.refresh_blossom_circle_camp_op_;
}
inline ::proto::RefreshBlossomCircleCampOp* OfflineMsgBin::release_refresh_blossom_circle_camp_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.refresh_blossom_circle_camp_op)
  if (has_refresh_blossom_circle_camp_op()) {
    clear_has_detail();
    ::proto::RefreshBlossomCircleCampOp* temp = detail_.refresh_blossom_circle_camp_op_;
    detail_.refresh_blossom_circle_camp_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_refresh_blossom_circle_camp_op(::proto::RefreshBlossomCircleCampOp* refresh_blossom_circle_camp_op) {
  clear_detail();
  if (refresh_blossom_circle_camp_op) {
    set_has_refresh_blossom_circle_camp_op();
    detail_.refresh_blossom_circle_camp_op_ = refresh_blossom_circle_camp_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.refresh_blossom_circle_camp_op)
}

// .proto.BlessingActivityGivePicOp blessing_give_pic_op = 34;
inline bool OfflineMsgBin::has_blessing_give_pic_op() const {
  return detail_case() == kBlessingGivePicOp;
}
inline void OfflineMsgBin::set_has_blessing_give_pic_op() {
  _oneof_case_[0] = kBlessingGivePicOp;
}
inline void OfflineMsgBin::clear_blessing_give_pic_op() {
  if (has_blessing_give_pic_op()) {
    delete detail_.blessing_give_pic_op_;
    clear_has_detail();
  }
}
inline  const ::proto::BlessingActivityGivePicOp& OfflineMsgBin::blessing_give_pic_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.blessing_give_pic_op)
  return has_blessing_give_pic_op()
      ? *detail_.blessing_give_pic_op_
      : ::proto::BlessingActivityGivePicOp::default_instance();
}
inline ::proto::BlessingActivityGivePicOp* OfflineMsgBin::mutable_blessing_give_pic_op() {
  if (!has_blessing_give_pic_op()) {
    clear_detail();
    set_has_blessing_give_pic_op();
    detail_.blessing_give_pic_op_ = new ::proto::BlessingActivityGivePicOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.blessing_give_pic_op)
  return detail_.blessing_give_pic_op_;
}
inline ::proto::BlessingActivityGivePicOp* OfflineMsgBin::release_blessing_give_pic_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.blessing_give_pic_op)
  if (has_blessing_give_pic_op()) {
    clear_has_detail();
    ::proto::BlessingActivityGivePicOp* temp = detail_.blessing_give_pic_op_;
    detail_.blessing_give_pic_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_blessing_give_pic_op(::proto::BlessingActivityGivePicOp* blessing_give_pic_op) {
  clear_detail();
  if (blessing_give_pic_op) {
    set_has_blessing_give_pic_op();
    detail_.blessing_give_pic_op_ = blessing_give_pic_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.blessing_give_pic_op)
}

// .proto.ExpeditionActivityAssistOp expedition_assist_op = 35;
inline bool OfflineMsgBin::has_expedition_assist_op() const {
  return detail_case() == kExpeditionAssistOp;
}
inline void OfflineMsgBin::set_has_expedition_assist_op() {
  _oneof_case_[0] = kExpeditionAssistOp;
}
inline void OfflineMsgBin::clear_expedition_assist_op() {
  if (has_expedition_assist_op()) {
    delete detail_.expedition_assist_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ExpeditionActivityAssistOp& OfflineMsgBin::expedition_assist_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.expedition_assist_op)
  return has_expedition_assist_op()
      ? *detail_.expedition_assist_op_
      : ::proto::ExpeditionActivityAssistOp::default_instance();
}
inline ::proto::ExpeditionActivityAssistOp* OfflineMsgBin::mutable_expedition_assist_op() {
  if (!has_expedition_assist_op()) {
    clear_detail();
    set_has_expedition_assist_op();
    detail_.expedition_assist_op_ = new ::proto::ExpeditionActivityAssistOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.expedition_assist_op)
  return detail_.expedition_assist_op_;
}
inline ::proto::ExpeditionActivityAssistOp* OfflineMsgBin::release_expedition_assist_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.expedition_assist_op)
  if (has_expedition_assist_op()) {
    clear_has_detail();
    ::proto::ExpeditionActivityAssistOp* temp = detail_.expedition_assist_op_;
    detail_.expedition_assist_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_expedition_assist_op(::proto::ExpeditionActivityAssistOp* expedition_assist_op) {
  clear_detail();
  if (expedition_assist_op) {
    set_has_expedition_assist_op();
    detail_.expedition_assist_op_ = expedition_assist_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.expedition_assist_op)
}

// .proto.RecoverWorldLevelOp recover_world_level_op = 36;
inline bool OfflineMsgBin::has_recover_world_level_op() const {
  return detail_case() == kRecoverWorldLevelOp;
}
inline void OfflineMsgBin::set_has_recover_world_level_op() {
  _oneof_case_[0] = kRecoverWorldLevelOp;
}
inline void OfflineMsgBin::clear_recover_world_level_op() {
  if (has_recover_world_level_op()) {
    delete detail_.recover_world_level_op_;
    clear_has_detail();
  }
}
inline  const ::proto::RecoverWorldLevelOp& OfflineMsgBin::recover_world_level_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.recover_world_level_op)
  return has_recover_world_level_op()
      ? *detail_.recover_world_level_op_
      : ::proto::RecoverWorldLevelOp::default_instance();
}
inline ::proto::RecoverWorldLevelOp* OfflineMsgBin::mutable_recover_world_level_op() {
  if (!has_recover_world_level_op()) {
    clear_detail();
    set_has_recover_world_level_op();
    detail_.recover_world_level_op_ = new ::proto::RecoverWorldLevelOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.recover_world_level_op)
  return detail_.recover_world_level_op_;
}
inline ::proto::RecoverWorldLevelOp* OfflineMsgBin::release_recover_world_level_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.recover_world_level_op)
  if (has_recover_world_level_op()) {
    clear_has_detail();
    ::proto::RecoverWorldLevelOp* temp = detail_.recover_world_level_op_;
    detail_.recover_world_level_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_recover_world_level_op(::proto::RecoverWorldLevelOp* recover_world_level_op) {
  clear_detail();
  if (recover_world_level_op) {
    set_has_recover_world_level_op();
    detail_.recover_world_level_op_ = recover_world_level_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.recover_world_level_op)
}

// .proto.ForceAcceptQuestOp force_accept_quest_op = 37;
inline bool OfflineMsgBin::has_force_accept_quest_op() const {
  return detail_case() == kForceAcceptQuestOp;
}
inline void OfflineMsgBin::set_has_force_accept_quest_op() {
  _oneof_case_[0] = kForceAcceptQuestOp;
}
inline void OfflineMsgBin::clear_force_accept_quest_op() {
  if (has_force_accept_quest_op()) {
    delete detail_.force_accept_quest_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ForceAcceptQuestOp& OfflineMsgBin::force_accept_quest_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.force_accept_quest_op)
  return has_force_accept_quest_op()
      ? *detail_.force_accept_quest_op_
      : ::proto::ForceAcceptQuestOp::default_instance();
}
inline ::proto::ForceAcceptQuestOp* OfflineMsgBin::mutable_force_accept_quest_op() {
  if (!has_force_accept_quest_op()) {
    clear_detail();
    set_has_force_accept_quest_op();
    detail_.force_accept_quest_op_ = new ::proto::ForceAcceptQuestOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.force_accept_quest_op)
  return detail_.force_accept_quest_op_;
}
inline ::proto::ForceAcceptQuestOp* OfflineMsgBin::release_force_accept_quest_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.force_accept_quest_op)
  if (has_force_accept_quest_op()) {
    clear_has_detail();
    ::proto::ForceAcceptQuestOp* temp = detail_.force_accept_quest_op_;
    detail_.force_accept_quest_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_force_accept_quest_op(::proto::ForceAcceptQuestOp* force_accept_quest_op) {
  clear_detail();
  if (force_accept_quest_op) {
    set_has_force_accept_quest_op();
    detail_.force_accept_quest_op_ = force_accept_quest_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.force_accept_quest_op)
}

// .proto.SetMainCoopConfidenceOp set_main_coop_confidence_op = 38;
inline bool OfflineMsgBin::has_set_main_coop_confidence_op() const {
  return detail_case() == kSetMainCoopConfidenceOp;
}
inline void OfflineMsgBin::set_has_set_main_coop_confidence_op() {
  _oneof_case_[0] = kSetMainCoopConfidenceOp;
}
inline void OfflineMsgBin::clear_set_main_coop_confidence_op() {
  if (has_set_main_coop_confidence_op()) {
    delete detail_.set_main_coop_confidence_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetMainCoopConfidenceOp& OfflineMsgBin::set_main_coop_confidence_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_main_coop_confidence_op)
  return has_set_main_coop_confidence_op()
      ? *detail_.set_main_coop_confidence_op_
      : ::proto::SetMainCoopConfidenceOp::default_instance();
}
inline ::proto::SetMainCoopConfidenceOp* OfflineMsgBin::mutable_set_main_coop_confidence_op() {
  if (!has_set_main_coop_confidence_op()) {
    clear_detail();
    set_has_set_main_coop_confidence_op();
    detail_.set_main_coop_confidence_op_ = new ::proto::SetMainCoopConfidenceOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_main_coop_confidence_op)
  return detail_.set_main_coop_confidence_op_;
}
inline ::proto::SetMainCoopConfidenceOp* OfflineMsgBin::release_set_main_coop_confidence_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_main_coop_confidence_op)
  if (has_set_main_coop_confidence_op()) {
    clear_has_detail();
    ::proto::SetMainCoopConfidenceOp* temp = detail_.set_main_coop_confidence_op_;
    detail_.set_main_coop_confidence_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_main_coop_confidence_op(::proto::SetMainCoopConfidenceOp* set_main_coop_confidence_op) {
  clear_detail();
  if (set_main_coop_confidence_op) {
    set_has_set_main_coop_confidence_op();
    detail_.set_main_coop_confidence_op_ = set_main_coop_confidence_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_main_coop_confidence_op)
}

// .proto.AddCoopPointSavePointListOp add_coop_point_save_point_list_op = 39;
inline bool OfflineMsgBin::has_add_coop_point_save_point_list_op() const {
  return detail_case() == kAddCoopPointSavePointListOp;
}
inline void OfflineMsgBin::set_has_add_coop_point_save_point_list_op() {
  _oneof_case_[0] = kAddCoopPointSavePointListOp;
}
inline void OfflineMsgBin::clear_add_coop_point_save_point_list_op() {
  if (has_add_coop_point_save_point_list_op()) {
    delete detail_.add_coop_point_save_point_list_op_;
    clear_has_detail();
  }
}
inline  const ::proto::AddCoopPointSavePointListOp& OfflineMsgBin::add_coop_point_save_point_list_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_coop_point_save_point_list_op)
  return has_add_coop_point_save_point_list_op()
      ? *detail_.add_coop_point_save_point_list_op_
      : ::proto::AddCoopPointSavePointListOp::default_instance();
}
inline ::proto::AddCoopPointSavePointListOp* OfflineMsgBin::mutable_add_coop_point_save_point_list_op() {
  if (!has_add_coop_point_save_point_list_op()) {
    clear_detail();
    set_has_add_coop_point_save_point_list_op();
    detail_.add_coop_point_save_point_list_op_ = new ::proto::AddCoopPointSavePointListOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_coop_point_save_point_list_op)
  return detail_.add_coop_point_save_point_list_op_;
}
inline ::proto::AddCoopPointSavePointListOp* OfflineMsgBin::release_add_coop_point_save_point_list_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_coop_point_save_point_list_op)
  if (has_add_coop_point_save_point_list_op()) {
    clear_has_detail();
    ::proto::AddCoopPointSavePointListOp* temp = detail_.add_coop_point_save_point_list_op_;
    detail_.add_coop_point_save_point_list_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_add_coop_point_save_point_list_op(::proto::AddCoopPointSavePointListOp* add_coop_point_save_point_list_op) {
  clear_detail();
  if (add_coop_point_save_point_list_op) {
    set_has_add_coop_point_save_point_list_op();
    detail_.add_coop_point_save_point_list_op_ = add_coop_point_save_point_list_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_coop_point_save_point_list_op)
}

// .proto.AddRegionSearchProgressOp add_region_search_progress_op = 40;
inline bool OfflineMsgBin::has_add_region_search_progress_op() const {
  return detail_case() == kAddRegionSearchProgressOp;
}
inline void OfflineMsgBin::set_has_add_region_search_progress_op() {
  _oneof_case_[0] = kAddRegionSearchProgressOp;
}
inline void OfflineMsgBin::clear_add_region_search_progress_op() {
  if (has_add_region_search_progress_op()) {
    delete detail_.add_region_search_progress_op_;
    clear_has_detail();
  }
}
inline  const ::proto::AddRegionSearchProgressOp& OfflineMsgBin::add_region_search_progress_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_region_search_progress_op)
  return has_add_region_search_progress_op()
      ? *detail_.add_region_search_progress_op_
      : ::proto::AddRegionSearchProgressOp::default_instance();
}
inline ::proto::AddRegionSearchProgressOp* OfflineMsgBin::mutable_add_region_search_progress_op() {
  if (!has_add_region_search_progress_op()) {
    clear_detail();
    set_has_add_region_search_progress_op();
    detail_.add_region_search_progress_op_ = new ::proto::AddRegionSearchProgressOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_region_search_progress_op)
  return detail_.add_region_search_progress_op_;
}
inline ::proto::AddRegionSearchProgressOp* OfflineMsgBin::release_add_region_search_progress_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_region_search_progress_op)
  if (has_add_region_search_progress_op()) {
    clear_has_detail();
    ::proto::AddRegionSearchProgressOp* temp = detail_.add_region_search_progress_op_;
    detail_.add_region_search_progress_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_add_region_search_progress_op(::proto::AddRegionSearchProgressOp* add_region_search_progress_op) {
  clear_detail();
  if (add_region_search_progress_op) {
    set_has_add_region_search_progress_op();
    detail_.add_region_search_progress_op_ = add_region_search_progress_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_region_search_progress_op)
}

// .proto.SetMatchPunishTimesOp set_match_punish_times_op = 41;
inline bool OfflineMsgBin::has_set_match_punish_times_op() const {
  return detail_case() == kSetMatchPunishTimesOp;
}
inline void OfflineMsgBin::set_has_set_match_punish_times_op() {
  _oneof_case_[0] = kSetMatchPunishTimesOp;
}
inline void OfflineMsgBin::clear_set_match_punish_times_op() {
  if (has_set_match_punish_times_op()) {
    delete detail_.set_match_punish_times_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetMatchPunishTimesOp& OfflineMsgBin::set_match_punish_times_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_match_punish_times_op)
  return has_set_match_punish_times_op()
      ? *detail_.set_match_punish_times_op_
      : ::proto::SetMatchPunishTimesOp::default_instance();
}
inline ::proto::SetMatchPunishTimesOp* OfflineMsgBin::mutable_set_match_punish_times_op() {
  if (!has_set_match_punish_times_op()) {
    clear_detail();
    set_has_set_match_punish_times_op();
    detail_.set_match_punish_times_op_ = new ::proto::SetMatchPunishTimesOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_match_punish_times_op)
  return detail_.set_match_punish_times_op_;
}
inline ::proto::SetMatchPunishTimesOp* OfflineMsgBin::release_set_match_punish_times_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_match_punish_times_op)
  if (has_set_match_punish_times_op()) {
    clear_has_detail();
    ::proto::SetMatchPunishTimesOp* temp = detail_.set_match_punish_times_op_;
    detail_.set_match_punish_times_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_match_punish_times_op(::proto::SetMatchPunishTimesOp* set_match_punish_times_op) {
  clear_detail();
  if (set_match_punish_times_op) {
    set_has_set_match_punish_times_op();
    detail_.set_match_punish_times_op_ = set_match_punish_times_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_match_punish_times_op)
}

// .proto.ResetChannellerSlabCampGroupOp reset_channeller_slab_camp_group_op = 42;
inline bool OfflineMsgBin::has_reset_channeller_slab_camp_group_op() const {
  return detail_case() == kResetChannellerSlabCampGroupOp;
}
inline void OfflineMsgBin::set_has_reset_channeller_slab_camp_group_op() {
  _oneof_case_[0] = kResetChannellerSlabCampGroupOp;
}
inline void OfflineMsgBin::clear_reset_channeller_slab_camp_group_op() {
  if (has_reset_channeller_slab_camp_group_op()) {
    delete detail_.reset_channeller_slab_camp_group_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ResetChannellerSlabCampGroupOp& OfflineMsgBin::reset_channeller_slab_camp_group_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.reset_channeller_slab_camp_group_op)
  return has_reset_channeller_slab_camp_group_op()
      ? *detail_.reset_channeller_slab_camp_group_op_
      : ::proto::ResetChannellerSlabCampGroupOp::default_instance();
}
inline ::proto::ResetChannellerSlabCampGroupOp* OfflineMsgBin::mutable_reset_channeller_slab_camp_group_op() {
  if (!has_reset_channeller_slab_camp_group_op()) {
    clear_detail();
    set_has_reset_channeller_slab_camp_group_op();
    detail_.reset_channeller_slab_camp_group_op_ = new ::proto::ResetChannellerSlabCampGroupOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.reset_channeller_slab_camp_group_op)
  return detail_.reset_channeller_slab_camp_group_op_;
}
inline ::proto::ResetChannellerSlabCampGroupOp* OfflineMsgBin::release_reset_channeller_slab_camp_group_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.reset_channeller_slab_camp_group_op)
  if (has_reset_channeller_slab_camp_group_op()) {
    clear_has_detail();
    ::proto::ResetChannellerSlabCampGroupOp* temp = detail_.reset_channeller_slab_camp_group_op_;
    detail_.reset_channeller_slab_camp_group_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_reset_channeller_slab_camp_group_op(::proto::ResetChannellerSlabCampGroupOp* reset_channeller_slab_camp_group_op) {
  clear_detail();
  if (reset_channeller_slab_camp_group_op) {
    set_has_reset_channeller_slab_camp_group_op();
    detail_.reset_channeller_slab_camp_group_op_ = reset_channeller_slab_camp_group_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.reset_channeller_slab_camp_group_op)
}

// .proto.ProcSceneTagOp proc_scene_tag_op = 43;
inline bool OfflineMsgBin::has_proc_scene_tag_op() const {
  return detail_case() == kProcSceneTagOp;
}
inline void OfflineMsgBin::set_has_proc_scene_tag_op() {
  _oneof_case_[0] = kProcSceneTagOp;
}
inline void OfflineMsgBin::clear_proc_scene_tag_op() {
  if (has_proc_scene_tag_op()) {
    delete detail_.proc_scene_tag_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ProcSceneTagOp& OfflineMsgBin::proc_scene_tag_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.proc_scene_tag_op)
  return has_proc_scene_tag_op()
      ? *detail_.proc_scene_tag_op_
      : ::proto::ProcSceneTagOp::default_instance();
}
inline ::proto::ProcSceneTagOp* OfflineMsgBin::mutable_proc_scene_tag_op() {
  if (!has_proc_scene_tag_op()) {
    clear_detail();
    set_has_proc_scene_tag_op();
    detail_.proc_scene_tag_op_ = new ::proto::ProcSceneTagOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.proc_scene_tag_op)
  return detail_.proc_scene_tag_op_;
}
inline ::proto::ProcSceneTagOp* OfflineMsgBin::release_proc_scene_tag_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.proc_scene_tag_op)
  if (has_proc_scene_tag_op()) {
    clear_has_detail();
    ::proto::ProcSceneTagOp* temp = detail_.proc_scene_tag_op_;
    detail_.proc_scene_tag_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_proc_scene_tag_op(::proto::ProcSceneTagOp* proc_scene_tag_op) {
  clear_detail();
  if (proc_scene_tag_op) {
    set_has_proc_scene_tag_op();
    detail_.proc_scene_tag_op_ = proc_scene_tag_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.proc_scene_tag_op)
}

// .proto.SetClimateAreaTypeOp set_climate_area_type_op = 44;
inline bool OfflineMsgBin::has_set_climate_area_type_op() const {
  return detail_case() == kSetClimateAreaTypeOp;
}
inline void OfflineMsgBin::set_has_set_climate_area_type_op() {
  _oneof_case_[0] = kSetClimateAreaTypeOp;
}
inline void OfflineMsgBin::clear_set_climate_area_type_op() {
  if (has_set_climate_area_type_op()) {
    delete detail_.set_climate_area_type_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetClimateAreaTypeOp& OfflineMsgBin::set_climate_area_type_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_climate_area_type_op)
  return has_set_climate_area_type_op()
      ? *detail_.set_climate_area_type_op_
      : ::proto::SetClimateAreaTypeOp::default_instance();
}
inline ::proto::SetClimateAreaTypeOp* OfflineMsgBin::mutable_set_climate_area_type_op() {
  if (!has_set_climate_area_type_op()) {
    clear_detail();
    set_has_set_climate_area_type_op();
    detail_.set_climate_area_type_op_ = new ::proto::SetClimateAreaTypeOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_climate_area_type_op)
  return detail_.set_climate_area_type_op_;
}
inline ::proto::SetClimateAreaTypeOp* OfflineMsgBin::release_set_climate_area_type_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_climate_area_type_op)
  if (has_set_climate_area_type_op()) {
    clear_has_detail();
    ::proto::SetClimateAreaTypeOp* temp = detail_.set_climate_area_type_op_;
    detail_.set_climate_area_type_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_climate_area_type_op(::proto::SetClimateAreaTypeOp* set_climate_area_type_op) {
  clear_detail();
  if (set_climate_area_type_op) {
    set_has_set_climate_area_type_op();
    detail_.set_climate_area_type_op_ = set_climate_area_type_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_climate_area_type_op)
}

// .proto.ExchangeMcoinOp exchange_mcoin_op = 45;
inline bool OfflineMsgBin::has_exchange_mcoin_op() const {
  return detail_case() == kExchangeMcoinOp;
}
inline void OfflineMsgBin::set_has_exchange_mcoin_op() {
  _oneof_case_[0] = kExchangeMcoinOp;
}
inline void OfflineMsgBin::clear_exchange_mcoin_op() {
  if (has_exchange_mcoin_op()) {
    delete detail_.exchange_mcoin_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ExchangeMcoinOp& OfflineMsgBin::exchange_mcoin_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.exchange_mcoin_op)
  return has_exchange_mcoin_op()
      ? *detail_.exchange_mcoin_op_
      : ::proto::ExchangeMcoinOp::default_instance();
}
inline ::proto::ExchangeMcoinOp* OfflineMsgBin::mutable_exchange_mcoin_op() {
  if (!has_exchange_mcoin_op()) {
    clear_detail();
    set_has_exchange_mcoin_op();
    detail_.exchange_mcoin_op_ = new ::proto::ExchangeMcoinOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.exchange_mcoin_op)
  return detail_.exchange_mcoin_op_;
}
inline ::proto::ExchangeMcoinOp* OfflineMsgBin::release_exchange_mcoin_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.exchange_mcoin_op)
  if (has_exchange_mcoin_op()) {
    clear_has_detail();
    ::proto::ExchangeMcoinOp* temp = detail_.exchange_mcoin_op_;
    detail_.exchange_mcoin_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_exchange_mcoin_op(::proto::ExchangeMcoinOp* exchange_mcoin_op) {
  clear_detail();
  if (exchange_mcoin_op) {
    set_has_exchange_mcoin_op();
    detail_.exchange_mcoin_op_ = exchange_mcoin_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.exchange_mcoin_op)
}

// .proto.SetFinishedParentQuestChildStateOp set_finished_parent_quest_child_state_op = 46;
inline bool OfflineMsgBin::has_set_finished_parent_quest_child_state_op() const {
  return detail_case() == kSetFinishedParentQuestChildStateOp;
}
inline void OfflineMsgBin::set_has_set_finished_parent_quest_child_state_op() {
  _oneof_case_[0] = kSetFinishedParentQuestChildStateOp;
}
inline void OfflineMsgBin::clear_set_finished_parent_quest_child_state_op() {
  if (has_set_finished_parent_quest_child_state_op()) {
    delete detail_.set_finished_parent_quest_child_state_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetFinishedParentQuestChildStateOp& OfflineMsgBin::set_finished_parent_quest_child_state_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_finished_parent_quest_child_state_op)
  return has_set_finished_parent_quest_child_state_op()
      ? *detail_.set_finished_parent_quest_child_state_op_
      : ::proto::SetFinishedParentQuestChildStateOp::default_instance();
}
inline ::proto::SetFinishedParentQuestChildStateOp* OfflineMsgBin::mutable_set_finished_parent_quest_child_state_op() {
  if (!has_set_finished_parent_quest_child_state_op()) {
    clear_detail();
    set_has_set_finished_parent_quest_child_state_op();
    detail_.set_finished_parent_quest_child_state_op_ = new ::proto::SetFinishedParentQuestChildStateOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_finished_parent_quest_child_state_op)
  return detail_.set_finished_parent_quest_child_state_op_;
}
inline ::proto::SetFinishedParentQuestChildStateOp* OfflineMsgBin::release_set_finished_parent_quest_child_state_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_finished_parent_quest_child_state_op)
  if (has_set_finished_parent_quest_child_state_op()) {
    clear_has_detail();
    ::proto::SetFinishedParentQuestChildStateOp* temp = detail_.set_finished_parent_quest_child_state_op_;
    detail_.set_finished_parent_quest_child_state_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_finished_parent_quest_child_state_op(::proto::SetFinishedParentQuestChildStateOp* set_finished_parent_quest_child_state_op) {
  clear_detail();
  if (set_finished_parent_quest_child_state_op) {
    set_has_set_finished_parent_quest_child_state_op();
    detail_.set_finished_parent_quest_child_state_op_ = set_finished_parent_quest_child_state_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_finished_parent_quest_child_state_op)
}

// .proto.SetLevel1AreaExplorePointOp set_level1_area_explore_point_op = 47;
inline bool OfflineMsgBin::has_set_level1_area_explore_point_op() const {
  return detail_case() == kSetLevel1AreaExplorePointOp;
}
inline void OfflineMsgBin::set_has_set_level1_area_explore_point_op() {
  _oneof_case_[0] = kSetLevel1AreaExplorePointOp;
}
inline void OfflineMsgBin::clear_set_level1_area_explore_point_op() {
  if (has_set_level1_area_explore_point_op()) {
    delete detail_.set_level1_area_explore_point_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetLevel1AreaExplorePointOp& OfflineMsgBin::set_level1_area_explore_point_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_level1_area_explore_point_op)
  return has_set_level1_area_explore_point_op()
      ? *detail_.set_level1_area_explore_point_op_
      : ::proto::SetLevel1AreaExplorePointOp::default_instance();
}
inline ::proto::SetLevel1AreaExplorePointOp* OfflineMsgBin::mutable_set_level1_area_explore_point_op() {
  if (!has_set_level1_area_explore_point_op()) {
    clear_detail();
    set_has_set_level1_area_explore_point_op();
    detail_.set_level1_area_explore_point_op_ = new ::proto::SetLevel1AreaExplorePointOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_level1_area_explore_point_op)
  return detail_.set_level1_area_explore_point_op_;
}
inline ::proto::SetLevel1AreaExplorePointOp* OfflineMsgBin::release_set_level1_area_explore_point_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_level1_area_explore_point_op)
  if (has_set_level1_area_explore_point_op()) {
    clear_has_detail();
    ::proto::SetLevel1AreaExplorePointOp* temp = detail_.set_level1_area_explore_point_op_;
    detail_.set_level1_area_explore_point_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_level1_area_explore_point_op(::proto::SetLevel1AreaExplorePointOp* set_level1_area_explore_point_op) {
  clear_detail();
  if (set_level1_area_explore_point_op) {
    set_has_set_level1_area_explore_point_op();
    detail_.set_level1_area_explore_point_op_ = set_level1_area_explore_point_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_level1_area_explore_point_op)
}

// .proto.SetCodexOpenOrCloseOp set_codex_open_or_close_op = 48;
inline bool OfflineMsgBin::has_set_codex_open_or_close_op() const {
  return detail_case() == kSetCodexOpenOrCloseOp;
}
inline void OfflineMsgBin::set_has_set_codex_open_or_close_op() {
  _oneof_case_[0] = kSetCodexOpenOrCloseOp;
}
inline void OfflineMsgBin::clear_set_codex_open_or_close_op() {
  if (has_set_codex_open_or_close_op()) {
    delete detail_.set_codex_open_or_close_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetCodexOpenOrCloseOp& OfflineMsgBin::set_codex_open_or_close_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_codex_open_or_close_op)
  return has_set_codex_open_or_close_op()
      ? *detail_.set_codex_open_or_close_op_
      : ::proto::SetCodexOpenOrCloseOp::default_instance();
}
inline ::proto::SetCodexOpenOrCloseOp* OfflineMsgBin::mutable_set_codex_open_or_close_op() {
  if (!has_set_codex_open_or_close_op()) {
    clear_detail();
    set_has_set_codex_open_or_close_op();
    detail_.set_codex_open_or_close_op_ = new ::proto::SetCodexOpenOrCloseOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_codex_open_or_close_op)
  return detail_.set_codex_open_or_close_op_;
}
inline ::proto::SetCodexOpenOrCloseOp* OfflineMsgBin::release_set_codex_open_or_close_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_codex_open_or_close_op)
  if (has_set_codex_open_or_close_op()) {
    clear_has_detail();
    ::proto::SetCodexOpenOrCloseOp* temp = detail_.set_codex_open_or_close_op_;
    detail_.set_codex_open_or_close_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_codex_open_or_close_op(::proto::SetCodexOpenOrCloseOp* set_codex_open_or_close_op) {
  clear_detail();
  if (set_codex_open_or_close_op) {
    set_has_set_codex_open_or_close_op();
    detail_.set_codex_open_or_close_op_ = set_codex_open_or_close_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_codex_open_or_close_op)
}

// .proto.ChangeMapAreaInfoOp change_map_area_info_op = 49;
inline bool OfflineMsgBin::has_change_map_area_info_op() const {
  return detail_case() == kChangeMapAreaInfoOp;
}
inline void OfflineMsgBin::set_has_change_map_area_info_op() {
  _oneof_case_[0] = kChangeMapAreaInfoOp;
}
inline void OfflineMsgBin::clear_change_map_area_info_op() {
  if (has_change_map_area_info_op()) {
    delete detail_.change_map_area_info_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ChangeMapAreaInfoOp& OfflineMsgBin::change_map_area_info_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.change_map_area_info_op)
  return has_change_map_area_info_op()
      ? *detail_.change_map_area_info_op_
      : ::proto::ChangeMapAreaInfoOp::default_instance();
}
inline ::proto::ChangeMapAreaInfoOp* OfflineMsgBin::mutable_change_map_area_info_op() {
  if (!has_change_map_area_info_op()) {
    clear_detail();
    set_has_change_map_area_info_op();
    detail_.change_map_area_info_op_ = new ::proto::ChangeMapAreaInfoOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.change_map_area_info_op)
  return detail_.change_map_area_info_op_;
}
inline ::proto::ChangeMapAreaInfoOp* OfflineMsgBin::release_change_map_area_info_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.change_map_area_info_op)
  if (has_change_map_area_info_op()) {
    clear_has_detail();
    ::proto::ChangeMapAreaInfoOp* temp = detail_.change_map_area_info_op_;
    detail_.change_map_area_info_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_change_map_area_info_op(::proto::ChangeMapAreaInfoOp* change_map_area_info_op) {
  clear_detail();
  if (change_map_area_info_op) {
    set_has_change_map_area_info_op();
    detail_.change_map_area_info_op_ = change_map_area_info_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.change_map_area_info_op)
}

// .proto.GroupLinkOp group_link_op = 50;
inline bool OfflineMsgBin::has_group_link_op() const {
  return detail_case() == kGroupLinkOp;
}
inline void OfflineMsgBin::set_has_group_link_op() {
  _oneof_case_[0] = kGroupLinkOp;
}
inline void OfflineMsgBin::clear_group_link_op() {
  if (has_group_link_op()) {
    delete detail_.group_link_op_;
    clear_has_detail();
  }
}
inline  const ::proto::GroupLinkOp& OfflineMsgBin::group_link_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.group_link_op)
  return has_group_link_op()
      ? *detail_.group_link_op_
      : ::proto::GroupLinkOp::default_instance();
}
inline ::proto::GroupLinkOp* OfflineMsgBin::mutable_group_link_op() {
  if (!has_group_link_op()) {
    clear_detail();
    set_has_group_link_op();
    detail_.group_link_op_ = new ::proto::GroupLinkOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.group_link_op)
  return detail_.group_link_op_;
}
inline ::proto::GroupLinkOp* OfflineMsgBin::release_group_link_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.group_link_op)
  if (has_group_link_op()) {
    clear_has_detail();
    ::proto::GroupLinkOp* temp = detail_.group_link_op_;
    detail_.group_link_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_group_link_op(::proto::GroupLinkOp* group_link_op) {
  clear_detail();
  if (group_link_op) {
    set_has_group_link_op();
    detail_.group_link_op_ = group_link_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.group_link_op)
}

// .proto.SetWatcherCompRecordValueOp set_watcher_comp_record_value_op = 51;
inline bool OfflineMsgBin::has_set_watcher_comp_record_value_op() const {
  return detail_case() == kSetWatcherCompRecordValueOp;
}
inline void OfflineMsgBin::set_has_set_watcher_comp_record_value_op() {
  _oneof_case_[0] = kSetWatcherCompRecordValueOp;
}
inline void OfflineMsgBin::clear_set_watcher_comp_record_value_op() {
  if (has_set_watcher_comp_record_value_op()) {
    delete detail_.set_watcher_comp_record_value_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetWatcherCompRecordValueOp& OfflineMsgBin::set_watcher_comp_record_value_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_watcher_comp_record_value_op)
  return has_set_watcher_comp_record_value_op()
      ? *detail_.set_watcher_comp_record_value_op_
      : ::proto::SetWatcherCompRecordValueOp::default_instance();
}
inline ::proto::SetWatcherCompRecordValueOp* OfflineMsgBin::mutable_set_watcher_comp_record_value_op() {
  if (!has_set_watcher_comp_record_value_op()) {
    clear_detail();
    set_has_set_watcher_comp_record_value_op();
    detail_.set_watcher_comp_record_value_op_ = new ::proto::SetWatcherCompRecordValueOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_watcher_comp_record_value_op)
  return detail_.set_watcher_comp_record_value_op_;
}
inline ::proto::SetWatcherCompRecordValueOp* OfflineMsgBin::release_set_watcher_comp_record_value_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_watcher_comp_record_value_op)
  if (has_set_watcher_comp_record_value_op()) {
    clear_has_detail();
    ::proto::SetWatcherCompRecordValueOp* temp = detail_.set_watcher_comp_record_value_op_;
    detail_.set_watcher_comp_record_value_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_watcher_comp_record_value_op(::proto::SetWatcherCompRecordValueOp* set_watcher_comp_record_value_op) {
  clear_detail();
  if (set_watcher_comp_record_value_op) {
    set_has_set_watcher_comp_record_value_op();
    detail_.set_watcher_comp_record_value_op_ = set_watcher_comp_record_value_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_watcher_comp_record_value_op)
}

// .proto.AddFriendOp add_friend_op = 52;
inline bool OfflineMsgBin::has_add_friend_op() const {
  return detail_case() == kAddFriendOp;
}
inline void OfflineMsgBin::set_has_add_friend_op() {
  _oneof_case_[0] = kAddFriendOp;
}
inline void OfflineMsgBin::clear_add_friend_op() {
  if (has_add_friend_op()) {
    delete detail_.add_friend_op_;
    clear_has_detail();
  }
}
inline  const ::proto::AddFriendOp& OfflineMsgBin::add_friend_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_friend_op)
  return has_add_friend_op()
      ? *detail_.add_friend_op_
      : ::proto::AddFriendOp::default_instance();
}
inline ::proto::AddFriendOp* OfflineMsgBin::mutable_add_friend_op() {
  if (!has_add_friend_op()) {
    clear_detail();
    set_has_add_friend_op();
    detail_.add_friend_op_ = new ::proto::AddFriendOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_friend_op)
  return detail_.add_friend_op_;
}
inline ::proto::AddFriendOp* OfflineMsgBin::release_add_friend_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_friend_op)
  if (has_add_friend_op()) {
    clear_has_detail();
    ::proto::AddFriendOp* temp = detail_.add_friend_op_;
    detail_.add_friend_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_add_friend_op(::proto::AddFriendOp* add_friend_op) {
  clear_detail();
  if (add_friend_op) {
    set_has_add_friend_op();
    detail_.add_friend_op_ = add_friend_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_friend_op)
}

// .proto.DelFriendOp del_friend_op = 53;
inline bool OfflineMsgBin::has_del_friend_op() const {
  return detail_case() == kDelFriendOp;
}
inline void OfflineMsgBin::set_has_del_friend_op() {
  _oneof_case_[0] = kDelFriendOp;
}
inline void OfflineMsgBin::clear_del_friend_op() {
  if (has_del_friend_op()) {
    delete detail_.del_friend_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DelFriendOp& OfflineMsgBin::del_friend_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_friend_op)
  return has_del_friend_op()
      ? *detail_.del_friend_op_
      : ::proto::DelFriendOp::default_instance();
}
inline ::proto::DelFriendOp* OfflineMsgBin::mutable_del_friend_op() {
  if (!has_del_friend_op()) {
    clear_detail();
    set_has_del_friend_op();
    detail_.del_friend_op_ = new ::proto::DelFriendOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_friend_op)
  return detail_.del_friend_op_;
}
inline ::proto::DelFriendOp* OfflineMsgBin::release_del_friend_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_friend_op)
  if (has_del_friend_op()) {
    clear_has_detail();
    ::proto::DelFriendOp* temp = detail_.del_friend_op_;
    detail_.del_friend_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_del_friend_op(::proto::DelFriendOp* del_friend_op) {
  clear_detail();
  if (del_friend_op) {
    set_has_del_friend_op();
    detail_.del_friend_op_ = del_friend_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_friend_op)
}

// .proto.AddFriendAskOp add_friend_ask_op = 54;
inline bool OfflineMsgBin::has_add_friend_ask_op() const {
  return detail_case() == kAddFriendAskOp;
}
inline void OfflineMsgBin::set_has_add_friend_ask_op() {
  _oneof_case_[0] = kAddFriendAskOp;
}
inline void OfflineMsgBin::clear_add_friend_ask_op() {
  if (has_add_friend_ask_op()) {
    delete detail_.add_friend_ask_op_;
    clear_has_detail();
  }
}
inline  const ::proto::AddFriendAskOp& OfflineMsgBin::add_friend_ask_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_friend_ask_op)
  return has_add_friend_ask_op()
      ? *detail_.add_friend_ask_op_
      : ::proto::AddFriendAskOp::default_instance();
}
inline ::proto::AddFriendAskOp* OfflineMsgBin::mutable_add_friend_ask_op() {
  if (!has_add_friend_ask_op()) {
    clear_detail();
    set_has_add_friend_ask_op();
    detail_.add_friend_ask_op_ = new ::proto::AddFriendAskOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_friend_ask_op)
  return detail_.add_friend_ask_op_;
}
inline ::proto::AddFriendAskOp* OfflineMsgBin::release_add_friend_ask_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_friend_ask_op)
  if (has_add_friend_ask_op()) {
    clear_has_detail();
    ::proto::AddFriendAskOp* temp = detail_.add_friend_ask_op_;
    detail_.add_friend_ask_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_add_friend_ask_op(::proto::AddFriendAskOp* add_friend_ask_op) {
  clear_detail();
  if (add_friend_ask_op) {
    set_has_add_friend_ask_op();
    detail_.add_friend_ask_op_ = add_friend_ask_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_friend_ask_op)
}

// .proto.DelFriendAskOp del_friend_ask_op = 55;
inline bool OfflineMsgBin::has_del_friend_ask_op() const {
  return detail_case() == kDelFriendAskOp;
}
inline void OfflineMsgBin::set_has_del_friend_ask_op() {
  _oneof_case_[0] = kDelFriendAskOp;
}
inline void OfflineMsgBin::clear_del_friend_ask_op() {
  if (has_del_friend_ask_op()) {
    delete detail_.del_friend_ask_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DelFriendAskOp& OfflineMsgBin::del_friend_ask_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_friend_ask_op)
  return has_del_friend_ask_op()
      ? *detail_.del_friend_ask_op_
      : ::proto::DelFriendAskOp::default_instance();
}
inline ::proto::DelFriendAskOp* OfflineMsgBin::mutable_del_friend_ask_op() {
  if (!has_del_friend_ask_op()) {
    clear_detail();
    set_has_del_friend_ask_op();
    detail_.del_friend_ask_op_ = new ::proto::DelFriendAskOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_friend_ask_op)
  return detail_.del_friend_ask_op_;
}
inline ::proto::DelFriendAskOp* OfflineMsgBin::release_del_friend_ask_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_friend_ask_op)
  if (has_del_friend_ask_op()) {
    clear_has_detail();
    ::proto::DelFriendAskOp* temp = detail_.del_friend_ask_op_;
    detail_.del_friend_ask_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_del_friend_ask_op(::proto::DelFriendAskOp* del_friend_ask_op) {
  clear_detail();
  if (del_friend_ask_op) {
    set_has_del_friend_ask_op();
    detail_.del_friend_ask_op_ = del_friend_ask_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_friend_ask_op)
}

// .proto.BanCustomDungeonOp ban_custom_dungeon_op = 56;
inline bool OfflineMsgBin::has_ban_custom_dungeon_op() const {
  return detail_case() == kBanCustomDungeonOp;
}
inline void OfflineMsgBin::set_has_ban_custom_dungeon_op() {
  _oneof_case_[0] = kBanCustomDungeonOp;
}
inline void OfflineMsgBin::clear_ban_custom_dungeon_op() {
  if (has_ban_custom_dungeon_op()) {
    delete detail_.ban_custom_dungeon_op_;
    clear_has_detail();
  }
}
inline  const ::proto::BanCustomDungeonOp& OfflineMsgBin::ban_custom_dungeon_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.ban_custom_dungeon_op)
  return has_ban_custom_dungeon_op()
      ? *detail_.ban_custom_dungeon_op_
      : ::proto::BanCustomDungeonOp::default_instance();
}
inline ::proto::BanCustomDungeonOp* OfflineMsgBin::mutable_ban_custom_dungeon_op() {
  if (!has_ban_custom_dungeon_op()) {
    clear_detail();
    set_has_ban_custom_dungeon_op();
    detail_.ban_custom_dungeon_op_ = new ::proto::BanCustomDungeonOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.ban_custom_dungeon_op)
  return detail_.ban_custom_dungeon_op_;
}
inline ::proto::BanCustomDungeonOp* OfflineMsgBin::release_ban_custom_dungeon_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.ban_custom_dungeon_op)
  if (has_ban_custom_dungeon_op()) {
    clear_has_detail();
    ::proto::BanCustomDungeonOp* temp = detail_.ban_custom_dungeon_op_;
    detail_.ban_custom_dungeon_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_ban_custom_dungeon_op(::proto::BanCustomDungeonOp* ban_custom_dungeon_op) {
  clear_detail();
  if (ban_custom_dungeon_op) {
    set_has_ban_custom_dungeon_op();
    detail_.ban_custom_dungeon_op_ = ban_custom_dungeon_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.ban_custom_dungeon_op)
}

// .proto.RemoveInvalidMapMarksOp remove_invalid_map_marks_op = 57;
inline bool OfflineMsgBin::has_remove_invalid_map_marks_op() const {
  return detail_case() == kRemoveInvalidMapMarksOp;
}
inline void OfflineMsgBin::set_has_remove_invalid_map_marks_op() {
  _oneof_case_[0] = kRemoveInvalidMapMarksOp;
}
inline void OfflineMsgBin::clear_remove_invalid_map_marks_op() {
  if (has_remove_invalid_map_marks_op()) {
    delete detail_.remove_invalid_map_marks_op_;
    clear_has_detail();
  }
}
inline  const ::proto::RemoveInvalidMapMarksOp& OfflineMsgBin::remove_invalid_map_marks_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.remove_invalid_map_marks_op)
  return has_remove_invalid_map_marks_op()
      ? *detail_.remove_invalid_map_marks_op_
      : ::proto::RemoveInvalidMapMarksOp::default_instance();
}
inline ::proto::RemoveInvalidMapMarksOp* OfflineMsgBin::mutable_remove_invalid_map_marks_op() {
  if (!has_remove_invalid_map_marks_op()) {
    clear_detail();
    set_has_remove_invalid_map_marks_op();
    detail_.remove_invalid_map_marks_op_ = new ::proto::RemoveInvalidMapMarksOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.remove_invalid_map_marks_op)
  return detail_.remove_invalid_map_marks_op_;
}
inline ::proto::RemoveInvalidMapMarksOp* OfflineMsgBin::release_remove_invalid_map_marks_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.remove_invalid_map_marks_op)
  if (has_remove_invalid_map_marks_op()) {
    clear_has_detail();
    ::proto::RemoveInvalidMapMarksOp* temp = detail_.remove_invalid_map_marks_op_;
    detail_.remove_invalid_map_marks_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_remove_invalid_map_marks_op(::proto::RemoveInvalidMapMarksOp* remove_invalid_map_marks_op) {
  clear_detail();
  if (remove_invalid_map_marks_op) {
    set_has_remove_invalid_map_marks_op();
    detail_.remove_invalid_map_marks_op_ = remove_invalid_map_marks_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.remove_invalid_map_marks_op)
}

// .proto.RecalculateAreaExplorePointOp recalculate_area_explore_point_op = 58;
inline bool OfflineMsgBin::has_recalculate_area_explore_point_op() const {
  return detail_case() == kRecalculateAreaExplorePointOp;
}
inline void OfflineMsgBin::set_has_recalculate_area_explore_point_op() {
  _oneof_case_[0] = kRecalculateAreaExplorePointOp;
}
inline void OfflineMsgBin::clear_recalculate_area_explore_point_op() {
  if (has_recalculate_area_explore_point_op()) {
    delete detail_.recalculate_area_explore_point_op_;
    clear_has_detail();
  }
}
inline  const ::proto::RecalculateAreaExplorePointOp& OfflineMsgBin::recalculate_area_explore_point_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.recalculate_area_explore_point_op)
  return has_recalculate_area_explore_point_op()
      ? *detail_.recalculate_area_explore_point_op_
      : ::proto::RecalculateAreaExplorePointOp::default_instance();
}
inline ::proto::RecalculateAreaExplorePointOp* OfflineMsgBin::mutable_recalculate_area_explore_point_op() {
  if (!has_recalculate_area_explore_point_op()) {
    clear_detail();
    set_has_recalculate_area_explore_point_op();
    detail_.recalculate_area_explore_point_op_ = new ::proto::RecalculateAreaExplorePointOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.recalculate_area_explore_point_op)
  return detail_.recalculate_area_explore_point_op_;
}
inline ::proto::RecalculateAreaExplorePointOp* OfflineMsgBin::release_recalculate_area_explore_point_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.recalculate_area_explore_point_op)
  if (has_recalculate_area_explore_point_op()) {
    clear_has_detail();
    ::proto::RecalculateAreaExplorePointOp* temp = detail_.recalculate_area_explore_point_op_;
    detail_.recalculate_area_explore_point_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_recalculate_area_explore_point_op(::proto::RecalculateAreaExplorePointOp* recalculate_area_explore_point_op) {
  clear_detail();
  if (recalculate_area_explore_point_op) {
    set_has_recalculate_area_explore_point_op();
    detail_.recalculate_area_explore_point_op_ = recalculate_area_explore_point_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.recalculate_area_explore_point_op)
}

// .proto.NicknameAuditResultOp nickname_audit_result_op = 59;
inline bool OfflineMsgBin::has_nickname_audit_result_op() const {
  return detail_case() == kNicknameAuditResultOp;
}
inline void OfflineMsgBin::set_has_nickname_audit_result_op() {
  _oneof_case_[0] = kNicknameAuditResultOp;
}
inline void OfflineMsgBin::clear_nickname_audit_result_op() {
  if (has_nickname_audit_result_op()) {
    delete detail_.nickname_audit_result_op_;
    clear_has_detail();
  }
}
inline  const ::proto::NicknameAuditResultOp& OfflineMsgBin::nickname_audit_result_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.nickname_audit_result_op)
  return has_nickname_audit_result_op()
      ? *detail_.nickname_audit_result_op_
      : ::proto::NicknameAuditResultOp::default_instance();
}
inline ::proto::NicknameAuditResultOp* OfflineMsgBin::mutable_nickname_audit_result_op() {
  if (!has_nickname_audit_result_op()) {
    clear_detail();
    set_has_nickname_audit_result_op();
    detail_.nickname_audit_result_op_ = new ::proto::NicknameAuditResultOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.nickname_audit_result_op)
  return detail_.nickname_audit_result_op_;
}
inline ::proto::NicknameAuditResultOp* OfflineMsgBin::release_nickname_audit_result_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.nickname_audit_result_op)
  if (has_nickname_audit_result_op()) {
    clear_has_detail();
    ::proto::NicknameAuditResultOp* temp = detail_.nickname_audit_result_op_;
    detail_.nickname_audit_result_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_nickname_audit_result_op(::proto::NicknameAuditResultOp* nickname_audit_result_op) {
  clear_detail();
  if (nickname_audit_result_op) {
    set_has_nickname_audit_result_op();
    detail_.nickname_audit_result_op_ = nickname_audit_result_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.nickname_audit_result_op)
}

// .proto.SignatureAuditResultOp signature_audit_result_op = 60;
inline bool OfflineMsgBin::has_signature_audit_result_op() const {
  return detail_case() == kSignatureAuditResultOp;
}
inline void OfflineMsgBin::set_has_signature_audit_result_op() {
  _oneof_case_[0] = kSignatureAuditResultOp;
}
inline void OfflineMsgBin::clear_signature_audit_result_op() {
  if (has_signature_audit_result_op()) {
    delete detail_.signature_audit_result_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SignatureAuditResultOp& OfflineMsgBin::signature_audit_result_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.signature_audit_result_op)
  return has_signature_audit_result_op()
      ? *detail_.signature_audit_result_op_
      : ::proto::SignatureAuditResultOp::default_instance();
}
inline ::proto::SignatureAuditResultOp* OfflineMsgBin::mutable_signature_audit_result_op() {
  if (!has_signature_audit_result_op()) {
    clear_detail();
    set_has_signature_audit_result_op();
    detail_.signature_audit_result_op_ = new ::proto::SignatureAuditResultOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.signature_audit_result_op)
  return detail_.signature_audit_result_op_;
}
inline ::proto::SignatureAuditResultOp* OfflineMsgBin::release_signature_audit_result_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.signature_audit_result_op)
  if (has_signature_audit_result_op()) {
    clear_has_detail();
    ::proto::SignatureAuditResultOp* temp = detail_.signature_audit_result_op_;
    detail_.signature_audit_result_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_signature_audit_result_op(::proto::SignatureAuditResultOp* signature_audit_result_op) {
  clear_detail();
  if (signature_audit_result_op) {
    set_has_signature_audit_result_op();
    detail_.signature_audit_result_op_ = signature_audit_result_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.signature_audit_result_op)
}

// .proto.PassHomeSceneArrangementAuditOp pass_home_scene_arrangement_audit_op = 61;
inline bool OfflineMsgBin::has_pass_home_scene_arrangement_audit_op() const {
  return detail_case() == kPassHomeSceneArrangementAuditOp;
}
inline void OfflineMsgBin::set_has_pass_home_scene_arrangement_audit_op() {
  _oneof_case_[0] = kPassHomeSceneArrangementAuditOp;
}
inline void OfflineMsgBin::clear_pass_home_scene_arrangement_audit_op() {
  if (has_pass_home_scene_arrangement_audit_op()) {
    delete detail_.pass_home_scene_arrangement_audit_op_;
    clear_has_detail();
  }
}
inline  const ::proto::PassHomeSceneArrangementAuditOp& OfflineMsgBin::pass_home_scene_arrangement_audit_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.pass_home_scene_arrangement_audit_op)
  return has_pass_home_scene_arrangement_audit_op()
      ? *detail_.pass_home_scene_arrangement_audit_op_
      : ::proto::PassHomeSceneArrangementAuditOp::default_instance();
}
inline ::proto::PassHomeSceneArrangementAuditOp* OfflineMsgBin::mutable_pass_home_scene_arrangement_audit_op() {
  if (!has_pass_home_scene_arrangement_audit_op()) {
    clear_detail();
    set_has_pass_home_scene_arrangement_audit_op();
    detail_.pass_home_scene_arrangement_audit_op_ = new ::proto::PassHomeSceneArrangementAuditOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.pass_home_scene_arrangement_audit_op)
  return detail_.pass_home_scene_arrangement_audit_op_;
}
inline ::proto::PassHomeSceneArrangementAuditOp* OfflineMsgBin::release_pass_home_scene_arrangement_audit_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.pass_home_scene_arrangement_audit_op)
  if (has_pass_home_scene_arrangement_audit_op()) {
    clear_has_detail();
    ::proto::PassHomeSceneArrangementAuditOp* temp = detail_.pass_home_scene_arrangement_audit_op_;
    detail_.pass_home_scene_arrangement_audit_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_pass_home_scene_arrangement_audit_op(::proto::PassHomeSceneArrangementAuditOp* pass_home_scene_arrangement_audit_op) {
  clear_detail();
  if (pass_home_scene_arrangement_audit_op) {
    set_has_pass_home_scene_arrangement_audit_op();
    detail_.pass_home_scene_arrangement_audit_op_ = pass_home_scene_arrangement_audit_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.pass_home_scene_arrangement_audit_op)
}

// .proto.FailHomeSceneArrangementAuditOp fail_home_scene_arrangement_audit_op = 62;
inline bool OfflineMsgBin::has_fail_home_scene_arrangement_audit_op() const {
  return detail_case() == kFailHomeSceneArrangementAuditOp;
}
inline void OfflineMsgBin::set_has_fail_home_scene_arrangement_audit_op() {
  _oneof_case_[0] = kFailHomeSceneArrangementAuditOp;
}
inline void OfflineMsgBin::clear_fail_home_scene_arrangement_audit_op() {
  if (has_fail_home_scene_arrangement_audit_op()) {
    delete detail_.fail_home_scene_arrangement_audit_op_;
    clear_has_detail();
  }
}
inline  const ::proto::FailHomeSceneArrangementAuditOp& OfflineMsgBin::fail_home_scene_arrangement_audit_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.fail_home_scene_arrangement_audit_op)
  return has_fail_home_scene_arrangement_audit_op()
      ? *detail_.fail_home_scene_arrangement_audit_op_
      : ::proto::FailHomeSceneArrangementAuditOp::default_instance();
}
inline ::proto::FailHomeSceneArrangementAuditOp* OfflineMsgBin::mutable_fail_home_scene_arrangement_audit_op() {
  if (!has_fail_home_scene_arrangement_audit_op()) {
    clear_detail();
    set_has_fail_home_scene_arrangement_audit_op();
    detail_.fail_home_scene_arrangement_audit_op_ = new ::proto::FailHomeSceneArrangementAuditOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.fail_home_scene_arrangement_audit_op)
  return detail_.fail_home_scene_arrangement_audit_op_;
}
inline ::proto::FailHomeSceneArrangementAuditOp* OfflineMsgBin::release_fail_home_scene_arrangement_audit_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.fail_home_scene_arrangement_audit_op)
  if (has_fail_home_scene_arrangement_audit_op()) {
    clear_has_detail();
    ::proto::FailHomeSceneArrangementAuditOp* temp = detail_.fail_home_scene_arrangement_audit_op_;
    detail_.fail_home_scene_arrangement_audit_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_fail_home_scene_arrangement_audit_op(::proto::FailHomeSceneArrangementAuditOp* fail_home_scene_arrangement_audit_op) {
  clear_detail();
  if (fail_home_scene_arrangement_audit_op) {
    set_has_fail_home_scene_arrangement_audit_op();
    detail_.fail_home_scene_arrangement_audit_op_ = fail_home_scene_arrangement_audit_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.fail_home_scene_arrangement_audit_op)
}

// .proto.FailHomeModulesArrangementAuditOp fail_home_modules_arrangement_audit_op = 63;
inline bool OfflineMsgBin::has_fail_home_modules_arrangement_audit_op() const {
  return detail_case() == kFailHomeModulesArrangementAuditOp;
}
inline void OfflineMsgBin::set_has_fail_home_modules_arrangement_audit_op() {
  _oneof_case_[0] = kFailHomeModulesArrangementAuditOp;
}
inline void OfflineMsgBin::clear_fail_home_modules_arrangement_audit_op() {
  if (has_fail_home_modules_arrangement_audit_op()) {
    delete detail_.fail_home_modules_arrangement_audit_op_;
    clear_has_detail();
  }
}
inline  const ::proto::FailHomeModulesArrangementAuditOp& OfflineMsgBin::fail_home_modules_arrangement_audit_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.fail_home_modules_arrangement_audit_op)
  return has_fail_home_modules_arrangement_audit_op()
      ? *detail_.fail_home_modules_arrangement_audit_op_
      : ::proto::FailHomeModulesArrangementAuditOp::default_instance();
}
inline ::proto::FailHomeModulesArrangementAuditOp* OfflineMsgBin::mutable_fail_home_modules_arrangement_audit_op() {
  if (!has_fail_home_modules_arrangement_audit_op()) {
    clear_detail();
    set_has_fail_home_modules_arrangement_audit_op();
    detail_.fail_home_modules_arrangement_audit_op_ = new ::proto::FailHomeModulesArrangementAuditOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.fail_home_modules_arrangement_audit_op)
  return detail_.fail_home_modules_arrangement_audit_op_;
}
inline ::proto::FailHomeModulesArrangementAuditOp* OfflineMsgBin::release_fail_home_modules_arrangement_audit_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.fail_home_modules_arrangement_audit_op)
  if (has_fail_home_modules_arrangement_audit_op()) {
    clear_has_detail();
    ::proto::FailHomeModulesArrangementAuditOp* temp = detail_.fail_home_modules_arrangement_audit_op_;
    detail_.fail_home_modules_arrangement_audit_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_fail_home_modules_arrangement_audit_op(::proto::FailHomeModulesArrangementAuditOp* fail_home_modules_arrangement_audit_op) {
  clear_detail();
  if (fail_home_modules_arrangement_audit_op) {
    set_has_fail_home_modules_arrangement_audit_op();
    detail_.fail_home_modules_arrangement_audit_op_ = fail_home_modules_arrangement_audit_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.fail_home_modules_arrangement_audit_op)
}

// .proto.BanUgcPublishOp ban_ugc_publish_op = 64;
inline bool OfflineMsgBin::has_ban_ugc_publish_op() const {
  return detail_case() == kBanUgcPublishOp;
}
inline void OfflineMsgBin::set_has_ban_ugc_publish_op() {
  _oneof_case_[0] = kBanUgcPublishOp;
}
inline void OfflineMsgBin::clear_ban_ugc_publish_op() {
  if (has_ban_ugc_publish_op()) {
    delete detail_.ban_ugc_publish_op_;
    clear_has_detail();
  }
}
inline  const ::proto::BanUgcPublishOp& OfflineMsgBin::ban_ugc_publish_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.ban_ugc_publish_op)
  return has_ban_ugc_publish_op()
      ? *detail_.ban_ugc_publish_op_
      : ::proto::BanUgcPublishOp::default_instance();
}
inline ::proto::BanUgcPublishOp* OfflineMsgBin::mutable_ban_ugc_publish_op() {
  if (!has_ban_ugc_publish_op()) {
    clear_detail();
    set_has_ban_ugc_publish_op();
    detail_.ban_ugc_publish_op_ = new ::proto::BanUgcPublishOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.ban_ugc_publish_op)
  return detail_.ban_ugc_publish_op_;
}
inline ::proto::BanUgcPublishOp* OfflineMsgBin::release_ban_ugc_publish_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.ban_ugc_publish_op)
  if (has_ban_ugc_publish_op()) {
    clear_has_detail();
    ::proto::BanUgcPublishOp* temp = detail_.ban_ugc_publish_op_;
    detail_.ban_ugc_publish_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_ban_ugc_publish_op(::proto::BanUgcPublishOp* ban_ugc_publish_op) {
  clear_detail();
  if (ban_ugc_publish_op) {
    set_has_ban_ugc_publish_op();
    detail_.ban_ugc_publish_op_ = ban_ugc_publish_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.ban_ugc_publish_op)
}

// .proto.ResetPlayerPersistentDungeonOp reset_player_persistent_dungeon_op = 28001;
inline bool OfflineMsgBin::has_reset_player_persistent_dungeon_op() const {
  return detail_case() == kResetPlayerPersistentDungeonOp;
}
inline void OfflineMsgBin::set_has_reset_player_persistent_dungeon_op() {
  _oneof_case_[0] = kResetPlayerPersistentDungeonOp;
}
inline void OfflineMsgBin::clear_reset_player_persistent_dungeon_op() {
  if (has_reset_player_persistent_dungeon_op()) {
    delete detail_.reset_player_persistent_dungeon_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ResetPlayerPersistentDungeonOp& OfflineMsgBin::reset_player_persistent_dungeon_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.reset_player_persistent_dungeon_op)
  return has_reset_player_persistent_dungeon_op()
      ? *detail_.reset_player_persistent_dungeon_op_
      : ::proto::ResetPlayerPersistentDungeonOp::default_instance();
}
inline ::proto::ResetPlayerPersistentDungeonOp* OfflineMsgBin::mutable_reset_player_persistent_dungeon_op() {
  if (!has_reset_player_persistent_dungeon_op()) {
    clear_detail();
    set_has_reset_player_persistent_dungeon_op();
    detail_.reset_player_persistent_dungeon_op_ = new ::proto::ResetPlayerPersistentDungeonOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.reset_player_persistent_dungeon_op)
  return detail_.reset_player_persistent_dungeon_op_;
}
inline ::proto::ResetPlayerPersistentDungeonOp* OfflineMsgBin::release_reset_player_persistent_dungeon_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.reset_player_persistent_dungeon_op)
  if (has_reset_player_persistent_dungeon_op()) {
    clear_has_detail();
    ::proto::ResetPlayerPersistentDungeonOp* temp = detail_.reset_player_persistent_dungeon_op_;
    detail_.reset_player_persistent_dungeon_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_reset_player_persistent_dungeon_op(::proto::ResetPlayerPersistentDungeonOp* reset_player_persistent_dungeon_op) {
  clear_detail();
  if (reset_player_persistent_dungeon_op) {
    set_has_reset_player_persistent_dungeon_op();
    detail_.reset_player_persistent_dungeon_op_ = reset_player_persistent_dungeon_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.reset_player_persistent_dungeon_op)
}

// .proto.ResetPlayerPosInPersistentDungeonOp reset_player_pos_in_persistent_dungeon_op = 28002;
inline bool OfflineMsgBin::has_reset_player_pos_in_persistent_dungeon_op() const {
  return detail_case() == kResetPlayerPosInPersistentDungeonOp;
}
inline void OfflineMsgBin::set_has_reset_player_pos_in_persistent_dungeon_op() {
  _oneof_case_[0] = kResetPlayerPosInPersistentDungeonOp;
}
inline void OfflineMsgBin::clear_reset_player_pos_in_persistent_dungeon_op() {
  if (has_reset_player_pos_in_persistent_dungeon_op()) {
    delete detail_.reset_player_pos_in_persistent_dungeon_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ResetPlayerPosInPersistentDungeonOp& OfflineMsgBin::reset_player_pos_in_persistent_dungeon_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.reset_player_pos_in_persistent_dungeon_op)
  return has_reset_player_pos_in_persistent_dungeon_op()
      ? *detail_.reset_player_pos_in_persistent_dungeon_op_
      : ::proto::ResetPlayerPosInPersistentDungeonOp::default_instance();
}
inline ::proto::ResetPlayerPosInPersistentDungeonOp* OfflineMsgBin::mutable_reset_player_pos_in_persistent_dungeon_op() {
  if (!has_reset_player_pos_in_persistent_dungeon_op()) {
    clear_detail();
    set_has_reset_player_pos_in_persistent_dungeon_op();
    detail_.reset_player_pos_in_persistent_dungeon_op_ = new ::proto::ResetPlayerPosInPersistentDungeonOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.reset_player_pos_in_persistent_dungeon_op)
  return detail_.reset_player_pos_in_persistent_dungeon_op_;
}
inline ::proto::ResetPlayerPosInPersistentDungeonOp* OfflineMsgBin::release_reset_player_pos_in_persistent_dungeon_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.reset_player_pos_in_persistent_dungeon_op)
  if (has_reset_player_pos_in_persistent_dungeon_op()) {
    clear_has_detail();
    ::proto::ResetPlayerPosInPersistentDungeonOp* temp = detail_.reset_player_pos_in_persistent_dungeon_op_;
    detail_.reset_player_pos_in_persistent_dungeon_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_reset_player_pos_in_persistent_dungeon_op(::proto::ResetPlayerPosInPersistentDungeonOp* reset_player_pos_in_persistent_dungeon_op) {
  clear_detail();
  if (reset_player_pos_in_persistent_dungeon_op) {
    set_has_reset_player_pos_in_persistent_dungeon_op();
    detail_.reset_player_pos_in_persistent_dungeon_op_ = reset_player_pos_in_persistent_dungeon_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.reset_player_pos_in_persistent_dungeon_op)
}

// .proto.LevelTagChangeOp level_tag_change_op = 28003;
inline bool OfflineMsgBin::has_level_tag_change_op() const {
  return detail_case() == kLevelTagChangeOp;
}
inline void OfflineMsgBin::set_has_level_tag_change_op() {
  _oneof_case_[0] = kLevelTagChangeOp;
}
inline void OfflineMsgBin::clear_level_tag_change_op() {
  if (has_level_tag_change_op()) {
    delete detail_.level_tag_change_op_;
    clear_has_detail();
  }
}
inline  const ::proto::LevelTagChangeOp& OfflineMsgBin::level_tag_change_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.level_tag_change_op)
  return has_level_tag_change_op()
      ? *detail_.level_tag_change_op_
      : ::proto::LevelTagChangeOp::default_instance();
}
inline ::proto::LevelTagChangeOp* OfflineMsgBin::mutable_level_tag_change_op() {
  if (!has_level_tag_change_op()) {
    clear_detail();
    set_has_level_tag_change_op();
    detail_.level_tag_change_op_ = new ::proto::LevelTagChangeOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.level_tag_change_op)
  return detail_.level_tag_change_op_;
}
inline ::proto::LevelTagChangeOp* OfflineMsgBin::release_level_tag_change_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.level_tag_change_op)
  if (has_level_tag_change_op()) {
    clear_has_detail();
    ::proto::LevelTagChangeOp* temp = detail_.level_tag_change_op_;
    detail_.level_tag_change_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_level_tag_change_op(::proto::LevelTagChangeOp* level_tag_change_op) {
  clear_detail();
  if (level_tag_change_op) {
    set_has_level_tag_change_op();
    detail_.level_tag_change_op_ = level_tag_change_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.level_tag_change_op)
}

// .proto.ResetPlayerWayPointInPersistentDungeonOp reset_player_way_point_in_persistent_dungeon_op = 28004;
inline bool OfflineMsgBin::has_reset_player_way_point_in_persistent_dungeon_op() const {
  return detail_case() == kResetPlayerWayPointInPersistentDungeonOp;
}
inline void OfflineMsgBin::set_has_reset_player_way_point_in_persistent_dungeon_op() {
  _oneof_case_[0] = kResetPlayerWayPointInPersistentDungeonOp;
}
inline void OfflineMsgBin::clear_reset_player_way_point_in_persistent_dungeon_op() {
  if (has_reset_player_way_point_in_persistent_dungeon_op()) {
    delete detail_.reset_player_way_point_in_persistent_dungeon_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ResetPlayerWayPointInPersistentDungeonOp& OfflineMsgBin::reset_player_way_point_in_persistent_dungeon_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.reset_player_way_point_in_persistent_dungeon_op)
  return has_reset_player_way_point_in_persistent_dungeon_op()
      ? *detail_.reset_player_way_point_in_persistent_dungeon_op_
      : ::proto::ResetPlayerWayPointInPersistentDungeonOp::default_instance();
}
inline ::proto::ResetPlayerWayPointInPersistentDungeonOp* OfflineMsgBin::mutable_reset_player_way_point_in_persistent_dungeon_op() {
  if (!has_reset_player_way_point_in_persistent_dungeon_op()) {
    clear_detail();
    set_has_reset_player_way_point_in_persistent_dungeon_op();
    detail_.reset_player_way_point_in_persistent_dungeon_op_ = new ::proto::ResetPlayerWayPointInPersistentDungeonOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.reset_player_way_point_in_persistent_dungeon_op)
  return detail_.reset_player_way_point_in_persistent_dungeon_op_;
}
inline ::proto::ResetPlayerWayPointInPersistentDungeonOp* OfflineMsgBin::release_reset_player_way_point_in_persistent_dungeon_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.reset_player_way_point_in_persistent_dungeon_op)
  if (has_reset_player_way_point_in_persistent_dungeon_op()) {
    clear_has_detail();
    ::proto::ResetPlayerWayPointInPersistentDungeonOp* temp = detail_.reset_player_way_point_in_persistent_dungeon_op_;
    detail_.reset_player_way_point_in_persistent_dungeon_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_reset_player_way_point_in_persistent_dungeon_op(::proto::ResetPlayerWayPointInPersistentDungeonOp* reset_player_way_point_in_persistent_dungeon_op) {
  clear_detail();
  if (reset_player_way_point_in_persistent_dungeon_op) {
    set_has_reset_player_way_point_in_persistent_dungeon_op();
    detail_.reset_player_way_point_in_persistent_dungeon_op_ = reset_player_way_point_in_persistent_dungeon_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.reset_player_way_point_in_persistent_dungeon_op)
}

// .proto.ExhibitionSetOp exhibition_set_op = 30000;
inline bool OfflineMsgBin::has_exhibition_set_op() const {
  return detail_case() == kExhibitionSetOp;
}
inline void OfflineMsgBin::set_has_exhibition_set_op() {
  _oneof_case_[0] = kExhibitionSetOp;
}
inline void OfflineMsgBin::clear_exhibition_set_op() {
  if (has_exhibition_set_op()) {
    delete detail_.exhibition_set_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ExhibitionSetOp& OfflineMsgBin::exhibition_set_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.exhibition_set_op)
  return has_exhibition_set_op()
      ? *detail_.exhibition_set_op_
      : ::proto::ExhibitionSetOp::default_instance();
}
inline ::proto::ExhibitionSetOp* OfflineMsgBin::mutable_exhibition_set_op() {
  if (!has_exhibition_set_op()) {
    clear_detail();
    set_has_exhibition_set_op();
    detail_.exhibition_set_op_ = new ::proto::ExhibitionSetOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.exhibition_set_op)
  return detail_.exhibition_set_op_;
}
inline ::proto::ExhibitionSetOp* OfflineMsgBin::release_exhibition_set_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.exhibition_set_op)
  if (has_exhibition_set_op()) {
    clear_has_detail();
    ::proto::ExhibitionSetOp* temp = detail_.exhibition_set_op_;
    detail_.exhibition_set_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_exhibition_set_op(::proto::ExhibitionSetOp* exhibition_set_op) {
  clear_detail();
  if (exhibition_set_op) {
    set_has_exhibition_set_op();
    detail_.exhibition_set_op_ = exhibition_set_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.exhibition_set_op)
}

// .proto.SetAvatarExtraPropOp set_avatar_extra_prop_op = 30001;
inline bool OfflineMsgBin::has_set_avatar_extra_prop_op() const {
  return detail_case() == kSetAvatarExtraPropOp;
}
inline void OfflineMsgBin::set_has_set_avatar_extra_prop_op() {
  _oneof_case_[0] = kSetAvatarExtraPropOp;
}
inline void OfflineMsgBin::clear_set_avatar_extra_prop_op() {
  if (has_set_avatar_extra_prop_op()) {
    delete detail_.set_avatar_extra_prop_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetAvatarExtraPropOp& OfflineMsgBin::set_avatar_extra_prop_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_avatar_extra_prop_op)
  return has_set_avatar_extra_prop_op()
      ? *detail_.set_avatar_extra_prop_op_
      : ::proto::SetAvatarExtraPropOp::default_instance();
}
inline ::proto::SetAvatarExtraPropOp* OfflineMsgBin::mutable_set_avatar_extra_prop_op() {
  if (!has_set_avatar_extra_prop_op()) {
    clear_detail();
    set_has_set_avatar_extra_prop_op();
    detail_.set_avatar_extra_prop_op_ = new ::proto::SetAvatarExtraPropOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_avatar_extra_prop_op)
  return detail_.set_avatar_extra_prop_op_;
}
inline ::proto::SetAvatarExtraPropOp* OfflineMsgBin::release_set_avatar_extra_prop_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_avatar_extra_prop_op)
  if (has_set_avatar_extra_prop_op()) {
    clear_has_detail();
    ::proto::SetAvatarExtraPropOp* temp = detail_.set_avatar_extra_prop_op_;
    detail_.set_avatar_extra_prop_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_avatar_extra_prop_op(::proto::SetAvatarExtraPropOp* set_avatar_extra_prop_op) {
  clear_detail();
  if (set_avatar_extra_prop_op) {
    set_has_set_avatar_extra_prop_op();
    detail_.set_avatar_extra_prop_op_ = set_avatar_extra_prop_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_avatar_extra_prop_op)
}

// .proto.AddItemWithLimitOp add_item_with_limit_op = 30002;
inline bool OfflineMsgBin::has_add_item_with_limit_op() const {
  return detail_case() == kAddItemWithLimitOp;
}
inline void OfflineMsgBin::set_has_add_item_with_limit_op() {
  _oneof_case_[0] = kAddItemWithLimitOp;
}
inline void OfflineMsgBin::clear_add_item_with_limit_op() {
  if (has_add_item_with_limit_op()) {
    delete detail_.add_item_with_limit_op_;
    clear_has_detail();
  }
}
inline  const ::proto::AddItemWithLimitOp& OfflineMsgBin::add_item_with_limit_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_item_with_limit_op)
  return has_add_item_with_limit_op()
      ? *detail_.add_item_with_limit_op_
      : ::proto::AddItemWithLimitOp::default_instance();
}
inline ::proto::AddItemWithLimitOp* OfflineMsgBin::mutable_add_item_with_limit_op() {
  if (!has_add_item_with_limit_op()) {
    clear_detail();
    set_has_add_item_with_limit_op();
    detail_.add_item_with_limit_op_ = new ::proto::AddItemWithLimitOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_item_with_limit_op)
  return detail_.add_item_with_limit_op_;
}
inline ::proto::AddItemWithLimitOp* OfflineMsgBin::release_add_item_with_limit_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_item_with_limit_op)
  if (has_add_item_with_limit_op()) {
    clear_has_detail();
    ::proto::AddItemWithLimitOp* temp = detail_.add_item_with_limit_op_;
    detail_.add_item_with_limit_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_add_item_with_limit_op(::proto::AddItemWithLimitOp* add_item_with_limit_op) {
  clear_detail();
  if (add_item_with_limit_op) {
    set_has_add_item_with_limit_op();
    detail_.add_item_with_limit_op_ = add_item_with_limit_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_item_with_limit_op)
}

// .proto.SetGadgetChainLevelOp set_gadget_chain_level_op = 31001;
inline bool OfflineMsgBin::has_set_gadget_chain_level_op() const {
  return detail_case() == kSetGadgetChainLevelOp;
}
inline void OfflineMsgBin::set_has_set_gadget_chain_level_op() {
  _oneof_case_[0] = kSetGadgetChainLevelOp;
}
inline void OfflineMsgBin::clear_set_gadget_chain_level_op() {
  if (has_set_gadget_chain_level_op()) {
    delete detail_.set_gadget_chain_level_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetGadgetChainLevelOp& OfflineMsgBin::set_gadget_chain_level_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_gadget_chain_level_op)
  return has_set_gadget_chain_level_op()
      ? *detail_.set_gadget_chain_level_op_
      : ::proto::SetGadgetChainLevelOp::default_instance();
}
inline ::proto::SetGadgetChainLevelOp* OfflineMsgBin::mutable_set_gadget_chain_level_op() {
  if (!has_set_gadget_chain_level_op()) {
    clear_detail();
    set_has_set_gadget_chain_level_op();
    detail_.set_gadget_chain_level_op_ = new ::proto::SetGadgetChainLevelOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_gadget_chain_level_op)
  return detail_.set_gadget_chain_level_op_;
}
inline ::proto::SetGadgetChainLevelOp* OfflineMsgBin::release_set_gadget_chain_level_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_gadget_chain_level_op)
  if (has_set_gadget_chain_level_op()) {
    clear_has_detail();
    ::proto::SetGadgetChainLevelOp* temp = detail_.set_gadget_chain_level_op_;
    detail_.set_gadget_chain_level_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_gadget_chain_level_op(::proto::SetGadgetChainLevelOp* set_gadget_chain_level_op) {
  clear_detail();
  if (set_gadget_chain_level_op) {
    set_has_set_gadget_chain_level_op();
    detail_.set_gadget_chain_level_op_ = set_gadget_chain_level_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_gadget_chain_level_op)
}

// .proto.SetDailyTaskVarOp set_daily_task_var_op = 32001;
inline bool OfflineMsgBin::has_set_daily_task_var_op() const {
  return detail_case() == kSetDailyTaskVarOp;
}
inline void OfflineMsgBin::set_has_set_daily_task_var_op() {
  _oneof_case_[0] = kSetDailyTaskVarOp;
}
inline void OfflineMsgBin::clear_set_daily_task_var_op() {
  if (has_set_daily_task_var_op()) {
    delete detail_.set_daily_task_var_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetDailyTaskVarOp& OfflineMsgBin::set_daily_task_var_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_daily_task_var_op)
  return has_set_daily_task_var_op()
      ? *detail_.set_daily_task_var_op_
      : ::proto::SetDailyTaskVarOp::default_instance();
}
inline ::proto::SetDailyTaskVarOp* OfflineMsgBin::mutable_set_daily_task_var_op() {
  if (!has_set_daily_task_var_op()) {
    clear_detail();
    set_has_set_daily_task_var_op();
    detail_.set_daily_task_var_op_ = new ::proto::SetDailyTaskVarOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_daily_task_var_op)
  return detail_.set_daily_task_var_op_;
}
inline ::proto::SetDailyTaskVarOp* OfflineMsgBin::release_set_daily_task_var_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_daily_task_var_op)
  if (has_set_daily_task_var_op()) {
    clear_has_detail();
    ::proto::SetDailyTaskVarOp* temp = detail_.set_daily_task_var_op_;
    detail_.set_daily_task_var_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_daily_task_var_op(::proto::SetDailyTaskVarOp* set_daily_task_var_op) {
  clear_detail();
  if (set_daily_task_var_op) {
    set_has_set_daily_task_var_op();
    detail_.set_daily_task_var_op_ = set_daily_task_var_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_daily_task_var_op)
}

// .proto.AvatarRenameAuditResultOp avatar_rename_audit_result_op = 33001;
inline bool OfflineMsgBin::has_avatar_rename_audit_result_op() const {
  return detail_case() == kAvatarRenameAuditResultOp;
}
inline void OfflineMsgBin::set_has_avatar_rename_audit_result_op() {
  _oneof_case_[0] = kAvatarRenameAuditResultOp;
}
inline void OfflineMsgBin::clear_avatar_rename_audit_result_op() {
  if (has_avatar_rename_audit_result_op()) {
    delete detail_.avatar_rename_audit_result_op_;
    clear_has_detail();
  }
}
inline  const ::proto::AvatarRenameAuditResultOp& OfflineMsgBin::avatar_rename_audit_result_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.avatar_rename_audit_result_op)
  return has_avatar_rename_audit_result_op()
      ? *detail_.avatar_rename_audit_result_op_
      : ::proto::AvatarRenameAuditResultOp::default_instance();
}
inline ::proto::AvatarRenameAuditResultOp* OfflineMsgBin::mutable_avatar_rename_audit_result_op() {
  if (!has_avatar_rename_audit_result_op()) {
    clear_detail();
    set_has_avatar_rename_audit_result_op();
    detail_.avatar_rename_audit_result_op_ = new ::proto::AvatarRenameAuditResultOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.avatar_rename_audit_result_op)
  return detail_.avatar_rename_audit_result_op_;
}
inline ::proto::AvatarRenameAuditResultOp* OfflineMsgBin::release_avatar_rename_audit_result_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.avatar_rename_audit_result_op)
  if (has_avatar_rename_audit_result_op()) {
    clear_has_detail();
    ::proto::AvatarRenameAuditResultOp* temp = detail_.avatar_rename_audit_result_op_;
    detail_.avatar_rename_audit_result_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_avatar_rename_audit_result_op(::proto::AvatarRenameAuditResultOp* avatar_rename_audit_result_op) {
  clear_detail();
  if (avatar_rename_audit_result_op) {
    set_has_avatar_rename_audit_result_op();
    detail_.avatar_rename_audit_result_op_ = avatar_rename_audit_result_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.avatar_rename_audit_result_op)
}

// .proto.ResetAvatarRenameOp reset_avatar_rename_op = 33002;
inline bool OfflineMsgBin::has_reset_avatar_rename_op() const {
  return detail_case() == kResetAvatarRenameOp;
}
inline void OfflineMsgBin::set_has_reset_avatar_rename_op() {
  _oneof_case_[0] = kResetAvatarRenameOp;
}
inline void OfflineMsgBin::clear_reset_avatar_rename_op() {
  if (has_reset_avatar_rename_op()) {
    delete detail_.reset_avatar_rename_op_;
    clear_has_detail();
  }
}
inline  const ::proto::ResetAvatarRenameOp& OfflineMsgBin::reset_avatar_rename_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.reset_avatar_rename_op)
  return has_reset_avatar_rename_op()
      ? *detail_.reset_avatar_rename_op_
      : ::proto::ResetAvatarRenameOp::default_instance();
}
inline ::proto::ResetAvatarRenameOp* OfflineMsgBin::mutable_reset_avatar_rename_op() {
  if (!has_reset_avatar_rename_op()) {
    clear_detail();
    set_has_reset_avatar_rename_op();
    detail_.reset_avatar_rename_op_ = new ::proto::ResetAvatarRenameOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.reset_avatar_rename_op)
  return detail_.reset_avatar_rename_op_;
}
inline ::proto::ResetAvatarRenameOp* OfflineMsgBin::release_reset_avatar_rename_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.reset_avatar_rename_op)
  if (has_reset_avatar_rename_op()) {
    clear_has_detail();
    ::proto::ResetAvatarRenameOp* temp = detail_.reset_avatar_rename_op_;
    detail_.reset_avatar_rename_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_reset_avatar_rename_op(::proto::ResetAvatarRenameOp* reset_avatar_rename_op) {
  clear_detail();
  if (reset_avatar_rename_op) {
    set_has_reset_avatar_rename_op();
    detail_.reset_avatar_rename_op_ = reset_avatar_rename_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.reset_avatar_rename_op)
}

// .proto.AddFinishedTalkOp add_finished_talk_op = 33003;
inline bool OfflineMsgBin::has_add_finished_talk_op() const {
  return detail_case() == kAddFinishedTalkOp;
}
inline void OfflineMsgBin::set_has_add_finished_talk_op() {
  _oneof_case_[0] = kAddFinishedTalkOp;
}
inline void OfflineMsgBin::clear_add_finished_talk_op() {
  if (has_add_finished_talk_op()) {
    delete detail_.add_finished_talk_op_;
    clear_has_detail();
  }
}
inline  const ::proto::AddFinishedTalkOp& OfflineMsgBin::add_finished_talk_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.add_finished_talk_op)
  return has_add_finished_talk_op()
      ? *detail_.add_finished_talk_op_
      : ::proto::AddFinishedTalkOp::default_instance();
}
inline ::proto::AddFinishedTalkOp* OfflineMsgBin::mutable_add_finished_talk_op() {
  if (!has_add_finished_talk_op()) {
    clear_detail();
    set_has_add_finished_talk_op();
    detail_.add_finished_talk_op_ = new ::proto::AddFinishedTalkOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.add_finished_talk_op)
  return detail_.add_finished_talk_op_;
}
inline ::proto::AddFinishedTalkOp* OfflineMsgBin::release_add_finished_talk_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.add_finished_talk_op)
  if (has_add_finished_talk_op()) {
    clear_has_detail();
    ::proto::AddFinishedTalkOp* temp = detail_.add_finished_talk_op_;
    detail_.add_finished_talk_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_add_finished_talk_op(::proto::AddFinishedTalkOp* add_finished_talk_op) {
  clear_detail();
  if (add_finished_talk_op) {
    set_has_add_finished_talk_op();
    detail_.add_finished_talk_op_ = add_finished_talk_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.add_finished_talk_op)
}

// .proto.DelFinishedTalkOp del_finished_talk_op = 33004;
inline bool OfflineMsgBin::has_del_finished_talk_op() const {
  return detail_case() == kDelFinishedTalkOp;
}
inline void OfflineMsgBin::set_has_del_finished_talk_op() {
  _oneof_case_[0] = kDelFinishedTalkOp;
}
inline void OfflineMsgBin::clear_del_finished_talk_op() {
  if (has_del_finished_talk_op()) {
    delete detail_.del_finished_talk_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DelFinishedTalkOp& OfflineMsgBin::del_finished_talk_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.del_finished_talk_op)
  return has_del_finished_talk_op()
      ? *detail_.del_finished_talk_op_
      : ::proto::DelFinishedTalkOp::default_instance();
}
inline ::proto::DelFinishedTalkOp* OfflineMsgBin::mutable_del_finished_talk_op() {
  if (!has_del_finished_talk_op()) {
    clear_detail();
    set_has_del_finished_talk_op();
    detail_.del_finished_talk_op_ = new ::proto::DelFinishedTalkOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.del_finished_talk_op)
  return detail_.del_finished_talk_op_;
}
inline ::proto::DelFinishedTalkOp* OfflineMsgBin::release_del_finished_talk_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.del_finished_talk_op)
  if (has_del_finished_talk_op()) {
    clear_has_detail();
    ::proto::DelFinishedTalkOp* temp = detail_.del_finished_talk_op_;
    detail_.del_finished_talk_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_del_finished_talk_op(::proto::DelFinishedTalkOp* del_finished_talk_op) {
  clear_detail();
  if (del_finished_talk_op) {
    set_has_del_finished_talk_op();
    detail_.del_finished_talk_op_ = del_finished_talk_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.del_finished_talk_op)
}

// .proto.SetPlayerGCGMatchScoreOp set_player_gcg_match_score_op = 33005;
inline bool OfflineMsgBin::has_set_player_gcg_match_score_op() const {
  return detail_case() == kSetPlayerGcgMatchScoreOp;
}
inline void OfflineMsgBin::set_has_set_player_gcg_match_score_op() {
  _oneof_case_[0] = kSetPlayerGcgMatchScoreOp;
}
inline void OfflineMsgBin::clear_set_player_gcg_match_score_op() {
  if (has_set_player_gcg_match_score_op()) {
    delete detail_.set_player_gcg_match_score_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetPlayerGCGMatchScoreOp& OfflineMsgBin::set_player_gcg_match_score_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_player_gcg_match_score_op)
  return has_set_player_gcg_match_score_op()
      ? *detail_.set_player_gcg_match_score_op_
      : ::proto::SetPlayerGCGMatchScoreOp::default_instance();
}
inline ::proto::SetPlayerGCGMatchScoreOp* OfflineMsgBin::mutable_set_player_gcg_match_score_op() {
  if (!has_set_player_gcg_match_score_op()) {
    clear_detail();
    set_has_set_player_gcg_match_score_op();
    detail_.set_player_gcg_match_score_op_ = new ::proto::SetPlayerGCGMatchScoreOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_player_gcg_match_score_op)
  return detail_.set_player_gcg_match_score_op_;
}
inline ::proto::SetPlayerGCGMatchScoreOp* OfflineMsgBin::release_set_player_gcg_match_score_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_player_gcg_match_score_op)
  if (has_set_player_gcg_match_score_op()) {
    clear_has_detail();
    ::proto::SetPlayerGCGMatchScoreOp* temp = detail_.set_player_gcg_match_score_op_;
    detail_.set_player_gcg_match_score_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_player_gcg_match_score_op(::proto::SetPlayerGCGMatchScoreOp* set_player_gcg_match_score_op) {
  clear_detail();
  if (set_player_gcg_match_score_op) {
    set_has_set_player_gcg_match_score_op();
    detail_.set_player_gcg_match_score_op_ = set_player_gcg_match_score_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_player_gcg_match_score_op)
}

// .proto.SetPushTipsStateOp set_push_tips_state_op = 33006;
inline bool OfflineMsgBin::has_set_push_tips_state_op() const {
  return detail_case() == kSetPushTipsStateOp;
}
inline void OfflineMsgBin::set_has_set_push_tips_state_op() {
  _oneof_case_[0] = kSetPushTipsStateOp;
}
inline void OfflineMsgBin::clear_set_push_tips_state_op() {
  if (has_set_push_tips_state_op()) {
    delete detail_.set_push_tips_state_op_;
    clear_has_detail();
  }
}
inline  const ::proto::SetPushTipsStateOp& OfflineMsgBin::set_push_tips_state_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.set_push_tips_state_op)
  return has_set_push_tips_state_op()
      ? *detail_.set_push_tips_state_op_
      : ::proto::SetPushTipsStateOp::default_instance();
}
inline ::proto::SetPushTipsStateOp* OfflineMsgBin::mutable_set_push_tips_state_op() {
  if (!has_set_push_tips_state_op()) {
    clear_detail();
    set_has_set_push_tips_state_op();
    detail_.set_push_tips_state_op_ = new ::proto::SetPushTipsStateOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.set_push_tips_state_op)
  return detail_.set_push_tips_state_op_;
}
inline ::proto::SetPushTipsStateOp* OfflineMsgBin::release_set_push_tips_state_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.set_push_tips_state_op)
  if (has_set_push_tips_state_op()) {
    clear_has_detail();
    ::proto::SetPushTipsStateOp* temp = detail_.set_push_tips_state_op_;
    detail_.set_push_tips_state_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_set_push_tips_state_op(::proto::SetPushTipsStateOp* set_push_tips_state_op) {
  clear_detail();
  if (set_push_tips_state_op) {
    set_has_set_push_tips_state_op();
    detail_.set_push_tips_state_op_ = set_push_tips_state_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.set_push_tips_state_op)
}

// .proto.DeletePlayerGCGCardOp delete_player_gcg_card_op = 33007;
inline bool OfflineMsgBin::has_delete_player_gcg_card_op() const {
  return detail_case() == kDeletePlayerGcgCardOp;
}
inline void OfflineMsgBin::set_has_delete_player_gcg_card_op() {
  _oneof_case_[0] = kDeletePlayerGcgCardOp;
}
inline void OfflineMsgBin::clear_delete_player_gcg_card_op() {
  if (has_delete_player_gcg_card_op()) {
    delete detail_.delete_player_gcg_card_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DeletePlayerGCGCardOp& OfflineMsgBin::delete_player_gcg_card_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.delete_player_gcg_card_op)
  return has_delete_player_gcg_card_op()
      ? *detail_.delete_player_gcg_card_op_
      : ::proto::DeletePlayerGCGCardOp::default_instance();
}
inline ::proto::DeletePlayerGCGCardOp* OfflineMsgBin::mutable_delete_player_gcg_card_op() {
  if (!has_delete_player_gcg_card_op()) {
    clear_detail();
    set_has_delete_player_gcg_card_op();
    detail_.delete_player_gcg_card_op_ = new ::proto::DeletePlayerGCGCardOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.delete_player_gcg_card_op)
  return detail_.delete_player_gcg_card_op_;
}
inline ::proto::DeletePlayerGCGCardOp* OfflineMsgBin::release_delete_player_gcg_card_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.delete_player_gcg_card_op)
  if (has_delete_player_gcg_card_op()) {
    clear_has_detail();
    ::proto::DeletePlayerGCGCardOp* temp = detail_.delete_player_gcg_card_op_;
    detail_.delete_player_gcg_card_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_delete_player_gcg_card_op(::proto::DeletePlayerGCGCardOp* delete_player_gcg_card_op) {
  clear_detail();
  if (delete_player_gcg_card_op) {
    set_has_delete_player_gcg_card_op();
    detail_.delete_player_gcg_card_op_ = delete_player_gcg_card_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.delete_player_gcg_card_op)
}

// .proto.DeletePlayerGCGCardFaceOp delete_player_gcg_card_face_op = 33008;
inline bool OfflineMsgBin::has_delete_player_gcg_card_face_op() const {
  return detail_case() == kDeletePlayerGcgCardFaceOp;
}
inline void OfflineMsgBin::set_has_delete_player_gcg_card_face_op() {
  _oneof_case_[0] = kDeletePlayerGcgCardFaceOp;
}
inline void OfflineMsgBin::clear_delete_player_gcg_card_face_op() {
  if (has_delete_player_gcg_card_face_op()) {
    delete detail_.delete_player_gcg_card_face_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DeletePlayerGCGCardFaceOp& OfflineMsgBin::delete_player_gcg_card_face_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.delete_player_gcg_card_face_op)
  return has_delete_player_gcg_card_face_op()
      ? *detail_.delete_player_gcg_card_face_op_
      : ::proto::DeletePlayerGCGCardFaceOp::default_instance();
}
inline ::proto::DeletePlayerGCGCardFaceOp* OfflineMsgBin::mutable_delete_player_gcg_card_face_op() {
  if (!has_delete_player_gcg_card_face_op()) {
    clear_detail();
    set_has_delete_player_gcg_card_face_op();
    detail_.delete_player_gcg_card_face_op_ = new ::proto::DeletePlayerGCGCardFaceOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.delete_player_gcg_card_face_op)
  return detail_.delete_player_gcg_card_face_op_;
}
inline ::proto::DeletePlayerGCGCardFaceOp* OfflineMsgBin::release_delete_player_gcg_card_face_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.delete_player_gcg_card_face_op)
  if (has_delete_player_gcg_card_face_op()) {
    clear_has_detail();
    ::proto::DeletePlayerGCGCardFaceOp* temp = detail_.delete_player_gcg_card_face_op_;
    detail_.delete_player_gcg_card_face_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_delete_player_gcg_card_face_op(::proto::DeletePlayerGCGCardFaceOp* delete_player_gcg_card_face_op) {
  clear_detail();
  if (delete_player_gcg_card_face_op) {
    set_has_delete_player_gcg_card_face_op();
    detail_.delete_player_gcg_card_face_op_ = delete_player_gcg_card_face_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.delete_player_gcg_card_face_op)
}

// .proto.DeletePlayerGCGCardBackOp delete_player_gcg_card_back_op = 33009;
inline bool OfflineMsgBin::has_delete_player_gcg_card_back_op() const {
  return detail_case() == kDeletePlayerGcgCardBackOp;
}
inline void OfflineMsgBin::set_has_delete_player_gcg_card_back_op() {
  _oneof_case_[0] = kDeletePlayerGcgCardBackOp;
}
inline void OfflineMsgBin::clear_delete_player_gcg_card_back_op() {
  if (has_delete_player_gcg_card_back_op()) {
    delete detail_.delete_player_gcg_card_back_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DeletePlayerGCGCardBackOp& OfflineMsgBin::delete_player_gcg_card_back_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.delete_player_gcg_card_back_op)
  return has_delete_player_gcg_card_back_op()
      ? *detail_.delete_player_gcg_card_back_op_
      : ::proto::DeletePlayerGCGCardBackOp::default_instance();
}
inline ::proto::DeletePlayerGCGCardBackOp* OfflineMsgBin::mutable_delete_player_gcg_card_back_op() {
  if (!has_delete_player_gcg_card_back_op()) {
    clear_detail();
    set_has_delete_player_gcg_card_back_op();
    detail_.delete_player_gcg_card_back_op_ = new ::proto::DeletePlayerGCGCardBackOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.delete_player_gcg_card_back_op)
  return detail_.delete_player_gcg_card_back_op_;
}
inline ::proto::DeletePlayerGCGCardBackOp* OfflineMsgBin::release_delete_player_gcg_card_back_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.delete_player_gcg_card_back_op)
  if (has_delete_player_gcg_card_back_op()) {
    clear_has_detail();
    ::proto::DeletePlayerGCGCardBackOp* temp = detail_.delete_player_gcg_card_back_op_;
    detail_.delete_player_gcg_card_back_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_delete_player_gcg_card_back_op(::proto::DeletePlayerGCGCardBackOp* delete_player_gcg_card_back_op) {
  clear_detail();
  if (delete_player_gcg_card_back_op) {
    set_has_delete_player_gcg_card_back_op();
    detail_.delete_player_gcg_card_back_op_ = delete_player_gcg_card_back_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.delete_player_gcg_card_back_op)
}

// .proto.DeletePlayerGCGDeckFieldOp delete_player_gcg_deck_field_op = 33010;
inline bool OfflineMsgBin::has_delete_player_gcg_deck_field_op() const {
  return detail_case() == kDeletePlayerGcgDeckFieldOp;
}
inline void OfflineMsgBin::set_has_delete_player_gcg_deck_field_op() {
  _oneof_case_[0] = kDeletePlayerGcgDeckFieldOp;
}
inline void OfflineMsgBin::clear_delete_player_gcg_deck_field_op() {
  if (has_delete_player_gcg_deck_field_op()) {
    delete detail_.delete_player_gcg_deck_field_op_;
    clear_has_detail();
  }
}
inline  const ::proto::DeletePlayerGCGDeckFieldOp& OfflineMsgBin::delete_player_gcg_deck_field_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.delete_player_gcg_deck_field_op)
  return has_delete_player_gcg_deck_field_op()
      ? *detail_.delete_player_gcg_deck_field_op_
      : ::proto::DeletePlayerGCGDeckFieldOp::default_instance();
}
inline ::proto::DeletePlayerGCGDeckFieldOp* OfflineMsgBin::mutable_delete_player_gcg_deck_field_op() {
  if (!has_delete_player_gcg_deck_field_op()) {
    clear_detail();
    set_has_delete_player_gcg_deck_field_op();
    detail_.delete_player_gcg_deck_field_op_ = new ::proto::DeletePlayerGCGDeckFieldOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.delete_player_gcg_deck_field_op)
  return detail_.delete_player_gcg_deck_field_op_;
}
inline ::proto::DeletePlayerGCGDeckFieldOp* OfflineMsgBin::release_delete_player_gcg_deck_field_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.delete_player_gcg_deck_field_op)
  if (has_delete_player_gcg_deck_field_op()) {
    clear_has_detail();
    ::proto::DeletePlayerGCGDeckFieldOp* temp = detail_.delete_player_gcg_deck_field_op_;
    detail_.delete_player_gcg_deck_field_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_delete_player_gcg_deck_field_op(::proto::DeletePlayerGCGDeckFieldOp* delete_player_gcg_deck_field_op) {
  clear_detail();
  if (delete_player_gcg_deck_field_op) {
    set_has_delete_player_gcg_deck_field_op();
    detail_.delete_player_gcg_deck_field_op_ = delete_player_gcg_deck_field_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.delete_player_gcg_deck_field_op)
}

// .proto.BanPlayerGCGMatchOp ban_player_gcg_match_op = 33011;
inline bool OfflineMsgBin::has_ban_player_gcg_match_op() const {
  return detail_case() == kBanPlayerGcgMatchOp;
}
inline void OfflineMsgBin::set_has_ban_player_gcg_match_op() {
  _oneof_case_[0] = kBanPlayerGcgMatchOp;
}
inline void OfflineMsgBin::clear_ban_player_gcg_match_op() {
  if (has_ban_player_gcg_match_op()) {
    delete detail_.ban_player_gcg_match_op_;
    clear_has_detail();
  }
}
inline  const ::proto::BanPlayerGCGMatchOp& OfflineMsgBin::ban_player_gcg_match_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.ban_player_gcg_match_op)
  return has_ban_player_gcg_match_op()
      ? *detail_.ban_player_gcg_match_op_
      : ::proto::BanPlayerGCGMatchOp::default_instance();
}
inline ::proto::BanPlayerGCGMatchOp* OfflineMsgBin::mutable_ban_player_gcg_match_op() {
  if (!has_ban_player_gcg_match_op()) {
    clear_detail();
    set_has_ban_player_gcg_match_op();
    detail_.ban_player_gcg_match_op_ = new ::proto::BanPlayerGCGMatchOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.ban_player_gcg_match_op)
  return detail_.ban_player_gcg_match_op_;
}
inline ::proto::BanPlayerGCGMatchOp* OfflineMsgBin::release_ban_player_gcg_match_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.ban_player_gcg_match_op)
  if (has_ban_player_gcg_match_op()) {
    clear_has_detail();
    ::proto::BanPlayerGCGMatchOp* temp = detail_.ban_player_gcg_match_op_;
    detail_.ban_player_gcg_match_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_ban_player_gcg_match_op(::proto::BanPlayerGCGMatchOp* ban_player_gcg_match_op) {
  clear_detail();
  if (ban_player_gcg_match_op) {
    set_has_ban_player_gcg_match_op();
    detail_.ban_player_gcg_match_op_ = ban_player_gcg_match_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.ban_player_gcg_match_op)
}

// .proto.BanPlayerGCGPVPOp ban_player_gcg_pvp_op = 33012;
inline bool OfflineMsgBin::has_ban_player_gcg_pvp_op() const {
  return detail_case() == kBanPlayerGcgPvpOp;
}
inline void OfflineMsgBin::set_has_ban_player_gcg_pvp_op() {
  _oneof_case_[0] = kBanPlayerGcgPvpOp;
}
inline void OfflineMsgBin::clear_ban_player_gcg_pvp_op() {
  if (has_ban_player_gcg_pvp_op()) {
    delete detail_.ban_player_gcg_pvp_op_;
    clear_has_detail();
  }
}
inline  const ::proto::BanPlayerGCGPVPOp& OfflineMsgBin::ban_player_gcg_pvp_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineMsgBin.ban_player_gcg_pvp_op)
  return has_ban_player_gcg_pvp_op()
      ? *detail_.ban_player_gcg_pvp_op_
      : ::proto::BanPlayerGCGPVPOp::default_instance();
}
inline ::proto::BanPlayerGCGPVPOp* OfflineMsgBin::mutable_ban_player_gcg_pvp_op() {
  if (!has_ban_player_gcg_pvp_op()) {
    clear_detail();
    set_has_ban_player_gcg_pvp_op();
    detail_.ban_player_gcg_pvp_op_ = new ::proto::BanPlayerGCGPVPOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineMsgBin.ban_player_gcg_pvp_op)
  return detail_.ban_player_gcg_pvp_op_;
}
inline ::proto::BanPlayerGCGPVPOp* OfflineMsgBin::release_ban_player_gcg_pvp_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineMsgBin.ban_player_gcg_pvp_op)
  if (has_ban_player_gcg_pvp_op()) {
    clear_has_detail();
    ::proto::BanPlayerGCGPVPOp* temp = detail_.ban_player_gcg_pvp_op_;
    detail_.ban_player_gcg_pvp_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineMsgBin::set_allocated_ban_player_gcg_pvp_op(::proto::BanPlayerGCGPVPOp* ban_player_gcg_pvp_op) {
  clear_detail();
  if (ban_player_gcg_pvp_op) {
    set_has_ban_player_gcg_pvp_op();
    detail_.ban_player_gcg_pvp_op_ = ban_player_gcg_pvp_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineMsgBin.ban_player_gcg_pvp_op)
}

inline bool OfflineMsgBin::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void OfflineMsgBin::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline OfflineMsgBin::DetailCase OfflineMsgBin::detail_case() const {
  return OfflineMsgBin::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// HomeTestOp

// uint32 val = 1;
inline void HomeTestOp::clear_val() {
  val_ = 0u;
}
inline ::google::protobuf::uint32 HomeTestOp::val() const {
  // @@protoc_insertion_point(field_get:proto.HomeTestOp.val)
  return val_;
}
inline void HomeTestOp::set_val(::google::protobuf::uint32 value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeTestOp.val)
}

// -------------------------------------------------------------------

// HomeRestoreDefaultsArrangementOp

// bool is_all_module = 1;
inline void HomeRestoreDefaultsArrangementOp::clear_is_all_module() {
  is_all_module_ = false;
}
inline bool HomeRestoreDefaultsArrangementOp::is_all_module() const {
  // @@protoc_insertion_point(field_get:proto.HomeRestoreDefaultsArrangementOp.is_all_module)
  return is_all_module_;
}
inline void HomeRestoreDefaultsArrangementOp::set_is_all_module(bool value) {
  
  is_all_module_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRestoreDefaultsArrangementOp.is_all_module)
}

// repeated uint32 module_id_list = 2;
inline int HomeRestoreDefaultsArrangementOp::module_id_list_size() const {
  return module_id_list_.size();
}
inline void HomeRestoreDefaultsArrangementOp::clear_module_id_list() {
  module_id_list_.Clear();
}
inline ::google::protobuf::uint32 HomeRestoreDefaultsArrangementOp::module_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.HomeRestoreDefaultsArrangementOp.module_id_list)
  return module_id_list_.Get(index);
}
inline void HomeRestoreDefaultsArrangementOp::set_module_id_list(int index, ::google::protobuf::uint32 value) {
  module_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.HomeRestoreDefaultsArrangementOp.module_id_list)
}
inline void HomeRestoreDefaultsArrangementOp::add_module_id_list(::google::protobuf::uint32 value) {
  module_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.HomeRestoreDefaultsArrangementOp.module_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
HomeRestoreDefaultsArrangementOp::module_id_list() const {
  // @@protoc_insertion_point(field_list:proto.HomeRestoreDefaultsArrangementOp.module_id_list)
  return module_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
HomeRestoreDefaultsArrangementOp::mutable_module_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.HomeRestoreDefaultsArrangementOp.module_id_list)
  return &module_id_list_;
}

// uint32 version = 3;
inline void HomeRestoreDefaultsArrangementOp::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 HomeRestoreDefaultsArrangementOp::version() const {
  // @@protoc_insertion_point(field_get:proto.HomeRestoreDefaultsArrangementOp.version)
  return version_;
}
inline void HomeRestoreDefaultsArrangementOp::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRestoreDefaultsArrangementOp.version)
}

// -------------------------------------------------------------------

// HomeRestoreDefaultsSceneArrangementOp

// uint32 module_id = 1;
inline void HomeRestoreDefaultsSceneArrangementOp::clear_module_id() {
  module_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeRestoreDefaultsSceneArrangementOp::module_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeRestoreDefaultsSceneArrangementOp.module_id)
  return module_id_;
}
inline void HomeRestoreDefaultsSceneArrangementOp::set_module_id(::google::protobuf::uint32 value) {
  
  module_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRestoreDefaultsSceneArrangementOp.module_id)
}

// uint32 scene_id = 2;
inline void HomeRestoreDefaultsSceneArrangementOp::clear_scene_id() {
  scene_id_ = 0u;
}
inline ::google::protobuf::uint32 HomeRestoreDefaultsSceneArrangementOp::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.HomeRestoreDefaultsSceneArrangementOp.scene_id)
  return scene_id_;
}
inline void HomeRestoreDefaultsSceneArrangementOp::set_scene_id(::google::protobuf::uint32 value) {
  
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRestoreDefaultsSceneArrangementOp.scene_id)
}

// uint32 version = 3;
inline void HomeRestoreDefaultsSceneArrangementOp::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 HomeRestoreDefaultsSceneArrangementOp::version() const {
  // @@protoc_insertion_point(field_get:proto.HomeRestoreDefaultsSceneArrangementOp.version)
  return version_;
}
inline void HomeRestoreDefaultsSceneArrangementOp::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeRestoreDefaultsSceneArrangementOp.version)
}

// -------------------------------------------------------------------

// HomeOfflineMsgBin

// fixed32 enque_time = 1;
inline void HomeOfflineMsgBin::clear_enque_time() {
  enque_time_ = 0u;
}
inline ::google::protobuf::uint32 HomeOfflineMsgBin::enque_time() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgBin.enque_time)
  return enque_time_;
}
inline void HomeOfflineMsgBin::set_enque_time(::google::protobuf::uint32 value) {
  
  enque_time_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOfflineMsgBin.enque_time)
}

// string ticket = 2;
inline void HomeOfflineMsgBin::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& HomeOfflineMsgBin::ticket() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgBin.ticket)
  return ticket_.GetNoArena();
}
inline void HomeOfflineMsgBin::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.HomeOfflineMsgBin.ticket)
}
#if LANG_CXX11
inline void HomeOfflineMsgBin::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.HomeOfflineMsgBin.ticket)
}
#endif
inline void HomeOfflineMsgBin::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.HomeOfflineMsgBin.ticket)
}
inline void HomeOfflineMsgBin::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.HomeOfflineMsgBin.ticket)
}
inline ::std::string* HomeOfflineMsgBin::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.HomeOfflineMsgBin.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HomeOfflineMsgBin::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.HomeOfflineMsgBin.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HomeOfflineMsgBin::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.HomeOfflineMsgBin.ticket)
}

// uint32 index = 3;
inline void HomeOfflineMsgBin::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 HomeOfflineMsgBin::index() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgBin.index)
  return index_;
}
inline void HomeOfflineMsgBin::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.HomeOfflineMsgBin.index)
}

// .proto.HomeTestOp test_op = 101;
inline bool HomeOfflineMsgBin::has_test_op() const {
  return detail_case() == kTestOp;
}
inline void HomeOfflineMsgBin::set_has_test_op() {
  _oneof_case_[0] = kTestOp;
}
inline void HomeOfflineMsgBin::clear_test_op() {
  if (has_test_op()) {
    delete detail_.test_op_;
    clear_has_detail();
  }
}
inline  const ::proto::HomeTestOp& HomeOfflineMsgBin::test_op() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgBin.test_op)
  return has_test_op()
      ? *detail_.test_op_
      : ::proto::HomeTestOp::default_instance();
}
inline ::proto::HomeTestOp* HomeOfflineMsgBin::mutable_test_op() {
  if (!has_test_op()) {
    clear_detail();
    set_has_test_op();
    detail_.test_op_ = new ::proto::HomeTestOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeOfflineMsgBin.test_op)
  return detail_.test_op_;
}
inline ::proto::HomeTestOp* HomeOfflineMsgBin::release_test_op() {
  // @@protoc_insertion_point(field_release:proto.HomeOfflineMsgBin.test_op)
  if (has_test_op()) {
    clear_has_detail();
    ::proto::HomeTestOp* temp = detail_.test_op_;
    detail_.test_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HomeOfflineMsgBin::set_allocated_test_op(::proto::HomeTestOp* test_op) {
  clear_detail();
  if (test_op) {
    set_has_test_op();
    detail_.test_op_ = test_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeOfflineMsgBin.test_op)
}

// .proto.HomeRestoreDefaultsArrangementOp restore_defaults_arrangement_op = 102;
inline bool HomeOfflineMsgBin::has_restore_defaults_arrangement_op() const {
  return detail_case() == kRestoreDefaultsArrangementOp;
}
inline void HomeOfflineMsgBin::set_has_restore_defaults_arrangement_op() {
  _oneof_case_[0] = kRestoreDefaultsArrangementOp;
}
inline void HomeOfflineMsgBin::clear_restore_defaults_arrangement_op() {
  if (has_restore_defaults_arrangement_op()) {
    delete detail_.restore_defaults_arrangement_op_;
    clear_has_detail();
  }
}
inline  const ::proto::HomeRestoreDefaultsArrangementOp& HomeOfflineMsgBin::restore_defaults_arrangement_op() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgBin.restore_defaults_arrangement_op)
  return has_restore_defaults_arrangement_op()
      ? *detail_.restore_defaults_arrangement_op_
      : ::proto::HomeRestoreDefaultsArrangementOp::default_instance();
}
inline ::proto::HomeRestoreDefaultsArrangementOp* HomeOfflineMsgBin::mutable_restore_defaults_arrangement_op() {
  if (!has_restore_defaults_arrangement_op()) {
    clear_detail();
    set_has_restore_defaults_arrangement_op();
    detail_.restore_defaults_arrangement_op_ = new ::proto::HomeRestoreDefaultsArrangementOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeOfflineMsgBin.restore_defaults_arrangement_op)
  return detail_.restore_defaults_arrangement_op_;
}
inline ::proto::HomeRestoreDefaultsArrangementOp* HomeOfflineMsgBin::release_restore_defaults_arrangement_op() {
  // @@protoc_insertion_point(field_release:proto.HomeOfflineMsgBin.restore_defaults_arrangement_op)
  if (has_restore_defaults_arrangement_op()) {
    clear_has_detail();
    ::proto::HomeRestoreDefaultsArrangementOp* temp = detail_.restore_defaults_arrangement_op_;
    detail_.restore_defaults_arrangement_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HomeOfflineMsgBin::set_allocated_restore_defaults_arrangement_op(::proto::HomeRestoreDefaultsArrangementOp* restore_defaults_arrangement_op) {
  clear_detail();
  if (restore_defaults_arrangement_op) {
    set_has_restore_defaults_arrangement_op();
    detail_.restore_defaults_arrangement_op_ = restore_defaults_arrangement_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeOfflineMsgBin.restore_defaults_arrangement_op)
}

// .proto.HomeRestoreDefaultsSceneArrangementOp restore_defaults_scene_arrangement_op = 103;
inline bool HomeOfflineMsgBin::has_restore_defaults_scene_arrangement_op() const {
  return detail_case() == kRestoreDefaultsSceneArrangementOp;
}
inline void HomeOfflineMsgBin::set_has_restore_defaults_scene_arrangement_op() {
  _oneof_case_[0] = kRestoreDefaultsSceneArrangementOp;
}
inline void HomeOfflineMsgBin::clear_restore_defaults_scene_arrangement_op() {
  if (has_restore_defaults_scene_arrangement_op()) {
    delete detail_.restore_defaults_scene_arrangement_op_;
    clear_has_detail();
  }
}
inline  const ::proto::HomeRestoreDefaultsSceneArrangementOp& HomeOfflineMsgBin::restore_defaults_scene_arrangement_op() const {
  // @@protoc_insertion_point(field_get:proto.HomeOfflineMsgBin.restore_defaults_scene_arrangement_op)
  return has_restore_defaults_scene_arrangement_op()
      ? *detail_.restore_defaults_scene_arrangement_op_
      : ::proto::HomeRestoreDefaultsSceneArrangementOp::default_instance();
}
inline ::proto::HomeRestoreDefaultsSceneArrangementOp* HomeOfflineMsgBin::mutable_restore_defaults_scene_arrangement_op() {
  if (!has_restore_defaults_scene_arrangement_op()) {
    clear_detail();
    set_has_restore_defaults_scene_arrangement_op();
    detail_.restore_defaults_scene_arrangement_op_ = new ::proto::HomeRestoreDefaultsSceneArrangementOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.HomeOfflineMsgBin.restore_defaults_scene_arrangement_op)
  return detail_.restore_defaults_scene_arrangement_op_;
}
inline ::proto::HomeRestoreDefaultsSceneArrangementOp* HomeOfflineMsgBin::release_restore_defaults_scene_arrangement_op() {
  // @@protoc_insertion_point(field_release:proto.HomeOfflineMsgBin.restore_defaults_scene_arrangement_op)
  if (has_restore_defaults_scene_arrangement_op()) {
    clear_has_detail();
    ::proto::HomeRestoreDefaultsSceneArrangementOp* temp = detail_.restore_defaults_scene_arrangement_op_;
    detail_.restore_defaults_scene_arrangement_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void HomeOfflineMsgBin::set_allocated_restore_defaults_scene_arrangement_op(::proto::HomeRestoreDefaultsSceneArrangementOp* restore_defaults_scene_arrangement_op) {
  clear_detail();
  if (restore_defaults_scene_arrangement_op) {
    set_has_restore_defaults_scene_arrangement_op();
    detail_.restore_defaults_scene_arrangement_op_ = restore_defaults_scene_arrangement_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.HomeOfflineMsgBin.restore_defaults_scene_arrangement_op)
}

inline bool HomeOfflineMsgBin::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void HomeOfflineMsgBin::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline HomeOfflineMsgBin::DetailCase HomeOfflineMsgBin::detail_case() const {
  return HomeOfflineMsgBin::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// GroupVariableBin

// int32 value = 2;
inline void GroupVariableBin::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 GroupVariableBin::value() const {
  // @@protoc_insertion_point(field_get:proto.GroupVariableBin.value)
  return value_;
}
inline void GroupVariableBin::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupVariableBin.value)
}

// -------------------------------------------------------------------

// GroupVariableConfigIdBin

// uint32 config_id = 1;
inline void GroupVariableConfigIdBin::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 GroupVariableConfigIdBin::config_id() const {
  // @@protoc_insertion_point(field_get:proto.GroupVariableConfigIdBin.config_id)
  return config_id_;
}
inline void GroupVariableConfigIdBin::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupVariableConfigIdBin.config_id)
}

// int32 value = 2;
inline void GroupVariableConfigIdBin::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 GroupVariableConfigIdBin::value() const {
  // @@protoc_insertion_point(field_get:proto.GroupVariableConfigIdBin.value)
  return value_;
}
inline void GroupVariableConfigIdBin::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.GroupVariableConfigIdBin.value)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GroupProductBin

// map<uint32, uint32> gadget_one_off_map = 1;
inline int GroupProductBin::gadget_one_off_map_size() const {
  return gadget_one_off_map_.size();
}
inline void GroupProductBin::clear_gadget_one_off_map() {
  gadget_one_off_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GroupProductBin::gadget_one_off_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupProductBin.gadget_one_off_map)
  return gadget_one_off_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GroupProductBin::mutable_gadget_one_off_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupProductBin.gadget_one_off_map)
  return gadget_one_off_map_.MutableMap();
}

// map<uint32, uint32> monster_one_off_map = 2;
inline int GroupProductBin::monster_one_off_map_size() const {
  return monster_one_off_map_.size();
}
inline void GroupProductBin::clear_monster_one_off_map() {
  monster_one_off_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GroupProductBin::monster_one_off_map() const {
  // @@protoc_insertion_point(field_map:proto.GroupProductBin.monster_one_off_map)
  return monster_one_off_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GroupProductBin::mutable_monster_one_off_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GroupProductBin.monster_one_off_map)
  return monster_one_off_map_.MutableMap();
}

// -------------------------------------------------------------------

// InteractGadget

// uint32 group_id = 1;
inline void InteractGadget::clear_group_id() {
  group_id_ = 0u;
}
inline ::google::protobuf::uint32 InteractGadget::group_id() const {
  // @@protoc_insertion_point(field_get:proto.InteractGadget.group_id)
  return group_id_;
}
inline void InteractGadget::set_group_id(::google::protobuf::uint32 value) {
  
  group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InteractGadget.group_id)
}

// uint32 config_id = 2;
inline void InteractGadget::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 InteractGadget::config_id() const {
  // @@protoc_insertion_point(field_get:proto.InteractGadget.config_id)
  return config_id_;
}
inline void InteractGadget::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.InteractGadget.config_id)
}

// -------------------------------------------------------------------

// AreaBin

// uint32 explore_num = 1;
inline void AreaBin::clear_explore_num() {
  explore_num_ = 0u;
}
inline ::google::protobuf::uint32 AreaBin::explore_num() const {
  // @@protoc_insertion_point(field_get:proto.AreaBin.explore_num)
  return explore_num_;
}
inline void AreaBin::set_explore_num(::google::protobuf::uint32 value) {
  
  explore_num_ = value;
  // @@protoc_insertion_point(field_set:proto.AreaBin.explore_num)
}

// uint32 explore_point = 2;
inline void AreaBin::clear_explore_point() {
  explore_point_ = 0u;
}
inline ::google::protobuf::uint32 AreaBin::explore_point() const {
  // @@protoc_insertion_point(field_get:proto.AreaBin.explore_point)
  return explore_point_;
}
inline void AreaBin::set_explore_point(::google::protobuf::uint32 value) {
  
  explore_point_ = value;
  // @@protoc_insertion_point(field_set:proto.AreaBin.explore_point)
}

// repeated uint32 unlock_point_list = 3;
inline int AreaBin::unlock_point_list_size() const {
  return unlock_point_list_.size();
}
inline void AreaBin::clear_unlock_point_list() {
  unlock_point_list_.Clear();
}
inline ::google::protobuf::uint32 AreaBin::unlock_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AreaBin.unlock_point_list)
  return unlock_point_list_.Get(index);
}
inline void AreaBin::set_unlock_point_list(int index, ::google::protobuf::uint32 value) {
  unlock_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.AreaBin.unlock_point_list)
}
inline void AreaBin::add_unlock_point_list(::google::protobuf::uint32 value) {
  unlock_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.AreaBin.unlock_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AreaBin::unlock_point_list() const {
  // @@protoc_insertion_point(field_list:proto.AreaBin.unlock_point_list)
  return unlock_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AreaBin::mutable_unlock_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AreaBin.unlock_point_list)
  return &unlock_point_list_;
}

// repeated .proto.InteractGadget interact_gadget_list = 4;
inline int AreaBin::interact_gadget_list_size() const {
  return interact_gadget_list_.size();
}
inline void AreaBin::clear_interact_gadget_list() {
  interact_gadget_list_.Clear();
}
inline const ::proto::InteractGadget& AreaBin::interact_gadget_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.AreaBin.interact_gadget_list)
  return interact_gadget_list_.Get(index);
}
inline ::proto::InteractGadget* AreaBin::mutable_interact_gadget_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.AreaBin.interact_gadget_list)
  return interact_gadget_list_.Mutable(index);
}
inline ::proto::InteractGadget* AreaBin::add_interact_gadget_list() {
  // @@protoc_insertion_point(field_add:proto.AreaBin.interact_gadget_list)
  return interact_gadget_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::InteractGadget >*
AreaBin::mutable_interact_gadget_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.AreaBin.interact_gadget_list)
  return &interact_gadget_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::InteractGadget >&
AreaBin::interact_gadget_list() const {
  // @@protoc_insertion_point(field_list:proto.AreaBin.interact_gadget_list)
  return interact_gadget_list_;
}

// -------------------------------------------------------------------

// CityBin

// uint32 level = 1;
inline void CityBin::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 CityBin::level() const {
  // @@protoc_insertion_point(field_get:proto.CityBin.level)
  return level_;
}
inline void CityBin::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.CityBin.level)
}

// uint32 crystal_num = 2;
inline void CityBin::clear_crystal_num() {
  crystal_num_ = 0u;
}
inline ::google::protobuf::uint32 CityBin::crystal_num() const {
  // @@protoc_insertion_point(field_get:proto.CityBin.crystal_num)
  return crystal_num_;
}
inline void CityBin::set_crystal_num(::google::protobuf::uint32 value) {
  
  crystal_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CityBin.crystal_num)
}

// -------------------------------------------------------------------

// ScenePlayerLocationBin

// .proto.VectorBin cur_pos = 1;
inline bool ScenePlayerLocationBin::has_cur_pos() const {
  return this != internal_default_instance() && cur_pos_ != NULL;
}
inline void ScenePlayerLocationBin::clear_cur_pos() {
  if (GetArenaNoVirtual() == NULL && cur_pos_ != NULL) delete cur_pos_;
  cur_pos_ = NULL;
}
inline const ::proto::VectorBin& ScenePlayerLocationBin::cur_pos() const {
  const ::proto::VectorBin* p = cur_pos_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationBin.cur_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* ScenePlayerLocationBin::mutable_cur_pos() {
  
  if (cur_pos_ == NULL) {
    cur_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerLocationBin.cur_pos)
  return cur_pos_;
}
inline ::proto::VectorBin* ScenePlayerLocationBin::release_cur_pos() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerLocationBin.cur_pos)
  
  ::proto::VectorBin* temp = cur_pos_;
  cur_pos_ = NULL;
  return temp;
}
inline void ScenePlayerLocationBin::set_allocated_cur_pos(::proto::VectorBin* cur_pos) {
  delete cur_pos_;
  cur_pos_ = cur_pos;
  if (cur_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerLocationBin.cur_pos)
}

// .proto.VectorBin cur_rot = 2;
inline bool ScenePlayerLocationBin::has_cur_rot() const {
  return this != internal_default_instance() && cur_rot_ != NULL;
}
inline void ScenePlayerLocationBin::clear_cur_rot() {
  if (GetArenaNoVirtual() == NULL && cur_rot_ != NULL) delete cur_rot_;
  cur_rot_ = NULL;
}
inline const ::proto::VectorBin& ScenePlayerLocationBin::cur_rot() const {
  const ::proto::VectorBin* p = cur_rot_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationBin.cur_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* ScenePlayerLocationBin::mutable_cur_rot() {
  
  if (cur_rot_ == NULL) {
    cur_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerLocationBin.cur_rot)
  return cur_rot_;
}
inline ::proto::VectorBin* ScenePlayerLocationBin::release_cur_rot() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerLocationBin.cur_rot)
  
  ::proto::VectorBin* temp = cur_rot_;
  cur_rot_ = NULL;
  return temp;
}
inline void ScenePlayerLocationBin::set_allocated_cur_rot(::proto::VectorBin* cur_rot) {
  delete cur_rot_;
  cur_rot_ = cur_rot;
  if (cur_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerLocationBin.cur_rot)
}

// .proto.VectorBin last_valid_pos = 3;
inline bool ScenePlayerLocationBin::has_last_valid_pos() const {
  return this != internal_default_instance() && last_valid_pos_ != NULL;
}
inline void ScenePlayerLocationBin::clear_last_valid_pos() {
  if (GetArenaNoVirtual() == NULL && last_valid_pos_ != NULL) delete last_valid_pos_;
  last_valid_pos_ = NULL;
}
inline const ::proto::VectorBin& ScenePlayerLocationBin::last_valid_pos() const {
  const ::proto::VectorBin* p = last_valid_pos_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationBin.last_valid_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* ScenePlayerLocationBin::mutable_last_valid_pos() {
  
  if (last_valid_pos_ == NULL) {
    last_valid_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerLocationBin.last_valid_pos)
  return last_valid_pos_;
}
inline ::proto::VectorBin* ScenePlayerLocationBin::release_last_valid_pos() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerLocationBin.last_valid_pos)
  
  ::proto::VectorBin* temp = last_valid_pos_;
  last_valid_pos_ = NULL;
  return temp;
}
inline void ScenePlayerLocationBin::set_allocated_last_valid_pos(::proto::VectorBin* last_valid_pos) {
  delete last_valid_pos_;
  last_valid_pos_ = last_valid_pos;
  if (last_valid_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerLocationBin.last_valid_pos)
}

// .proto.VectorBin last_valid_rot = 4;
inline bool ScenePlayerLocationBin::has_last_valid_rot() const {
  return this != internal_default_instance() && last_valid_rot_ != NULL;
}
inline void ScenePlayerLocationBin::clear_last_valid_rot() {
  if (GetArenaNoVirtual() == NULL && last_valid_rot_ != NULL) delete last_valid_rot_;
  last_valid_rot_ = NULL;
}
inline const ::proto::VectorBin& ScenePlayerLocationBin::last_valid_rot() const {
  const ::proto::VectorBin* p = last_valid_rot_;
  // @@protoc_insertion_point(field_get:proto.ScenePlayerLocationBin.last_valid_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* ScenePlayerLocationBin::mutable_last_valid_rot() {
  
  if (last_valid_rot_ == NULL) {
    last_valid_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.ScenePlayerLocationBin.last_valid_rot)
  return last_valid_rot_;
}
inline ::proto::VectorBin* ScenePlayerLocationBin::release_last_valid_rot() {
  // @@protoc_insertion_point(field_release:proto.ScenePlayerLocationBin.last_valid_rot)
  
  ::proto::VectorBin* temp = last_valid_rot_;
  last_valid_rot_ = NULL;
  return temp;
}
inline void ScenePlayerLocationBin::set_allocated_last_valid_rot(::proto::VectorBin* last_valid_rot) {
  delete last_valid_rot_;
  last_valid_rot_ = last_valid_rot;
  if (last_valid_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ScenePlayerLocationBin.last_valid_rot)
}

// -------------------------------------------------------------------

// EnvZoneInfoBin

// fixed32 last_refresh_time = 1;
inline void EnvZoneInfoBin::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
inline ::google::protobuf::uint32 EnvZoneInfoBin::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.EnvZoneInfoBin.last_refresh_time)
  return last_refresh_time_;
}
inline void EnvZoneInfoBin::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.EnvZoneInfoBin.last_refresh_time)
}

// uint32 animal_num = 2;
inline void EnvZoneInfoBin::clear_animal_num() {
  animal_num_ = 0u;
}
inline ::google::protobuf::uint32 EnvZoneInfoBin::animal_num() const {
  // @@protoc_insertion_point(field_get:proto.EnvZoneInfoBin.animal_num)
  return animal_num_;
}
inline void EnvZoneInfoBin::set_animal_num(::google::protobuf::uint32 value) {
  
  animal_num_ = value;
  // @@protoc_insertion_point(field_set:proto.EnvZoneInfoBin.animal_num)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneEnvAnimalCompBin

// map<uint32, .proto.EnvZoneInfoBin> zone_info_map = 1;
inline int SceneEnvAnimalCompBin::zone_info_map_size() const {
  return zone_info_map_.size();
}
inline void SceneEnvAnimalCompBin::clear_zone_info_map() {
  zone_info_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >&
SceneEnvAnimalCompBin::zone_info_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneEnvAnimalCompBin.zone_info_map)
  return zone_info_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::EnvZoneInfoBin >*
SceneEnvAnimalCompBin::mutable_zone_info_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneEnvAnimalCompBin.zone_info_map)
  return zone_info_map_.MutableMap();
}

// -------------------------------------------------------------------

// SceneWeatherInfoBin

// uint32 height_area_id = 1;
inline void SceneWeatherInfoBin::clear_height_area_id() {
  height_area_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeatherInfoBin::height_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherInfoBin.height_area_id)
  return height_area_id_;
}
inline void SceneWeatherInfoBin::set_height_area_id(::google::protobuf::uint32 value) {
  
  height_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherInfoBin.height_area_id)
}

// uint32 climate_type = 2;
inline void SceneWeatherInfoBin::clear_climate_type() {
  climate_type_ = 0u;
}
inline ::google::protobuf::uint32 SceneWeatherInfoBin::climate_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherInfoBin.climate_type)
  return climate_type_;
}
inline void SceneWeatherInfoBin::set_climate_type(::google::protobuf::uint32 value) {
  
  climate_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherInfoBin.climate_type)
}

// uint64 next_climate_time = 3;
inline void SceneWeatherInfoBin::clear_next_climate_time() {
  next_climate_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneWeatherInfoBin::next_climate_time() const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherInfoBin.next_climate_time)
  return next_climate_time_;
}
inline void SceneWeatherInfoBin::set_next_climate_time(::google::protobuf::uint64 value) {
  
  next_climate_time_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneWeatherInfoBin.next_climate_time)
}

// repeated uint32 forcast_climate_list = 4;
inline int SceneWeatherInfoBin::forcast_climate_list_size() const {
  return forcast_climate_list_.size();
}
inline void SceneWeatherInfoBin::clear_forcast_climate_list() {
  forcast_climate_list_.Clear();
}
inline ::google::protobuf::uint32 SceneWeatherInfoBin::forcast_climate_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneWeatherInfoBin.forcast_climate_list)
  return forcast_climate_list_.Get(index);
}
inline void SceneWeatherInfoBin::set_forcast_climate_list(int index, ::google::protobuf::uint32 value) {
  forcast_climate_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneWeatherInfoBin.forcast_climate_list)
}
inline void SceneWeatherInfoBin::add_forcast_climate_list(::google::protobuf::uint32 value) {
  forcast_climate_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneWeatherInfoBin.forcast_climate_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneWeatherInfoBin::forcast_climate_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneWeatherInfoBin.forcast_climate_list)
  return forcast_climate_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneWeatherInfoBin::mutable_forcast_climate_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneWeatherInfoBin.forcast_climate_list)
  return &forcast_climate_list_;
}

// -------------------------------------------------------------------

// SceneClimateAreaInfoBin

// uint32 climate_area_id = 1;
inline void SceneClimateAreaInfoBin::clear_climate_area_id() {
  climate_area_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneClimateAreaInfoBin::climate_area_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneClimateAreaInfoBin.climate_area_id)
  return climate_area_id_;
}
inline void SceneClimateAreaInfoBin::set_climate_area_id(::google::protobuf::uint32 value) {
  
  climate_area_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneClimateAreaInfoBin.climate_area_id)
}

// uint32 json_climate_type = 2;
inline void SceneClimateAreaInfoBin::clear_json_climate_type() {
  json_climate_type_ = 0u;
}
inline ::google::protobuf::uint32 SceneClimateAreaInfoBin::json_climate_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneClimateAreaInfoBin.json_climate_type)
  return json_climate_type_;
}
inline void SceneClimateAreaInfoBin::set_json_climate_type(::google::protobuf::uint32 value) {
  
  json_climate_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneClimateAreaInfoBin.json_climate_type)
}

// -------------------------------------------------------------------

// SceneAllWeatherInfoBin

// repeated .proto.SceneWeatherInfoBin weather_info_list = 1;
inline int SceneAllWeatherInfoBin::weather_info_list_size() const {
  return weather_info_list_.size();
}
inline void SceneAllWeatherInfoBin::clear_weather_info_list() {
  weather_info_list_.Clear();
}
inline const ::proto::SceneWeatherInfoBin& SceneAllWeatherInfoBin::weather_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAllWeatherInfoBin.weather_info_list)
  return weather_info_list_.Get(index);
}
inline ::proto::SceneWeatherInfoBin* SceneAllWeatherInfoBin::mutable_weather_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneAllWeatherInfoBin.weather_info_list)
  return weather_info_list_.Mutable(index);
}
inline ::proto::SceneWeatherInfoBin* SceneAllWeatherInfoBin::add_weather_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneAllWeatherInfoBin.weather_info_list)
  return weather_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneWeatherInfoBin >*
SceneAllWeatherInfoBin::mutable_weather_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAllWeatherInfoBin.weather_info_list)
  return &weather_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneWeatherInfoBin >&
SceneAllWeatherInfoBin::weather_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAllWeatherInfoBin.weather_info_list)
  return weather_info_list_;
}

// repeated uint32 closed_weather_area_list = 2;
inline int SceneAllWeatherInfoBin::closed_weather_area_list_size() const {
  return closed_weather_area_list_.size();
}
inline void SceneAllWeatherInfoBin::clear_closed_weather_area_list() {
  closed_weather_area_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAllWeatherInfoBin::closed_weather_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAllWeatherInfoBin.closed_weather_area_list)
  return closed_weather_area_list_.Get(index);
}
inline void SceneAllWeatherInfoBin::set_closed_weather_area_list(int index, ::google::protobuf::uint32 value) {
  closed_weather_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAllWeatherInfoBin.closed_weather_area_list)
}
inline void SceneAllWeatherInfoBin::add_closed_weather_area_list(::google::protobuf::uint32 value) {
  closed_weather_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAllWeatherInfoBin.closed_weather_area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAllWeatherInfoBin::closed_weather_area_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAllWeatherInfoBin.closed_weather_area_list)
  return closed_weather_area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAllWeatherInfoBin::mutable_closed_weather_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAllWeatherInfoBin.closed_weather_area_list)
  return &closed_weather_area_list_;
}

// repeated .proto.SceneClimateAreaInfoBin climate_area_info_list = 3;
inline int SceneAllWeatherInfoBin::climate_area_info_list_size() const {
  return climate_area_info_list_.size();
}
inline void SceneAllWeatherInfoBin::clear_climate_area_info_list() {
  climate_area_info_list_.Clear();
}
inline const ::proto::SceneClimateAreaInfoBin& SceneAllWeatherInfoBin::climate_area_info_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAllWeatherInfoBin.climate_area_info_list)
  return climate_area_info_list_.Get(index);
}
inline ::proto::SceneClimateAreaInfoBin* SceneAllWeatherInfoBin::mutable_climate_area_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneAllWeatherInfoBin.climate_area_info_list)
  return climate_area_info_list_.Mutable(index);
}
inline ::proto::SceneClimateAreaInfoBin* SceneAllWeatherInfoBin::add_climate_area_info_list() {
  // @@protoc_insertion_point(field_add:proto.SceneAllWeatherInfoBin.climate_area_info_list)
  return climate_area_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneClimateAreaInfoBin >*
SceneAllWeatherInfoBin::mutable_climate_area_info_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAllWeatherInfoBin.climate_area_info_list)
  return &climate_area_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneClimateAreaInfoBin >&
SceneAllWeatherInfoBin::climate_area_info_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAllWeatherInfoBin.climate_area_info_list)
  return climate_area_info_list_;
}

// repeated uint32 closed_climate_area_list = 4;
inline int SceneAllWeatherInfoBin::closed_climate_area_list_size() const {
  return closed_climate_area_list_.size();
}
inline void SceneAllWeatherInfoBin::clear_closed_climate_area_list() {
  closed_climate_area_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAllWeatherInfoBin::closed_climate_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAllWeatherInfoBin.closed_climate_area_list)
  return closed_climate_area_list_.Get(index);
}
inline void SceneAllWeatherInfoBin::set_closed_climate_area_list(int index, ::google::protobuf::uint32 value) {
  closed_climate_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAllWeatherInfoBin.closed_climate_area_list)
}
inline void SceneAllWeatherInfoBin::add_closed_climate_area_list(::google::protobuf::uint32 value) {
  closed_climate_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAllWeatherInfoBin.closed_climate_area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAllWeatherInfoBin::closed_climate_area_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAllWeatherInfoBin.closed_climate_area_list)
  return closed_climate_area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAllWeatherInfoBin::mutable_closed_climate_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAllWeatherInfoBin.closed_climate_area_list)
  return &closed_climate_area_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// BackupGroupBin

// repeated uint32 del_monster_list = 1;
inline int BackupGroupBin::del_monster_list_size() const {
  return del_monster_list_.size();
}
inline void BackupGroupBin::clear_del_monster_list() {
  del_monster_list_.Clear();
}
inline ::google::protobuf::uint32 BackupGroupBin::del_monster_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.BackupGroupBin.del_monster_list)
  return del_monster_list_.Get(index);
}
inline void BackupGroupBin::set_del_monster_list(int index, ::google::protobuf::uint32 value) {
  del_monster_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.BackupGroupBin.del_monster_list)
}
inline void BackupGroupBin::add_del_monster_list(::google::protobuf::uint32 value) {
  del_monster_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.BackupGroupBin.del_monster_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BackupGroupBin::del_monster_list() const {
  // @@protoc_insertion_point(field_list:proto.BackupGroupBin.del_monster_list)
  return del_monster_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BackupGroupBin::mutable_del_monster_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.BackupGroupBin.del_monster_list)
  return &del_monster_list_;
}

// map<string, .proto.GroupVariableBin> variable_map = 2;
inline int BackupGroupBin::variable_map_size() const {
  return variable_map_.size();
}
inline void BackupGroupBin::clear_variable_map() {
  variable_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >&
BackupGroupBin::variable_map() const {
  // @@protoc_insertion_point(field_map:proto.BackupGroupBin.variable_map)
  return variable_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::proto::GroupVariableBin >*
BackupGroupBin::mutable_variable_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.BackupGroupBin.variable_map)
  return variable_map_.MutableMap();
}

// uint32 revise_level = 3;
inline void BackupGroupBin::clear_revise_level() {
  revise_level_ = 0u;
}
inline ::google::protobuf::uint32 BackupGroupBin::revise_level() const {
  // @@protoc_insertion_point(field_get:proto.BackupGroupBin.revise_level)
  return revise_level_;
}
inline void BackupGroupBin::set_revise_level(::google::protobuf::uint32 value) {
  
  revise_level_ = value;
  // @@protoc_insertion_point(field_set:proto.BackupGroupBin.revise_level)
}

// fixed32 last_refresh_time = 4;
inline void BackupGroupBin::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
inline ::google::protobuf::uint32 BackupGroupBin::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.BackupGroupBin.last_refresh_time)
  return last_refresh_time_;
}
inline void BackupGroupBin::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.BackupGroupBin.last_refresh_time)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneBlockGroupCompBin

// repeated uint32 dead_group_list = 1;
inline int SceneBlockGroupCompBin::dead_group_list_size() const {
  return dead_group_list_.size();
}
inline void SceneBlockGroupCompBin::clear_dead_group_list() {
  dead_group_list_.Clear();
}
inline ::google::protobuf::uint32 SceneBlockGroupCompBin::dead_group_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBlockGroupCompBin.dead_group_list)
  return dead_group_list_.Get(index);
}
inline void SceneBlockGroupCompBin::set_dead_group_list(int index, ::google::protobuf::uint32 value) {
  dead_group_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBlockGroupCompBin.dead_group_list)
}
inline void SceneBlockGroupCompBin::add_dead_group_list(::google::protobuf::uint32 value) {
  dead_group_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBlockGroupCompBin.dead_group_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBlockGroupCompBin::dead_group_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBlockGroupCompBin.dead_group_list)
  return dead_group_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBlockGroupCompBin::mutable_dead_group_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBlockGroupCompBin.dead_group_list)
  return &dead_group_list_;
}

// map<uint32, .proto.BackupGroupBin> backup_group_map = 2;
inline int SceneBlockGroupCompBin::backup_group_map_size() const {
  return backup_group_map_.size();
}
inline void SceneBlockGroupCompBin::clear_backup_group_map() {
  backup_group_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >&
SceneBlockGroupCompBin::backup_group_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneBlockGroupCompBin.backup_group_map)
  return backup_group_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::BackupGroupBin >*
SceneBlockGroupCompBin::mutable_backup_group_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneBlockGroupCompBin.backup_group_map)
  return backup_group_map_.MutableMap();
}

// bool is_scene_group_all_dead = 3;
inline void SceneBlockGroupCompBin::clear_is_scene_group_all_dead() {
  is_scene_group_all_dead_ = false;
}
inline bool SceneBlockGroupCompBin::is_scene_group_all_dead() const {
  // @@protoc_insertion_point(field_get:proto.SceneBlockGroupCompBin.is_scene_group_all_dead)
  return is_scene_group_all_dead_;
}
inline void SceneBlockGroupCompBin::set_is_scene_group_all_dead(bool value) {
  
  is_scene_group_all_dead_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneBlockGroupCompBin.is_scene_group_all_dead)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SceneAreaCompBin

// repeated uint32 unlocked_area_list = 1;
inline int SceneAreaCompBin::unlocked_area_list_size() const {
  return unlocked_area_list_.size();
}
inline void SceneAreaCompBin::clear_unlocked_area_list() {
  unlocked_area_list_.Clear();
}
inline ::google::protobuf::uint32 SceneAreaCompBin::unlocked_area_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneAreaCompBin.unlocked_area_list)
  return unlocked_area_list_.Get(index);
}
inline void SceneAreaCompBin::set_unlocked_area_list(int index, ::google::protobuf::uint32 value) {
  unlocked_area_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneAreaCompBin.unlocked_area_list)
}
inline void SceneAreaCompBin::add_unlocked_area_list(::google::protobuf::uint32 value) {
  unlocked_area_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneAreaCompBin.unlocked_area_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneAreaCompBin::unlocked_area_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneAreaCompBin.unlocked_area_list)
  return unlocked_area_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneAreaCompBin::mutable_unlocked_area_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneAreaCompBin.unlocked_area_list)
  return &unlocked_area_list_;
}

// map<uint32, .proto.AreaBin> area_map = 2;
inline int SceneAreaCompBin::area_map_size() const {
  return area_map_.size();
}
inline void SceneAreaCompBin::clear_area_map() {
  area_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >&
SceneAreaCompBin::area_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAreaCompBin.area_map)
  return area_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::AreaBin >*
SceneAreaCompBin::mutable_area_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAreaCompBin.area_map)
  return area_map_.MutableMap();
}

// map<uint32, .proto.CityBin> city_map = 3;
inline int SceneAreaCompBin::city_map_size() const {
  return city_map_.size();
}
inline void SceneAreaCompBin::clear_city_map() {
  city_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >&
SceneAreaCompBin::city_map() const {
  // @@protoc_insertion_point(field_map:proto.SceneAreaCompBin.city_map)
  return city_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::CityBin >*
SceneAreaCompBin::mutable_city_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.SceneAreaCompBin.city_map)
  return city_map_.MutableMap();
}

// -------------------------------------------------------------------

// SceneEncounterCompBin

// repeated uint32 parent_quest_id_list = 1;
inline int SceneEncounterCompBin::parent_quest_id_list_size() const {
  return parent_quest_id_list_.size();
}
inline void SceneEncounterCompBin::clear_parent_quest_id_list() {
  parent_quest_id_list_.Clear();
}
inline ::google::protobuf::uint32 SceneEncounterCompBin::parent_quest_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneEncounterCompBin.parent_quest_id_list)
  return parent_quest_id_list_.Get(index);
}
inline void SceneEncounterCompBin::set_parent_quest_id_list(int index, ::google::protobuf::uint32 value) {
  parent_quest_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneEncounterCompBin.parent_quest_id_list)
}
inline void SceneEncounterCompBin::add_parent_quest_id_list(::google::protobuf::uint32 value) {
  parent_quest_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneEncounterCompBin.parent_quest_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneEncounterCompBin::parent_quest_id_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneEncounterCompBin.parent_quest_id_list)
  return parent_quest_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneEncounterCompBin::mutable_parent_quest_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneEncounterCompBin.parent_quest_id_list)
  return &parent_quest_id_list_;
}

// -------------------------------------------------------------------

// ActivitySceneBin

// bool is_open = 1;
inline void ActivitySceneBin::clear_is_open() {
  is_open_ = false;
}
inline bool ActivitySceneBin::is_open() const {
  // @@protoc_insertion_point(field_get:proto.ActivitySceneBin.is_open)
  return is_open_;
}
inline void ActivitySceneBin::set_is_open(bool value) {
  
  is_open_ = value;
  // @@protoc_insertion_point(field_set:proto.ActivitySceneBin.is_open)
}

// -------------------------------------------------------------------

// SceneVehicleBin

// uint32 config_id = 1;
inline void SceneVehicleBin::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 SceneVehicleBin::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SceneVehicleBin.config_id)
  return config_id_;
}
inline void SceneVehicleBin::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneVehicleBin.config_id)
}

// .proto.VectorBin cur_pos = 2;
inline bool SceneVehicleBin::has_cur_pos() const {
  return this != internal_default_instance() && cur_pos_ != NULL;
}
inline void SceneVehicleBin::clear_cur_pos() {
  if (GetArenaNoVirtual() == NULL && cur_pos_ != NULL) delete cur_pos_;
  cur_pos_ = NULL;
}
inline const ::proto::VectorBin& SceneVehicleBin::cur_pos() const {
  const ::proto::VectorBin* p = cur_pos_;
  // @@protoc_insertion_point(field_get:proto.SceneVehicleBin.cur_pos)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* SceneVehicleBin::mutable_cur_pos() {
  
  if (cur_pos_ == NULL) {
    cur_pos_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneVehicleBin.cur_pos)
  return cur_pos_;
}
inline ::proto::VectorBin* SceneVehicleBin::release_cur_pos() {
  // @@protoc_insertion_point(field_release:proto.SceneVehicleBin.cur_pos)
  
  ::proto::VectorBin* temp = cur_pos_;
  cur_pos_ = NULL;
  return temp;
}
inline void SceneVehicleBin::set_allocated_cur_pos(::proto::VectorBin* cur_pos) {
  delete cur_pos_;
  cur_pos_ = cur_pos;
  if (cur_pos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneVehicleBin.cur_pos)
}

// .proto.VectorBin cur_rot = 3;
inline bool SceneVehicleBin::has_cur_rot() const {
  return this != internal_default_instance() && cur_rot_ != NULL;
}
inline void SceneVehicleBin::clear_cur_rot() {
  if (GetArenaNoVirtual() == NULL && cur_rot_ != NULL) delete cur_rot_;
  cur_rot_ = NULL;
}
inline const ::proto::VectorBin& SceneVehicleBin::cur_rot() const {
  const ::proto::VectorBin* p = cur_rot_;
  // @@protoc_insertion_point(field_get:proto.SceneVehicleBin.cur_rot)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::VectorBin*>(
      &::proto::_VectorBin_default_instance_);
}
inline ::proto::VectorBin* SceneVehicleBin::mutable_cur_rot() {
  
  if (cur_rot_ == NULL) {
    cur_rot_ = new ::proto::VectorBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneVehicleBin.cur_rot)
  return cur_rot_;
}
inline ::proto::VectorBin* SceneVehicleBin::release_cur_rot() {
  // @@protoc_insertion_point(field_release:proto.SceneVehicleBin.cur_rot)
  
  ::proto::VectorBin* temp = cur_rot_;
  cur_rot_ = NULL;
  return temp;
}
inline void SceneVehicleBin::set_allocated_cur_rot(::proto::VectorBin* cur_rot) {
  delete cur_rot_;
  cur_rot_ = cur_rot;
  if (cur_rot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneVehicleBin.cur_rot)
}

// -------------------------------------------------------------------

// SceneTagOp

// uint32 id = 1;
inline void SceneTagOp::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SceneTagOp::id() const {
  // @@protoc_insertion_point(field_get:proto.SceneTagOp.id)
  return id_;
}
inline void SceneTagOp::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTagOp.id)
}

// .proto.SceneTagOpType op_type = 2;
inline void SceneTagOp::clear_op_type() {
  op_type_ = 0;
}
inline ::proto::SceneTagOpType SceneTagOp::op_type() const {
  // @@protoc_insertion_point(field_get:proto.SceneTagOp.op_type)
  return static_cast< ::proto::SceneTagOpType >(op_type_);
}
inline void SceneTagOp::set_op_type(::proto::SceneTagOpType value) {
  
  op_type_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneTagOp.op_type)
}

// -------------------------------------------------------------------

// WayPoint

// uint32 point_id = 1;
inline void WayPoint::clear_point_id() {
  point_id_ = 0u;
}
inline ::google::protobuf::uint32 WayPoint::point_id() const {
  // @@protoc_insertion_point(field_get:proto.WayPoint.point_id)
  return point_id_;
}
inline void WayPoint::set_point_id(::google::protobuf::uint32 value) {
  
  point_id_ = value;
  // @@protoc_insertion_point(field_set:proto.WayPoint.point_id)
}

// uint32 activate_time = 2;
inline void WayPoint::clear_activate_time() {
  activate_time_ = 0u;
}
inline ::google::protobuf::uint32 WayPoint::activate_time() const {
  // @@protoc_insertion_point(field_get:proto.WayPoint.activate_time)
  return activate_time_;
}
inline void WayPoint::set_activate_time(::google::protobuf::uint32 value) {
  
  activate_time_ = value;
  // @@protoc_insertion_point(field_set:proto.WayPoint.activate_time)
}

// -------------------------------------------------------------------

// DungeonSceneBin

// repeated .proto.WayPoint activated_way_point_list = 1;
inline int DungeonSceneBin::activated_way_point_list_size() const {
  return activated_way_point_list_.size();
}
inline void DungeonSceneBin::clear_activated_way_point_list() {
  activated_way_point_list_.Clear();
}
inline const ::proto::WayPoint& DungeonSceneBin::activated_way_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DungeonSceneBin.activated_way_point_list)
  return activated_way_point_list_.Get(index);
}
inline ::proto::WayPoint* DungeonSceneBin::mutable_activated_way_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DungeonSceneBin.activated_way_point_list)
  return activated_way_point_list_.Mutable(index);
}
inline ::proto::WayPoint* DungeonSceneBin::add_activated_way_point_list() {
  // @@protoc_insertion_point(field_add:proto.DungeonSceneBin.activated_way_point_list)
  return activated_way_point_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::WayPoint >*
DungeonSceneBin::mutable_activated_way_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DungeonSceneBin.activated_way_point_list)
  return &activated_way_point_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::WayPoint >&
DungeonSceneBin::activated_way_point_list() const {
  // @@protoc_insertion_point(field_list:proto.DungeonSceneBin.activated_way_point_list)
  return activated_way_point_list_;
}

// repeated .proto.WayPoint activated_slip_revive_list = 2;
inline int DungeonSceneBin::activated_slip_revive_list_size() const {
  return activated_slip_revive_list_.size();
}
inline void DungeonSceneBin::clear_activated_slip_revive_list() {
  activated_slip_revive_list_.Clear();
}
inline const ::proto::WayPoint& DungeonSceneBin::activated_slip_revive_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.DungeonSceneBin.activated_slip_revive_list)
  return activated_slip_revive_list_.Get(index);
}
inline ::proto::WayPoint* DungeonSceneBin::mutable_activated_slip_revive_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.DungeonSceneBin.activated_slip_revive_list)
  return activated_slip_revive_list_.Mutable(index);
}
inline ::proto::WayPoint* DungeonSceneBin::add_activated_slip_revive_list() {
  // @@protoc_insertion_point(field_add:proto.DungeonSceneBin.activated_slip_revive_list)
  return activated_slip_revive_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::WayPoint >*
DungeonSceneBin::mutable_activated_slip_revive_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.DungeonSceneBin.activated_slip_revive_list)
  return &activated_slip_revive_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::WayPoint >&
DungeonSceneBin::activated_slip_revive_list() const {
  // @@protoc_insertion_point(field_list:proto.DungeonSceneBin.activated_slip_revive_list)
  return activated_slip_revive_list_;
}

// -------------------------------------------------------------------

// SceneBin

// repeated uint32 unlocked_point_list = 1;
inline int SceneBin::unlocked_point_list_size() const {
  return unlocked_point_list_.size();
}
inline void SceneBin::clear_unlocked_point_list() {
  unlocked_point_list_.Clear();
}
inline ::google::protobuf::uint32 SceneBin::unlocked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.unlocked_point_list)
  return unlocked_point_list_.Get(index);
}
inline void SceneBin::set_unlocked_point_list(int index, ::google::protobuf::uint32 value) {
  unlocked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.unlocked_point_list)
}
inline void SceneBin::add_unlocked_point_list(::google::protobuf::uint32 value) {
  unlocked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.unlocked_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::unlocked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.unlocked_point_list)
  return unlocked_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_unlocked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.unlocked_point_list)
  return &unlocked_point_list_;
}

// repeated uint32 unlocked_force_list = 2;
inline int SceneBin::unlocked_force_list_size() const {
  return unlocked_force_list_.size();
}
inline void SceneBin::clear_unlocked_force_list() {
  unlocked_force_list_.Clear();
}
inline ::google::protobuf::uint32 SceneBin::unlocked_force_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.unlocked_force_list)
  return unlocked_force_list_.Get(index);
}
inline void SceneBin::set_unlocked_force_list(int index, ::google::protobuf::uint32 value) {
  unlocked_force_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.unlocked_force_list)
}
inline void SceneBin::add_unlocked_force_list(::google::protobuf::uint32 value) {
  unlocked_force_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.unlocked_force_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::unlocked_force_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.unlocked_force_list)
  return unlocked_force_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_unlocked_force_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.unlocked_force_list)
  return &unlocked_force_list_;
}

// repeated uint32 locked_point_list = 3;
inline int SceneBin::locked_point_list_size() const {
  return locked_point_list_.size();
}
inline void SceneBin::clear_locked_point_list() {
  locked_point_list_.Clear();
}
inline ::google::protobuf::uint32 SceneBin::locked_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.locked_point_list)
  return locked_point_list_.Get(index);
}
inline void SceneBin::set_locked_point_list(int index, ::google::protobuf::uint32 value) {
  locked_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.locked_point_list)
}
inline void SceneBin::add_locked_point_list(::google::protobuf::uint32 value) {
  locked_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.locked_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::locked_point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.locked_point_list)
  return locked_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_locked_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.locked_point_list)
  return &locked_point_list_;
}

// .proto.SceneAllWeatherInfoBin all_weather_info = 4;
inline bool SceneBin::has_all_weather_info() const {
  return this != internal_default_instance() && all_weather_info_ != NULL;
}
inline void SceneBin::clear_all_weather_info() {
  if (GetArenaNoVirtual() == NULL && all_weather_info_ != NULL) delete all_weather_info_;
  all_weather_info_ = NULL;
}
inline const ::proto::SceneAllWeatherInfoBin& SceneBin::all_weather_info() const {
  const ::proto::SceneAllWeatherInfoBin* p = all_weather_info_;
  // @@protoc_insertion_point(field_get:proto.SceneBin.all_weather_info)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneAllWeatherInfoBin*>(
      &::proto::_SceneAllWeatherInfoBin_default_instance_);
}
inline ::proto::SceneAllWeatherInfoBin* SceneBin::mutable_all_weather_info() {
  
  if (all_weather_info_ == NULL) {
    all_weather_info_ = new ::proto::SceneAllWeatherInfoBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.all_weather_info)
  return all_weather_info_;
}
inline ::proto::SceneAllWeatherInfoBin* SceneBin::release_all_weather_info() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.all_weather_info)
  
  ::proto::SceneAllWeatherInfoBin* temp = all_weather_info_;
  all_weather_info_ = NULL;
  return temp;
}
inline void SceneBin::set_allocated_all_weather_info(::proto::SceneAllWeatherInfoBin* all_weather_info) {
  delete all_weather_info_;
  all_weather_info_ = all_weather_info;
  if (all_weather_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.all_weather_info)
}

// .proto.ScenePlayerLocationBin owner_player_location = 5;
inline bool SceneBin::has_owner_player_location() const {
  return this != internal_default_instance() && owner_player_location_ != NULL;
}
inline void SceneBin::clear_owner_player_location() {
  if (GetArenaNoVirtual() == NULL && owner_player_location_ != NULL) delete owner_player_location_;
  owner_player_location_ = NULL;
}
inline const ::proto::ScenePlayerLocationBin& SceneBin::owner_player_location() const {
  const ::proto::ScenePlayerLocationBin* p = owner_player_location_;
  // @@protoc_insertion_point(field_get:proto.SceneBin.owner_player_location)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ScenePlayerLocationBin*>(
      &::proto::_ScenePlayerLocationBin_default_instance_);
}
inline ::proto::ScenePlayerLocationBin* SceneBin::mutable_owner_player_location() {
  
  if (owner_player_location_ == NULL) {
    owner_player_location_ = new ::proto::ScenePlayerLocationBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.owner_player_location)
  return owner_player_location_;
}
inline ::proto::ScenePlayerLocationBin* SceneBin::release_owner_player_location() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.owner_player_location)
  
  ::proto::ScenePlayerLocationBin* temp = owner_player_location_;
  owner_player_location_ = NULL;
  return temp;
}
inline void SceneBin::set_allocated_owner_player_location(::proto::ScenePlayerLocationBin* owner_player_location) {
  delete owner_player_location_;
  owner_player_location_ = owner_player_location;
  if (owner_player_location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.owner_player_location)
}

// .proto.SceneBlockGroupCompBin block_group_bin = 6;
inline bool SceneBin::has_block_group_bin() const {
  return this != internal_default_instance() && block_group_bin_ != NULL;
}
inline void SceneBin::clear_block_group_bin() {
  if (GetArenaNoVirtual() == NULL && block_group_bin_ != NULL) delete block_group_bin_;
  block_group_bin_ = NULL;
}
inline const ::proto::SceneBlockGroupCompBin& SceneBin::block_group_bin() const {
  const ::proto::SceneBlockGroupCompBin* p = block_group_bin_;
  // @@protoc_insertion_point(field_get:proto.SceneBin.block_group_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneBlockGroupCompBin*>(
      &::proto::_SceneBlockGroupCompBin_default_instance_);
}
inline ::proto::SceneBlockGroupCompBin* SceneBin::mutable_block_group_bin() {
  
  if (block_group_bin_ == NULL) {
    block_group_bin_ = new ::proto::SceneBlockGroupCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.block_group_bin)
  return block_group_bin_;
}
inline ::proto::SceneBlockGroupCompBin* SceneBin::release_block_group_bin() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.block_group_bin)
  
  ::proto::SceneBlockGroupCompBin* temp = block_group_bin_;
  block_group_bin_ = NULL;
  return temp;
}
inline void SceneBin::set_allocated_block_group_bin(::proto::SceneBlockGroupCompBin* block_group_bin) {
  delete block_group_bin_;
  block_group_bin_ = block_group_bin;
  if (block_group_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.block_group_bin)
}

// .proto.SceneEnvAnimalCompBin env_animal_bin = 7;
inline bool SceneBin::has_env_animal_bin() const {
  return this != internal_default_instance() && env_animal_bin_ != NULL;
}
inline void SceneBin::clear_env_animal_bin() {
  if (GetArenaNoVirtual() == NULL && env_animal_bin_ != NULL) delete env_animal_bin_;
  env_animal_bin_ = NULL;
}
inline const ::proto::SceneEnvAnimalCompBin& SceneBin::env_animal_bin() const {
  const ::proto::SceneEnvAnimalCompBin* p = env_animal_bin_;
  // @@protoc_insertion_point(field_get:proto.SceneBin.env_animal_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneEnvAnimalCompBin*>(
      &::proto::_SceneEnvAnimalCompBin_default_instance_);
}
inline ::proto::SceneEnvAnimalCompBin* SceneBin::mutable_env_animal_bin() {
  
  if (env_animal_bin_ == NULL) {
    env_animal_bin_ = new ::proto::SceneEnvAnimalCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.env_animal_bin)
  return env_animal_bin_;
}
inline ::proto::SceneEnvAnimalCompBin* SceneBin::release_env_animal_bin() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.env_animal_bin)
  
  ::proto::SceneEnvAnimalCompBin* temp = env_animal_bin_;
  env_animal_bin_ = NULL;
  return temp;
}
inline void SceneBin::set_allocated_env_animal_bin(::proto::SceneEnvAnimalCompBin* env_animal_bin) {
  delete env_animal_bin_;
  env_animal_bin_ = env_animal_bin;
  if (env_animal_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.env_animal_bin)
}

// .proto.SceneAreaCompBin area_comp_bin = 8;
inline bool SceneBin::has_area_comp_bin() const {
  return this != internal_default_instance() && area_comp_bin_ != NULL;
}
inline void SceneBin::clear_area_comp_bin() {
  if (GetArenaNoVirtual() == NULL && area_comp_bin_ != NULL) delete area_comp_bin_;
  area_comp_bin_ = NULL;
}
inline const ::proto::SceneAreaCompBin& SceneBin::area_comp_bin() const {
  const ::proto::SceneAreaCompBin* p = area_comp_bin_;
  // @@protoc_insertion_point(field_get:proto.SceneBin.area_comp_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneAreaCompBin*>(
      &::proto::_SceneAreaCompBin_default_instance_);
}
inline ::proto::SceneAreaCompBin* SceneBin::mutable_area_comp_bin() {
  
  if (area_comp_bin_ == NULL) {
    area_comp_bin_ = new ::proto::SceneAreaCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.area_comp_bin)
  return area_comp_bin_;
}
inline ::proto::SceneAreaCompBin* SceneBin::release_area_comp_bin() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.area_comp_bin)
  
  ::proto::SceneAreaCompBin* temp = area_comp_bin_;
  area_comp_bin_ = NULL;
  return temp;
}
inline void SceneBin::set_allocated_area_comp_bin(::proto::SceneAreaCompBin* area_comp_bin) {
  delete area_comp_bin_;
  area_comp_bin_ = area_comp_bin;
  if (area_comp_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.area_comp_bin)
}

// .proto.SceneEncounterCompBin encounter_comp_bin = 9;
inline bool SceneBin::has_encounter_comp_bin() const {
  return this != internal_default_instance() && encounter_comp_bin_ != NULL;
}
inline void SceneBin::clear_encounter_comp_bin() {
  if (GetArenaNoVirtual() == NULL && encounter_comp_bin_ != NULL) delete encounter_comp_bin_;
  encounter_comp_bin_ = NULL;
}
inline const ::proto::SceneEncounterCompBin& SceneBin::encounter_comp_bin() const {
  const ::proto::SceneEncounterCompBin* p = encounter_comp_bin_;
  // @@protoc_insertion_point(field_get:proto.SceneBin.encounter_comp_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::SceneEncounterCompBin*>(
      &::proto::_SceneEncounterCompBin_default_instance_);
}
inline ::proto::SceneEncounterCompBin* SceneBin::mutable_encounter_comp_bin() {
  
  if (encounter_comp_bin_ == NULL) {
    encounter_comp_bin_ = new ::proto::SceneEncounterCompBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.encounter_comp_bin)
  return encounter_comp_bin_;
}
inline ::proto::SceneEncounterCompBin* SceneBin::release_encounter_comp_bin() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.encounter_comp_bin)
  
  ::proto::SceneEncounterCompBin* temp = encounter_comp_bin_;
  encounter_comp_bin_ = NULL;
  return temp;
}
inline void SceneBin::set_allocated_encounter_comp_bin(::proto::SceneEncounterCompBin* encounter_comp_bin) {
  delete encounter_comp_bin_;
  encounter_comp_bin_ = encounter_comp_bin;
  if (encounter_comp_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.encounter_comp_bin)
}

// uint64 last_spring_recover_time_ms = 10;
inline void SceneBin::clear_last_spring_recover_time_ms() {
  last_spring_recover_time_ms_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SceneBin::last_spring_recover_time_ms() const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.last_spring_recover_time_ms)
  return last_spring_recover_time_ms_;
}
inline void SceneBin::set_last_spring_recover_time_ms(::google::protobuf::uint64 value) {
  
  last_spring_recover_time_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneBin.last_spring_recover_time_ms)
}

// repeated uint32 group_unlimit_point_list = 11;
inline int SceneBin::group_unlimit_point_list_size() const {
  return group_unlimit_point_list_.size();
}
inline void SceneBin::clear_group_unlimit_point_list() {
  group_unlimit_point_list_.Clear();
}
inline ::google::protobuf::uint32 SceneBin::group_unlimit_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.group_unlimit_point_list)
  return group_unlimit_point_list_.Get(index);
}
inline void SceneBin::set_group_unlimit_point_list(int index, ::google::protobuf::uint32 value) {
  group_unlimit_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.group_unlimit_point_list)
}
inline void SceneBin::add_group_unlimit_point_list(::google::protobuf::uint32 value) {
  group_unlimit_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.group_unlimit_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::group_unlimit_point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.group_unlimit_point_list)
  return group_unlimit_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_group_unlimit_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.group_unlimit_point_list)
  return &group_unlimit_point_list_;
}

// repeated uint32 interacted_to_be_explored_point_list = 12;
inline int SceneBin::interacted_to_be_explored_point_list_size() const {
  return interacted_to_be_explored_point_list_.size();
}
inline void SceneBin::clear_interacted_to_be_explored_point_list() {
  interacted_to_be_explored_point_list_.Clear();
}
inline ::google::protobuf::uint32 SceneBin::interacted_to_be_explored_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.interacted_to_be_explored_point_list)
  return interacted_to_be_explored_point_list_.Get(index);
}
inline void SceneBin::set_interacted_to_be_explored_point_list(int index, ::google::protobuf::uint32 value) {
  interacted_to_be_explored_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.interacted_to_be_explored_point_list)
}
inline void SceneBin::add_interacted_to_be_explored_point_list(::google::protobuf::uint32 value) {
  interacted_to_be_explored_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.interacted_to_be_explored_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::interacted_to_be_explored_point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.interacted_to_be_explored_point_list)
  return interacted_to_be_explored_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_interacted_to_be_explored_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.interacted_to_be_explored_point_list)
  return &interacted_to_be_explored_point_list_;
}

// float cur_spring_volume = 13;
inline void SceneBin::clear_cur_spring_volume() {
  cur_spring_volume_ = 0;
}
inline float SceneBin::cur_spring_volume() const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.cur_spring_volume)
  return cur_spring_volume_;
}
inline void SceneBin::set_cur_spring_volume(float value) {
  
  cur_spring_volume_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneBin.cur_spring_volume)
}

// bool is_locked = 14;
inline void SceneBin::clear_is_locked() {
  is_locked_ = false;
}
inline bool SceneBin::is_locked() const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.is_locked)
  return is_locked_;
}
inline void SceneBin::set_is_locked(bool value) {
  
  is_locked_ = value;
  // @@protoc_insertion_point(field_set:proto.SceneBin.is_locked)
}

// repeated .proto.SceneVehicleBin vehicle_list = 15;
inline int SceneBin::vehicle_list_size() const {
  return vehicle_list_.size();
}
inline void SceneBin::clear_vehicle_list() {
  vehicle_list_.Clear();
}
inline const ::proto::SceneVehicleBin& SceneBin::vehicle_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.vehicle_list)
  return vehicle_list_.Get(index);
}
inline ::proto::SceneVehicleBin* SceneBin::mutable_vehicle_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.vehicle_list)
  return vehicle_list_.Mutable(index);
}
inline ::proto::SceneVehicleBin* SceneBin::add_vehicle_list() {
  // @@protoc_insertion_point(field_add:proto.SceneBin.vehicle_list)
  return vehicle_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneVehicleBin >*
SceneBin::mutable_vehicle_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.vehicle_list)
  return &vehicle_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneVehicleBin >&
SceneBin::vehicle_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.vehicle_list)
  return vehicle_list_;
}

// repeated .proto.SceneTagOp scene_tag_op_list = 16;
inline int SceneBin::scene_tag_op_list_size() const {
  return scene_tag_op_list_.size();
}
inline void SceneBin::clear_scene_tag_op_list() {
  scene_tag_op_list_.Clear();
}
inline const ::proto::SceneTagOp& SceneBin::scene_tag_op_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.scene_tag_op_list)
  return scene_tag_op_list_.Get(index);
}
inline ::proto::SceneTagOp* SceneBin::mutable_scene_tag_op_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.scene_tag_op_list)
  return scene_tag_op_list_.Mutable(index);
}
inline ::proto::SceneTagOp* SceneBin::add_scene_tag_op_list() {
  // @@protoc_insertion_point(field_add:proto.SceneBin.scene_tag_op_list)
  return scene_tag_op_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::SceneTagOp >*
SceneBin::mutable_scene_tag_op_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.scene_tag_op_list)
  return &scene_tag_op_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::SceneTagOp >&
SceneBin::scene_tag_op_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.scene_tag_op_list)
  return scene_tag_op_list_;
}

// repeated uint32 hide_point_list = 17;
inline int SceneBin::hide_point_list_size() const {
  return hide_point_list_.size();
}
inline void SceneBin::clear_hide_point_list() {
  hide_point_list_.Clear();
}
inline ::google::protobuf::uint32 SceneBin::hide_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.hide_point_list)
  return hide_point_list_.Get(index);
}
inline void SceneBin::set_hide_point_list(int index, ::google::protobuf::uint32 value) {
  hide_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.hide_point_list)
}
inline void SceneBin::add_hide_point_list(::google::protobuf::uint32 value) {
  hide_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.hide_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::hide_point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.hide_point_list)
  return hide_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_hide_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.hide_point_list)
  return &hide_point_list_;
}

// repeated uint32 unhide_point_list = 18;
inline int SceneBin::unhide_point_list_size() const {
  return unhide_point_list_.size();
}
inline void SceneBin::clear_unhide_point_list() {
  unhide_point_list_.Clear();
}
inline ::google::protobuf::uint32 SceneBin::unhide_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.unhide_point_list)
  return unhide_point_list_.Get(index);
}
inline void SceneBin::set_unhide_point_list(int index, ::google::protobuf::uint32 value) {
  unhide_point_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.SceneBin.unhide_point_list)
}
inline void SceneBin::add_unhide_point_list(::google::protobuf::uint32 value) {
  unhide_point_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.SceneBin.unhide_point_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SceneBin::unhide_point_list() const {
  // @@protoc_insertion_point(field_list:proto.SceneBin.unhide_point_list)
  return unhide_point_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SceneBin::mutable_unhide_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.SceneBin.unhide_point_list)
  return &unhide_point_list_;
}

// .proto.ActivitySceneBin activity_scene_bin = 101;
inline bool SceneBin::has_activity_scene_bin() const {
  return detail_case() == kActivitySceneBin;
}
inline void SceneBin::set_has_activity_scene_bin() {
  _oneof_case_[0] = kActivitySceneBin;
}
inline void SceneBin::clear_activity_scene_bin() {
  if (has_activity_scene_bin()) {
    delete detail_.activity_scene_bin_;
    clear_has_detail();
  }
}
inline  const ::proto::ActivitySceneBin& SceneBin::activity_scene_bin() const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.activity_scene_bin)
  return has_activity_scene_bin()
      ? *detail_.activity_scene_bin_
      : ::proto::ActivitySceneBin::default_instance();
}
inline ::proto::ActivitySceneBin* SceneBin::mutable_activity_scene_bin() {
  if (!has_activity_scene_bin()) {
    clear_detail();
    set_has_activity_scene_bin();
    detail_.activity_scene_bin_ = new ::proto::ActivitySceneBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.activity_scene_bin)
  return detail_.activity_scene_bin_;
}
inline ::proto::ActivitySceneBin* SceneBin::release_activity_scene_bin() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.activity_scene_bin)
  if (has_activity_scene_bin()) {
    clear_has_detail();
    ::proto::ActivitySceneBin* temp = detail_.activity_scene_bin_;
    detail_.activity_scene_bin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneBin::set_allocated_activity_scene_bin(::proto::ActivitySceneBin* activity_scene_bin) {
  clear_detail();
  if (activity_scene_bin) {
    set_has_activity_scene_bin();
    detail_.activity_scene_bin_ = activity_scene_bin;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.activity_scene_bin)
}

// .proto.DungeonSceneBin dungeon_scene_bin = 102;
inline bool SceneBin::has_dungeon_scene_bin() const {
  return detail_case() == kDungeonSceneBin;
}
inline void SceneBin::set_has_dungeon_scene_bin() {
  _oneof_case_[0] = kDungeonSceneBin;
}
inline void SceneBin::clear_dungeon_scene_bin() {
  if (has_dungeon_scene_bin()) {
    delete detail_.dungeon_scene_bin_;
    clear_has_detail();
  }
}
inline  const ::proto::DungeonSceneBin& SceneBin::dungeon_scene_bin() const {
  // @@protoc_insertion_point(field_get:proto.SceneBin.dungeon_scene_bin)
  return has_dungeon_scene_bin()
      ? *detail_.dungeon_scene_bin_
      : ::proto::DungeonSceneBin::default_instance();
}
inline ::proto::DungeonSceneBin* SceneBin::mutable_dungeon_scene_bin() {
  if (!has_dungeon_scene_bin()) {
    clear_detail();
    set_has_dungeon_scene_bin();
    detail_.dungeon_scene_bin_ = new ::proto::DungeonSceneBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.SceneBin.dungeon_scene_bin)
  return detail_.dungeon_scene_bin_;
}
inline ::proto::DungeonSceneBin* SceneBin::release_dungeon_scene_bin() {
  // @@protoc_insertion_point(field_release:proto.SceneBin.dungeon_scene_bin)
  if (has_dungeon_scene_bin()) {
    clear_has_detail();
    ::proto::DungeonSceneBin* temp = detail_.dungeon_scene_bin_;
    detail_.dungeon_scene_bin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void SceneBin::set_allocated_dungeon_scene_bin(::proto::DungeonSceneBin* dungeon_scene_bin) {
  clear_detail();
  if (dungeon_scene_bin) {
    set_has_dungeon_scene_bin();
    detail_.dungeon_scene_bin_ = dungeon_scene_bin;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.SceneBin.dungeon_scene_bin)
}

inline bool SceneBin::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void SceneBin::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline SceneBin::DetailCase SceneBin::detail_case() const {
  return SceneBin::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GCGSettleData

// uint32 app_id = 1;
inline void GCGSettleData::clear_app_id() {
  app_id_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleData::app_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.app_id)
  return app_id_;
}
inline void GCGSettleData::set_app_id(::google::protobuf::uint32 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.app_id)
}

// uint32 thread_index = 2;
inline void GCGSettleData::clear_thread_index() {
  thread_index_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleData::thread_index() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.thread_index)
  return thread_index_;
}
inline void GCGSettleData::set_thread_index(::google::protobuf::uint32 value) {
  
  thread_index_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.thread_index)
}

// uint32 game_id = 3;
inline void GCGSettleData::clear_game_id() {
  game_id_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleData::game_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.game_id)
  return game_id_;
}
inline void GCGSettleData::set_game_id(::google::protobuf::uint32 value) {
  
  game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.game_id)
}

// uint32 game_uid = 4;
inline void GCGSettleData::clear_game_uid() {
  game_uid_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleData::game_uid() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.game_uid)
  return game_uid_;
}
inline void GCGSettleData::set_game_uid(::google::protobuf::uint32 value) {
  
  game_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.game_uid)
}

// uint32 verify_code = 5;
inline void GCGSettleData::clear_verify_code() {
  verify_code_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleData::verify_code() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.verify_code)
  return verify_code_;
}
inline void GCGSettleData::set_verify_code(::google::protobuf::uint32 value) {
  
  verify_code_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.verify_code)
}

// uint32 reason = 6;
inline void GCGSettleData::clear_reason() {
  reason_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleData::reason() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.reason)
  return reason_;
}
inline void GCGSettleData::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.reason)
}

// uint32 business_type = 7;
inline void GCGSettleData::clear_business_type() {
  business_type_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleData::business_type() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.business_type)
  return business_type_;
}
inline void GCGSettleData::set_business_type(::google::protobuf::uint32 value) {
  
  business_type_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.business_type)
}

// map<uint32, uint32> uid_map = 8;
inline int GCGSettleData::uid_map_size() const {
  return uid_map_.size();
}
inline void GCGSettleData::clear_uid_map() {
  uid_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GCGSettleData::uid_map() const {
  // @@protoc_insertion_point(field_map:proto.GCGSettleData.uid_map)
  return uid_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GCGSettleData::mutable_uid_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GCGSettleData.uid_map)
  return uid_map_.MutableMap();
}

// uint32 winner_controller = 9;
inline void GCGSettleData::clear_winner_controller() {
  winner_controller_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleData::winner_controller() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.winner_controller)
  return winner_controller_;
}
inline void GCGSettleData::set_winner_controller(::google::protobuf::uint32 value) {
  
  winner_controller_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.winner_controller)
}

// map<uint32, uint32> challenge_progress_map = 10;
inline int GCGSettleData::challenge_progress_map_size() const {
  return challenge_progress_map_.size();
}
inline void GCGSettleData::clear_challenge_progress_map() {
  challenge_progress_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GCGSettleData::challenge_progress_map() const {
  // @@protoc_insertion_point(field_map:proto.GCGSettleData.challenge_progress_map)
  return challenge_progress_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GCGSettleData::mutable_challenge_progress_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GCGSettleData.challenge_progress_map)
  return challenge_progress_map_.MutableMap();
}

// repeated uint32 card_id_list = 11;
inline int GCGSettleData::card_id_list_size() const {
  return card_id_list_.size();
}
inline void GCGSettleData::clear_card_id_list() {
  card_id_list_.Clear();
}
inline ::google::protobuf::uint32 GCGSettleData::card_id_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.card_id_list)
  return card_id_list_.Get(index);
}
inline void GCGSettleData::set_card_id_list(int index, ::google::protobuf::uint32 value) {
  card_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.card_id_list)
}
inline void GCGSettleData::add_card_id_list(::google::protobuf::uint32 value) {
  card_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GCGSettleData.card_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GCGSettleData::card_id_list() const {
  // @@protoc_insertion_point(field_list:proto.GCGSettleData.card_id_list)
  return card_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GCGSettleData::mutable_card_id_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GCGSettleData.card_id_list)
  return &card_id_list_;
}

// uint32 card_group_id = 12;
inline void GCGSettleData::clear_card_group_id() {
  card_group_id_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleData::card_group_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.card_group_id)
  return card_group_id_;
}
inline void GCGSettleData::set_card_group_id(::google::protobuf::uint32 value) {
  
  card_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.card_group_id)
}

// map<uint32, uint32> score_map = 13;
inline int GCGSettleData::score_map_size() const {
  return score_map_.size();
}
inline void GCGSettleData::clear_score_map() {
  score_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GCGSettleData::score_map() const {
  // @@protoc_insertion_point(field_map:proto.GCGSettleData.score_map)
  return score_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GCGSettleData::mutable_score_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GCGSettleData.score_map)
  return score_map_.MutableMap();
}

// uint32 match_id = 14;
inline void GCGSettleData::clear_match_id() {
  match_id_ = 0u;
}
inline ::google::protobuf::uint32 GCGSettleData::match_id() const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.match_id)
  return match_id_;
}
inline void GCGSettleData::set_match_id(::google::protobuf::uint32 value) {
  
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.match_id)
}

// repeated uint32 custom_param_list = 15;
inline int GCGSettleData::custom_param_list_size() const {
  return custom_param_list_.size();
}
inline void GCGSettleData::clear_custom_param_list() {
  custom_param_list_.Clear();
}
inline ::google::protobuf::uint32 GCGSettleData::custom_param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.custom_param_list)
  return custom_param_list_.Get(index);
}
inline void GCGSettleData::set_custom_param_list(int index, ::google::protobuf::uint32 value) {
  custom_param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.custom_param_list)
}
inline void GCGSettleData::add_custom_param_list(::google::protobuf::uint32 value) {
  custom_param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GCGSettleData.custom_param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GCGSettleData::custom_param_list() const {
  // @@protoc_insertion_point(field_list:proto.GCGSettleData.custom_param_list)
  return custom_param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GCGSettleData::mutable_custom_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GCGSettleData.custom_param_list)
  return &custom_param_list_;
}

// repeated uint32 forbid_finish_challenge_list = 16;
inline int GCGSettleData::forbid_finish_challenge_list_size() const {
  return forbid_finish_challenge_list_.size();
}
inline void GCGSettleData::clear_forbid_finish_challenge_list() {
  forbid_finish_challenge_list_.Clear();
}
inline ::google::protobuf::uint32 GCGSettleData::forbid_finish_challenge_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GCGSettleData.forbid_finish_challenge_list)
  return forbid_finish_challenge_list_.Get(index);
}
inline void GCGSettleData::set_forbid_finish_challenge_list(int index, ::google::protobuf::uint32 value) {
  forbid_finish_challenge_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GCGSettleData.forbid_finish_challenge_list)
}
inline void GCGSettleData::add_forbid_finish_challenge_list(::google::protobuf::uint32 value) {
  forbid_finish_challenge_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GCGSettleData.forbid_finish_challenge_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GCGSettleData::forbid_finish_challenge_list() const {
  // @@protoc_insertion_point(field_list:proto.GCGSettleData.forbid_finish_challenge_list)
  return forbid_finish_challenge_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GCGSettleData::mutable_forbid_finish_challenge_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GCGSettleData.forbid_finish_challenge_list)
  return &forbid_finish_challenge_list_;
}

// -------------------------------------------------------------------

// OfflineOpTestOp

// string msg = 1;
inline void OfflineOpTestOp::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineOpTestOp::msg() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpTestOp.msg)
  return msg_.GetNoArena();
}
inline void OfflineOpTestOp::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OfflineOpTestOp.msg)
}
#if LANG_CXX11
inline void OfflineOpTestOp::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OfflineOpTestOp.msg)
}
#endif
inline void OfflineOpTestOp::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OfflineOpTestOp.msg)
}
inline void OfflineOpTestOp::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OfflineOpTestOp.msg)
}
inline ::std::string* OfflineOpTestOp::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpTestOp.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineOpTestOp::release_msg() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpTestOp.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineOpTestOp::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpTestOp.msg)
}

// -------------------------------------------------------------------

// OfflineOpFurnitureMakeHelp

// string player_name = 1;
inline void OfflineOpFurnitureMakeHelp::clear_player_name() {
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineOpFurnitureMakeHelp::player_name() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpFurnitureMakeHelp.player_name)
  return player_name_.GetNoArena();
}
inline void OfflineOpFurnitureMakeHelp::set_player_name(const ::std::string& value) {
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.OfflineOpFurnitureMakeHelp.player_name)
}
#if LANG_CXX11
inline void OfflineOpFurnitureMakeHelp::set_player_name(::std::string&& value) {
  
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.OfflineOpFurnitureMakeHelp.player_name)
}
#endif
inline void OfflineOpFurnitureMakeHelp::set_player_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.OfflineOpFurnitureMakeHelp.player_name)
}
inline void OfflineOpFurnitureMakeHelp::set_player_name(const char* value, size_t size) {
  
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.OfflineOpFurnitureMakeHelp.player_name)
}
inline ::std::string* OfflineOpFurnitureMakeHelp::mutable_player_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpFurnitureMakeHelp.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineOpFurnitureMakeHelp::release_player_name() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpFurnitureMakeHelp.player_name)
  
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineOpFurnitureMakeHelp::set_allocated_player_name(::std::string* player_name) {
  if (player_name != NULL) {
    
  } else {
    
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpFurnitureMakeHelp.player_name)
}

// fixed32 time = 2;
inline void OfflineOpFurnitureMakeHelp::clear_time() {
  time_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpFurnitureMakeHelp::time() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpFurnitureMakeHelp.time)
  return time_;
}
inline void OfflineOpFurnitureMakeHelp::set_time(::google::protobuf::uint32 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpFurnitureMakeHelp.time)
}

// uint32 uid = 3;
inline void OfflineOpFurnitureMakeHelp::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpFurnitureMakeHelp::uid() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpFurnitureMakeHelp.uid)
  return uid_;
}
inline void OfflineOpFurnitureMakeHelp::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpFurnitureMakeHelp.uid)
}

// uint32 icon = 4;
inline void OfflineOpFurnitureMakeHelp::clear_icon() {
  icon_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpFurnitureMakeHelp::icon() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpFurnitureMakeHelp.icon)
  return icon_;
}
inline void OfflineOpFurnitureMakeHelp::set_icon(::google::protobuf::uint32 value) {
  
  icon_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpFurnitureMakeHelp.icon)
}

// .proto.ProfilePictureBin profile_picture_bin = 5;
inline bool OfflineOpFurnitureMakeHelp::has_profile_picture_bin() const {
  return this != internal_default_instance() && profile_picture_bin_ != NULL;
}
inline void OfflineOpFurnitureMakeHelp::clear_profile_picture_bin() {
  if (GetArenaNoVirtual() == NULL && profile_picture_bin_ != NULL) delete profile_picture_bin_;
  profile_picture_bin_ = NULL;
}
inline const ::proto::ProfilePictureBin& OfflineOpFurnitureMakeHelp::profile_picture_bin() const {
  const ::proto::ProfilePictureBin* p = profile_picture_bin_;
  // @@protoc_insertion_point(field_get:proto.OfflineOpFurnitureMakeHelp.profile_picture_bin)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePictureBin*>(
      &::proto::_ProfilePictureBin_default_instance_);
}
inline ::proto::ProfilePictureBin* OfflineOpFurnitureMakeHelp::mutable_profile_picture_bin() {
  
  if (profile_picture_bin_ == NULL) {
    profile_picture_bin_ = new ::proto::ProfilePictureBin;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpFurnitureMakeHelp.profile_picture_bin)
  return profile_picture_bin_;
}
inline ::proto::ProfilePictureBin* OfflineOpFurnitureMakeHelp::release_profile_picture_bin() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpFurnitureMakeHelp.profile_picture_bin)
  
  ::proto::ProfilePictureBin* temp = profile_picture_bin_;
  profile_picture_bin_ = NULL;
  return temp;
}
inline void OfflineOpFurnitureMakeHelp::set_allocated_profile_picture_bin(::proto::ProfilePictureBin* profile_picture_bin) {
  delete profile_picture_bin_;
  profile_picture_bin_ = profile_picture_bin;
  if (profile_picture_bin) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpFurnitureMakeHelp.profile_picture_bin)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OfflineOpPlantFlowerActivityGiveFlower

// uint32 uid = 1;
inline void OfflineOpPlantFlowerActivityGiveFlower::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpPlantFlowerActivityGiveFlower::uid() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpPlantFlowerActivityGiveFlower.uid)
  return uid_;
}
inline void OfflineOpPlantFlowerActivityGiveFlower::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpPlantFlowerActivityGiveFlower.uid)
}

// map<uint32, uint32> flower_num_map = 2;
inline int OfflineOpPlantFlowerActivityGiveFlower::flower_num_map_size() const {
  return flower_num_map_.size();
}
inline void OfflineOpPlantFlowerActivityGiveFlower::clear_flower_num_map() {
  flower_num_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OfflineOpPlantFlowerActivityGiveFlower::flower_num_map() const {
  // @@protoc_insertion_point(field_map:proto.OfflineOpPlantFlowerActivityGiveFlower.flower_num_map)
  return flower_num_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OfflineOpPlantFlowerActivityGiveFlower::mutable_flower_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OfflineOpPlantFlowerActivityGiveFlower.flower_num_map)
  return flower_num_map_.MutableMap();
}

// uint32 schedule_id = 3;
inline void OfflineOpPlantFlowerActivityGiveFlower::clear_schedule_id() {
  schedule_id_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpPlantFlowerActivityGiveFlower::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpPlantFlowerActivityGiveFlower.schedule_id)
  return schedule_id_;
}
inline void OfflineOpPlantFlowerActivityGiveFlower::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpPlantFlowerActivityGiveFlower.schedule_id)
}

// -------------------------------------------------------------------

// OfflineOpWinterCampActivityGiveItem

// uint32 uid = 1;
inline void OfflineOpWinterCampActivityGiveItem::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpWinterCampActivityGiveItem::uid() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpWinterCampActivityGiveItem.uid)
  return uid_;
}
inline void OfflineOpWinterCampActivityGiveItem::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpWinterCampActivityGiveItem.uid)
}

// repeated .proto.ItemParamBin item_bin_list = 2;
inline int OfflineOpWinterCampActivityGiveItem::item_bin_list_size() const {
  return item_bin_list_.size();
}
inline void OfflineOpWinterCampActivityGiveItem::clear_item_bin_list() {
  item_bin_list_.Clear();
}
inline const ::proto::ItemParamBin& OfflineOpWinterCampActivityGiveItem::item_bin_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpWinterCampActivityGiveItem.item_bin_list)
  return item_bin_list_.Get(index);
}
inline ::proto::ItemParamBin* OfflineOpWinterCampActivityGiveItem::mutable_item_bin_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpWinterCampActivityGiveItem.item_bin_list)
  return item_bin_list_.Mutable(index);
}
inline ::proto::ItemParamBin* OfflineOpWinterCampActivityGiveItem::add_item_bin_list() {
  // @@protoc_insertion_point(field_add:proto.OfflineOpWinterCampActivityGiveItem.item_bin_list)
  return item_bin_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin >*
OfflineOpWinterCampActivityGiveItem::mutable_item_bin_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.OfflineOpWinterCampActivityGiveItem.item_bin_list)
  return &item_bin_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::ItemParamBin >&
OfflineOpWinterCampActivityGiveItem::item_bin_list() const {
  // @@protoc_insertion_point(field_list:proto.OfflineOpWinterCampActivityGiveItem.item_bin_list)
  return item_bin_list_;
}

// uint32 schedule_id = 3;
inline void OfflineOpWinterCampActivityGiveItem::clear_schedule_id() {
  schedule_id_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpWinterCampActivityGiveItem::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpWinterCampActivityGiveItem.schedule_id)
  return schedule_id_;
}
inline void OfflineOpWinterCampActivityGiveItem::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpWinterCampActivityGiveItem.schedule_id)
}

// -------------------------------------------------------------------

// OfflineOpGCGSettle

// .proto.GCGSettleData settle_data = 1;
inline bool OfflineOpGCGSettle::has_settle_data() const {
  return this != internal_default_instance() && settle_data_ != NULL;
}
inline void OfflineOpGCGSettle::clear_settle_data() {
  if (GetArenaNoVirtual() == NULL && settle_data_ != NULL) delete settle_data_;
  settle_data_ = NULL;
}
inline const ::proto::GCGSettleData& OfflineOpGCGSettle::settle_data() const {
  const ::proto::GCGSettleData* p = settle_data_;
  // @@protoc_insertion_point(field_get:proto.OfflineOpGCGSettle.settle_data)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GCGSettleData*>(
      &::proto::_GCGSettleData_default_instance_);
}
inline ::proto::GCGSettleData* OfflineOpGCGSettle::mutable_settle_data() {
  
  if (settle_data_ == NULL) {
    settle_data_ = new ::proto::GCGSettleData;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpGCGSettle.settle_data)
  return settle_data_;
}
inline ::proto::GCGSettleData* OfflineOpGCGSettle::release_settle_data() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpGCGSettle.settle_data)
  
  ::proto::GCGSettleData* temp = settle_data_;
  settle_data_ = NULL;
  return temp;
}
inline void OfflineOpGCGSettle::set_allocated_settle_data(::proto::GCGSettleData* settle_data) {
  delete settle_data_;
  settle_data_ = settle_data;
  if (settle_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpGCGSettle.settle_data)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OfflineOpActivityGiveGift

// uint32 uid = 1;
inline void OfflineOpActivityGiveGift::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpActivityGiveGift::uid() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpActivityGiveGift.uid)
  return uid_;
}
inline void OfflineOpActivityGiveGift::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpActivityGiveGift.uid)
}

// map<uint32, uint32> gift_num_map = 2;
inline int OfflineOpActivityGiveGift::gift_num_map_size() const {
  return gift_num_map_.size();
}
inline void OfflineOpActivityGiveGift::clear_gift_num_map() {
  gift_num_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OfflineOpActivityGiveGift::gift_num_map() const {
  // @@protoc_insertion_point(field_map:proto.OfflineOpActivityGiveGift.gift_num_map)
  return gift_num_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OfflineOpActivityGiveGift::mutable_gift_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OfflineOpActivityGiveGift.gift_num_map)
  return gift_num_map_.MutableMap();
}

// uint32 schedule_id = 3;
inline void OfflineOpActivityGiveGift::clear_schedule_id() {
  schedule_id_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpActivityGiveGift::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpActivityGiveGift.schedule_id)
  return schedule_id_;
}
inline void OfflineOpActivityGiveGift::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpActivityGiveGift.schedule_id)
}

// -------------------------------------------------------------------

// OfflineOpVintageActivityDividend

// uint32 uid = 1;
inline void OfflineOpVintageActivityDividend::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpVintageActivityDividend::uid() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpVintageActivityDividend.uid)
  return uid_;
}
inline void OfflineOpVintageActivityDividend::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpVintageActivityDividend.uid)
}

// uint32 schedule_id = 2;
inline void OfflineOpVintageActivityDividend::clear_schedule_id() {
  schedule_id_ = 0u;
}
inline ::google::protobuf::uint32 OfflineOpVintageActivityDividend::schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpVintageActivityDividend.schedule_id)
  return schedule_id_;
}
inline void OfflineOpVintageActivityDividend::set_schedule_id(::google::protobuf::uint32 value) {
  
  schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.OfflineOpVintageActivityDividend.schedule_id)
}

// -------------------------------------------------------------------

// OfflineOpBin

// .proto.OfflineOpTestOp test_op = 1;
inline bool OfflineOpBin::has_test_op() const {
  return detail_case() == kTestOp;
}
inline void OfflineOpBin::set_has_test_op() {
  _oneof_case_[0] = kTestOp;
}
inline void OfflineOpBin::clear_test_op() {
  if (has_test_op()) {
    delete detail_.test_op_;
    clear_has_detail();
  }
}
inline  const ::proto::OfflineOpTestOp& OfflineOpBin::test_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.test_op)
  return has_test_op()
      ? *detail_.test_op_
      : ::proto::OfflineOpTestOp::default_instance();
}
inline ::proto::OfflineOpTestOp* OfflineOpBin::mutable_test_op() {
  if (!has_test_op()) {
    clear_detail();
    set_has_test_op();
    detail_.test_op_ = new ::proto::OfflineOpTestOp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.test_op)
  return detail_.test_op_;
}
inline ::proto::OfflineOpTestOp* OfflineOpBin::release_test_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.test_op)
  if (has_test_op()) {
    clear_has_detail();
    ::proto::OfflineOpTestOp* temp = detail_.test_op_;
    detail_.test_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineOpBin::set_allocated_test_op(::proto::OfflineOpTestOp* test_op) {
  clear_detail();
  if (test_op) {
    set_has_test_op();
    detail_.test_op_ = test_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.test_op)
}

// .proto.OfflineOpFurnitureMakeHelp furniture_make_help_op = 2;
inline bool OfflineOpBin::has_furniture_make_help_op() const {
  return detail_case() == kFurnitureMakeHelpOp;
}
inline void OfflineOpBin::set_has_furniture_make_help_op() {
  _oneof_case_[0] = kFurnitureMakeHelpOp;
}
inline void OfflineOpBin::clear_furniture_make_help_op() {
  if (has_furniture_make_help_op()) {
    delete detail_.furniture_make_help_op_;
    clear_has_detail();
  }
}
inline  const ::proto::OfflineOpFurnitureMakeHelp& OfflineOpBin::furniture_make_help_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.furniture_make_help_op)
  return has_furniture_make_help_op()
      ? *detail_.furniture_make_help_op_
      : ::proto::OfflineOpFurnitureMakeHelp::default_instance();
}
inline ::proto::OfflineOpFurnitureMakeHelp* OfflineOpBin::mutable_furniture_make_help_op() {
  if (!has_furniture_make_help_op()) {
    clear_detail();
    set_has_furniture_make_help_op();
    detail_.furniture_make_help_op_ = new ::proto::OfflineOpFurnitureMakeHelp;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.furniture_make_help_op)
  return detail_.furniture_make_help_op_;
}
inline ::proto::OfflineOpFurnitureMakeHelp* OfflineOpBin::release_furniture_make_help_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.furniture_make_help_op)
  if (has_furniture_make_help_op()) {
    clear_has_detail();
    ::proto::OfflineOpFurnitureMakeHelp* temp = detail_.furniture_make_help_op_;
    detail_.furniture_make_help_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineOpBin::set_allocated_furniture_make_help_op(::proto::OfflineOpFurnitureMakeHelp* furniture_make_help_op) {
  clear_detail();
  if (furniture_make_help_op) {
    set_has_furniture_make_help_op();
    detail_.furniture_make_help_op_ = furniture_make_help_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.furniture_make_help_op)
}

// .proto.OfflineOpPlantFlowerActivityGiveFlower plant_flower_give_flower_op = 3;
inline bool OfflineOpBin::has_plant_flower_give_flower_op() const {
  return detail_case() == kPlantFlowerGiveFlowerOp;
}
inline void OfflineOpBin::set_has_plant_flower_give_flower_op() {
  _oneof_case_[0] = kPlantFlowerGiveFlowerOp;
}
inline void OfflineOpBin::clear_plant_flower_give_flower_op() {
  if (has_plant_flower_give_flower_op()) {
    delete detail_.plant_flower_give_flower_op_;
    clear_has_detail();
  }
}
inline  const ::proto::OfflineOpPlantFlowerActivityGiveFlower& OfflineOpBin::plant_flower_give_flower_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.plant_flower_give_flower_op)
  return has_plant_flower_give_flower_op()
      ? *detail_.plant_flower_give_flower_op_
      : ::proto::OfflineOpPlantFlowerActivityGiveFlower::default_instance();
}
inline ::proto::OfflineOpPlantFlowerActivityGiveFlower* OfflineOpBin::mutable_plant_flower_give_flower_op() {
  if (!has_plant_flower_give_flower_op()) {
    clear_detail();
    set_has_plant_flower_give_flower_op();
    detail_.plant_flower_give_flower_op_ = new ::proto::OfflineOpPlantFlowerActivityGiveFlower;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.plant_flower_give_flower_op)
  return detail_.plant_flower_give_flower_op_;
}
inline ::proto::OfflineOpPlantFlowerActivityGiveFlower* OfflineOpBin::release_plant_flower_give_flower_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.plant_flower_give_flower_op)
  if (has_plant_flower_give_flower_op()) {
    clear_has_detail();
    ::proto::OfflineOpPlantFlowerActivityGiveFlower* temp = detail_.plant_flower_give_flower_op_;
    detail_.plant_flower_give_flower_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineOpBin::set_allocated_plant_flower_give_flower_op(::proto::OfflineOpPlantFlowerActivityGiveFlower* plant_flower_give_flower_op) {
  clear_detail();
  if (plant_flower_give_flower_op) {
    set_has_plant_flower_give_flower_op();
    detail_.plant_flower_give_flower_op_ = plant_flower_give_flower_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.plant_flower_give_flower_op)
}

// .proto.OfflineOpWinterCampActivityGiveItem winter_camp_give_item_op = 4;
inline bool OfflineOpBin::has_winter_camp_give_item_op() const {
  return detail_case() == kWinterCampGiveItemOp;
}
inline void OfflineOpBin::set_has_winter_camp_give_item_op() {
  _oneof_case_[0] = kWinterCampGiveItemOp;
}
inline void OfflineOpBin::clear_winter_camp_give_item_op() {
  if (has_winter_camp_give_item_op()) {
    delete detail_.winter_camp_give_item_op_;
    clear_has_detail();
  }
}
inline  const ::proto::OfflineOpWinterCampActivityGiveItem& OfflineOpBin::winter_camp_give_item_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.winter_camp_give_item_op)
  return has_winter_camp_give_item_op()
      ? *detail_.winter_camp_give_item_op_
      : ::proto::OfflineOpWinterCampActivityGiveItem::default_instance();
}
inline ::proto::OfflineOpWinterCampActivityGiveItem* OfflineOpBin::mutable_winter_camp_give_item_op() {
  if (!has_winter_camp_give_item_op()) {
    clear_detail();
    set_has_winter_camp_give_item_op();
    detail_.winter_camp_give_item_op_ = new ::proto::OfflineOpWinterCampActivityGiveItem;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.winter_camp_give_item_op)
  return detail_.winter_camp_give_item_op_;
}
inline ::proto::OfflineOpWinterCampActivityGiveItem* OfflineOpBin::release_winter_camp_give_item_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.winter_camp_give_item_op)
  if (has_winter_camp_give_item_op()) {
    clear_has_detail();
    ::proto::OfflineOpWinterCampActivityGiveItem* temp = detail_.winter_camp_give_item_op_;
    detail_.winter_camp_give_item_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineOpBin::set_allocated_winter_camp_give_item_op(::proto::OfflineOpWinterCampActivityGiveItem* winter_camp_give_item_op) {
  clear_detail();
  if (winter_camp_give_item_op) {
    set_has_winter_camp_give_item_op();
    detail_.winter_camp_give_item_op_ = winter_camp_give_item_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.winter_camp_give_item_op)
}

// .proto.OfflineOpActivityGiveGift activity_give_gift_op = 5;
inline bool OfflineOpBin::has_activity_give_gift_op() const {
  return detail_case() == kActivityGiveGiftOp;
}
inline void OfflineOpBin::set_has_activity_give_gift_op() {
  _oneof_case_[0] = kActivityGiveGiftOp;
}
inline void OfflineOpBin::clear_activity_give_gift_op() {
  if (has_activity_give_gift_op()) {
    delete detail_.activity_give_gift_op_;
    clear_has_detail();
  }
}
inline  const ::proto::OfflineOpActivityGiveGift& OfflineOpBin::activity_give_gift_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.activity_give_gift_op)
  return has_activity_give_gift_op()
      ? *detail_.activity_give_gift_op_
      : ::proto::OfflineOpActivityGiveGift::default_instance();
}
inline ::proto::OfflineOpActivityGiveGift* OfflineOpBin::mutable_activity_give_gift_op() {
  if (!has_activity_give_gift_op()) {
    clear_detail();
    set_has_activity_give_gift_op();
    detail_.activity_give_gift_op_ = new ::proto::OfflineOpActivityGiveGift;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.activity_give_gift_op)
  return detail_.activity_give_gift_op_;
}
inline ::proto::OfflineOpActivityGiveGift* OfflineOpBin::release_activity_give_gift_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.activity_give_gift_op)
  if (has_activity_give_gift_op()) {
    clear_has_detail();
    ::proto::OfflineOpActivityGiveGift* temp = detail_.activity_give_gift_op_;
    detail_.activity_give_gift_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineOpBin::set_allocated_activity_give_gift_op(::proto::OfflineOpActivityGiveGift* activity_give_gift_op) {
  clear_detail();
  if (activity_give_gift_op) {
    set_has_activity_give_gift_op();
    detail_.activity_give_gift_op_ = activity_give_gift_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.activity_give_gift_op)
}

// .proto.OfflineOpVintageActivityDividend vintage_dividend_op = 6;
inline bool OfflineOpBin::has_vintage_dividend_op() const {
  return detail_case() == kVintageDividendOp;
}
inline void OfflineOpBin::set_has_vintage_dividend_op() {
  _oneof_case_[0] = kVintageDividendOp;
}
inline void OfflineOpBin::clear_vintage_dividend_op() {
  if (has_vintage_dividend_op()) {
    delete detail_.vintage_dividend_op_;
    clear_has_detail();
  }
}
inline  const ::proto::OfflineOpVintageActivityDividend& OfflineOpBin::vintage_dividend_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.vintage_dividend_op)
  return has_vintage_dividend_op()
      ? *detail_.vintage_dividend_op_
      : ::proto::OfflineOpVintageActivityDividend::default_instance();
}
inline ::proto::OfflineOpVintageActivityDividend* OfflineOpBin::mutable_vintage_dividend_op() {
  if (!has_vintage_dividend_op()) {
    clear_detail();
    set_has_vintage_dividend_op();
    detail_.vintage_dividend_op_ = new ::proto::OfflineOpVintageActivityDividend;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.vintage_dividend_op)
  return detail_.vintage_dividend_op_;
}
inline ::proto::OfflineOpVintageActivityDividend* OfflineOpBin::release_vintage_dividend_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.vintage_dividend_op)
  if (has_vintage_dividend_op()) {
    clear_has_detail();
    ::proto::OfflineOpVintageActivityDividend* temp = detail_.vintage_dividend_op_;
    detail_.vintage_dividend_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineOpBin::set_allocated_vintage_dividend_op(::proto::OfflineOpVintageActivityDividend* vintage_dividend_op) {
  clear_detail();
  if (vintage_dividend_op) {
    set_has_vintage_dividend_op();
    detail_.vintage_dividend_op_ = vintage_dividend_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.vintage_dividend_op)
}

// .proto.OfflineOpGCGSettle gcg_settle_op = 7;
inline bool OfflineOpBin::has_gcg_settle_op() const {
  return detail_case() == kGcgSettleOp;
}
inline void OfflineOpBin::set_has_gcg_settle_op() {
  _oneof_case_[0] = kGcgSettleOp;
}
inline void OfflineOpBin::clear_gcg_settle_op() {
  if (has_gcg_settle_op()) {
    delete detail_.gcg_settle_op_;
    clear_has_detail();
  }
}
inline  const ::proto::OfflineOpGCGSettle& OfflineOpBin::gcg_settle_op() const {
  // @@protoc_insertion_point(field_get:proto.OfflineOpBin.gcg_settle_op)
  return has_gcg_settle_op()
      ? *detail_.gcg_settle_op_
      : ::proto::OfflineOpGCGSettle::default_instance();
}
inline ::proto::OfflineOpGCGSettle* OfflineOpBin::mutable_gcg_settle_op() {
  if (!has_gcg_settle_op()) {
    clear_detail();
    set_has_gcg_settle_op();
    detail_.gcg_settle_op_ = new ::proto::OfflineOpGCGSettle;
  }
  // @@protoc_insertion_point(field_mutable:proto.OfflineOpBin.gcg_settle_op)
  return detail_.gcg_settle_op_;
}
inline ::proto::OfflineOpGCGSettle* OfflineOpBin::release_gcg_settle_op() {
  // @@protoc_insertion_point(field_release:proto.OfflineOpBin.gcg_settle_op)
  if (has_gcg_settle_op()) {
    clear_has_detail();
    ::proto::OfflineOpGCGSettle* temp = detail_.gcg_settle_op_;
    detail_.gcg_settle_op_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void OfflineOpBin::set_allocated_gcg_settle_op(::proto::OfflineOpGCGSettle* gcg_settle_op) {
  clear_detail();
  if (gcg_settle_op) {
    set_has_gcg_settle_op();
    detail_.gcg_settle_op_ = gcg_settle_op;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.OfflineOpBin.gcg_settle_op)
}

inline bool OfflineOpBin::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void OfflineOpBin::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline OfflineOpBin::DetailCase OfflineOpBin::detail_case() const {
  return OfflineOpBin::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// FurnitureMakeSlotsBin

// uint32 make_id = 1;
inline void FurnitureMakeSlotsBin::clear_make_id() {
  make_id_ = 0u;
}
inline ::google::protobuf::uint32 FurnitureMakeSlotsBin::make_id() const {
  // @@protoc_insertion_point(field_get:proto.FurnitureMakeSlotsBin.make_id)
  return make_id_;
}
inline void FurnitureMakeSlotsBin::set_make_id(::google::protobuf::uint32 value) {
  
  make_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FurnitureMakeSlotsBin.make_id)
}

// fixed32 begin_time = 2;
inline void FurnitureMakeSlotsBin::clear_begin_time() {
  begin_time_ = 0u;
}
inline ::google::protobuf::uint32 FurnitureMakeSlotsBin::begin_time() const {
  // @@protoc_insertion_point(field_get:proto.FurnitureMakeSlotsBin.begin_time)
  return begin_time_;
}
inline void FurnitureMakeSlotsBin::set_begin_time(::google::protobuf::uint32 value) {
  
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FurnitureMakeSlotsBin.begin_time)
}

// uint32 dur_time = 3;
inline void FurnitureMakeSlotsBin::clear_dur_time() {
  dur_time_ = 0u;
}
inline ::google::protobuf::uint32 FurnitureMakeSlotsBin::dur_time() const {
  // @@protoc_insertion_point(field_get:proto.FurnitureMakeSlotsBin.dur_time)
  return dur_time_;
}
inline void FurnitureMakeSlotsBin::set_dur_time(::google::protobuf::uint32 value) {
  
  dur_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FurnitureMakeSlotsBin.dur_time)
}

// fixed32 accelerate_time = 4;
inline void FurnitureMakeSlotsBin::clear_accelerate_time() {
  accelerate_time_ = 0u;
}
inline ::google::protobuf::uint32 FurnitureMakeSlotsBin::accelerate_time() const {
  // @@protoc_insertion_point(field_get:proto.FurnitureMakeSlotsBin.accelerate_time)
  return accelerate_time_;
}
inline void FurnitureMakeSlotsBin::set_accelerate_time(::google::protobuf::uint32 value) {
  
  accelerate_time_ = value;
  // @@protoc_insertion_point(field_set:proto.FurnitureMakeSlotsBin.accelerate_time)
}

// uint32 accelerate_count = 6;
inline void FurnitureMakeSlotsBin::clear_accelerate_count() {
  accelerate_count_ = 0u;
}
inline ::google::protobuf::uint32 FurnitureMakeSlotsBin::accelerate_count() const {
  // @@protoc_insertion_point(field_get:proto.FurnitureMakeSlotsBin.accelerate_count)
  return accelerate_count_;
}
inline void FurnitureMakeSlotsBin::set_accelerate_count(::google::protobuf::uint32 value) {
  
  accelerate_count_ = value;
  // @@protoc_insertion_point(field_set:proto.FurnitureMakeSlotsBin.accelerate_count)
}

// uint32 avatar_id = 7;
inline void FurnitureMakeSlotsBin::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 FurnitureMakeSlotsBin::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.FurnitureMakeSlotsBin.avatar_id)
  return avatar_id_;
}
inline void FurnitureMakeSlotsBin::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.FurnitureMakeSlotsBin.avatar_id)
}

// -------------------------------------------------------------------

// ProfilePictureBin

// uint32 avatar_id = 1;
inline void ProfilePictureBin::clear_avatar_id() {
  avatar_id_ = 0u;
}
inline ::google::protobuf::uint32 ProfilePictureBin::avatar_id() const {
  // @@protoc_insertion_point(field_get:proto.ProfilePictureBin.avatar_id)
  return avatar_id_;
}
inline void ProfilePictureBin::set_avatar_id(::google::protobuf::uint32 value) {
  
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ProfilePictureBin.avatar_id)
}

// uint32 costume_id = 2;
inline void ProfilePictureBin::clear_costume_id() {
  costume_id_ = 0u;
}
inline ::google::protobuf::uint32 ProfilePictureBin::costume_id() const {
  // @@protoc_insertion_point(field_get:proto.ProfilePictureBin.costume_id)
  return costume_id_;
}
inline void ProfilePictureBin::set_costume_id(::google::protobuf::uint32 value) {
  
  costume_id_ = value;
  // @@protoc_insertion_point(field_set:proto.ProfilePictureBin.costume_id)
}

// -------------------------------------------------------------------

// CustomDungeonSettingBin

// bool is_arrive_finish = 1;
inline void CustomDungeonSettingBin::clear_is_arrive_finish() {
  is_arrive_finish_ = false;
}
inline bool CustomDungeonSettingBin::is_arrive_finish() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.is_arrive_finish)
  return is_arrive_finish_;
}
inline void CustomDungeonSettingBin::set_is_arrive_finish(bool value) {
  
  is_arrive_finish_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.is_arrive_finish)
}

// uint32 coin_limit = 2;
inline void CustomDungeonSettingBin::clear_coin_limit() {
  coin_limit_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonSettingBin::coin_limit() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.coin_limit)
  return coin_limit_;
}
inline void CustomDungeonSettingBin::set_coin_limit(::google::protobuf::uint32 value) {
  
  coin_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.coin_limit)
}

// uint32 time_limit = 3;
inline void CustomDungeonSettingBin::clear_time_limit() {
  time_limit_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonSettingBin::time_limit() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.time_limit)
  return time_limit_;
}
inline void CustomDungeonSettingBin::set_time_limit(::google::protobuf::uint32 value) {
  
  time_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.time_limit)
}

// bool is_forbid_skill = 4;
inline void CustomDungeonSettingBin::clear_is_forbid_skill() {
  is_forbid_skill_ = false;
}
inline bool CustomDungeonSettingBin::is_forbid_skill() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.is_forbid_skill)
  return is_forbid_skill_;
}
inline void CustomDungeonSettingBin::set_is_forbid_skill(bool value) {
  
  is_forbid_skill_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.is_forbid_skill)
}

// repeated uint32 open_room_list = 5;
inline int CustomDungeonSettingBin::open_room_list_size() const {
  return open_room_list_.size();
}
inline void CustomDungeonSettingBin::clear_open_room_list() {
  open_room_list_.Clear();
}
inline ::google::protobuf::uint32 CustomDungeonSettingBin::open_room_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.open_room_list)
  return open_room_list_.Get(index);
}
inline void CustomDungeonSettingBin::set_open_room_list(int index, ::google::protobuf::uint32 value) {
  open_room_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.open_room_list)
}
inline void CustomDungeonSettingBin::add_open_room_list(::google::protobuf::uint32 value) {
  open_room_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CustomDungeonSettingBin.open_room_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CustomDungeonSettingBin::open_room_list() const {
  // @@protoc_insertion_point(field_list:proto.CustomDungeonSettingBin.open_room_list)
  return open_room_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CustomDungeonSettingBin::mutable_open_room_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CustomDungeonSettingBin.open_room_list)
  return &open_room_list_;
}

// uint32 start_room_id = 6;
inline void CustomDungeonSettingBin::clear_start_room_id() {
  start_room_id_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonSettingBin::start_room_id() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.start_room_id)
  return start_room_id_;
}
inline void CustomDungeonSettingBin::set_start_room_id(::google::protobuf::uint32 value) {
  
  start_room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.start_room_id)
}

// uint32 life_num = 7;
inline void CustomDungeonSettingBin::clear_life_num() {
  life_num_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonSettingBin::life_num() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonSettingBin.life_num)
  return life_num_;
}
inline void CustomDungeonSettingBin::set_life_num(::google::protobuf::uint32 value) {
  
  life_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonSettingBin.life_num)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CustomDungeonAbstractBin

// uint32 finish_room_id = 1;
inline void CustomDungeonAbstractBin::clear_finish_room_id() {
  finish_room_id_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonAbstractBin::finish_room_id() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonAbstractBin.finish_room_id)
  return finish_room_id_;
}
inline void CustomDungeonAbstractBin::set_finish_room_id(::google::protobuf::uint32 value) {
  
  finish_room_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonAbstractBin.finish_room_id)
}

// uint32 total_coin_num = 2;
inline void CustomDungeonAbstractBin::clear_total_coin_num() {
  total_coin_num_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonAbstractBin::total_coin_num() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonAbstractBin.total_coin_num)
  return total_coin_num_;
}
inline void CustomDungeonAbstractBin::set_total_coin_num(::google::protobuf::uint32 value) {
  
  total_coin_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonAbstractBin.total_coin_num)
}

// uint32 first_publish_time = 3;
inline void CustomDungeonAbstractBin::clear_first_publish_time() {
  first_publish_time_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonAbstractBin::first_publish_time() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonAbstractBin.first_publish_time)
  return first_publish_time_;
}
inline void CustomDungeonAbstractBin::set_first_publish_time(::google::protobuf::uint32 value) {
  
  first_publish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonAbstractBin.first_publish_time)
}

// uint32 last_publish_time = 4;
inline void CustomDungeonAbstractBin::clear_last_publish_time() {
  last_publish_time_ = 0u;
}
inline ::google::protobuf::uint32 CustomDungeonAbstractBin::last_publish_time() const {
  // @@protoc_insertion_point(field_get:proto.CustomDungeonAbstractBin.last_publish_time)
  return last_publish_time_;
}
inline void CustomDungeonAbstractBin::set_last_publish_time(::google::protobuf::uint32 value) {
  
  last_publish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CustomDungeonAbstractBin.last_publish_time)
}

// map<uint32, uint32> brick_statistics_map = 5;
inline int CustomDungeonAbstractBin::brick_statistics_map_size() const {
  return brick_statistics_map_.size();
}
inline void CustomDungeonAbstractBin::clear_brick_statistics_map() {
  brick_statistics_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
CustomDungeonAbstractBin::brick_statistics_map() const {
  // @@protoc_insertion_point(field_map:proto.CustomDungeonAbstractBin.brick_statistics_map)
  return brick_statistics_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
CustomDungeonAbstractBin::mutable_brick_statistics_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.CustomDungeonAbstractBin.brick_statistics_map)
  return brick_statistics_map_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::GroupBinOperation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GroupBinOperation>() {
  return ::proto::GroupBinOperation_descriptor();
}
template <> struct is_proto_enum< ::proto::GroupLinkOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::GroupLinkOpType>() {
  return ::proto::GroupLinkOpType_descriptor();
}
template <> struct is_proto_enum< ::proto::SceneTagOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::SceneTagOpType>() {
  return ::proto::SceneTagOpType_descriptor();
}
template <> struct is_proto_enum< ::proto::OfflineOpType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::OfflineOpType>() {
  return ::proto::OfflineOpType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fonly_2fbin_5fcommon_2eserver_2eproto__INCLUDED
