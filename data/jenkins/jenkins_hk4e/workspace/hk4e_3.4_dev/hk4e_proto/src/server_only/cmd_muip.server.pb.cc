// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_muip.server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_only/cmd_muip.server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class OnlinePlayerNumReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OnlinePlayerNumReq>
     _instance;
} _OnlinePlayerNumReq_default_instance_;
class OnlinePlayerNumRsp_GameserverPlayerNumMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OnlinePlayerNumRsp::OnlinePlayerNumRsp_GameserverPlayerNumMapEntry>
     _instance;
} _OnlinePlayerNumRsp_GameserverPlayerNumMapEntry_default_instance_;
class OnlinePlayerNumRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OnlinePlayerNumRsp>
     _instance;
} _OnlinePlayerNumRsp_default_instance_;
class KickoutPlayerNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<KickoutPlayerNotify>
     _instance;
} _KickoutPlayerNotify_default_instance_;
class CheckOnlinePlayerReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckOnlinePlayerReq>
     _instance;
} _CheckOnlinePlayerReq_default_instance_;
class CheckOnlinePlayerRsp_NodeStatusDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckOnlinePlayerRsp_NodeStatus>
     _instance;
} _CheckOnlinePlayerRsp_NodeStatus_default_instance_;
class CheckOnlinePlayerRsp_GameStatusDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckOnlinePlayerRsp_GameStatus>
     _instance;
} _CheckOnlinePlayerRsp_GameStatus_default_instance_;
class CheckOnlinePlayerRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckOnlinePlayerRsp>
     _instance;
} _CheckOnlinePlayerRsp_default_instance_;
class PlayerCombatForceReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCombatForceReq>
     _instance;
} _PlayerCombatForceReq_default_instance_;
class PlayerCombatForceRsp_PlayerCombatForceMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCombatForceRsp::PlayerCombatForceRsp_PlayerCombatForceMapEntry>
     _instance;
} _PlayerCombatForceRsp_PlayerCombatForceMapEntry_default_instance_;
class PlayerCombatForceRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerCombatForceRsp>
     _instance;
} _PlayerCombatForceRsp_default_instance_;
class CheckGameVersionReq_ResVersionMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckGameVersionReq::CheckGameVersionReq_ResVersionMapEntry>
     _instance;
} _CheckGameVersionReq_ResVersionMapEntry_default_instance_;
class CheckGameVersionReq_NextResVersionMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckGameVersionReq::CheckGameVersionReq_NextResVersionMapEntry>
     _instance;
} _CheckGameVersionReq_NextResVersionMapEntry_default_instance_;
class CheckGameVersionReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckGameVersionReq>
     _instance;
} _CheckGameVersionReq_default_instance_;
class GameVersionResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameVersionResult>
     _instance;
} _GameVersionResult_default_instance_;
class CheckGameVersionRsp_ResVersionResultMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckGameVersionRsp::CheckGameVersionRsp_ResVersionResultMapEntry>
     _instance;
} _CheckGameVersionRsp_ResVersionResultMapEntry_default_instance_;
class CheckGameVersionRsp_NextResVersionResultMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckGameVersionRsp::CheckGameVersionRsp_NextResVersionResultMapEntry>
     _instance;
} _CheckGameVersionRsp_NextResVersionResultMapEntry_default_instance_;
class CheckGameVersionRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckGameVersionRsp>
     _instance;
} _CheckGameVersionRsp_default_instance_;
class PlatformPlayerNumReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlatformPlayerNumReq>
     _instance;
} _PlatformPlayerNumReq_default_instance_;
class PlatformPlayerNumRsp_PlatformPlayerNumMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlatformPlayerNumRsp::PlatformPlayerNumRsp_PlatformPlayerNumMapEntry>
     _instance;
} _PlatformPlayerNumRsp_PlatformPlayerNumMapEntry_default_instance_;
class PlatformPlayerNumRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlatformPlayerNumRsp>
     _instance;
} _PlatformPlayerNumRsp_default_instance_;
class PlayerMemBasicDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerMemBasicData>
     _instance;
} _PlayerMemBasicData_default_instance_;
class PlayerMemH5AcitivityWatcherDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerMemH5AcitivityWatcherData>
     _instance;
} _PlayerMemH5AcitivityWatcherData_default_instance_;
class PlayerMemH5ActivityDataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerMemH5ActivityData>
     _instance;
} _PlayerMemH5ActivityData_default_instance_;
class PlayerMemH5ActivityDataResult_RetcodeMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerMemH5ActivityDataResult::PlayerMemH5ActivityDataResult_RetcodeMapEntry>
     _instance;
} _PlayerMemH5ActivityDataResult_RetcodeMapEntry_default_instance_;
class PlayerMemH5ActivityDataResultDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerMemH5ActivityDataResult>
     _instance;
} _PlayerMemH5ActivityDataResult_default_instance_;
class QueryPlayerMemDataByMuipReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QueryPlayerMemDataByMuipReq>
     _instance;
} _QueryPlayerMemDataByMuipReq_default_instance_;
class QueryPlayerMemDataByMuipRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QueryPlayerMemDataByMuipRsp>
     _instance;
  const ::proto::PlayerMemBasicData* basic_data_;
  const ::proto::PlayerMemH5ActivityDataResult* h5_activity_data_result_;
} _QueryPlayerMemDataByMuipRsp_default_instance_;
class BindGmUidNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BindGmUidNotify>
     _instance;
} _BindGmUidNotify_default_instance_;
class UnbindGmUidNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UnbindGmUidNotify>
     _instance;
} _UnbindGmUidNotify_default_instance_;
class GetBindGmUidReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetBindGmUidReq>
     _instance;
} _GetBindGmUidReq_default_instance_;
class GetBindGmUidRsp_GmUidMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetBindGmUidRsp::GetBindGmUidRsp_GmUidMapEntry>
     _instance;
} _GetBindGmUidRsp_GmUidMapEntry_default_instance_;
class GetBindGmUidRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetBindGmUidRsp>
     _instance;
} _GetBindGmUidRsp_default_instance_;
class PlatformAntiAddictNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlatformAntiAddictNotify>
     _instance;
} _PlatformAntiAddictNotify_default_instance_;
class PlayerLoginPerSecondReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginPerSecondReq>
     _instance;
} _PlayerLoginPerSecondReq_default_instance_;
class PlayerLoginPerSecondRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginPerSecondRsp>
     _instance;
} _PlayerLoginPerSecondRsp_default_instance_;
class FineGrainedPlayerNumReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FineGrainedPlayerNumReq>
     _instance;
} _FineGrainedPlayerNumReq_default_instance_;
class FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FineGrainedPlayerNumRsp::FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry>
     _instance;
} _FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry_default_instance_;
class FineGrainedPlayerNumRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<FineGrainedPlayerNumRsp>
     _instance;
} _FineGrainedPlayerNumRsp_default_instance_;
class CheckGameCrcVersionReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckGameCrcVersionReq>
     _instance;
} _CheckGameCrcVersionReq_default_instance_;
class CheckGameCrcVersionRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<CheckGameCrcVersionRsp>
     _instance;
} _CheckGameCrcVersionRsp_default_instance_;
class UpdateRedPointByMuipNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateRedPointByMuipNotify>
     _instance;
} _UpdateRedPointByMuipNotify_default_instance_;
class SendConcertProductReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SendConcertProductReq>
     _instance;
} _SendConcertProductReq_default_instance_;
class SendConcertProductRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<SendConcertProductRsp>
     _instance;
} _SendConcertProductRsp_default_instance_;
class QueryConcertProductInfoReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QueryConcertProductInfoReq>
     _instance;
} _QueryConcertProductInfoReq_default_instance_;
class QueryConcertProductInfoRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<QueryConcertProductInfoRsp>
     _instance;
} _QueryConcertProductInfoRsp_default_instance_;
class PlayerMpModeReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerMpModeReq>
     _instance;
} _PlayerMpModeReq_default_instance_;
class PlayerMpModeRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PlayerMpModeRsp>
     _instance;
} _PlayerMpModeRsp_default_instance_;

namespace protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[48];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerNumReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerNumRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerNumRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerNumRsp, online_player_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerNumRsp, gameserver_player_num_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlinePlayerNumRsp, online_player_num_except_sub_account_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickoutPlayerNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KickoutPlayerNotify, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerReq, gameserver_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerReq, ns_gameserver_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerRsp_NodeStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerRsp_NodeStatus, gameserver_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerRsp_NodeStatus, nodeserver_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerRsp_GameStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerRsp_GameStatus, gameserver_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerRsp_GameStatus, login_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerRsp_GameStatus, login_rand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerRsp_GameStatus, is_wait_save_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerRsp, node_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckOnlinePlayerRsp, game_status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCombatForceReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCombatForceRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCombatForceRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCombatForceRsp, player_combat_force_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCombatForceRsp, player_combat_force_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionReq, server_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionReq, client_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionReq, client_silence_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionReq, res_version_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionReq, next_res_version_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameVersionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameVersionResult, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameVersionResult, wrong_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameVersionResult, wrong_name_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionRsp, total_game_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionRsp, server_version_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionRsp, client_version_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionRsp, client_silence_version_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionRsp, res_version_result_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameVersionRsp, next_res_version_result_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformPlayerNumReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformPlayerNumRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformPlayerNumRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformPlayerNumRsp, online_player_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformPlayerNumRsp, platform_player_num_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemBasicData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemBasicData, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemBasicData, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemBasicData, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemBasicData, scoin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemBasicData, hcoin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemBasicData, last_login_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemBasicData, profile_picture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemBasicData, register_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemBasicData, gender_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5AcitivityWatcherData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5AcitivityWatcherData, h5_activity_watcher_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5AcitivityWatcherData, progress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5ActivityData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5ActivityData, h5_schedule_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5ActivityData, h5_activity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5ActivityData, last_refresh_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5ActivityData, finished_h5_activity_watcher_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5ActivityData, unaccept_h5_activity_watcher_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5ActivityData, h5_activity_watcher_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5ActivityDataResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5ActivityDataResult, retcode_map_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMemH5ActivityDataResult, h5_activity_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerMemDataByMuipReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerMemDataByMuipReq, data_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerMemDataByMuipReq, param_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerMemDataByMuipRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerMemDataByMuipRsp, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerMemDataByMuipRsp, retcode_),
  offsetof(QueryPlayerMemDataByMuipRspDefaultTypeInternal, basic_data_),
  offsetof(QueryPlayerMemDataByMuipRspDefaultTypeInternal, h5_activity_data_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryPlayerMemDataByMuipRsp, detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindGmUidNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindGmUidNotify, gm_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindGmUidNotify, player_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnbindGmUidNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnbindGmUidNotify, gm_uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindGmUidReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindGmUidRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindGmUidRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetBindGmUidRsp, gm_uid_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformAntiAddictNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformAntiAddictNotify, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformAntiAddictNotify, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformAntiAddictNotify, level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginPerSecondReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginPerSecondRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginPerSecondRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerLoginPerSecondRsp, player_login_per_second_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FineGrainedPlayerNumReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FineGrainedPlayerNumRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FineGrainedPlayerNumRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FineGrainedPlayerNumRsp, online_player_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FineGrainedPlayerNumRsp, fine_grained_player_num_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameCrcVersionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameCrcVersionReq, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameCrcVersionReq, client_version_str_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameCrcVersionRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameCrcVersionRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameCrcVersionRsp, total_game_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameCrcVersionRsp, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameCrcVersionRsp, client_version_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameCrcVersionRsp, wrong_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckGameCrcVersionRsp, wrong_name_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRedPointByMuipNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRedPointByMuipNotify, red_point_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendConcertProductReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendConcertProductReq, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendConcertProductReq, config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendConcertProductRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendConcertProductRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendConcertProductRsp, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendConcertProductRsp, config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConcertProductInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConcertProductInfoReq, config_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConcertProductInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConcertProductInfoRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConcertProductInfoRsp, config_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConcertProductInfoRsp, obtain_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QueryConcertProductInfoRsp, obtain_limit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMpModeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMpModeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMpModeRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerMpModeRsp, is_mp_mode_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(OnlinePlayerNumReq)},
  { 5, -1, sizeof(OnlinePlayerNumRsp)},
  { 14, -1, sizeof(KickoutPlayerNotify)},
  { 20, -1, sizeof(CheckOnlinePlayerReq)},
  { 27, -1, sizeof(CheckOnlinePlayerRsp_NodeStatus)},
  { 34, -1, sizeof(CheckOnlinePlayerRsp_GameStatus)},
  { 43, -1, sizeof(CheckOnlinePlayerRsp)},
  { 51, -1, sizeof(PlayerCombatForceReq)},
  { 56, -1, sizeof(PlayerCombatForceRsp)},
  { 64, -1, sizeof(CheckGameVersionReq)},
  { 74, -1, sizeof(GameVersionResult)},
  { 82, -1, sizeof(CheckGameVersionRsp)},
  { 94, -1, sizeof(PlatformPlayerNumReq)},
  { 99, -1, sizeof(PlatformPlayerNumRsp)},
  { 107, -1, sizeof(PlayerMemBasicData)},
  { 121, -1, sizeof(PlayerMemH5AcitivityWatcherData)},
  { 128, -1, sizeof(PlayerMemH5ActivityData)},
  { 139, -1, sizeof(PlayerMemH5ActivityDataResult)},
  { 146, -1, sizeof(QueryPlayerMemDataByMuipReq)},
  { 153, -1, sizeof(QueryPlayerMemDataByMuipRsp)},
  { 162, -1, sizeof(BindGmUidNotify)},
  { 169, -1, sizeof(UnbindGmUidNotify)},
  { 175, -1, sizeof(GetBindGmUidReq)},
  { 180, -1, sizeof(GetBindGmUidRsp)},
  { 187, -1, sizeof(PlatformAntiAddictNotify)},
  { 195, -1, sizeof(PlayerLoginPerSecondReq)},
  { 200, -1, sizeof(PlayerLoginPerSecondRsp)},
  { 207, -1, sizeof(FineGrainedPlayerNumReq)},
  { 212, -1, sizeof(FineGrainedPlayerNumRsp)},
  { 220, -1, sizeof(CheckGameCrcVersionReq)},
  { 227, -1, sizeof(CheckGameCrcVersionRsp)},
  { 238, -1, sizeof(UpdateRedPointByMuipNotify)},
  { 244, -1, sizeof(SendConcertProductReq)},
  { 251, -1, sizeof(SendConcertProductRsp)},
  { 259, -1, sizeof(QueryConcertProductInfoReq)},
  { 265, -1, sizeof(QueryConcertProductInfoRsp)},
  { 274, -1, sizeof(PlayerMpModeReq)},
  { 279, -1, sizeof(PlayerMpModeRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnlinePlayerNumReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnlinePlayerNumRsp_GameserverPlayerNumMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnlinePlayerNumRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KickoutPlayerNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckOnlinePlayerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckOnlinePlayerRsp_NodeStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckOnlinePlayerRsp_GameStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckOnlinePlayerRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCombatForceReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCombatForceRsp_PlayerCombatForceMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerCombatForceRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckGameVersionReq_ResVersionMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckGameVersionReq_NextResVersionMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckGameVersionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameVersionResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckGameVersionRsp_ResVersionResultMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckGameVersionRsp_NextResVersionResultMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckGameVersionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlatformPlayerNumReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlatformPlayerNumRsp_PlatformPlayerNumMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlatformPlayerNumRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerMemBasicData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerMemH5AcitivityWatcherData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerMemH5ActivityData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerMemH5ActivityDataResult_RetcodeMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerMemH5ActivityDataResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryPlayerMemDataByMuipReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryPlayerMemDataByMuipRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BindGmUidNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnbindGmUidNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBindGmUidReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBindGmUidRsp_GmUidMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetBindGmUidRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlatformAntiAddictNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLoginPerSecondReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerLoginPerSecondRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FineGrainedPlayerNumReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FineGrainedPlayerNumRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckGameCrcVersionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckGameCrcVersionRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateRedPointByMuipNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendConcertProductReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendConcertProductRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryConcertProductInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QueryConcertProductInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerMpModeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerMpModeRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "server_only/cmd_muip.server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[1].reflection = OnlinePlayerNumRsp::OnlinePlayerNumRsp_GameserverPlayerNumMapEntry::CreateReflection(file_level_metadata[1].descriptor, _OnlinePlayerNumRsp_GameserverPlayerNumMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[9].reflection = PlayerCombatForceRsp::PlayerCombatForceRsp_PlayerCombatForceMapEntry::CreateReflection(file_level_metadata[9].descriptor, _PlayerCombatForceRsp_PlayerCombatForceMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[11].reflection = CheckGameVersionReq::CheckGameVersionReq_ResVersionMapEntry::CreateReflection(file_level_metadata[11].descriptor, _CheckGameVersionReq_ResVersionMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[12].reflection = CheckGameVersionReq::CheckGameVersionReq_NextResVersionMapEntry::CreateReflection(file_level_metadata[12].descriptor, _CheckGameVersionReq_NextResVersionMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[15].reflection = CheckGameVersionRsp::CheckGameVersionRsp_ResVersionResultMapEntry::CreateReflection(file_level_metadata[15].descriptor, _CheckGameVersionRsp_ResVersionResultMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[16].reflection = CheckGameVersionRsp::CheckGameVersionRsp_NextResVersionResultMapEntry::CreateReflection(file_level_metadata[16].descriptor, _CheckGameVersionRsp_NextResVersionResultMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[19].reflection = PlatformPlayerNumRsp::PlatformPlayerNumRsp_PlatformPlayerNumMapEntry::CreateReflection(file_level_metadata[19].descriptor, _PlatformPlayerNumRsp_PlatformPlayerNumMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[24].reflection = PlayerMemH5ActivityDataResult::PlayerMemH5ActivityDataResult_RetcodeMapEntry::CreateReflection(file_level_metadata[24].descriptor, _PlayerMemH5ActivityDataResult_RetcodeMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[31].reflection = GetBindGmUidRsp::GetBindGmUidRsp_GmUidMapEntry::CreateReflection(file_level_metadata[31].descriptor, _GetBindGmUidRsp_GmUidMapEntry_default_instance_._instance.get_mutable());
file_level_metadata[37].reflection = FineGrainedPlayerNumRsp::FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry::CreateReflection(file_level_metadata[37].descriptor, _FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 48);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::protobuf_define_2eproto::InitDefaults();
  _OnlinePlayerNumReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OnlinePlayerNumReq_default_instance_);_OnlinePlayerNumRsp_GameserverPlayerNumMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OnlinePlayerNumRsp_GameserverPlayerNumMapEntry_default_instance_);_OnlinePlayerNumRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OnlinePlayerNumRsp_default_instance_);_KickoutPlayerNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_KickoutPlayerNotify_default_instance_);_CheckOnlinePlayerReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckOnlinePlayerReq_default_instance_);_CheckOnlinePlayerRsp_NodeStatus_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckOnlinePlayerRsp_NodeStatus_default_instance_);_CheckOnlinePlayerRsp_GameStatus_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckOnlinePlayerRsp_GameStatus_default_instance_);_CheckOnlinePlayerRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckOnlinePlayerRsp_default_instance_);_PlayerCombatForceReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCombatForceReq_default_instance_);_PlayerCombatForceRsp_PlayerCombatForceMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCombatForceRsp_PlayerCombatForceMapEntry_default_instance_);_PlayerCombatForceRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerCombatForceRsp_default_instance_);_CheckGameVersionReq_ResVersionMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckGameVersionReq_ResVersionMapEntry_default_instance_);_CheckGameVersionReq_NextResVersionMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckGameVersionReq_NextResVersionMapEntry_default_instance_);_CheckGameVersionReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckGameVersionReq_default_instance_);_GameVersionResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameVersionResult_default_instance_);_CheckGameVersionRsp_ResVersionResultMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckGameVersionRsp_ResVersionResultMapEntry_default_instance_);_CheckGameVersionRsp_NextResVersionResultMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckGameVersionRsp_NextResVersionResultMapEntry_default_instance_);_CheckGameVersionRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckGameVersionRsp_default_instance_);_PlatformPlayerNumReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlatformPlayerNumReq_default_instance_);_PlatformPlayerNumRsp_PlatformPlayerNumMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlatformPlayerNumRsp_PlatformPlayerNumMapEntry_default_instance_);_PlatformPlayerNumRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlatformPlayerNumRsp_default_instance_);_PlayerMemBasicData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerMemBasicData_default_instance_);_PlayerMemH5AcitivityWatcherData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerMemH5AcitivityWatcherData_default_instance_);_PlayerMemH5ActivityData_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerMemH5ActivityData_default_instance_);_PlayerMemH5ActivityDataResult_RetcodeMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerMemH5ActivityDataResult_RetcodeMapEntry_default_instance_);_PlayerMemH5ActivityDataResult_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerMemH5ActivityDataResult_default_instance_);_QueryPlayerMemDataByMuipReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QueryPlayerMemDataByMuipReq_default_instance_);_QueryPlayerMemDataByMuipRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QueryPlayerMemDataByMuipRsp_default_instance_);_BindGmUidNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BindGmUidNotify_default_instance_);_UnbindGmUidNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UnbindGmUidNotify_default_instance_);_GetBindGmUidReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetBindGmUidReq_default_instance_);_GetBindGmUidRsp_GmUidMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetBindGmUidRsp_GmUidMapEntry_default_instance_);_GetBindGmUidRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetBindGmUidRsp_default_instance_);_PlatformAntiAddictNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlatformAntiAddictNotify_default_instance_);_PlayerLoginPerSecondReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLoginPerSecondReq_default_instance_);_PlayerLoginPerSecondRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerLoginPerSecondRsp_default_instance_);_FineGrainedPlayerNumReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FineGrainedPlayerNumReq_default_instance_);_FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry_default_instance_);_FineGrainedPlayerNumRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_FineGrainedPlayerNumRsp_default_instance_);_CheckGameCrcVersionReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckGameCrcVersionReq_default_instance_);_CheckGameCrcVersionRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_CheckGameCrcVersionRsp_default_instance_);_UpdateRedPointByMuipNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateRedPointByMuipNotify_default_instance_);_SendConcertProductReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SendConcertProductReq_default_instance_);_SendConcertProductRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_SendConcertProductRsp_default_instance_);_QueryConcertProductInfoReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QueryConcertProductInfoReq_default_instance_);_QueryConcertProductInfoRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_QueryConcertProductInfoRsp_default_instance_);_PlayerMpModeReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerMpModeReq_default_instance_);_PlayerMpModeRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PlayerMpModeRsp_default_instance_);_OnlinePlayerNumRsp_GameserverPlayerNumMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_OnlinePlayerNumRsp_GameserverPlayerNumMapEntry_default_instance_._instance.get_mutable());
  _OnlinePlayerNumRsp_GameserverPlayerNumMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _CheckOnlinePlayerRsp_default_instance_._instance.get_mutable()->node_status_ = const_cast< ::proto::CheckOnlinePlayerRsp_NodeStatus*>(
      ::proto::CheckOnlinePlayerRsp_NodeStatus::internal_default_instance());
  _CheckOnlinePlayerRsp_default_instance_._instance.get_mutable()->game_status_ = const_cast< ::proto::CheckOnlinePlayerRsp_GameStatus*>(
      ::proto::CheckOnlinePlayerRsp_GameStatus::internal_default_instance());
  _PlayerCombatForceRsp_PlayerCombatForceMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_PlayerCombatForceRsp_PlayerCombatForceMapEntry_default_instance_._instance.get_mutable());
  _PlayerCombatForceRsp_PlayerCombatForceMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _CheckGameVersionReq_ResVersionMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_CheckGameVersionReq_ResVersionMapEntry_default_instance_._instance.get_mutable());
  _CheckGameVersionReq_ResVersionMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _CheckGameVersionReq_NextResVersionMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_CheckGameVersionReq_NextResVersionMapEntry_default_instance_._instance.get_mutable());
  _CheckGameVersionReq_NextResVersionMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _CheckGameVersionRsp_ResVersionResultMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_CheckGameVersionRsp_ResVersionResultMapEntry_default_instance_._instance.get_mutable());
  _CheckGameVersionRsp_ResVersionResultMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _CheckGameVersionRsp_NextResVersionResultMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_CheckGameVersionRsp_NextResVersionResultMapEntry_default_instance_._instance.get_mutable());
  _CheckGameVersionRsp_NextResVersionResultMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _CheckGameVersionRsp_default_instance_._instance.get_mutable()->server_version_result_ = const_cast< ::proto::GameVersionResult*>(
      ::proto::GameVersionResult::internal_default_instance());
  _CheckGameVersionRsp_default_instance_._instance.get_mutable()->client_version_result_ = const_cast< ::proto::GameVersionResult*>(
      ::proto::GameVersionResult::internal_default_instance());
  _CheckGameVersionRsp_default_instance_._instance.get_mutable()->client_silence_version_result_ = const_cast< ::proto::GameVersionResult*>(
      ::proto::GameVersionResult::internal_default_instance());
  _PlatformPlayerNumRsp_PlatformPlayerNumMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_PlatformPlayerNumRsp_PlatformPlayerNumMapEntry_default_instance_._instance.get_mutable());
  _PlatformPlayerNumRsp_PlatformPlayerNumMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _PlayerMemBasicData_default_instance_._instance.get_mutable()->profile_picture_ = const_cast< ::proto::ProfilePicture*>(
      ::proto::ProfilePicture::internal_default_instance());
  _PlayerMemH5ActivityDataResult_RetcodeMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_PlayerMemH5ActivityDataResult_RetcodeMapEntry_default_instance_._instance.get_mutable());
  _PlayerMemH5ActivityDataResult_RetcodeMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _QueryPlayerMemDataByMuipRsp_default_instance_.basic_data_ = const_cast< ::proto::PlayerMemBasicData*>(
      ::proto::PlayerMemBasicData::internal_default_instance());
  _QueryPlayerMemDataByMuipRsp_default_instance_.h5_activity_data_result_ = const_cast< ::proto::PlayerMemH5ActivityDataResult*>(
      ::proto::PlayerMemH5ActivityDataResult::internal_default_instance());
  _GetBindGmUidRsp_GmUidMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_GetBindGmUidRsp_GmUidMapEntry_default_instance_._instance.get_mutable());
  _GetBindGmUidRsp_GmUidMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
  _FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry_default_instance_._instance.get_mutable()->set_default_instance(_FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry_default_instance_._instance.get_mutable());
  _FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n!server_only/cmd_muip.server.proto\022\005pro"
      "to\032\014define.proto\"\024\n\022OnlinePlayerNumReq\"\207"
      "\002\n\022OnlinePlayerNumRsp\022\017\n\007retcode\030\001 \001(\005\022\031"
      "\n\021online_player_num\030\002 \001(\r\022X\n\031gameserver_"
      "player_num_map\030\003 \003(\01325.proto.OnlinePlaye"
      "rNumRsp.GameserverPlayerNumMapEntry\022,\n$o"
      "nline_player_num_except_sub_account\030\004 \001("
      "\r\032=\n\033GameserverPlayerNumMapEntry\022\013\n\003key\030"
      "\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"%\n\023KickoutPlaye"
      "rNotify\022\016\n\006reason\030\001 \001(\r\"G\n\024CheckOnlinePl"
      "ayerReq\022\025\n\rgameserver_id\030\001 \001(\r\022\030\n\020ns_gam"
      "eserver_id\030\002 \001(\r\"\300\002\n\024CheckOnlinePlayerRs"
      "p\022\017\n\007retcode\030\001 \001(\005\022;\n\013node_status\030\002 \001(\0132"
      "&.proto.CheckOnlinePlayerRsp.NodeStatus\022"
      ";\n\013game_status\030\003 \001(\0132&.proto.CheckOnline"
      "PlayerRsp.GameStatus\032:\n\nNodeStatus\022\025\n\rga"
      "meserver_id\030\001 \001(\r\022\025\n\rnodeserver_id\030\002 \001(\r"
      "\032a\n\nGameStatus\022\025\n\rgameserver_id\030\001 \001(\r\022\022\n"
      "\nlogin_time\030\002 \001(\r\022\022\n\nlogin_rand\030\003 \001(\004\022\024\n"
      "\014is_wait_save\030\004 \001(\010\"\026\n\024PlayerCombatForce"
      "Req\"\331\001\n\024PlayerCombatForceRsp\022\017\n\007retcode\030"
      "\001 \001(\005\022\033\n\023player_combat_force\030\002 \001(\002\022V\n\027pl"
      "ayer_combat_force_map\030\003 \003(\01325.proto.Play"
      "erCombatForceRsp.PlayerCombatForceMapEnt"
      "ry\032;\n\031PlayerCombatForceMapEntry\022\013\n\003key\030\001"
      " \001(\r\022\r\n\005value\030\002 \001(\002:\0028\001\"\356\002\n\023CheckGameVer"
      "sionReq\022\026\n\016server_version\030\001 \001(\r\022\026\n\016clien"
      "t_version\030\002 \001(\r\022\036\n\026client_silence_versio"
      "n\030\003 \001(\r\022F\n\017res_version_map\030\004 \003(\0132-.proto"
      ".CheckGameVersionReq.ResVersionMapEntry\022"
      "O\n\024next_res_version_map\030\005 \003(\01321.proto.Ch"
      "eckGameVersionReq.NextResVersionMapEntry"
      "\0324\n\022ResVersionMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005v"
      "alue\030\002 \001(\r:\0028\001\0328\n\026NextResVersionMapEntry"
      "\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"P\n\021Game"
      "VersionResult\022\017\n\007version\030\001 \001(\r\022\021\n\twrong_"
      "num\030\002 \001(\r\022\027\n\017wrong_name_list\030\003 \003(\r\"\320\004\n\023C"
      "heckGameVersionRsp\022\017\n\007retcode\030\001 \001(\005\022\022\n\nt"
      "otal_game\030\002 \001(\r\0227\n\025server_version_result"
      "\030\003 \001(\0132\030.proto.GameVersionResult\0227\n\025clie"
      "nt_version_result\030\004 \001(\0132\030.proto.GameVers"
      "ionResult\022\?\n\035client_silence_version_resu"
      "lt\030\005 \001(\0132\030.proto.GameVersionResult\022S\n\026re"
      "s_version_result_map\030\006 \003(\01323.proto.Check"
      "GameVersionRsp.ResVersionResultMapEntry\022"
      "\\\n\033next_res_version_result_map\030\007 \003(\01327.p"
      "roto.CheckGameVersionRsp.NextResVersionR"
      "esultMapEntry\032T\n\030ResVersionResultMapEntr"
      "y\022\013\n\003key\030\001 \001(\r\022\'\n\005value\030\002 \001(\0132\030.proto.Ga"
      "meVersionResult:\0028\001\032X\n\034NextResVersionRes"
      "ultMapEntry\022\013\n\003key\030\001 \001(\r\022\'\n\005value\030\002 \001(\0132"
      "\030.proto.GameVersionResult:\0028\001\"\026\n\024Platfor"
      "mPlayerNumReq\"\327\001\n\024PlatformPlayerNumRsp\022\017"
      "\n\007retcode\030\001 \001(\005\022\031\n\021online_player_num\030\002 \001"
      "(\r\022V\n\027platform_player_num_map\030\003 \003(\01325.pr"
      "oto.PlatformPlayerNumRsp.PlatformPlayerN"
      "umMapEntry\032;\n\031PlatformPlayerNumMapEntry\022"
      "\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\"\320\001\n\022Play"
      "erMemBasicData\022\020\n\010nickname\030\001 \001(\t\022\r\n\005leve"
      "l\030\002 \001(\r\022\013\n\003exp\030\003 \001(\r\022\r\n\005scoin\030\004 \001(\r\022\r\n\005h"
      "coin\030\005 \001(\r\022\022\n\nlast_login\030\006 \001(\r\022.\n\017profil"
      "e_picture\030\007 \001(\0132\025.proto.ProfilePicture\022\025"
      "\n\rregister_time\030\010 \001(\007\022\023\n\013gender_type\030\t \001"
      "(\r\"S\n\037PlayerMemH5AcitivityWatcherData\022\036\n"
      "\026h5_activity_watcher_id\030\001 \001(\r\022\020\n\010progres"
      "s\030\002 \001(\r\"\204\002\n\027PlayerMemH5ActivityData\022\026\n\016h"
      "5_schedule_id\030\001 \001(\r\022\026\n\016h5_activity_id\030\002 "
      "\001(\r\022\031\n\021last_refresh_time\030\003 \001(\r\022)\n!finish"
      "ed_h5_activity_watcher_list\030\004 \003(\r\022)\n!una"
      "ccept_h5_activity_watcher_list\030\005 \003(\r\022H\n\030"
      "h5_activity_watcher_list\030\006 \003(\0132&.proto.P"
      "layerMemH5AcitivityWatcherData\"\334\001\n\035Playe"
      "rMemH5ActivityDataResult\022I\n\013retcode_map\030"
      "\001 \003(\01324.proto.PlayerMemH5ActivityDataRes"
      "ult.RetcodeMapEntry\022=\n\025h5_activity_data_"
      "list\030\002 \003(\0132\036.proto.PlayerMemH5ActivityDa"
      "ta\0321\n\017RetcodeMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005va"
      "lue\030\002 \001(\005:\0028\001\"D\n\033QueryPlayerMemDataByMui"
      "pReq\022\021\n\tdata_type\030\001 \001(\r\022\022\n\nparam_list\030\002 "
      "\003(\r\"\262\001\n\033QueryPlayerMemDataByMuipRsp\022\017\n\007r"
      "etcode\030\001 \001(\005\022/\n\nbasic_data\030\002 \001(\0132\031.proto"
      ".PlayerMemBasicDataH\000\022G\n\027h5_activity_dat"
      "a_result\030\003 \001(\0132$.proto.PlayerMemH5Activi"
      "tyDataResultH\000B\010\n\006detail\"5\n\017BindGmUidNot"
      "ify\022\016\n\006gm_uid\030\001 \001(\r\022\022\n\nplayer_uid\030\002 \001(\r\""
      "#\n\021UnbindGmUidNotify\022\016\n\006gm_uid\030\001 \001(\r\"\021\n\017"
      "GetBindGmUidReq\"\215\001\n\017GetBindGmUidRsp\022\017\n\007r"
      "etcode\030\001 \001(\005\0228\n\ngm_uid_map\030\002 \003(\0132$.proto"
      ".GetBindGmUidRsp.GmUidMapEntry\032/\n\rGmUidM"
      "apEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\""
      "H\n\030PlatformAntiAddictNotify\022\020\n\010msg_type\030"
      "\002 \001(\005\022\013\n\003msg\030\003 \001(\t\022\r\n\005level\030\004 \001(\t\"\031\n\027Pla"
      "yerLoginPerSecondReq\"K\n\027PlayerLoginPerSe"
      "condRsp\022\017\n\007retcode\030\001 \001(\005\022\037\n\027player_login"
      "_per_second\030\002 \001(\r\"\031\n\027FineGrainedPlayerNu"
      "mReq\"\347\001\n\027FineGrainedPlayerNumRsp\022\017\n\007retc"
      "ode\030\001 \001(\005\022\031\n\021online_player_num\030\002 \001(\r\022`\n\033"
      "fine_grained_player_num_map\030\003 \003(\0132;.prot"
      "o.FineGrainedPlayerNumRsp.FineGrainedPla"
      "yerNumMapEntry\032>\n\034FineGrainedPlayerNumMa"
      "pEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\r:\0028\001\"F"
      "\n\026CheckGameCrcVersionReq\022\020\n\010platform\030\001 \001"
      "(\r\022\032\n\022client_version_str\030\002 \001(\t\"\227\001\n\026Check"
      "GameCrcVersionRsp\022\017\n\007retcode\030\001 \001(\005\022\022\n\nto"
      "tal_game\030\002 \001(\r\022\020\n\010platform\030\003 \001(\r\022\032\n\022clie"
      "nt_version_str\030\004 \001(\t\022\021\n\twrong_num\030\005 \001(\r\022"
      "\027\n\017wrong_name_list\030\006 \003(\r\"I\n\032UpdateRedPoi"
      "ntByMuipNotify\022+\n\016red_point_list\030\001 \003(\0132\023"
      ".proto.RedPointData\":\n\025SendConcertProduc"
      "tReq\022\016\n\006ticket\030\001 \001(\t\022\021\n\tconfig_id\030\002 \001(\r\""
      "K\n\025SendConcertProductRsp\022\017\n\007retcode\030\001 \001("
      "\005\022\016\n\006ticket\030\002 \001(\t\022\021\n\tconfig_id\030\003 \001(\r\"/\n\032"
      "QueryConcertProductInfoReq\022\021\n\tconfig_id\030"
      "\001 \001(\r\"l\n\032QueryConcertProductInfoRsp\022\017\n\007r"
      "etcode\030\001 \001(\005\022\021\n\tconfig_id\030\002 \001(\r\022\024\n\014obtai"
      "n_count\030\003 \001(\r\022\024\n\014obtain_limit\030\004 \001(\r\"\021\n\017P"
      "layerMpModeReq\"6\n\017PlayerMpModeRsp\022\017\n\007ret"
      "code\030\001 \001(\005\022\022\n\nis_mp_mode\030\002 \001(\010*A\n\021Player"
      "MemDataType\022\022\n\016MEM_DATA_BASIC\020\000\022\030\n\024MEM_D"
      "ATA_H5_ACTIVITY\020\001B(Z&github.com/teyvat-h"
      "elper/hk4e-proto/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4827);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_only/cmd_muip.server.proto", &protobuf_RegisterTypes);
  ::proto::protobuf_define_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto

const ::google::protobuf::EnumDescriptor* PlayerMemDataType_descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_enum_descriptors[0];
}
bool PlayerMemDataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlinePlayerNumReq::OnlinePlayerNumReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OnlinePlayerNumReq)
}
OnlinePlayerNumReq::OnlinePlayerNumReq(const OnlinePlayerNumReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.OnlinePlayerNumReq)
}

void OnlinePlayerNumReq::SharedCtor() {
  _cached_size_ = 0;
}

OnlinePlayerNumReq::~OnlinePlayerNumReq() {
  // @@protoc_insertion_point(destructor:proto.OnlinePlayerNumReq)
  SharedDtor();
}

void OnlinePlayerNumReq::SharedDtor() {
}

void OnlinePlayerNumReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnlinePlayerNumReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnlinePlayerNumReq& OnlinePlayerNumReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

OnlinePlayerNumReq* OnlinePlayerNumReq::New(::google::protobuf::Arena* arena) const {
  OnlinePlayerNumReq* n = new OnlinePlayerNumReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnlinePlayerNumReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OnlinePlayerNumReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool OnlinePlayerNumReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OnlinePlayerNumReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OnlinePlayerNumReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OnlinePlayerNumReq)
  return false;
#undef DO_
}

void OnlinePlayerNumReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OnlinePlayerNumReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OnlinePlayerNumReq)
}

::google::protobuf::uint8* OnlinePlayerNumReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OnlinePlayerNumReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OnlinePlayerNumReq)
  return target;
}

size_t OnlinePlayerNumReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OnlinePlayerNumReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnlinePlayerNumReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OnlinePlayerNumReq)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlinePlayerNumReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnlinePlayerNumReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OnlinePlayerNumReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OnlinePlayerNumReq)
    MergeFrom(*source);
  }
}

void OnlinePlayerNumReq::MergeFrom(const OnlinePlayerNumReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OnlinePlayerNumReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void OnlinePlayerNumReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OnlinePlayerNumReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlinePlayerNumReq::CopyFrom(const OnlinePlayerNumReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OnlinePlayerNumReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlinePlayerNumReq::IsInitialized() const {
  return true;
}

void OnlinePlayerNumReq::Swap(OnlinePlayerNumReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlinePlayerNumReq::InternalSwap(OnlinePlayerNumReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnlinePlayerNumReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnlinePlayerNumReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

OnlinePlayerNumRsp::OnlinePlayerNumRsp_GameserverPlayerNumMapEntry::OnlinePlayerNumRsp_GameserverPlayerNumMapEntry() {}
OnlinePlayerNumRsp::OnlinePlayerNumRsp_GameserverPlayerNumMapEntry::OnlinePlayerNumRsp_GameserverPlayerNumMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata OnlinePlayerNumRsp::OnlinePlayerNumRsp_GameserverPlayerNumMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[1];
}
void OnlinePlayerNumRsp::OnlinePlayerNumRsp_GameserverPlayerNumMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void OnlinePlayerNumRsp::OnlinePlayerNumRsp_GameserverPlayerNumMapEntry::MergeFrom(const OnlinePlayerNumRsp_GameserverPlayerNumMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlinePlayerNumRsp::kRetcodeFieldNumber;
const int OnlinePlayerNumRsp::kOnlinePlayerNumFieldNumber;
const int OnlinePlayerNumRsp::kGameserverPlayerNumMapFieldNumber;
const int OnlinePlayerNumRsp::kOnlinePlayerNumExceptSubAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlinePlayerNumRsp::OnlinePlayerNumRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.OnlinePlayerNumRsp)
}
OnlinePlayerNumRsp::OnlinePlayerNumRsp(const OnlinePlayerNumRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameserver_player_num_map_.MergeFrom(from.gameserver_player_num_map_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&online_player_num_except_sub_account_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(online_player_num_except_sub_account_));
  // @@protoc_insertion_point(copy_constructor:proto.OnlinePlayerNumRsp)
}

void OnlinePlayerNumRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&online_player_num_except_sub_account_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(online_player_num_except_sub_account_));
  _cached_size_ = 0;
}

OnlinePlayerNumRsp::~OnlinePlayerNumRsp() {
  // @@protoc_insertion_point(destructor:proto.OnlinePlayerNumRsp)
  SharedDtor();
}

void OnlinePlayerNumRsp::SharedDtor() {
}

void OnlinePlayerNumRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnlinePlayerNumRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OnlinePlayerNumRsp& OnlinePlayerNumRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

OnlinePlayerNumRsp* OnlinePlayerNumRsp::New(::google::protobuf::Arena* arena) const {
  OnlinePlayerNumRsp* n = new OnlinePlayerNumRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnlinePlayerNumRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.OnlinePlayerNumRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gameserver_player_num_map_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&online_player_num_except_sub_account_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(online_player_num_except_sub_account_));
  _internal_metadata_.Clear();
}

bool OnlinePlayerNumRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.OnlinePlayerNumRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 online_player_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &online_player_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> gameserver_player_num_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          OnlinePlayerNumRsp_GameserverPlayerNumMapEntry::Parser< ::google::protobuf::internal::MapField<
              OnlinePlayerNumRsp_GameserverPlayerNumMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&gameserver_player_num_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 online_player_num_except_sub_account = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &online_player_num_except_sub_account_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.OnlinePlayerNumRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.OnlinePlayerNumRsp)
  return false;
#undef DO_
}

void OnlinePlayerNumRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.OnlinePlayerNumRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 online_player_num = 2;
  if (this->online_player_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->online_player_num(), output);
  }

  // map<uint32, uint32> gameserver_player_num_map = 3;
  if (!this->gameserver_player_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->gameserver_player_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gameserver_player_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gameserver_player_num_map().begin();
          it != this->gameserver_player_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OnlinePlayerNumRsp_GameserverPlayerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gameserver_player_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<OnlinePlayerNumRsp_GameserverPlayerNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gameserver_player_num_map().begin();
          it != this->gameserver_player_num_map().end(); ++it) {
        entry.reset(gameserver_player_num_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  // uint32 online_player_num_except_sub_account = 4;
  if (this->online_player_num_except_sub_account() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->online_player_num_except_sub_account(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.OnlinePlayerNumRsp)
}

::google::protobuf::uint8* OnlinePlayerNumRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.OnlinePlayerNumRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 online_player_num = 2;
  if (this->online_player_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->online_player_num(), target);
  }

  // map<uint32, uint32> gameserver_player_num_map = 3;
  if (!this->gameserver_player_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->gameserver_player_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gameserver_player_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gameserver_player_num_map().begin();
          it != this->gameserver_player_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<OnlinePlayerNumRsp_GameserverPlayerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gameserver_player_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<OnlinePlayerNumRsp_GameserverPlayerNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gameserver_player_num_map().begin();
          it != this->gameserver_player_num_map().end(); ++it) {
        entry.reset(gameserver_player_num_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  // uint32 online_player_num_except_sub_account = 4;
  if (this->online_player_num_except_sub_account() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->online_player_num_except_sub_account(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.OnlinePlayerNumRsp)
  return target;
}

size_t OnlinePlayerNumRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.OnlinePlayerNumRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> gameserver_player_num_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->gameserver_player_num_map_size());
  {
    ::google::protobuf::scoped_ptr<OnlinePlayerNumRsp_GameserverPlayerNumMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->gameserver_player_num_map().begin();
        it != this->gameserver_player_num_map().end(); ++it) {
      entry.reset(gameserver_player_num_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 online_player_num = 2;
  if (this->online_player_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->online_player_num());
  }

  // uint32 online_player_num_except_sub_account = 4;
  if (this->online_player_num_except_sub_account() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->online_player_num_except_sub_account());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnlinePlayerNumRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.OnlinePlayerNumRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlinePlayerNumRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnlinePlayerNumRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.OnlinePlayerNumRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.OnlinePlayerNumRsp)
    MergeFrom(*source);
  }
}

void OnlinePlayerNumRsp::MergeFrom(const OnlinePlayerNumRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.OnlinePlayerNumRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gameserver_player_num_map_.MergeFrom(from.gameserver_player_num_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.online_player_num() != 0) {
    set_online_player_num(from.online_player_num());
  }
  if (from.online_player_num_except_sub_account() != 0) {
    set_online_player_num_except_sub_account(from.online_player_num_except_sub_account());
  }
}

void OnlinePlayerNumRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.OnlinePlayerNumRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlinePlayerNumRsp::CopyFrom(const OnlinePlayerNumRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.OnlinePlayerNumRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlinePlayerNumRsp::IsInitialized() const {
  return true;
}

void OnlinePlayerNumRsp::Swap(OnlinePlayerNumRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlinePlayerNumRsp::InternalSwap(OnlinePlayerNumRsp* other) {
  using std::swap;
  gameserver_player_num_map_.Swap(&other->gameserver_player_num_map_);
  swap(retcode_, other->retcode_);
  swap(online_player_num_, other->online_player_num_);
  swap(online_player_num_except_sub_account_, other->online_player_num_except_sub_account_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnlinePlayerNumRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnlinePlayerNumRsp

// int32 retcode = 1;
void OnlinePlayerNumRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 OnlinePlayerNumRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerNumRsp.retcode)
  return retcode_;
}
void OnlinePlayerNumRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerNumRsp.retcode)
}

// uint32 online_player_num = 2;
void OnlinePlayerNumRsp::clear_online_player_num() {
  online_player_num_ = 0u;
}
::google::protobuf::uint32 OnlinePlayerNumRsp::online_player_num() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerNumRsp.online_player_num)
  return online_player_num_;
}
void OnlinePlayerNumRsp::set_online_player_num(::google::protobuf::uint32 value) {
  
  online_player_num_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerNumRsp.online_player_num)
}

// map<uint32, uint32> gameserver_player_num_map = 3;
int OnlinePlayerNumRsp::gameserver_player_num_map_size() const {
  return gameserver_player_num_map_.size();
}
void OnlinePlayerNumRsp::clear_gameserver_player_num_map() {
  gameserver_player_num_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OnlinePlayerNumRsp::gameserver_player_num_map() const {
  // @@protoc_insertion_point(field_map:proto.OnlinePlayerNumRsp.gameserver_player_num_map)
  return gameserver_player_num_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OnlinePlayerNumRsp::mutable_gameserver_player_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OnlinePlayerNumRsp.gameserver_player_num_map)
  return gameserver_player_num_map_.MutableMap();
}

// uint32 online_player_num_except_sub_account = 4;
void OnlinePlayerNumRsp::clear_online_player_num_except_sub_account() {
  online_player_num_except_sub_account_ = 0u;
}
::google::protobuf::uint32 OnlinePlayerNumRsp::online_player_num_except_sub_account() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerNumRsp.online_player_num_except_sub_account)
  return online_player_num_except_sub_account_;
}
void OnlinePlayerNumRsp::set_online_player_num_except_sub_account(::google::protobuf::uint32 value) {
  
  online_player_num_except_sub_account_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerNumRsp.online_player_num_except_sub_account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KickoutPlayerNotify::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KickoutPlayerNotify::KickoutPlayerNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.KickoutPlayerNotify)
}
KickoutPlayerNotify::KickoutPlayerNotify(const KickoutPlayerNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:proto.KickoutPlayerNotify)
}

void KickoutPlayerNotify::SharedCtor() {
  reason_ = 0u;
  _cached_size_ = 0;
}

KickoutPlayerNotify::~KickoutPlayerNotify() {
  // @@protoc_insertion_point(destructor:proto.KickoutPlayerNotify)
  SharedDtor();
}

void KickoutPlayerNotify::SharedDtor() {
}

void KickoutPlayerNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KickoutPlayerNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KickoutPlayerNotify& KickoutPlayerNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

KickoutPlayerNotify* KickoutPlayerNotify::New(::google::protobuf::Arena* arena) const {
  KickoutPlayerNotify* n = new KickoutPlayerNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KickoutPlayerNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.KickoutPlayerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_ = 0u;
  _internal_metadata_.Clear();
}

bool KickoutPlayerNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.KickoutPlayerNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 reason = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.KickoutPlayerNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.KickoutPlayerNotify)
  return false;
#undef DO_
}

void KickoutPlayerNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.KickoutPlayerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reason = 1;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.KickoutPlayerNotify)
}

::google::protobuf::uint8* KickoutPlayerNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.KickoutPlayerNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reason = 1;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.KickoutPlayerNotify)
  return target;
}

size_t KickoutPlayerNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.KickoutPlayerNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 reason = 1;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KickoutPlayerNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.KickoutPlayerNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const KickoutPlayerNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KickoutPlayerNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.KickoutPlayerNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.KickoutPlayerNotify)
    MergeFrom(*source);
  }
}

void KickoutPlayerNotify::MergeFrom(const KickoutPlayerNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.KickoutPlayerNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void KickoutPlayerNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.KickoutPlayerNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KickoutPlayerNotify::CopyFrom(const KickoutPlayerNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.KickoutPlayerNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KickoutPlayerNotify::IsInitialized() const {
  return true;
}

void KickoutPlayerNotify::Swap(KickoutPlayerNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KickoutPlayerNotify::InternalSwap(KickoutPlayerNotify* other) {
  using std::swap;
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KickoutPlayerNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KickoutPlayerNotify

// uint32 reason = 1;
void KickoutPlayerNotify::clear_reason() {
  reason_ = 0u;
}
::google::protobuf::uint32 KickoutPlayerNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.KickoutPlayerNotify.reason)
  return reason_;
}
void KickoutPlayerNotify::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.KickoutPlayerNotify.reason)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckOnlinePlayerReq::kGameserverIdFieldNumber;
const int CheckOnlinePlayerReq::kNsGameserverIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckOnlinePlayerReq::CheckOnlinePlayerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CheckOnlinePlayerReq)
}
CheckOnlinePlayerReq::CheckOnlinePlayerReq(const CheckOnlinePlayerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gameserver_id_, &from.gameserver_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ns_gameserver_id_) -
    reinterpret_cast<char*>(&gameserver_id_)) + sizeof(ns_gameserver_id_));
  // @@protoc_insertion_point(copy_constructor:proto.CheckOnlinePlayerReq)
}

void CheckOnlinePlayerReq::SharedCtor() {
  ::memset(&gameserver_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ns_gameserver_id_) -
      reinterpret_cast<char*>(&gameserver_id_)) + sizeof(ns_gameserver_id_));
  _cached_size_ = 0;
}

CheckOnlinePlayerReq::~CheckOnlinePlayerReq() {
  // @@protoc_insertion_point(destructor:proto.CheckOnlinePlayerReq)
  SharedDtor();
}

void CheckOnlinePlayerReq::SharedDtor() {
}

void CheckOnlinePlayerReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckOnlinePlayerReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckOnlinePlayerReq& CheckOnlinePlayerReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckOnlinePlayerReq* CheckOnlinePlayerReq::New(::google::protobuf::Arena* arena) const {
  CheckOnlinePlayerReq* n = new CheckOnlinePlayerReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckOnlinePlayerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CheckOnlinePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gameserver_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ns_gameserver_id_) -
      reinterpret_cast<char*>(&gameserver_id_)) + sizeof(ns_gameserver_id_));
  _internal_metadata_.Clear();
}

bool CheckOnlinePlayerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CheckOnlinePlayerReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gameserver_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameserver_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ns_gameserver_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ns_gameserver_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CheckOnlinePlayerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CheckOnlinePlayerReq)
  return false;
#undef DO_
}

void CheckOnlinePlayerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CheckOnlinePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gameserver_id = 1;
  if (this->gameserver_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gameserver_id(), output);
  }

  // uint32 ns_gameserver_id = 2;
  if (this->ns_gameserver_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ns_gameserver_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CheckOnlinePlayerReq)
}

::google::protobuf::uint8* CheckOnlinePlayerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CheckOnlinePlayerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gameserver_id = 1;
  if (this->gameserver_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gameserver_id(), target);
  }

  // uint32 ns_gameserver_id = 2;
  if (this->ns_gameserver_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ns_gameserver_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CheckOnlinePlayerReq)
  return target;
}

size_t CheckOnlinePlayerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CheckOnlinePlayerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gameserver_id = 1;
  if (this->gameserver_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gameserver_id());
  }

  // uint32 ns_gameserver_id = 2;
  if (this->ns_gameserver_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ns_gameserver_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckOnlinePlayerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CheckOnlinePlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckOnlinePlayerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckOnlinePlayerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CheckOnlinePlayerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CheckOnlinePlayerReq)
    MergeFrom(*source);
  }
}

void CheckOnlinePlayerReq::MergeFrom(const CheckOnlinePlayerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CheckOnlinePlayerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gameserver_id() != 0) {
    set_gameserver_id(from.gameserver_id());
  }
  if (from.ns_gameserver_id() != 0) {
    set_ns_gameserver_id(from.ns_gameserver_id());
  }
}

void CheckOnlinePlayerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CheckOnlinePlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckOnlinePlayerReq::CopyFrom(const CheckOnlinePlayerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CheckOnlinePlayerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckOnlinePlayerReq::IsInitialized() const {
  return true;
}

void CheckOnlinePlayerReq::Swap(CheckOnlinePlayerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckOnlinePlayerReq::InternalSwap(CheckOnlinePlayerReq* other) {
  using std::swap;
  swap(gameserver_id_, other->gameserver_id_);
  swap(ns_gameserver_id_, other->ns_gameserver_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckOnlinePlayerReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckOnlinePlayerReq

// uint32 gameserver_id = 1;
void CheckOnlinePlayerReq::clear_gameserver_id() {
  gameserver_id_ = 0u;
}
::google::protobuf::uint32 CheckOnlinePlayerReq::gameserver_id() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerReq.gameserver_id)
  return gameserver_id_;
}
void CheckOnlinePlayerReq::set_gameserver_id(::google::protobuf::uint32 value) {
  
  gameserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerReq.gameserver_id)
}

// uint32 ns_gameserver_id = 2;
void CheckOnlinePlayerReq::clear_ns_gameserver_id() {
  ns_gameserver_id_ = 0u;
}
::google::protobuf::uint32 CheckOnlinePlayerReq::ns_gameserver_id() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerReq.ns_gameserver_id)
  return ns_gameserver_id_;
}
void CheckOnlinePlayerReq::set_ns_gameserver_id(::google::protobuf::uint32 value) {
  
  ns_gameserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerReq.ns_gameserver_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckOnlinePlayerRsp_NodeStatus::kGameserverIdFieldNumber;
const int CheckOnlinePlayerRsp_NodeStatus::kNodeserverIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckOnlinePlayerRsp_NodeStatus::CheckOnlinePlayerRsp_NodeStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CheckOnlinePlayerRsp.NodeStatus)
}
CheckOnlinePlayerRsp_NodeStatus::CheckOnlinePlayerRsp_NodeStatus(const CheckOnlinePlayerRsp_NodeStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gameserver_id_, &from.gameserver_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&nodeserver_id_) -
    reinterpret_cast<char*>(&gameserver_id_)) + sizeof(nodeserver_id_));
  // @@protoc_insertion_point(copy_constructor:proto.CheckOnlinePlayerRsp.NodeStatus)
}

void CheckOnlinePlayerRsp_NodeStatus::SharedCtor() {
  ::memset(&gameserver_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nodeserver_id_) -
      reinterpret_cast<char*>(&gameserver_id_)) + sizeof(nodeserver_id_));
  _cached_size_ = 0;
}

CheckOnlinePlayerRsp_NodeStatus::~CheckOnlinePlayerRsp_NodeStatus() {
  // @@protoc_insertion_point(destructor:proto.CheckOnlinePlayerRsp.NodeStatus)
  SharedDtor();
}

void CheckOnlinePlayerRsp_NodeStatus::SharedDtor() {
}

void CheckOnlinePlayerRsp_NodeStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckOnlinePlayerRsp_NodeStatus::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckOnlinePlayerRsp_NodeStatus& CheckOnlinePlayerRsp_NodeStatus::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckOnlinePlayerRsp_NodeStatus* CheckOnlinePlayerRsp_NodeStatus::New(::google::protobuf::Arena* arena) const {
  CheckOnlinePlayerRsp_NodeStatus* n = new CheckOnlinePlayerRsp_NodeStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckOnlinePlayerRsp_NodeStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CheckOnlinePlayerRsp.NodeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gameserver_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nodeserver_id_) -
      reinterpret_cast<char*>(&gameserver_id_)) + sizeof(nodeserver_id_));
  _internal_metadata_.Clear();
}

bool CheckOnlinePlayerRsp_NodeStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CheckOnlinePlayerRsp.NodeStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gameserver_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameserver_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 nodeserver_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &nodeserver_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CheckOnlinePlayerRsp.NodeStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CheckOnlinePlayerRsp.NodeStatus)
  return false;
#undef DO_
}

void CheckOnlinePlayerRsp_NodeStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CheckOnlinePlayerRsp.NodeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gameserver_id = 1;
  if (this->gameserver_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gameserver_id(), output);
  }

  // uint32 nodeserver_id = 2;
  if (this->nodeserver_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->nodeserver_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CheckOnlinePlayerRsp.NodeStatus)
}

::google::protobuf::uint8* CheckOnlinePlayerRsp_NodeStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CheckOnlinePlayerRsp.NodeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gameserver_id = 1;
  if (this->gameserver_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gameserver_id(), target);
  }

  // uint32 nodeserver_id = 2;
  if (this->nodeserver_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->nodeserver_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CheckOnlinePlayerRsp.NodeStatus)
  return target;
}

size_t CheckOnlinePlayerRsp_NodeStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CheckOnlinePlayerRsp.NodeStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gameserver_id = 1;
  if (this->gameserver_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gameserver_id());
  }

  // uint32 nodeserver_id = 2;
  if (this->nodeserver_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->nodeserver_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckOnlinePlayerRsp_NodeStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CheckOnlinePlayerRsp.NodeStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckOnlinePlayerRsp_NodeStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckOnlinePlayerRsp_NodeStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CheckOnlinePlayerRsp.NodeStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CheckOnlinePlayerRsp.NodeStatus)
    MergeFrom(*source);
  }
}

void CheckOnlinePlayerRsp_NodeStatus::MergeFrom(const CheckOnlinePlayerRsp_NodeStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CheckOnlinePlayerRsp.NodeStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gameserver_id() != 0) {
    set_gameserver_id(from.gameserver_id());
  }
  if (from.nodeserver_id() != 0) {
    set_nodeserver_id(from.nodeserver_id());
  }
}

void CheckOnlinePlayerRsp_NodeStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CheckOnlinePlayerRsp.NodeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckOnlinePlayerRsp_NodeStatus::CopyFrom(const CheckOnlinePlayerRsp_NodeStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CheckOnlinePlayerRsp.NodeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckOnlinePlayerRsp_NodeStatus::IsInitialized() const {
  return true;
}

void CheckOnlinePlayerRsp_NodeStatus::Swap(CheckOnlinePlayerRsp_NodeStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckOnlinePlayerRsp_NodeStatus::InternalSwap(CheckOnlinePlayerRsp_NodeStatus* other) {
  using std::swap;
  swap(gameserver_id_, other->gameserver_id_);
  swap(nodeserver_id_, other->nodeserver_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckOnlinePlayerRsp_NodeStatus::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckOnlinePlayerRsp_NodeStatus

// uint32 gameserver_id = 1;
void CheckOnlinePlayerRsp_NodeStatus::clear_gameserver_id() {
  gameserver_id_ = 0u;
}
::google::protobuf::uint32 CheckOnlinePlayerRsp_NodeStatus::gameserver_id() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.NodeStatus.gameserver_id)
  return gameserver_id_;
}
void CheckOnlinePlayerRsp_NodeStatus::set_gameserver_id(::google::protobuf::uint32 value) {
  
  gameserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.NodeStatus.gameserver_id)
}

// uint32 nodeserver_id = 2;
void CheckOnlinePlayerRsp_NodeStatus::clear_nodeserver_id() {
  nodeserver_id_ = 0u;
}
::google::protobuf::uint32 CheckOnlinePlayerRsp_NodeStatus::nodeserver_id() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.NodeStatus.nodeserver_id)
  return nodeserver_id_;
}
void CheckOnlinePlayerRsp_NodeStatus::set_nodeserver_id(::google::protobuf::uint32 value) {
  
  nodeserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.NodeStatus.nodeserver_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckOnlinePlayerRsp_GameStatus::kGameserverIdFieldNumber;
const int CheckOnlinePlayerRsp_GameStatus::kLoginTimeFieldNumber;
const int CheckOnlinePlayerRsp_GameStatus::kLoginRandFieldNumber;
const int CheckOnlinePlayerRsp_GameStatus::kIsWaitSaveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckOnlinePlayerRsp_GameStatus::CheckOnlinePlayerRsp_GameStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CheckOnlinePlayerRsp.GameStatus)
}
CheckOnlinePlayerRsp_GameStatus::CheckOnlinePlayerRsp_GameStatus(const CheckOnlinePlayerRsp_GameStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gameserver_id_, &from.gameserver_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_wait_save_) -
    reinterpret_cast<char*>(&gameserver_id_)) + sizeof(is_wait_save_));
  // @@protoc_insertion_point(copy_constructor:proto.CheckOnlinePlayerRsp.GameStatus)
}

void CheckOnlinePlayerRsp_GameStatus::SharedCtor() {
  ::memset(&gameserver_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_wait_save_) -
      reinterpret_cast<char*>(&gameserver_id_)) + sizeof(is_wait_save_));
  _cached_size_ = 0;
}

CheckOnlinePlayerRsp_GameStatus::~CheckOnlinePlayerRsp_GameStatus() {
  // @@protoc_insertion_point(destructor:proto.CheckOnlinePlayerRsp.GameStatus)
  SharedDtor();
}

void CheckOnlinePlayerRsp_GameStatus::SharedDtor() {
}

void CheckOnlinePlayerRsp_GameStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckOnlinePlayerRsp_GameStatus::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckOnlinePlayerRsp_GameStatus& CheckOnlinePlayerRsp_GameStatus::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckOnlinePlayerRsp_GameStatus* CheckOnlinePlayerRsp_GameStatus::New(::google::protobuf::Arena* arena) const {
  CheckOnlinePlayerRsp_GameStatus* n = new CheckOnlinePlayerRsp_GameStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckOnlinePlayerRsp_GameStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CheckOnlinePlayerRsp.GameStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gameserver_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_wait_save_) -
      reinterpret_cast<char*>(&gameserver_id_)) + sizeof(is_wait_save_));
  _internal_metadata_.Clear();
}

bool CheckOnlinePlayerRsp_GameStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CheckOnlinePlayerRsp.GameStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gameserver_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gameserver_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 login_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &login_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 login_rand = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &login_rand_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_wait_save = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_wait_save_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CheckOnlinePlayerRsp.GameStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CheckOnlinePlayerRsp.GameStatus)
  return false;
#undef DO_
}

void CheckOnlinePlayerRsp_GameStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CheckOnlinePlayerRsp.GameStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gameserver_id = 1;
  if (this->gameserver_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gameserver_id(), output);
  }

  // uint32 login_time = 2;
  if (this->login_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->login_time(), output);
  }

  // uint64 login_rand = 3;
  if (this->login_rand() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->login_rand(), output);
  }

  // bool is_wait_save = 4;
  if (this->is_wait_save() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_wait_save(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CheckOnlinePlayerRsp.GameStatus)
}

::google::protobuf::uint8* CheckOnlinePlayerRsp_GameStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CheckOnlinePlayerRsp.GameStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gameserver_id = 1;
  if (this->gameserver_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gameserver_id(), target);
  }

  // uint32 login_time = 2;
  if (this->login_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->login_time(), target);
  }

  // uint64 login_rand = 3;
  if (this->login_rand() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->login_rand(), target);
  }

  // bool is_wait_save = 4;
  if (this->is_wait_save() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_wait_save(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CheckOnlinePlayerRsp.GameStatus)
  return target;
}

size_t CheckOnlinePlayerRsp_GameStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CheckOnlinePlayerRsp.GameStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gameserver_id = 1;
  if (this->gameserver_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gameserver_id());
  }

  // uint32 login_time = 2;
  if (this->login_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->login_time());
  }

  // uint64 login_rand = 3;
  if (this->login_rand() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->login_rand());
  }

  // bool is_wait_save = 4;
  if (this->is_wait_save() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckOnlinePlayerRsp_GameStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CheckOnlinePlayerRsp.GameStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckOnlinePlayerRsp_GameStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckOnlinePlayerRsp_GameStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CheckOnlinePlayerRsp.GameStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CheckOnlinePlayerRsp.GameStatus)
    MergeFrom(*source);
  }
}

void CheckOnlinePlayerRsp_GameStatus::MergeFrom(const CheckOnlinePlayerRsp_GameStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CheckOnlinePlayerRsp.GameStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gameserver_id() != 0) {
    set_gameserver_id(from.gameserver_id());
  }
  if (from.login_time() != 0) {
    set_login_time(from.login_time());
  }
  if (from.login_rand() != 0) {
    set_login_rand(from.login_rand());
  }
  if (from.is_wait_save() != 0) {
    set_is_wait_save(from.is_wait_save());
  }
}

void CheckOnlinePlayerRsp_GameStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CheckOnlinePlayerRsp.GameStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckOnlinePlayerRsp_GameStatus::CopyFrom(const CheckOnlinePlayerRsp_GameStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CheckOnlinePlayerRsp.GameStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckOnlinePlayerRsp_GameStatus::IsInitialized() const {
  return true;
}

void CheckOnlinePlayerRsp_GameStatus::Swap(CheckOnlinePlayerRsp_GameStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckOnlinePlayerRsp_GameStatus::InternalSwap(CheckOnlinePlayerRsp_GameStatus* other) {
  using std::swap;
  swap(gameserver_id_, other->gameserver_id_);
  swap(login_time_, other->login_time_);
  swap(login_rand_, other->login_rand_);
  swap(is_wait_save_, other->is_wait_save_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckOnlinePlayerRsp_GameStatus::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckOnlinePlayerRsp_GameStatus

// uint32 gameserver_id = 1;
void CheckOnlinePlayerRsp_GameStatus::clear_gameserver_id() {
  gameserver_id_ = 0u;
}
::google::protobuf::uint32 CheckOnlinePlayerRsp_GameStatus::gameserver_id() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.GameStatus.gameserver_id)
  return gameserver_id_;
}
void CheckOnlinePlayerRsp_GameStatus::set_gameserver_id(::google::protobuf::uint32 value) {
  
  gameserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.GameStatus.gameserver_id)
}

// uint32 login_time = 2;
void CheckOnlinePlayerRsp_GameStatus::clear_login_time() {
  login_time_ = 0u;
}
::google::protobuf::uint32 CheckOnlinePlayerRsp_GameStatus::login_time() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.GameStatus.login_time)
  return login_time_;
}
void CheckOnlinePlayerRsp_GameStatus::set_login_time(::google::protobuf::uint32 value) {
  
  login_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.GameStatus.login_time)
}

// uint64 login_rand = 3;
void CheckOnlinePlayerRsp_GameStatus::clear_login_rand() {
  login_rand_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 CheckOnlinePlayerRsp_GameStatus::login_rand() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.GameStatus.login_rand)
  return login_rand_;
}
void CheckOnlinePlayerRsp_GameStatus::set_login_rand(::google::protobuf::uint64 value) {
  
  login_rand_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.GameStatus.login_rand)
}

// bool is_wait_save = 4;
void CheckOnlinePlayerRsp_GameStatus::clear_is_wait_save() {
  is_wait_save_ = false;
}
bool CheckOnlinePlayerRsp_GameStatus::is_wait_save() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.GameStatus.is_wait_save)
  return is_wait_save_;
}
void CheckOnlinePlayerRsp_GameStatus::set_is_wait_save(bool value) {
  
  is_wait_save_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.GameStatus.is_wait_save)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckOnlinePlayerRsp::kRetcodeFieldNumber;
const int CheckOnlinePlayerRsp::kNodeStatusFieldNumber;
const int CheckOnlinePlayerRsp::kGameStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckOnlinePlayerRsp::CheckOnlinePlayerRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CheckOnlinePlayerRsp)
}
CheckOnlinePlayerRsp::CheckOnlinePlayerRsp(const CheckOnlinePlayerRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_node_status()) {
    node_status_ = new ::proto::CheckOnlinePlayerRsp_NodeStatus(*from.node_status_);
  } else {
    node_status_ = NULL;
  }
  if (from.has_game_status()) {
    game_status_ = new ::proto::CheckOnlinePlayerRsp_GameStatus(*from.game_status_);
  } else {
    game_status_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.CheckOnlinePlayerRsp)
}

void CheckOnlinePlayerRsp::SharedCtor() {
  ::memset(&node_status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&node_status_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

CheckOnlinePlayerRsp::~CheckOnlinePlayerRsp() {
  // @@protoc_insertion_point(destructor:proto.CheckOnlinePlayerRsp)
  SharedDtor();
}

void CheckOnlinePlayerRsp::SharedDtor() {
  if (this != internal_default_instance()) delete node_status_;
  if (this != internal_default_instance()) delete game_status_;
}

void CheckOnlinePlayerRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckOnlinePlayerRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckOnlinePlayerRsp& CheckOnlinePlayerRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckOnlinePlayerRsp* CheckOnlinePlayerRsp::New(::google::protobuf::Arena* arena) const {
  CheckOnlinePlayerRsp* n = new CheckOnlinePlayerRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckOnlinePlayerRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CheckOnlinePlayerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && node_status_ != NULL) {
    delete node_status_;
  }
  node_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && game_status_ != NULL) {
    delete game_status_;
  }
  game_status_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool CheckOnlinePlayerRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CheckOnlinePlayerRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CheckOnlinePlayerRsp.NodeStatus node_status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.CheckOnlinePlayerRsp.GameStatus game_status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_game_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CheckOnlinePlayerRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CheckOnlinePlayerRsp)
  return false;
#undef DO_
}

void CheckOnlinePlayerRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CheckOnlinePlayerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.CheckOnlinePlayerRsp.NodeStatus node_status = 2;
  if (this->has_node_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->node_status_, output);
  }

  // .proto.CheckOnlinePlayerRsp.GameStatus game_status = 3;
  if (this->has_game_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->game_status_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CheckOnlinePlayerRsp)
}

::google::protobuf::uint8* CheckOnlinePlayerRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CheckOnlinePlayerRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.CheckOnlinePlayerRsp.NodeStatus node_status = 2;
  if (this->has_node_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->node_status_, deterministic, target);
  }

  // .proto.CheckOnlinePlayerRsp.GameStatus game_status = 3;
  if (this->has_game_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->game_status_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CheckOnlinePlayerRsp)
  return target;
}

size_t CheckOnlinePlayerRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CheckOnlinePlayerRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.CheckOnlinePlayerRsp.NodeStatus node_status = 2;
  if (this->has_node_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->node_status_);
  }

  // .proto.CheckOnlinePlayerRsp.GameStatus game_status = 3;
  if (this->has_game_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->game_status_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckOnlinePlayerRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CheckOnlinePlayerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckOnlinePlayerRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckOnlinePlayerRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CheckOnlinePlayerRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CheckOnlinePlayerRsp)
    MergeFrom(*source);
  }
}

void CheckOnlinePlayerRsp::MergeFrom(const CheckOnlinePlayerRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CheckOnlinePlayerRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_node_status()) {
    mutable_node_status()->::proto::CheckOnlinePlayerRsp_NodeStatus::MergeFrom(from.node_status());
  }
  if (from.has_game_status()) {
    mutable_game_status()->::proto::CheckOnlinePlayerRsp_GameStatus::MergeFrom(from.game_status());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void CheckOnlinePlayerRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CheckOnlinePlayerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckOnlinePlayerRsp::CopyFrom(const CheckOnlinePlayerRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CheckOnlinePlayerRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckOnlinePlayerRsp::IsInitialized() const {
  return true;
}

void CheckOnlinePlayerRsp::Swap(CheckOnlinePlayerRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckOnlinePlayerRsp::InternalSwap(CheckOnlinePlayerRsp* other) {
  using std::swap;
  swap(node_status_, other->node_status_);
  swap(game_status_, other->game_status_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckOnlinePlayerRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckOnlinePlayerRsp

// int32 retcode = 1;
void CheckOnlinePlayerRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 CheckOnlinePlayerRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.retcode)
  return retcode_;
}
void CheckOnlinePlayerRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.retcode)
}

// .proto.CheckOnlinePlayerRsp.NodeStatus node_status = 2;
bool CheckOnlinePlayerRsp::has_node_status() const {
  return this != internal_default_instance() && node_status_ != NULL;
}
void CheckOnlinePlayerRsp::clear_node_status() {
  if (GetArenaNoVirtual() == NULL && node_status_ != NULL) delete node_status_;
  node_status_ = NULL;
}
const ::proto::CheckOnlinePlayerRsp_NodeStatus& CheckOnlinePlayerRsp::node_status() const {
  const ::proto::CheckOnlinePlayerRsp_NodeStatus* p = node_status_;
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.node_status)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CheckOnlinePlayerRsp_NodeStatus*>(
      &::proto::_CheckOnlinePlayerRsp_NodeStatus_default_instance_);
}
::proto::CheckOnlinePlayerRsp_NodeStatus* CheckOnlinePlayerRsp::mutable_node_status() {
  
  if (node_status_ == NULL) {
    node_status_ = new ::proto::CheckOnlinePlayerRsp_NodeStatus;
  }
  // @@protoc_insertion_point(field_mutable:proto.CheckOnlinePlayerRsp.node_status)
  return node_status_;
}
::proto::CheckOnlinePlayerRsp_NodeStatus* CheckOnlinePlayerRsp::release_node_status() {
  // @@protoc_insertion_point(field_release:proto.CheckOnlinePlayerRsp.node_status)
  
  ::proto::CheckOnlinePlayerRsp_NodeStatus* temp = node_status_;
  node_status_ = NULL;
  return temp;
}
void CheckOnlinePlayerRsp::set_allocated_node_status(::proto::CheckOnlinePlayerRsp_NodeStatus* node_status) {
  delete node_status_;
  node_status_ = node_status;
  if (node_status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CheckOnlinePlayerRsp.node_status)
}

// .proto.CheckOnlinePlayerRsp.GameStatus game_status = 3;
bool CheckOnlinePlayerRsp::has_game_status() const {
  return this != internal_default_instance() && game_status_ != NULL;
}
void CheckOnlinePlayerRsp::clear_game_status() {
  if (GetArenaNoVirtual() == NULL && game_status_ != NULL) delete game_status_;
  game_status_ = NULL;
}
const ::proto::CheckOnlinePlayerRsp_GameStatus& CheckOnlinePlayerRsp::game_status() const {
  const ::proto::CheckOnlinePlayerRsp_GameStatus* p = game_status_;
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.game_status)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CheckOnlinePlayerRsp_GameStatus*>(
      &::proto::_CheckOnlinePlayerRsp_GameStatus_default_instance_);
}
::proto::CheckOnlinePlayerRsp_GameStatus* CheckOnlinePlayerRsp::mutable_game_status() {
  
  if (game_status_ == NULL) {
    game_status_ = new ::proto::CheckOnlinePlayerRsp_GameStatus;
  }
  // @@protoc_insertion_point(field_mutable:proto.CheckOnlinePlayerRsp.game_status)
  return game_status_;
}
::proto::CheckOnlinePlayerRsp_GameStatus* CheckOnlinePlayerRsp::release_game_status() {
  // @@protoc_insertion_point(field_release:proto.CheckOnlinePlayerRsp.game_status)
  
  ::proto::CheckOnlinePlayerRsp_GameStatus* temp = game_status_;
  game_status_ = NULL;
  return temp;
}
void CheckOnlinePlayerRsp::set_allocated_game_status(::proto::CheckOnlinePlayerRsp_GameStatus* game_status) {
  delete game_status_;
  game_status_ = game_status;
  if (game_status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CheckOnlinePlayerRsp.game_status)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCombatForceReq::PlayerCombatForceReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCombatForceReq)
}
PlayerCombatForceReq::PlayerCombatForceReq(const PlayerCombatForceReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCombatForceReq)
}

void PlayerCombatForceReq::SharedCtor() {
  _cached_size_ = 0;
}

PlayerCombatForceReq::~PlayerCombatForceReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerCombatForceReq)
  SharedDtor();
}

void PlayerCombatForceReq::SharedDtor() {
}

void PlayerCombatForceReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCombatForceReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCombatForceReq& PlayerCombatForceReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCombatForceReq* PlayerCombatForceReq::New(::google::protobuf::Arena* arena) const {
  PlayerCombatForceReq* n = new PlayerCombatForceReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCombatForceReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCombatForceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PlayerCombatForceReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCombatForceReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCombatForceReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCombatForceReq)
  return false;
#undef DO_
}

void PlayerCombatForceReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCombatForceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCombatForceReq)
}

::google::protobuf::uint8* PlayerCombatForceReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCombatForceReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCombatForceReq)
  return target;
}

size_t PlayerCombatForceReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCombatForceReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCombatForceReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCombatForceReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCombatForceReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCombatForceReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCombatForceReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCombatForceReq)
    MergeFrom(*source);
  }
}

void PlayerCombatForceReq::MergeFrom(const PlayerCombatForceReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCombatForceReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PlayerCombatForceReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCombatForceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCombatForceReq::CopyFrom(const PlayerCombatForceReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCombatForceReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCombatForceReq::IsInitialized() const {
  return true;
}

void PlayerCombatForceReq::Swap(PlayerCombatForceReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCombatForceReq::InternalSwap(PlayerCombatForceReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCombatForceReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCombatForceReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

PlayerCombatForceRsp::PlayerCombatForceRsp_PlayerCombatForceMapEntry::PlayerCombatForceRsp_PlayerCombatForceMapEntry() {}
PlayerCombatForceRsp::PlayerCombatForceRsp_PlayerCombatForceMapEntry::PlayerCombatForceRsp_PlayerCombatForceMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata PlayerCombatForceRsp::PlayerCombatForceRsp_PlayerCombatForceMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[9];
}
void PlayerCombatForceRsp::PlayerCombatForceRsp_PlayerCombatForceMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void PlayerCombatForceRsp::PlayerCombatForceRsp_PlayerCombatForceMapEntry::MergeFrom(const PlayerCombatForceRsp_PlayerCombatForceMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCombatForceRsp::kRetcodeFieldNumber;
const int PlayerCombatForceRsp::kPlayerCombatForceFieldNumber;
const int PlayerCombatForceRsp::kPlayerCombatForceMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCombatForceRsp::PlayerCombatForceRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerCombatForceRsp)
}
PlayerCombatForceRsp::PlayerCombatForceRsp(const PlayerCombatForceRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  player_combat_force_map_.MergeFrom(from.player_combat_force_map_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_combat_force_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(player_combat_force_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerCombatForceRsp)
}

void PlayerCombatForceRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_combat_force_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(player_combat_force_));
  _cached_size_ = 0;
}

PlayerCombatForceRsp::~PlayerCombatForceRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerCombatForceRsp)
  SharedDtor();
}

void PlayerCombatForceRsp::SharedDtor() {
}

void PlayerCombatForceRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCombatForceRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCombatForceRsp& PlayerCombatForceRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerCombatForceRsp* PlayerCombatForceRsp::New(::google::protobuf::Arena* arena) const {
  PlayerCombatForceRsp* n = new PlayerCombatForceRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCombatForceRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerCombatForceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_combat_force_map_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_combat_force_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(player_combat_force_));
  _internal_metadata_.Clear();
}

bool PlayerCombatForceRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerCombatForceRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float player_combat_force = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &player_combat_force_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, float> player_combat_force_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          PlayerCombatForceRsp_PlayerCombatForceMapEntry::Parser< ::google::protobuf::internal::MapField<
              PlayerCombatForceRsp_PlayerCombatForceMapEntry,
              ::google::protobuf::uint32, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, float > > parser(&player_combat_force_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerCombatForceRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerCombatForceRsp)
  return false;
#undef DO_
}

void PlayerCombatForceRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerCombatForceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // float player_combat_force = 2;
  if (this->player_combat_force() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->player_combat_force(), output);
  }

  // map<uint32, float> player_combat_force_map = 3;
  if (!this->player_combat_force_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->player_combat_force_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->player_combat_force_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->player_combat_force_map().begin();
          it != this->player_combat_force_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerCombatForceRsp_PlayerCombatForceMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(player_combat_force_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerCombatForceRsp_PlayerCombatForceMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->player_combat_force_map().begin();
          it != this->player_combat_force_map().end(); ++it) {
        entry.reset(player_combat_force_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerCombatForceRsp)
}

::google::protobuf::uint8* PlayerCombatForceRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerCombatForceRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // float player_combat_force = 2;
  if (this->player_combat_force() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->player_combat_force(), target);
  }

  // map<uint32, float> player_combat_force_map = 3;
  if (!this->player_combat_force_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->player_combat_force_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->player_combat_force_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->player_combat_force_map().begin();
          it != this->player_combat_force_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerCombatForceRsp_PlayerCombatForceMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(player_combat_force_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerCombatForceRsp_PlayerCombatForceMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
          it = this->player_combat_force_map().begin();
          it != this->player_combat_force_map().end(); ++it) {
        entry.reset(player_combat_force_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerCombatForceRsp)
  return target;
}

size_t PlayerCombatForceRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerCombatForceRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, float> player_combat_force_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->player_combat_force_map_size());
  {
    ::google::protobuf::scoped_ptr<PlayerCombatForceRsp_PlayerCombatForceMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, float >::const_iterator
        it = this->player_combat_force_map().begin();
        it != this->player_combat_force_map().end(); ++it) {
      entry.reset(player_combat_force_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // float player_combat_force = 2;
  if (this->player_combat_force() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCombatForceRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerCombatForceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCombatForceRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCombatForceRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerCombatForceRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerCombatForceRsp)
    MergeFrom(*source);
  }
}

void PlayerCombatForceRsp::MergeFrom(const PlayerCombatForceRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerCombatForceRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_combat_force_map_.MergeFrom(from.player_combat_force_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.player_combat_force() != 0) {
    set_player_combat_force(from.player_combat_force());
  }
}

void PlayerCombatForceRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerCombatForceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCombatForceRsp::CopyFrom(const PlayerCombatForceRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerCombatForceRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCombatForceRsp::IsInitialized() const {
  return true;
}

void PlayerCombatForceRsp::Swap(PlayerCombatForceRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCombatForceRsp::InternalSwap(PlayerCombatForceRsp* other) {
  using std::swap;
  player_combat_force_map_.Swap(&other->player_combat_force_map_);
  swap(retcode_, other->retcode_);
  swap(player_combat_force_, other->player_combat_force_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCombatForceRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCombatForceRsp

// int32 retcode = 1;
void PlayerCombatForceRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerCombatForceRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCombatForceRsp.retcode)
  return retcode_;
}
void PlayerCombatForceRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCombatForceRsp.retcode)
}

// float player_combat_force = 2;
void PlayerCombatForceRsp::clear_player_combat_force() {
  player_combat_force_ = 0;
}
float PlayerCombatForceRsp::player_combat_force() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCombatForceRsp.player_combat_force)
  return player_combat_force_;
}
void PlayerCombatForceRsp::set_player_combat_force(float value) {
  
  player_combat_force_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCombatForceRsp.player_combat_force)
}

// map<uint32, float> player_combat_force_map = 3;
int PlayerCombatForceRsp::player_combat_force_map_size() const {
  return player_combat_force_map_.size();
}
void PlayerCombatForceRsp::clear_player_combat_force_map() {
  player_combat_force_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
PlayerCombatForceRsp::player_combat_force_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerCombatForceRsp.player_combat_force_map)
  return player_combat_force_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, float >*
PlayerCombatForceRsp::mutable_player_combat_force_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerCombatForceRsp.player_combat_force_map)
  return player_combat_force_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

CheckGameVersionReq::CheckGameVersionReq_ResVersionMapEntry::CheckGameVersionReq_ResVersionMapEntry() {}
CheckGameVersionReq::CheckGameVersionReq_ResVersionMapEntry::CheckGameVersionReq_ResVersionMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata CheckGameVersionReq::CheckGameVersionReq_ResVersionMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[11];
}
void CheckGameVersionReq::CheckGameVersionReq_ResVersionMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void CheckGameVersionReq::CheckGameVersionReq_ResVersionMapEntry::MergeFrom(const CheckGameVersionReq_ResVersionMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

CheckGameVersionReq::CheckGameVersionReq_NextResVersionMapEntry::CheckGameVersionReq_NextResVersionMapEntry() {}
CheckGameVersionReq::CheckGameVersionReq_NextResVersionMapEntry::CheckGameVersionReq_NextResVersionMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata CheckGameVersionReq::CheckGameVersionReq_NextResVersionMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[12];
}
void CheckGameVersionReq::CheckGameVersionReq_NextResVersionMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void CheckGameVersionReq::CheckGameVersionReq_NextResVersionMapEntry::MergeFrom(const CheckGameVersionReq_NextResVersionMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckGameVersionReq::kServerVersionFieldNumber;
const int CheckGameVersionReq::kClientVersionFieldNumber;
const int CheckGameVersionReq::kClientSilenceVersionFieldNumber;
const int CheckGameVersionReq::kResVersionMapFieldNumber;
const int CheckGameVersionReq::kNextResVersionMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckGameVersionReq::CheckGameVersionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CheckGameVersionReq)
}
CheckGameVersionReq::CheckGameVersionReq(const CheckGameVersionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  res_version_map_.MergeFrom(from.res_version_map_);
  next_res_version_map_.MergeFrom(from.next_res_version_map_);
  ::memcpy(&server_version_, &from.server_version_,
    static_cast<size_t>(reinterpret_cast<char*>(&client_silence_version_) -
    reinterpret_cast<char*>(&server_version_)) + sizeof(client_silence_version_));
  // @@protoc_insertion_point(copy_constructor:proto.CheckGameVersionReq)
}

void CheckGameVersionReq::SharedCtor() {
  ::memset(&server_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_silence_version_) -
      reinterpret_cast<char*>(&server_version_)) + sizeof(client_silence_version_));
  _cached_size_ = 0;
}

CheckGameVersionReq::~CheckGameVersionReq() {
  // @@protoc_insertion_point(destructor:proto.CheckGameVersionReq)
  SharedDtor();
}

void CheckGameVersionReq::SharedDtor() {
}

void CheckGameVersionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckGameVersionReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckGameVersionReq& CheckGameVersionReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckGameVersionReq* CheckGameVersionReq::New(::google::protobuf::Arena* arena) const {
  CheckGameVersionReq* n = new CheckGameVersionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckGameVersionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CheckGameVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_version_map_.Clear();
  next_res_version_map_.Clear();
  ::memset(&server_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_silence_version_) -
      reinterpret_cast<char*>(&server_version_)) + sizeof(client_silence_version_));
  _internal_metadata_.Clear();
}

bool CheckGameVersionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CheckGameVersionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 server_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 client_silence_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_silence_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> res_version_map = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          CheckGameVersionReq_ResVersionMapEntry::Parser< ::google::protobuf::internal::MapField<
              CheckGameVersionReq_ResVersionMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&res_version_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> next_res_version_map = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          CheckGameVersionReq_NextResVersionMapEntry::Parser< ::google::protobuf::internal::MapField<
              CheckGameVersionReq_NextResVersionMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&next_res_version_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CheckGameVersionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CheckGameVersionReq)
  return false;
#undef DO_
}

void CheckGameVersionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CheckGameVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 server_version = 1;
  if (this->server_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_version(), output);
  }

  // uint32 client_version = 2;
  if (this->client_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->client_version(), output);
  }

  // uint32 client_silence_version = 3;
  if (this->client_silence_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->client_silence_version(), output);
  }

  // map<uint32, uint32> res_version_map = 4;
  if (!this->res_version_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->res_version_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->res_version_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->res_version_map().begin();
          it != this->res_version_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<CheckGameVersionReq_ResVersionMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(res_version_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<CheckGameVersionReq_ResVersionMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->res_version_map().begin();
          it != this->res_version_map().end(); ++it) {
        entry.reset(res_version_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
      }
    }
  }

  // map<uint32, uint32> next_res_version_map = 5;
  if (!this->next_res_version_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->next_res_version_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->next_res_version_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->next_res_version_map().begin();
          it != this->next_res_version_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<CheckGameVersionReq_NextResVersionMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(next_res_version_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<CheckGameVersionReq_NextResVersionMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->next_res_version_map().begin();
          it != this->next_res_version_map().end(); ++it) {
        entry.reset(next_res_version_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CheckGameVersionReq)
}

::google::protobuf::uint8* CheckGameVersionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CheckGameVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 server_version = 1;
  if (this->server_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_version(), target);
  }

  // uint32 client_version = 2;
  if (this->client_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->client_version(), target);
  }

  // uint32 client_silence_version = 3;
  if (this->client_silence_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->client_silence_version(), target);
  }

  // map<uint32, uint32> res_version_map = 4;
  if (!this->res_version_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->res_version_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->res_version_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->res_version_map().begin();
          it != this->res_version_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<CheckGameVersionReq_ResVersionMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(res_version_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<CheckGameVersionReq_ResVersionMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->res_version_map().begin();
          it != this->res_version_map().end(); ++it) {
        entry.reset(res_version_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, uint32> next_res_version_map = 5;
  if (!this->next_res_version_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->next_res_version_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->next_res_version_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->next_res_version_map().begin();
          it != this->next_res_version_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<CheckGameVersionReq_NextResVersionMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(next_res_version_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<CheckGameVersionReq_NextResVersionMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->next_res_version_map().begin();
          it != this->next_res_version_map().end(); ++it) {
        entry.reset(next_res_version_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CheckGameVersionReq)
  return target;
}

size_t CheckGameVersionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CheckGameVersionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> res_version_map = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->res_version_map_size());
  {
    ::google::protobuf::scoped_ptr<CheckGameVersionReq_ResVersionMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->res_version_map().begin();
        it != this->res_version_map().end(); ++it) {
      entry.reset(res_version_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, uint32> next_res_version_map = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->next_res_version_map_size());
  {
    ::google::protobuf::scoped_ptr<CheckGameVersionReq_NextResVersionMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->next_res_version_map().begin();
        it != this->next_res_version_map().end(); ++it) {
      entry.reset(next_res_version_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint32 server_version = 1;
  if (this->server_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->server_version());
  }

  // uint32 client_version = 2;
  if (this->client_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_version());
  }

  // uint32 client_silence_version = 3;
  if (this->client_silence_version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->client_silence_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckGameVersionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CheckGameVersionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckGameVersionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckGameVersionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CheckGameVersionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CheckGameVersionReq)
    MergeFrom(*source);
  }
}

void CheckGameVersionReq::MergeFrom(const CheckGameVersionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CheckGameVersionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  res_version_map_.MergeFrom(from.res_version_map_);
  next_res_version_map_.MergeFrom(from.next_res_version_map_);
  if (from.server_version() != 0) {
    set_server_version(from.server_version());
  }
  if (from.client_version() != 0) {
    set_client_version(from.client_version());
  }
  if (from.client_silence_version() != 0) {
    set_client_silence_version(from.client_silence_version());
  }
}

void CheckGameVersionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CheckGameVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckGameVersionReq::CopyFrom(const CheckGameVersionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CheckGameVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckGameVersionReq::IsInitialized() const {
  return true;
}

void CheckGameVersionReq::Swap(CheckGameVersionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckGameVersionReq::InternalSwap(CheckGameVersionReq* other) {
  using std::swap;
  res_version_map_.Swap(&other->res_version_map_);
  next_res_version_map_.Swap(&other->next_res_version_map_);
  swap(server_version_, other->server_version_);
  swap(client_version_, other->client_version_);
  swap(client_silence_version_, other->client_silence_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckGameVersionReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckGameVersionReq

// uint32 server_version = 1;
void CheckGameVersionReq::clear_server_version() {
  server_version_ = 0u;
}
::google::protobuf::uint32 CheckGameVersionReq::server_version() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionReq.server_version)
  return server_version_;
}
void CheckGameVersionReq::set_server_version(::google::protobuf::uint32 value) {
  
  server_version_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameVersionReq.server_version)
}

// uint32 client_version = 2;
void CheckGameVersionReq::clear_client_version() {
  client_version_ = 0u;
}
::google::protobuf::uint32 CheckGameVersionReq::client_version() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionReq.client_version)
  return client_version_;
}
void CheckGameVersionReq::set_client_version(::google::protobuf::uint32 value) {
  
  client_version_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameVersionReq.client_version)
}

// uint32 client_silence_version = 3;
void CheckGameVersionReq::clear_client_silence_version() {
  client_silence_version_ = 0u;
}
::google::protobuf::uint32 CheckGameVersionReq::client_silence_version() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionReq.client_silence_version)
  return client_silence_version_;
}
void CheckGameVersionReq::set_client_silence_version(::google::protobuf::uint32 value) {
  
  client_silence_version_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameVersionReq.client_silence_version)
}

// map<uint32, uint32> res_version_map = 4;
int CheckGameVersionReq::res_version_map_size() const {
  return res_version_map_.size();
}
void CheckGameVersionReq::clear_res_version_map() {
  res_version_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
CheckGameVersionReq::res_version_map() const {
  // @@protoc_insertion_point(field_map:proto.CheckGameVersionReq.res_version_map)
  return res_version_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
CheckGameVersionReq::mutable_res_version_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.CheckGameVersionReq.res_version_map)
  return res_version_map_.MutableMap();
}

// map<uint32, uint32> next_res_version_map = 5;
int CheckGameVersionReq::next_res_version_map_size() const {
  return next_res_version_map_.size();
}
void CheckGameVersionReq::clear_next_res_version_map() {
  next_res_version_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
CheckGameVersionReq::next_res_version_map() const {
  // @@protoc_insertion_point(field_map:proto.CheckGameVersionReq.next_res_version_map)
  return next_res_version_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
CheckGameVersionReq::mutable_next_res_version_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.CheckGameVersionReq.next_res_version_map)
  return next_res_version_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameVersionResult::kVersionFieldNumber;
const int GameVersionResult::kWrongNumFieldNumber;
const int GameVersionResult::kWrongNameListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameVersionResult::GameVersionResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GameVersionResult)
}
GameVersionResult::GameVersionResult(const GameVersionResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      wrong_name_list_(from.wrong_name_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&wrong_num_) -
    reinterpret_cast<char*>(&version_)) + sizeof(wrong_num_));
  // @@protoc_insertion_point(copy_constructor:proto.GameVersionResult)
}

void GameVersionResult::SharedCtor() {
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wrong_num_) -
      reinterpret_cast<char*>(&version_)) + sizeof(wrong_num_));
  _cached_size_ = 0;
}

GameVersionResult::~GameVersionResult() {
  // @@protoc_insertion_point(destructor:proto.GameVersionResult)
  SharedDtor();
}

void GameVersionResult::SharedDtor() {
}

void GameVersionResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameVersionResult::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameVersionResult& GameVersionResult::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameVersionResult* GameVersionResult::New(::google::protobuf::Arena* arena) const {
  GameVersionResult* n = new GameVersionResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameVersionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GameVersionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  wrong_name_list_.Clear();
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wrong_num_) -
      reinterpret_cast<char*>(&version_)) + sizeof(wrong_num_));
  _internal_metadata_.Clear();
}

bool GameVersionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GameVersionResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 wrong_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wrong_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 wrong_name_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_wrong_name_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26u, input, this->mutable_wrong_name_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GameVersionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GameVersionResult)
  return false;
#undef DO_
}

void GameVersionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GameVersionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // uint32 wrong_num = 2;
  if (this->wrong_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->wrong_num(), output);
  }

  // repeated uint32 wrong_name_list = 3;
  if (this->wrong_name_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _wrong_name_list_cached_byte_size_));
  }
  for (int i = 0, n = this->wrong_name_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->wrong_name_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GameVersionResult)
}

::google::protobuf::uint8* GameVersionResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GameVersionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 version = 1;
  if (this->version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // uint32 wrong_num = 2;
  if (this->wrong_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->wrong_num(), target);
  }

  // repeated uint32 wrong_name_list = 3;
  if (this->wrong_name_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _wrong_name_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->wrong_name_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GameVersionResult)
  return target;
}

size_t GameVersionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GameVersionResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 wrong_name_list = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->wrong_name_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _wrong_name_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->version());
  }

  // uint32 wrong_num = 2;
  if (this->wrong_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wrong_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameVersionResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GameVersionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const GameVersionResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameVersionResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GameVersionResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GameVersionResult)
    MergeFrom(*source);
  }
}

void GameVersionResult::MergeFrom(const GameVersionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GameVersionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  wrong_name_list_.MergeFrom(from.wrong_name_list_);
  if (from.version() != 0) {
    set_version(from.version());
  }
  if (from.wrong_num() != 0) {
    set_wrong_num(from.wrong_num());
  }
}

void GameVersionResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GameVersionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameVersionResult::CopyFrom(const GameVersionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GameVersionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameVersionResult::IsInitialized() const {
  return true;
}

void GameVersionResult::Swap(GameVersionResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameVersionResult::InternalSwap(GameVersionResult* other) {
  using std::swap;
  wrong_name_list_.InternalSwap(&other->wrong_name_list_);
  swap(version_, other->version_);
  swap(wrong_num_, other->wrong_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameVersionResult::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameVersionResult

// uint32 version = 1;
void GameVersionResult::clear_version() {
  version_ = 0u;
}
::google::protobuf::uint32 GameVersionResult::version() const {
  // @@protoc_insertion_point(field_get:proto.GameVersionResult.version)
  return version_;
}
void GameVersionResult::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.GameVersionResult.version)
}

// uint32 wrong_num = 2;
void GameVersionResult::clear_wrong_num() {
  wrong_num_ = 0u;
}
::google::protobuf::uint32 GameVersionResult::wrong_num() const {
  // @@protoc_insertion_point(field_get:proto.GameVersionResult.wrong_num)
  return wrong_num_;
}
void GameVersionResult::set_wrong_num(::google::protobuf::uint32 value) {
  
  wrong_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GameVersionResult.wrong_num)
}

// repeated uint32 wrong_name_list = 3;
int GameVersionResult::wrong_name_list_size() const {
  return wrong_name_list_.size();
}
void GameVersionResult::clear_wrong_name_list() {
  wrong_name_list_.Clear();
}
::google::protobuf::uint32 GameVersionResult::wrong_name_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GameVersionResult.wrong_name_list)
  return wrong_name_list_.Get(index);
}
void GameVersionResult::set_wrong_name_list(int index, ::google::protobuf::uint32 value) {
  wrong_name_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GameVersionResult.wrong_name_list)
}
void GameVersionResult::add_wrong_name_list(::google::protobuf::uint32 value) {
  wrong_name_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GameVersionResult.wrong_name_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GameVersionResult::wrong_name_list() const {
  // @@protoc_insertion_point(field_list:proto.GameVersionResult.wrong_name_list)
  return wrong_name_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GameVersionResult::mutable_wrong_name_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GameVersionResult.wrong_name_list)
  return &wrong_name_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

CheckGameVersionRsp::CheckGameVersionRsp_ResVersionResultMapEntry::CheckGameVersionRsp_ResVersionResultMapEntry() {}
CheckGameVersionRsp::CheckGameVersionRsp_ResVersionResultMapEntry::CheckGameVersionRsp_ResVersionResultMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata CheckGameVersionRsp::CheckGameVersionRsp_ResVersionResultMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[15];
}
void CheckGameVersionRsp::CheckGameVersionRsp_ResVersionResultMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void CheckGameVersionRsp::CheckGameVersionRsp_ResVersionResultMapEntry::MergeFrom(const CheckGameVersionRsp_ResVersionResultMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

CheckGameVersionRsp::CheckGameVersionRsp_NextResVersionResultMapEntry::CheckGameVersionRsp_NextResVersionResultMapEntry() {}
CheckGameVersionRsp::CheckGameVersionRsp_NextResVersionResultMapEntry::CheckGameVersionRsp_NextResVersionResultMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata CheckGameVersionRsp::CheckGameVersionRsp_NextResVersionResultMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[16];
}
void CheckGameVersionRsp::CheckGameVersionRsp_NextResVersionResultMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void CheckGameVersionRsp::CheckGameVersionRsp_NextResVersionResultMapEntry::MergeFrom(const CheckGameVersionRsp_NextResVersionResultMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckGameVersionRsp::kRetcodeFieldNumber;
const int CheckGameVersionRsp::kTotalGameFieldNumber;
const int CheckGameVersionRsp::kServerVersionResultFieldNumber;
const int CheckGameVersionRsp::kClientVersionResultFieldNumber;
const int CheckGameVersionRsp::kClientSilenceVersionResultFieldNumber;
const int CheckGameVersionRsp::kResVersionResultMapFieldNumber;
const int CheckGameVersionRsp::kNextResVersionResultMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckGameVersionRsp::CheckGameVersionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CheckGameVersionRsp)
}
CheckGameVersionRsp::CheckGameVersionRsp(const CheckGameVersionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  res_version_result_map_.MergeFrom(from.res_version_result_map_);
  next_res_version_result_map_.MergeFrom(from.next_res_version_result_map_);
  if (from.has_server_version_result()) {
    server_version_result_ = new ::proto::GameVersionResult(*from.server_version_result_);
  } else {
    server_version_result_ = NULL;
  }
  if (from.has_client_version_result()) {
    client_version_result_ = new ::proto::GameVersionResult(*from.client_version_result_);
  } else {
    client_version_result_ = NULL;
  }
  if (from.has_client_silence_version_result()) {
    client_silence_version_result_ = new ::proto::GameVersionResult(*from.client_silence_version_result_);
  } else {
    client_silence_version_result_ = NULL;
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_game_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(total_game_));
  // @@protoc_insertion_point(copy_constructor:proto.CheckGameVersionRsp)
}

void CheckGameVersionRsp::SharedCtor() {
  ::memset(&server_version_result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_game_) -
      reinterpret_cast<char*>(&server_version_result_)) + sizeof(total_game_));
  _cached_size_ = 0;
}

CheckGameVersionRsp::~CheckGameVersionRsp() {
  // @@protoc_insertion_point(destructor:proto.CheckGameVersionRsp)
  SharedDtor();
}

void CheckGameVersionRsp::SharedDtor() {
  if (this != internal_default_instance()) delete server_version_result_;
  if (this != internal_default_instance()) delete client_version_result_;
  if (this != internal_default_instance()) delete client_silence_version_result_;
}

void CheckGameVersionRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckGameVersionRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckGameVersionRsp& CheckGameVersionRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckGameVersionRsp* CheckGameVersionRsp::New(::google::protobuf::Arena* arena) const {
  CheckGameVersionRsp* n = new CheckGameVersionRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckGameVersionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CheckGameVersionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_version_result_map_.Clear();
  next_res_version_result_map_.Clear();
  if (GetArenaNoVirtual() == NULL && server_version_result_ != NULL) {
    delete server_version_result_;
  }
  server_version_result_ = NULL;
  if (GetArenaNoVirtual() == NULL && client_version_result_ != NULL) {
    delete client_version_result_;
  }
  client_version_result_ = NULL;
  if (GetArenaNoVirtual() == NULL && client_silence_version_result_ != NULL) {
    delete client_silence_version_result_;
  }
  client_silence_version_result_ = NULL;
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_game_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(total_game_));
  _internal_metadata_.Clear();
}

bool CheckGameVersionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CheckGameVersionRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_game = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_game_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GameVersionResult server_version_result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_server_version_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GameVersionResult client_version_result = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_client_version_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.GameVersionResult client_silence_version_result = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_client_silence_version_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.GameVersionResult> res_version_result_map = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          CheckGameVersionRsp_ResVersionResultMapEntry::Parser< ::google::protobuf::internal::MapField<
              CheckGameVersionRsp_ResVersionResultMapEntry,
              ::google::protobuf::uint32, ::proto::GameVersionResult,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult > > parser(&res_version_result_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, .proto.GameVersionResult> next_res_version_result_map = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          CheckGameVersionRsp_NextResVersionResultMapEntry::Parser< ::google::protobuf::internal::MapField<
              CheckGameVersionRsp_NextResVersionResultMapEntry,
              ::google::protobuf::uint32, ::proto::GameVersionResult,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult > > parser(&next_res_version_result_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CheckGameVersionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CheckGameVersionRsp)
  return false;
#undef DO_
}

void CheckGameVersionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CheckGameVersionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 total_game = 2;
  if (this->total_game() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total_game(), output);
  }

  // .proto.GameVersionResult server_version_result = 3;
  if (this->has_server_version_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->server_version_result_, output);
  }

  // .proto.GameVersionResult client_version_result = 4;
  if (this->has_client_version_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->client_version_result_, output);
  }

  // .proto.GameVersionResult client_silence_version_result = 5;
  if (this->has_client_silence_version_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->client_silence_version_result_, output);
  }

  // map<uint32, .proto.GameVersionResult> res_version_result_map = 6;
  if (!this->res_version_result_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->res_version_result_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->res_version_result_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_iterator
          it = this->res_version_result_map().begin();
          it != this->res_version_result_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<CheckGameVersionRsp_ResVersionResultMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(res_version_result_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<CheckGameVersionRsp_ResVersionResultMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_iterator
          it = this->res_version_result_map().begin();
          it != this->res_version_result_map().end(); ++it) {
        entry.reset(res_version_result_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
      }
    }
  }

  // map<uint32, .proto.GameVersionResult> next_res_version_result_map = 7;
  if (!this->next_res_version_result_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->next_res_version_result_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->next_res_version_result_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_iterator
          it = this->next_res_version_result_map().begin();
          it != this->next_res_version_result_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<CheckGameVersionRsp_NextResVersionResultMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(next_res_version_result_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<CheckGameVersionRsp_NextResVersionResultMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_iterator
          it = this->next_res_version_result_map().begin();
          it != this->next_res_version_result_map().end(); ++it) {
        entry.reset(next_res_version_result_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CheckGameVersionRsp)
}

::google::protobuf::uint8* CheckGameVersionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CheckGameVersionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 total_game = 2;
  if (this->total_game() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total_game(), target);
  }

  // .proto.GameVersionResult server_version_result = 3;
  if (this->has_server_version_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->server_version_result_, deterministic, target);
  }

  // .proto.GameVersionResult client_version_result = 4;
  if (this->has_client_version_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->client_version_result_, deterministic, target);
  }

  // .proto.GameVersionResult client_silence_version_result = 5;
  if (this->has_client_silence_version_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->client_silence_version_result_, deterministic, target);
  }

  // map<uint32, .proto.GameVersionResult> res_version_result_map = 6;
  if (!this->res_version_result_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->res_version_result_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->res_version_result_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_iterator
          it = this->res_version_result_map().begin();
          it != this->res_version_result_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<CheckGameVersionRsp_ResVersionResultMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(res_version_result_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<CheckGameVersionRsp_ResVersionResultMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_iterator
          it = this->res_version_result_map().begin();
          it != this->res_version_result_map().end(); ++it) {
        entry.reset(res_version_result_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
      }
    }
  }

  // map<uint32, .proto.GameVersionResult> next_res_version_result_map = 7;
  if (!this->next_res_version_result_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->next_res_version_result_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->next_res_version_result_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_iterator
          it = this->next_res_version_result_map().begin();
          it != this->next_res_version_result_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<CheckGameVersionRsp_NextResVersionResultMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(next_res_version_result_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<CheckGameVersionRsp_NextResVersionResultMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_iterator
          it = this->next_res_version_result_map().begin();
          it != this->next_res_version_result_map().end(); ++it) {
        entry.reset(next_res_version_result_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CheckGameVersionRsp)
  return target;
}

size_t CheckGameVersionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CheckGameVersionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto.GameVersionResult> res_version_result_map = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->res_version_result_map_size());
  {
    ::google::protobuf::scoped_ptr<CheckGameVersionRsp_ResVersionResultMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_iterator
        it = this->res_version_result_map().begin();
        it != this->res_version_result_map().end(); ++it) {
      entry.reset(res_version_result_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<uint32, .proto.GameVersionResult> next_res_version_result_map = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->next_res_version_result_map_size());
  {
    ::google::protobuf::scoped_ptr<CheckGameVersionRsp_NextResVersionResultMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >::const_iterator
        it = this->next_res_version_result_map().begin();
        it != this->next_res_version_result_map().end(); ++it) {
      entry.reset(next_res_version_result_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .proto.GameVersionResult server_version_result = 3;
  if (this->has_server_version_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->server_version_result_);
  }

  // .proto.GameVersionResult client_version_result = 4;
  if (this->has_client_version_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->client_version_result_);
  }

  // .proto.GameVersionResult client_silence_version_result = 5;
  if (this->has_client_silence_version_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->client_silence_version_result_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 total_game = 2;
  if (this->total_game() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_game());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckGameVersionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CheckGameVersionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckGameVersionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckGameVersionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CheckGameVersionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CheckGameVersionRsp)
    MergeFrom(*source);
  }
}

void CheckGameVersionRsp::MergeFrom(const CheckGameVersionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CheckGameVersionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  res_version_result_map_.MergeFrom(from.res_version_result_map_);
  next_res_version_result_map_.MergeFrom(from.next_res_version_result_map_);
  if (from.has_server_version_result()) {
    mutable_server_version_result()->::proto::GameVersionResult::MergeFrom(from.server_version_result());
  }
  if (from.has_client_version_result()) {
    mutable_client_version_result()->::proto::GameVersionResult::MergeFrom(from.client_version_result());
  }
  if (from.has_client_silence_version_result()) {
    mutable_client_silence_version_result()->::proto::GameVersionResult::MergeFrom(from.client_silence_version_result());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.total_game() != 0) {
    set_total_game(from.total_game());
  }
}

void CheckGameVersionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CheckGameVersionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckGameVersionRsp::CopyFrom(const CheckGameVersionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CheckGameVersionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckGameVersionRsp::IsInitialized() const {
  return true;
}

void CheckGameVersionRsp::Swap(CheckGameVersionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckGameVersionRsp::InternalSwap(CheckGameVersionRsp* other) {
  using std::swap;
  res_version_result_map_.Swap(&other->res_version_result_map_);
  next_res_version_result_map_.Swap(&other->next_res_version_result_map_);
  swap(server_version_result_, other->server_version_result_);
  swap(client_version_result_, other->client_version_result_);
  swap(client_silence_version_result_, other->client_silence_version_result_);
  swap(retcode_, other->retcode_);
  swap(total_game_, other->total_game_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckGameVersionRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckGameVersionRsp

// int32 retcode = 1;
void CheckGameVersionRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 CheckGameVersionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionRsp.retcode)
  return retcode_;
}
void CheckGameVersionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameVersionRsp.retcode)
}

// uint32 total_game = 2;
void CheckGameVersionRsp::clear_total_game() {
  total_game_ = 0u;
}
::google::protobuf::uint32 CheckGameVersionRsp::total_game() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionRsp.total_game)
  return total_game_;
}
void CheckGameVersionRsp::set_total_game(::google::protobuf::uint32 value) {
  
  total_game_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameVersionRsp.total_game)
}

// .proto.GameVersionResult server_version_result = 3;
bool CheckGameVersionRsp::has_server_version_result() const {
  return this != internal_default_instance() && server_version_result_ != NULL;
}
void CheckGameVersionRsp::clear_server_version_result() {
  if (GetArenaNoVirtual() == NULL && server_version_result_ != NULL) delete server_version_result_;
  server_version_result_ = NULL;
}
const ::proto::GameVersionResult& CheckGameVersionRsp::server_version_result() const {
  const ::proto::GameVersionResult* p = server_version_result_;
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionRsp.server_version_result)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GameVersionResult*>(
      &::proto::_GameVersionResult_default_instance_);
}
::proto::GameVersionResult* CheckGameVersionRsp::mutable_server_version_result() {
  
  if (server_version_result_ == NULL) {
    server_version_result_ = new ::proto::GameVersionResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.CheckGameVersionRsp.server_version_result)
  return server_version_result_;
}
::proto::GameVersionResult* CheckGameVersionRsp::release_server_version_result() {
  // @@protoc_insertion_point(field_release:proto.CheckGameVersionRsp.server_version_result)
  
  ::proto::GameVersionResult* temp = server_version_result_;
  server_version_result_ = NULL;
  return temp;
}
void CheckGameVersionRsp::set_allocated_server_version_result(::proto::GameVersionResult* server_version_result) {
  delete server_version_result_;
  server_version_result_ = server_version_result;
  if (server_version_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CheckGameVersionRsp.server_version_result)
}

// .proto.GameVersionResult client_version_result = 4;
bool CheckGameVersionRsp::has_client_version_result() const {
  return this != internal_default_instance() && client_version_result_ != NULL;
}
void CheckGameVersionRsp::clear_client_version_result() {
  if (GetArenaNoVirtual() == NULL && client_version_result_ != NULL) delete client_version_result_;
  client_version_result_ = NULL;
}
const ::proto::GameVersionResult& CheckGameVersionRsp::client_version_result() const {
  const ::proto::GameVersionResult* p = client_version_result_;
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionRsp.client_version_result)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GameVersionResult*>(
      &::proto::_GameVersionResult_default_instance_);
}
::proto::GameVersionResult* CheckGameVersionRsp::mutable_client_version_result() {
  
  if (client_version_result_ == NULL) {
    client_version_result_ = new ::proto::GameVersionResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.CheckGameVersionRsp.client_version_result)
  return client_version_result_;
}
::proto::GameVersionResult* CheckGameVersionRsp::release_client_version_result() {
  // @@protoc_insertion_point(field_release:proto.CheckGameVersionRsp.client_version_result)
  
  ::proto::GameVersionResult* temp = client_version_result_;
  client_version_result_ = NULL;
  return temp;
}
void CheckGameVersionRsp::set_allocated_client_version_result(::proto::GameVersionResult* client_version_result) {
  delete client_version_result_;
  client_version_result_ = client_version_result;
  if (client_version_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CheckGameVersionRsp.client_version_result)
}

// .proto.GameVersionResult client_silence_version_result = 5;
bool CheckGameVersionRsp::has_client_silence_version_result() const {
  return this != internal_default_instance() && client_silence_version_result_ != NULL;
}
void CheckGameVersionRsp::clear_client_silence_version_result() {
  if (GetArenaNoVirtual() == NULL && client_silence_version_result_ != NULL) delete client_silence_version_result_;
  client_silence_version_result_ = NULL;
}
const ::proto::GameVersionResult& CheckGameVersionRsp::client_silence_version_result() const {
  const ::proto::GameVersionResult* p = client_silence_version_result_;
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionRsp.client_silence_version_result)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GameVersionResult*>(
      &::proto::_GameVersionResult_default_instance_);
}
::proto::GameVersionResult* CheckGameVersionRsp::mutable_client_silence_version_result() {
  
  if (client_silence_version_result_ == NULL) {
    client_silence_version_result_ = new ::proto::GameVersionResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.CheckGameVersionRsp.client_silence_version_result)
  return client_silence_version_result_;
}
::proto::GameVersionResult* CheckGameVersionRsp::release_client_silence_version_result() {
  // @@protoc_insertion_point(field_release:proto.CheckGameVersionRsp.client_silence_version_result)
  
  ::proto::GameVersionResult* temp = client_silence_version_result_;
  client_silence_version_result_ = NULL;
  return temp;
}
void CheckGameVersionRsp::set_allocated_client_silence_version_result(::proto::GameVersionResult* client_silence_version_result) {
  delete client_silence_version_result_;
  client_silence_version_result_ = client_silence_version_result;
  if (client_silence_version_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CheckGameVersionRsp.client_silence_version_result)
}

// map<uint32, .proto.GameVersionResult> res_version_result_map = 6;
int CheckGameVersionRsp::res_version_result_map_size() const {
  return res_version_result_map_.size();
}
void CheckGameVersionRsp::clear_res_version_result_map() {
  res_version_result_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >&
CheckGameVersionRsp::res_version_result_map() const {
  // @@protoc_insertion_point(field_map:proto.CheckGameVersionRsp.res_version_result_map)
  return res_version_result_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >*
CheckGameVersionRsp::mutable_res_version_result_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.CheckGameVersionRsp.res_version_result_map)
  return res_version_result_map_.MutableMap();
}

// map<uint32, .proto.GameVersionResult> next_res_version_result_map = 7;
int CheckGameVersionRsp::next_res_version_result_map_size() const {
  return next_res_version_result_map_.size();
}
void CheckGameVersionRsp::clear_next_res_version_result_map() {
  next_res_version_result_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >&
CheckGameVersionRsp::next_res_version_result_map() const {
  // @@protoc_insertion_point(field_map:proto.CheckGameVersionRsp.next_res_version_result_map)
  return next_res_version_result_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >*
CheckGameVersionRsp::mutable_next_res_version_result_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.CheckGameVersionRsp.next_res_version_result_map)
  return next_res_version_result_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlatformPlayerNumReq::PlatformPlayerNumReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlatformPlayerNumReq)
}
PlatformPlayerNumReq::PlatformPlayerNumReq(const PlatformPlayerNumReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PlatformPlayerNumReq)
}

void PlatformPlayerNumReq::SharedCtor() {
  _cached_size_ = 0;
}

PlatformPlayerNumReq::~PlatformPlayerNumReq() {
  // @@protoc_insertion_point(destructor:proto.PlatformPlayerNumReq)
  SharedDtor();
}

void PlatformPlayerNumReq::SharedDtor() {
}

void PlatformPlayerNumReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatformPlayerNumReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlatformPlayerNumReq& PlatformPlayerNumReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlatformPlayerNumReq* PlatformPlayerNumReq::New(::google::protobuf::Arena* arena) const {
  PlatformPlayerNumReq* n = new PlatformPlayerNumReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlatformPlayerNumReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlatformPlayerNumReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PlatformPlayerNumReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlatformPlayerNumReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlatformPlayerNumReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlatformPlayerNumReq)
  return false;
#undef DO_
}

void PlatformPlayerNumReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlatformPlayerNumReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlatformPlayerNumReq)
}

::google::protobuf::uint8* PlatformPlayerNumReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlatformPlayerNumReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlatformPlayerNumReq)
  return target;
}

size_t PlatformPlayerNumReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlatformPlayerNumReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatformPlayerNumReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlatformPlayerNumReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformPlayerNumReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlatformPlayerNumReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlatformPlayerNumReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlatformPlayerNumReq)
    MergeFrom(*source);
  }
}

void PlatformPlayerNumReq::MergeFrom(const PlatformPlayerNumReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlatformPlayerNumReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PlatformPlayerNumReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlatformPlayerNumReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformPlayerNumReq::CopyFrom(const PlatformPlayerNumReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlatformPlayerNumReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformPlayerNumReq::IsInitialized() const {
  return true;
}

void PlatformPlayerNumReq::Swap(PlatformPlayerNumReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlatformPlayerNumReq::InternalSwap(PlatformPlayerNumReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlatformPlayerNumReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlatformPlayerNumReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

PlatformPlayerNumRsp::PlatformPlayerNumRsp_PlatformPlayerNumMapEntry::PlatformPlayerNumRsp_PlatformPlayerNumMapEntry() {}
PlatformPlayerNumRsp::PlatformPlayerNumRsp_PlatformPlayerNumMapEntry::PlatformPlayerNumRsp_PlatformPlayerNumMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata PlatformPlayerNumRsp::PlatformPlayerNumRsp_PlatformPlayerNumMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[19];
}
void PlatformPlayerNumRsp::PlatformPlayerNumRsp_PlatformPlayerNumMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void PlatformPlayerNumRsp::PlatformPlayerNumRsp_PlatformPlayerNumMapEntry::MergeFrom(const PlatformPlayerNumRsp_PlatformPlayerNumMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlatformPlayerNumRsp::kRetcodeFieldNumber;
const int PlatformPlayerNumRsp::kOnlinePlayerNumFieldNumber;
const int PlatformPlayerNumRsp::kPlatformPlayerNumMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlatformPlayerNumRsp::PlatformPlayerNumRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlatformPlayerNumRsp)
}
PlatformPlayerNumRsp::PlatformPlayerNumRsp(const PlatformPlayerNumRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platform_player_num_map_.MergeFrom(from.platform_player_num_map_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&online_player_num_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(online_player_num_));
  // @@protoc_insertion_point(copy_constructor:proto.PlatformPlayerNumRsp)
}

void PlatformPlayerNumRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&online_player_num_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(online_player_num_));
  _cached_size_ = 0;
}

PlatformPlayerNumRsp::~PlatformPlayerNumRsp() {
  // @@protoc_insertion_point(destructor:proto.PlatformPlayerNumRsp)
  SharedDtor();
}

void PlatformPlayerNumRsp::SharedDtor() {
}

void PlatformPlayerNumRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatformPlayerNumRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlatformPlayerNumRsp& PlatformPlayerNumRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlatformPlayerNumRsp* PlatformPlayerNumRsp::New(::google::protobuf::Arena* arena) const {
  PlatformPlayerNumRsp* n = new PlatformPlayerNumRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlatformPlayerNumRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlatformPlayerNumRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  platform_player_num_map_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&online_player_num_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(online_player_num_));
  _internal_metadata_.Clear();
}

bool PlatformPlayerNumRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlatformPlayerNumRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 online_player_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &online_player_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> platform_player_num_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          PlatformPlayerNumRsp_PlatformPlayerNumMapEntry::Parser< ::google::protobuf::internal::MapField<
              PlatformPlayerNumRsp_PlatformPlayerNumMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&platform_player_num_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlatformPlayerNumRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlatformPlayerNumRsp)
  return false;
#undef DO_
}

void PlatformPlayerNumRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlatformPlayerNumRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 online_player_num = 2;
  if (this->online_player_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->online_player_num(), output);
  }

  // map<uint32, uint32> platform_player_num_map = 3;
  if (!this->platform_player_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->platform_player_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->platform_player_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->platform_player_num_map().begin();
          it != this->platform_player_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlatformPlayerNumRsp_PlatformPlayerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(platform_player_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlatformPlayerNumRsp_PlatformPlayerNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->platform_player_num_map().begin();
          it != this->platform_player_num_map().end(); ++it) {
        entry.reset(platform_player_num_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlatformPlayerNumRsp)
}

::google::protobuf::uint8* PlatformPlayerNumRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlatformPlayerNumRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 online_player_num = 2;
  if (this->online_player_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->online_player_num(), target);
  }

  // map<uint32, uint32> platform_player_num_map = 3;
  if (!this->platform_player_num_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->platform_player_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->platform_player_num_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->platform_player_num_map().begin();
          it != this->platform_player_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlatformPlayerNumRsp_PlatformPlayerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(platform_player_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<PlatformPlayerNumRsp_PlatformPlayerNumMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->platform_player_num_map().begin();
          it != this->platform_player_num_map().end(); ++it) {
        entry.reset(platform_player_num_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlatformPlayerNumRsp)
  return target;
}

size_t PlatformPlayerNumRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlatformPlayerNumRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> platform_player_num_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->platform_player_num_map_size());
  {
    ::google::protobuf::scoped_ptr<PlatformPlayerNumRsp_PlatformPlayerNumMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->platform_player_num_map().begin();
        it != this->platform_player_num_map().end(); ++it) {
      entry.reset(platform_player_num_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 online_player_num = 2;
  if (this->online_player_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->online_player_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatformPlayerNumRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlatformPlayerNumRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformPlayerNumRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlatformPlayerNumRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlatformPlayerNumRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlatformPlayerNumRsp)
    MergeFrom(*source);
  }
}

void PlatformPlayerNumRsp::MergeFrom(const PlatformPlayerNumRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlatformPlayerNumRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  platform_player_num_map_.MergeFrom(from.platform_player_num_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.online_player_num() != 0) {
    set_online_player_num(from.online_player_num());
  }
}

void PlatformPlayerNumRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlatformPlayerNumRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformPlayerNumRsp::CopyFrom(const PlatformPlayerNumRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlatformPlayerNumRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformPlayerNumRsp::IsInitialized() const {
  return true;
}

void PlatformPlayerNumRsp::Swap(PlatformPlayerNumRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlatformPlayerNumRsp::InternalSwap(PlatformPlayerNumRsp* other) {
  using std::swap;
  platform_player_num_map_.Swap(&other->platform_player_num_map_);
  swap(retcode_, other->retcode_);
  swap(online_player_num_, other->online_player_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlatformPlayerNumRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlatformPlayerNumRsp

// int32 retcode = 1;
void PlatformPlayerNumRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlatformPlayerNumRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlatformPlayerNumRsp.retcode)
  return retcode_;
}
void PlatformPlayerNumRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformPlayerNumRsp.retcode)
}

// uint32 online_player_num = 2;
void PlatformPlayerNumRsp::clear_online_player_num() {
  online_player_num_ = 0u;
}
::google::protobuf::uint32 PlatformPlayerNumRsp::online_player_num() const {
  // @@protoc_insertion_point(field_get:proto.PlatformPlayerNumRsp.online_player_num)
  return online_player_num_;
}
void PlatformPlayerNumRsp::set_online_player_num(::google::protobuf::uint32 value) {
  
  online_player_num_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformPlayerNumRsp.online_player_num)
}

// map<uint32, uint32> platform_player_num_map = 3;
int PlatformPlayerNumRsp::platform_player_num_map_size() const {
  return platform_player_num_map_.size();
}
void PlatformPlayerNumRsp::clear_platform_player_num_map() {
  platform_player_num_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
PlatformPlayerNumRsp::platform_player_num_map() const {
  // @@protoc_insertion_point(field_map:proto.PlatformPlayerNumRsp.platform_player_num_map)
  return platform_player_num_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
PlatformPlayerNumRsp::mutable_platform_player_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlatformPlayerNumRsp.platform_player_num_map)
  return platform_player_num_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerMemBasicData::kNicknameFieldNumber;
const int PlayerMemBasicData::kLevelFieldNumber;
const int PlayerMemBasicData::kExpFieldNumber;
const int PlayerMemBasicData::kScoinFieldNumber;
const int PlayerMemBasicData::kHcoinFieldNumber;
const int PlayerMemBasicData::kLastLoginFieldNumber;
const int PlayerMemBasicData::kProfilePictureFieldNumber;
const int PlayerMemBasicData::kRegisterTimeFieldNumber;
const int PlayerMemBasicData::kGenderTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerMemBasicData::PlayerMemBasicData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerMemBasicData)
}
PlayerMemBasicData::PlayerMemBasicData(const PlayerMemBasicData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.has_profile_picture()) {
    profile_picture_ = new ::proto::ProfilePicture(*from.profile_picture_);
  } else {
    profile_picture_ = NULL;
  }
  ::memcpy(&level_, &from.level_,
    static_cast<size_t>(reinterpret_cast<char*>(&gender_type_) -
    reinterpret_cast<char*>(&level_)) + sizeof(gender_type_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerMemBasicData)
}

void PlayerMemBasicData::SharedCtor() {
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&profile_picture_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gender_type_) -
      reinterpret_cast<char*>(&profile_picture_)) + sizeof(gender_type_));
  _cached_size_ = 0;
}

PlayerMemBasicData::~PlayerMemBasicData() {
  // @@protoc_insertion_point(destructor:proto.PlayerMemBasicData)
  SharedDtor();
}

void PlayerMemBasicData::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete profile_picture_;
}

void PlayerMemBasicData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerMemBasicData::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerMemBasicData& PlayerMemBasicData::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerMemBasicData* PlayerMemBasicData::New(::google::protobuf::Arena* arena) const {
  PlayerMemBasicData* n = new PlayerMemBasicData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerMemBasicData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerMemBasicData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) {
    delete profile_picture_;
  }
  profile_picture_ = NULL;
  ::memset(&level_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gender_type_) -
      reinterpret_cast<char*>(&level_)) + sizeof(gender_type_));
  _internal_metadata_.Clear();
}

bool PlayerMemBasicData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerMemBasicData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string nickname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlayerMemBasicData.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 exp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 scoin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &scoin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hcoin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hcoin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_login = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_login_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.ProfilePicture profile_picture = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_profile_picture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 register_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &register_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 gender_type = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gender_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerMemBasicData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerMemBasicData)
  return false;
#undef DO_
}

void PlayerMemBasicData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerMemBasicData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nickname = 1;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerMemBasicData.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nickname(), output);
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // uint32 exp = 3;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->exp(), output);
  }

  // uint32 scoin = 4;
  if (this->scoin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->scoin(), output);
  }

  // uint32 hcoin = 5;
  if (this->hcoin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->hcoin(), output);
  }

  // uint32 last_login = 6;
  if (this->last_login() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->last_login(), output);
  }

  // .proto.ProfilePicture profile_picture = 7;
  if (this->has_profile_picture()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->profile_picture_, output);
  }

  // fixed32 register_time = 8;
  if (this->register_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(8, this->register_time(), output);
  }

  // uint32 gender_type = 9;
  if (this->gender_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->gender_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerMemBasicData)
}

::google::protobuf::uint8* PlayerMemBasicData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerMemBasicData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string nickname = 1;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlayerMemBasicData.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nickname(), target);
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // uint32 exp = 3;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->exp(), target);
  }

  // uint32 scoin = 4;
  if (this->scoin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->scoin(), target);
  }

  // uint32 hcoin = 5;
  if (this->hcoin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->hcoin(), target);
  }

  // uint32 last_login = 6;
  if (this->last_login() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->last_login(), target);
  }

  // .proto.ProfilePicture profile_picture = 7;
  if (this->has_profile_picture()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->profile_picture_, deterministic, target);
  }

  // fixed32 register_time = 8;
  if (this->register_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(8, this->register_time(), target);
  }

  // uint32 gender_type = 9;
  if (this->gender_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->gender_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerMemBasicData)
  return target;
}

size_t PlayerMemBasicData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerMemBasicData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string nickname = 1;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // .proto.ProfilePicture profile_picture = 7;
  if (this->has_profile_picture()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->profile_picture_);
  }

  // uint32 level = 2;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  // uint32 exp = 3;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->exp());
  }

  // uint32 scoin = 4;
  if (this->scoin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->scoin());
  }

  // uint32 hcoin = 5;
  if (this->hcoin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hcoin());
  }

  // uint32 last_login = 6;
  if (this->last_login() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_login());
  }

  // fixed32 register_time = 8;
  if (this->register_time() != 0) {
    total_size += 1 + 4;
  }

  // uint32 gender_type = 9;
  if (this->gender_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gender_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerMemBasicData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerMemBasicData)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerMemBasicData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerMemBasicData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerMemBasicData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerMemBasicData)
    MergeFrom(*source);
  }
}

void PlayerMemBasicData::MergeFrom(const PlayerMemBasicData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerMemBasicData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.has_profile_picture()) {
    mutable_profile_picture()->::proto::ProfilePicture::MergeFrom(from.profile_picture());
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.scoin() != 0) {
    set_scoin(from.scoin());
  }
  if (from.hcoin() != 0) {
    set_hcoin(from.hcoin());
  }
  if (from.last_login() != 0) {
    set_last_login(from.last_login());
  }
  if (from.register_time() != 0) {
    set_register_time(from.register_time());
  }
  if (from.gender_type() != 0) {
    set_gender_type(from.gender_type());
  }
}

void PlayerMemBasicData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerMemBasicData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerMemBasicData::CopyFrom(const PlayerMemBasicData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerMemBasicData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerMemBasicData::IsInitialized() const {
  return true;
}

void PlayerMemBasicData::Swap(PlayerMemBasicData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerMemBasicData::InternalSwap(PlayerMemBasicData* other) {
  using std::swap;
  nickname_.Swap(&other->nickname_);
  swap(profile_picture_, other->profile_picture_);
  swap(level_, other->level_);
  swap(exp_, other->exp_);
  swap(scoin_, other->scoin_);
  swap(hcoin_, other->hcoin_);
  swap(last_login_, other->last_login_);
  swap(register_time_, other->register_time_);
  swap(gender_type_, other->gender_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerMemBasicData::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerMemBasicData

// string nickname = 1;
void PlayerMemBasicData::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerMemBasicData::nickname() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.nickname)
  return nickname_.GetNoArena();
}
void PlayerMemBasicData::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.nickname)
}
#if LANG_CXX11
void PlayerMemBasicData::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerMemBasicData.nickname)
}
#endif
void PlayerMemBasicData::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerMemBasicData.nickname)
}
void PlayerMemBasicData::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerMemBasicData.nickname)
}
::std::string* PlayerMemBasicData::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerMemBasicData.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerMemBasicData::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.PlayerMemBasicData.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerMemBasicData::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerMemBasicData.nickname)
}

// uint32 level = 2;
void PlayerMemBasicData::clear_level() {
  level_ = 0u;
}
::google::protobuf::uint32 PlayerMemBasicData::level() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.level)
  return level_;
}
void PlayerMemBasicData::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.level)
}

// uint32 exp = 3;
void PlayerMemBasicData::clear_exp() {
  exp_ = 0u;
}
::google::protobuf::uint32 PlayerMemBasicData::exp() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.exp)
  return exp_;
}
void PlayerMemBasicData::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.exp)
}

// uint32 scoin = 4;
void PlayerMemBasicData::clear_scoin() {
  scoin_ = 0u;
}
::google::protobuf::uint32 PlayerMemBasicData::scoin() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.scoin)
  return scoin_;
}
void PlayerMemBasicData::set_scoin(::google::protobuf::uint32 value) {
  
  scoin_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.scoin)
}

// uint32 hcoin = 5;
void PlayerMemBasicData::clear_hcoin() {
  hcoin_ = 0u;
}
::google::protobuf::uint32 PlayerMemBasicData::hcoin() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.hcoin)
  return hcoin_;
}
void PlayerMemBasicData::set_hcoin(::google::protobuf::uint32 value) {
  
  hcoin_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.hcoin)
}

// uint32 last_login = 6;
void PlayerMemBasicData::clear_last_login() {
  last_login_ = 0u;
}
::google::protobuf::uint32 PlayerMemBasicData::last_login() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.last_login)
  return last_login_;
}
void PlayerMemBasicData::set_last_login(::google::protobuf::uint32 value) {
  
  last_login_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.last_login)
}

// .proto.ProfilePicture profile_picture = 7;
bool PlayerMemBasicData::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
void PlayerMemBasicData::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
const ::proto::ProfilePicture& PlayerMemBasicData::profile_picture() const {
  const ::proto::ProfilePicture* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePicture*>(
      &::proto::_ProfilePicture_default_instance_);
}
::proto::ProfilePicture* PlayerMemBasicData::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePicture;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerMemBasicData.profile_picture)
  return profile_picture_;
}
::proto::ProfilePicture* PlayerMemBasicData::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.PlayerMemBasicData.profile_picture)
  
  ::proto::ProfilePicture* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
void PlayerMemBasicData::set_allocated_profile_picture(::proto::ProfilePicture* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerMemBasicData.profile_picture)
}

// fixed32 register_time = 8;
void PlayerMemBasicData::clear_register_time() {
  register_time_ = 0u;
}
::google::protobuf::uint32 PlayerMemBasicData::register_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.register_time)
  return register_time_;
}
void PlayerMemBasicData::set_register_time(::google::protobuf::uint32 value) {
  
  register_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.register_time)
}

// uint32 gender_type = 9;
void PlayerMemBasicData::clear_gender_type() {
  gender_type_ = 0u;
}
::google::protobuf::uint32 PlayerMemBasicData::gender_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.gender_type)
  return gender_type_;
}
void PlayerMemBasicData::set_gender_type(::google::protobuf::uint32 value) {
  
  gender_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.gender_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerMemH5AcitivityWatcherData::kH5ActivityWatcherIdFieldNumber;
const int PlayerMemH5AcitivityWatcherData::kProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerMemH5AcitivityWatcherData::PlayerMemH5AcitivityWatcherData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerMemH5AcitivityWatcherData)
}
PlayerMemH5AcitivityWatcherData::PlayerMemH5AcitivityWatcherData(const PlayerMemH5AcitivityWatcherData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&h5_activity_watcher_id_, &from.h5_activity_watcher_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&progress_) -
    reinterpret_cast<char*>(&h5_activity_watcher_id_)) + sizeof(progress_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerMemH5AcitivityWatcherData)
}

void PlayerMemH5AcitivityWatcherData::SharedCtor() {
  ::memset(&h5_activity_watcher_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&h5_activity_watcher_id_)) + sizeof(progress_));
  _cached_size_ = 0;
}

PlayerMemH5AcitivityWatcherData::~PlayerMemH5AcitivityWatcherData() {
  // @@protoc_insertion_point(destructor:proto.PlayerMemH5AcitivityWatcherData)
  SharedDtor();
}

void PlayerMemH5AcitivityWatcherData::SharedDtor() {
}

void PlayerMemH5AcitivityWatcherData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerMemH5AcitivityWatcherData::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerMemH5AcitivityWatcherData& PlayerMemH5AcitivityWatcherData::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerMemH5AcitivityWatcherData* PlayerMemH5AcitivityWatcherData::New(::google::protobuf::Arena* arena) const {
  PlayerMemH5AcitivityWatcherData* n = new PlayerMemH5AcitivityWatcherData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerMemH5AcitivityWatcherData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerMemH5AcitivityWatcherData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&h5_activity_watcher_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&progress_) -
      reinterpret_cast<char*>(&h5_activity_watcher_id_)) + sizeof(progress_));
  _internal_metadata_.Clear();
}

bool PlayerMemH5AcitivityWatcherData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerMemH5AcitivityWatcherData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 h5_activity_watcher_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &h5_activity_watcher_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 progress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerMemH5AcitivityWatcherData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerMemH5AcitivityWatcherData)
  return false;
#undef DO_
}

void PlayerMemH5AcitivityWatcherData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerMemH5AcitivityWatcherData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 h5_activity_watcher_id = 1;
  if (this->h5_activity_watcher_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->h5_activity_watcher_id(), output);
  }

  // uint32 progress = 2;
  if (this->progress() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->progress(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerMemH5AcitivityWatcherData)
}

::google::protobuf::uint8* PlayerMemH5AcitivityWatcherData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerMemH5AcitivityWatcherData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 h5_activity_watcher_id = 1;
  if (this->h5_activity_watcher_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->h5_activity_watcher_id(), target);
  }

  // uint32 progress = 2;
  if (this->progress() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->progress(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerMemH5AcitivityWatcherData)
  return target;
}

size_t PlayerMemH5AcitivityWatcherData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerMemH5AcitivityWatcherData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 h5_activity_watcher_id = 1;
  if (this->h5_activity_watcher_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->h5_activity_watcher_id());
  }

  // uint32 progress = 2;
  if (this->progress() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->progress());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerMemH5AcitivityWatcherData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerMemH5AcitivityWatcherData)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerMemH5AcitivityWatcherData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerMemH5AcitivityWatcherData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerMemH5AcitivityWatcherData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerMemH5AcitivityWatcherData)
    MergeFrom(*source);
  }
}

void PlayerMemH5AcitivityWatcherData::MergeFrom(const PlayerMemH5AcitivityWatcherData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerMemH5AcitivityWatcherData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.h5_activity_watcher_id() != 0) {
    set_h5_activity_watcher_id(from.h5_activity_watcher_id());
  }
  if (from.progress() != 0) {
    set_progress(from.progress());
  }
}

void PlayerMemH5AcitivityWatcherData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerMemH5AcitivityWatcherData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerMemH5AcitivityWatcherData::CopyFrom(const PlayerMemH5AcitivityWatcherData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerMemH5AcitivityWatcherData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerMemH5AcitivityWatcherData::IsInitialized() const {
  return true;
}

void PlayerMemH5AcitivityWatcherData::Swap(PlayerMemH5AcitivityWatcherData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerMemH5AcitivityWatcherData::InternalSwap(PlayerMemH5AcitivityWatcherData* other) {
  using std::swap;
  swap(h5_activity_watcher_id_, other->h5_activity_watcher_id_);
  swap(progress_, other->progress_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerMemH5AcitivityWatcherData::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerMemH5AcitivityWatcherData

// uint32 h5_activity_watcher_id = 1;
void PlayerMemH5AcitivityWatcherData::clear_h5_activity_watcher_id() {
  h5_activity_watcher_id_ = 0u;
}
::google::protobuf::uint32 PlayerMemH5AcitivityWatcherData::h5_activity_watcher_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5AcitivityWatcherData.h5_activity_watcher_id)
  return h5_activity_watcher_id_;
}
void PlayerMemH5AcitivityWatcherData::set_h5_activity_watcher_id(::google::protobuf::uint32 value) {
  
  h5_activity_watcher_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5AcitivityWatcherData.h5_activity_watcher_id)
}

// uint32 progress = 2;
void PlayerMemH5AcitivityWatcherData::clear_progress() {
  progress_ = 0u;
}
::google::protobuf::uint32 PlayerMemH5AcitivityWatcherData::progress() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5AcitivityWatcherData.progress)
  return progress_;
}
void PlayerMemH5AcitivityWatcherData::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5AcitivityWatcherData.progress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerMemH5ActivityData::kH5ScheduleIdFieldNumber;
const int PlayerMemH5ActivityData::kH5ActivityIdFieldNumber;
const int PlayerMemH5ActivityData::kLastRefreshTimeFieldNumber;
const int PlayerMemH5ActivityData::kFinishedH5ActivityWatcherListFieldNumber;
const int PlayerMemH5ActivityData::kUnacceptH5ActivityWatcherListFieldNumber;
const int PlayerMemH5ActivityData::kH5ActivityWatcherListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerMemH5ActivityData::PlayerMemH5ActivityData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerMemH5ActivityData)
}
PlayerMemH5ActivityData::PlayerMemH5ActivityData(const PlayerMemH5ActivityData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      finished_h5_activity_watcher_list_(from.finished_h5_activity_watcher_list_),
      unaccept_h5_activity_watcher_list_(from.unaccept_h5_activity_watcher_list_),
      h5_activity_watcher_list_(from.h5_activity_watcher_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&h5_schedule_id_, &from.h5_schedule_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&last_refresh_time_) -
    reinterpret_cast<char*>(&h5_schedule_id_)) + sizeof(last_refresh_time_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerMemH5ActivityData)
}

void PlayerMemH5ActivityData::SharedCtor() {
  ::memset(&h5_schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_refresh_time_) -
      reinterpret_cast<char*>(&h5_schedule_id_)) + sizeof(last_refresh_time_));
  _cached_size_ = 0;
}

PlayerMemH5ActivityData::~PlayerMemH5ActivityData() {
  // @@protoc_insertion_point(destructor:proto.PlayerMemH5ActivityData)
  SharedDtor();
}

void PlayerMemH5ActivityData::SharedDtor() {
}

void PlayerMemH5ActivityData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerMemH5ActivityData::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerMemH5ActivityData& PlayerMemH5ActivityData::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerMemH5ActivityData* PlayerMemH5ActivityData::New(::google::protobuf::Arena* arena) const {
  PlayerMemH5ActivityData* n = new PlayerMemH5ActivityData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerMemH5ActivityData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerMemH5ActivityData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  finished_h5_activity_watcher_list_.Clear();
  unaccept_h5_activity_watcher_list_.Clear();
  h5_activity_watcher_list_.Clear();
  ::memset(&h5_schedule_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_refresh_time_) -
      reinterpret_cast<char*>(&h5_schedule_id_)) + sizeof(last_refresh_time_));
  _internal_metadata_.Clear();
}

bool PlayerMemH5ActivityData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerMemH5ActivityData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 h5_schedule_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &h5_schedule_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 h5_activity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &h5_activity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 last_refresh_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_refresh_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 finished_h5_activity_watcher_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_finished_h5_activity_watcher_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 34u, input, this->mutable_finished_h5_activity_watcher_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 unaccept_h5_activity_watcher_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_unaccept_h5_activity_watcher_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 42u, input, this->mutable_unaccept_h5_activity_watcher_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.PlayerMemH5AcitivityWatcherData h5_activity_watcher_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_h5_activity_watcher_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerMemH5ActivityData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerMemH5ActivityData)
  return false;
#undef DO_
}

void PlayerMemH5ActivityData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerMemH5ActivityData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 h5_schedule_id = 1;
  if (this->h5_schedule_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->h5_schedule_id(), output);
  }

  // uint32 h5_activity_id = 2;
  if (this->h5_activity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->h5_activity_id(), output);
  }

  // uint32 last_refresh_time = 3;
  if (this->last_refresh_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->last_refresh_time(), output);
  }

  // repeated uint32 finished_h5_activity_watcher_list = 4;
  if (this->finished_h5_activity_watcher_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _finished_h5_activity_watcher_list_cached_byte_size_));
  }
  for (int i = 0, n = this->finished_h5_activity_watcher_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->finished_h5_activity_watcher_list(i), output);
  }

  // repeated uint32 unaccept_h5_activity_watcher_list = 5;
  if (this->unaccept_h5_activity_watcher_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _unaccept_h5_activity_watcher_list_cached_byte_size_));
  }
  for (int i = 0, n = this->unaccept_h5_activity_watcher_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->unaccept_h5_activity_watcher_list(i), output);
  }

  // repeated .proto.PlayerMemH5AcitivityWatcherData h5_activity_watcher_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->h5_activity_watcher_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->h5_activity_watcher_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerMemH5ActivityData)
}

::google::protobuf::uint8* PlayerMemH5ActivityData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerMemH5ActivityData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 h5_schedule_id = 1;
  if (this->h5_schedule_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->h5_schedule_id(), target);
  }

  // uint32 h5_activity_id = 2;
  if (this->h5_activity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->h5_activity_id(), target);
  }

  // uint32 last_refresh_time = 3;
  if (this->last_refresh_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->last_refresh_time(), target);
  }

  // repeated uint32 finished_h5_activity_watcher_list = 4;
  if (this->finished_h5_activity_watcher_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _finished_h5_activity_watcher_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->finished_h5_activity_watcher_list_, target);
  }

  // repeated uint32 unaccept_h5_activity_watcher_list = 5;
  if (this->unaccept_h5_activity_watcher_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _unaccept_h5_activity_watcher_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->unaccept_h5_activity_watcher_list_, target);
  }

  // repeated .proto.PlayerMemH5AcitivityWatcherData h5_activity_watcher_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->h5_activity_watcher_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->h5_activity_watcher_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerMemH5ActivityData)
  return target;
}

size_t PlayerMemH5ActivityData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerMemH5ActivityData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 finished_h5_activity_watcher_list = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->finished_h5_activity_watcher_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _finished_h5_activity_watcher_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 unaccept_h5_activity_watcher_list = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->unaccept_h5_activity_watcher_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _unaccept_h5_activity_watcher_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .proto.PlayerMemH5AcitivityWatcherData h5_activity_watcher_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->h5_activity_watcher_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->h5_activity_watcher_list(static_cast<int>(i)));
    }
  }

  // uint32 h5_schedule_id = 1;
  if (this->h5_schedule_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->h5_schedule_id());
  }

  // uint32 h5_activity_id = 2;
  if (this->h5_activity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->h5_activity_id());
  }

  // uint32 last_refresh_time = 3;
  if (this->last_refresh_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->last_refresh_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerMemH5ActivityData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerMemH5ActivityData)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerMemH5ActivityData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerMemH5ActivityData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerMemH5ActivityData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerMemH5ActivityData)
    MergeFrom(*source);
  }
}

void PlayerMemH5ActivityData::MergeFrom(const PlayerMemH5ActivityData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerMemH5ActivityData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  finished_h5_activity_watcher_list_.MergeFrom(from.finished_h5_activity_watcher_list_);
  unaccept_h5_activity_watcher_list_.MergeFrom(from.unaccept_h5_activity_watcher_list_);
  h5_activity_watcher_list_.MergeFrom(from.h5_activity_watcher_list_);
  if (from.h5_schedule_id() != 0) {
    set_h5_schedule_id(from.h5_schedule_id());
  }
  if (from.h5_activity_id() != 0) {
    set_h5_activity_id(from.h5_activity_id());
  }
  if (from.last_refresh_time() != 0) {
    set_last_refresh_time(from.last_refresh_time());
  }
}

void PlayerMemH5ActivityData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerMemH5ActivityData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerMemH5ActivityData::CopyFrom(const PlayerMemH5ActivityData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerMemH5ActivityData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerMemH5ActivityData::IsInitialized() const {
  return true;
}

void PlayerMemH5ActivityData::Swap(PlayerMemH5ActivityData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerMemH5ActivityData::InternalSwap(PlayerMemH5ActivityData* other) {
  using std::swap;
  finished_h5_activity_watcher_list_.InternalSwap(&other->finished_h5_activity_watcher_list_);
  unaccept_h5_activity_watcher_list_.InternalSwap(&other->unaccept_h5_activity_watcher_list_);
  h5_activity_watcher_list_.InternalSwap(&other->h5_activity_watcher_list_);
  swap(h5_schedule_id_, other->h5_schedule_id_);
  swap(h5_activity_id_, other->h5_activity_id_);
  swap(last_refresh_time_, other->last_refresh_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerMemH5ActivityData::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerMemH5ActivityData

// uint32 h5_schedule_id = 1;
void PlayerMemH5ActivityData::clear_h5_schedule_id() {
  h5_schedule_id_ = 0u;
}
::google::protobuf::uint32 PlayerMemH5ActivityData::h5_schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityData.h5_schedule_id)
  return h5_schedule_id_;
}
void PlayerMemH5ActivityData::set_h5_schedule_id(::google::protobuf::uint32 value) {
  
  h5_schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5ActivityData.h5_schedule_id)
}

// uint32 h5_activity_id = 2;
void PlayerMemH5ActivityData::clear_h5_activity_id() {
  h5_activity_id_ = 0u;
}
::google::protobuf::uint32 PlayerMemH5ActivityData::h5_activity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityData.h5_activity_id)
  return h5_activity_id_;
}
void PlayerMemH5ActivityData::set_h5_activity_id(::google::protobuf::uint32 value) {
  
  h5_activity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5ActivityData.h5_activity_id)
}

// uint32 last_refresh_time = 3;
void PlayerMemH5ActivityData::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
::google::protobuf::uint32 PlayerMemH5ActivityData::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityData.last_refresh_time)
  return last_refresh_time_;
}
void PlayerMemH5ActivityData::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5ActivityData.last_refresh_time)
}

// repeated uint32 finished_h5_activity_watcher_list = 4;
int PlayerMemH5ActivityData::finished_h5_activity_watcher_list_size() const {
  return finished_h5_activity_watcher_list_.size();
}
void PlayerMemH5ActivityData::clear_finished_h5_activity_watcher_list() {
  finished_h5_activity_watcher_list_.Clear();
}
::google::protobuf::uint32 PlayerMemH5ActivityData::finished_h5_activity_watcher_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityData.finished_h5_activity_watcher_list)
  return finished_h5_activity_watcher_list_.Get(index);
}
void PlayerMemH5ActivityData::set_finished_h5_activity_watcher_list(int index, ::google::protobuf::uint32 value) {
  finished_h5_activity_watcher_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5ActivityData.finished_h5_activity_watcher_list)
}
void PlayerMemH5ActivityData::add_finished_h5_activity_watcher_list(::google::protobuf::uint32 value) {
  finished_h5_activity_watcher_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerMemH5ActivityData.finished_h5_activity_watcher_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerMemH5ActivityData::finished_h5_activity_watcher_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerMemH5ActivityData.finished_h5_activity_watcher_list)
  return finished_h5_activity_watcher_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerMemH5ActivityData::mutable_finished_h5_activity_watcher_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerMemH5ActivityData.finished_h5_activity_watcher_list)
  return &finished_h5_activity_watcher_list_;
}

// repeated uint32 unaccept_h5_activity_watcher_list = 5;
int PlayerMemH5ActivityData::unaccept_h5_activity_watcher_list_size() const {
  return unaccept_h5_activity_watcher_list_.size();
}
void PlayerMemH5ActivityData::clear_unaccept_h5_activity_watcher_list() {
  unaccept_h5_activity_watcher_list_.Clear();
}
::google::protobuf::uint32 PlayerMemH5ActivityData::unaccept_h5_activity_watcher_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityData.unaccept_h5_activity_watcher_list)
  return unaccept_h5_activity_watcher_list_.Get(index);
}
void PlayerMemH5ActivityData::set_unaccept_h5_activity_watcher_list(int index, ::google::protobuf::uint32 value) {
  unaccept_h5_activity_watcher_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5ActivityData.unaccept_h5_activity_watcher_list)
}
void PlayerMemH5ActivityData::add_unaccept_h5_activity_watcher_list(::google::protobuf::uint32 value) {
  unaccept_h5_activity_watcher_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerMemH5ActivityData.unaccept_h5_activity_watcher_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerMemH5ActivityData::unaccept_h5_activity_watcher_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerMemH5ActivityData.unaccept_h5_activity_watcher_list)
  return unaccept_h5_activity_watcher_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerMemH5ActivityData::mutable_unaccept_h5_activity_watcher_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerMemH5ActivityData.unaccept_h5_activity_watcher_list)
  return &unaccept_h5_activity_watcher_list_;
}

// repeated .proto.PlayerMemH5AcitivityWatcherData h5_activity_watcher_list = 6;
int PlayerMemH5ActivityData::h5_activity_watcher_list_size() const {
  return h5_activity_watcher_list_.size();
}
void PlayerMemH5ActivityData::clear_h5_activity_watcher_list() {
  h5_activity_watcher_list_.Clear();
}
const ::proto::PlayerMemH5AcitivityWatcherData& PlayerMemH5ActivityData::h5_activity_watcher_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityData.h5_activity_watcher_list)
  return h5_activity_watcher_list_.Get(index);
}
::proto::PlayerMemH5AcitivityWatcherData* PlayerMemH5ActivityData::mutable_h5_activity_watcher_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerMemH5ActivityData.h5_activity_watcher_list)
  return h5_activity_watcher_list_.Mutable(index);
}
::proto::PlayerMemH5AcitivityWatcherData* PlayerMemH5ActivityData::add_h5_activity_watcher_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerMemH5ActivityData.h5_activity_watcher_list)
  return h5_activity_watcher_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5AcitivityWatcherData >*
PlayerMemH5ActivityData::mutable_h5_activity_watcher_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerMemH5ActivityData.h5_activity_watcher_list)
  return &h5_activity_watcher_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5AcitivityWatcherData >&
PlayerMemH5ActivityData::h5_activity_watcher_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerMemH5ActivityData.h5_activity_watcher_list)
  return h5_activity_watcher_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

PlayerMemH5ActivityDataResult::PlayerMemH5ActivityDataResult_RetcodeMapEntry::PlayerMemH5ActivityDataResult_RetcodeMapEntry() {}
PlayerMemH5ActivityDataResult::PlayerMemH5ActivityDataResult_RetcodeMapEntry::PlayerMemH5ActivityDataResult_RetcodeMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata PlayerMemH5ActivityDataResult::PlayerMemH5ActivityDataResult_RetcodeMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[24];
}
void PlayerMemH5ActivityDataResult::PlayerMemH5ActivityDataResult_RetcodeMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void PlayerMemH5ActivityDataResult::PlayerMemH5ActivityDataResult_RetcodeMapEntry::MergeFrom(const PlayerMemH5ActivityDataResult_RetcodeMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerMemH5ActivityDataResult::kRetcodeMapFieldNumber;
const int PlayerMemH5ActivityDataResult::kH5ActivityDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerMemH5ActivityDataResult::PlayerMemH5ActivityDataResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerMemH5ActivityDataResult)
}
PlayerMemH5ActivityDataResult::PlayerMemH5ActivityDataResult(const PlayerMemH5ActivityDataResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      h5_activity_data_list_(from.h5_activity_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_map_.MergeFrom(from.retcode_map_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerMemH5ActivityDataResult)
}

void PlayerMemH5ActivityDataResult::SharedCtor() {
  _cached_size_ = 0;
}

PlayerMemH5ActivityDataResult::~PlayerMemH5ActivityDataResult() {
  // @@protoc_insertion_point(destructor:proto.PlayerMemH5ActivityDataResult)
  SharedDtor();
}

void PlayerMemH5ActivityDataResult::SharedDtor() {
}

void PlayerMemH5ActivityDataResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerMemH5ActivityDataResult::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerMemH5ActivityDataResult& PlayerMemH5ActivityDataResult::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerMemH5ActivityDataResult* PlayerMemH5ActivityDataResult::New(::google::protobuf::Arena* arena) const {
  PlayerMemH5ActivityDataResult* n = new PlayerMemH5ActivityDataResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerMemH5ActivityDataResult::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerMemH5ActivityDataResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_map_.Clear();
  h5_activity_data_list_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerMemH5ActivityDataResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerMemH5ActivityDataResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, int32> retcode_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PlayerMemH5ActivityDataResult_RetcodeMapEntry::Parser< ::google::protobuf::internal::MapField<
              PlayerMemH5ActivityDataResult_RetcodeMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 > > parser(&retcode_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.PlayerMemH5ActivityData h5_activity_data_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_h5_activity_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerMemH5ActivityDataResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerMemH5ActivityDataResult)
  return false;
#undef DO_
}

void PlayerMemH5ActivityDataResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerMemH5ActivityDataResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, int32> retcode_map = 1;
  if (!this->retcode_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->retcode_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->retcode_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >::const_iterator
          it = this->retcode_map().begin();
          it != this->retcode_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerMemH5ActivityDataResult_RetcodeMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(retcode_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerMemH5ActivityDataResult_RetcodeMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >::const_iterator
          it = this->retcode_map().begin();
          it != this->retcode_map().end(); ++it) {
        entry.reset(retcode_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // repeated .proto.PlayerMemH5ActivityData h5_activity_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->h5_activity_data_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->h5_activity_data_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerMemH5ActivityDataResult)
}

::google::protobuf::uint8* PlayerMemH5ActivityDataResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerMemH5ActivityDataResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, int32> retcode_map = 1;
  if (!this->retcode_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->retcode_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->retcode_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >::const_iterator
          it = this->retcode_map().begin();
          it != this->retcode_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<PlayerMemH5ActivityDataResult_RetcodeMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(retcode_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<PlayerMemH5ActivityDataResult_RetcodeMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >::const_iterator
          it = this->retcode_map().begin();
          it != this->retcode_map().end(); ++it) {
        entry.reset(retcode_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // repeated .proto.PlayerMemH5ActivityData h5_activity_data_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->h5_activity_data_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->h5_activity_data_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerMemH5ActivityDataResult)
  return target;
}

size_t PlayerMemH5ActivityDataResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerMemH5ActivityDataResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, int32> retcode_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->retcode_map_size());
  {
    ::google::protobuf::scoped_ptr<PlayerMemH5ActivityDataResult_RetcodeMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >::const_iterator
        it = this->retcode_map().begin();
        it != this->retcode_map().end(); ++it) {
      entry.reset(retcode_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .proto.PlayerMemH5ActivityData h5_activity_data_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->h5_activity_data_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->h5_activity_data_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerMemH5ActivityDataResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerMemH5ActivityDataResult)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerMemH5ActivityDataResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerMemH5ActivityDataResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerMemH5ActivityDataResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerMemH5ActivityDataResult)
    MergeFrom(*source);
  }
}

void PlayerMemH5ActivityDataResult::MergeFrom(const PlayerMemH5ActivityDataResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerMemH5ActivityDataResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  retcode_map_.MergeFrom(from.retcode_map_);
  h5_activity_data_list_.MergeFrom(from.h5_activity_data_list_);
}

void PlayerMemH5ActivityDataResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerMemH5ActivityDataResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerMemH5ActivityDataResult::CopyFrom(const PlayerMemH5ActivityDataResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerMemH5ActivityDataResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerMemH5ActivityDataResult::IsInitialized() const {
  return true;
}

void PlayerMemH5ActivityDataResult::Swap(PlayerMemH5ActivityDataResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerMemH5ActivityDataResult::InternalSwap(PlayerMemH5ActivityDataResult* other) {
  using std::swap;
  retcode_map_.Swap(&other->retcode_map_);
  h5_activity_data_list_.InternalSwap(&other->h5_activity_data_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerMemH5ActivityDataResult::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerMemH5ActivityDataResult

// map<uint32, int32> retcode_map = 1;
int PlayerMemH5ActivityDataResult::retcode_map_size() const {
  return retcode_map_.size();
}
void PlayerMemH5ActivityDataResult::clear_retcode_map() {
  retcode_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >&
PlayerMemH5ActivityDataResult::retcode_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerMemH5ActivityDataResult.retcode_map)
  return retcode_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >*
PlayerMemH5ActivityDataResult::mutable_retcode_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerMemH5ActivityDataResult.retcode_map)
  return retcode_map_.MutableMap();
}

// repeated .proto.PlayerMemH5ActivityData h5_activity_data_list = 2;
int PlayerMemH5ActivityDataResult::h5_activity_data_list_size() const {
  return h5_activity_data_list_.size();
}
void PlayerMemH5ActivityDataResult::clear_h5_activity_data_list() {
  h5_activity_data_list_.Clear();
}
const ::proto::PlayerMemH5ActivityData& PlayerMemH5ActivityDataResult::h5_activity_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityDataResult.h5_activity_data_list)
  return h5_activity_data_list_.Get(index);
}
::proto::PlayerMemH5ActivityData* PlayerMemH5ActivityDataResult::mutable_h5_activity_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerMemH5ActivityDataResult.h5_activity_data_list)
  return h5_activity_data_list_.Mutable(index);
}
::proto::PlayerMemH5ActivityData* PlayerMemH5ActivityDataResult::add_h5_activity_data_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerMemH5ActivityDataResult.h5_activity_data_list)
  return h5_activity_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5ActivityData >*
PlayerMemH5ActivityDataResult::mutable_h5_activity_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerMemH5ActivityDataResult.h5_activity_data_list)
  return &h5_activity_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5ActivityData >&
PlayerMemH5ActivityDataResult::h5_activity_data_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerMemH5ActivityDataResult.h5_activity_data_list)
  return h5_activity_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryPlayerMemDataByMuipReq::kDataTypeFieldNumber;
const int QueryPlayerMemDataByMuipReq::kParamListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryPlayerMemDataByMuipReq::QueryPlayerMemDataByMuipReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QueryPlayerMemDataByMuipReq)
}
QueryPlayerMemDataByMuipReq::QueryPlayerMemDataByMuipReq(const QueryPlayerMemDataByMuipReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      param_list_(from.param_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_type_ = from.data_type_;
  // @@protoc_insertion_point(copy_constructor:proto.QueryPlayerMemDataByMuipReq)
}

void QueryPlayerMemDataByMuipReq::SharedCtor() {
  data_type_ = 0u;
  _cached_size_ = 0;
}

QueryPlayerMemDataByMuipReq::~QueryPlayerMemDataByMuipReq() {
  // @@protoc_insertion_point(destructor:proto.QueryPlayerMemDataByMuipReq)
  SharedDtor();
}

void QueryPlayerMemDataByMuipReq::SharedDtor() {
}

void QueryPlayerMemDataByMuipReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryPlayerMemDataByMuipReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryPlayerMemDataByMuipReq& QueryPlayerMemDataByMuipReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryPlayerMemDataByMuipReq* QueryPlayerMemDataByMuipReq::New(::google::protobuf::Arena* arena) const {
  QueryPlayerMemDataByMuipReq* n = new QueryPlayerMemDataByMuipReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryPlayerMemDataByMuipReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QueryPlayerMemDataByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_list_.Clear();
  data_type_ = 0u;
  _internal_metadata_.Clear();
}

bool QueryPlayerMemDataByMuipReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QueryPlayerMemDataByMuipReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 data_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &data_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 param_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_param_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_param_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QueryPlayerMemDataByMuipReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QueryPlayerMemDataByMuipReq)
  return false;
#undef DO_
}

void QueryPlayerMemDataByMuipReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QueryPlayerMemDataByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data_type = 1;
  if (this->data_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->data_type(), output);
  }

  // repeated uint32 param_list = 2;
  if (this->param_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _param_list_cached_byte_size_));
  }
  for (int i = 0, n = this->param_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->param_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QueryPlayerMemDataByMuipReq)
}

::google::protobuf::uint8* QueryPlayerMemDataByMuipReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QueryPlayerMemDataByMuipReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data_type = 1;
  if (this->data_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->data_type(), target);
  }

  // repeated uint32 param_list = 2;
  if (this->param_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _param_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->param_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QueryPlayerMemDataByMuipReq)
  return target;
}

size_t QueryPlayerMemDataByMuipReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QueryPlayerMemDataByMuipReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 param_list = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->param_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _param_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 data_type = 1;
  if (this->data_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->data_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryPlayerMemDataByMuipReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QueryPlayerMemDataByMuipReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryPlayerMemDataByMuipReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryPlayerMemDataByMuipReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QueryPlayerMemDataByMuipReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QueryPlayerMemDataByMuipReq)
    MergeFrom(*source);
  }
}

void QueryPlayerMemDataByMuipReq::MergeFrom(const QueryPlayerMemDataByMuipReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QueryPlayerMemDataByMuipReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_list_.MergeFrom(from.param_list_);
  if (from.data_type() != 0) {
    set_data_type(from.data_type());
  }
}

void QueryPlayerMemDataByMuipReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QueryPlayerMemDataByMuipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryPlayerMemDataByMuipReq::CopyFrom(const QueryPlayerMemDataByMuipReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QueryPlayerMemDataByMuipReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPlayerMemDataByMuipReq::IsInitialized() const {
  return true;
}

void QueryPlayerMemDataByMuipReq::Swap(QueryPlayerMemDataByMuipReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryPlayerMemDataByMuipReq::InternalSwap(QueryPlayerMemDataByMuipReq* other) {
  using std::swap;
  param_list_.InternalSwap(&other->param_list_);
  swap(data_type_, other->data_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryPlayerMemDataByMuipReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryPlayerMemDataByMuipReq

// uint32 data_type = 1;
void QueryPlayerMemDataByMuipReq::clear_data_type() {
  data_type_ = 0u;
}
::google::protobuf::uint32 QueryPlayerMemDataByMuipReq::data_type() const {
  // @@protoc_insertion_point(field_get:proto.QueryPlayerMemDataByMuipReq.data_type)
  return data_type_;
}
void QueryPlayerMemDataByMuipReq::set_data_type(::google::protobuf::uint32 value) {
  
  data_type_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryPlayerMemDataByMuipReq.data_type)
}

// repeated uint32 param_list = 2;
int QueryPlayerMemDataByMuipReq::param_list_size() const {
  return param_list_.size();
}
void QueryPlayerMemDataByMuipReq::clear_param_list() {
  param_list_.Clear();
}
::google::protobuf::uint32 QueryPlayerMemDataByMuipReq::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QueryPlayerMemDataByMuipReq.param_list)
  return param_list_.Get(index);
}
void QueryPlayerMemDataByMuipReq::set_param_list(int index, ::google::protobuf::uint32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.QueryPlayerMemDataByMuipReq.param_list)
}
void QueryPlayerMemDataByMuipReq::add_param_list(::google::protobuf::uint32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.QueryPlayerMemDataByMuipReq.param_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QueryPlayerMemDataByMuipReq::param_list() const {
  // @@protoc_insertion_point(field_list:proto.QueryPlayerMemDataByMuipReq.param_list)
  return param_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QueryPlayerMemDataByMuipReq::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QueryPlayerMemDataByMuipReq.param_list)
  return &param_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryPlayerMemDataByMuipRsp::kRetcodeFieldNumber;
const int QueryPlayerMemDataByMuipRsp::kBasicDataFieldNumber;
const int QueryPlayerMemDataByMuipRsp::kH5ActivityDataResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryPlayerMemDataByMuipRsp::QueryPlayerMemDataByMuipRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QueryPlayerMemDataByMuipRsp)
}
QueryPlayerMemDataByMuipRsp::QueryPlayerMemDataByMuipRsp(const QueryPlayerMemDataByMuipRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  clear_has_detail();
  switch (from.detail_case()) {
    case kBasicData: {
      mutable_basic_data()->::proto::PlayerMemBasicData::MergeFrom(from.basic_data());
      break;
    }
    case kH5ActivityDataResult: {
      mutable_h5_activity_data_result()->::proto::PlayerMemH5ActivityDataResult::MergeFrom(from.h5_activity_data_result());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:proto.QueryPlayerMemDataByMuipRsp)
}

void QueryPlayerMemDataByMuipRsp::SharedCtor() {
  retcode_ = 0;
  clear_has_detail();
  _cached_size_ = 0;
}

QueryPlayerMemDataByMuipRsp::~QueryPlayerMemDataByMuipRsp() {
  // @@protoc_insertion_point(destructor:proto.QueryPlayerMemDataByMuipRsp)
  SharedDtor();
}

void QueryPlayerMemDataByMuipRsp::SharedDtor() {
  if (has_detail()) {
    clear_detail();
  }
}

void QueryPlayerMemDataByMuipRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryPlayerMemDataByMuipRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryPlayerMemDataByMuipRsp& QueryPlayerMemDataByMuipRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryPlayerMemDataByMuipRsp* QueryPlayerMemDataByMuipRsp::New(::google::protobuf::Arena* arena) const {
  QueryPlayerMemDataByMuipRsp* n = new QueryPlayerMemDataByMuipRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryPlayerMemDataByMuipRsp::clear_detail() {
// @@protoc_insertion_point(one_of_clear_start:proto.QueryPlayerMemDataByMuipRsp)
  switch (detail_case()) {
    case kBasicData: {
      delete detail_.basic_data_;
      break;
    }
    case kH5ActivityDataResult: {
      delete detail_.h5_activity_data_result_;
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DETAIL_NOT_SET;
}


void QueryPlayerMemDataByMuipRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QueryPlayerMemDataByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  retcode_ = 0;
  clear_detail();
  _internal_metadata_.Clear();
}

bool QueryPlayerMemDataByMuipRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QueryPlayerMemDataByMuipRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlayerMemBasicData basic_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.PlayerMemH5ActivityDataResult h5_activity_data_result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_h5_activity_data_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QueryPlayerMemDataByMuipRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QueryPlayerMemDataByMuipRsp)
  return false;
#undef DO_
}

void QueryPlayerMemDataByMuipRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QueryPlayerMemDataByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.PlayerMemBasicData basic_data = 2;
  if (has_basic_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *detail_.basic_data_, output);
  }

  // .proto.PlayerMemH5ActivityDataResult h5_activity_data_result = 3;
  if (has_h5_activity_data_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *detail_.h5_activity_data_result_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QueryPlayerMemDataByMuipRsp)
}

::google::protobuf::uint8* QueryPlayerMemDataByMuipRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QueryPlayerMemDataByMuipRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.PlayerMemBasicData basic_data = 2;
  if (has_basic_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *detail_.basic_data_, deterministic, target);
  }

  // .proto.PlayerMemH5ActivityDataResult h5_activity_data_result = 3;
  if (has_h5_activity_data_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *detail_.h5_activity_data_result_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QueryPlayerMemDataByMuipRsp)
  return target;
}

size_t QueryPlayerMemDataByMuipRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QueryPlayerMemDataByMuipRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  switch (detail_case()) {
    // .proto.PlayerMemBasicData basic_data = 2;
    case kBasicData: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.basic_data_);
      break;
    }
    // .proto.PlayerMemH5ActivityDataResult h5_activity_data_result = 3;
    case kH5ActivityDataResult: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *detail_.h5_activity_data_result_);
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryPlayerMemDataByMuipRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QueryPlayerMemDataByMuipRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryPlayerMemDataByMuipRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryPlayerMemDataByMuipRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QueryPlayerMemDataByMuipRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QueryPlayerMemDataByMuipRsp)
    MergeFrom(*source);
  }
}

void QueryPlayerMemDataByMuipRsp::MergeFrom(const QueryPlayerMemDataByMuipRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QueryPlayerMemDataByMuipRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  switch (from.detail_case()) {
    case kBasicData: {
      mutable_basic_data()->::proto::PlayerMemBasicData::MergeFrom(from.basic_data());
      break;
    }
    case kH5ActivityDataResult: {
      mutable_h5_activity_data_result()->::proto::PlayerMemH5ActivityDataResult::MergeFrom(from.h5_activity_data_result());
      break;
    }
    case DETAIL_NOT_SET: {
      break;
    }
  }
}

void QueryPlayerMemDataByMuipRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QueryPlayerMemDataByMuipRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryPlayerMemDataByMuipRsp::CopyFrom(const QueryPlayerMemDataByMuipRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QueryPlayerMemDataByMuipRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryPlayerMemDataByMuipRsp::IsInitialized() const {
  return true;
}

void QueryPlayerMemDataByMuipRsp::Swap(QueryPlayerMemDataByMuipRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryPlayerMemDataByMuipRsp::InternalSwap(QueryPlayerMemDataByMuipRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(detail_, other->detail_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryPlayerMemDataByMuipRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryPlayerMemDataByMuipRsp

// int32 retcode = 1;
void QueryPlayerMemDataByMuipRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QueryPlayerMemDataByMuipRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QueryPlayerMemDataByMuipRsp.retcode)
  return retcode_;
}
void QueryPlayerMemDataByMuipRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryPlayerMemDataByMuipRsp.retcode)
}

// .proto.PlayerMemBasicData basic_data = 2;
bool QueryPlayerMemDataByMuipRsp::has_basic_data() const {
  return detail_case() == kBasicData;
}
void QueryPlayerMemDataByMuipRsp::set_has_basic_data() {
  _oneof_case_[0] = kBasicData;
}
void QueryPlayerMemDataByMuipRsp::clear_basic_data() {
  if (has_basic_data()) {
    delete detail_.basic_data_;
    clear_has_detail();
  }
}
 const ::proto::PlayerMemBasicData& QueryPlayerMemDataByMuipRsp::basic_data() const {
  // @@protoc_insertion_point(field_get:proto.QueryPlayerMemDataByMuipRsp.basic_data)
  return has_basic_data()
      ? *detail_.basic_data_
      : ::proto::PlayerMemBasicData::default_instance();
}
::proto::PlayerMemBasicData* QueryPlayerMemDataByMuipRsp::mutable_basic_data() {
  if (!has_basic_data()) {
    clear_detail();
    set_has_basic_data();
    detail_.basic_data_ = new ::proto::PlayerMemBasicData;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryPlayerMemDataByMuipRsp.basic_data)
  return detail_.basic_data_;
}
::proto::PlayerMemBasicData* QueryPlayerMemDataByMuipRsp::release_basic_data() {
  // @@protoc_insertion_point(field_release:proto.QueryPlayerMemDataByMuipRsp.basic_data)
  if (has_basic_data()) {
    clear_has_detail();
    ::proto::PlayerMemBasicData* temp = detail_.basic_data_;
    detail_.basic_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QueryPlayerMemDataByMuipRsp::set_allocated_basic_data(::proto::PlayerMemBasicData* basic_data) {
  clear_detail();
  if (basic_data) {
    set_has_basic_data();
    detail_.basic_data_ = basic_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryPlayerMemDataByMuipRsp.basic_data)
}

// .proto.PlayerMemH5ActivityDataResult h5_activity_data_result = 3;
bool QueryPlayerMemDataByMuipRsp::has_h5_activity_data_result() const {
  return detail_case() == kH5ActivityDataResult;
}
void QueryPlayerMemDataByMuipRsp::set_has_h5_activity_data_result() {
  _oneof_case_[0] = kH5ActivityDataResult;
}
void QueryPlayerMemDataByMuipRsp::clear_h5_activity_data_result() {
  if (has_h5_activity_data_result()) {
    delete detail_.h5_activity_data_result_;
    clear_has_detail();
  }
}
 const ::proto::PlayerMemH5ActivityDataResult& QueryPlayerMemDataByMuipRsp::h5_activity_data_result() const {
  // @@protoc_insertion_point(field_get:proto.QueryPlayerMemDataByMuipRsp.h5_activity_data_result)
  return has_h5_activity_data_result()
      ? *detail_.h5_activity_data_result_
      : ::proto::PlayerMemH5ActivityDataResult::default_instance();
}
::proto::PlayerMemH5ActivityDataResult* QueryPlayerMemDataByMuipRsp::mutable_h5_activity_data_result() {
  if (!has_h5_activity_data_result()) {
    clear_detail();
    set_has_h5_activity_data_result();
    detail_.h5_activity_data_result_ = new ::proto::PlayerMemH5ActivityDataResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryPlayerMemDataByMuipRsp.h5_activity_data_result)
  return detail_.h5_activity_data_result_;
}
::proto::PlayerMemH5ActivityDataResult* QueryPlayerMemDataByMuipRsp::release_h5_activity_data_result() {
  // @@protoc_insertion_point(field_release:proto.QueryPlayerMemDataByMuipRsp.h5_activity_data_result)
  if (has_h5_activity_data_result()) {
    clear_has_detail();
    ::proto::PlayerMemH5ActivityDataResult* temp = detail_.h5_activity_data_result_;
    detail_.h5_activity_data_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void QueryPlayerMemDataByMuipRsp::set_allocated_h5_activity_data_result(::proto::PlayerMemH5ActivityDataResult* h5_activity_data_result) {
  clear_detail();
  if (h5_activity_data_result) {
    set_has_h5_activity_data_result();
    detail_.h5_activity_data_result_ = h5_activity_data_result;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryPlayerMemDataByMuipRsp.h5_activity_data_result)
}

bool QueryPlayerMemDataByMuipRsp::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
void QueryPlayerMemDataByMuipRsp::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
QueryPlayerMemDataByMuipRsp::DetailCase QueryPlayerMemDataByMuipRsp::detail_case() const {
  return QueryPlayerMemDataByMuipRsp::DetailCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindGmUidNotify::kGmUidFieldNumber;
const int BindGmUidNotify::kPlayerUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindGmUidNotify::BindGmUidNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.BindGmUidNotify)
}
BindGmUidNotify::BindGmUidNotify(const BindGmUidNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gm_uid_, &from.gm_uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_uid_) -
    reinterpret_cast<char*>(&gm_uid_)) + sizeof(player_uid_));
  // @@protoc_insertion_point(copy_constructor:proto.BindGmUidNotify)
}

void BindGmUidNotify::SharedCtor() {
  ::memset(&gm_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_uid_) -
      reinterpret_cast<char*>(&gm_uid_)) + sizeof(player_uid_));
  _cached_size_ = 0;
}

BindGmUidNotify::~BindGmUidNotify() {
  // @@protoc_insertion_point(destructor:proto.BindGmUidNotify)
  SharedDtor();
}

void BindGmUidNotify::SharedDtor() {
}

void BindGmUidNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindGmUidNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BindGmUidNotify& BindGmUidNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

BindGmUidNotify* BindGmUidNotify::New(::google::protobuf::Arena* arena) const {
  BindGmUidNotify* n = new BindGmUidNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindGmUidNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BindGmUidNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gm_uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_uid_) -
      reinterpret_cast<char*>(&gm_uid_)) + sizeof(player_uid_));
  _internal_metadata_.Clear();
}

bool BindGmUidNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.BindGmUidNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gm_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gm_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 player_uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.BindGmUidNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.BindGmUidNotify)
  return false;
#undef DO_
}

void BindGmUidNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.BindGmUidNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gm_uid = 1;
  if (this->gm_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gm_uid(), output);
  }

  // uint32 player_uid = 2;
  if (this->player_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->player_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.BindGmUidNotify)
}

::google::protobuf::uint8* BindGmUidNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.BindGmUidNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gm_uid = 1;
  if (this->gm_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gm_uid(), target);
  }

  // uint32 player_uid = 2;
  if (this->player_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->player_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BindGmUidNotify)
  return target;
}

size_t BindGmUidNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BindGmUidNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gm_uid = 1;
  if (this->gm_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gm_uid());
  }

  // uint32 player_uid = 2;
  if (this->player_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindGmUidNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.BindGmUidNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const BindGmUidNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindGmUidNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.BindGmUidNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.BindGmUidNotify)
    MergeFrom(*source);
  }
}

void BindGmUidNotify::MergeFrom(const BindGmUidNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.BindGmUidNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gm_uid() != 0) {
    set_gm_uid(from.gm_uid());
  }
  if (from.player_uid() != 0) {
    set_player_uid(from.player_uid());
  }
}

void BindGmUidNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.BindGmUidNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindGmUidNotify::CopyFrom(const BindGmUidNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BindGmUidNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BindGmUidNotify::IsInitialized() const {
  return true;
}

void BindGmUidNotify::Swap(BindGmUidNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindGmUidNotify::InternalSwap(BindGmUidNotify* other) {
  using std::swap;
  swap(gm_uid_, other->gm_uid_);
  swap(player_uid_, other->player_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindGmUidNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindGmUidNotify

// uint32 gm_uid = 1;
void BindGmUidNotify::clear_gm_uid() {
  gm_uid_ = 0u;
}
::google::protobuf::uint32 BindGmUidNotify::gm_uid() const {
  // @@protoc_insertion_point(field_get:proto.BindGmUidNotify.gm_uid)
  return gm_uid_;
}
void BindGmUidNotify::set_gm_uid(::google::protobuf::uint32 value) {
  
  gm_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BindGmUidNotify.gm_uid)
}

// uint32 player_uid = 2;
void BindGmUidNotify::clear_player_uid() {
  player_uid_ = 0u;
}
::google::protobuf::uint32 BindGmUidNotify::player_uid() const {
  // @@protoc_insertion_point(field_get:proto.BindGmUidNotify.player_uid)
  return player_uid_;
}
void BindGmUidNotify::set_player_uid(::google::protobuf::uint32 value) {
  
  player_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BindGmUidNotify.player_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnbindGmUidNotify::kGmUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnbindGmUidNotify::UnbindGmUidNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UnbindGmUidNotify)
}
UnbindGmUidNotify::UnbindGmUidNotify(const UnbindGmUidNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gm_uid_ = from.gm_uid_;
  // @@protoc_insertion_point(copy_constructor:proto.UnbindGmUidNotify)
}

void UnbindGmUidNotify::SharedCtor() {
  gm_uid_ = 0u;
  _cached_size_ = 0;
}

UnbindGmUidNotify::~UnbindGmUidNotify() {
  // @@protoc_insertion_point(destructor:proto.UnbindGmUidNotify)
  SharedDtor();
}

void UnbindGmUidNotify::SharedDtor() {
}

void UnbindGmUidNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnbindGmUidNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnbindGmUidNotify& UnbindGmUidNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

UnbindGmUidNotify* UnbindGmUidNotify::New(::google::protobuf::Arena* arena) const {
  UnbindGmUidNotify* n = new UnbindGmUidNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnbindGmUidNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UnbindGmUidNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gm_uid_ = 0u;
  _internal_metadata_.Clear();
}

bool UnbindGmUidNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UnbindGmUidNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 gm_uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gm_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UnbindGmUidNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UnbindGmUidNotify)
  return false;
#undef DO_
}

void UnbindGmUidNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UnbindGmUidNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gm_uid = 1;
  if (this->gm_uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gm_uid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UnbindGmUidNotify)
}

::google::protobuf::uint8* UnbindGmUidNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UnbindGmUidNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 gm_uid = 1;
  if (this->gm_uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gm_uid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UnbindGmUidNotify)
  return target;
}

size_t UnbindGmUidNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UnbindGmUidNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 gm_uid = 1;
  if (this->gm_uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->gm_uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnbindGmUidNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UnbindGmUidNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const UnbindGmUidNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnbindGmUidNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UnbindGmUidNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UnbindGmUidNotify)
    MergeFrom(*source);
  }
}

void UnbindGmUidNotify::MergeFrom(const UnbindGmUidNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UnbindGmUidNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gm_uid() != 0) {
    set_gm_uid(from.gm_uid());
  }
}

void UnbindGmUidNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UnbindGmUidNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnbindGmUidNotify::CopyFrom(const UnbindGmUidNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UnbindGmUidNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnbindGmUidNotify::IsInitialized() const {
  return true;
}

void UnbindGmUidNotify::Swap(UnbindGmUidNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnbindGmUidNotify::InternalSwap(UnbindGmUidNotify* other) {
  using std::swap;
  swap(gm_uid_, other->gm_uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnbindGmUidNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnbindGmUidNotify

// uint32 gm_uid = 1;
void UnbindGmUidNotify::clear_gm_uid() {
  gm_uid_ = 0u;
}
::google::protobuf::uint32 UnbindGmUidNotify::gm_uid() const {
  // @@protoc_insertion_point(field_get:proto.UnbindGmUidNotify.gm_uid)
  return gm_uid_;
}
void UnbindGmUidNotify::set_gm_uid(::google::protobuf::uint32 value) {
  
  gm_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.UnbindGmUidNotify.gm_uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBindGmUidReq::GetBindGmUidReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetBindGmUidReq)
}
GetBindGmUidReq::GetBindGmUidReq(const GetBindGmUidReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetBindGmUidReq)
}

void GetBindGmUidReq::SharedCtor() {
  _cached_size_ = 0;
}

GetBindGmUidReq::~GetBindGmUidReq() {
  // @@protoc_insertion_point(destructor:proto.GetBindGmUidReq)
  SharedDtor();
}

void GetBindGmUidReq::SharedDtor() {
}

void GetBindGmUidReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBindGmUidReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBindGmUidReq& GetBindGmUidReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBindGmUidReq* GetBindGmUidReq::New(::google::protobuf::Arena* arena) const {
  GetBindGmUidReq* n = new GetBindGmUidReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBindGmUidReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetBindGmUidReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetBindGmUidReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetBindGmUidReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetBindGmUidReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetBindGmUidReq)
  return false;
#undef DO_
}

void GetBindGmUidReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetBindGmUidReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetBindGmUidReq)
}

::google::protobuf::uint8* GetBindGmUidReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetBindGmUidReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetBindGmUidReq)
  return target;
}

size_t GetBindGmUidReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetBindGmUidReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBindGmUidReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetBindGmUidReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBindGmUidReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBindGmUidReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetBindGmUidReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetBindGmUidReq)
    MergeFrom(*source);
  }
}

void GetBindGmUidReq::MergeFrom(const GetBindGmUidReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetBindGmUidReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetBindGmUidReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetBindGmUidReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBindGmUidReq::CopyFrom(const GetBindGmUidReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetBindGmUidReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBindGmUidReq::IsInitialized() const {
  return true;
}

void GetBindGmUidReq::Swap(GetBindGmUidReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBindGmUidReq::InternalSwap(GetBindGmUidReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBindGmUidReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBindGmUidReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GetBindGmUidRsp::GetBindGmUidRsp_GmUidMapEntry::GetBindGmUidRsp_GmUidMapEntry() {}
GetBindGmUidRsp::GetBindGmUidRsp_GmUidMapEntry::GetBindGmUidRsp_GmUidMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GetBindGmUidRsp::GetBindGmUidRsp_GmUidMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[31];
}
void GetBindGmUidRsp::GetBindGmUidRsp_GmUidMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GetBindGmUidRsp::GetBindGmUidRsp_GmUidMapEntry::MergeFrom(const GetBindGmUidRsp_GmUidMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBindGmUidRsp::kRetcodeFieldNumber;
const int GetBindGmUidRsp::kGmUidMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBindGmUidRsp::GetBindGmUidRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetBindGmUidRsp)
}
GetBindGmUidRsp::GetBindGmUidRsp(const GetBindGmUidRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gm_uid_map_.MergeFrom(from.gm_uid_map_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetBindGmUidRsp)
}

void GetBindGmUidRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetBindGmUidRsp::~GetBindGmUidRsp() {
  // @@protoc_insertion_point(destructor:proto.GetBindGmUidRsp)
  SharedDtor();
}

void GetBindGmUidRsp::SharedDtor() {
}

void GetBindGmUidRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetBindGmUidRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBindGmUidRsp& GetBindGmUidRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetBindGmUidRsp* GetBindGmUidRsp::New(::google::protobuf::Arena* arena) const {
  GetBindGmUidRsp* n = new GetBindGmUidRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetBindGmUidRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetBindGmUidRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gm_uid_map_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetBindGmUidRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetBindGmUidRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<uint32, uint32> gm_uid_map = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          GetBindGmUidRsp_GmUidMapEntry::Parser< ::google::protobuf::internal::MapField<
              GetBindGmUidRsp_GmUidMapEntry,
              ::google::protobuf::uint32, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 > > parser(&gm_uid_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetBindGmUidRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetBindGmUidRsp)
  return false;
#undef DO_
}

void GetBindGmUidRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetBindGmUidRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // map<uint32, uint32> gm_uid_map = 2;
  if (!this->gm_uid_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->gm_uid_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gm_uid_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gm_uid_map().begin();
          it != this->gm_uid_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GetBindGmUidRsp_GmUidMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gm_uid_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GetBindGmUidRsp_GmUidMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gm_uid_map().begin();
          it != this->gm_uid_map().end(); ++it) {
        entry.reset(gm_uid_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetBindGmUidRsp)
}

::google::protobuf::uint8* GetBindGmUidRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetBindGmUidRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // map<uint32, uint32> gm_uid_map = 2;
  if (!this->gm_uid_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->gm_uid_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->gm_uid_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gm_uid_map().begin();
          it != this->gm_uid_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GetBindGmUidRsp_GmUidMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(gm_uid_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GetBindGmUidRsp_GmUidMapEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
          it = this->gm_uid_map().begin();
          it != this->gm_uid_map().end(); ++it) {
        entry.reset(gm_uid_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetBindGmUidRsp)
  return target;
}

size_t GetBindGmUidRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetBindGmUidRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, uint32> gm_uid_map = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->gm_uid_map_size());
  {
    ::google::protobuf::scoped_ptr<GetBindGmUidRsp_GmUidMapEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >::const_iterator
        it = this->gm_uid_map().begin();
        it != this->gm_uid_map().end(); ++it) {
      entry.reset(gm_uid_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetBindGmUidRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetBindGmUidRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBindGmUidRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBindGmUidRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetBindGmUidRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetBindGmUidRsp)
    MergeFrom(*source);
  }
}

void GetBindGmUidRsp::MergeFrom(const GetBindGmUidRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetBindGmUidRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gm_uid_map_.MergeFrom(from.gm_uid_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetBindGmUidRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetBindGmUidRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBindGmUidRsp::CopyFrom(const GetBindGmUidRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetBindGmUidRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBindGmUidRsp::IsInitialized() const {
  return true;
}

void GetBindGmUidRsp::Swap(GetBindGmUidRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBindGmUidRsp::InternalSwap(GetBindGmUidRsp* other) {
  using std::swap;
  gm_uid_map_.Swap(&other->gm_uid_map_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetBindGmUidRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetBindGmUidRsp

// int32 retcode = 1;
void GetBindGmUidRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetBindGmUidRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetBindGmUidRsp.retcode)
  return retcode_;
}
void GetBindGmUidRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetBindGmUidRsp.retcode)
}

// map<uint32, uint32> gm_uid_map = 2;
int GetBindGmUidRsp::gm_uid_map_size() const {
  return gm_uid_map_.size();
}
void GetBindGmUidRsp::clear_gm_uid_map() {
  gm_uid_map_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GetBindGmUidRsp::gm_uid_map() const {
  // @@protoc_insertion_point(field_map:proto.GetBindGmUidRsp.gm_uid_map)
  return gm_uid_map_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GetBindGmUidRsp::mutable_gm_uid_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GetBindGmUidRsp.gm_uid_map)
  return gm_uid_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlatformAntiAddictNotify::kMsgTypeFieldNumber;
const int PlatformAntiAddictNotify::kMsgFieldNumber;
const int PlatformAntiAddictNotify::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlatformAntiAddictNotify::PlatformAntiAddictNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlatformAntiAddictNotify)
}
PlatformAntiAddictNotify::PlatformAntiAddictNotify(const PlatformAntiAddictNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.level().size() > 0) {
    level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.level_);
  }
  msg_type_ = from.msg_type_;
  // @@protoc_insertion_point(copy_constructor:proto.PlatformAntiAddictNotify)
}

void PlatformAntiAddictNotify::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_type_ = 0;
  _cached_size_ = 0;
}

PlatformAntiAddictNotify::~PlatformAntiAddictNotify() {
  // @@protoc_insertion_point(destructor:proto.PlatformAntiAddictNotify)
  SharedDtor();
}

void PlatformAntiAddictNotify::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlatformAntiAddictNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatformAntiAddictNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlatformAntiAddictNotify& PlatformAntiAddictNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlatformAntiAddictNotify* PlatformAntiAddictNotify::New(::google::protobuf::Arena* arena) const {
  PlatformAntiAddictNotify* n = new PlatformAntiAddictNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlatformAntiAddictNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlatformAntiAddictNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_type_ = 0;
  _internal_metadata_.Clear();
}

bool PlatformAntiAddictNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlatformAntiAddictNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 msg_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlatformAntiAddictNotify.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string level = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_level()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->level().data(), static_cast<int>(this->level().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.PlatformAntiAddictNotify.level"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlatformAntiAddictNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlatformAntiAddictNotify)
  return false;
#undef DO_
}

void PlatformAntiAddictNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlatformAntiAddictNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 msg_type = 2;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->msg_type(), output);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlatformAntiAddictNotify.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->msg(), output);
  }

  // string level = 4;
  if (this->level().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->level().data(), static_cast<int>(this->level().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlatformAntiAddictNotify.level");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->level(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlatformAntiAddictNotify)
}

::google::protobuf::uint8* PlatformAntiAddictNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlatformAntiAddictNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 msg_type = 2;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->msg_type(), target);
  }

  // string msg = 3;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlatformAntiAddictNotify.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->msg(), target);
  }

  // string level = 4;
  if (this->level().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->level().data(), static_cast<int>(this->level().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.PlatformAntiAddictNotify.level");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->level(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlatformAntiAddictNotify)
  return target;
}

size_t PlatformAntiAddictNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlatformAntiAddictNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 3;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // string level = 4;
  if (this->level().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->level());
  }

  // int32 msg_type = 2;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msg_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatformAntiAddictNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlatformAntiAddictNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const PlatformAntiAddictNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlatformAntiAddictNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlatformAntiAddictNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlatformAntiAddictNotify)
    MergeFrom(*source);
  }
}

void PlatformAntiAddictNotify::MergeFrom(const PlatformAntiAddictNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlatformAntiAddictNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.level().size() > 0) {

    level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.level_);
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
}

void PlatformAntiAddictNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlatformAntiAddictNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformAntiAddictNotify::CopyFrom(const PlatformAntiAddictNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlatformAntiAddictNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformAntiAddictNotify::IsInitialized() const {
  return true;
}

void PlatformAntiAddictNotify::Swap(PlatformAntiAddictNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlatformAntiAddictNotify::InternalSwap(PlatformAntiAddictNotify* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  level_.Swap(&other->level_);
  swap(msg_type_, other->msg_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlatformAntiAddictNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlatformAntiAddictNotify

// int32 msg_type = 2;
void PlatformAntiAddictNotify::clear_msg_type() {
  msg_type_ = 0;
}
::google::protobuf::int32 PlatformAntiAddictNotify::msg_type() const {
  // @@protoc_insertion_point(field_get:proto.PlatformAntiAddictNotify.msg_type)
  return msg_type_;
}
void PlatformAntiAddictNotify::set_msg_type(::google::protobuf::int32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformAntiAddictNotify.msg_type)
}

// string msg = 3;
void PlatformAntiAddictNotify::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlatformAntiAddictNotify::msg() const {
  // @@protoc_insertion_point(field_get:proto.PlatformAntiAddictNotify.msg)
  return msg_.GetNoArena();
}
void PlatformAntiAddictNotify::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlatformAntiAddictNotify.msg)
}
#if LANG_CXX11
void PlatformAntiAddictNotify::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlatformAntiAddictNotify.msg)
}
#endif
void PlatformAntiAddictNotify::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlatformAntiAddictNotify.msg)
}
void PlatformAntiAddictNotify::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlatformAntiAddictNotify.msg)
}
::std::string* PlatformAntiAddictNotify::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlatformAntiAddictNotify.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlatformAntiAddictNotify::release_msg() {
  // @@protoc_insertion_point(field_release:proto.PlatformAntiAddictNotify.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlatformAntiAddictNotify::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformAntiAddictNotify.msg)
}

// string level = 4;
void PlatformAntiAddictNotify::clear_level() {
  level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlatformAntiAddictNotify::level() const {
  // @@protoc_insertion_point(field_get:proto.PlatformAntiAddictNotify.level)
  return level_.GetNoArena();
}
void PlatformAntiAddictNotify::set_level(const ::std::string& value) {
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlatformAntiAddictNotify.level)
}
#if LANG_CXX11
void PlatformAntiAddictNotify::set_level(::std::string&& value) {
  
  level_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlatformAntiAddictNotify.level)
}
#endif
void PlatformAntiAddictNotify::set_level(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlatformAntiAddictNotify.level)
}
void PlatformAntiAddictNotify::set_level(const char* value, size_t size) {
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlatformAntiAddictNotify.level)
}
::std::string* PlatformAntiAddictNotify::mutable_level() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlatformAntiAddictNotify.level)
  return level_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlatformAntiAddictNotify::release_level() {
  // @@protoc_insertion_point(field_release:proto.PlatformAntiAddictNotify.level)
  
  return level_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlatformAntiAddictNotify::set_allocated_level(::std::string* level) {
  if (level != NULL) {
    
  } else {
    
  }
  level_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformAntiAddictNotify.level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLoginPerSecondReq::PlayerLoginPerSecondReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLoginPerSecondReq)
}
PlayerLoginPerSecondReq::PlayerLoginPerSecondReq(const PlayerLoginPerSecondReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLoginPerSecondReq)
}

void PlayerLoginPerSecondReq::SharedCtor() {
  _cached_size_ = 0;
}

PlayerLoginPerSecondReq::~PlayerLoginPerSecondReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerLoginPerSecondReq)
  SharedDtor();
}

void PlayerLoginPerSecondReq::SharedDtor() {
}

void PlayerLoginPerSecondReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLoginPerSecondReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLoginPerSecondReq& PlayerLoginPerSecondReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLoginPerSecondReq* PlayerLoginPerSecondReq::New(::google::protobuf::Arena* arena) const {
  PlayerLoginPerSecondReq* n = new PlayerLoginPerSecondReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLoginPerSecondReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLoginPerSecondReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PlayerLoginPerSecondReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLoginPerSecondReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLoginPerSecondReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLoginPerSecondReq)
  return false;
#undef DO_
}

void PlayerLoginPerSecondReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLoginPerSecondReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLoginPerSecondReq)
}

::google::protobuf::uint8* PlayerLoginPerSecondReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLoginPerSecondReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLoginPerSecondReq)
  return target;
}

size_t PlayerLoginPerSecondReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLoginPerSecondReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLoginPerSecondReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLoginPerSecondReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLoginPerSecondReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLoginPerSecondReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLoginPerSecondReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLoginPerSecondReq)
    MergeFrom(*source);
  }
}

void PlayerLoginPerSecondReq::MergeFrom(const PlayerLoginPerSecondReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLoginPerSecondReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PlayerLoginPerSecondReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLoginPerSecondReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLoginPerSecondReq::CopyFrom(const PlayerLoginPerSecondReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLoginPerSecondReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLoginPerSecondReq::IsInitialized() const {
  return true;
}

void PlayerLoginPerSecondReq::Swap(PlayerLoginPerSecondReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLoginPerSecondReq::InternalSwap(PlayerLoginPerSecondReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLoginPerSecondReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLoginPerSecondReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLoginPerSecondRsp::kRetcodeFieldNumber;
const int PlayerLoginPerSecondRsp::kPlayerLoginPerSecondFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLoginPerSecondRsp::PlayerLoginPerSecondRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerLoginPerSecondRsp)
}
PlayerLoginPerSecondRsp::PlayerLoginPerSecondRsp(const PlayerLoginPerSecondRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_login_per_second_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(player_login_per_second_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerLoginPerSecondRsp)
}

void PlayerLoginPerSecondRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_login_per_second_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(player_login_per_second_));
  _cached_size_ = 0;
}

PlayerLoginPerSecondRsp::~PlayerLoginPerSecondRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerLoginPerSecondRsp)
  SharedDtor();
}

void PlayerLoginPerSecondRsp::SharedDtor() {
}

void PlayerLoginPerSecondRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerLoginPerSecondRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLoginPerSecondRsp& PlayerLoginPerSecondRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerLoginPerSecondRsp* PlayerLoginPerSecondRsp::New(::google::protobuf::Arena* arena) const {
  PlayerLoginPerSecondRsp* n = new PlayerLoginPerSecondRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerLoginPerSecondRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerLoginPerSecondRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_login_per_second_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(player_login_per_second_));
  _internal_metadata_.Clear();
}

bool PlayerLoginPerSecondRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerLoginPerSecondRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 player_login_per_second = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_login_per_second_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerLoginPerSecondRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerLoginPerSecondRsp)
  return false;
#undef DO_
}

void PlayerLoginPerSecondRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerLoginPerSecondRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 player_login_per_second = 2;
  if (this->player_login_per_second() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->player_login_per_second(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerLoginPerSecondRsp)
}

::google::protobuf::uint8* PlayerLoginPerSecondRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerLoginPerSecondRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 player_login_per_second = 2;
  if (this->player_login_per_second() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->player_login_per_second(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerLoginPerSecondRsp)
  return target;
}

size_t PlayerLoginPerSecondRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerLoginPerSecondRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 player_login_per_second = 2;
  if (this->player_login_per_second() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_login_per_second());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerLoginPerSecondRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerLoginPerSecondRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLoginPerSecondRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLoginPerSecondRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerLoginPerSecondRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerLoginPerSecondRsp)
    MergeFrom(*source);
  }
}

void PlayerLoginPerSecondRsp::MergeFrom(const PlayerLoginPerSecondRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerLoginPerSecondRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.player_login_per_second() != 0) {
    set_player_login_per_second(from.player_login_per_second());
  }
}

void PlayerLoginPerSecondRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerLoginPerSecondRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLoginPerSecondRsp::CopyFrom(const PlayerLoginPerSecondRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerLoginPerSecondRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLoginPerSecondRsp::IsInitialized() const {
  return true;
}

void PlayerLoginPerSecondRsp::Swap(PlayerLoginPerSecondRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLoginPerSecondRsp::InternalSwap(PlayerLoginPerSecondRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(player_login_per_second_, other->player_login_per_second_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerLoginPerSecondRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerLoginPerSecondRsp

// int32 retcode = 1;
void PlayerLoginPerSecondRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerLoginPerSecondRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginPerSecondRsp.retcode)
  return retcode_;
}
void PlayerLoginPerSecondRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginPerSecondRsp.retcode)
}

// uint32 player_login_per_second = 2;
void PlayerLoginPerSecondRsp::clear_player_login_per_second() {
  player_login_per_second_ = 0u;
}
::google::protobuf::uint32 PlayerLoginPerSecondRsp::player_login_per_second() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginPerSecondRsp.player_login_per_second)
  return player_login_per_second_;
}
void PlayerLoginPerSecondRsp::set_player_login_per_second(::google::protobuf::uint32 value) {
  
  player_login_per_second_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginPerSecondRsp.player_login_per_second)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FineGrainedPlayerNumReq::FineGrainedPlayerNumReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FineGrainedPlayerNumReq)
}
FineGrainedPlayerNumReq::FineGrainedPlayerNumReq(const FineGrainedPlayerNumReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.FineGrainedPlayerNumReq)
}

void FineGrainedPlayerNumReq::SharedCtor() {
  _cached_size_ = 0;
}

FineGrainedPlayerNumReq::~FineGrainedPlayerNumReq() {
  // @@protoc_insertion_point(destructor:proto.FineGrainedPlayerNumReq)
  SharedDtor();
}

void FineGrainedPlayerNumReq::SharedDtor() {
}

void FineGrainedPlayerNumReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FineGrainedPlayerNumReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FineGrainedPlayerNumReq& FineGrainedPlayerNumReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

FineGrainedPlayerNumReq* FineGrainedPlayerNumReq::New(::google::protobuf::Arena* arena) const {
  FineGrainedPlayerNumReq* n = new FineGrainedPlayerNumReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FineGrainedPlayerNumReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FineGrainedPlayerNumReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool FineGrainedPlayerNumReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FineGrainedPlayerNumReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FineGrainedPlayerNumReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FineGrainedPlayerNumReq)
  return false;
#undef DO_
}

void FineGrainedPlayerNumReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FineGrainedPlayerNumReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FineGrainedPlayerNumReq)
}

::google::protobuf::uint8* FineGrainedPlayerNumReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FineGrainedPlayerNumReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FineGrainedPlayerNumReq)
  return target;
}

size_t FineGrainedPlayerNumReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FineGrainedPlayerNumReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FineGrainedPlayerNumReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FineGrainedPlayerNumReq)
  GOOGLE_DCHECK_NE(&from, this);
  const FineGrainedPlayerNumReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FineGrainedPlayerNumReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FineGrainedPlayerNumReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FineGrainedPlayerNumReq)
    MergeFrom(*source);
  }
}

void FineGrainedPlayerNumReq::MergeFrom(const FineGrainedPlayerNumReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FineGrainedPlayerNumReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FineGrainedPlayerNumReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FineGrainedPlayerNumReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FineGrainedPlayerNumReq::CopyFrom(const FineGrainedPlayerNumReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FineGrainedPlayerNumReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FineGrainedPlayerNumReq::IsInitialized() const {
  return true;
}

void FineGrainedPlayerNumReq::Swap(FineGrainedPlayerNumReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FineGrainedPlayerNumReq::InternalSwap(FineGrainedPlayerNumReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FineGrainedPlayerNumReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FineGrainedPlayerNumReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

FineGrainedPlayerNumRsp::FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry::FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry() {}
FineGrainedPlayerNumRsp::FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry::FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata FineGrainedPlayerNumRsp::FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[37];
}
void FineGrainedPlayerNumRsp::FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void FineGrainedPlayerNumRsp::FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry::MergeFrom(const FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FineGrainedPlayerNumRsp::kRetcodeFieldNumber;
const int FineGrainedPlayerNumRsp::kOnlinePlayerNumFieldNumber;
const int FineGrainedPlayerNumRsp::kFineGrainedPlayerNumMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FineGrainedPlayerNumRsp::FineGrainedPlayerNumRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.FineGrainedPlayerNumRsp)
}
FineGrainedPlayerNumRsp::FineGrainedPlayerNumRsp(const FineGrainedPlayerNumRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fine_grained_player_num_map_.MergeFrom(from.fine_grained_player_num_map_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&online_player_num_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(online_player_num_));
  // @@protoc_insertion_point(copy_constructor:proto.FineGrainedPlayerNumRsp)
}

void FineGrainedPlayerNumRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&online_player_num_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(online_player_num_));
  _cached_size_ = 0;
}

FineGrainedPlayerNumRsp::~FineGrainedPlayerNumRsp() {
  // @@protoc_insertion_point(destructor:proto.FineGrainedPlayerNumRsp)
  SharedDtor();
}

void FineGrainedPlayerNumRsp::SharedDtor() {
}

void FineGrainedPlayerNumRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FineGrainedPlayerNumRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FineGrainedPlayerNumRsp& FineGrainedPlayerNumRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

FineGrainedPlayerNumRsp* FineGrainedPlayerNumRsp::New(::google::protobuf::Arena* arena) const {
  FineGrainedPlayerNumRsp* n = new FineGrainedPlayerNumRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FineGrainedPlayerNumRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.FineGrainedPlayerNumRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fine_grained_player_num_map_.Clear();
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&online_player_num_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(online_player_num_));
  _internal_metadata_.Clear();
}

bool FineGrainedPlayerNumRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.FineGrainedPlayerNumRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 online_player_num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &online_player_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint32> fine_grained_player_num_map = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry::Parser< ::google::protobuf::internal::MapField<
              FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&fine_grained_player_num_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.FineGrainedPlayerNumRsp.FineGrainedPlayerNumMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.FineGrainedPlayerNumRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.FineGrainedPlayerNumRsp)
  return false;
#undef DO_
}

void FineGrainedPlayerNumRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.FineGrainedPlayerNumRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 online_player_num = 2;
  if (this->online_player_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->online_player_num(), output);
  }

  // map<string, uint32> fine_grained_player_num_map = 3;
  if (!this->fine_grained_player_num_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.FineGrainedPlayerNumRsp.FineGrainedPlayerNumMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->fine_grained_player_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->fine_grained_player_num_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->fine_grained_player_num_map().begin();
          it != this->fine_grained_player_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(fine_grained_player_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->fine_grained_player_num_map().begin();
          it != this->fine_grained_player_num_map().end(); ++it) {
        entry.reset(fine_grained_player_num_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.FineGrainedPlayerNumRsp)
}

::google::protobuf::uint8* FineGrainedPlayerNumRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.FineGrainedPlayerNumRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 online_player_num = 2;
  if (this->online_player_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->online_player_num(), target);
  }

  // map<string, uint32> fine_grained_player_num_map = 3;
  if (!this->fine_grained_player_num_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "proto.FineGrainedPlayerNumRsp.FineGrainedPlayerNumMapEntry.key");
      }
    };

    if (deterministic &&
        this->fine_grained_player_num_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->fine_grained_player_num_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->fine_grained_player_num_map().begin();
          it != this->fine_grained_player_num_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(fine_grained_player_num_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->fine_grained_player_num_map().begin();
          it != this->fine_grained_player_num_map().end(); ++it) {
        entry.reset(fine_grained_player_num_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.FineGrainedPlayerNumRsp)
  return target;
}

size_t FineGrainedPlayerNumRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.FineGrainedPlayerNumRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint32> fine_grained_player_num_map = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->fine_grained_player_num_map_size());
  {
    ::google::protobuf::scoped_ptr<FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
        it = this->fine_grained_player_num_map().begin();
        it != this->fine_grained_player_num_map().end(); ++it) {
      entry.reset(fine_grained_player_num_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 online_player_num = 2;
  if (this->online_player_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->online_player_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FineGrainedPlayerNumRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.FineGrainedPlayerNumRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const FineGrainedPlayerNumRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FineGrainedPlayerNumRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.FineGrainedPlayerNumRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.FineGrainedPlayerNumRsp)
    MergeFrom(*source);
  }
}

void FineGrainedPlayerNumRsp::MergeFrom(const FineGrainedPlayerNumRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.FineGrainedPlayerNumRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fine_grained_player_num_map_.MergeFrom(from.fine_grained_player_num_map_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.online_player_num() != 0) {
    set_online_player_num(from.online_player_num());
  }
}

void FineGrainedPlayerNumRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.FineGrainedPlayerNumRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FineGrainedPlayerNumRsp::CopyFrom(const FineGrainedPlayerNumRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.FineGrainedPlayerNumRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FineGrainedPlayerNumRsp::IsInitialized() const {
  return true;
}

void FineGrainedPlayerNumRsp::Swap(FineGrainedPlayerNumRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FineGrainedPlayerNumRsp::InternalSwap(FineGrainedPlayerNumRsp* other) {
  using std::swap;
  fine_grained_player_num_map_.Swap(&other->fine_grained_player_num_map_);
  swap(retcode_, other->retcode_);
  swap(online_player_num_, other->online_player_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FineGrainedPlayerNumRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FineGrainedPlayerNumRsp

// int32 retcode = 1;
void FineGrainedPlayerNumRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 FineGrainedPlayerNumRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.FineGrainedPlayerNumRsp.retcode)
  return retcode_;
}
void FineGrainedPlayerNumRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.FineGrainedPlayerNumRsp.retcode)
}

// uint32 online_player_num = 2;
void FineGrainedPlayerNumRsp::clear_online_player_num() {
  online_player_num_ = 0u;
}
::google::protobuf::uint32 FineGrainedPlayerNumRsp::online_player_num() const {
  // @@protoc_insertion_point(field_get:proto.FineGrainedPlayerNumRsp.online_player_num)
  return online_player_num_;
}
void FineGrainedPlayerNumRsp::set_online_player_num(::google::protobuf::uint32 value) {
  
  online_player_num_ = value;
  // @@protoc_insertion_point(field_set:proto.FineGrainedPlayerNumRsp.online_player_num)
}

// map<string, uint32> fine_grained_player_num_map = 3;
int FineGrainedPlayerNumRsp::fine_grained_player_num_map_size() const {
  return fine_grained_player_num_map_.size();
}
void FineGrainedPlayerNumRsp::clear_fine_grained_player_num_map() {
  fine_grained_player_num_map_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
FineGrainedPlayerNumRsp::fine_grained_player_num_map() const {
  // @@protoc_insertion_point(field_map:proto.FineGrainedPlayerNumRsp.fine_grained_player_num_map)
  return fine_grained_player_num_map_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
FineGrainedPlayerNumRsp::mutable_fine_grained_player_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.FineGrainedPlayerNumRsp.fine_grained_player_num_map)
  return fine_grained_player_num_map_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckGameCrcVersionReq::kPlatformFieldNumber;
const int CheckGameCrcVersionReq::kClientVersionStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckGameCrcVersionReq::CheckGameCrcVersionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CheckGameCrcVersionReq)
}
CheckGameCrcVersionReq::CheckGameCrcVersionReq(const CheckGameCrcVersionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_version_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_version_str().size() > 0) {
    client_version_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_str_);
  }
  platform_ = from.platform_;
  // @@protoc_insertion_point(copy_constructor:proto.CheckGameCrcVersionReq)
}

void CheckGameCrcVersionReq::SharedCtor() {
  client_version_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_ = 0u;
  _cached_size_ = 0;
}

CheckGameCrcVersionReq::~CheckGameCrcVersionReq() {
  // @@protoc_insertion_point(destructor:proto.CheckGameCrcVersionReq)
  SharedDtor();
}

void CheckGameCrcVersionReq::SharedDtor() {
  client_version_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckGameCrcVersionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckGameCrcVersionReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckGameCrcVersionReq& CheckGameCrcVersionReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckGameCrcVersionReq* CheckGameCrcVersionReq::New(::google::protobuf::Arena* arena) const {
  CheckGameCrcVersionReq* n = new CheckGameCrcVersionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckGameCrcVersionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CheckGameCrcVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_version_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  platform_ = 0u;
  _internal_metadata_.Clear();
}

bool CheckGameCrcVersionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CheckGameCrcVersionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 platform = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_version_str = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version_str().data(), static_cast<int>(this->client_version_str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.CheckGameCrcVersionReq.client_version_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CheckGameCrcVersionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CheckGameCrcVersionReq)
  return false;
#undef DO_
}

void CheckGameCrcVersionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CheckGameCrcVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 platform = 1;
  if (this->platform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->platform(), output);
  }

  // string client_version_str = 2;
  if (this->client_version_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version_str().data(), static_cast<int>(this->client_version_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.CheckGameCrcVersionReq.client_version_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->client_version_str(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CheckGameCrcVersionReq)
}

::google::protobuf::uint8* CheckGameCrcVersionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CheckGameCrcVersionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 platform = 1;
  if (this->platform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->platform(), target);
  }

  // string client_version_str = 2;
  if (this->client_version_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version_str().data(), static_cast<int>(this->client_version_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.CheckGameCrcVersionReq.client_version_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->client_version_str(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CheckGameCrcVersionReq)
  return target;
}

size_t CheckGameCrcVersionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CheckGameCrcVersionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string client_version_str = 2;
  if (this->client_version_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version_str());
  }

  // uint32 platform = 1;
  if (this->platform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckGameCrcVersionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CheckGameCrcVersionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckGameCrcVersionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckGameCrcVersionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CheckGameCrcVersionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CheckGameCrcVersionReq)
    MergeFrom(*source);
  }
}

void CheckGameCrcVersionReq::MergeFrom(const CheckGameCrcVersionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CheckGameCrcVersionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_version_str().size() > 0) {

    client_version_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_str_);
  }
  if (from.platform() != 0) {
    set_platform(from.platform());
  }
}

void CheckGameCrcVersionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CheckGameCrcVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckGameCrcVersionReq::CopyFrom(const CheckGameCrcVersionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CheckGameCrcVersionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckGameCrcVersionReq::IsInitialized() const {
  return true;
}

void CheckGameCrcVersionReq::Swap(CheckGameCrcVersionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckGameCrcVersionReq::InternalSwap(CheckGameCrcVersionReq* other) {
  using std::swap;
  client_version_str_.Swap(&other->client_version_str_);
  swap(platform_, other->platform_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckGameCrcVersionReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckGameCrcVersionReq

// uint32 platform = 1;
void CheckGameCrcVersionReq::clear_platform() {
  platform_ = 0u;
}
::google::protobuf::uint32 CheckGameCrcVersionReq::platform() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionReq.platform)
  return platform_;
}
void CheckGameCrcVersionReq::set_platform(::google::protobuf::uint32 value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionReq.platform)
}

// string client_version_str = 2;
void CheckGameCrcVersionReq::clear_client_version_str() {
  client_version_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckGameCrcVersionReq::client_version_str() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionReq.client_version_str)
  return client_version_str_.GetNoArena();
}
void CheckGameCrcVersionReq::set_client_version_str(const ::std::string& value) {
  
  client_version_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionReq.client_version_str)
}
#if LANG_CXX11
void CheckGameCrcVersionReq::set_client_version_str(::std::string&& value) {
  
  client_version_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CheckGameCrcVersionReq.client_version_str)
}
#endif
void CheckGameCrcVersionReq::set_client_version_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CheckGameCrcVersionReq.client_version_str)
}
void CheckGameCrcVersionReq::set_client_version_str(const char* value, size_t size) {
  
  client_version_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CheckGameCrcVersionReq.client_version_str)
}
::std::string* CheckGameCrcVersionReq::mutable_client_version_str() {
  
  // @@protoc_insertion_point(field_mutable:proto.CheckGameCrcVersionReq.client_version_str)
  return client_version_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckGameCrcVersionReq::release_client_version_str() {
  // @@protoc_insertion_point(field_release:proto.CheckGameCrcVersionReq.client_version_str)
  
  return client_version_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckGameCrcVersionReq::set_allocated_client_version_str(::std::string* client_version_str) {
  if (client_version_str != NULL) {
    
  } else {
    
  }
  client_version_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version_str);
  // @@protoc_insertion_point(field_set_allocated:proto.CheckGameCrcVersionReq.client_version_str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckGameCrcVersionRsp::kRetcodeFieldNumber;
const int CheckGameCrcVersionRsp::kTotalGameFieldNumber;
const int CheckGameCrcVersionRsp::kPlatformFieldNumber;
const int CheckGameCrcVersionRsp::kClientVersionStrFieldNumber;
const int CheckGameCrcVersionRsp::kWrongNumFieldNumber;
const int CheckGameCrcVersionRsp::kWrongNameListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckGameCrcVersionRsp::CheckGameCrcVersionRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.CheckGameCrcVersionRsp)
}
CheckGameCrcVersionRsp::CheckGameCrcVersionRsp(const CheckGameCrcVersionRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      wrong_name_list_(from.wrong_name_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_version_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_version_str().size() > 0) {
    client_version_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_str_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&wrong_num_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(wrong_num_));
  // @@protoc_insertion_point(copy_constructor:proto.CheckGameCrcVersionRsp)
}

void CheckGameCrcVersionRsp::SharedCtor() {
  client_version_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wrong_num_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(wrong_num_));
  _cached_size_ = 0;
}

CheckGameCrcVersionRsp::~CheckGameCrcVersionRsp() {
  // @@protoc_insertion_point(destructor:proto.CheckGameCrcVersionRsp)
  SharedDtor();
}

void CheckGameCrcVersionRsp::SharedDtor() {
  client_version_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckGameCrcVersionRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckGameCrcVersionRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckGameCrcVersionRsp& CheckGameCrcVersionRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckGameCrcVersionRsp* CheckGameCrcVersionRsp::New(::google::protobuf::Arena* arena) const {
  CheckGameCrcVersionRsp* n = new CheckGameCrcVersionRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckGameCrcVersionRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CheckGameCrcVersionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  wrong_name_list_.Clear();
  client_version_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wrong_num_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(wrong_num_));
  _internal_metadata_.Clear();
}

bool CheckGameCrcVersionRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.CheckGameCrcVersionRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_game = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_game_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 platform = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_version_str = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_version_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_version_str().data(), static_cast<int>(this->client_version_str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.CheckGameCrcVersionRsp.client_version_str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 wrong_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &wrong_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 wrong_name_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_wrong_name_list())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_wrong_name_list())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.CheckGameCrcVersionRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.CheckGameCrcVersionRsp)
  return false;
#undef DO_
}

void CheckGameCrcVersionRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.CheckGameCrcVersionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 total_game = 2;
  if (this->total_game() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total_game(), output);
  }

  // uint32 platform = 3;
  if (this->platform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->platform(), output);
  }

  // string client_version_str = 4;
  if (this->client_version_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version_str().data(), static_cast<int>(this->client_version_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.CheckGameCrcVersionRsp.client_version_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->client_version_str(), output);
  }

  // uint32 wrong_num = 5;
  if (this->wrong_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->wrong_num(), output);
  }

  // repeated uint32 wrong_name_list = 6;
  if (this->wrong_name_list_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _wrong_name_list_cached_byte_size_));
  }
  for (int i = 0, n = this->wrong_name_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->wrong_name_list(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.CheckGameCrcVersionRsp)
}

::google::protobuf::uint8* CheckGameCrcVersionRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.CheckGameCrcVersionRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 total_game = 2;
  if (this->total_game() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total_game(), target);
  }

  // uint32 platform = 3;
  if (this->platform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->platform(), target);
  }

  // string client_version_str = 4;
  if (this->client_version_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_version_str().data(), static_cast<int>(this->client_version_str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.CheckGameCrcVersionRsp.client_version_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->client_version_str(), target);
  }

  // uint32 wrong_num = 5;
  if (this->wrong_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->wrong_num(), target);
  }

  // repeated uint32 wrong_name_list = 6;
  if (this->wrong_name_list_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _wrong_name_list_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->wrong_name_list_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CheckGameCrcVersionRsp)
  return target;
}

size_t CheckGameCrcVersionRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CheckGameCrcVersionRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 wrong_name_list = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->wrong_name_list_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _wrong_name_list_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string client_version_str = 4;
  if (this->client_version_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_version_str());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 total_game = 2;
  if (this->total_game() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_game());
  }

  // uint32 platform = 3;
  if (this->platform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform());
  }

  // uint32 wrong_num = 5;
  if (this->wrong_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->wrong_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckGameCrcVersionRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.CheckGameCrcVersionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckGameCrcVersionRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckGameCrcVersionRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.CheckGameCrcVersionRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.CheckGameCrcVersionRsp)
    MergeFrom(*source);
  }
}

void CheckGameCrcVersionRsp::MergeFrom(const CheckGameCrcVersionRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.CheckGameCrcVersionRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  wrong_name_list_.MergeFrom(from.wrong_name_list_);
  if (from.client_version_str().size() > 0) {

    client_version_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_version_str_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.total_game() != 0) {
    set_total_game(from.total_game());
  }
  if (from.platform() != 0) {
    set_platform(from.platform());
  }
  if (from.wrong_num() != 0) {
    set_wrong_num(from.wrong_num());
  }
}

void CheckGameCrcVersionRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.CheckGameCrcVersionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckGameCrcVersionRsp::CopyFrom(const CheckGameCrcVersionRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CheckGameCrcVersionRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckGameCrcVersionRsp::IsInitialized() const {
  return true;
}

void CheckGameCrcVersionRsp::Swap(CheckGameCrcVersionRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckGameCrcVersionRsp::InternalSwap(CheckGameCrcVersionRsp* other) {
  using std::swap;
  wrong_name_list_.InternalSwap(&other->wrong_name_list_);
  client_version_str_.Swap(&other->client_version_str_);
  swap(retcode_, other->retcode_);
  swap(total_game_, other->total_game_);
  swap(platform_, other->platform_);
  swap(wrong_num_, other->wrong_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckGameCrcVersionRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckGameCrcVersionRsp

// int32 retcode = 1;
void CheckGameCrcVersionRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 CheckGameCrcVersionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionRsp.retcode)
  return retcode_;
}
void CheckGameCrcVersionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionRsp.retcode)
}

// uint32 total_game = 2;
void CheckGameCrcVersionRsp::clear_total_game() {
  total_game_ = 0u;
}
::google::protobuf::uint32 CheckGameCrcVersionRsp::total_game() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionRsp.total_game)
  return total_game_;
}
void CheckGameCrcVersionRsp::set_total_game(::google::protobuf::uint32 value) {
  
  total_game_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionRsp.total_game)
}

// uint32 platform = 3;
void CheckGameCrcVersionRsp::clear_platform() {
  platform_ = 0u;
}
::google::protobuf::uint32 CheckGameCrcVersionRsp::platform() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionRsp.platform)
  return platform_;
}
void CheckGameCrcVersionRsp::set_platform(::google::protobuf::uint32 value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionRsp.platform)
}

// string client_version_str = 4;
void CheckGameCrcVersionRsp::clear_client_version_str() {
  client_version_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckGameCrcVersionRsp::client_version_str() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionRsp.client_version_str)
  return client_version_str_.GetNoArena();
}
void CheckGameCrcVersionRsp::set_client_version_str(const ::std::string& value) {
  
  client_version_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionRsp.client_version_str)
}
#if LANG_CXX11
void CheckGameCrcVersionRsp::set_client_version_str(::std::string&& value) {
  
  client_version_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CheckGameCrcVersionRsp.client_version_str)
}
#endif
void CheckGameCrcVersionRsp::set_client_version_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CheckGameCrcVersionRsp.client_version_str)
}
void CheckGameCrcVersionRsp::set_client_version_str(const char* value, size_t size) {
  
  client_version_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CheckGameCrcVersionRsp.client_version_str)
}
::std::string* CheckGameCrcVersionRsp::mutable_client_version_str() {
  
  // @@protoc_insertion_point(field_mutable:proto.CheckGameCrcVersionRsp.client_version_str)
  return client_version_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckGameCrcVersionRsp::release_client_version_str() {
  // @@protoc_insertion_point(field_release:proto.CheckGameCrcVersionRsp.client_version_str)
  
  return client_version_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckGameCrcVersionRsp::set_allocated_client_version_str(::std::string* client_version_str) {
  if (client_version_str != NULL) {
    
  } else {
    
  }
  client_version_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version_str);
  // @@protoc_insertion_point(field_set_allocated:proto.CheckGameCrcVersionRsp.client_version_str)
}

// uint32 wrong_num = 5;
void CheckGameCrcVersionRsp::clear_wrong_num() {
  wrong_num_ = 0u;
}
::google::protobuf::uint32 CheckGameCrcVersionRsp::wrong_num() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionRsp.wrong_num)
  return wrong_num_;
}
void CheckGameCrcVersionRsp::set_wrong_num(::google::protobuf::uint32 value) {
  
  wrong_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionRsp.wrong_num)
}

// repeated uint32 wrong_name_list = 6;
int CheckGameCrcVersionRsp::wrong_name_list_size() const {
  return wrong_name_list_.size();
}
void CheckGameCrcVersionRsp::clear_wrong_name_list() {
  wrong_name_list_.Clear();
}
::google::protobuf::uint32 CheckGameCrcVersionRsp::wrong_name_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionRsp.wrong_name_list)
  return wrong_name_list_.Get(index);
}
void CheckGameCrcVersionRsp::set_wrong_name_list(int index, ::google::protobuf::uint32 value) {
  wrong_name_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionRsp.wrong_name_list)
}
void CheckGameCrcVersionRsp::add_wrong_name_list(::google::protobuf::uint32 value) {
  wrong_name_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CheckGameCrcVersionRsp.wrong_name_list)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CheckGameCrcVersionRsp::wrong_name_list() const {
  // @@protoc_insertion_point(field_list:proto.CheckGameCrcVersionRsp.wrong_name_list)
  return wrong_name_list_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CheckGameCrcVersionRsp::mutable_wrong_name_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CheckGameCrcVersionRsp.wrong_name_list)
  return &wrong_name_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRedPointByMuipNotify::kRedPointListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRedPointByMuipNotify::UpdateRedPointByMuipNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.UpdateRedPointByMuipNotify)
}
UpdateRedPointByMuipNotify::UpdateRedPointByMuipNotify(const UpdateRedPointByMuipNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      red_point_list_(from.red_point_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.UpdateRedPointByMuipNotify)
}

void UpdateRedPointByMuipNotify::SharedCtor() {
  _cached_size_ = 0;
}

UpdateRedPointByMuipNotify::~UpdateRedPointByMuipNotify() {
  // @@protoc_insertion_point(destructor:proto.UpdateRedPointByMuipNotify)
  SharedDtor();
}

void UpdateRedPointByMuipNotify::SharedDtor() {
}

void UpdateRedPointByMuipNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRedPointByMuipNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateRedPointByMuipNotify& UpdateRedPointByMuipNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateRedPointByMuipNotify* UpdateRedPointByMuipNotify::New(::google::protobuf::Arena* arena) const {
  UpdateRedPointByMuipNotify* n = new UpdateRedPointByMuipNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateRedPointByMuipNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateRedPointByMuipNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  red_point_list_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateRedPointByMuipNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.UpdateRedPointByMuipNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.RedPointData red_point_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_red_point_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.UpdateRedPointByMuipNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.UpdateRedPointByMuipNotify)
  return false;
#undef DO_
}

void UpdateRedPointByMuipNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.UpdateRedPointByMuipNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.RedPointData red_point_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->red_point_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->red_point_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.UpdateRedPointByMuipNotify)
}

::google::protobuf::uint8* UpdateRedPointByMuipNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateRedPointByMuipNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.RedPointData red_point_list = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->red_point_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->red_point_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateRedPointByMuipNotify)
  return target;
}

size_t UpdateRedPointByMuipNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateRedPointByMuipNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.RedPointData red_point_list = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->red_point_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->red_point_list(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRedPointByMuipNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.UpdateRedPointByMuipNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateRedPointByMuipNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRedPointByMuipNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.UpdateRedPointByMuipNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.UpdateRedPointByMuipNotify)
    MergeFrom(*source);
  }
}

void UpdateRedPointByMuipNotify::MergeFrom(const UpdateRedPointByMuipNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateRedPointByMuipNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  red_point_list_.MergeFrom(from.red_point_list_);
}

void UpdateRedPointByMuipNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.UpdateRedPointByMuipNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRedPointByMuipNotify::CopyFrom(const UpdateRedPointByMuipNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateRedPointByMuipNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRedPointByMuipNotify::IsInitialized() const {
  return true;
}

void UpdateRedPointByMuipNotify::Swap(UpdateRedPointByMuipNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRedPointByMuipNotify::InternalSwap(UpdateRedPointByMuipNotify* other) {
  using std::swap;
  red_point_list_.InternalSwap(&other->red_point_list_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateRedPointByMuipNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateRedPointByMuipNotify

// repeated .proto.RedPointData red_point_list = 1;
int UpdateRedPointByMuipNotify::red_point_list_size() const {
  return red_point_list_.size();
}
void UpdateRedPointByMuipNotify::clear_red_point_list() {
  red_point_list_.Clear();
}
const ::proto::RedPointData& UpdateRedPointByMuipNotify::red_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedPointByMuipNotify.red_point_list)
  return red_point_list_.Get(index);
}
::proto::RedPointData* UpdateRedPointByMuipNotify::mutable_red_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UpdateRedPointByMuipNotify.red_point_list)
  return red_point_list_.Mutable(index);
}
::proto::RedPointData* UpdateRedPointByMuipNotify::add_red_point_list() {
  // @@protoc_insertion_point(field_add:proto.UpdateRedPointByMuipNotify.red_point_list)
  return red_point_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::RedPointData >*
UpdateRedPointByMuipNotify::mutable_red_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdateRedPointByMuipNotify.red_point_list)
  return &red_point_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::RedPointData >&
UpdateRedPointByMuipNotify::red_point_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdateRedPointByMuipNotify.red_point_list)
  return red_point_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendConcertProductReq::kTicketFieldNumber;
const int SendConcertProductReq::kConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendConcertProductReq::SendConcertProductReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SendConcertProductReq)
}
SendConcertProductReq::SendConcertProductReq(const SendConcertProductReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ticket().size() > 0) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  config_id_ = from.config_id_;
  // @@protoc_insertion_point(copy_constructor:proto.SendConcertProductReq)
}

void SendConcertProductReq::SharedCtor() {
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_id_ = 0u;
  _cached_size_ = 0;
}

SendConcertProductReq::~SendConcertProductReq() {
  // @@protoc_insertion_point(destructor:proto.SendConcertProductReq)
  SharedDtor();
}

void SendConcertProductReq::SharedDtor() {
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendConcertProductReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendConcertProductReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendConcertProductReq& SendConcertProductReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendConcertProductReq* SendConcertProductReq::New(::google::protobuf::Arena* arena) const {
  SendConcertProductReq* n = new SendConcertProductReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendConcertProductReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SendConcertProductReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  config_id_ = 0u;
  _internal_metadata_.Clear();
}

bool SendConcertProductReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SendConcertProductReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ticket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ticket().data(), static_cast<int>(this->ticket().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SendConcertProductReq.ticket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SendConcertProductReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SendConcertProductReq)
  return false;
#undef DO_
}

void SendConcertProductReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SendConcertProductReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ticket = 1;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendConcertProductReq.ticket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ticket(), output);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SendConcertProductReq)
}

::google::protobuf::uint8* SendConcertProductReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SendConcertProductReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ticket = 1;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendConcertProductReq.ticket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ticket(), target);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SendConcertProductReq)
  return target;
}

size_t SendConcertProductReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SendConcertProductReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ticket = 1;
  if (this->ticket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticket());
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendConcertProductReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SendConcertProductReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SendConcertProductReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendConcertProductReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SendConcertProductReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SendConcertProductReq)
    MergeFrom(*source);
  }
}

void SendConcertProductReq::MergeFrom(const SendConcertProductReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SendConcertProductReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticket().size() > 0) {

    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
}

void SendConcertProductReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SendConcertProductReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendConcertProductReq::CopyFrom(const SendConcertProductReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SendConcertProductReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendConcertProductReq::IsInitialized() const {
  return true;
}

void SendConcertProductReq::Swap(SendConcertProductReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendConcertProductReq::InternalSwap(SendConcertProductReq* other) {
  using std::swap;
  ticket_.Swap(&other->ticket_);
  swap(config_id_, other->config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendConcertProductReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendConcertProductReq

// string ticket = 1;
void SendConcertProductReq::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SendConcertProductReq::ticket() const {
  // @@protoc_insertion_point(field_get:proto.SendConcertProductReq.ticket)
  return ticket_.GetNoArena();
}
void SendConcertProductReq::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SendConcertProductReq.ticket)
}
#if LANG_CXX11
void SendConcertProductReq::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SendConcertProductReq.ticket)
}
#endif
void SendConcertProductReq::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SendConcertProductReq.ticket)
}
void SendConcertProductReq::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SendConcertProductReq.ticket)
}
::std::string* SendConcertProductReq::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.SendConcertProductReq.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendConcertProductReq::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.SendConcertProductReq.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendConcertProductReq::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.SendConcertProductReq.ticket)
}

// uint32 config_id = 2;
void SendConcertProductReq::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 SendConcertProductReq::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SendConcertProductReq.config_id)
  return config_id_;
}
void SendConcertProductReq::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SendConcertProductReq.config_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendConcertProductRsp::kRetcodeFieldNumber;
const int SendConcertProductRsp::kTicketFieldNumber;
const int SendConcertProductRsp::kConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendConcertProductRsp::SendConcertProductRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.SendConcertProductRsp)
}
SendConcertProductRsp::SendConcertProductRsp(const SendConcertProductRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ticket().size() > 0) {
    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&config_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(config_id_));
  // @@protoc_insertion_point(copy_constructor:proto.SendConcertProductRsp)
}

void SendConcertProductRsp::SharedCtor() {
  ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(config_id_));
  _cached_size_ = 0;
}

SendConcertProductRsp::~SendConcertProductRsp() {
  // @@protoc_insertion_point(destructor:proto.SendConcertProductRsp)
  SharedDtor();
}

void SendConcertProductRsp::SharedDtor() {
  ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendConcertProductRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendConcertProductRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendConcertProductRsp& SendConcertProductRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendConcertProductRsp* SendConcertProductRsp::New(::google::protobuf::Arena* arena) const {
  SendConcertProductRsp* n = new SendConcertProductRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendConcertProductRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SendConcertProductRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(config_id_));
  _internal_metadata_.Clear();
}

bool SendConcertProductRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.SendConcertProductRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ticket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ticket()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ticket().data(), static_cast<int>(this->ticket().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.SendConcertProductRsp.ticket"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.SendConcertProductRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.SendConcertProductRsp)
  return false;
#undef DO_
}

void SendConcertProductRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.SendConcertProductRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // string ticket = 2;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendConcertProductRsp.ticket");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ticket(), output);
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.SendConcertProductRsp)
}

::google::protobuf::uint8* SendConcertProductRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.SendConcertProductRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // string ticket = 2;
  if (this->ticket().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ticket().data(), static_cast<int>(this->ticket().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.SendConcertProductRsp.ticket");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ticket(), target);
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SendConcertProductRsp)
  return target;
}

size_t SendConcertProductRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SendConcertProductRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ticket = 2;
  if (this->ticket().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ticket());
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 config_id = 3;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendConcertProductRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.SendConcertProductRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SendConcertProductRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendConcertProductRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.SendConcertProductRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.SendConcertProductRsp)
    MergeFrom(*source);
  }
}

void SendConcertProductRsp::MergeFrom(const SendConcertProductRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.SendConcertProductRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ticket().size() > 0) {

    ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ticket_);
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
}

void SendConcertProductRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.SendConcertProductRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendConcertProductRsp::CopyFrom(const SendConcertProductRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SendConcertProductRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendConcertProductRsp::IsInitialized() const {
  return true;
}

void SendConcertProductRsp::Swap(SendConcertProductRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendConcertProductRsp::InternalSwap(SendConcertProductRsp* other) {
  using std::swap;
  ticket_.Swap(&other->ticket_);
  swap(retcode_, other->retcode_);
  swap(config_id_, other->config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendConcertProductRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendConcertProductRsp

// int32 retcode = 1;
void SendConcertProductRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 SendConcertProductRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SendConcertProductRsp.retcode)
  return retcode_;
}
void SendConcertProductRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SendConcertProductRsp.retcode)
}

// string ticket = 2;
void SendConcertProductRsp::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SendConcertProductRsp::ticket() const {
  // @@protoc_insertion_point(field_get:proto.SendConcertProductRsp.ticket)
  return ticket_.GetNoArena();
}
void SendConcertProductRsp::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SendConcertProductRsp.ticket)
}
#if LANG_CXX11
void SendConcertProductRsp::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SendConcertProductRsp.ticket)
}
#endif
void SendConcertProductRsp::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SendConcertProductRsp.ticket)
}
void SendConcertProductRsp::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SendConcertProductRsp.ticket)
}
::std::string* SendConcertProductRsp::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.SendConcertProductRsp.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendConcertProductRsp::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.SendConcertProductRsp.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendConcertProductRsp::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.SendConcertProductRsp.ticket)
}

// uint32 config_id = 3;
void SendConcertProductRsp::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 SendConcertProductRsp::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SendConcertProductRsp.config_id)
  return config_id_;
}
void SendConcertProductRsp::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SendConcertProductRsp.config_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryConcertProductInfoReq::kConfigIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryConcertProductInfoReq::QueryConcertProductInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QueryConcertProductInfoReq)
}
QueryConcertProductInfoReq::QueryConcertProductInfoReq(const QueryConcertProductInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  config_id_ = from.config_id_;
  // @@protoc_insertion_point(copy_constructor:proto.QueryConcertProductInfoReq)
}

void QueryConcertProductInfoReq::SharedCtor() {
  config_id_ = 0u;
  _cached_size_ = 0;
}

QueryConcertProductInfoReq::~QueryConcertProductInfoReq() {
  // @@protoc_insertion_point(destructor:proto.QueryConcertProductInfoReq)
  SharedDtor();
}

void QueryConcertProductInfoReq::SharedDtor() {
}

void QueryConcertProductInfoReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryConcertProductInfoReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryConcertProductInfoReq& QueryConcertProductInfoReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryConcertProductInfoReq* QueryConcertProductInfoReq::New(::google::protobuf::Arena* arena) const {
  QueryConcertProductInfoReq* n = new QueryConcertProductInfoReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryConcertProductInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QueryConcertProductInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_id_ = 0u;
  _internal_metadata_.Clear();
}

bool QueryConcertProductInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QueryConcertProductInfoReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 config_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QueryConcertProductInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QueryConcertProductInfoReq)
  return false;
#undef DO_
}

void QueryConcertProductInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QueryConcertProductInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_id = 1;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->config_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QueryConcertProductInfoReq)
}

::google::protobuf::uint8* QueryConcertProductInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QueryConcertProductInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 config_id = 1;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->config_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QueryConcertProductInfoReq)
  return target;
}

size_t QueryConcertProductInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QueryConcertProductInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 config_id = 1;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryConcertProductInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QueryConcertProductInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryConcertProductInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryConcertProductInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QueryConcertProductInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QueryConcertProductInfoReq)
    MergeFrom(*source);
  }
}

void QueryConcertProductInfoReq::MergeFrom(const QueryConcertProductInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QueryConcertProductInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
}

void QueryConcertProductInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QueryConcertProductInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryConcertProductInfoReq::CopyFrom(const QueryConcertProductInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QueryConcertProductInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConcertProductInfoReq::IsInitialized() const {
  return true;
}

void QueryConcertProductInfoReq::Swap(QueryConcertProductInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryConcertProductInfoReq::InternalSwap(QueryConcertProductInfoReq* other) {
  using std::swap;
  swap(config_id_, other->config_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryConcertProductInfoReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryConcertProductInfoReq

// uint32 config_id = 1;
void QueryConcertProductInfoReq::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 QueryConcertProductInfoReq::config_id() const {
  // @@protoc_insertion_point(field_get:proto.QueryConcertProductInfoReq.config_id)
  return config_id_;
}
void QueryConcertProductInfoReq::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryConcertProductInfoReq.config_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryConcertProductInfoRsp::kRetcodeFieldNumber;
const int QueryConcertProductInfoRsp::kConfigIdFieldNumber;
const int QueryConcertProductInfoRsp::kObtainCountFieldNumber;
const int QueryConcertProductInfoRsp::kObtainLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryConcertProductInfoRsp::QueryConcertProductInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.QueryConcertProductInfoRsp)
}
QueryConcertProductInfoRsp::QueryConcertProductInfoRsp(const QueryConcertProductInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&obtain_limit_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(obtain_limit_));
  // @@protoc_insertion_point(copy_constructor:proto.QueryConcertProductInfoRsp)
}

void QueryConcertProductInfoRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obtain_limit_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(obtain_limit_));
  _cached_size_ = 0;
}

QueryConcertProductInfoRsp::~QueryConcertProductInfoRsp() {
  // @@protoc_insertion_point(destructor:proto.QueryConcertProductInfoRsp)
  SharedDtor();
}

void QueryConcertProductInfoRsp::SharedDtor() {
}

void QueryConcertProductInfoRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QueryConcertProductInfoRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryConcertProductInfoRsp& QueryConcertProductInfoRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

QueryConcertProductInfoRsp* QueryConcertProductInfoRsp::New(::google::protobuf::Arena* arena) const {
  QueryConcertProductInfoRsp* n = new QueryConcertProductInfoRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QueryConcertProductInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.QueryConcertProductInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&obtain_limit_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(obtain_limit_));
  _internal_metadata_.Clear();
}

bool QueryConcertProductInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.QueryConcertProductInfoRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 config_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &config_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 obtain_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &obtain_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 obtain_limit = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &obtain_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.QueryConcertProductInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.QueryConcertProductInfoRsp)
  return false;
#undef DO_
}

void QueryConcertProductInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.QueryConcertProductInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->config_id(), output);
  }

  // uint32 obtain_count = 3;
  if (this->obtain_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->obtain_count(), output);
  }

  // uint32 obtain_limit = 4;
  if (this->obtain_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->obtain_limit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.QueryConcertProductInfoRsp)
}

::google::protobuf::uint8* QueryConcertProductInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.QueryConcertProductInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->config_id(), target);
  }

  // uint32 obtain_count = 3;
  if (this->obtain_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->obtain_count(), target);
  }

  // uint32 obtain_limit = 4;
  if (this->obtain_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->obtain_limit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.QueryConcertProductInfoRsp)
  return target;
}

size_t QueryConcertProductInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.QueryConcertProductInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 config_id = 2;
  if (this->config_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->config_id());
  }

  // uint32 obtain_count = 3;
  if (this->obtain_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->obtain_count());
  }

  // uint32 obtain_limit = 4;
  if (this->obtain_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->obtain_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QueryConcertProductInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.QueryConcertProductInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryConcertProductInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryConcertProductInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.QueryConcertProductInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.QueryConcertProductInfoRsp)
    MergeFrom(*source);
  }
}

void QueryConcertProductInfoRsp::MergeFrom(const QueryConcertProductInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.QueryConcertProductInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.config_id() != 0) {
    set_config_id(from.config_id());
  }
  if (from.obtain_count() != 0) {
    set_obtain_count(from.obtain_count());
  }
  if (from.obtain_limit() != 0) {
    set_obtain_limit(from.obtain_limit());
  }
}

void QueryConcertProductInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.QueryConcertProductInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryConcertProductInfoRsp::CopyFrom(const QueryConcertProductInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.QueryConcertProductInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryConcertProductInfoRsp::IsInitialized() const {
  return true;
}

void QueryConcertProductInfoRsp::Swap(QueryConcertProductInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryConcertProductInfoRsp::InternalSwap(QueryConcertProductInfoRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(config_id_, other->config_id_);
  swap(obtain_count_, other->obtain_count_);
  swap(obtain_limit_, other->obtain_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QueryConcertProductInfoRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QueryConcertProductInfoRsp

// int32 retcode = 1;
void QueryConcertProductInfoRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 QueryConcertProductInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QueryConcertProductInfoRsp.retcode)
  return retcode_;
}
void QueryConcertProductInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryConcertProductInfoRsp.retcode)
}

// uint32 config_id = 2;
void QueryConcertProductInfoRsp::clear_config_id() {
  config_id_ = 0u;
}
::google::protobuf::uint32 QueryConcertProductInfoRsp::config_id() const {
  // @@protoc_insertion_point(field_get:proto.QueryConcertProductInfoRsp.config_id)
  return config_id_;
}
void QueryConcertProductInfoRsp::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryConcertProductInfoRsp.config_id)
}

// uint32 obtain_count = 3;
void QueryConcertProductInfoRsp::clear_obtain_count() {
  obtain_count_ = 0u;
}
::google::protobuf::uint32 QueryConcertProductInfoRsp::obtain_count() const {
  // @@protoc_insertion_point(field_get:proto.QueryConcertProductInfoRsp.obtain_count)
  return obtain_count_;
}
void QueryConcertProductInfoRsp::set_obtain_count(::google::protobuf::uint32 value) {
  
  obtain_count_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryConcertProductInfoRsp.obtain_count)
}

// uint32 obtain_limit = 4;
void QueryConcertProductInfoRsp::clear_obtain_limit() {
  obtain_limit_ = 0u;
}
::google::protobuf::uint32 QueryConcertProductInfoRsp::obtain_limit() const {
  // @@protoc_insertion_point(field_get:proto.QueryConcertProductInfoRsp.obtain_limit)
  return obtain_limit_;
}
void QueryConcertProductInfoRsp::set_obtain_limit(::google::protobuf::uint32 value) {
  
  obtain_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryConcertProductInfoRsp.obtain_limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerMpModeReq::PlayerMpModeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerMpModeReq)
}
PlayerMpModeReq::PlayerMpModeReq(const PlayerMpModeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.PlayerMpModeReq)
}

void PlayerMpModeReq::SharedCtor() {
  _cached_size_ = 0;
}

PlayerMpModeReq::~PlayerMpModeReq() {
  // @@protoc_insertion_point(destructor:proto.PlayerMpModeReq)
  SharedDtor();
}

void PlayerMpModeReq::SharedDtor() {
}

void PlayerMpModeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerMpModeReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerMpModeReq& PlayerMpModeReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerMpModeReq* PlayerMpModeReq::New(::google::protobuf::Arena* arena) const {
  PlayerMpModeReq* n = new PlayerMpModeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerMpModeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerMpModeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool PlayerMpModeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerMpModeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerMpModeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerMpModeReq)
  return false;
#undef DO_
}

void PlayerMpModeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerMpModeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerMpModeReq)
}

::google::protobuf::uint8* PlayerMpModeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerMpModeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerMpModeReq)
  return target;
}

size_t PlayerMpModeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerMpModeReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerMpModeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerMpModeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerMpModeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerMpModeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerMpModeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerMpModeReq)
    MergeFrom(*source);
  }
}

void PlayerMpModeReq::MergeFrom(const PlayerMpModeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerMpModeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PlayerMpModeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerMpModeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerMpModeReq::CopyFrom(const PlayerMpModeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerMpModeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerMpModeReq::IsInitialized() const {
  return true;
}

void PlayerMpModeReq::Swap(PlayerMpModeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerMpModeReq::InternalSwap(PlayerMpModeReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerMpModeReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerMpModeReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerMpModeRsp::kRetcodeFieldNumber;
const int PlayerMpModeRsp::kIsMpModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerMpModeRsp::PlayerMpModeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.PlayerMpModeRsp)
}
PlayerMpModeRsp::PlayerMpModeRsp(const PlayerMpModeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_mp_mode_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(is_mp_mode_));
  // @@protoc_insertion_point(copy_constructor:proto.PlayerMpModeRsp)
}

void PlayerMpModeRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_mp_mode_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_mp_mode_));
  _cached_size_ = 0;
}

PlayerMpModeRsp::~PlayerMpModeRsp() {
  // @@protoc_insertion_point(destructor:proto.PlayerMpModeRsp)
  SharedDtor();
}

void PlayerMpModeRsp::SharedDtor() {
}

void PlayerMpModeRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerMpModeRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerMpModeRsp& PlayerMpModeRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerMpModeRsp* PlayerMpModeRsp::New(::google::protobuf::Arena* arena) const {
  PlayerMpModeRsp* n = new PlayerMpModeRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerMpModeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PlayerMpModeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_mp_mode_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(is_mp_mode_));
  _internal_metadata_.Clear();
}

bool PlayerMpModeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.PlayerMpModeRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_mp_mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_mp_mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.PlayerMpModeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.PlayerMpModeRsp)
  return false;
#undef DO_
}

void PlayerMpModeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.PlayerMpModeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // bool is_mp_mode = 2;
  if (this->is_mp_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_mp_mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.PlayerMpModeRsp)
}

::google::protobuf::uint8* PlayerMpModeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.PlayerMpModeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // bool is_mp_mode = 2;
  if (this->is_mp_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_mp_mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PlayerMpModeRsp)
  return target;
}

size_t PlayerMpModeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PlayerMpModeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // bool is_mp_mode = 2;
  if (this->is_mp_mode() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerMpModeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.PlayerMpModeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerMpModeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerMpModeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.PlayerMpModeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.PlayerMpModeRsp)
    MergeFrom(*source);
  }
}

void PlayerMpModeRsp::MergeFrom(const PlayerMpModeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.PlayerMpModeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.is_mp_mode() != 0) {
    set_is_mp_mode(from.is_mp_mode());
  }
}

void PlayerMpModeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.PlayerMpModeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerMpModeRsp::CopyFrom(const PlayerMpModeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PlayerMpModeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerMpModeRsp::IsInitialized() const {
  return true;
}

void PlayerMpModeRsp::Swap(PlayerMpModeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerMpModeRsp::InternalSwap(PlayerMpModeRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(is_mp_mode_, other->is_mp_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerMpModeRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerMpModeRsp

// int32 retcode = 1;
void PlayerMpModeRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 PlayerMpModeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMpModeRsp.retcode)
  return retcode_;
}
void PlayerMpModeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMpModeRsp.retcode)
}

// bool is_mp_mode = 2;
void PlayerMpModeRsp::clear_is_mp_mode() {
  is_mp_mode_ = false;
}
bool PlayerMpModeRsp::is_mp_mode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMpModeRsp.is_mp_mode)
  return is_mp_mode_;
}
void PlayerMpModeRsp::set_is_mp_mode(bool value) {
  
  is_mp_mode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMpModeRsp.is_mp_mode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
