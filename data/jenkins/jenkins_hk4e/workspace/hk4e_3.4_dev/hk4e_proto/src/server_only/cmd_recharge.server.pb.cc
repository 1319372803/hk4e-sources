// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_recharge.server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_only/cmd_recharge.server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
class OrderDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Order>
     _instance;
} _Order_default_instance_;
class RechargeOrderNotifyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<RechargeOrderNotify>
     _instance;
} _RechargeOrderNotify_default_instance_;
class MarkOrderFinishedReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarkOrderFinishedReq>
     _instance;
} _MarkOrderFinishedReq_default_instance_;
class MarkOrderFinishedRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<MarkOrderFinishedRsp>
     _instance;
} _MarkOrderFinishedRsp_default_instance_;
class GetUnfinishedOrderReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetUnfinishedOrderReq>
     _instance;
} _GetUnfinishedOrderReq_default_instance_;
class GetUnfinishedOrderRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetUnfinishedOrderRsp>
     _instance;
} _GetUnfinishedOrderRsp_default_instance_;
class GetSpecificUnfinishedReqDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetSpecificUnfinishedReq>
     _instance;
} _GetSpecificUnfinishedReq_default_instance_;
class GetSpecificUnfinishedRspDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GetSpecificUnfinishedRsp>
     _instance;
} _GetSpecificUnfinishedRsp_default_instance_;

namespace protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, product_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, product_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, product_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, coin_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, total_fee_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, currency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, price_tier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, trade_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, trade_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, channel_order_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, pay_plat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, extend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, create_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, bonus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, bonus_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, vip_point_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, pay_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, pay_vendor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, client_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Order, client_ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeOrderNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeOrderNotify, order_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkOrderFinishedReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkOrderFinishedReq, order_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkOrderFinishedReq, finish_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkOrderFinishedReq, is_retry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkOrderFinishedRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkOrderFinishedRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MarkOrderFinishedRsp, order_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUnfinishedOrderReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUnfinishedOrderRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUnfinishedOrderRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetUnfinishedOrderRsp, order_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSpecificUnfinishedReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSpecificUnfinishedReq, order_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSpecificUnfinishedRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSpecificUnfinishedRsp, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetSpecificUnfinishedRsp, order_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(Order)},
  { 29, -1, sizeof(RechargeOrderNotify)},
  { 35, -1, sizeof(MarkOrderFinishedReq)},
  { 43, -1, sizeof(MarkOrderFinishedRsp)},
  { 50, -1, sizeof(GetUnfinishedOrderReq)},
  { 55, -1, sizeof(GetUnfinishedOrderRsp)},
  { 62, -1, sizeof(GetSpecificUnfinishedReq)},
  { 68, -1, sizeof(GetSpecificUnfinishedRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Order_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RechargeOrderNotify_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarkOrderFinishedReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MarkOrderFinishedRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetUnfinishedOrderReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetUnfinishedOrderRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetSpecificUnfinishedReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetSpecificUnfinishedRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "server_only/cmd_recharge.server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Order_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Order_default_instance_);_RechargeOrderNotify_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_RechargeOrderNotify_default_instance_);_MarkOrderFinishedReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarkOrderFinishedReq_default_instance_);_MarkOrderFinishedRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_MarkOrderFinishedRsp_default_instance_);_GetUnfinishedOrderReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetUnfinishedOrderReq_default_instance_);_GetUnfinishedOrderRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetUnfinishedOrderRsp_default_instance_);_GetSpecificUnfinishedReq_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetSpecificUnfinishedReq_default_instance_);_GetSpecificUnfinishedRsp_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GetSpecificUnfinishedRsp_default_instance_);_RechargeOrderNotify_default_instance_._instance.get_mutable()->order_ = const_cast< ::proto::Order*>(
      ::proto::Order::internal_default_instance());
  _GetSpecificUnfinishedRsp_default_instance_._instance.get_mutable()->order_ = const_cast< ::proto::Order*>(
      ::proto::Order::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%server_only/cmd_recharge.server.proto\022"
      "\005proto\"\314\003\n\005Order\022\n\n\002id\030\001 \001(\r\022\013\n\003uid\030\002 \001("
      "\r\022\022\n\nproduct_id\030\003 \001(\t\022\024\n\014product_name\030\004 "
      "\001(\t\022\023\n\013product_num\030\005 \001(\r\022\020\n\010coin_num\030\006 \001"
      "(\r\022\021\n\ttotal_fee\030\007 \001(\t\022\020\n\010currency\030\010 \001(\t\022"
      "\022\n\nprice_tier\030\t \001(\t\022\020\n\010trade_no\030\n \001(\t\022\022\n"
      "\ntrade_time\030\013 \001(\r\022\022\n\nchannel_id\030\014 \001(\r\022\030\n"
      "\020channel_order_no\030\r \001(\t\022\020\n\010pay_plat\030\016 \001("
      "\t\022\016\n\006extend\030\017 \001(\t\022\023\n\013create_time\030\020 \001(\r\022\r"
      "\n\005bonus\030\021 \001(\t\022\021\n\tbonus_num\030\022 \001(\r\022\025\n\rvip_"
      "point_num\030\023 \001(\r\022\020\n\010pay_type\030\024 \001(\t\022\022\n\npay"
      "_vendor\030\025 \001(\t\022\023\n\013client_type\030\026 \001(\t\022\016\n\006de"
      "vice\030\027 \001(\t\022\021\n\tclient_ip\030\030 \001(\t\"2\n\023Recharg"
      "eOrderNotify\022\033\n\005order\030\001 \001(\0132\014.proto.Orde"
      "r\"O\n\024MarkOrderFinishedReq\022\020\n\010order_id\030\001 "
      "\001(\r\022\023\n\013finish_time\030\002 \001(\r\022\020\n\010is_retry\030\003 \001"
      "(\010\"9\n\024MarkOrderFinishedRsp\022\017\n\007retcode\030\001 "
      "\001(\005\022\020\n\010order_id\030\002 \001(\r\"\027\n\025GetUnfinishedOr"
      "derReq\"J\n\025GetUnfinishedOrderRsp\022\017\n\007retco"
      "de\030\001 \001(\005\022 \n\norder_list\030\002 \003(\0132\014.proto.Ord"
      "er\",\n\030GetSpecificUnfinishedReq\022\020\n\010order_"
      "id\030\001 \001(\r\"H\n\030GetSpecificUnfinishedRsp\022\017\n\007"
      "retcode\030\001 \001(\005\022\033\n\005order\030\002 \001(\0132\014.proto.Ord"
      "erB(Z&github.com/teyvat-helper/hk4e-prot"
      "o/pbb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 972);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_only/cmd_recharge.server.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Order::kIdFieldNumber;
const int Order::kUidFieldNumber;
const int Order::kProductIdFieldNumber;
const int Order::kProductNameFieldNumber;
const int Order::kProductNumFieldNumber;
const int Order::kCoinNumFieldNumber;
const int Order::kTotalFeeFieldNumber;
const int Order::kCurrencyFieldNumber;
const int Order::kPriceTierFieldNumber;
const int Order::kTradeNoFieldNumber;
const int Order::kTradeTimeFieldNumber;
const int Order::kChannelIdFieldNumber;
const int Order::kChannelOrderNoFieldNumber;
const int Order::kPayPlatFieldNumber;
const int Order::kExtendFieldNumber;
const int Order::kCreateTimeFieldNumber;
const int Order::kBonusFieldNumber;
const int Order::kBonusNumFieldNumber;
const int Order::kVipPointNumFieldNumber;
const int Order::kPayTypeFieldNumber;
const int Order::kPayVendorFieldNumber;
const int Order::kClientTypeFieldNumber;
const int Order::kDeviceFieldNumber;
const int Order::kClientIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Order::Order()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.Order)
}
Order::Order(const Order& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_id().size() > 0) {
    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  product_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.product_name().size() > 0) {
    product_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_name_);
  }
  total_fee_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.total_fee().size() > 0) {
    total_fee_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.total_fee_);
  }
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.currency().size() > 0) {
    currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  price_tier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.price_tier().size() > 0) {
    price_tier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_tier_);
  }
  trade_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trade_no().size() > 0) {
    trade_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_no_);
  }
  channel_order_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel_order_no().size() > 0) {
    channel_order_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_order_no_);
  }
  pay_plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pay_plat().size() > 0) {
    pay_plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pay_plat_);
  }
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.extend().size() > 0) {
    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  bonus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bonus().size() > 0) {
    bonus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bonus_);
  }
  pay_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pay_type().size() > 0) {
    pay_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pay_type_);
  }
  pay_vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pay_vendor().size() > 0) {
    pay_vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pay_vendor_);
  }
  client_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_type().size() > 0) {
    client_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_type_);
  }
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.device().size() > 0) {
    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  client_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_ip().size() > 0) {
    client_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_ip_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&vip_point_num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(vip_point_num_));
  // @@protoc_insertion_point(copy_constructor:proto.Order)
}

void Order::SharedCtor() {
  product_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_fee_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_tier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trade_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_order_no_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_plat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bonus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vip_point_num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(vip_point_num_));
  _cached_size_ = 0;
}

Order::~Order() {
  // @@protoc_insertion_point(destructor:proto.Order)
  SharedDtor();
}

void Order::SharedDtor() {
  product_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_fee_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_tier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trade_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_order_no_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_plat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bonus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_vendor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Order::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Order::descriptor() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Order& Order::default_instance() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

Order* Order::New(::google::protobuf::Arena* arena) const {
  Order* n = new Order;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Order::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  total_fee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  price_tier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trade_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_order_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bonus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_vendor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vip_point_num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(vip_point_num_));
  _internal_metadata_.Clear();
}

bool Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.Order)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_id().data(), static_cast<int>(this->product_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.product_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string product_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_name().data(), static_cast<int>(this->product_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.product_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 product_num = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &product_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 coin_num = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &coin_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string total_fee = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_total_fee()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->total_fee().data(), static_cast<int>(this->total_fee().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.total_fee"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string currency = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_currency()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->currency().data(), static_cast<int>(this->currency().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.currency"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string price_tier = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price_tier()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->price_tier().data(), static_cast<int>(this->price_tier().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.price_tier"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trade_no = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trade_no()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trade_no().data(), static_cast<int>(this->trade_no().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.trade_no"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 trade_time = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trade_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 channel_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &channel_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string channel_order_no = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_order_no()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel_order_no().data(), static_cast<int>(this->channel_order_no().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.channel_order_no"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pay_plat = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pay_plat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pay_plat().data(), static_cast<int>(this->pay_plat().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.pay_plat"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string extend = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extend()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extend().data(), static_cast<int>(this->extend().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.extend"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 create_time = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &create_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string bonus = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bonus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->bonus().data(), static_cast<int>(this->bonus().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.bonus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bonus_num = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bonus_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 vip_point_num = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &vip_point_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pay_type = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pay_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pay_type().data(), static_cast<int>(this->pay_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.pay_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pay_vendor = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pay_vendor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pay_vendor().data(), static_cast<int>(this->pay_vendor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.pay_vendor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_type = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_type().data(), static_cast<int>(this->client_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.client_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string device = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device().data(), static_cast<int>(this->device().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.device"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_ip = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_ip().data(), static_cast<int>(this->client_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto.Order.client_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.Order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.Order)
  return false;
#undef DO_
}

void Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  // string product_id = 3;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.product_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->product_id(), output);
  }

  // string product_name = 4;
  if (this->product_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_name().data(), static_cast<int>(this->product_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.product_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->product_name(), output);
  }

  // uint32 product_num = 5;
  if (this->product_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->product_num(), output);
  }

  // uint32 coin_num = 6;
  if (this->coin_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->coin_num(), output);
  }

  // string total_fee = 7;
  if (this->total_fee().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->total_fee().data(), static_cast<int>(this->total_fee().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.total_fee");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->total_fee(), output);
  }

  // string currency = 8;
  if (this->currency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), static_cast<int>(this->currency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.currency");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->currency(), output);
  }

  // string price_tier = 9;
  if (this->price_tier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price_tier().data(), static_cast<int>(this->price_tier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.price_tier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->price_tier(), output);
  }

  // string trade_no = 10;
  if (this->trade_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trade_no().data(), static_cast<int>(this->trade_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.trade_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->trade_no(), output);
  }

  // uint32 trade_time = 11;
  if (this->trade_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->trade_time(), output);
  }

  // uint32 channel_id = 12;
  if (this->channel_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->channel_id(), output);
  }

  // string channel_order_no = 13;
  if (this->channel_order_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_order_no().data(), static_cast<int>(this->channel_order_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.channel_order_no");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->channel_order_no(), output);
  }

  // string pay_plat = 14;
  if (this->pay_plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_plat().data(), static_cast<int>(this->pay_plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.pay_plat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->pay_plat(), output);
  }

  // string extend = 15;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.extend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->extend(), output);
  }

  // uint32 create_time = 16;
  if (this->create_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->create_time(), output);
  }

  // string bonus = 17;
  if (this->bonus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bonus().data(), static_cast<int>(this->bonus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.bonus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->bonus(), output);
  }

  // uint32 bonus_num = 18;
  if (this->bonus_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->bonus_num(), output);
  }

  // uint32 vip_point_num = 19;
  if (this->vip_point_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->vip_point_num(), output);
  }

  // string pay_type = 20;
  if (this->pay_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_type().data(), static_cast<int>(this->pay_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.pay_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->pay_type(), output);
  }

  // string pay_vendor = 21;
  if (this->pay_vendor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_vendor().data(), static_cast<int>(this->pay_vendor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.pay_vendor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->pay_vendor(), output);
  }

  // string client_type = 22;
  if (this->client_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_type().data(), static_cast<int>(this->client_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.client_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->client_type(), output);
  }

  // string device = 23;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->device(), output);
  }

  // string client_ip = 24;
  if (this->client_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_ip().data(), static_cast<int>(this->client_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.client_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->client_ip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.Order)
}

::google::protobuf::uint8* Order::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  // string product_id = 3;
  if (this->product_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_id().data(), static_cast<int>(this->product_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.product_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->product_id(), target);
  }

  // string product_name = 4;
  if (this->product_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_name().data(), static_cast<int>(this->product_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.product_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->product_name(), target);
  }

  // uint32 product_num = 5;
  if (this->product_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->product_num(), target);
  }

  // uint32 coin_num = 6;
  if (this->coin_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->coin_num(), target);
  }

  // string total_fee = 7;
  if (this->total_fee().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->total_fee().data(), static_cast<int>(this->total_fee().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.total_fee");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->total_fee(), target);
  }

  // string currency = 8;
  if (this->currency().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->currency().data(), static_cast<int>(this->currency().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.currency");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->currency(), target);
  }

  // string price_tier = 9;
  if (this->price_tier().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price_tier().data(), static_cast<int>(this->price_tier().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.price_tier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->price_tier(), target);
  }

  // string trade_no = 10;
  if (this->trade_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trade_no().data(), static_cast<int>(this->trade_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.trade_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->trade_no(), target);
  }

  // uint32 trade_time = 11;
  if (this->trade_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->trade_time(), target);
  }

  // uint32 channel_id = 12;
  if (this->channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->channel_id(), target);
  }

  // string channel_order_no = 13;
  if (this->channel_order_no().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_order_no().data(), static_cast<int>(this->channel_order_no().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.channel_order_no");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->channel_order_no(), target);
  }

  // string pay_plat = 14;
  if (this->pay_plat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_plat().data(), static_cast<int>(this->pay_plat().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.pay_plat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->pay_plat(), target);
  }

  // string extend = 15;
  if (this->extend().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extend().data(), static_cast<int>(this->extend().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.extend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->extend(), target);
  }

  // uint32 create_time = 16;
  if (this->create_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->create_time(), target);
  }

  // string bonus = 17;
  if (this->bonus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->bonus().data(), static_cast<int>(this->bonus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.bonus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->bonus(), target);
  }

  // uint32 bonus_num = 18;
  if (this->bonus_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(18, this->bonus_num(), target);
  }

  // uint32 vip_point_num = 19;
  if (this->vip_point_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->vip_point_num(), target);
  }

  // string pay_type = 20;
  if (this->pay_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_type().data(), static_cast<int>(this->pay_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.pay_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->pay_type(), target);
  }

  // string pay_vendor = 21;
  if (this->pay_vendor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_vendor().data(), static_cast<int>(this->pay_vendor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.pay_vendor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->pay_vendor(), target);
  }

  // string client_type = 22;
  if (this->client_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_type().data(), static_cast<int>(this->client_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.client_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->client_type(), target);
  }

  // string device = 23;
  if (this->device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device().data(), static_cast<int>(this->device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->device(), target);
  }

  // string client_ip = 24;
  if (this->client_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_ip().data(), static_cast<int>(this->client_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto.Order.client_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->client_ip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.Order)
  return target;
}

size_t Order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.Order)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string product_id = 3;
  if (this->product_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_id());
  }

  // string product_name = 4;
  if (this->product_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_name());
  }

  // string total_fee = 7;
  if (this->total_fee().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->total_fee());
  }

  // string currency = 8;
  if (this->currency().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->currency());
  }

  // string price_tier = 9;
  if (this->price_tier().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price_tier());
  }

  // string trade_no = 10;
  if (this->trade_no().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trade_no());
  }

  // string channel_order_no = 13;
  if (this->channel_order_no().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel_order_no());
  }

  // string pay_plat = 14;
  if (this->pay_plat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pay_plat());
  }

  // string extend = 15;
  if (this->extend().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->extend());
  }

  // string bonus = 17;
  if (this->bonus().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bonus());
  }

  // string pay_type = 20;
  if (this->pay_type().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pay_type());
  }

  // string pay_vendor = 21;
  if (this->pay_vendor().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pay_vendor());
  }

  // string client_type = 22;
  if (this->client_type().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_type());
  }

  // string device = 23;
  if (this->device().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device());
  }

  // string client_ip = 24;
  if (this->client_ip().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_ip());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 uid = 2;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 product_num = 5;
  if (this->product_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->product_num());
  }

  // uint32 coin_num = 6;
  if (this->coin_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->coin_num());
  }

  // uint32 trade_time = 11;
  if (this->trade_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->trade_time());
  }

  // uint32 channel_id = 12;
  if (this->channel_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->channel_id());
  }

  // uint32 create_time = 16;
  if (this->create_time() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->create_time());
  }

  // uint32 bonus_num = 18;
  if (this->bonus_num() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bonus_num());
  }

  // uint32 vip_point_num = 19;
  if (this->vip_point_num() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->vip_point_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.Order)
  GOOGLE_DCHECK_NE(&from, this);
  const Order* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Order>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.Order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.Order)
    MergeFrom(*source);
  }
}

void Order::MergeFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.Order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.product_id().size() > 0) {

    product_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_id_);
  }
  if (from.product_name().size() > 0) {

    product_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_name_);
  }
  if (from.total_fee().size() > 0) {

    total_fee_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.total_fee_);
  }
  if (from.currency().size() > 0) {

    currency_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.currency_);
  }
  if (from.price_tier().size() > 0) {

    price_tier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_tier_);
  }
  if (from.trade_no().size() > 0) {

    trade_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trade_no_);
  }
  if (from.channel_order_no().size() > 0) {

    channel_order_no_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_order_no_);
  }
  if (from.pay_plat().size() > 0) {

    pay_plat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pay_plat_);
  }
  if (from.extend().size() > 0) {

    extend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.extend_);
  }
  if (from.bonus().size() > 0) {

    bonus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bonus_);
  }
  if (from.pay_type().size() > 0) {

    pay_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pay_type_);
  }
  if (from.pay_vendor().size() > 0) {

    pay_vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pay_vendor_);
  }
  if (from.client_type().size() > 0) {

    client_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_type_);
  }
  if (from.device().size() > 0) {

    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  if (from.client_ip().size() > 0) {

    client_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_ip_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.product_num() != 0) {
    set_product_num(from.product_num());
  }
  if (from.coin_num() != 0) {
    set_coin_num(from.coin_num());
  }
  if (from.trade_time() != 0) {
    set_trade_time(from.trade_time());
  }
  if (from.channel_id() != 0) {
    set_channel_id(from.channel_id());
  }
  if (from.create_time() != 0) {
    set_create_time(from.create_time());
  }
  if (from.bonus_num() != 0) {
    set_bonus_num(from.bonus_num());
  }
  if (from.vip_point_num() != 0) {
    set_vip_point_num(from.vip_point_num());
  }
}

void Order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Order::CopyFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Order::IsInitialized() const {
  return true;
}

void Order::Swap(Order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Order::InternalSwap(Order* other) {
  using std::swap;
  product_id_.Swap(&other->product_id_);
  product_name_.Swap(&other->product_name_);
  total_fee_.Swap(&other->total_fee_);
  currency_.Swap(&other->currency_);
  price_tier_.Swap(&other->price_tier_);
  trade_no_.Swap(&other->trade_no_);
  channel_order_no_.Swap(&other->channel_order_no_);
  pay_plat_.Swap(&other->pay_plat_);
  extend_.Swap(&other->extend_);
  bonus_.Swap(&other->bonus_);
  pay_type_.Swap(&other->pay_type_);
  pay_vendor_.Swap(&other->pay_vendor_);
  client_type_.Swap(&other->client_type_);
  device_.Swap(&other->device_);
  client_ip_.Swap(&other->client_ip_);
  swap(id_, other->id_);
  swap(uid_, other->uid_);
  swap(product_num_, other->product_num_);
  swap(coin_num_, other->coin_num_);
  swap(trade_time_, other->trade_time_);
  swap(channel_id_, other->channel_id_);
  swap(create_time_, other->create_time_);
  swap(bonus_num_, other->bonus_num_);
  swap(vip_point_num_, other->vip_point_num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Order::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Order

// uint32 id = 1;
void Order::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 Order::id() const {
  // @@protoc_insertion_point(field_get:proto.Order.id)
  return id_;
}
void Order::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.id)
}

// uint32 uid = 2;
void Order::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 Order::uid() const {
  // @@protoc_insertion_point(field_get:proto.Order.uid)
  return uid_;
}
void Order::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.uid)
}

// string product_id = 3;
void Order::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::product_id() const {
  // @@protoc_insertion_point(field_get:proto.Order.product_id)
  return product_id_.GetNoArena();
}
void Order::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.product_id)
}
#if LANG_CXX11
void Order::set_product_id(::std::string&& value) {
  
  product_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.product_id)
}
#endif
void Order::set_product_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.product_id)
}
void Order::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.product_id)
}
::std::string* Order::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_product_id() {
  // @@protoc_insertion_point(field_release:proto.Order.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.product_id)
}

// string product_name = 4;
void Order::clear_product_name() {
  product_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::product_name() const {
  // @@protoc_insertion_point(field_get:proto.Order.product_name)
  return product_name_.GetNoArena();
}
void Order::set_product_name(const ::std::string& value) {
  
  product_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.product_name)
}
#if LANG_CXX11
void Order::set_product_name(::std::string&& value) {
  
  product_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.product_name)
}
#endif
void Order::set_product_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  product_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.product_name)
}
void Order::set_product_name(const char* value, size_t size) {
  
  product_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.product_name)
}
::std::string* Order::mutable_product_name() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.product_name)
  return product_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_product_name() {
  // @@protoc_insertion_point(field_release:proto.Order.product_name)
  
  return product_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_product_name(::std::string* product_name) {
  if (product_name != NULL) {
    
  } else {
    
  }
  product_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_name);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.product_name)
}

// uint32 product_num = 5;
void Order::clear_product_num() {
  product_num_ = 0u;
}
::google::protobuf::uint32 Order::product_num() const {
  // @@protoc_insertion_point(field_get:proto.Order.product_num)
  return product_num_;
}
void Order::set_product_num(::google::protobuf::uint32 value) {
  
  product_num_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.product_num)
}

// uint32 coin_num = 6;
void Order::clear_coin_num() {
  coin_num_ = 0u;
}
::google::protobuf::uint32 Order::coin_num() const {
  // @@protoc_insertion_point(field_get:proto.Order.coin_num)
  return coin_num_;
}
void Order::set_coin_num(::google::protobuf::uint32 value) {
  
  coin_num_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.coin_num)
}

// string total_fee = 7;
void Order::clear_total_fee() {
  total_fee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::total_fee() const {
  // @@protoc_insertion_point(field_get:proto.Order.total_fee)
  return total_fee_.GetNoArena();
}
void Order::set_total_fee(const ::std::string& value) {
  
  total_fee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.total_fee)
}
#if LANG_CXX11
void Order::set_total_fee(::std::string&& value) {
  
  total_fee_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.total_fee)
}
#endif
void Order::set_total_fee(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  total_fee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.total_fee)
}
void Order::set_total_fee(const char* value, size_t size) {
  
  total_fee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.total_fee)
}
::std::string* Order::mutable_total_fee() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.total_fee)
  return total_fee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_total_fee() {
  // @@protoc_insertion_point(field_release:proto.Order.total_fee)
  
  return total_fee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_total_fee(::std::string* total_fee) {
  if (total_fee != NULL) {
    
  } else {
    
  }
  total_fee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), total_fee);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.total_fee)
}

// string currency = 8;
void Order::clear_currency() {
  currency_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::currency() const {
  // @@protoc_insertion_point(field_get:proto.Order.currency)
  return currency_.GetNoArena();
}
void Order::set_currency(const ::std::string& value) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.currency)
}
#if LANG_CXX11
void Order::set_currency(::std::string&& value) {
  
  currency_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.currency)
}
#endif
void Order::set_currency(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.currency)
}
void Order::set_currency(const char* value, size_t size) {
  
  currency_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.currency)
}
::std::string* Order::mutable_currency() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.currency)
  return currency_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_currency() {
  // @@protoc_insertion_point(field_release:proto.Order.currency)
  
  return currency_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_currency(::std::string* currency) {
  if (currency != NULL) {
    
  } else {
    
  }
  currency_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), currency);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.currency)
}

// string price_tier = 9;
void Order::clear_price_tier() {
  price_tier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::price_tier() const {
  // @@protoc_insertion_point(field_get:proto.Order.price_tier)
  return price_tier_.GetNoArena();
}
void Order::set_price_tier(const ::std::string& value) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.price_tier)
}
#if LANG_CXX11
void Order::set_price_tier(::std::string&& value) {
  
  price_tier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.price_tier)
}
#endif
void Order::set_price_tier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.price_tier)
}
void Order::set_price_tier(const char* value, size_t size) {
  
  price_tier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.price_tier)
}
::std::string* Order::mutable_price_tier() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.price_tier)
  return price_tier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_price_tier() {
  // @@protoc_insertion_point(field_release:proto.Order.price_tier)
  
  return price_tier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_price_tier(::std::string* price_tier) {
  if (price_tier != NULL) {
    
  } else {
    
  }
  price_tier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price_tier);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.price_tier)
}

// string trade_no = 10;
void Order::clear_trade_no() {
  trade_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::trade_no() const {
  // @@protoc_insertion_point(field_get:proto.Order.trade_no)
  return trade_no_.GetNoArena();
}
void Order::set_trade_no(const ::std::string& value) {
  
  trade_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.trade_no)
}
#if LANG_CXX11
void Order::set_trade_no(::std::string&& value) {
  
  trade_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.trade_no)
}
#endif
void Order::set_trade_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trade_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.trade_no)
}
void Order::set_trade_no(const char* value, size_t size) {
  
  trade_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.trade_no)
}
::std::string* Order::mutable_trade_no() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.trade_no)
  return trade_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_trade_no() {
  // @@protoc_insertion_point(field_release:proto.Order.trade_no)
  
  return trade_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_trade_no(::std::string* trade_no) {
  if (trade_no != NULL) {
    
  } else {
    
  }
  trade_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trade_no);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.trade_no)
}

// uint32 trade_time = 11;
void Order::clear_trade_time() {
  trade_time_ = 0u;
}
::google::protobuf::uint32 Order::trade_time() const {
  // @@protoc_insertion_point(field_get:proto.Order.trade_time)
  return trade_time_;
}
void Order::set_trade_time(::google::protobuf::uint32 value) {
  
  trade_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.trade_time)
}

// uint32 channel_id = 12;
void Order::clear_channel_id() {
  channel_id_ = 0u;
}
::google::protobuf::uint32 Order::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.Order.channel_id)
  return channel_id_;
}
void Order::set_channel_id(::google::protobuf::uint32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.channel_id)
}

// string channel_order_no = 13;
void Order::clear_channel_order_no() {
  channel_order_no_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::channel_order_no() const {
  // @@protoc_insertion_point(field_get:proto.Order.channel_order_no)
  return channel_order_no_.GetNoArena();
}
void Order::set_channel_order_no(const ::std::string& value) {
  
  channel_order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.channel_order_no)
}
#if LANG_CXX11
void Order::set_channel_order_no(::std::string&& value) {
  
  channel_order_no_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.channel_order_no)
}
#endif
void Order::set_channel_order_no(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  channel_order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.channel_order_no)
}
void Order::set_channel_order_no(const char* value, size_t size) {
  
  channel_order_no_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.channel_order_no)
}
::std::string* Order::mutable_channel_order_no() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.channel_order_no)
  return channel_order_no_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_channel_order_no() {
  // @@protoc_insertion_point(field_release:proto.Order.channel_order_no)
  
  return channel_order_no_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_channel_order_no(::std::string* channel_order_no) {
  if (channel_order_no != NULL) {
    
  } else {
    
  }
  channel_order_no_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), channel_order_no);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.channel_order_no)
}

// string pay_plat = 14;
void Order::clear_pay_plat() {
  pay_plat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::pay_plat() const {
  // @@protoc_insertion_point(field_get:proto.Order.pay_plat)
  return pay_plat_.GetNoArena();
}
void Order::set_pay_plat(const ::std::string& value) {
  
  pay_plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.pay_plat)
}
#if LANG_CXX11
void Order::set_pay_plat(::std::string&& value) {
  
  pay_plat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.pay_plat)
}
#endif
void Order::set_pay_plat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pay_plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.pay_plat)
}
void Order::set_pay_plat(const char* value, size_t size) {
  
  pay_plat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.pay_plat)
}
::std::string* Order::mutable_pay_plat() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.pay_plat)
  return pay_plat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_pay_plat() {
  // @@protoc_insertion_point(field_release:proto.Order.pay_plat)
  
  return pay_plat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_pay_plat(::std::string* pay_plat) {
  if (pay_plat != NULL) {
    
  } else {
    
  }
  pay_plat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pay_plat);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.pay_plat)
}

// string extend = 15;
void Order::clear_extend() {
  extend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::extend() const {
  // @@protoc_insertion_point(field_get:proto.Order.extend)
  return extend_.GetNoArena();
}
void Order::set_extend(const ::std::string& value) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.extend)
}
#if LANG_CXX11
void Order::set_extend(::std::string&& value) {
  
  extend_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.extend)
}
#endif
void Order::set_extend(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.extend)
}
void Order::set_extend(const char* value, size_t size) {
  
  extend_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.extend)
}
::std::string* Order::mutable_extend() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.extend)
  return extend_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_extend() {
  // @@protoc_insertion_point(field_release:proto.Order.extend)
  
  return extend_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_extend(::std::string* extend) {
  if (extend != NULL) {
    
  } else {
    
  }
  extend_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extend);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.extend)
}

// uint32 create_time = 16;
void Order::clear_create_time() {
  create_time_ = 0u;
}
::google::protobuf::uint32 Order::create_time() const {
  // @@protoc_insertion_point(field_get:proto.Order.create_time)
  return create_time_;
}
void Order::set_create_time(::google::protobuf::uint32 value) {
  
  create_time_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.create_time)
}

// string bonus = 17;
void Order::clear_bonus() {
  bonus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::bonus() const {
  // @@protoc_insertion_point(field_get:proto.Order.bonus)
  return bonus_.GetNoArena();
}
void Order::set_bonus(const ::std::string& value) {
  
  bonus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.bonus)
}
#if LANG_CXX11
void Order::set_bonus(::std::string&& value) {
  
  bonus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.bonus)
}
#endif
void Order::set_bonus(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bonus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.bonus)
}
void Order::set_bonus(const char* value, size_t size) {
  
  bonus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.bonus)
}
::std::string* Order::mutable_bonus() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.bonus)
  return bonus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_bonus() {
  // @@protoc_insertion_point(field_release:proto.Order.bonus)
  
  return bonus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_bonus(::std::string* bonus) {
  if (bonus != NULL) {
    
  } else {
    
  }
  bonus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bonus);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.bonus)
}

// uint32 bonus_num = 18;
void Order::clear_bonus_num() {
  bonus_num_ = 0u;
}
::google::protobuf::uint32 Order::bonus_num() const {
  // @@protoc_insertion_point(field_get:proto.Order.bonus_num)
  return bonus_num_;
}
void Order::set_bonus_num(::google::protobuf::uint32 value) {
  
  bonus_num_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.bonus_num)
}

// uint32 vip_point_num = 19;
void Order::clear_vip_point_num() {
  vip_point_num_ = 0u;
}
::google::protobuf::uint32 Order::vip_point_num() const {
  // @@protoc_insertion_point(field_get:proto.Order.vip_point_num)
  return vip_point_num_;
}
void Order::set_vip_point_num(::google::protobuf::uint32 value) {
  
  vip_point_num_ = value;
  // @@protoc_insertion_point(field_set:proto.Order.vip_point_num)
}

// string pay_type = 20;
void Order::clear_pay_type() {
  pay_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::pay_type() const {
  // @@protoc_insertion_point(field_get:proto.Order.pay_type)
  return pay_type_.GetNoArena();
}
void Order::set_pay_type(const ::std::string& value) {
  
  pay_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.pay_type)
}
#if LANG_CXX11
void Order::set_pay_type(::std::string&& value) {
  
  pay_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.pay_type)
}
#endif
void Order::set_pay_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pay_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.pay_type)
}
void Order::set_pay_type(const char* value, size_t size) {
  
  pay_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.pay_type)
}
::std::string* Order::mutable_pay_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.pay_type)
  return pay_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_pay_type() {
  // @@protoc_insertion_point(field_release:proto.Order.pay_type)
  
  return pay_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_pay_type(::std::string* pay_type) {
  if (pay_type != NULL) {
    
  } else {
    
  }
  pay_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pay_type);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.pay_type)
}

// string pay_vendor = 21;
void Order::clear_pay_vendor() {
  pay_vendor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::pay_vendor() const {
  // @@protoc_insertion_point(field_get:proto.Order.pay_vendor)
  return pay_vendor_.GetNoArena();
}
void Order::set_pay_vendor(const ::std::string& value) {
  
  pay_vendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.pay_vendor)
}
#if LANG_CXX11
void Order::set_pay_vendor(::std::string&& value) {
  
  pay_vendor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.pay_vendor)
}
#endif
void Order::set_pay_vendor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pay_vendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.pay_vendor)
}
void Order::set_pay_vendor(const char* value, size_t size) {
  
  pay_vendor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.pay_vendor)
}
::std::string* Order::mutable_pay_vendor() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.pay_vendor)
  return pay_vendor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_pay_vendor() {
  // @@protoc_insertion_point(field_release:proto.Order.pay_vendor)
  
  return pay_vendor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_pay_vendor(::std::string* pay_vendor) {
  if (pay_vendor != NULL) {
    
  } else {
    
  }
  pay_vendor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pay_vendor);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.pay_vendor)
}

// string client_type = 22;
void Order::clear_client_type() {
  client_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::client_type() const {
  // @@protoc_insertion_point(field_get:proto.Order.client_type)
  return client_type_.GetNoArena();
}
void Order::set_client_type(const ::std::string& value) {
  
  client_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.client_type)
}
#if LANG_CXX11
void Order::set_client_type(::std::string&& value) {
  
  client_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.client_type)
}
#endif
void Order::set_client_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.client_type)
}
void Order::set_client_type(const char* value, size_t size) {
  
  client_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.client_type)
}
::std::string* Order::mutable_client_type() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.client_type)
  return client_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_client_type() {
  // @@protoc_insertion_point(field_release:proto.Order.client_type)
  
  return client_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_client_type(::std::string* client_type) {
  if (client_type != NULL) {
    
  } else {
    
  }
  client_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_type);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.client_type)
}

// string device = 23;
void Order::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::device() const {
  // @@protoc_insertion_point(field_get:proto.Order.device)
  return device_.GetNoArena();
}
void Order::set_device(const ::std::string& value) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.device)
}
#if LANG_CXX11
void Order::set_device(::std::string&& value) {
  
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.device)
}
#endif
void Order::set_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.device)
}
void Order::set_device(const char* value, size_t size) {
  
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.device)
}
::std::string* Order::mutable_device() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_device() {
  // @@protoc_insertion_point(field_release:proto.Order.device)
  
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    
  } else {
    
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.device)
}

// string client_ip = 24;
void Order::clear_client_ip() {
  client_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Order::client_ip() const {
  // @@protoc_insertion_point(field_get:proto.Order.client_ip)
  return client_ip_.GetNoArena();
}
void Order::set_client_ip(const ::std::string& value) {
  
  client_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.Order.client_ip)
}
#if LANG_CXX11
void Order::set_client_ip(::std::string&& value) {
  
  client_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.Order.client_ip)
}
#endif
void Order::set_client_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.Order.client_ip)
}
void Order::set_client_ip(const char* value, size_t size) {
  
  client_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.Order.client_ip)
}
::std::string* Order::mutable_client_ip() {
  
  // @@protoc_insertion_point(field_mutable:proto.Order.client_ip)
  return client_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Order::release_client_ip() {
  // @@protoc_insertion_point(field_release:proto.Order.client_ip)
  
  return client_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Order::set_allocated_client_ip(::std::string* client_ip) {
  if (client_ip != NULL) {
    
  } else {
    
  }
  client_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_ip);
  // @@protoc_insertion_point(field_set_allocated:proto.Order.client_ip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RechargeOrderNotify::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RechargeOrderNotify::RechargeOrderNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.RechargeOrderNotify)
}
RechargeOrderNotify::RechargeOrderNotify(const RechargeOrderNotify& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order()) {
    order_ = new ::proto::Order(*from.order_);
  } else {
    order_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.RechargeOrderNotify)
}

void RechargeOrderNotify::SharedCtor() {
  order_ = NULL;
  _cached_size_ = 0;
}

RechargeOrderNotify::~RechargeOrderNotify() {
  // @@protoc_insertion_point(destructor:proto.RechargeOrderNotify)
  SharedDtor();
}

void RechargeOrderNotify::SharedDtor() {
  if (this != internal_default_instance()) delete order_;
}

void RechargeOrderNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeOrderNotify::descriptor() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RechargeOrderNotify& RechargeOrderNotify::default_instance() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

RechargeOrderNotify* RechargeOrderNotify::New(::google::protobuf::Arena* arena) const {
  RechargeOrderNotify* n = new RechargeOrderNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RechargeOrderNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RechargeOrderNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && order_ != NULL) {
    delete order_;
  }
  order_ = NULL;
  _internal_metadata_.Clear();
}

bool RechargeOrderNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.RechargeOrderNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .proto.Order order = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.RechargeOrderNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.RechargeOrderNotify)
  return false;
#undef DO_
}

void RechargeOrderNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.RechargeOrderNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Order order = 1;
  if (this->has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->order_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.RechargeOrderNotify)
}

::google::protobuf::uint8* RechargeOrderNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.RechargeOrderNotify)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.Order order = 1;
  if (this->has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->order_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RechargeOrderNotify)
  return target;
}

size_t RechargeOrderNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RechargeOrderNotify)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Order order = 1;
  if (this->has_order()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->order_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeOrderNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.RechargeOrderNotify)
  GOOGLE_DCHECK_NE(&from, this);
  const RechargeOrderNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RechargeOrderNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.RechargeOrderNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.RechargeOrderNotify)
    MergeFrom(*source);
  }
}

void RechargeOrderNotify::MergeFrom(const RechargeOrderNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.RechargeOrderNotify)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_order()) {
    mutable_order()->::proto::Order::MergeFrom(from.order());
  }
}

void RechargeOrderNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.RechargeOrderNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeOrderNotify::CopyFrom(const RechargeOrderNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RechargeOrderNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeOrderNotify::IsInitialized() const {
  return true;
}

void RechargeOrderNotify::Swap(RechargeOrderNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RechargeOrderNotify::InternalSwap(RechargeOrderNotify* other) {
  using std::swap;
  swap(order_, other->order_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RechargeOrderNotify::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RechargeOrderNotify

// .proto.Order order = 1;
bool RechargeOrderNotify::has_order() const {
  return this != internal_default_instance() && order_ != NULL;
}
void RechargeOrderNotify::clear_order() {
  if (GetArenaNoVirtual() == NULL && order_ != NULL) delete order_;
  order_ = NULL;
}
const ::proto::Order& RechargeOrderNotify::order() const {
  const ::proto::Order* p = order_;
  // @@protoc_insertion_point(field_get:proto.RechargeOrderNotify.order)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Order*>(
      &::proto::_Order_default_instance_);
}
::proto::Order* RechargeOrderNotify::mutable_order() {
  
  if (order_ == NULL) {
    order_ = new ::proto::Order;
  }
  // @@protoc_insertion_point(field_mutable:proto.RechargeOrderNotify.order)
  return order_;
}
::proto::Order* RechargeOrderNotify::release_order() {
  // @@protoc_insertion_point(field_release:proto.RechargeOrderNotify.order)
  
  ::proto::Order* temp = order_;
  order_ = NULL;
  return temp;
}
void RechargeOrderNotify::set_allocated_order(::proto::Order* order) {
  delete order_;
  order_ = order;
  if (order) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.RechargeOrderNotify.order)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarkOrderFinishedReq::kOrderIdFieldNumber;
const int MarkOrderFinishedReq::kFinishTimeFieldNumber;
const int MarkOrderFinishedReq::kIsRetryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarkOrderFinishedReq::MarkOrderFinishedReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MarkOrderFinishedReq)
}
MarkOrderFinishedReq::MarkOrderFinishedReq(const MarkOrderFinishedReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&order_id_, &from.order_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_retry_) -
    reinterpret_cast<char*>(&order_id_)) + sizeof(is_retry_));
  // @@protoc_insertion_point(copy_constructor:proto.MarkOrderFinishedReq)
}

void MarkOrderFinishedReq::SharedCtor() {
  ::memset(&order_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_retry_) -
      reinterpret_cast<char*>(&order_id_)) + sizeof(is_retry_));
  _cached_size_ = 0;
}

MarkOrderFinishedReq::~MarkOrderFinishedReq() {
  // @@protoc_insertion_point(destructor:proto.MarkOrderFinishedReq)
  SharedDtor();
}

void MarkOrderFinishedReq::SharedDtor() {
}

void MarkOrderFinishedReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarkOrderFinishedReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarkOrderFinishedReq& MarkOrderFinishedReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarkOrderFinishedReq* MarkOrderFinishedReq::New(::google::protobuf::Arena* arena) const {
  MarkOrderFinishedReq* n = new MarkOrderFinishedReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarkOrderFinishedReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MarkOrderFinishedReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&order_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_retry_) -
      reinterpret_cast<char*>(&order_id_)) + sizeof(is_retry_));
  _internal_metadata_.Clear();
}

bool MarkOrderFinishedReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MarkOrderFinishedReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 order_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 finish_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &finish_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_retry = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_retry_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MarkOrderFinishedReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MarkOrderFinishedReq)
  return false;
#undef DO_
}

void MarkOrderFinishedReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MarkOrderFinishedReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 order_id = 1;
  if (this->order_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->order_id(), output);
  }

  // uint32 finish_time = 2;
  if (this->finish_time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->finish_time(), output);
  }

  // bool is_retry = 3;
  if (this->is_retry() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_retry(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MarkOrderFinishedReq)
}

::google::protobuf::uint8* MarkOrderFinishedReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MarkOrderFinishedReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 order_id = 1;
  if (this->order_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->order_id(), target);
  }

  // uint32 finish_time = 2;
  if (this->finish_time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->finish_time(), target);
  }

  // bool is_retry = 3;
  if (this->is_retry() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_retry(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MarkOrderFinishedReq)
  return target;
}

size_t MarkOrderFinishedReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MarkOrderFinishedReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 order_id = 1;
  if (this->order_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_id());
  }

  // uint32 finish_time = 2;
  if (this->finish_time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->finish_time());
  }

  // bool is_retry = 3;
  if (this->is_retry() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarkOrderFinishedReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MarkOrderFinishedReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MarkOrderFinishedReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarkOrderFinishedReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MarkOrderFinishedReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MarkOrderFinishedReq)
    MergeFrom(*source);
  }
}

void MarkOrderFinishedReq::MergeFrom(const MarkOrderFinishedReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MarkOrderFinishedReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.order_id() != 0) {
    set_order_id(from.order_id());
  }
  if (from.finish_time() != 0) {
    set_finish_time(from.finish_time());
  }
  if (from.is_retry() != 0) {
    set_is_retry(from.is_retry());
  }
}

void MarkOrderFinishedReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MarkOrderFinishedReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarkOrderFinishedReq::CopyFrom(const MarkOrderFinishedReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MarkOrderFinishedReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkOrderFinishedReq::IsInitialized() const {
  return true;
}

void MarkOrderFinishedReq::Swap(MarkOrderFinishedReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarkOrderFinishedReq::InternalSwap(MarkOrderFinishedReq* other) {
  using std::swap;
  swap(order_id_, other->order_id_);
  swap(finish_time_, other->finish_time_);
  swap(is_retry_, other->is_retry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarkOrderFinishedReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarkOrderFinishedReq

// uint32 order_id = 1;
void MarkOrderFinishedReq::clear_order_id() {
  order_id_ = 0u;
}
::google::protobuf::uint32 MarkOrderFinishedReq::order_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkOrderFinishedReq.order_id)
  return order_id_;
}
void MarkOrderFinishedReq::set_order_id(::google::protobuf::uint32 value) {
  
  order_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkOrderFinishedReq.order_id)
}

// uint32 finish_time = 2;
void MarkOrderFinishedReq::clear_finish_time() {
  finish_time_ = 0u;
}
::google::protobuf::uint32 MarkOrderFinishedReq::finish_time() const {
  // @@protoc_insertion_point(field_get:proto.MarkOrderFinishedReq.finish_time)
  return finish_time_;
}
void MarkOrderFinishedReq::set_finish_time(::google::protobuf::uint32 value) {
  
  finish_time_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkOrderFinishedReq.finish_time)
}

// bool is_retry = 3;
void MarkOrderFinishedReq::clear_is_retry() {
  is_retry_ = false;
}
bool MarkOrderFinishedReq::is_retry() const {
  // @@protoc_insertion_point(field_get:proto.MarkOrderFinishedReq.is_retry)
  return is_retry_;
}
void MarkOrderFinishedReq::set_is_retry(bool value) {
  
  is_retry_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkOrderFinishedReq.is_retry)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarkOrderFinishedRsp::kRetcodeFieldNumber;
const int MarkOrderFinishedRsp::kOrderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarkOrderFinishedRsp::MarkOrderFinishedRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.MarkOrderFinishedRsp)
}
MarkOrderFinishedRsp::MarkOrderFinishedRsp(const MarkOrderFinishedRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&retcode_, &from.retcode_,
    static_cast<size_t>(reinterpret_cast<char*>(&order_id_) -
    reinterpret_cast<char*>(&retcode_)) + sizeof(order_id_));
  // @@protoc_insertion_point(copy_constructor:proto.MarkOrderFinishedRsp)
}

void MarkOrderFinishedRsp::SharedCtor() {
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&order_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(order_id_));
  _cached_size_ = 0;
}

MarkOrderFinishedRsp::~MarkOrderFinishedRsp() {
  // @@protoc_insertion_point(destructor:proto.MarkOrderFinishedRsp)
  SharedDtor();
}

void MarkOrderFinishedRsp::SharedDtor() {
}

void MarkOrderFinishedRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarkOrderFinishedRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarkOrderFinishedRsp& MarkOrderFinishedRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

MarkOrderFinishedRsp* MarkOrderFinishedRsp::New(::google::protobuf::Arena* arena) const {
  MarkOrderFinishedRsp* n = new MarkOrderFinishedRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarkOrderFinishedRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MarkOrderFinishedRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&order_id_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(order_id_));
  _internal_metadata_.Clear();
}

bool MarkOrderFinishedRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.MarkOrderFinishedRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 order_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.MarkOrderFinishedRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.MarkOrderFinishedRsp)
  return false;
#undef DO_
}

void MarkOrderFinishedRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.MarkOrderFinishedRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // uint32 order_id = 2;
  if (this->order_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->order_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.MarkOrderFinishedRsp)
}

::google::protobuf::uint8* MarkOrderFinishedRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.MarkOrderFinishedRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // uint32 order_id = 2;
  if (this->order_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->order_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MarkOrderFinishedRsp)
  return target;
}

size_t MarkOrderFinishedRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MarkOrderFinishedRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  // uint32 order_id = 2;
  if (this->order_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarkOrderFinishedRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.MarkOrderFinishedRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MarkOrderFinishedRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarkOrderFinishedRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.MarkOrderFinishedRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.MarkOrderFinishedRsp)
    MergeFrom(*source);
  }
}

void MarkOrderFinishedRsp::MergeFrom(const MarkOrderFinishedRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.MarkOrderFinishedRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
  if (from.order_id() != 0) {
    set_order_id(from.order_id());
  }
}

void MarkOrderFinishedRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.MarkOrderFinishedRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarkOrderFinishedRsp::CopyFrom(const MarkOrderFinishedRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MarkOrderFinishedRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarkOrderFinishedRsp::IsInitialized() const {
  return true;
}

void MarkOrderFinishedRsp::Swap(MarkOrderFinishedRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarkOrderFinishedRsp::InternalSwap(MarkOrderFinishedRsp* other) {
  using std::swap;
  swap(retcode_, other->retcode_);
  swap(order_id_, other->order_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarkOrderFinishedRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MarkOrderFinishedRsp

// int32 retcode = 1;
void MarkOrderFinishedRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 MarkOrderFinishedRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.MarkOrderFinishedRsp.retcode)
  return retcode_;
}
void MarkOrderFinishedRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkOrderFinishedRsp.retcode)
}

// uint32 order_id = 2;
void MarkOrderFinishedRsp::clear_order_id() {
  order_id_ = 0u;
}
::google::protobuf::uint32 MarkOrderFinishedRsp::order_id() const {
  // @@protoc_insertion_point(field_get:proto.MarkOrderFinishedRsp.order_id)
  return order_id_;
}
void MarkOrderFinishedRsp::set_order_id(::google::protobuf::uint32 value) {
  
  order_id_ = value;
  // @@protoc_insertion_point(field_set:proto.MarkOrderFinishedRsp.order_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUnfinishedOrderReq::GetUnfinishedOrderReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetUnfinishedOrderReq)
}
GetUnfinishedOrderReq::GetUnfinishedOrderReq(const GetUnfinishedOrderReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.GetUnfinishedOrderReq)
}

void GetUnfinishedOrderReq::SharedCtor() {
  _cached_size_ = 0;
}

GetUnfinishedOrderReq::~GetUnfinishedOrderReq() {
  // @@protoc_insertion_point(destructor:proto.GetUnfinishedOrderReq)
  SharedDtor();
}

void GetUnfinishedOrderReq::SharedDtor() {
}

void GetUnfinishedOrderReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUnfinishedOrderReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUnfinishedOrderReq& GetUnfinishedOrderReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetUnfinishedOrderReq* GetUnfinishedOrderReq::New(::google::protobuf::Arena* arena) const {
  GetUnfinishedOrderReq* n = new GetUnfinishedOrderReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUnfinishedOrderReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetUnfinishedOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetUnfinishedOrderReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetUnfinishedOrderReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetUnfinishedOrderReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetUnfinishedOrderReq)
  return false;
#undef DO_
}

void GetUnfinishedOrderReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetUnfinishedOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetUnfinishedOrderReq)
}

::google::protobuf::uint8* GetUnfinishedOrderReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetUnfinishedOrderReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetUnfinishedOrderReq)
  return target;
}

size_t GetUnfinishedOrderReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetUnfinishedOrderReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUnfinishedOrderReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetUnfinishedOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUnfinishedOrderReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUnfinishedOrderReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetUnfinishedOrderReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetUnfinishedOrderReq)
    MergeFrom(*source);
  }
}

void GetUnfinishedOrderReq::MergeFrom(const GetUnfinishedOrderReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetUnfinishedOrderReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetUnfinishedOrderReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetUnfinishedOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUnfinishedOrderReq::CopyFrom(const GetUnfinishedOrderReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetUnfinishedOrderReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUnfinishedOrderReq::IsInitialized() const {
  return true;
}

void GetUnfinishedOrderReq::Swap(GetUnfinishedOrderReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUnfinishedOrderReq::InternalSwap(GetUnfinishedOrderReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUnfinishedOrderReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUnfinishedOrderReq

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetUnfinishedOrderRsp::kRetcodeFieldNumber;
const int GetUnfinishedOrderRsp::kOrderListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetUnfinishedOrderRsp::GetUnfinishedOrderRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetUnfinishedOrderRsp)
}
GetUnfinishedOrderRsp::GetUnfinishedOrderRsp(const GetUnfinishedOrderRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      order_list_(from.order_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetUnfinishedOrderRsp)
}

void GetUnfinishedOrderRsp::SharedCtor() {
  retcode_ = 0;
  _cached_size_ = 0;
}

GetUnfinishedOrderRsp::~GetUnfinishedOrderRsp() {
  // @@protoc_insertion_point(destructor:proto.GetUnfinishedOrderRsp)
  SharedDtor();
}

void GetUnfinishedOrderRsp::SharedDtor() {
}

void GetUnfinishedOrderRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetUnfinishedOrderRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetUnfinishedOrderRsp& GetUnfinishedOrderRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetUnfinishedOrderRsp* GetUnfinishedOrderRsp::New(::google::protobuf::Arena* arena) const {
  GetUnfinishedOrderRsp* n = new GetUnfinishedOrderRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetUnfinishedOrderRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetUnfinishedOrderRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_list_.Clear();
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetUnfinishedOrderRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetUnfinishedOrderRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.Order order_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_order_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetUnfinishedOrderRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetUnfinishedOrderRsp)
  return false;
#undef DO_
}

void GetUnfinishedOrderRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetUnfinishedOrderRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // repeated .proto.Order order_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->order_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->order_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetUnfinishedOrderRsp)
}

::google::protobuf::uint8* GetUnfinishedOrderRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetUnfinishedOrderRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // repeated .proto.Order order_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->order_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->order_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetUnfinishedOrderRsp)
  return target;
}

size_t GetUnfinishedOrderRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetUnfinishedOrderRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .proto.Order order_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->order_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->order_list(static_cast<int>(i)));
    }
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetUnfinishedOrderRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetUnfinishedOrderRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetUnfinishedOrderRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetUnfinishedOrderRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetUnfinishedOrderRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetUnfinishedOrderRsp)
    MergeFrom(*source);
  }
}

void GetUnfinishedOrderRsp::MergeFrom(const GetUnfinishedOrderRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetUnfinishedOrderRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  order_list_.MergeFrom(from.order_list_);
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetUnfinishedOrderRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetUnfinishedOrderRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetUnfinishedOrderRsp::CopyFrom(const GetUnfinishedOrderRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetUnfinishedOrderRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUnfinishedOrderRsp::IsInitialized() const {
  return true;
}

void GetUnfinishedOrderRsp::Swap(GetUnfinishedOrderRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetUnfinishedOrderRsp::InternalSwap(GetUnfinishedOrderRsp* other) {
  using std::swap;
  order_list_.InternalSwap(&other->order_list_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetUnfinishedOrderRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetUnfinishedOrderRsp

// int32 retcode = 1;
void GetUnfinishedOrderRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetUnfinishedOrderRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetUnfinishedOrderRsp.retcode)
  return retcode_;
}
void GetUnfinishedOrderRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetUnfinishedOrderRsp.retcode)
}

// repeated .proto.Order order_list = 2;
int GetUnfinishedOrderRsp::order_list_size() const {
  return order_list_.size();
}
void GetUnfinishedOrderRsp::clear_order_list() {
  order_list_.Clear();
}
const ::proto::Order& GetUnfinishedOrderRsp::order_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GetUnfinishedOrderRsp.order_list)
  return order_list_.Get(index);
}
::proto::Order* GetUnfinishedOrderRsp::mutable_order_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.GetUnfinishedOrderRsp.order_list)
  return order_list_.Mutable(index);
}
::proto::Order* GetUnfinishedOrderRsp::add_order_list() {
  // @@protoc_insertion_point(field_add:proto.GetUnfinishedOrderRsp.order_list)
  return order_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::Order >*
GetUnfinishedOrderRsp::mutable_order_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GetUnfinishedOrderRsp.order_list)
  return &order_list_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::Order >&
GetUnfinishedOrderRsp::order_list() const {
  // @@protoc_insertion_point(field_list:proto.GetUnfinishedOrderRsp.order_list)
  return order_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSpecificUnfinishedReq::kOrderIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSpecificUnfinishedReq::GetSpecificUnfinishedReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetSpecificUnfinishedReq)
}
GetSpecificUnfinishedReq::GetSpecificUnfinishedReq(const GetSpecificUnfinishedReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  order_id_ = from.order_id_;
  // @@protoc_insertion_point(copy_constructor:proto.GetSpecificUnfinishedReq)
}

void GetSpecificUnfinishedReq::SharedCtor() {
  order_id_ = 0u;
  _cached_size_ = 0;
}

GetSpecificUnfinishedReq::~GetSpecificUnfinishedReq() {
  // @@protoc_insertion_point(destructor:proto.GetSpecificUnfinishedReq)
  SharedDtor();
}

void GetSpecificUnfinishedReq::SharedDtor() {
}

void GetSpecificUnfinishedReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSpecificUnfinishedReq::descriptor() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSpecificUnfinishedReq& GetSpecificUnfinishedReq::default_instance() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetSpecificUnfinishedReq* GetSpecificUnfinishedReq::New(::google::protobuf::Arena* arena) const {
  GetSpecificUnfinishedReq* n = new GetSpecificUnfinishedReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSpecificUnfinishedReq::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSpecificUnfinishedReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  order_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GetSpecificUnfinishedReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetSpecificUnfinishedReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 order_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &order_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetSpecificUnfinishedReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetSpecificUnfinishedReq)
  return false;
#undef DO_
}

void GetSpecificUnfinishedReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetSpecificUnfinishedReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 order_id = 1;
  if (this->order_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->order_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetSpecificUnfinishedReq)
}

::google::protobuf::uint8* GetSpecificUnfinishedReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSpecificUnfinishedReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 order_id = 1;
  if (this->order_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->order_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSpecificUnfinishedReq)
  return target;
}

size_t GetSpecificUnfinishedReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSpecificUnfinishedReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 order_id = 1;
  if (this->order_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->order_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSpecificUnfinishedReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetSpecificUnfinishedReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSpecificUnfinishedReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSpecificUnfinishedReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetSpecificUnfinishedReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetSpecificUnfinishedReq)
    MergeFrom(*source);
  }
}

void GetSpecificUnfinishedReq::MergeFrom(const GetSpecificUnfinishedReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSpecificUnfinishedReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.order_id() != 0) {
    set_order_id(from.order_id());
  }
}

void GetSpecificUnfinishedReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetSpecificUnfinishedReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSpecificUnfinishedReq::CopyFrom(const GetSpecificUnfinishedReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSpecificUnfinishedReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSpecificUnfinishedReq::IsInitialized() const {
  return true;
}

void GetSpecificUnfinishedReq::Swap(GetSpecificUnfinishedReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSpecificUnfinishedReq::InternalSwap(GetSpecificUnfinishedReq* other) {
  using std::swap;
  swap(order_id_, other->order_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSpecificUnfinishedReq::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSpecificUnfinishedReq

// uint32 order_id = 1;
void GetSpecificUnfinishedReq::clear_order_id() {
  order_id_ = 0u;
}
::google::protobuf::uint32 GetSpecificUnfinishedReq::order_id() const {
  // @@protoc_insertion_point(field_get:proto.GetSpecificUnfinishedReq.order_id)
  return order_id_;
}
void GetSpecificUnfinishedReq::set_order_id(::google::protobuf::uint32 value) {
  
  order_id_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSpecificUnfinishedReq.order_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetSpecificUnfinishedRsp::kRetcodeFieldNumber;
const int GetSpecificUnfinishedRsp::kOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetSpecificUnfinishedRsp::GetSpecificUnfinishedRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.GetSpecificUnfinishedRsp)
}
GetSpecificUnfinishedRsp::GetSpecificUnfinishedRsp(const GetSpecificUnfinishedRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order()) {
    order_ = new ::proto::Order(*from.order_);
  } else {
    order_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:proto.GetSpecificUnfinishedRsp)
}

void GetSpecificUnfinishedRsp::SharedCtor() {
  ::memset(&order_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&retcode_) -
      reinterpret_cast<char*>(&order_)) + sizeof(retcode_));
  _cached_size_ = 0;
}

GetSpecificUnfinishedRsp::~GetSpecificUnfinishedRsp() {
  // @@protoc_insertion_point(destructor:proto.GetSpecificUnfinishedRsp)
  SharedDtor();
}

void GetSpecificUnfinishedRsp::SharedDtor() {
  if (this != internal_default_instance()) delete order_;
}

void GetSpecificUnfinishedRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetSpecificUnfinishedRsp::descriptor() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetSpecificUnfinishedRsp& GetSpecificUnfinishedRsp::default_instance() {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetSpecificUnfinishedRsp* GetSpecificUnfinishedRsp::New(::google::protobuf::Arena* arena) const {
  GetSpecificUnfinishedRsp* n = new GetSpecificUnfinishedRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetSpecificUnfinishedRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSpecificUnfinishedRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && order_ != NULL) {
    delete order_;
  }
  order_ = NULL;
  retcode_ = 0;
  _internal_metadata_.Clear();
}

bool GetSpecificUnfinishedRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.GetSpecificUnfinishedRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 retcode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .proto.Order order = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.GetSpecificUnfinishedRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.GetSpecificUnfinishedRsp)
  return false;
#undef DO_
}

void GetSpecificUnfinishedRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.GetSpecificUnfinishedRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->retcode(), output);
  }

  // .proto.Order order = 2;
  if (this->has_order()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->order_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.GetSpecificUnfinishedRsp)
}

::google::protobuf::uint8* GetSpecificUnfinishedRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSpecificUnfinishedRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->retcode(), target);
  }

  // .proto.Order order = 2;
  if (this->has_order()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->order_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSpecificUnfinishedRsp)
  return target;
}

size_t GetSpecificUnfinishedRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSpecificUnfinishedRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .proto.Order order = 2;
  if (this->has_order()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->order_);
  }

  // int32 retcode = 1;
  if (this->retcode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->retcode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetSpecificUnfinishedRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.GetSpecificUnfinishedRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSpecificUnfinishedRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetSpecificUnfinishedRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.GetSpecificUnfinishedRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.GetSpecificUnfinishedRsp)
    MergeFrom(*source);
  }
}

void GetSpecificUnfinishedRsp::MergeFrom(const GetSpecificUnfinishedRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSpecificUnfinishedRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_order()) {
    mutable_order()->::proto::Order::MergeFrom(from.order());
  }
  if (from.retcode() != 0) {
    set_retcode(from.retcode());
  }
}

void GetSpecificUnfinishedRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.GetSpecificUnfinishedRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSpecificUnfinishedRsp::CopyFrom(const GetSpecificUnfinishedRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSpecificUnfinishedRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSpecificUnfinishedRsp::IsInitialized() const {
  return true;
}

void GetSpecificUnfinishedRsp::Swap(GetSpecificUnfinishedRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetSpecificUnfinishedRsp::InternalSwap(GetSpecificUnfinishedRsp* other) {
  using std::swap;
  swap(order_, other->order_);
  swap(retcode_, other->retcode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetSpecificUnfinishedRsp::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5frecharge_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetSpecificUnfinishedRsp

// int32 retcode = 1;
void GetSpecificUnfinishedRsp::clear_retcode() {
  retcode_ = 0;
}
::google::protobuf::int32 GetSpecificUnfinishedRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetSpecificUnfinishedRsp.retcode)
  return retcode_;
}
void GetSpecificUnfinishedRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetSpecificUnfinishedRsp.retcode)
}

// .proto.Order order = 2;
bool GetSpecificUnfinishedRsp::has_order() const {
  return this != internal_default_instance() && order_ != NULL;
}
void GetSpecificUnfinishedRsp::clear_order() {
  if (GetArenaNoVirtual() == NULL && order_ != NULL) delete order_;
  order_ = NULL;
}
const ::proto::Order& GetSpecificUnfinishedRsp::order() const {
  const ::proto::Order* p = order_;
  // @@protoc_insertion_point(field_get:proto.GetSpecificUnfinishedRsp.order)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::Order*>(
      &::proto::_Order_default_instance_);
}
::proto::Order* GetSpecificUnfinishedRsp::mutable_order() {
  
  if (order_ == NULL) {
    order_ = new ::proto::Order;
  }
  // @@protoc_insertion_point(field_mutable:proto.GetSpecificUnfinishedRsp.order)
  return order_;
}
::proto::Order* GetSpecificUnfinishedRsp::release_order() {
  // @@protoc_insertion_point(field_release:proto.GetSpecificUnfinishedRsp.order)
  
  ::proto::Order* temp = order_;
  order_ = NULL;
  return temp;
}
void GetSpecificUnfinishedRsp::set_allocated_order(::proto::Order* order) {
  delete order_;
  order_ = order;
  if (order) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.GetSpecificUnfinishedRsp.order)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto

// @@protoc_insertion_point(global_scope)
