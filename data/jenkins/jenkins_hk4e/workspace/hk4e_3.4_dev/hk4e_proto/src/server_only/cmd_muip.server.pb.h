// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_muip.server.proto

#ifndef PROTOBUF_server_5fonly_2fcmd_5fmuip_2eserver_2eproto__INCLUDED
#define PROTOBUF_server_5fonly_2fcmd_5fmuip_2eserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "define.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
class BindGmUidNotify;
class BindGmUidNotifyDefaultTypeInternal;
extern BindGmUidNotifyDefaultTypeInternal _BindGmUidNotify_default_instance_;
class CheckGameCrcVersionReq;
class CheckGameCrcVersionReqDefaultTypeInternal;
extern CheckGameCrcVersionReqDefaultTypeInternal _CheckGameCrcVersionReq_default_instance_;
class CheckGameCrcVersionRsp;
class CheckGameCrcVersionRspDefaultTypeInternal;
extern CheckGameCrcVersionRspDefaultTypeInternal _CheckGameCrcVersionRsp_default_instance_;
class CheckGameVersionReq;
class CheckGameVersionReqDefaultTypeInternal;
extern CheckGameVersionReqDefaultTypeInternal _CheckGameVersionReq_default_instance_;
class CheckGameVersionReq_NextResVersionMapEntry;
class CheckGameVersionReq_NextResVersionMapEntryDefaultTypeInternal;
extern CheckGameVersionReq_NextResVersionMapEntryDefaultTypeInternal _CheckGameVersionReq_NextResVersionMapEntry_default_instance_;
class CheckGameVersionReq_ResVersionMapEntry;
class CheckGameVersionReq_ResVersionMapEntryDefaultTypeInternal;
extern CheckGameVersionReq_ResVersionMapEntryDefaultTypeInternal _CheckGameVersionReq_ResVersionMapEntry_default_instance_;
class CheckGameVersionRsp;
class CheckGameVersionRspDefaultTypeInternal;
extern CheckGameVersionRspDefaultTypeInternal _CheckGameVersionRsp_default_instance_;
class CheckGameVersionRsp_NextResVersionResultMapEntry;
class CheckGameVersionRsp_NextResVersionResultMapEntryDefaultTypeInternal;
extern CheckGameVersionRsp_NextResVersionResultMapEntryDefaultTypeInternal _CheckGameVersionRsp_NextResVersionResultMapEntry_default_instance_;
class CheckGameVersionRsp_ResVersionResultMapEntry;
class CheckGameVersionRsp_ResVersionResultMapEntryDefaultTypeInternal;
extern CheckGameVersionRsp_ResVersionResultMapEntryDefaultTypeInternal _CheckGameVersionRsp_ResVersionResultMapEntry_default_instance_;
class CheckOnlinePlayerReq;
class CheckOnlinePlayerReqDefaultTypeInternal;
extern CheckOnlinePlayerReqDefaultTypeInternal _CheckOnlinePlayerReq_default_instance_;
class CheckOnlinePlayerRsp;
class CheckOnlinePlayerRspDefaultTypeInternal;
extern CheckOnlinePlayerRspDefaultTypeInternal _CheckOnlinePlayerRsp_default_instance_;
class CheckOnlinePlayerRsp_GameStatus;
class CheckOnlinePlayerRsp_GameStatusDefaultTypeInternal;
extern CheckOnlinePlayerRsp_GameStatusDefaultTypeInternal _CheckOnlinePlayerRsp_GameStatus_default_instance_;
class CheckOnlinePlayerRsp_NodeStatus;
class CheckOnlinePlayerRsp_NodeStatusDefaultTypeInternal;
extern CheckOnlinePlayerRsp_NodeStatusDefaultTypeInternal _CheckOnlinePlayerRsp_NodeStatus_default_instance_;
class FineGrainedPlayerNumReq;
class FineGrainedPlayerNumReqDefaultTypeInternal;
extern FineGrainedPlayerNumReqDefaultTypeInternal _FineGrainedPlayerNumReq_default_instance_;
class FineGrainedPlayerNumRsp;
class FineGrainedPlayerNumRspDefaultTypeInternal;
extern FineGrainedPlayerNumRspDefaultTypeInternal _FineGrainedPlayerNumRsp_default_instance_;
class FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry;
class FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntryDefaultTypeInternal;
extern FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntryDefaultTypeInternal _FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry_default_instance_;
class GameVersionResult;
class GameVersionResultDefaultTypeInternal;
extern GameVersionResultDefaultTypeInternal _GameVersionResult_default_instance_;
class GetBindGmUidReq;
class GetBindGmUidReqDefaultTypeInternal;
extern GetBindGmUidReqDefaultTypeInternal _GetBindGmUidReq_default_instance_;
class GetBindGmUidRsp;
class GetBindGmUidRspDefaultTypeInternal;
extern GetBindGmUidRspDefaultTypeInternal _GetBindGmUidRsp_default_instance_;
class GetBindGmUidRsp_GmUidMapEntry;
class GetBindGmUidRsp_GmUidMapEntryDefaultTypeInternal;
extern GetBindGmUidRsp_GmUidMapEntryDefaultTypeInternal _GetBindGmUidRsp_GmUidMapEntry_default_instance_;
class KickoutPlayerNotify;
class KickoutPlayerNotifyDefaultTypeInternal;
extern KickoutPlayerNotifyDefaultTypeInternal _KickoutPlayerNotify_default_instance_;
class OnlinePlayerNumReq;
class OnlinePlayerNumReqDefaultTypeInternal;
extern OnlinePlayerNumReqDefaultTypeInternal _OnlinePlayerNumReq_default_instance_;
class OnlinePlayerNumRsp;
class OnlinePlayerNumRspDefaultTypeInternal;
extern OnlinePlayerNumRspDefaultTypeInternal _OnlinePlayerNumRsp_default_instance_;
class OnlinePlayerNumRsp_GameserverPlayerNumMapEntry;
class OnlinePlayerNumRsp_GameserverPlayerNumMapEntryDefaultTypeInternal;
extern OnlinePlayerNumRsp_GameserverPlayerNumMapEntryDefaultTypeInternal _OnlinePlayerNumRsp_GameserverPlayerNumMapEntry_default_instance_;
class PlatformAntiAddictNotify;
class PlatformAntiAddictNotifyDefaultTypeInternal;
extern PlatformAntiAddictNotifyDefaultTypeInternal _PlatformAntiAddictNotify_default_instance_;
class PlatformPlayerNumReq;
class PlatformPlayerNumReqDefaultTypeInternal;
extern PlatformPlayerNumReqDefaultTypeInternal _PlatformPlayerNumReq_default_instance_;
class PlatformPlayerNumRsp;
class PlatformPlayerNumRspDefaultTypeInternal;
extern PlatformPlayerNumRspDefaultTypeInternal _PlatformPlayerNumRsp_default_instance_;
class PlatformPlayerNumRsp_PlatformPlayerNumMapEntry;
class PlatformPlayerNumRsp_PlatformPlayerNumMapEntryDefaultTypeInternal;
extern PlatformPlayerNumRsp_PlatformPlayerNumMapEntryDefaultTypeInternal _PlatformPlayerNumRsp_PlatformPlayerNumMapEntry_default_instance_;
class PlayerCombatForceReq;
class PlayerCombatForceReqDefaultTypeInternal;
extern PlayerCombatForceReqDefaultTypeInternal _PlayerCombatForceReq_default_instance_;
class PlayerCombatForceRsp;
class PlayerCombatForceRspDefaultTypeInternal;
extern PlayerCombatForceRspDefaultTypeInternal _PlayerCombatForceRsp_default_instance_;
class PlayerCombatForceRsp_PlayerCombatForceMapEntry;
class PlayerCombatForceRsp_PlayerCombatForceMapEntryDefaultTypeInternal;
extern PlayerCombatForceRsp_PlayerCombatForceMapEntryDefaultTypeInternal _PlayerCombatForceRsp_PlayerCombatForceMapEntry_default_instance_;
class PlayerLoginPerSecondReq;
class PlayerLoginPerSecondReqDefaultTypeInternal;
extern PlayerLoginPerSecondReqDefaultTypeInternal _PlayerLoginPerSecondReq_default_instance_;
class PlayerLoginPerSecondRsp;
class PlayerLoginPerSecondRspDefaultTypeInternal;
extern PlayerLoginPerSecondRspDefaultTypeInternal _PlayerLoginPerSecondRsp_default_instance_;
class PlayerMemBasicData;
class PlayerMemBasicDataDefaultTypeInternal;
extern PlayerMemBasicDataDefaultTypeInternal _PlayerMemBasicData_default_instance_;
class PlayerMemH5AcitivityWatcherData;
class PlayerMemH5AcitivityWatcherDataDefaultTypeInternal;
extern PlayerMemH5AcitivityWatcherDataDefaultTypeInternal _PlayerMemH5AcitivityWatcherData_default_instance_;
class PlayerMemH5ActivityData;
class PlayerMemH5ActivityDataDefaultTypeInternal;
extern PlayerMemH5ActivityDataDefaultTypeInternal _PlayerMemH5ActivityData_default_instance_;
class PlayerMemH5ActivityDataResult;
class PlayerMemH5ActivityDataResultDefaultTypeInternal;
extern PlayerMemH5ActivityDataResultDefaultTypeInternal _PlayerMemH5ActivityDataResult_default_instance_;
class PlayerMemH5ActivityDataResult_RetcodeMapEntry;
class PlayerMemH5ActivityDataResult_RetcodeMapEntryDefaultTypeInternal;
extern PlayerMemH5ActivityDataResult_RetcodeMapEntryDefaultTypeInternal _PlayerMemH5ActivityDataResult_RetcodeMapEntry_default_instance_;
class PlayerMpModeReq;
class PlayerMpModeReqDefaultTypeInternal;
extern PlayerMpModeReqDefaultTypeInternal _PlayerMpModeReq_default_instance_;
class PlayerMpModeRsp;
class PlayerMpModeRspDefaultTypeInternal;
extern PlayerMpModeRspDefaultTypeInternal _PlayerMpModeRsp_default_instance_;
class QueryConcertProductInfoReq;
class QueryConcertProductInfoReqDefaultTypeInternal;
extern QueryConcertProductInfoReqDefaultTypeInternal _QueryConcertProductInfoReq_default_instance_;
class QueryConcertProductInfoRsp;
class QueryConcertProductInfoRspDefaultTypeInternal;
extern QueryConcertProductInfoRspDefaultTypeInternal _QueryConcertProductInfoRsp_default_instance_;
class QueryPlayerMemDataByMuipReq;
class QueryPlayerMemDataByMuipReqDefaultTypeInternal;
extern QueryPlayerMemDataByMuipReqDefaultTypeInternal _QueryPlayerMemDataByMuipReq_default_instance_;
class QueryPlayerMemDataByMuipRsp;
class QueryPlayerMemDataByMuipRspDefaultTypeInternal;
extern QueryPlayerMemDataByMuipRspDefaultTypeInternal _QueryPlayerMemDataByMuipRsp_default_instance_;
class SendConcertProductReq;
class SendConcertProductReqDefaultTypeInternal;
extern SendConcertProductReqDefaultTypeInternal _SendConcertProductReq_default_instance_;
class SendConcertProductRsp;
class SendConcertProductRspDefaultTypeInternal;
extern SendConcertProductRspDefaultTypeInternal _SendConcertProductRsp_default_instance_;
class UnbindGmUidNotify;
class UnbindGmUidNotifyDefaultTypeInternal;
extern UnbindGmUidNotifyDefaultTypeInternal _UnbindGmUidNotify_default_instance_;
class UpdateRedPointByMuipNotify;
class UpdateRedPointByMuipNotifyDefaultTypeInternal;
extern UpdateRedPointByMuipNotifyDefaultTypeInternal _UpdateRedPointByMuipNotify_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto

enum PlayerMemDataType {
  MEM_DATA_BASIC = 0,
  MEM_DATA_H5_ACTIVITY = 1,
  PlayerMemDataType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  PlayerMemDataType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool PlayerMemDataType_IsValid(int value);
const PlayerMemDataType PlayerMemDataType_MIN = MEM_DATA_BASIC;
const PlayerMemDataType PlayerMemDataType_MAX = MEM_DATA_H5_ACTIVITY;
const int PlayerMemDataType_ARRAYSIZE = PlayerMemDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerMemDataType_descriptor();
inline const ::std::string& PlayerMemDataType_Name(PlayerMemDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerMemDataType_descriptor(), value);
}
inline bool PlayerMemDataType_Parse(
    const ::std::string& name, PlayerMemDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerMemDataType>(
    PlayerMemDataType_descriptor(), name, value);
}
// ===================================================================

class OnlinePlayerNumReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OnlinePlayerNumReq) */ {
 public:
  OnlinePlayerNumReq();
  virtual ~OnlinePlayerNumReq();

  OnlinePlayerNumReq(const OnlinePlayerNumReq& from);

  inline OnlinePlayerNumReq& operator=(const OnlinePlayerNumReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnlinePlayerNumReq(OnlinePlayerNumReq&& from) noexcept
    : OnlinePlayerNumReq() {
    *this = ::std::move(from);
  }

  inline OnlinePlayerNumReq& operator=(OnlinePlayerNumReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlinePlayerNumReq& default_instance();

  static inline const OnlinePlayerNumReq* internal_default_instance() {
    return reinterpret_cast<const OnlinePlayerNumReq*>(
               &_OnlinePlayerNumReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(OnlinePlayerNumReq* other);
  friend void swap(OnlinePlayerNumReq& a, OnlinePlayerNumReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnlinePlayerNumReq* New() const PROTOBUF_FINAL { return New(NULL); }

  OnlinePlayerNumReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnlinePlayerNumReq& from);
  void MergeFrom(const OnlinePlayerNumReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnlinePlayerNumReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.OnlinePlayerNumReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class OnlinePlayerNumRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.OnlinePlayerNumRsp) */ {
 public:
  OnlinePlayerNumRsp();
  virtual ~OnlinePlayerNumRsp();

  OnlinePlayerNumRsp(const OnlinePlayerNumRsp& from);

  inline OnlinePlayerNumRsp& operator=(const OnlinePlayerNumRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnlinePlayerNumRsp(OnlinePlayerNumRsp&& from) noexcept
    : OnlinePlayerNumRsp() {
    *this = ::std::move(from);
  }

  inline OnlinePlayerNumRsp& operator=(OnlinePlayerNumRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlinePlayerNumRsp& default_instance();

  static inline const OnlinePlayerNumRsp* internal_default_instance() {
    return reinterpret_cast<const OnlinePlayerNumRsp*>(
               &_OnlinePlayerNumRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(OnlinePlayerNumRsp* other);
  friend void swap(OnlinePlayerNumRsp& a, OnlinePlayerNumRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnlinePlayerNumRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  OnlinePlayerNumRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnlinePlayerNumRsp& from);
  void MergeFrom(const OnlinePlayerNumRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnlinePlayerNumRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> gameserver_player_num_map = 3;
  int gameserver_player_num_map_size() const;
  void clear_gameserver_player_num_map();
  static const int kGameserverPlayerNumMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      gameserver_player_num_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_gameserver_player_num_map();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 online_player_num = 2;
  void clear_online_player_num();
  static const int kOnlinePlayerNumFieldNumber = 2;
  ::google::protobuf::uint32 online_player_num() const;
  void set_online_player_num(::google::protobuf::uint32 value);

  // uint32 online_player_num_except_sub_account = 4;
  void clear_online_player_num_except_sub_account();
  static const int kOnlinePlayerNumExceptSubAccountFieldNumber = 4;
  ::google::protobuf::uint32 online_player_num_except_sub_account() const;
  void set_online_player_num_except_sub_account(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.OnlinePlayerNumRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class OnlinePlayerNumRsp_GameserverPlayerNumMapEntry : public ::google::protobuf::internal::MapEntry<OnlinePlayerNumRsp_GameserverPlayerNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<OnlinePlayerNumRsp_GameserverPlayerNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    OnlinePlayerNumRsp_GameserverPlayerNumMapEntry();
    OnlinePlayerNumRsp_GameserverPlayerNumMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const OnlinePlayerNumRsp_GameserverPlayerNumMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_OnlinePlayerNumRsp_GameserverPlayerNumMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      OnlinePlayerNumRsp_GameserverPlayerNumMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > gameserver_player_num_map_;
  private:
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 online_player_num_;
  ::google::protobuf::uint32 online_player_num_except_sub_account_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KickoutPlayerNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.KickoutPlayerNotify) */ {
 public:
  KickoutPlayerNotify();
  virtual ~KickoutPlayerNotify();

  KickoutPlayerNotify(const KickoutPlayerNotify& from);

  inline KickoutPlayerNotify& operator=(const KickoutPlayerNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  KickoutPlayerNotify(KickoutPlayerNotify&& from) noexcept
    : KickoutPlayerNotify() {
    *this = ::std::move(from);
  }

  inline KickoutPlayerNotify& operator=(KickoutPlayerNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const KickoutPlayerNotify& default_instance();

  static inline const KickoutPlayerNotify* internal_default_instance() {
    return reinterpret_cast<const KickoutPlayerNotify*>(
               &_KickoutPlayerNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(KickoutPlayerNotify* other);
  friend void swap(KickoutPlayerNotify& a, KickoutPlayerNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline KickoutPlayerNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  KickoutPlayerNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KickoutPlayerNotify& from);
  void MergeFrom(const KickoutPlayerNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KickoutPlayerNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 reason = 1;
  void clear_reason();
  static const int kReasonFieldNumber = 1;
  ::google::protobuf::uint32 reason() const;
  void set_reason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.KickoutPlayerNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 reason_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckOnlinePlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckOnlinePlayerReq) */ {
 public:
  CheckOnlinePlayerReq();
  virtual ~CheckOnlinePlayerReq();

  CheckOnlinePlayerReq(const CheckOnlinePlayerReq& from);

  inline CheckOnlinePlayerReq& operator=(const CheckOnlinePlayerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckOnlinePlayerReq(CheckOnlinePlayerReq&& from) noexcept
    : CheckOnlinePlayerReq() {
    *this = ::std::move(from);
  }

  inline CheckOnlinePlayerReq& operator=(CheckOnlinePlayerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckOnlinePlayerReq& default_instance();

  static inline const CheckOnlinePlayerReq* internal_default_instance() {
    return reinterpret_cast<const CheckOnlinePlayerReq*>(
               &_CheckOnlinePlayerReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CheckOnlinePlayerReq* other);
  friend void swap(CheckOnlinePlayerReq& a, CheckOnlinePlayerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckOnlinePlayerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckOnlinePlayerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckOnlinePlayerReq& from);
  void MergeFrom(const CheckOnlinePlayerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckOnlinePlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gameserver_id = 1;
  void clear_gameserver_id();
  static const int kGameserverIdFieldNumber = 1;
  ::google::protobuf::uint32 gameserver_id() const;
  void set_gameserver_id(::google::protobuf::uint32 value);

  // uint32 ns_gameserver_id = 2;
  void clear_ns_gameserver_id();
  static const int kNsGameserverIdFieldNumber = 2;
  ::google::protobuf::uint32 ns_gameserver_id() const;
  void set_ns_gameserver_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CheckOnlinePlayerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gameserver_id_;
  ::google::protobuf::uint32 ns_gameserver_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckOnlinePlayerRsp_NodeStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckOnlinePlayerRsp.NodeStatus) */ {
 public:
  CheckOnlinePlayerRsp_NodeStatus();
  virtual ~CheckOnlinePlayerRsp_NodeStatus();

  CheckOnlinePlayerRsp_NodeStatus(const CheckOnlinePlayerRsp_NodeStatus& from);

  inline CheckOnlinePlayerRsp_NodeStatus& operator=(const CheckOnlinePlayerRsp_NodeStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckOnlinePlayerRsp_NodeStatus(CheckOnlinePlayerRsp_NodeStatus&& from) noexcept
    : CheckOnlinePlayerRsp_NodeStatus() {
    *this = ::std::move(from);
  }

  inline CheckOnlinePlayerRsp_NodeStatus& operator=(CheckOnlinePlayerRsp_NodeStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckOnlinePlayerRsp_NodeStatus& default_instance();

  static inline const CheckOnlinePlayerRsp_NodeStatus* internal_default_instance() {
    return reinterpret_cast<const CheckOnlinePlayerRsp_NodeStatus*>(
               &_CheckOnlinePlayerRsp_NodeStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CheckOnlinePlayerRsp_NodeStatus* other);
  friend void swap(CheckOnlinePlayerRsp_NodeStatus& a, CheckOnlinePlayerRsp_NodeStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckOnlinePlayerRsp_NodeStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckOnlinePlayerRsp_NodeStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckOnlinePlayerRsp_NodeStatus& from);
  void MergeFrom(const CheckOnlinePlayerRsp_NodeStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckOnlinePlayerRsp_NodeStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gameserver_id = 1;
  void clear_gameserver_id();
  static const int kGameserverIdFieldNumber = 1;
  ::google::protobuf::uint32 gameserver_id() const;
  void set_gameserver_id(::google::protobuf::uint32 value);

  // uint32 nodeserver_id = 2;
  void clear_nodeserver_id();
  static const int kNodeserverIdFieldNumber = 2;
  ::google::protobuf::uint32 nodeserver_id() const;
  void set_nodeserver_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CheckOnlinePlayerRsp.NodeStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gameserver_id_;
  ::google::protobuf::uint32 nodeserver_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckOnlinePlayerRsp_GameStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckOnlinePlayerRsp.GameStatus) */ {
 public:
  CheckOnlinePlayerRsp_GameStatus();
  virtual ~CheckOnlinePlayerRsp_GameStatus();

  CheckOnlinePlayerRsp_GameStatus(const CheckOnlinePlayerRsp_GameStatus& from);

  inline CheckOnlinePlayerRsp_GameStatus& operator=(const CheckOnlinePlayerRsp_GameStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckOnlinePlayerRsp_GameStatus(CheckOnlinePlayerRsp_GameStatus&& from) noexcept
    : CheckOnlinePlayerRsp_GameStatus() {
    *this = ::std::move(from);
  }

  inline CheckOnlinePlayerRsp_GameStatus& operator=(CheckOnlinePlayerRsp_GameStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckOnlinePlayerRsp_GameStatus& default_instance();

  static inline const CheckOnlinePlayerRsp_GameStatus* internal_default_instance() {
    return reinterpret_cast<const CheckOnlinePlayerRsp_GameStatus*>(
               &_CheckOnlinePlayerRsp_GameStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CheckOnlinePlayerRsp_GameStatus* other);
  friend void swap(CheckOnlinePlayerRsp_GameStatus& a, CheckOnlinePlayerRsp_GameStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckOnlinePlayerRsp_GameStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckOnlinePlayerRsp_GameStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckOnlinePlayerRsp_GameStatus& from);
  void MergeFrom(const CheckOnlinePlayerRsp_GameStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckOnlinePlayerRsp_GameStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gameserver_id = 1;
  void clear_gameserver_id();
  static const int kGameserverIdFieldNumber = 1;
  ::google::protobuf::uint32 gameserver_id() const;
  void set_gameserver_id(::google::protobuf::uint32 value);

  // uint32 login_time = 2;
  void clear_login_time();
  static const int kLoginTimeFieldNumber = 2;
  ::google::protobuf::uint32 login_time() const;
  void set_login_time(::google::protobuf::uint32 value);

  // uint64 login_rand = 3;
  void clear_login_rand();
  static const int kLoginRandFieldNumber = 3;
  ::google::protobuf::uint64 login_rand() const;
  void set_login_rand(::google::protobuf::uint64 value);

  // bool is_wait_save = 4;
  void clear_is_wait_save();
  static const int kIsWaitSaveFieldNumber = 4;
  bool is_wait_save() const;
  void set_is_wait_save(bool value);

  // @@protoc_insertion_point(class_scope:proto.CheckOnlinePlayerRsp.GameStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gameserver_id_;
  ::google::protobuf::uint32 login_time_;
  ::google::protobuf::uint64 login_rand_;
  bool is_wait_save_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckOnlinePlayerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckOnlinePlayerRsp) */ {
 public:
  CheckOnlinePlayerRsp();
  virtual ~CheckOnlinePlayerRsp();

  CheckOnlinePlayerRsp(const CheckOnlinePlayerRsp& from);

  inline CheckOnlinePlayerRsp& operator=(const CheckOnlinePlayerRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckOnlinePlayerRsp(CheckOnlinePlayerRsp&& from) noexcept
    : CheckOnlinePlayerRsp() {
    *this = ::std::move(from);
  }

  inline CheckOnlinePlayerRsp& operator=(CheckOnlinePlayerRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckOnlinePlayerRsp& default_instance();

  static inline const CheckOnlinePlayerRsp* internal_default_instance() {
    return reinterpret_cast<const CheckOnlinePlayerRsp*>(
               &_CheckOnlinePlayerRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CheckOnlinePlayerRsp* other);
  friend void swap(CheckOnlinePlayerRsp& a, CheckOnlinePlayerRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckOnlinePlayerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckOnlinePlayerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckOnlinePlayerRsp& from);
  void MergeFrom(const CheckOnlinePlayerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckOnlinePlayerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CheckOnlinePlayerRsp_NodeStatus NodeStatus;
  typedef CheckOnlinePlayerRsp_GameStatus GameStatus;

  // accessors -------------------------------------------------------

  // .proto.CheckOnlinePlayerRsp.NodeStatus node_status = 2;
  bool has_node_status() const;
  void clear_node_status();
  static const int kNodeStatusFieldNumber = 2;
  const ::proto::CheckOnlinePlayerRsp_NodeStatus& node_status() const;
  ::proto::CheckOnlinePlayerRsp_NodeStatus* mutable_node_status();
  ::proto::CheckOnlinePlayerRsp_NodeStatus* release_node_status();
  void set_allocated_node_status(::proto::CheckOnlinePlayerRsp_NodeStatus* node_status);

  // .proto.CheckOnlinePlayerRsp.GameStatus game_status = 3;
  bool has_game_status() const;
  void clear_game_status();
  static const int kGameStatusFieldNumber = 3;
  const ::proto::CheckOnlinePlayerRsp_GameStatus& game_status() const;
  ::proto::CheckOnlinePlayerRsp_GameStatus* mutable_game_status();
  ::proto::CheckOnlinePlayerRsp_GameStatus* release_game_status();
  void set_allocated_game_status(::proto::CheckOnlinePlayerRsp_GameStatus* game_status);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.CheckOnlinePlayerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::proto::CheckOnlinePlayerRsp_NodeStatus* node_status_;
  ::proto::CheckOnlinePlayerRsp_GameStatus* game_status_;
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerCombatForceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCombatForceReq) */ {
 public:
  PlayerCombatForceReq();
  virtual ~PlayerCombatForceReq();

  PlayerCombatForceReq(const PlayerCombatForceReq& from);

  inline PlayerCombatForceReq& operator=(const PlayerCombatForceReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCombatForceReq(PlayerCombatForceReq&& from) noexcept
    : PlayerCombatForceReq() {
    *this = ::std::move(from);
  }

  inline PlayerCombatForceReq& operator=(PlayerCombatForceReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCombatForceReq& default_instance();

  static inline const PlayerCombatForceReq* internal_default_instance() {
    return reinterpret_cast<const PlayerCombatForceReq*>(
               &_PlayerCombatForceReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(PlayerCombatForceReq* other);
  friend void swap(PlayerCombatForceReq& a, PlayerCombatForceReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCombatForceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCombatForceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCombatForceReq& from);
  void MergeFrom(const PlayerCombatForceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCombatForceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.PlayerCombatForceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class PlayerCombatForceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerCombatForceRsp) */ {
 public:
  PlayerCombatForceRsp();
  virtual ~PlayerCombatForceRsp();

  PlayerCombatForceRsp(const PlayerCombatForceRsp& from);

  inline PlayerCombatForceRsp& operator=(const PlayerCombatForceRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerCombatForceRsp(PlayerCombatForceRsp&& from) noexcept
    : PlayerCombatForceRsp() {
    *this = ::std::move(from);
  }

  inline PlayerCombatForceRsp& operator=(PlayerCombatForceRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerCombatForceRsp& default_instance();

  static inline const PlayerCombatForceRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerCombatForceRsp*>(
               &_PlayerCombatForceRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(PlayerCombatForceRsp* other);
  friend void swap(PlayerCombatForceRsp& a, PlayerCombatForceRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerCombatForceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerCombatForceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerCombatForceRsp& from);
  void MergeFrom(const PlayerCombatForceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerCombatForceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, float> player_combat_force_map = 3;
  int player_combat_force_map_size() const;
  void clear_player_combat_force_map();
  static const int kPlayerCombatForceMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
      player_combat_force_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, float >*
      mutable_player_combat_force_map();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // float player_combat_force = 2;
  void clear_player_combat_force();
  static const int kPlayerCombatForceFieldNumber = 2;
  float player_combat_force() const;
  void set_player_combat_force(float value);

  // @@protoc_insertion_point(class_scope:proto.PlayerCombatForceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class PlayerCombatForceRsp_PlayerCombatForceMapEntry : public ::google::protobuf::internal::MapEntry<PlayerCombatForceRsp_PlayerCombatForceMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<PlayerCombatForceRsp_PlayerCombatForceMapEntry, 
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > SuperType;
    PlayerCombatForceRsp_PlayerCombatForceMapEntry();
    PlayerCombatForceRsp_PlayerCombatForceMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const PlayerCombatForceRsp_PlayerCombatForceMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_PlayerCombatForceRsp_PlayerCombatForceMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      PlayerCombatForceRsp_PlayerCombatForceMapEntry,
      ::google::protobuf::uint32, float,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
      0 > player_combat_force_map_;
  private:
  ::google::protobuf::int32 retcode_;
  float player_combat_force_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class CheckGameVersionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckGameVersionReq) */ {
 public:
  CheckGameVersionReq();
  virtual ~CheckGameVersionReq();

  CheckGameVersionReq(const CheckGameVersionReq& from);

  inline CheckGameVersionReq& operator=(const CheckGameVersionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckGameVersionReq(CheckGameVersionReq&& from) noexcept
    : CheckGameVersionReq() {
    *this = ::std::move(from);
  }

  inline CheckGameVersionReq& operator=(CheckGameVersionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckGameVersionReq& default_instance();

  static inline const CheckGameVersionReq* internal_default_instance() {
    return reinterpret_cast<const CheckGameVersionReq*>(
               &_CheckGameVersionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CheckGameVersionReq* other);
  friend void swap(CheckGameVersionReq& a, CheckGameVersionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckGameVersionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckGameVersionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckGameVersionReq& from);
  void MergeFrom(const CheckGameVersionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckGameVersionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> res_version_map = 4;
  int res_version_map_size() const;
  void clear_res_version_map();
  static const int kResVersionMapFieldNumber = 4;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      res_version_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_res_version_map();

  // map<uint32, uint32> next_res_version_map = 5;
  int next_res_version_map_size() const;
  void clear_next_res_version_map();
  static const int kNextResVersionMapFieldNumber = 5;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      next_res_version_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_next_res_version_map();

  // uint32 server_version = 1;
  void clear_server_version();
  static const int kServerVersionFieldNumber = 1;
  ::google::protobuf::uint32 server_version() const;
  void set_server_version(::google::protobuf::uint32 value);

  // uint32 client_version = 2;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 2;
  ::google::protobuf::uint32 client_version() const;
  void set_client_version(::google::protobuf::uint32 value);

  // uint32 client_silence_version = 3;
  void clear_client_silence_version();
  static const int kClientSilenceVersionFieldNumber = 3;
  ::google::protobuf::uint32 client_silence_version() const;
  void set_client_silence_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CheckGameVersionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class CheckGameVersionReq_ResVersionMapEntry : public ::google::protobuf::internal::MapEntry<CheckGameVersionReq_ResVersionMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<CheckGameVersionReq_ResVersionMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    CheckGameVersionReq_ResVersionMapEntry();
    CheckGameVersionReq_ResVersionMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const CheckGameVersionReq_ResVersionMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_CheckGameVersionReq_ResVersionMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      CheckGameVersionReq_ResVersionMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > res_version_map_;
  private:
  public:
  class CheckGameVersionReq_NextResVersionMapEntry : public ::google::protobuf::internal::MapEntry<CheckGameVersionReq_NextResVersionMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<CheckGameVersionReq_NextResVersionMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    CheckGameVersionReq_NextResVersionMapEntry();
    CheckGameVersionReq_NextResVersionMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const CheckGameVersionReq_NextResVersionMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_CheckGameVersionReq_NextResVersionMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      CheckGameVersionReq_NextResVersionMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > next_res_version_map_;
  private:
  ::google::protobuf::uint32 server_version_;
  ::google::protobuf::uint32 client_version_;
  ::google::protobuf::uint32 client_silence_version_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameVersionResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GameVersionResult) */ {
 public:
  GameVersionResult();
  virtual ~GameVersionResult();

  GameVersionResult(const GameVersionResult& from);

  inline GameVersionResult& operator=(const GameVersionResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameVersionResult(GameVersionResult&& from) noexcept
    : GameVersionResult() {
    *this = ::std::move(from);
  }

  inline GameVersionResult& operator=(GameVersionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameVersionResult& default_instance();

  static inline const GameVersionResult* internal_default_instance() {
    return reinterpret_cast<const GameVersionResult*>(
               &_GameVersionResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(GameVersionResult* other);
  friend void swap(GameVersionResult& a, GameVersionResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameVersionResult* New() const PROTOBUF_FINAL { return New(NULL); }

  GameVersionResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameVersionResult& from);
  void MergeFrom(const GameVersionResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameVersionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 wrong_name_list = 3;
  int wrong_name_list_size() const;
  void clear_wrong_name_list();
  static const int kWrongNameListFieldNumber = 3;
  ::google::protobuf::uint32 wrong_name_list(int index) const;
  void set_wrong_name_list(int index, ::google::protobuf::uint32 value);
  void add_wrong_name_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wrong_name_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wrong_name_list();

  // uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // uint32 wrong_num = 2;
  void clear_wrong_num();
  static const int kWrongNumFieldNumber = 2;
  ::google::protobuf::uint32 wrong_num() const;
  void set_wrong_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.GameVersionResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wrong_name_list_;
  mutable int _wrong_name_list_cached_byte_size_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 wrong_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class CheckGameVersionRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckGameVersionRsp) */ {
 public:
  CheckGameVersionRsp();
  virtual ~CheckGameVersionRsp();

  CheckGameVersionRsp(const CheckGameVersionRsp& from);

  inline CheckGameVersionRsp& operator=(const CheckGameVersionRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckGameVersionRsp(CheckGameVersionRsp&& from) noexcept
    : CheckGameVersionRsp() {
    *this = ::std::move(from);
  }

  inline CheckGameVersionRsp& operator=(CheckGameVersionRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckGameVersionRsp& default_instance();

  static inline const CheckGameVersionRsp* internal_default_instance() {
    return reinterpret_cast<const CheckGameVersionRsp*>(
               &_CheckGameVersionRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(CheckGameVersionRsp* other);
  friend void swap(CheckGameVersionRsp& a, CheckGameVersionRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckGameVersionRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckGameVersionRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckGameVersionRsp& from);
  void MergeFrom(const CheckGameVersionRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckGameVersionRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, .proto.GameVersionResult> res_version_result_map = 6;
  int res_version_result_map_size() const;
  void clear_res_version_result_map();
  static const int kResVersionResultMapFieldNumber = 6;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >&
      res_version_result_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >*
      mutable_res_version_result_map();

  // map<uint32, .proto.GameVersionResult> next_res_version_result_map = 7;
  int next_res_version_result_map_size() const;
  void clear_next_res_version_result_map();
  static const int kNextResVersionResultMapFieldNumber = 7;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >&
      next_res_version_result_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >*
      mutable_next_res_version_result_map();

  // .proto.GameVersionResult server_version_result = 3;
  bool has_server_version_result() const;
  void clear_server_version_result();
  static const int kServerVersionResultFieldNumber = 3;
  const ::proto::GameVersionResult& server_version_result() const;
  ::proto::GameVersionResult* mutable_server_version_result();
  ::proto::GameVersionResult* release_server_version_result();
  void set_allocated_server_version_result(::proto::GameVersionResult* server_version_result);

  // .proto.GameVersionResult client_version_result = 4;
  bool has_client_version_result() const;
  void clear_client_version_result();
  static const int kClientVersionResultFieldNumber = 4;
  const ::proto::GameVersionResult& client_version_result() const;
  ::proto::GameVersionResult* mutable_client_version_result();
  ::proto::GameVersionResult* release_client_version_result();
  void set_allocated_client_version_result(::proto::GameVersionResult* client_version_result);

  // .proto.GameVersionResult client_silence_version_result = 5;
  bool has_client_silence_version_result() const;
  void clear_client_silence_version_result();
  static const int kClientSilenceVersionResultFieldNumber = 5;
  const ::proto::GameVersionResult& client_silence_version_result() const;
  ::proto::GameVersionResult* mutable_client_silence_version_result();
  ::proto::GameVersionResult* release_client_silence_version_result();
  void set_allocated_client_silence_version_result(::proto::GameVersionResult* client_silence_version_result);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 total_game = 2;
  void clear_total_game();
  static const int kTotalGameFieldNumber = 2;
  ::google::protobuf::uint32 total_game() const;
  void set_total_game(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CheckGameVersionRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class CheckGameVersionRsp_ResVersionResultMapEntry : public ::google::protobuf::internal::MapEntry<CheckGameVersionRsp_ResVersionResultMapEntry, 
      ::google::protobuf::uint32, ::proto::GameVersionResult,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<CheckGameVersionRsp_ResVersionResultMapEntry, 
      ::google::protobuf::uint32, ::proto::GameVersionResult,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    CheckGameVersionRsp_ResVersionResultMapEntry();
    CheckGameVersionRsp_ResVersionResultMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const CheckGameVersionRsp_ResVersionResultMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_CheckGameVersionRsp_ResVersionResultMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      CheckGameVersionRsp_ResVersionResultMapEntry,
      ::google::protobuf::uint32, ::proto::GameVersionResult,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > res_version_result_map_;
  private:
  public:
  class CheckGameVersionRsp_NextResVersionResultMapEntry : public ::google::protobuf::internal::MapEntry<CheckGameVersionRsp_NextResVersionResultMapEntry, 
      ::google::protobuf::uint32, ::proto::GameVersionResult,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<CheckGameVersionRsp_NextResVersionResultMapEntry, 
      ::google::protobuf::uint32, ::proto::GameVersionResult,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    CheckGameVersionRsp_NextResVersionResultMapEntry();
    CheckGameVersionRsp_NextResVersionResultMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const CheckGameVersionRsp_NextResVersionResultMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_CheckGameVersionRsp_NextResVersionResultMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      CheckGameVersionRsp_NextResVersionResultMapEntry,
      ::google::protobuf::uint32, ::proto::GameVersionResult,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > next_res_version_result_map_;
  private:
  ::proto::GameVersionResult* server_version_result_;
  ::proto::GameVersionResult* client_version_result_;
  ::proto::GameVersionResult* client_silence_version_result_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 total_game_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlatformPlayerNumReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlatformPlayerNumReq) */ {
 public:
  PlatformPlayerNumReq();
  virtual ~PlatformPlayerNumReq();

  PlatformPlayerNumReq(const PlatformPlayerNumReq& from);

  inline PlatformPlayerNumReq& operator=(const PlatformPlayerNumReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformPlayerNumReq(PlatformPlayerNumReq&& from) noexcept
    : PlatformPlayerNumReq() {
    *this = ::std::move(from);
  }

  inline PlatformPlayerNumReq& operator=(PlatformPlayerNumReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformPlayerNumReq& default_instance();

  static inline const PlatformPlayerNumReq* internal_default_instance() {
    return reinterpret_cast<const PlatformPlayerNumReq*>(
               &_PlatformPlayerNumReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(PlatformPlayerNumReq* other);
  friend void swap(PlatformPlayerNumReq& a, PlatformPlayerNumReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformPlayerNumReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformPlayerNumReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformPlayerNumReq& from);
  void MergeFrom(const PlatformPlayerNumReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformPlayerNumReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.PlatformPlayerNumReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class PlatformPlayerNumRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlatformPlayerNumRsp) */ {
 public:
  PlatformPlayerNumRsp();
  virtual ~PlatformPlayerNumRsp();

  PlatformPlayerNumRsp(const PlatformPlayerNumRsp& from);

  inline PlatformPlayerNumRsp& operator=(const PlatformPlayerNumRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformPlayerNumRsp(PlatformPlayerNumRsp&& from) noexcept
    : PlatformPlayerNumRsp() {
    *this = ::std::move(from);
  }

  inline PlatformPlayerNumRsp& operator=(PlatformPlayerNumRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformPlayerNumRsp& default_instance();

  static inline const PlatformPlayerNumRsp* internal_default_instance() {
    return reinterpret_cast<const PlatformPlayerNumRsp*>(
               &_PlatformPlayerNumRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(PlatformPlayerNumRsp* other);
  friend void swap(PlatformPlayerNumRsp& a, PlatformPlayerNumRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformPlayerNumRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformPlayerNumRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformPlayerNumRsp& from);
  void MergeFrom(const PlatformPlayerNumRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformPlayerNumRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> platform_player_num_map = 3;
  int platform_player_num_map_size() const;
  void clear_platform_player_num_map();
  static const int kPlatformPlayerNumMapFieldNumber = 3;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      platform_player_num_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_platform_player_num_map();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 online_player_num = 2;
  void clear_online_player_num();
  static const int kOnlinePlayerNumFieldNumber = 2;
  ::google::protobuf::uint32 online_player_num() const;
  void set_online_player_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlatformPlayerNumRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class PlatformPlayerNumRsp_PlatformPlayerNumMapEntry : public ::google::protobuf::internal::MapEntry<PlatformPlayerNumRsp_PlatformPlayerNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<PlatformPlayerNumRsp_PlatformPlayerNumMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    PlatformPlayerNumRsp_PlatformPlayerNumMapEntry();
    PlatformPlayerNumRsp_PlatformPlayerNumMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const PlatformPlayerNumRsp_PlatformPlayerNumMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_PlatformPlayerNumRsp_PlatformPlayerNumMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      PlatformPlayerNumRsp_PlatformPlayerNumMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > platform_player_num_map_;
  private:
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 online_player_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerMemBasicData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerMemBasicData) */ {
 public:
  PlayerMemBasicData();
  virtual ~PlayerMemBasicData();

  PlayerMemBasicData(const PlayerMemBasicData& from);

  inline PlayerMemBasicData& operator=(const PlayerMemBasicData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerMemBasicData(PlayerMemBasicData&& from) noexcept
    : PlayerMemBasicData() {
    *this = ::std::move(from);
  }

  inline PlayerMemBasicData& operator=(PlayerMemBasicData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMemBasicData& default_instance();

  static inline const PlayerMemBasicData* internal_default_instance() {
    return reinterpret_cast<const PlayerMemBasicData*>(
               &_PlayerMemBasicData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(PlayerMemBasicData* other);
  friend void swap(PlayerMemBasicData& a, PlayerMemBasicData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerMemBasicData* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerMemBasicData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerMemBasicData& from);
  void MergeFrom(const PlayerMemBasicData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerMemBasicData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nickname = 1;
  void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // .proto.ProfilePicture profile_picture = 7;
  bool has_profile_picture() const;
  void clear_profile_picture();
  static const int kProfilePictureFieldNumber = 7;
  const ::proto::ProfilePicture& profile_picture() const;
  ::proto::ProfilePicture* mutable_profile_picture();
  ::proto::ProfilePicture* release_profile_picture();
  void set_allocated_profile_picture(::proto::ProfilePicture* profile_picture);

  // uint32 level = 2;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // uint32 exp = 3;
  void clear_exp();
  static const int kExpFieldNumber = 3;
  ::google::protobuf::uint32 exp() const;
  void set_exp(::google::protobuf::uint32 value);

  // uint32 scoin = 4;
  void clear_scoin();
  static const int kScoinFieldNumber = 4;
  ::google::protobuf::uint32 scoin() const;
  void set_scoin(::google::protobuf::uint32 value);

  // uint32 hcoin = 5;
  void clear_hcoin();
  static const int kHcoinFieldNumber = 5;
  ::google::protobuf::uint32 hcoin() const;
  void set_hcoin(::google::protobuf::uint32 value);

  // uint32 last_login = 6;
  void clear_last_login();
  static const int kLastLoginFieldNumber = 6;
  ::google::protobuf::uint32 last_login() const;
  void set_last_login(::google::protobuf::uint32 value);

  // fixed32 register_time = 8;
  void clear_register_time();
  static const int kRegisterTimeFieldNumber = 8;
  ::google::protobuf::uint32 register_time() const;
  void set_register_time(::google::protobuf::uint32 value);

  // uint32 gender_type = 9;
  void clear_gender_type();
  static const int kGenderTypeFieldNumber = 9;
  ::google::protobuf::uint32 gender_type() const;
  void set_gender_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerMemBasicData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::proto::ProfilePicture* profile_picture_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 scoin_;
  ::google::protobuf::uint32 hcoin_;
  ::google::protobuf::uint32 last_login_;
  ::google::protobuf::uint32 register_time_;
  ::google::protobuf::uint32 gender_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerMemH5AcitivityWatcherData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerMemH5AcitivityWatcherData) */ {
 public:
  PlayerMemH5AcitivityWatcherData();
  virtual ~PlayerMemH5AcitivityWatcherData();

  PlayerMemH5AcitivityWatcherData(const PlayerMemH5AcitivityWatcherData& from);

  inline PlayerMemH5AcitivityWatcherData& operator=(const PlayerMemH5AcitivityWatcherData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerMemH5AcitivityWatcherData(PlayerMemH5AcitivityWatcherData&& from) noexcept
    : PlayerMemH5AcitivityWatcherData() {
    *this = ::std::move(from);
  }

  inline PlayerMemH5AcitivityWatcherData& operator=(PlayerMemH5AcitivityWatcherData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMemH5AcitivityWatcherData& default_instance();

  static inline const PlayerMemH5AcitivityWatcherData* internal_default_instance() {
    return reinterpret_cast<const PlayerMemH5AcitivityWatcherData*>(
               &_PlayerMemH5AcitivityWatcherData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(PlayerMemH5AcitivityWatcherData* other);
  friend void swap(PlayerMemH5AcitivityWatcherData& a, PlayerMemH5AcitivityWatcherData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerMemH5AcitivityWatcherData* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerMemH5AcitivityWatcherData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerMemH5AcitivityWatcherData& from);
  void MergeFrom(const PlayerMemH5AcitivityWatcherData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerMemH5AcitivityWatcherData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 h5_activity_watcher_id = 1;
  void clear_h5_activity_watcher_id();
  static const int kH5ActivityWatcherIdFieldNumber = 1;
  ::google::protobuf::uint32 h5_activity_watcher_id() const;
  void set_h5_activity_watcher_id(::google::protobuf::uint32 value);

  // uint32 progress = 2;
  void clear_progress();
  static const int kProgressFieldNumber = 2;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerMemH5AcitivityWatcherData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 h5_activity_watcher_id_;
  ::google::protobuf::uint32 progress_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerMemH5ActivityData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerMemH5ActivityData) */ {
 public:
  PlayerMemH5ActivityData();
  virtual ~PlayerMemH5ActivityData();

  PlayerMemH5ActivityData(const PlayerMemH5ActivityData& from);

  inline PlayerMemH5ActivityData& operator=(const PlayerMemH5ActivityData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerMemH5ActivityData(PlayerMemH5ActivityData&& from) noexcept
    : PlayerMemH5ActivityData() {
    *this = ::std::move(from);
  }

  inline PlayerMemH5ActivityData& operator=(PlayerMemH5ActivityData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMemH5ActivityData& default_instance();

  static inline const PlayerMemH5ActivityData* internal_default_instance() {
    return reinterpret_cast<const PlayerMemH5ActivityData*>(
               &_PlayerMemH5ActivityData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(PlayerMemH5ActivityData* other);
  friend void swap(PlayerMemH5ActivityData& a, PlayerMemH5ActivityData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerMemH5ActivityData* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerMemH5ActivityData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerMemH5ActivityData& from);
  void MergeFrom(const PlayerMemH5ActivityData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerMemH5ActivityData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 finished_h5_activity_watcher_list = 4;
  int finished_h5_activity_watcher_list_size() const;
  void clear_finished_h5_activity_watcher_list();
  static const int kFinishedH5ActivityWatcherListFieldNumber = 4;
  ::google::protobuf::uint32 finished_h5_activity_watcher_list(int index) const;
  void set_finished_h5_activity_watcher_list(int index, ::google::protobuf::uint32 value);
  void add_finished_h5_activity_watcher_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      finished_h5_activity_watcher_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_finished_h5_activity_watcher_list();

  // repeated uint32 unaccept_h5_activity_watcher_list = 5;
  int unaccept_h5_activity_watcher_list_size() const;
  void clear_unaccept_h5_activity_watcher_list();
  static const int kUnacceptH5ActivityWatcherListFieldNumber = 5;
  ::google::protobuf::uint32 unaccept_h5_activity_watcher_list(int index) const;
  void set_unaccept_h5_activity_watcher_list(int index, ::google::protobuf::uint32 value);
  void add_unaccept_h5_activity_watcher_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unaccept_h5_activity_watcher_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unaccept_h5_activity_watcher_list();

  // repeated .proto.PlayerMemH5AcitivityWatcherData h5_activity_watcher_list = 6;
  int h5_activity_watcher_list_size() const;
  void clear_h5_activity_watcher_list();
  static const int kH5ActivityWatcherListFieldNumber = 6;
  const ::proto::PlayerMemH5AcitivityWatcherData& h5_activity_watcher_list(int index) const;
  ::proto::PlayerMemH5AcitivityWatcherData* mutable_h5_activity_watcher_list(int index);
  ::proto::PlayerMemH5AcitivityWatcherData* add_h5_activity_watcher_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5AcitivityWatcherData >*
      mutable_h5_activity_watcher_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5AcitivityWatcherData >&
      h5_activity_watcher_list() const;

  // uint32 h5_schedule_id = 1;
  void clear_h5_schedule_id();
  static const int kH5ScheduleIdFieldNumber = 1;
  ::google::protobuf::uint32 h5_schedule_id() const;
  void set_h5_schedule_id(::google::protobuf::uint32 value);

  // uint32 h5_activity_id = 2;
  void clear_h5_activity_id();
  static const int kH5ActivityIdFieldNumber = 2;
  ::google::protobuf::uint32 h5_activity_id() const;
  void set_h5_activity_id(::google::protobuf::uint32 value);

  // uint32 last_refresh_time = 3;
  void clear_last_refresh_time();
  static const int kLastRefreshTimeFieldNumber = 3;
  ::google::protobuf::uint32 last_refresh_time() const;
  void set_last_refresh_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerMemH5ActivityData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > finished_h5_activity_watcher_list_;
  mutable int _finished_h5_activity_watcher_list_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unaccept_h5_activity_watcher_list_;
  mutable int _unaccept_h5_activity_watcher_list_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5AcitivityWatcherData > h5_activity_watcher_list_;
  ::google::protobuf::uint32 h5_schedule_id_;
  ::google::protobuf::uint32 h5_activity_id_;
  ::google::protobuf::uint32 last_refresh_time_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class PlayerMemH5ActivityDataResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerMemH5ActivityDataResult) */ {
 public:
  PlayerMemH5ActivityDataResult();
  virtual ~PlayerMemH5ActivityDataResult();

  PlayerMemH5ActivityDataResult(const PlayerMemH5ActivityDataResult& from);

  inline PlayerMemH5ActivityDataResult& operator=(const PlayerMemH5ActivityDataResult& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerMemH5ActivityDataResult(PlayerMemH5ActivityDataResult&& from) noexcept
    : PlayerMemH5ActivityDataResult() {
    *this = ::std::move(from);
  }

  inline PlayerMemH5ActivityDataResult& operator=(PlayerMemH5ActivityDataResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMemH5ActivityDataResult& default_instance();

  static inline const PlayerMemH5ActivityDataResult* internal_default_instance() {
    return reinterpret_cast<const PlayerMemH5ActivityDataResult*>(
               &_PlayerMemH5ActivityDataResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(PlayerMemH5ActivityDataResult* other);
  friend void swap(PlayerMemH5ActivityDataResult& a, PlayerMemH5ActivityDataResult& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerMemH5ActivityDataResult* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerMemH5ActivityDataResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerMemH5ActivityDataResult& from);
  void MergeFrom(const PlayerMemH5ActivityDataResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerMemH5ActivityDataResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, int32> retcode_map = 1;
  int retcode_map_size() const;
  void clear_retcode_map();
  static const int kRetcodeMapFieldNumber = 1;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >&
      retcode_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >*
      mutable_retcode_map();

  // repeated .proto.PlayerMemH5ActivityData h5_activity_data_list = 2;
  int h5_activity_data_list_size() const;
  void clear_h5_activity_data_list();
  static const int kH5ActivityDataListFieldNumber = 2;
  const ::proto::PlayerMemH5ActivityData& h5_activity_data_list(int index) const;
  ::proto::PlayerMemH5ActivityData* mutable_h5_activity_data_list(int index);
  ::proto::PlayerMemH5ActivityData* add_h5_activity_data_list();
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5ActivityData >*
      mutable_h5_activity_data_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5ActivityData >&
      h5_activity_data_list() const;

  // @@protoc_insertion_point(class_scope:proto.PlayerMemH5ActivityDataResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class PlayerMemH5ActivityDataResult_RetcodeMapEntry : public ::google::protobuf::internal::MapEntry<PlayerMemH5ActivityDataResult_RetcodeMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<PlayerMemH5ActivityDataResult_RetcodeMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > SuperType;
    PlayerMemH5ActivityDataResult_RetcodeMapEntry();
    PlayerMemH5ActivityDataResult_RetcodeMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const PlayerMemH5ActivityDataResult_RetcodeMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_PlayerMemH5ActivityDataResult_RetcodeMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      PlayerMemH5ActivityDataResult_RetcodeMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > retcode_map_;
  private:
  ::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5ActivityData > h5_activity_data_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryPlayerMemDataByMuipReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.QueryPlayerMemDataByMuipReq) */ {
 public:
  QueryPlayerMemDataByMuipReq();
  virtual ~QueryPlayerMemDataByMuipReq();

  QueryPlayerMemDataByMuipReq(const QueryPlayerMemDataByMuipReq& from);

  inline QueryPlayerMemDataByMuipReq& operator=(const QueryPlayerMemDataByMuipReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryPlayerMemDataByMuipReq(QueryPlayerMemDataByMuipReq&& from) noexcept
    : QueryPlayerMemDataByMuipReq() {
    *this = ::std::move(from);
  }

  inline QueryPlayerMemDataByMuipReq& operator=(QueryPlayerMemDataByMuipReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPlayerMemDataByMuipReq& default_instance();

  static inline const QueryPlayerMemDataByMuipReq* internal_default_instance() {
    return reinterpret_cast<const QueryPlayerMemDataByMuipReq*>(
               &_QueryPlayerMemDataByMuipReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(QueryPlayerMemDataByMuipReq* other);
  friend void swap(QueryPlayerMemDataByMuipReq& a, QueryPlayerMemDataByMuipReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryPlayerMemDataByMuipReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryPlayerMemDataByMuipReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryPlayerMemDataByMuipReq& from);
  void MergeFrom(const QueryPlayerMemDataByMuipReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryPlayerMemDataByMuipReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 param_list = 2;
  int param_list_size() const;
  void clear_param_list();
  static const int kParamListFieldNumber = 2;
  ::google::protobuf::uint32 param_list(int index) const;
  void set_param_list(int index, ::google::protobuf::uint32 value);
  void add_param_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      param_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_param_list();

  // uint32 data_type = 1;
  void clear_data_type();
  static const int kDataTypeFieldNumber = 1;
  ::google::protobuf::uint32 data_type() const;
  void set_data_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.QueryPlayerMemDataByMuipReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > param_list_;
  mutable int _param_list_cached_byte_size_;
  ::google::protobuf::uint32 data_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryPlayerMemDataByMuipRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.QueryPlayerMemDataByMuipRsp) */ {
 public:
  QueryPlayerMemDataByMuipRsp();
  virtual ~QueryPlayerMemDataByMuipRsp();

  QueryPlayerMemDataByMuipRsp(const QueryPlayerMemDataByMuipRsp& from);

  inline QueryPlayerMemDataByMuipRsp& operator=(const QueryPlayerMemDataByMuipRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryPlayerMemDataByMuipRsp(QueryPlayerMemDataByMuipRsp&& from) noexcept
    : QueryPlayerMemDataByMuipRsp() {
    *this = ::std::move(from);
  }

  inline QueryPlayerMemDataByMuipRsp& operator=(QueryPlayerMemDataByMuipRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryPlayerMemDataByMuipRsp& default_instance();

  enum DetailCase {
    kBasicData = 2,
    kH5ActivityDataResult = 3,
    DETAIL_NOT_SET = 0,
  };

  static inline const QueryPlayerMemDataByMuipRsp* internal_default_instance() {
    return reinterpret_cast<const QueryPlayerMemDataByMuipRsp*>(
               &_QueryPlayerMemDataByMuipRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(QueryPlayerMemDataByMuipRsp* other);
  friend void swap(QueryPlayerMemDataByMuipRsp& a, QueryPlayerMemDataByMuipRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryPlayerMemDataByMuipRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryPlayerMemDataByMuipRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryPlayerMemDataByMuipRsp& from);
  void MergeFrom(const QueryPlayerMemDataByMuipRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryPlayerMemDataByMuipRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // .proto.PlayerMemBasicData basic_data = 2;
  bool has_basic_data() const;
  void clear_basic_data();
  static const int kBasicDataFieldNumber = 2;
  const ::proto::PlayerMemBasicData& basic_data() const;
  ::proto::PlayerMemBasicData* mutable_basic_data();
  ::proto::PlayerMemBasicData* release_basic_data();
  void set_allocated_basic_data(::proto::PlayerMemBasicData* basic_data);

  // .proto.PlayerMemH5ActivityDataResult h5_activity_data_result = 3;
  bool has_h5_activity_data_result() const;
  void clear_h5_activity_data_result();
  static const int kH5ActivityDataResultFieldNumber = 3;
  const ::proto::PlayerMemH5ActivityDataResult& h5_activity_data_result() const;
  ::proto::PlayerMemH5ActivityDataResult* mutable_h5_activity_data_result();
  ::proto::PlayerMemH5ActivityDataResult* release_h5_activity_data_result();
  void set_allocated_h5_activity_data_result(::proto::PlayerMemH5ActivityDataResult* h5_activity_data_result);

  DetailCase detail_case() const;
  // @@protoc_insertion_point(class_scope:proto.QueryPlayerMemDataByMuipRsp)
 private:
  void set_has_basic_data();
  void set_has_h5_activity_data_result();

  inline bool has_detail() const;
  void clear_detail();
  inline void clear_has_detail();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  union DetailUnion {
    DetailUnion() {}
    ::proto::PlayerMemBasicData* basic_data_;
    ::proto::PlayerMemH5ActivityDataResult* h5_activity_data_result_;
  } detail_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BindGmUidNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.BindGmUidNotify) */ {
 public:
  BindGmUidNotify();
  virtual ~BindGmUidNotify();

  BindGmUidNotify(const BindGmUidNotify& from);

  inline BindGmUidNotify& operator=(const BindGmUidNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BindGmUidNotify(BindGmUidNotify&& from) noexcept
    : BindGmUidNotify() {
    *this = ::std::move(from);
  }

  inline BindGmUidNotify& operator=(BindGmUidNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const BindGmUidNotify& default_instance();

  static inline const BindGmUidNotify* internal_default_instance() {
    return reinterpret_cast<const BindGmUidNotify*>(
               &_BindGmUidNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(BindGmUidNotify* other);
  friend void swap(BindGmUidNotify& a, BindGmUidNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BindGmUidNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  BindGmUidNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BindGmUidNotify& from);
  void MergeFrom(const BindGmUidNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BindGmUidNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gm_uid = 1;
  void clear_gm_uid();
  static const int kGmUidFieldNumber = 1;
  ::google::protobuf::uint32 gm_uid() const;
  void set_gm_uid(::google::protobuf::uint32 value);

  // uint32 player_uid = 2;
  void clear_player_uid();
  static const int kPlayerUidFieldNumber = 2;
  ::google::protobuf::uint32 player_uid() const;
  void set_player_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.BindGmUidNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gm_uid_;
  ::google::protobuf::uint32 player_uid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnbindGmUidNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UnbindGmUidNotify) */ {
 public:
  UnbindGmUidNotify();
  virtual ~UnbindGmUidNotify();

  UnbindGmUidNotify(const UnbindGmUidNotify& from);

  inline UnbindGmUidNotify& operator=(const UnbindGmUidNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UnbindGmUidNotify(UnbindGmUidNotify&& from) noexcept
    : UnbindGmUidNotify() {
    *this = ::std::move(from);
  }

  inline UnbindGmUidNotify& operator=(UnbindGmUidNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UnbindGmUidNotify& default_instance();

  static inline const UnbindGmUidNotify* internal_default_instance() {
    return reinterpret_cast<const UnbindGmUidNotify*>(
               &_UnbindGmUidNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(UnbindGmUidNotify* other);
  friend void swap(UnbindGmUidNotify& a, UnbindGmUidNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UnbindGmUidNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UnbindGmUidNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnbindGmUidNotify& from);
  void MergeFrom(const UnbindGmUidNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnbindGmUidNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 gm_uid = 1;
  void clear_gm_uid();
  static const int kGmUidFieldNumber = 1;
  ::google::protobuf::uint32 gm_uid() const;
  void set_gm_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.UnbindGmUidNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 gm_uid_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetBindGmUidReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetBindGmUidReq) */ {
 public:
  GetBindGmUidReq();
  virtual ~GetBindGmUidReq();

  GetBindGmUidReq(const GetBindGmUidReq& from);

  inline GetBindGmUidReq& operator=(const GetBindGmUidReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBindGmUidReq(GetBindGmUidReq&& from) noexcept
    : GetBindGmUidReq() {
    *this = ::std::move(from);
  }

  inline GetBindGmUidReq& operator=(GetBindGmUidReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBindGmUidReq& default_instance();

  static inline const GetBindGmUidReq* internal_default_instance() {
    return reinterpret_cast<const GetBindGmUidReq*>(
               &_GetBindGmUidReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(GetBindGmUidReq* other);
  friend void swap(GetBindGmUidReq& a, GetBindGmUidReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBindGmUidReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetBindGmUidReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetBindGmUidReq& from);
  void MergeFrom(const GetBindGmUidReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetBindGmUidReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.GetBindGmUidReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class GetBindGmUidRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.GetBindGmUidRsp) */ {
 public:
  GetBindGmUidRsp();
  virtual ~GetBindGmUidRsp();

  GetBindGmUidRsp(const GetBindGmUidRsp& from);

  inline GetBindGmUidRsp& operator=(const GetBindGmUidRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetBindGmUidRsp(GetBindGmUidRsp&& from) noexcept
    : GetBindGmUidRsp() {
    *this = ::std::move(from);
  }

  inline GetBindGmUidRsp& operator=(GetBindGmUidRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBindGmUidRsp& default_instance();

  static inline const GetBindGmUidRsp* internal_default_instance() {
    return reinterpret_cast<const GetBindGmUidRsp*>(
               &_GetBindGmUidRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(GetBindGmUidRsp* other);
  friend void swap(GetBindGmUidRsp& a, GetBindGmUidRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetBindGmUidRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetBindGmUidRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetBindGmUidRsp& from);
  void MergeFrom(const GetBindGmUidRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetBindGmUidRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint32, uint32> gm_uid_map = 2;
  int gm_uid_map_size() const;
  void clear_gm_uid_map();
  static const int kGmUidMapFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
      gm_uid_map() const;
  ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
      mutable_gm_uid_map();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.GetBindGmUidRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class GetBindGmUidRsp_GmUidMapEntry : public ::google::protobuf::internal::MapEntry<GetBindGmUidRsp_GmUidMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<GetBindGmUidRsp_GmUidMapEntry, 
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    GetBindGmUidRsp_GmUidMapEntry();
    GetBindGmUidRsp_GmUidMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const GetBindGmUidRsp_GmUidMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_GetBindGmUidRsp_GmUidMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      GetBindGmUidRsp_GmUidMapEntry,
      ::google::protobuf::uint32, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > gm_uid_map_;
  private:
  ::google::protobuf::int32 retcode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlatformAntiAddictNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlatformAntiAddictNotify) */ {
 public:
  PlatformAntiAddictNotify();
  virtual ~PlatformAntiAddictNotify();

  PlatformAntiAddictNotify(const PlatformAntiAddictNotify& from);

  inline PlatformAntiAddictNotify& operator=(const PlatformAntiAddictNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlatformAntiAddictNotify(PlatformAntiAddictNotify&& from) noexcept
    : PlatformAntiAddictNotify() {
    *this = ::std::move(from);
  }

  inline PlatformAntiAddictNotify& operator=(PlatformAntiAddictNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlatformAntiAddictNotify& default_instance();

  static inline const PlatformAntiAddictNotify* internal_default_instance() {
    return reinterpret_cast<const PlatformAntiAddictNotify*>(
               &_PlatformAntiAddictNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(PlatformAntiAddictNotify* other);
  friend void swap(PlatformAntiAddictNotify& a, PlatformAntiAddictNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlatformAntiAddictNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  PlatformAntiAddictNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlatformAntiAddictNotify& from);
  void MergeFrom(const PlatformAntiAddictNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlatformAntiAddictNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 3;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // string level = 4;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  const ::std::string& level() const;
  void set_level(const ::std::string& value);
  #if LANG_CXX11
  void set_level(::std::string&& value);
  #endif
  void set_level(const char* value);
  void set_level(const char* value, size_t size);
  ::std::string* mutable_level();
  ::std::string* release_level();
  void set_allocated_level(::std::string* level);

  // int32 msg_type = 2;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 2;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.PlatformAntiAddictNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr level_;
  ::google::protobuf::int32 msg_type_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLoginPerSecondReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLoginPerSecondReq) */ {
 public:
  PlayerLoginPerSecondReq();
  virtual ~PlayerLoginPerSecondReq();

  PlayerLoginPerSecondReq(const PlayerLoginPerSecondReq& from);

  inline PlayerLoginPerSecondReq& operator=(const PlayerLoginPerSecondReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLoginPerSecondReq(PlayerLoginPerSecondReq&& from) noexcept
    : PlayerLoginPerSecondReq() {
    *this = ::std::move(from);
  }

  inline PlayerLoginPerSecondReq& operator=(PlayerLoginPerSecondReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginPerSecondReq& default_instance();

  static inline const PlayerLoginPerSecondReq* internal_default_instance() {
    return reinterpret_cast<const PlayerLoginPerSecondReq*>(
               &_PlayerLoginPerSecondReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(PlayerLoginPerSecondReq* other);
  friend void swap(PlayerLoginPerSecondReq& a, PlayerLoginPerSecondReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLoginPerSecondReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLoginPerSecondReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLoginPerSecondReq& from);
  void MergeFrom(const PlayerLoginPerSecondReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLoginPerSecondReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.PlayerLoginPerSecondReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerLoginPerSecondRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerLoginPerSecondRsp) */ {
 public:
  PlayerLoginPerSecondRsp();
  virtual ~PlayerLoginPerSecondRsp();

  PlayerLoginPerSecondRsp(const PlayerLoginPerSecondRsp& from);

  inline PlayerLoginPerSecondRsp& operator=(const PlayerLoginPerSecondRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerLoginPerSecondRsp(PlayerLoginPerSecondRsp&& from) noexcept
    : PlayerLoginPerSecondRsp() {
    *this = ::std::move(from);
  }

  inline PlayerLoginPerSecondRsp& operator=(PlayerLoginPerSecondRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerLoginPerSecondRsp& default_instance();

  static inline const PlayerLoginPerSecondRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerLoginPerSecondRsp*>(
               &_PlayerLoginPerSecondRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(PlayerLoginPerSecondRsp* other);
  friend void swap(PlayerLoginPerSecondRsp& a, PlayerLoginPerSecondRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerLoginPerSecondRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerLoginPerSecondRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerLoginPerSecondRsp& from);
  void MergeFrom(const PlayerLoginPerSecondRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerLoginPerSecondRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 player_login_per_second = 2;
  void clear_player_login_per_second();
  static const int kPlayerLoginPerSecondFieldNumber = 2;
  ::google::protobuf::uint32 player_login_per_second() const;
  void set_player_login_per_second(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.PlayerLoginPerSecondRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 player_login_per_second_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FineGrainedPlayerNumReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FineGrainedPlayerNumReq) */ {
 public:
  FineGrainedPlayerNumReq();
  virtual ~FineGrainedPlayerNumReq();

  FineGrainedPlayerNumReq(const FineGrainedPlayerNumReq& from);

  inline FineGrainedPlayerNumReq& operator=(const FineGrainedPlayerNumReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FineGrainedPlayerNumReq(FineGrainedPlayerNumReq&& from) noexcept
    : FineGrainedPlayerNumReq() {
    *this = ::std::move(from);
  }

  inline FineGrainedPlayerNumReq& operator=(FineGrainedPlayerNumReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FineGrainedPlayerNumReq& default_instance();

  static inline const FineGrainedPlayerNumReq* internal_default_instance() {
    return reinterpret_cast<const FineGrainedPlayerNumReq*>(
               &_FineGrainedPlayerNumReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(FineGrainedPlayerNumReq* other);
  friend void swap(FineGrainedPlayerNumReq& a, FineGrainedPlayerNumReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FineGrainedPlayerNumReq* New() const PROTOBUF_FINAL { return New(NULL); }

  FineGrainedPlayerNumReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FineGrainedPlayerNumReq& from);
  void MergeFrom(const FineGrainedPlayerNumReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FineGrainedPlayerNumReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.FineGrainedPlayerNumReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class FineGrainedPlayerNumRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.FineGrainedPlayerNumRsp) */ {
 public:
  FineGrainedPlayerNumRsp();
  virtual ~FineGrainedPlayerNumRsp();

  FineGrainedPlayerNumRsp(const FineGrainedPlayerNumRsp& from);

  inline FineGrainedPlayerNumRsp& operator=(const FineGrainedPlayerNumRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FineGrainedPlayerNumRsp(FineGrainedPlayerNumRsp&& from) noexcept
    : FineGrainedPlayerNumRsp() {
    *this = ::std::move(from);
  }

  inline FineGrainedPlayerNumRsp& operator=(FineGrainedPlayerNumRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FineGrainedPlayerNumRsp& default_instance();

  static inline const FineGrainedPlayerNumRsp* internal_default_instance() {
    return reinterpret_cast<const FineGrainedPlayerNumRsp*>(
               &_FineGrainedPlayerNumRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(FineGrainedPlayerNumRsp* other);
  friend void swap(FineGrainedPlayerNumRsp& a, FineGrainedPlayerNumRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FineGrainedPlayerNumRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  FineGrainedPlayerNumRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FineGrainedPlayerNumRsp& from);
  void MergeFrom(const FineGrainedPlayerNumRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FineGrainedPlayerNumRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, uint32> fine_grained_player_num_map = 3;
  int fine_grained_player_num_map_size() const;
  void clear_fine_grained_player_num_map();
  static const int kFineGrainedPlayerNumMapFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
      fine_grained_player_num_map() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
      mutable_fine_grained_player_num_map();

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 online_player_num = 2;
  void clear_online_player_num();
  static const int kOnlinePlayerNumFieldNumber = 2;
  ::google::protobuf::uint32 online_player_num() const;
  void set_online_player_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.FineGrainedPlayerNumRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry : public ::google::protobuf::internal::MapEntry<FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry, 
      ::std::string, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry, 
      ::std::string, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > SuperType;
    FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry();
    FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      FineGrainedPlayerNumRsp_FineGrainedPlayerNumMapEntry,
      ::std::string, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > fine_grained_player_num_map_;
  private:
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 online_player_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckGameCrcVersionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckGameCrcVersionReq) */ {
 public:
  CheckGameCrcVersionReq();
  virtual ~CheckGameCrcVersionReq();

  CheckGameCrcVersionReq(const CheckGameCrcVersionReq& from);

  inline CheckGameCrcVersionReq& operator=(const CheckGameCrcVersionReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckGameCrcVersionReq(CheckGameCrcVersionReq&& from) noexcept
    : CheckGameCrcVersionReq() {
    *this = ::std::move(from);
  }

  inline CheckGameCrcVersionReq& operator=(CheckGameCrcVersionReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckGameCrcVersionReq& default_instance();

  static inline const CheckGameCrcVersionReq* internal_default_instance() {
    return reinterpret_cast<const CheckGameCrcVersionReq*>(
               &_CheckGameCrcVersionReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(CheckGameCrcVersionReq* other);
  friend void swap(CheckGameCrcVersionReq& a, CheckGameCrcVersionReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckGameCrcVersionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckGameCrcVersionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckGameCrcVersionReq& from);
  void MergeFrom(const CheckGameCrcVersionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckGameCrcVersionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string client_version_str = 2;
  void clear_client_version_str();
  static const int kClientVersionStrFieldNumber = 2;
  const ::std::string& client_version_str() const;
  void set_client_version_str(const ::std::string& value);
  #if LANG_CXX11
  void set_client_version_str(::std::string&& value);
  #endif
  void set_client_version_str(const char* value);
  void set_client_version_str(const char* value, size_t size);
  ::std::string* mutable_client_version_str();
  ::std::string* release_client_version_str();
  void set_allocated_client_version_str(::std::string* client_version_str);

  // uint32 platform = 1;
  void clear_platform();
  static const int kPlatformFieldNumber = 1;
  ::google::protobuf::uint32 platform() const;
  void set_platform(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CheckGameCrcVersionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr client_version_str_;
  ::google::protobuf::uint32 platform_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckGameCrcVersionRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CheckGameCrcVersionRsp) */ {
 public:
  CheckGameCrcVersionRsp();
  virtual ~CheckGameCrcVersionRsp();

  CheckGameCrcVersionRsp(const CheckGameCrcVersionRsp& from);

  inline CheckGameCrcVersionRsp& operator=(const CheckGameCrcVersionRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CheckGameCrcVersionRsp(CheckGameCrcVersionRsp&& from) noexcept
    : CheckGameCrcVersionRsp() {
    *this = ::std::move(from);
  }

  inline CheckGameCrcVersionRsp& operator=(CheckGameCrcVersionRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckGameCrcVersionRsp& default_instance();

  static inline const CheckGameCrcVersionRsp* internal_default_instance() {
    return reinterpret_cast<const CheckGameCrcVersionRsp*>(
               &_CheckGameCrcVersionRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(CheckGameCrcVersionRsp* other);
  friend void swap(CheckGameCrcVersionRsp& a, CheckGameCrcVersionRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CheckGameCrcVersionRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckGameCrcVersionRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckGameCrcVersionRsp& from);
  void MergeFrom(const CheckGameCrcVersionRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckGameCrcVersionRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 wrong_name_list = 6;
  int wrong_name_list_size() const;
  void clear_wrong_name_list();
  static const int kWrongNameListFieldNumber = 6;
  ::google::protobuf::uint32 wrong_name_list(int index) const;
  void set_wrong_name_list(int index, ::google::protobuf::uint32 value);
  void add_wrong_name_list(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wrong_name_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wrong_name_list();

  // string client_version_str = 4;
  void clear_client_version_str();
  static const int kClientVersionStrFieldNumber = 4;
  const ::std::string& client_version_str() const;
  void set_client_version_str(const ::std::string& value);
  #if LANG_CXX11
  void set_client_version_str(::std::string&& value);
  #endif
  void set_client_version_str(const char* value);
  void set_client_version_str(const char* value, size_t size);
  ::std::string* mutable_client_version_str();
  ::std::string* release_client_version_str();
  void set_allocated_client_version_str(::std::string* client_version_str);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 total_game = 2;
  void clear_total_game();
  static const int kTotalGameFieldNumber = 2;
  ::google::protobuf::uint32 total_game() const;
  void set_total_game(::google::protobuf::uint32 value);

  // uint32 platform = 3;
  void clear_platform();
  static const int kPlatformFieldNumber = 3;
  ::google::protobuf::uint32 platform() const;
  void set_platform(::google::protobuf::uint32 value);

  // uint32 wrong_num = 5;
  void clear_wrong_num();
  static const int kWrongNumFieldNumber = 5;
  ::google::protobuf::uint32 wrong_num() const;
  void set_wrong_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CheckGameCrcVersionRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wrong_name_list_;
  mutable int _wrong_name_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr client_version_str_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 total_game_;
  ::google::protobuf::uint32 platform_;
  ::google::protobuf::uint32 wrong_num_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateRedPointByMuipNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.UpdateRedPointByMuipNotify) */ {
 public:
  UpdateRedPointByMuipNotify();
  virtual ~UpdateRedPointByMuipNotify();

  UpdateRedPointByMuipNotify(const UpdateRedPointByMuipNotify& from);

  inline UpdateRedPointByMuipNotify& operator=(const UpdateRedPointByMuipNotify& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateRedPointByMuipNotify(UpdateRedPointByMuipNotify&& from) noexcept
    : UpdateRedPointByMuipNotify() {
    *this = ::std::move(from);
  }

  inline UpdateRedPointByMuipNotify& operator=(UpdateRedPointByMuipNotify&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateRedPointByMuipNotify& default_instance();

  static inline const UpdateRedPointByMuipNotify* internal_default_instance() {
    return reinterpret_cast<const UpdateRedPointByMuipNotify*>(
               &_UpdateRedPointByMuipNotify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(UpdateRedPointByMuipNotify* other);
  friend void swap(UpdateRedPointByMuipNotify& a, UpdateRedPointByMuipNotify& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateRedPointByMuipNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateRedPointByMuipNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateRedPointByMuipNotify& from);
  void MergeFrom(const UpdateRedPointByMuipNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateRedPointByMuipNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.RedPointData red_point_list = 1;
  int red_point_list_size() const;
  void clear_red_point_list();
  static const int kRedPointListFieldNumber = 1;
  const ::proto::RedPointData& red_point_list(int index) const;
  ::proto::RedPointData* mutable_red_point_list(int index);
  ::proto::RedPointData* add_red_point_list();
  ::google::protobuf::RepeatedPtrField< ::proto::RedPointData >*
      mutable_red_point_list();
  const ::google::protobuf::RepeatedPtrField< ::proto::RedPointData >&
      red_point_list() const;

  // @@protoc_insertion_point(class_scope:proto.UpdateRedPointByMuipNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proto::RedPointData > red_point_list_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendConcertProductReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SendConcertProductReq) */ {
 public:
  SendConcertProductReq();
  virtual ~SendConcertProductReq();

  SendConcertProductReq(const SendConcertProductReq& from);

  inline SendConcertProductReq& operator=(const SendConcertProductReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendConcertProductReq(SendConcertProductReq&& from) noexcept
    : SendConcertProductReq() {
    *this = ::std::move(from);
  }

  inline SendConcertProductReq& operator=(SendConcertProductReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendConcertProductReq& default_instance();

  static inline const SendConcertProductReq* internal_default_instance() {
    return reinterpret_cast<const SendConcertProductReq*>(
               &_SendConcertProductReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(SendConcertProductReq* other);
  friend void swap(SendConcertProductReq& a, SendConcertProductReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendConcertProductReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SendConcertProductReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendConcertProductReq& from);
  void MergeFrom(const SendConcertProductReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendConcertProductReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ticket = 1;
  void clear_ticket();
  static const int kTicketFieldNumber = 1;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SendConcertProductReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::google::protobuf::uint32 config_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendConcertProductRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.SendConcertProductRsp) */ {
 public:
  SendConcertProductRsp();
  virtual ~SendConcertProductRsp();

  SendConcertProductRsp(const SendConcertProductRsp& from);

  inline SendConcertProductRsp& operator=(const SendConcertProductRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendConcertProductRsp(SendConcertProductRsp&& from) noexcept
    : SendConcertProductRsp() {
    *this = ::std::move(from);
  }

  inline SendConcertProductRsp& operator=(SendConcertProductRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SendConcertProductRsp& default_instance();

  static inline const SendConcertProductRsp* internal_default_instance() {
    return reinterpret_cast<const SendConcertProductRsp*>(
               &_SendConcertProductRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(SendConcertProductRsp* other);
  friend void swap(SendConcertProductRsp& a, SendConcertProductRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendConcertProductRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SendConcertProductRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendConcertProductRsp& from);
  void MergeFrom(const SendConcertProductRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendConcertProductRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ticket = 2;
  void clear_ticket();
  static const int kTicketFieldNumber = 2;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const char* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 config_id = 3;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 3;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.SendConcertProductRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 config_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryConcertProductInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.QueryConcertProductInfoReq) */ {
 public:
  QueryConcertProductInfoReq();
  virtual ~QueryConcertProductInfoReq();

  QueryConcertProductInfoReq(const QueryConcertProductInfoReq& from);

  inline QueryConcertProductInfoReq& operator=(const QueryConcertProductInfoReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryConcertProductInfoReq(QueryConcertProductInfoReq&& from) noexcept
    : QueryConcertProductInfoReq() {
    *this = ::std::move(from);
  }

  inline QueryConcertProductInfoReq& operator=(QueryConcertProductInfoReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryConcertProductInfoReq& default_instance();

  static inline const QueryConcertProductInfoReq* internal_default_instance() {
    return reinterpret_cast<const QueryConcertProductInfoReq*>(
               &_QueryConcertProductInfoReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(QueryConcertProductInfoReq* other);
  friend void swap(QueryConcertProductInfoReq& a, QueryConcertProductInfoReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryConcertProductInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryConcertProductInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryConcertProductInfoReq& from);
  void MergeFrom(const QueryConcertProductInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryConcertProductInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 config_id = 1;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 1;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.QueryConcertProductInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 config_id_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryConcertProductInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.QueryConcertProductInfoRsp) */ {
 public:
  QueryConcertProductInfoRsp();
  virtual ~QueryConcertProductInfoRsp();

  QueryConcertProductInfoRsp(const QueryConcertProductInfoRsp& from);

  inline QueryConcertProductInfoRsp& operator=(const QueryConcertProductInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  QueryConcertProductInfoRsp(QueryConcertProductInfoRsp&& from) noexcept
    : QueryConcertProductInfoRsp() {
    *this = ::std::move(from);
  }

  inline QueryConcertProductInfoRsp& operator=(QueryConcertProductInfoRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryConcertProductInfoRsp& default_instance();

  static inline const QueryConcertProductInfoRsp* internal_default_instance() {
    return reinterpret_cast<const QueryConcertProductInfoRsp*>(
               &_QueryConcertProductInfoRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(QueryConcertProductInfoRsp* other);
  friend void swap(QueryConcertProductInfoRsp& a, QueryConcertProductInfoRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline QueryConcertProductInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryConcertProductInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryConcertProductInfoRsp& from);
  void MergeFrom(const QueryConcertProductInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryConcertProductInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // uint32 config_id = 2;
  void clear_config_id();
  static const int kConfigIdFieldNumber = 2;
  ::google::protobuf::uint32 config_id() const;
  void set_config_id(::google::protobuf::uint32 value);

  // uint32 obtain_count = 3;
  void clear_obtain_count();
  static const int kObtainCountFieldNumber = 3;
  ::google::protobuf::uint32 obtain_count() const;
  void set_obtain_count(::google::protobuf::uint32 value);

  // uint32 obtain_limit = 4;
  void clear_obtain_limit();
  static const int kObtainLimitFieldNumber = 4;
  ::google::protobuf::uint32 obtain_limit() const;
  void set_obtain_limit(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.QueryConcertProductInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  ::google::protobuf::uint32 config_id_;
  ::google::protobuf::uint32 obtain_count_;
  ::google::protobuf::uint32 obtain_limit_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerMpModeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerMpModeReq) */ {
 public:
  PlayerMpModeReq();
  virtual ~PlayerMpModeReq();

  PlayerMpModeReq(const PlayerMpModeReq& from);

  inline PlayerMpModeReq& operator=(const PlayerMpModeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerMpModeReq(PlayerMpModeReq&& from) noexcept
    : PlayerMpModeReq() {
    *this = ::std::move(from);
  }

  inline PlayerMpModeReq& operator=(PlayerMpModeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMpModeReq& default_instance();

  static inline const PlayerMpModeReq* internal_default_instance() {
    return reinterpret_cast<const PlayerMpModeReq*>(
               &_PlayerMpModeReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(PlayerMpModeReq* other);
  friend void swap(PlayerMpModeReq& a, PlayerMpModeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerMpModeReq* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerMpModeReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerMpModeReq& from);
  void MergeFrom(const PlayerMpModeReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerMpModeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.PlayerMpModeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerMpModeRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PlayerMpModeRsp) */ {
 public:
  PlayerMpModeRsp();
  virtual ~PlayerMpModeRsp();

  PlayerMpModeRsp(const PlayerMpModeRsp& from);

  inline PlayerMpModeRsp& operator=(const PlayerMpModeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlayerMpModeRsp(PlayerMpModeRsp&& from) noexcept
    : PlayerMpModeRsp() {
    *this = ::std::move(from);
  }

  inline PlayerMpModeRsp& operator=(PlayerMpModeRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerMpModeRsp& default_instance();

  static inline const PlayerMpModeRsp* internal_default_instance() {
    return reinterpret_cast<const PlayerMpModeRsp*>(
               &_PlayerMpModeRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(PlayerMpModeRsp* other);
  friend void swap(PlayerMpModeRsp& a, PlayerMpModeRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlayerMpModeRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerMpModeRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerMpModeRsp& from);
  void MergeFrom(const PlayerMpModeRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerMpModeRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 retcode = 1;
  void clear_retcode();
  static const int kRetcodeFieldNumber = 1;
  ::google::protobuf::int32 retcode() const;
  void set_retcode(::google::protobuf::int32 value);

  // bool is_mp_mode = 2;
  void clear_is_mp_mode();
  static const int kIsMpModeFieldNumber = 2;
  bool is_mp_mode() const;
  void set_is_mp_mode(bool value);

  // @@protoc_insertion_point(class_scope:proto.PlayerMpModeRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 retcode_;
  bool is_mp_mode_;
  mutable int _cached_size_;
  friend struct protobuf_server_5fonly_2fcmd_5fmuip_2eserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OnlinePlayerNumReq

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OnlinePlayerNumRsp

// int32 retcode = 1;
inline void OnlinePlayerNumRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 OnlinePlayerNumRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerNumRsp.retcode)
  return retcode_;
}
inline void OnlinePlayerNumRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerNumRsp.retcode)
}

// uint32 online_player_num = 2;
inline void OnlinePlayerNumRsp::clear_online_player_num() {
  online_player_num_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerNumRsp::online_player_num() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerNumRsp.online_player_num)
  return online_player_num_;
}
inline void OnlinePlayerNumRsp::set_online_player_num(::google::protobuf::uint32 value) {
  
  online_player_num_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerNumRsp.online_player_num)
}

// map<uint32, uint32> gameserver_player_num_map = 3;
inline int OnlinePlayerNumRsp::gameserver_player_num_map_size() const {
  return gameserver_player_num_map_.size();
}
inline void OnlinePlayerNumRsp::clear_gameserver_player_num_map() {
  gameserver_player_num_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
OnlinePlayerNumRsp::gameserver_player_num_map() const {
  // @@protoc_insertion_point(field_map:proto.OnlinePlayerNumRsp.gameserver_player_num_map)
  return gameserver_player_num_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
OnlinePlayerNumRsp::mutable_gameserver_player_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.OnlinePlayerNumRsp.gameserver_player_num_map)
  return gameserver_player_num_map_.MutableMap();
}

// uint32 online_player_num_except_sub_account = 4;
inline void OnlinePlayerNumRsp::clear_online_player_num_except_sub_account() {
  online_player_num_except_sub_account_ = 0u;
}
inline ::google::protobuf::uint32 OnlinePlayerNumRsp::online_player_num_except_sub_account() const {
  // @@protoc_insertion_point(field_get:proto.OnlinePlayerNumRsp.online_player_num_except_sub_account)
  return online_player_num_except_sub_account_;
}
inline void OnlinePlayerNumRsp::set_online_player_num_except_sub_account(::google::protobuf::uint32 value) {
  
  online_player_num_except_sub_account_ = value;
  // @@protoc_insertion_point(field_set:proto.OnlinePlayerNumRsp.online_player_num_except_sub_account)
}

// -------------------------------------------------------------------

// KickoutPlayerNotify

// uint32 reason = 1;
inline void KickoutPlayerNotify::clear_reason() {
  reason_ = 0u;
}
inline ::google::protobuf::uint32 KickoutPlayerNotify::reason() const {
  // @@protoc_insertion_point(field_get:proto.KickoutPlayerNotify.reason)
  return reason_;
}
inline void KickoutPlayerNotify::set_reason(::google::protobuf::uint32 value) {
  
  reason_ = value;
  // @@protoc_insertion_point(field_set:proto.KickoutPlayerNotify.reason)
}

// -------------------------------------------------------------------

// CheckOnlinePlayerReq

// uint32 gameserver_id = 1;
inline void CheckOnlinePlayerReq::clear_gameserver_id() {
  gameserver_id_ = 0u;
}
inline ::google::protobuf::uint32 CheckOnlinePlayerReq::gameserver_id() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerReq.gameserver_id)
  return gameserver_id_;
}
inline void CheckOnlinePlayerReq::set_gameserver_id(::google::protobuf::uint32 value) {
  
  gameserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerReq.gameserver_id)
}

// uint32 ns_gameserver_id = 2;
inline void CheckOnlinePlayerReq::clear_ns_gameserver_id() {
  ns_gameserver_id_ = 0u;
}
inline ::google::protobuf::uint32 CheckOnlinePlayerReq::ns_gameserver_id() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerReq.ns_gameserver_id)
  return ns_gameserver_id_;
}
inline void CheckOnlinePlayerReq::set_ns_gameserver_id(::google::protobuf::uint32 value) {
  
  ns_gameserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerReq.ns_gameserver_id)
}

// -------------------------------------------------------------------

// CheckOnlinePlayerRsp_NodeStatus

// uint32 gameserver_id = 1;
inline void CheckOnlinePlayerRsp_NodeStatus::clear_gameserver_id() {
  gameserver_id_ = 0u;
}
inline ::google::protobuf::uint32 CheckOnlinePlayerRsp_NodeStatus::gameserver_id() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.NodeStatus.gameserver_id)
  return gameserver_id_;
}
inline void CheckOnlinePlayerRsp_NodeStatus::set_gameserver_id(::google::protobuf::uint32 value) {
  
  gameserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.NodeStatus.gameserver_id)
}

// uint32 nodeserver_id = 2;
inline void CheckOnlinePlayerRsp_NodeStatus::clear_nodeserver_id() {
  nodeserver_id_ = 0u;
}
inline ::google::protobuf::uint32 CheckOnlinePlayerRsp_NodeStatus::nodeserver_id() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.NodeStatus.nodeserver_id)
  return nodeserver_id_;
}
inline void CheckOnlinePlayerRsp_NodeStatus::set_nodeserver_id(::google::protobuf::uint32 value) {
  
  nodeserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.NodeStatus.nodeserver_id)
}

// -------------------------------------------------------------------

// CheckOnlinePlayerRsp_GameStatus

// uint32 gameserver_id = 1;
inline void CheckOnlinePlayerRsp_GameStatus::clear_gameserver_id() {
  gameserver_id_ = 0u;
}
inline ::google::protobuf::uint32 CheckOnlinePlayerRsp_GameStatus::gameserver_id() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.GameStatus.gameserver_id)
  return gameserver_id_;
}
inline void CheckOnlinePlayerRsp_GameStatus::set_gameserver_id(::google::protobuf::uint32 value) {
  
  gameserver_id_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.GameStatus.gameserver_id)
}

// uint32 login_time = 2;
inline void CheckOnlinePlayerRsp_GameStatus::clear_login_time() {
  login_time_ = 0u;
}
inline ::google::protobuf::uint32 CheckOnlinePlayerRsp_GameStatus::login_time() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.GameStatus.login_time)
  return login_time_;
}
inline void CheckOnlinePlayerRsp_GameStatus::set_login_time(::google::protobuf::uint32 value) {
  
  login_time_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.GameStatus.login_time)
}

// uint64 login_rand = 3;
inline void CheckOnlinePlayerRsp_GameStatus::clear_login_rand() {
  login_rand_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CheckOnlinePlayerRsp_GameStatus::login_rand() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.GameStatus.login_rand)
  return login_rand_;
}
inline void CheckOnlinePlayerRsp_GameStatus::set_login_rand(::google::protobuf::uint64 value) {
  
  login_rand_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.GameStatus.login_rand)
}

// bool is_wait_save = 4;
inline void CheckOnlinePlayerRsp_GameStatus::clear_is_wait_save() {
  is_wait_save_ = false;
}
inline bool CheckOnlinePlayerRsp_GameStatus::is_wait_save() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.GameStatus.is_wait_save)
  return is_wait_save_;
}
inline void CheckOnlinePlayerRsp_GameStatus::set_is_wait_save(bool value) {
  
  is_wait_save_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.GameStatus.is_wait_save)
}

// -------------------------------------------------------------------

// CheckOnlinePlayerRsp

// int32 retcode = 1;
inline void CheckOnlinePlayerRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 CheckOnlinePlayerRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.retcode)
  return retcode_;
}
inline void CheckOnlinePlayerRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckOnlinePlayerRsp.retcode)
}

// .proto.CheckOnlinePlayerRsp.NodeStatus node_status = 2;
inline bool CheckOnlinePlayerRsp::has_node_status() const {
  return this != internal_default_instance() && node_status_ != NULL;
}
inline void CheckOnlinePlayerRsp::clear_node_status() {
  if (GetArenaNoVirtual() == NULL && node_status_ != NULL) delete node_status_;
  node_status_ = NULL;
}
inline const ::proto::CheckOnlinePlayerRsp_NodeStatus& CheckOnlinePlayerRsp::node_status() const {
  const ::proto::CheckOnlinePlayerRsp_NodeStatus* p = node_status_;
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.node_status)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CheckOnlinePlayerRsp_NodeStatus*>(
      &::proto::_CheckOnlinePlayerRsp_NodeStatus_default_instance_);
}
inline ::proto::CheckOnlinePlayerRsp_NodeStatus* CheckOnlinePlayerRsp::mutable_node_status() {
  
  if (node_status_ == NULL) {
    node_status_ = new ::proto::CheckOnlinePlayerRsp_NodeStatus;
  }
  // @@protoc_insertion_point(field_mutable:proto.CheckOnlinePlayerRsp.node_status)
  return node_status_;
}
inline ::proto::CheckOnlinePlayerRsp_NodeStatus* CheckOnlinePlayerRsp::release_node_status() {
  // @@protoc_insertion_point(field_release:proto.CheckOnlinePlayerRsp.node_status)
  
  ::proto::CheckOnlinePlayerRsp_NodeStatus* temp = node_status_;
  node_status_ = NULL;
  return temp;
}
inline void CheckOnlinePlayerRsp::set_allocated_node_status(::proto::CheckOnlinePlayerRsp_NodeStatus* node_status) {
  delete node_status_;
  node_status_ = node_status;
  if (node_status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CheckOnlinePlayerRsp.node_status)
}

// .proto.CheckOnlinePlayerRsp.GameStatus game_status = 3;
inline bool CheckOnlinePlayerRsp::has_game_status() const {
  return this != internal_default_instance() && game_status_ != NULL;
}
inline void CheckOnlinePlayerRsp::clear_game_status() {
  if (GetArenaNoVirtual() == NULL && game_status_ != NULL) delete game_status_;
  game_status_ = NULL;
}
inline const ::proto::CheckOnlinePlayerRsp_GameStatus& CheckOnlinePlayerRsp::game_status() const {
  const ::proto::CheckOnlinePlayerRsp_GameStatus* p = game_status_;
  // @@protoc_insertion_point(field_get:proto.CheckOnlinePlayerRsp.game_status)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::CheckOnlinePlayerRsp_GameStatus*>(
      &::proto::_CheckOnlinePlayerRsp_GameStatus_default_instance_);
}
inline ::proto::CheckOnlinePlayerRsp_GameStatus* CheckOnlinePlayerRsp::mutable_game_status() {
  
  if (game_status_ == NULL) {
    game_status_ = new ::proto::CheckOnlinePlayerRsp_GameStatus;
  }
  // @@protoc_insertion_point(field_mutable:proto.CheckOnlinePlayerRsp.game_status)
  return game_status_;
}
inline ::proto::CheckOnlinePlayerRsp_GameStatus* CheckOnlinePlayerRsp::release_game_status() {
  // @@protoc_insertion_point(field_release:proto.CheckOnlinePlayerRsp.game_status)
  
  ::proto::CheckOnlinePlayerRsp_GameStatus* temp = game_status_;
  game_status_ = NULL;
  return temp;
}
inline void CheckOnlinePlayerRsp::set_allocated_game_status(::proto::CheckOnlinePlayerRsp_GameStatus* game_status) {
  delete game_status_;
  game_status_ = game_status;
  if (game_status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CheckOnlinePlayerRsp.game_status)
}

// -------------------------------------------------------------------

// PlayerCombatForceReq

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerCombatForceRsp

// int32 retcode = 1;
inline void PlayerCombatForceRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerCombatForceRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCombatForceRsp.retcode)
  return retcode_;
}
inline void PlayerCombatForceRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCombatForceRsp.retcode)
}

// float player_combat_force = 2;
inline void PlayerCombatForceRsp::clear_player_combat_force() {
  player_combat_force_ = 0;
}
inline float PlayerCombatForceRsp::player_combat_force() const {
  // @@protoc_insertion_point(field_get:proto.PlayerCombatForceRsp.player_combat_force)
  return player_combat_force_;
}
inline void PlayerCombatForceRsp::set_player_combat_force(float value) {
  
  player_combat_force_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerCombatForceRsp.player_combat_force)
}

// map<uint32, float> player_combat_force_map = 3;
inline int PlayerCombatForceRsp::player_combat_force_map_size() const {
  return player_combat_force_map_.size();
}
inline void PlayerCombatForceRsp::clear_player_combat_force_map() {
  player_combat_force_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, float >&
PlayerCombatForceRsp::player_combat_force_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerCombatForceRsp.player_combat_force_map)
  return player_combat_force_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, float >*
PlayerCombatForceRsp::mutable_player_combat_force_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerCombatForceRsp.player_combat_force_map)
  return player_combat_force_map_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CheckGameVersionReq

// uint32 server_version = 1;
inline void CheckGameVersionReq::clear_server_version() {
  server_version_ = 0u;
}
inline ::google::protobuf::uint32 CheckGameVersionReq::server_version() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionReq.server_version)
  return server_version_;
}
inline void CheckGameVersionReq::set_server_version(::google::protobuf::uint32 value) {
  
  server_version_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameVersionReq.server_version)
}

// uint32 client_version = 2;
inline void CheckGameVersionReq::clear_client_version() {
  client_version_ = 0u;
}
inline ::google::protobuf::uint32 CheckGameVersionReq::client_version() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionReq.client_version)
  return client_version_;
}
inline void CheckGameVersionReq::set_client_version(::google::protobuf::uint32 value) {
  
  client_version_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameVersionReq.client_version)
}

// uint32 client_silence_version = 3;
inline void CheckGameVersionReq::clear_client_silence_version() {
  client_silence_version_ = 0u;
}
inline ::google::protobuf::uint32 CheckGameVersionReq::client_silence_version() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionReq.client_silence_version)
  return client_silence_version_;
}
inline void CheckGameVersionReq::set_client_silence_version(::google::protobuf::uint32 value) {
  
  client_silence_version_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameVersionReq.client_silence_version)
}

// map<uint32, uint32> res_version_map = 4;
inline int CheckGameVersionReq::res_version_map_size() const {
  return res_version_map_.size();
}
inline void CheckGameVersionReq::clear_res_version_map() {
  res_version_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
CheckGameVersionReq::res_version_map() const {
  // @@protoc_insertion_point(field_map:proto.CheckGameVersionReq.res_version_map)
  return res_version_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
CheckGameVersionReq::mutable_res_version_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.CheckGameVersionReq.res_version_map)
  return res_version_map_.MutableMap();
}

// map<uint32, uint32> next_res_version_map = 5;
inline int CheckGameVersionReq::next_res_version_map_size() const {
  return next_res_version_map_.size();
}
inline void CheckGameVersionReq::clear_next_res_version_map() {
  next_res_version_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
CheckGameVersionReq::next_res_version_map() const {
  // @@protoc_insertion_point(field_map:proto.CheckGameVersionReq.next_res_version_map)
  return next_res_version_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
CheckGameVersionReq::mutable_next_res_version_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.CheckGameVersionReq.next_res_version_map)
  return next_res_version_map_.MutableMap();
}

// -------------------------------------------------------------------

// GameVersionResult

// uint32 version = 1;
inline void GameVersionResult::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 GameVersionResult::version() const {
  // @@protoc_insertion_point(field_get:proto.GameVersionResult.version)
  return version_;
}
inline void GameVersionResult::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.GameVersionResult.version)
}

// uint32 wrong_num = 2;
inline void GameVersionResult::clear_wrong_num() {
  wrong_num_ = 0u;
}
inline ::google::protobuf::uint32 GameVersionResult::wrong_num() const {
  // @@protoc_insertion_point(field_get:proto.GameVersionResult.wrong_num)
  return wrong_num_;
}
inline void GameVersionResult::set_wrong_num(::google::protobuf::uint32 value) {
  
  wrong_num_ = value;
  // @@protoc_insertion_point(field_set:proto.GameVersionResult.wrong_num)
}

// repeated uint32 wrong_name_list = 3;
inline int GameVersionResult::wrong_name_list_size() const {
  return wrong_name_list_.size();
}
inline void GameVersionResult::clear_wrong_name_list() {
  wrong_name_list_.Clear();
}
inline ::google::protobuf::uint32 GameVersionResult::wrong_name_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.GameVersionResult.wrong_name_list)
  return wrong_name_list_.Get(index);
}
inline void GameVersionResult::set_wrong_name_list(int index, ::google::protobuf::uint32 value) {
  wrong_name_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.GameVersionResult.wrong_name_list)
}
inline void GameVersionResult::add_wrong_name_list(::google::protobuf::uint32 value) {
  wrong_name_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.GameVersionResult.wrong_name_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GameVersionResult::wrong_name_list() const {
  // @@protoc_insertion_point(field_list:proto.GameVersionResult.wrong_name_list)
  return wrong_name_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GameVersionResult::mutable_wrong_name_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.GameVersionResult.wrong_name_list)
  return &wrong_name_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CheckGameVersionRsp

// int32 retcode = 1;
inline void CheckGameVersionRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 CheckGameVersionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionRsp.retcode)
  return retcode_;
}
inline void CheckGameVersionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameVersionRsp.retcode)
}

// uint32 total_game = 2;
inline void CheckGameVersionRsp::clear_total_game() {
  total_game_ = 0u;
}
inline ::google::protobuf::uint32 CheckGameVersionRsp::total_game() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionRsp.total_game)
  return total_game_;
}
inline void CheckGameVersionRsp::set_total_game(::google::protobuf::uint32 value) {
  
  total_game_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameVersionRsp.total_game)
}

// .proto.GameVersionResult server_version_result = 3;
inline bool CheckGameVersionRsp::has_server_version_result() const {
  return this != internal_default_instance() && server_version_result_ != NULL;
}
inline void CheckGameVersionRsp::clear_server_version_result() {
  if (GetArenaNoVirtual() == NULL && server_version_result_ != NULL) delete server_version_result_;
  server_version_result_ = NULL;
}
inline const ::proto::GameVersionResult& CheckGameVersionRsp::server_version_result() const {
  const ::proto::GameVersionResult* p = server_version_result_;
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionRsp.server_version_result)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GameVersionResult*>(
      &::proto::_GameVersionResult_default_instance_);
}
inline ::proto::GameVersionResult* CheckGameVersionRsp::mutable_server_version_result() {
  
  if (server_version_result_ == NULL) {
    server_version_result_ = new ::proto::GameVersionResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.CheckGameVersionRsp.server_version_result)
  return server_version_result_;
}
inline ::proto::GameVersionResult* CheckGameVersionRsp::release_server_version_result() {
  // @@protoc_insertion_point(field_release:proto.CheckGameVersionRsp.server_version_result)
  
  ::proto::GameVersionResult* temp = server_version_result_;
  server_version_result_ = NULL;
  return temp;
}
inline void CheckGameVersionRsp::set_allocated_server_version_result(::proto::GameVersionResult* server_version_result) {
  delete server_version_result_;
  server_version_result_ = server_version_result;
  if (server_version_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CheckGameVersionRsp.server_version_result)
}

// .proto.GameVersionResult client_version_result = 4;
inline bool CheckGameVersionRsp::has_client_version_result() const {
  return this != internal_default_instance() && client_version_result_ != NULL;
}
inline void CheckGameVersionRsp::clear_client_version_result() {
  if (GetArenaNoVirtual() == NULL && client_version_result_ != NULL) delete client_version_result_;
  client_version_result_ = NULL;
}
inline const ::proto::GameVersionResult& CheckGameVersionRsp::client_version_result() const {
  const ::proto::GameVersionResult* p = client_version_result_;
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionRsp.client_version_result)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GameVersionResult*>(
      &::proto::_GameVersionResult_default_instance_);
}
inline ::proto::GameVersionResult* CheckGameVersionRsp::mutable_client_version_result() {
  
  if (client_version_result_ == NULL) {
    client_version_result_ = new ::proto::GameVersionResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.CheckGameVersionRsp.client_version_result)
  return client_version_result_;
}
inline ::proto::GameVersionResult* CheckGameVersionRsp::release_client_version_result() {
  // @@protoc_insertion_point(field_release:proto.CheckGameVersionRsp.client_version_result)
  
  ::proto::GameVersionResult* temp = client_version_result_;
  client_version_result_ = NULL;
  return temp;
}
inline void CheckGameVersionRsp::set_allocated_client_version_result(::proto::GameVersionResult* client_version_result) {
  delete client_version_result_;
  client_version_result_ = client_version_result;
  if (client_version_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CheckGameVersionRsp.client_version_result)
}

// .proto.GameVersionResult client_silence_version_result = 5;
inline bool CheckGameVersionRsp::has_client_silence_version_result() const {
  return this != internal_default_instance() && client_silence_version_result_ != NULL;
}
inline void CheckGameVersionRsp::clear_client_silence_version_result() {
  if (GetArenaNoVirtual() == NULL && client_silence_version_result_ != NULL) delete client_silence_version_result_;
  client_silence_version_result_ = NULL;
}
inline const ::proto::GameVersionResult& CheckGameVersionRsp::client_silence_version_result() const {
  const ::proto::GameVersionResult* p = client_silence_version_result_;
  // @@protoc_insertion_point(field_get:proto.CheckGameVersionRsp.client_silence_version_result)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::GameVersionResult*>(
      &::proto::_GameVersionResult_default_instance_);
}
inline ::proto::GameVersionResult* CheckGameVersionRsp::mutable_client_silence_version_result() {
  
  if (client_silence_version_result_ == NULL) {
    client_silence_version_result_ = new ::proto::GameVersionResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.CheckGameVersionRsp.client_silence_version_result)
  return client_silence_version_result_;
}
inline ::proto::GameVersionResult* CheckGameVersionRsp::release_client_silence_version_result() {
  // @@protoc_insertion_point(field_release:proto.CheckGameVersionRsp.client_silence_version_result)
  
  ::proto::GameVersionResult* temp = client_silence_version_result_;
  client_silence_version_result_ = NULL;
  return temp;
}
inline void CheckGameVersionRsp::set_allocated_client_silence_version_result(::proto::GameVersionResult* client_silence_version_result) {
  delete client_silence_version_result_;
  client_silence_version_result_ = client_silence_version_result;
  if (client_silence_version_result) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CheckGameVersionRsp.client_silence_version_result)
}

// map<uint32, .proto.GameVersionResult> res_version_result_map = 6;
inline int CheckGameVersionRsp::res_version_result_map_size() const {
  return res_version_result_map_.size();
}
inline void CheckGameVersionRsp::clear_res_version_result_map() {
  res_version_result_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >&
CheckGameVersionRsp::res_version_result_map() const {
  // @@protoc_insertion_point(field_map:proto.CheckGameVersionRsp.res_version_result_map)
  return res_version_result_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >*
CheckGameVersionRsp::mutable_res_version_result_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.CheckGameVersionRsp.res_version_result_map)
  return res_version_result_map_.MutableMap();
}

// map<uint32, .proto.GameVersionResult> next_res_version_result_map = 7;
inline int CheckGameVersionRsp::next_res_version_result_map_size() const {
  return next_res_version_result_map_.size();
}
inline void CheckGameVersionRsp::clear_next_res_version_result_map() {
  next_res_version_result_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >&
CheckGameVersionRsp::next_res_version_result_map() const {
  // @@protoc_insertion_point(field_map:proto.CheckGameVersionRsp.next_res_version_result_map)
  return next_res_version_result_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::proto::GameVersionResult >*
CheckGameVersionRsp::mutable_next_res_version_result_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.CheckGameVersionRsp.next_res_version_result_map)
  return next_res_version_result_map_.MutableMap();
}

// -------------------------------------------------------------------

// PlatformPlayerNumReq

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlatformPlayerNumRsp

// int32 retcode = 1;
inline void PlatformPlayerNumRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlatformPlayerNumRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlatformPlayerNumRsp.retcode)
  return retcode_;
}
inline void PlatformPlayerNumRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformPlayerNumRsp.retcode)
}

// uint32 online_player_num = 2;
inline void PlatformPlayerNumRsp::clear_online_player_num() {
  online_player_num_ = 0u;
}
inline ::google::protobuf::uint32 PlatformPlayerNumRsp::online_player_num() const {
  // @@protoc_insertion_point(field_get:proto.PlatformPlayerNumRsp.online_player_num)
  return online_player_num_;
}
inline void PlatformPlayerNumRsp::set_online_player_num(::google::protobuf::uint32 value) {
  
  online_player_num_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformPlayerNumRsp.online_player_num)
}

// map<uint32, uint32> platform_player_num_map = 3;
inline int PlatformPlayerNumRsp::platform_player_num_map_size() const {
  return platform_player_num_map_.size();
}
inline void PlatformPlayerNumRsp::clear_platform_player_num_map() {
  platform_player_num_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
PlatformPlayerNumRsp::platform_player_num_map() const {
  // @@protoc_insertion_point(field_map:proto.PlatformPlayerNumRsp.platform_player_num_map)
  return platform_player_num_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
PlatformPlayerNumRsp::mutable_platform_player_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlatformPlayerNumRsp.platform_player_num_map)
  return platform_player_num_map_.MutableMap();
}

// -------------------------------------------------------------------

// PlayerMemBasicData

// string nickname = 1;
inline void PlayerMemBasicData::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlayerMemBasicData::nickname() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.nickname)
  return nickname_.GetNoArena();
}
inline void PlayerMemBasicData::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.nickname)
}
#if LANG_CXX11
inline void PlayerMemBasicData::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlayerMemBasicData.nickname)
}
#endif
inline void PlayerMemBasicData::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlayerMemBasicData.nickname)
}
inline void PlayerMemBasicData::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlayerMemBasicData.nickname)
}
inline ::std::string* PlayerMemBasicData::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlayerMemBasicData.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerMemBasicData::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.PlayerMemBasicData.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerMemBasicData::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerMemBasicData.nickname)
}

// uint32 level = 2;
inline void PlayerMemBasicData::clear_level() {
  level_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMemBasicData::level() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.level)
  return level_;
}
inline void PlayerMemBasicData::set_level(::google::protobuf::uint32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.level)
}

// uint32 exp = 3;
inline void PlayerMemBasicData::clear_exp() {
  exp_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMemBasicData::exp() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.exp)
  return exp_;
}
inline void PlayerMemBasicData::set_exp(::google::protobuf::uint32 value) {
  
  exp_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.exp)
}

// uint32 scoin = 4;
inline void PlayerMemBasicData::clear_scoin() {
  scoin_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMemBasicData::scoin() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.scoin)
  return scoin_;
}
inline void PlayerMemBasicData::set_scoin(::google::protobuf::uint32 value) {
  
  scoin_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.scoin)
}

// uint32 hcoin = 5;
inline void PlayerMemBasicData::clear_hcoin() {
  hcoin_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMemBasicData::hcoin() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.hcoin)
  return hcoin_;
}
inline void PlayerMemBasicData::set_hcoin(::google::protobuf::uint32 value) {
  
  hcoin_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.hcoin)
}

// uint32 last_login = 6;
inline void PlayerMemBasicData::clear_last_login() {
  last_login_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMemBasicData::last_login() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.last_login)
  return last_login_;
}
inline void PlayerMemBasicData::set_last_login(::google::protobuf::uint32 value) {
  
  last_login_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.last_login)
}

// .proto.ProfilePicture profile_picture = 7;
inline bool PlayerMemBasicData::has_profile_picture() const {
  return this != internal_default_instance() && profile_picture_ != NULL;
}
inline void PlayerMemBasicData::clear_profile_picture() {
  if (GetArenaNoVirtual() == NULL && profile_picture_ != NULL) delete profile_picture_;
  profile_picture_ = NULL;
}
inline const ::proto::ProfilePicture& PlayerMemBasicData::profile_picture() const {
  const ::proto::ProfilePicture* p = profile_picture_;
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.profile_picture)
  return p != NULL ? *p : *reinterpret_cast<const ::proto::ProfilePicture*>(
      &::proto::_ProfilePicture_default_instance_);
}
inline ::proto::ProfilePicture* PlayerMemBasicData::mutable_profile_picture() {
  
  if (profile_picture_ == NULL) {
    profile_picture_ = new ::proto::ProfilePicture;
  }
  // @@protoc_insertion_point(field_mutable:proto.PlayerMemBasicData.profile_picture)
  return profile_picture_;
}
inline ::proto::ProfilePicture* PlayerMemBasicData::release_profile_picture() {
  // @@protoc_insertion_point(field_release:proto.PlayerMemBasicData.profile_picture)
  
  ::proto::ProfilePicture* temp = profile_picture_;
  profile_picture_ = NULL;
  return temp;
}
inline void PlayerMemBasicData::set_allocated_profile_picture(::proto::ProfilePicture* profile_picture) {
  delete profile_picture_;
  profile_picture_ = profile_picture;
  if (profile_picture) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PlayerMemBasicData.profile_picture)
}

// fixed32 register_time = 8;
inline void PlayerMemBasicData::clear_register_time() {
  register_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMemBasicData::register_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.register_time)
  return register_time_;
}
inline void PlayerMemBasicData::set_register_time(::google::protobuf::uint32 value) {
  
  register_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.register_time)
}

// uint32 gender_type = 9;
inline void PlayerMemBasicData::clear_gender_type() {
  gender_type_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMemBasicData::gender_type() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemBasicData.gender_type)
  return gender_type_;
}
inline void PlayerMemBasicData::set_gender_type(::google::protobuf::uint32 value) {
  
  gender_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemBasicData.gender_type)
}

// -------------------------------------------------------------------

// PlayerMemH5AcitivityWatcherData

// uint32 h5_activity_watcher_id = 1;
inline void PlayerMemH5AcitivityWatcherData::clear_h5_activity_watcher_id() {
  h5_activity_watcher_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMemH5AcitivityWatcherData::h5_activity_watcher_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5AcitivityWatcherData.h5_activity_watcher_id)
  return h5_activity_watcher_id_;
}
inline void PlayerMemH5AcitivityWatcherData::set_h5_activity_watcher_id(::google::protobuf::uint32 value) {
  
  h5_activity_watcher_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5AcitivityWatcherData.h5_activity_watcher_id)
}

// uint32 progress = 2;
inline void PlayerMemH5AcitivityWatcherData::clear_progress() {
  progress_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMemH5AcitivityWatcherData::progress() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5AcitivityWatcherData.progress)
  return progress_;
}
inline void PlayerMemH5AcitivityWatcherData::set_progress(::google::protobuf::uint32 value) {
  
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5AcitivityWatcherData.progress)
}

// -------------------------------------------------------------------

// PlayerMemH5ActivityData

// uint32 h5_schedule_id = 1;
inline void PlayerMemH5ActivityData::clear_h5_schedule_id() {
  h5_schedule_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMemH5ActivityData::h5_schedule_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityData.h5_schedule_id)
  return h5_schedule_id_;
}
inline void PlayerMemH5ActivityData::set_h5_schedule_id(::google::protobuf::uint32 value) {
  
  h5_schedule_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5ActivityData.h5_schedule_id)
}

// uint32 h5_activity_id = 2;
inline void PlayerMemH5ActivityData::clear_h5_activity_id() {
  h5_activity_id_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMemH5ActivityData::h5_activity_id() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityData.h5_activity_id)
  return h5_activity_id_;
}
inline void PlayerMemH5ActivityData::set_h5_activity_id(::google::protobuf::uint32 value) {
  
  h5_activity_id_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5ActivityData.h5_activity_id)
}

// uint32 last_refresh_time = 3;
inline void PlayerMemH5ActivityData::clear_last_refresh_time() {
  last_refresh_time_ = 0u;
}
inline ::google::protobuf::uint32 PlayerMemH5ActivityData::last_refresh_time() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityData.last_refresh_time)
  return last_refresh_time_;
}
inline void PlayerMemH5ActivityData::set_last_refresh_time(::google::protobuf::uint32 value) {
  
  last_refresh_time_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5ActivityData.last_refresh_time)
}

// repeated uint32 finished_h5_activity_watcher_list = 4;
inline int PlayerMemH5ActivityData::finished_h5_activity_watcher_list_size() const {
  return finished_h5_activity_watcher_list_.size();
}
inline void PlayerMemH5ActivityData::clear_finished_h5_activity_watcher_list() {
  finished_h5_activity_watcher_list_.Clear();
}
inline ::google::protobuf::uint32 PlayerMemH5ActivityData::finished_h5_activity_watcher_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityData.finished_h5_activity_watcher_list)
  return finished_h5_activity_watcher_list_.Get(index);
}
inline void PlayerMemH5ActivityData::set_finished_h5_activity_watcher_list(int index, ::google::protobuf::uint32 value) {
  finished_h5_activity_watcher_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5ActivityData.finished_h5_activity_watcher_list)
}
inline void PlayerMemH5ActivityData::add_finished_h5_activity_watcher_list(::google::protobuf::uint32 value) {
  finished_h5_activity_watcher_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerMemH5ActivityData.finished_h5_activity_watcher_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerMemH5ActivityData::finished_h5_activity_watcher_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerMemH5ActivityData.finished_h5_activity_watcher_list)
  return finished_h5_activity_watcher_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerMemH5ActivityData::mutable_finished_h5_activity_watcher_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerMemH5ActivityData.finished_h5_activity_watcher_list)
  return &finished_h5_activity_watcher_list_;
}

// repeated uint32 unaccept_h5_activity_watcher_list = 5;
inline int PlayerMemH5ActivityData::unaccept_h5_activity_watcher_list_size() const {
  return unaccept_h5_activity_watcher_list_.size();
}
inline void PlayerMemH5ActivityData::clear_unaccept_h5_activity_watcher_list() {
  unaccept_h5_activity_watcher_list_.Clear();
}
inline ::google::protobuf::uint32 PlayerMemH5ActivityData::unaccept_h5_activity_watcher_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityData.unaccept_h5_activity_watcher_list)
  return unaccept_h5_activity_watcher_list_.Get(index);
}
inline void PlayerMemH5ActivityData::set_unaccept_h5_activity_watcher_list(int index, ::google::protobuf::uint32 value) {
  unaccept_h5_activity_watcher_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.PlayerMemH5ActivityData.unaccept_h5_activity_watcher_list)
}
inline void PlayerMemH5ActivityData::add_unaccept_h5_activity_watcher_list(::google::protobuf::uint32 value) {
  unaccept_h5_activity_watcher_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.PlayerMemH5ActivityData.unaccept_h5_activity_watcher_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PlayerMemH5ActivityData::unaccept_h5_activity_watcher_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerMemH5ActivityData.unaccept_h5_activity_watcher_list)
  return unaccept_h5_activity_watcher_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PlayerMemH5ActivityData::mutable_unaccept_h5_activity_watcher_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerMemH5ActivityData.unaccept_h5_activity_watcher_list)
  return &unaccept_h5_activity_watcher_list_;
}

// repeated .proto.PlayerMemH5AcitivityWatcherData h5_activity_watcher_list = 6;
inline int PlayerMemH5ActivityData::h5_activity_watcher_list_size() const {
  return h5_activity_watcher_list_.size();
}
inline void PlayerMemH5ActivityData::clear_h5_activity_watcher_list() {
  h5_activity_watcher_list_.Clear();
}
inline const ::proto::PlayerMemH5AcitivityWatcherData& PlayerMemH5ActivityData::h5_activity_watcher_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityData.h5_activity_watcher_list)
  return h5_activity_watcher_list_.Get(index);
}
inline ::proto::PlayerMemH5AcitivityWatcherData* PlayerMemH5ActivityData::mutable_h5_activity_watcher_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerMemH5ActivityData.h5_activity_watcher_list)
  return h5_activity_watcher_list_.Mutable(index);
}
inline ::proto::PlayerMemH5AcitivityWatcherData* PlayerMemH5ActivityData::add_h5_activity_watcher_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerMemH5ActivityData.h5_activity_watcher_list)
  return h5_activity_watcher_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5AcitivityWatcherData >*
PlayerMemH5ActivityData::mutable_h5_activity_watcher_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerMemH5ActivityData.h5_activity_watcher_list)
  return &h5_activity_watcher_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5AcitivityWatcherData >&
PlayerMemH5ActivityData::h5_activity_watcher_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerMemH5ActivityData.h5_activity_watcher_list)
  return h5_activity_watcher_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PlayerMemH5ActivityDataResult

// map<uint32, int32> retcode_map = 1;
inline int PlayerMemH5ActivityDataResult::retcode_map_size() const {
  return retcode_map_.size();
}
inline void PlayerMemH5ActivityDataResult::clear_retcode_map() {
  retcode_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >&
PlayerMemH5ActivityDataResult::retcode_map() const {
  // @@protoc_insertion_point(field_map:proto.PlayerMemH5ActivityDataResult.retcode_map)
  return retcode_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::int32 >*
PlayerMemH5ActivityDataResult::mutable_retcode_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.PlayerMemH5ActivityDataResult.retcode_map)
  return retcode_map_.MutableMap();
}

// repeated .proto.PlayerMemH5ActivityData h5_activity_data_list = 2;
inline int PlayerMemH5ActivityDataResult::h5_activity_data_list_size() const {
  return h5_activity_data_list_.size();
}
inline void PlayerMemH5ActivityDataResult::clear_h5_activity_data_list() {
  h5_activity_data_list_.Clear();
}
inline const ::proto::PlayerMemH5ActivityData& PlayerMemH5ActivityDataResult::h5_activity_data_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.PlayerMemH5ActivityDataResult.h5_activity_data_list)
  return h5_activity_data_list_.Get(index);
}
inline ::proto::PlayerMemH5ActivityData* PlayerMemH5ActivityDataResult::mutable_h5_activity_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.PlayerMemH5ActivityDataResult.h5_activity_data_list)
  return h5_activity_data_list_.Mutable(index);
}
inline ::proto::PlayerMemH5ActivityData* PlayerMemH5ActivityDataResult::add_h5_activity_data_list() {
  // @@protoc_insertion_point(field_add:proto.PlayerMemH5ActivityDataResult.h5_activity_data_list)
  return h5_activity_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5ActivityData >*
PlayerMemH5ActivityDataResult::mutable_h5_activity_data_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.PlayerMemH5ActivityDataResult.h5_activity_data_list)
  return &h5_activity_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::PlayerMemH5ActivityData >&
PlayerMemH5ActivityDataResult::h5_activity_data_list() const {
  // @@protoc_insertion_point(field_list:proto.PlayerMemH5ActivityDataResult.h5_activity_data_list)
  return h5_activity_data_list_;
}

// -------------------------------------------------------------------

// QueryPlayerMemDataByMuipReq

// uint32 data_type = 1;
inline void QueryPlayerMemDataByMuipReq::clear_data_type() {
  data_type_ = 0u;
}
inline ::google::protobuf::uint32 QueryPlayerMemDataByMuipReq::data_type() const {
  // @@protoc_insertion_point(field_get:proto.QueryPlayerMemDataByMuipReq.data_type)
  return data_type_;
}
inline void QueryPlayerMemDataByMuipReq::set_data_type(::google::protobuf::uint32 value) {
  
  data_type_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryPlayerMemDataByMuipReq.data_type)
}

// repeated uint32 param_list = 2;
inline int QueryPlayerMemDataByMuipReq::param_list_size() const {
  return param_list_.size();
}
inline void QueryPlayerMemDataByMuipReq::clear_param_list() {
  param_list_.Clear();
}
inline ::google::protobuf::uint32 QueryPlayerMemDataByMuipReq::param_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.QueryPlayerMemDataByMuipReq.param_list)
  return param_list_.Get(index);
}
inline void QueryPlayerMemDataByMuipReq::set_param_list(int index, ::google::protobuf::uint32 value) {
  param_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.QueryPlayerMemDataByMuipReq.param_list)
}
inline void QueryPlayerMemDataByMuipReq::add_param_list(::google::protobuf::uint32 value) {
  param_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.QueryPlayerMemDataByMuipReq.param_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
QueryPlayerMemDataByMuipReq::param_list() const {
  // @@protoc_insertion_point(field_list:proto.QueryPlayerMemDataByMuipReq.param_list)
  return param_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
QueryPlayerMemDataByMuipReq::mutable_param_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.QueryPlayerMemDataByMuipReq.param_list)
  return &param_list_;
}

// -------------------------------------------------------------------

// QueryPlayerMemDataByMuipRsp

// int32 retcode = 1;
inline void QueryPlayerMemDataByMuipRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 QueryPlayerMemDataByMuipRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QueryPlayerMemDataByMuipRsp.retcode)
  return retcode_;
}
inline void QueryPlayerMemDataByMuipRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryPlayerMemDataByMuipRsp.retcode)
}

// .proto.PlayerMemBasicData basic_data = 2;
inline bool QueryPlayerMemDataByMuipRsp::has_basic_data() const {
  return detail_case() == kBasicData;
}
inline void QueryPlayerMemDataByMuipRsp::set_has_basic_data() {
  _oneof_case_[0] = kBasicData;
}
inline void QueryPlayerMemDataByMuipRsp::clear_basic_data() {
  if (has_basic_data()) {
    delete detail_.basic_data_;
    clear_has_detail();
  }
}
inline  const ::proto::PlayerMemBasicData& QueryPlayerMemDataByMuipRsp::basic_data() const {
  // @@protoc_insertion_point(field_get:proto.QueryPlayerMemDataByMuipRsp.basic_data)
  return has_basic_data()
      ? *detail_.basic_data_
      : ::proto::PlayerMemBasicData::default_instance();
}
inline ::proto::PlayerMemBasicData* QueryPlayerMemDataByMuipRsp::mutable_basic_data() {
  if (!has_basic_data()) {
    clear_detail();
    set_has_basic_data();
    detail_.basic_data_ = new ::proto::PlayerMemBasicData;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryPlayerMemDataByMuipRsp.basic_data)
  return detail_.basic_data_;
}
inline ::proto::PlayerMemBasicData* QueryPlayerMemDataByMuipRsp::release_basic_data() {
  // @@protoc_insertion_point(field_release:proto.QueryPlayerMemDataByMuipRsp.basic_data)
  if (has_basic_data()) {
    clear_has_detail();
    ::proto::PlayerMemBasicData* temp = detail_.basic_data_;
    detail_.basic_data_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QueryPlayerMemDataByMuipRsp::set_allocated_basic_data(::proto::PlayerMemBasicData* basic_data) {
  clear_detail();
  if (basic_data) {
    set_has_basic_data();
    detail_.basic_data_ = basic_data;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryPlayerMemDataByMuipRsp.basic_data)
}

// .proto.PlayerMemH5ActivityDataResult h5_activity_data_result = 3;
inline bool QueryPlayerMemDataByMuipRsp::has_h5_activity_data_result() const {
  return detail_case() == kH5ActivityDataResult;
}
inline void QueryPlayerMemDataByMuipRsp::set_has_h5_activity_data_result() {
  _oneof_case_[0] = kH5ActivityDataResult;
}
inline void QueryPlayerMemDataByMuipRsp::clear_h5_activity_data_result() {
  if (has_h5_activity_data_result()) {
    delete detail_.h5_activity_data_result_;
    clear_has_detail();
  }
}
inline  const ::proto::PlayerMemH5ActivityDataResult& QueryPlayerMemDataByMuipRsp::h5_activity_data_result() const {
  // @@protoc_insertion_point(field_get:proto.QueryPlayerMemDataByMuipRsp.h5_activity_data_result)
  return has_h5_activity_data_result()
      ? *detail_.h5_activity_data_result_
      : ::proto::PlayerMemH5ActivityDataResult::default_instance();
}
inline ::proto::PlayerMemH5ActivityDataResult* QueryPlayerMemDataByMuipRsp::mutable_h5_activity_data_result() {
  if (!has_h5_activity_data_result()) {
    clear_detail();
    set_has_h5_activity_data_result();
    detail_.h5_activity_data_result_ = new ::proto::PlayerMemH5ActivityDataResult;
  }
  // @@protoc_insertion_point(field_mutable:proto.QueryPlayerMemDataByMuipRsp.h5_activity_data_result)
  return detail_.h5_activity_data_result_;
}
inline ::proto::PlayerMemH5ActivityDataResult* QueryPlayerMemDataByMuipRsp::release_h5_activity_data_result() {
  // @@protoc_insertion_point(field_release:proto.QueryPlayerMemDataByMuipRsp.h5_activity_data_result)
  if (has_h5_activity_data_result()) {
    clear_has_detail();
    ::proto::PlayerMemH5ActivityDataResult* temp = detail_.h5_activity_data_result_;
    detail_.h5_activity_data_result_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void QueryPlayerMemDataByMuipRsp::set_allocated_h5_activity_data_result(::proto::PlayerMemH5ActivityDataResult* h5_activity_data_result) {
  clear_detail();
  if (h5_activity_data_result) {
    set_has_h5_activity_data_result();
    detail_.h5_activity_data_result_ = h5_activity_data_result;
  }
  // @@protoc_insertion_point(field_set_allocated:proto.QueryPlayerMemDataByMuipRsp.h5_activity_data_result)
}

inline bool QueryPlayerMemDataByMuipRsp::has_detail() const {
  return detail_case() != DETAIL_NOT_SET;
}
inline void QueryPlayerMemDataByMuipRsp::clear_has_detail() {
  _oneof_case_[0] = DETAIL_NOT_SET;
}
inline QueryPlayerMemDataByMuipRsp::DetailCase QueryPlayerMemDataByMuipRsp::detail_case() const {
  return QueryPlayerMemDataByMuipRsp::DetailCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// BindGmUidNotify

// uint32 gm_uid = 1;
inline void BindGmUidNotify::clear_gm_uid() {
  gm_uid_ = 0u;
}
inline ::google::protobuf::uint32 BindGmUidNotify::gm_uid() const {
  // @@protoc_insertion_point(field_get:proto.BindGmUidNotify.gm_uid)
  return gm_uid_;
}
inline void BindGmUidNotify::set_gm_uid(::google::protobuf::uint32 value) {
  
  gm_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BindGmUidNotify.gm_uid)
}

// uint32 player_uid = 2;
inline void BindGmUidNotify::clear_player_uid() {
  player_uid_ = 0u;
}
inline ::google::protobuf::uint32 BindGmUidNotify::player_uid() const {
  // @@protoc_insertion_point(field_get:proto.BindGmUidNotify.player_uid)
  return player_uid_;
}
inline void BindGmUidNotify::set_player_uid(::google::protobuf::uint32 value) {
  
  player_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.BindGmUidNotify.player_uid)
}

// -------------------------------------------------------------------

// UnbindGmUidNotify

// uint32 gm_uid = 1;
inline void UnbindGmUidNotify::clear_gm_uid() {
  gm_uid_ = 0u;
}
inline ::google::protobuf::uint32 UnbindGmUidNotify::gm_uid() const {
  // @@protoc_insertion_point(field_get:proto.UnbindGmUidNotify.gm_uid)
  return gm_uid_;
}
inline void UnbindGmUidNotify::set_gm_uid(::google::protobuf::uint32 value) {
  
  gm_uid_ = value;
  // @@protoc_insertion_point(field_set:proto.UnbindGmUidNotify.gm_uid)
}

// -------------------------------------------------------------------

// GetBindGmUidReq

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetBindGmUidRsp

// int32 retcode = 1;
inline void GetBindGmUidRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 GetBindGmUidRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.GetBindGmUidRsp.retcode)
  return retcode_;
}
inline void GetBindGmUidRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.GetBindGmUidRsp.retcode)
}

// map<uint32, uint32> gm_uid_map = 2;
inline int GetBindGmUidRsp::gm_uid_map_size() const {
  return gm_uid_map_.size();
}
inline void GetBindGmUidRsp::clear_gm_uid_map() {
  gm_uid_map_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >&
GetBindGmUidRsp::gm_uid_map() const {
  // @@protoc_insertion_point(field_map:proto.GetBindGmUidRsp.gm_uid_map)
  return gm_uid_map_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint32, ::google::protobuf::uint32 >*
GetBindGmUidRsp::mutable_gm_uid_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.GetBindGmUidRsp.gm_uid_map)
  return gm_uid_map_.MutableMap();
}

// -------------------------------------------------------------------

// PlatformAntiAddictNotify

// int32 msg_type = 2;
inline void PlatformAntiAddictNotify::clear_msg_type() {
  msg_type_ = 0;
}
inline ::google::protobuf::int32 PlatformAntiAddictNotify::msg_type() const {
  // @@protoc_insertion_point(field_get:proto.PlatformAntiAddictNotify.msg_type)
  return msg_type_;
}
inline void PlatformAntiAddictNotify::set_msg_type(::google::protobuf::int32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:proto.PlatformAntiAddictNotify.msg_type)
}

// string msg = 3;
inline void PlatformAntiAddictNotify::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlatformAntiAddictNotify::msg() const {
  // @@protoc_insertion_point(field_get:proto.PlatformAntiAddictNotify.msg)
  return msg_.GetNoArena();
}
inline void PlatformAntiAddictNotify::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlatformAntiAddictNotify.msg)
}
#if LANG_CXX11
inline void PlatformAntiAddictNotify::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlatformAntiAddictNotify.msg)
}
#endif
inline void PlatformAntiAddictNotify::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlatformAntiAddictNotify.msg)
}
inline void PlatformAntiAddictNotify::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlatformAntiAddictNotify.msg)
}
inline ::std::string* PlatformAntiAddictNotify::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlatformAntiAddictNotify.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlatformAntiAddictNotify::release_msg() {
  // @@protoc_insertion_point(field_release:proto.PlatformAntiAddictNotify.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlatformAntiAddictNotify::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformAntiAddictNotify.msg)
}

// string level = 4;
inline void PlatformAntiAddictNotify::clear_level() {
  level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PlatformAntiAddictNotify::level() const {
  // @@protoc_insertion_point(field_get:proto.PlatformAntiAddictNotify.level)
  return level_.GetNoArena();
}
inline void PlatformAntiAddictNotify::set_level(const ::std::string& value) {
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.PlatformAntiAddictNotify.level)
}
#if LANG_CXX11
inline void PlatformAntiAddictNotify::set_level(::std::string&& value) {
  
  level_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.PlatformAntiAddictNotify.level)
}
#endif
inline void PlatformAntiAddictNotify::set_level(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.PlatformAntiAddictNotify.level)
}
inline void PlatformAntiAddictNotify::set_level(const char* value, size_t size) {
  
  level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.PlatformAntiAddictNotify.level)
}
inline ::std::string* PlatformAntiAddictNotify::mutable_level() {
  
  // @@protoc_insertion_point(field_mutable:proto.PlatformAntiAddictNotify.level)
  return level_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlatformAntiAddictNotify::release_level() {
  // @@protoc_insertion_point(field_release:proto.PlatformAntiAddictNotify.level)
  
  return level_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlatformAntiAddictNotify::set_allocated_level(::std::string* level) {
  if (level != NULL) {
    
  } else {
    
  }
  level_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), level);
  // @@protoc_insertion_point(field_set_allocated:proto.PlatformAntiAddictNotify.level)
}

// -------------------------------------------------------------------

// PlayerLoginPerSecondReq

// -------------------------------------------------------------------

// PlayerLoginPerSecondRsp

// int32 retcode = 1;
inline void PlayerLoginPerSecondRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerLoginPerSecondRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginPerSecondRsp.retcode)
  return retcode_;
}
inline void PlayerLoginPerSecondRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginPerSecondRsp.retcode)
}

// uint32 player_login_per_second = 2;
inline void PlayerLoginPerSecondRsp::clear_player_login_per_second() {
  player_login_per_second_ = 0u;
}
inline ::google::protobuf::uint32 PlayerLoginPerSecondRsp::player_login_per_second() const {
  // @@protoc_insertion_point(field_get:proto.PlayerLoginPerSecondRsp.player_login_per_second)
  return player_login_per_second_;
}
inline void PlayerLoginPerSecondRsp::set_player_login_per_second(::google::protobuf::uint32 value) {
  
  player_login_per_second_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerLoginPerSecondRsp.player_login_per_second)
}

// -------------------------------------------------------------------

// FineGrainedPlayerNumReq

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// FineGrainedPlayerNumRsp

// int32 retcode = 1;
inline void FineGrainedPlayerNumRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 FineGrainedPlayerNumRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.FineGrainedPlayerNumRsp.retcode)
  return retcode_;
}
inline void FineGrainedPlayerNumRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.FineGrainedPlayerNumRsp.retcode)
}

// uint32 online_player_num = 2;
inline void FineGrainedPlayerNumRsp::clear_online_player_num() {
  online_player_num_ = 0u;
}
inline ::google::protobuf::uint32 FineGrainedPlayerNumRsp::online_player_num() const {
  // @@protoc_insertion_point(field_get:proto.FineGrainedPlayerNumRsp.online_player_num)
  return online_player_num_;
}
inline void FineGrainedPlayerNumRsp::set_online_player_num(::google::protobuf::uint32 value) {
  
  online_player_num_ = value;
  // @@protoc_insertion_point(field_set:proto.FineGrainedPlayerNumRsp.online_player_num)
}

// map<string, uint32> fine_grained_player_num_map = 3;
inline int FineGrainedPlayerNumRsp::fine_grained_player_num_map_size() const {
  return fine_grained_player_num_map_.size();
}
inline void FineGrainedPlayerNumRsp::clear_fine_grained_player_num_map() {
  fine_grained_player_num_map_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
FineGrainedPlayerNumRsp::fine_grained_player_num_map() const {
  // @@protoc_insertion_point(field_map:proto.FineGrainedPlayerNumRsp.fine_grained_player_num_map)
  return fine_grained_player_num_map_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
FineGrainedPlayerNumRsp::mutable_fine_grained_player_num_map() {
  // @@protoc_insertion_point(field_mutable_map:proto.FineGrainedPlayerNumRsp.fine_grained_player_num_map)
  return fine_grained_player_num_map_.MutableMap();
}

// -------------------------------------------------------------------

// CheckGameCrcVersionReq

// uint32 platform = 1;
inline void CheckGameCrcVersionReq::clear_platform() {
  platform_ = 0u;
}
inline ::google::protobuf::uint32 CheckGameCrcVersionReq::platform() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionReq.platform)
  return platform_;
}
inline void CheckGameCrcVersionReq::set_platform(::google::protobuf::uint32 value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionReq.platform)
}

// string client_version_str = 2;
inline void CheckGameCrcVersionReq::clear_client_version_str() {
  client_version_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckGameCrcVersionReq::client_version_str() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionReq.client_version_str)
  return client_version_str_.GetNoArena();
}
inline void CheckGameCrcVersionReq::set_client_version_str(const ::std::string& value) {
  
  client_version_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionReq.client_version_str)
}
#if LANG_CXX11
inline void CheckGameCrcVersionReq::set_client_version_str(::std::string&& value) {
  
  client_version_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CheckGameCrcVersionReq.client_version_str)
}
#endif
inline void CheckGameCrcVersionReq::set_client_version_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CheckGameCrcVersionReq.client_version_str)
}
inline void CheckGameCrcVersionReq::set_client_version_str(const char* value, size_t size) {
  
  client_version_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CheckGameCrcVersionReq.client_version_str)
}
inline ::std::string* CheckGameCrcVersionReq::mutable_client_version_str() {
  
  // @@protoc_insertion_point(field_mutable:proto.CheckGameCrcVersionReq.client_version_str)
  return client_version_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckGameCrcVersionReq::release_client_version_str() {
  // @@protoc_insertion_point(field_release:proto.CheckGameCrcVersionReq.client_version_str)
  
  return client_version_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckGameCrcVersionReq::set_allocated_client_version_str(::std::string* client_version_str) {
  if (client_version_str != NULL) {
    
  } else {
    
  }
  client_version_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version_str);
  // @@protoc_insertion_point(field_set_allocated:proto.CheckGameCrcVersionReq.client_version_str)
}

// -------------------------------------------------------------------

// CheckGameCrcVersionRsp

// int32 retcode = 1;
inline void CheckGameCrcVersionRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 CheckGameCrcVersionRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionRsp.retcode)
  return retcode_;
}
inline void CheckGameCrcVersionRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionRsp.retcode)
}

// uint32 total_game = 2;
inline void CheckGameCrcVersionRsp::clear_total_game() {
  total_game_ = 0u;
}
inline ::google::protobuf::uint32 CheckGameCrcVersionRsp::total_game() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionRsp.total_game)
  return total_game_;
}
inline void CheckGameCrcVersionRsp::set_total_game(::google::protobuf::uint32 value) {
  
  total_game_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionRsp.total_game)
}

// uint32 platform = 3;
inline void CheckGameCrcVersionRsp::clear_platform() {
  platform_ = 0u;
}
inline ::google::protobuf::uint32 CheckGameCrcVersionRsp::platform() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionRsp.platform)
  return platform_;
}
inline void CheckGameCrcVersionRsp::set_platform(::google::protobuf::uint32 value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionRsp.platform)
}

// string client_version_str = 4;
inline void CheckGameCrcVersionRsp::clear_client_version_str() {
  client_version_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckGameCrcVersionRsp::client_version_str() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionRsp.client_version_str)
  return client_version_str_.GetNoArena();
}
inline void CheckGameCrcVersionRsp::set_client_version_str(const ::std::string& value) {
  
  client_version_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionRsp.client_version_str)
}
#if LANG_CXX11
inline void CheckGameCrcVersionRsp::set_client_version_str(::std::string&& value) {
  
  client_version_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CheckGameCrcVersionRsp.client_version_str)
}
#endif
inline void CheckGameCrcVersionRsp::set_client_version_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  client_version_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CheckGameCrcVersionRsp.client_version_str)
}
inline void CheckGameCrcVersionRsp::set_client_version_str(const char* value, size_t size) {
  
  client_version_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CheckGameCrcVersionRsp.client_version_str)
}
inline ::std::string* CheckGameCrcVersionRsp::mutable_client_version_str() {
  
  // @@protoc_insertion_point(field_mutable:proto.CheckGameCrcVersionRsp.client_version_str)
  return client_version_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckGameCrcVersionRsp::release_client_version_str() {
  // @@protoc_insertion_point(field_release:proto.CheckGameCrcVersionRsp.client_version_str)
  
  return client_version_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckGameCrcVersionRsp::set_allocated_client_version_str(::std::string* client_version_str) {
  if (client_version_str != NULL) {
    
  } else {
    
  }
  client_version_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), client_version_str);
  // @@protoc_insertion_point(field_set_allocated:proto.CheckGameCrcVersionRsp.client_version_str)
}

// uint32 wrong_num = 5;
inline void CheckGameCrcVersionRsp::clear_wrong_num() {
  wrong_num_ = 0u;
}
inline ::google::protobuf::uint32 CheckGameCrcVersionRsp::wrong_num() const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionRsp.wrong_num)
  return wrong_num_;
}
inline void CheckGameCrcVersionRsp::set_wrong_num(::google::protobuf::uint32 value) {
  
  wrong_num_ = value;
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionRsp.wrong_num)
}

// repeated uint32 wrong_name_list = 6;
inline int CheckGameCrcVersionRsp::wrong_name_list_size() const {
  return wrong_name_list_.size();
}
inline void CheckGameCrcVersionRsp::clear_wrong_name_list() {
  wrong_name_list_.Clear();
}
inline ::google::protobuf::uint32 CheckGameCrcVersionRsp::wrong_name_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.CheckGameCrcVersionRsp.wrong_name_list)
  return wrong_name_list_.Get(index);
}
inline void CheckGameCrcVersionRsp::set_wrong_name_list(int index, ::google::protobuf::uint32 value) {
  wrong_name_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CheckGameCrcVersionRsp.wrong_name_list)
}
inline void CheckGameCrcVersionRsp::add_wrong_name_list(::google::protobuf::uint32 value) {
  wrong_name_list_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CheckGameCrcVersionRsp.wrong_name_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CheckGameCrcVersionRsp::wrong_name_list() const {
  // @@protoc_insertion_point(field_list:proto.CheckGameCrcVersionRsp.wrong_name_list)
  return wrong_name_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CheckGameCrcVersionRsp::mutable_wrong_name_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.CheckGameCrcVersionRsp.wrong_name_list)
  return &wrong_name_list_;
}

// -------------------------------------------------------------------

// UpdateRedPointByMuipNotify

// repeated .proto.RedPointData red_point_list = 1;
inline int UpdateRedPointByMuipNotify::red_point_list_size() const {
  return red_point_list_.size();
}
inline void UpdateRedPointByMuipNotify::clear_red_point_list() {
  red_point_list_.Clear();
}
inline const ::proto::RedPointData& UpdateRedPointByMuipNotify::red_point_list(int index) const {
  // @@protoc_insertion_point(field_get:proto.UpdateRedPointByMuipNotify.red_point_list)
  return red_point_list_.Get(index);
}
inline ::proto::RedPointData* UpdateRedPointByMuipNotify::mutable_red_point_list(int index) {
  // @@protoc_insertion_point(field_mutable:proto.UpdateRedPointByMuipNotify.red_point_list)
  return red_point_list_.Mutable(index);
}
inline ::proto::RedPointData* UpdateRedPointByMuipNotify::add_red_point_list() {
  // @@protoc_insertion_point(field_add:proto.UpdateRedPointByMuipNotify.red_point_list)
  return red_point_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::RedPointData >*
UpdateRedPointByMuipNotify::mutable_red_point_list() {
  // @@protoc_insertion_point(field_mutable_list:proto.UpdateRedPointByMuipNotify.red_point_list)
  return &red_point_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::RedPointData >&
UpdateRedPointByMuipNotify::red_point_list() const {
  // @@protoc_insertion_point(field_list:proto.UpdateRedPointByMuipNotify.red_point_list)
  return red_point_list_;
}

// -------------------------------------------------------------------

// SendConcertProductReq

// string ticket = 1;
inline void SendConcertProductReq::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendConcertProductReq::ticket() const {
  // @@protoc_insertion_point(field_get:proto.SendConcertProductReq.ticket)
  return ticket_.GetNoArena();
}
inline void SendConcertProductReq::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SendConcertProductReq.ticket)
}
#if LANG_CXX11
inline void SendConcertProductReq::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SendConcertProductReq.ticket)
}
#endif
inline void SendConcertProductReq::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SendConcertProductReq.ticket)
}
inline void SendConcertProductReq::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SendConcertProductReq.ticket)
}
inline ::std::string* SendConcertProductReq::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.SendConcertProductReq.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendConcertProductReq::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.SendConcertProductReq.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendConcertProductReq::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.SendConcertProductReq.ticket)
}

// uint32 config_id = 2;
inline void SendConcertProductReq::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 SendConcertProductReq::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SendConcertProductReq.config_id)
  return config_id_;
}
inline void SendConcertProductReq::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SendConcertProductReq.config_id)
}

// -------------------------------------------------------------------

// SendConcertProductRsp

// int32 retcode = 1;
inline void SendConcertProductRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 SendConcertProductRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.SendConcertProductRsp.retcode)
  return retcode_;
}
inline void SendConcertProductRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.SendConcertProductRsp.retcode)
}

// string ticket = 2;
inline void SendConcertProductRsp::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendConcertProductRsp::ticket() const {
  // @@protoc_insertion_point(field_get:proto.SendConcertProductRsp.ticket)
  return ticket_.GetNoArena();
}
inline void SendConcertProductRsp::set_ticket(const ::std::string& value) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.SendConcertProductRsp.ticket)
}
#if LANG_CXX11
inline void SendConcertProductRsp::set_ticket(::std::string&& value) {
  
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.SendConcertProductRsp.ticket)
}
#endif
inline void SendConcertProductRsp::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.SendConcertProductRsp.ticket)
}
inline void SendConcertProductRsp::set_ticket(const char* value, size_t size) {
  
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.SendConcertProductRsp.ticket)
}
inline ::std::string* SendConcertProductRsp::mutable_ticket() {
  
  // @@protoc_insertion_point(field_mutable:proto.SendConcertProductRsp.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendConcertProductRsp::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.SendConcertProductRsp.ticket)
  
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendConcertProductRsp::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    
  } else {
    
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.SendConcertProductRsp.ticket)
}

// uint32 config_id = 3;
inline void SendConcertProductRsp::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 SendConcertProductRsp::config_id() const {
  // @@protoc_insertion_point(field_get:proto.SendConcertProductRsp.config_id)
  return config_id_;
}
inline void SendConcertProductRsp::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.SendConcertProductRsp.config_id)
}

// -------------------------------------------------------------------

// QueryConcertProductInfoReq

// uint32 config_id = 1;
inline void QueryConcertProductInfoReq::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 QueryConcertProductInfoReq::config_id() const {
  // @@protoc_insertion_point(field_get:proto.QueryConcertProductInfoReq.config_id)
  return config_id_;
}
inline void QueryConcertProductInfoReq::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryConcertProductInfoReq.config_id)
}

// -------------------------------------------------------------------

// QueryConcertProductInfoRsp

// int32 retcode = 1;
inline void QueryConcertProductInfoRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 QueryConcertProductInfoRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.QueryConcertProductInfoRsp.retcode)
  return retcode_;
}
inline void QueryConcertProductInfoRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryConcertProductInfoRsp.retcode)
}

// uint32 config_id = 2;
inline void QueryConcertProductInfoRsp::clear_config_id() {
  config_id_ = 0u;
}
inline ::google::protobuf::uint32 QueryConcertProductInfoRsp::config_id() const {
  // @@protoc_insertion_point(field_get:proto.QueryConcertProductInfoRsp.config_id)
  return config_id_;
}
inline void QueryConcertProductInfoRsp::set_config_id(::google::protobuf::uint32 value) {
  
  config_id_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryConcertProductInfoRsp.config_id)
}

// uint32 obtain_count = 3;
inline void QueryConcertProductInfoRsp::clear_obtain_count() {
  obtain_count_ = 0u;
}
inline ::google::protobuf::uint32 QueryConcertProductInfoRsp::obtain_count() const {
  // @@protoc_insertion_point(field_get:proto.QueryConcertProductInfoRsp.obtain_count)
  return obtain_count_;
}
inline void QueryConcertProductInfoRsp::set_obtain_count(::google::protobuf::uint32 value) {
  
  obtain_count_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryConcertProductInfoRsp.obtain_count)
}

// uint32 obtain_limit = 4;
inline void QueryConcertProductInfoRsp::clear_obtain_limit() {
  obtain_limit_ = 0u;
}
inline ::google::protobuf::uint32 QueryConcertProductInfoRsp::obtain_limit() const {
  // @@protoc_insertion_point(field_get:proto.QueryConcertProductInfoRsp.obtain_limit)
  return obtain_limit_;
}
inline void QueryConcertProductInfoRsp::set_obtain_limit(::google::protobuf::uint32 value) {
  
  obtain_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.QueryConcertProductInfoRsp.obtain_limit)
}

// -------------------------------------------------------------------

// PlayerMpModeReq

// -------------------------------------------------------------------

// PlayerMpModeRsp

// int32 retcode = 1;
inline void PlayerMpModeRsp::clear_retcode() {
  retcode_ = 0;
}
inline ::google::protobuf::int32 PlayerMpModeRsp::retcode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMpModeRsp.retcode)
  return retcode_;
}
inline void PlayerMpModeRsp::set_retcode(::google::protobuf::int32 value) {
  
  retcode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMpModeRsp.retcode)
}

// bool is_mp_mode = 2;
inline void PlayerMpModeRsp::clear_is_mp_mode() {
  is_mp_mode_ = false;
}
inline bool PlayerMpModeRsp::is_mp_mode() const {
  // @@protoc_insertion_point(field_get:proto.PlayerMpModeRsp.is_mp_mode)
  return is_mp_mode_;
}
inline void PlayerMpModeRsp::set_is_mp_mode(bool value) {
  
  is_mp_mode_ = value;
  // @@protoc_insertion_point(field_set:proto.PlayerMpModeRsp.is_mp_mode)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::PlayerMemDataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::PlayerMemDataType>() {
  return ::proto::PlayerMemDataType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fonly_2fcmd_5fmuip_2eserver_2eproto__INCLUDED
