// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_only/cmd_security.server.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server_only/cmd_security.server.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto_security {
class GameLoginNotifyRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameLoginNotifyRequest>
     _instance;
} _GameLoginNotifyRequest_default_instance_;
class GameLogoutNotifyRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameLogoutNotifyRequest>
     _instance;
} _GameLogoutNotifyRequest_default_instance_;
class GameHeartBeatInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameHeartBeatInfo>
     _instance;
} _GameHeartBeatInfo_default_instance_;
class GameHeartBeatNotifyRequest_PlatformUidListEntryDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameHeartBeatNotifyRequest::GameHeartBeatNotifyRequest_PlatformUidListEntry>
     _instance;
} _GameHeartBeatNotifyRequest_PlatformUidListEntry_default_instance_;
class GameHeartBeatNotifyRequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<GameHeartBeatNotifyRequest>
     _instance;
} _GameHeartBeatNotifyRequest_default_instance_;

namespace protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLoginNotifyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLoginNotifyRequest, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLoginNotifyRequest, account_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLoginNotifyRequest, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLoginNotifyRequest, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLoginNotifyRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLoginNotifyRequest, biz_game_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLogoutNotifyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLogoutNotifyRequest, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLogoutNotifyRequest, account_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLogoutNotifyRequest, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLogoutNotifyRequest, platform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLogoutNotifyRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameLogoutNotifyRequest, biz_game_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameHeartBeatInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameHeartBeatInfo, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameHeartBeatNotifyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameHeartBeatNotifyRequest, platform_uid_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameHeartBeatNotifyRequest, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameHeartBeatNotifyRequest, biz_game_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(GameLoginNotifyRequest)},
  { 11, -1, sizeof(GameLogoutNotifyRequest)},
  { 22, -1, sizeof(GameHeartBeatInfo)},
  { 28, -1, sizeof(GameHeartBeatNotifyRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameLoginNotifyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameLogoutNotifyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameHeartBeatInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameHeartBeatNotifyRequest_PlatformUidListEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameHeartBeatNotifyRequest_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "server_only/cmd_security.server.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[3].reflection = GameHeartBeatNotifyRequest::GameHeartBeatNotifyRequest_PlatformUidListEntry::CreateReflection(file_level_metadata[3].descriptor, _GameHeartBeatNotifyRequest_PlatformUidListEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _GameLoginNotifyRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameLoginNotifyRequest_default_instance_);_GameLogoutNotifyRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameLogoutNotifyRequest_default_instance_);_GameHeartBeatInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameHeartBeatInfo_default_instance_);_GameHeartBeatNotifyRequest_PlatformUidListEntry_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameHeartBeatNotifyRequest_PlatformUidListEntry_default_instance_);_GameHeartBeatNotifyRequest_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_GameHeartBeatNotifyRequest_default_instance_);_GameHeartBeatNotifyRequest_PlatformUidListEntry_default_instance_._instance.get_mutable()->set_default_instance(_GameHeartBeatNotifyRequest_PlatformUidListEntry_default_instance_._instance.get_mutable());
  _GameHeartBeatNotifyRequest_PlatformUidListEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n%server_only/cmd_security.server.proto\022"
      "\016proto_security\"\200\001\n\026GameLoginNotifyReque"
      "st\022\013\n\003uid\030\001 \001(\r\022\024\n\014account_type\030\002 \001(\r\022\017\n"
      "\007account\030\003 \001(\t\022\020\n\010platform\030\004 \001(\r\022\016\n\006regi"
      "on\030\005 \001(\t\022\020\n\010biz_game\030\006 \001(\t\"\201\001\n\027GameLogou"
      "tNotifyRequest\022\013\n\003uid\030\001 \001(\r\022\024\n\014account_t"
      "ype\030\002 \001(\r\022\017\n\007account\030\003 \001(\t\022\020\n\010platform\030\004"
      " \001(\r\022\016\n\006region\030\005 \001(\t\022\020\n\010biz_game\030\006 \001(\t\" "
      "\n\021GameHeartBeatInfo\022\013\n\003uid\030\001 \003(\r\"\365\001\n\032Gam"
      "eHeartBeatNotifyRequest\022Z\n\021platform_uid_"
      "list\030\001 \003(\0132\?.proto_security.GameHeartBea"
      "tNotifyRequest.PlatformUidListEntry\022\016\n\006r"
      "egion\030\002 \001(\t\022\020\n\010biz_game\030\003 \001(\t\032Y\n\024Platfor"
      "mUidListEntry\022\013\n\003key\030\001 \001(\r\0220\n\005value\030\002 \001("
      "\0132!.proto_security.GameHeartBeatInfo:\0028\001"
      "*\222\001\n\010Platform\022\n\n\006Unkown\020\000\022\007\n\003IOS\020\001\022\013\n\007An"
      "droid\020\002\022\006\n\002PC\020\003\022\007\n\003WEB\020\004\022\007\n\003WAP\020\005\022\006\n\002PS\020"
      "\006\022\014\n\010Nintendo\020\007\022\020\n\014CloudAndroid\020\010\022\013\n\007Clo"
      "udPC\020\t\022\014\n\010CloudIOS\020\n\022\007\n\003PS5\020\013b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 757);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server_only/cmd_security.server.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto

const ::google::protobuf::EnumDescriptor* Platform_descriptor() {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::file_level_enum_descriptors[0];
}
bool Platform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameLoginNotifyRequest::kUidFieldNumber;
const int GameLoginNotifyRequest::kAccountTypeFieldNumber;
const int GameLoginNotifyRequest::kAccountFieldNumber;
const int GameLoginNotifyRequest::kPlatformFieldNumber;
const int GameLoginNotifyRequest::kRegionFieldNumber;
const int GameLoginNotifyRequest::kBizGameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameLoginNotifyRequest::GameLoginNotifyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_security.GameLoginNotifyRequest)
}
GameLoginNotifyRequest::GameLoginNotifyRequest(const GameLoginNotifyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  biz_game_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.biz_game().size() > 0) {
    biz_game_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.biz_game_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&platform_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(platform_));
  // @@protoc_insertion_point(copy_constructor:proto_security.GameLoginNotifyRequest)
}

void GameLoginNotifyRequest::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  biz_game_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&platform_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(platform_));
  _cached_size_ = 0;
}

GameLoginNotifyRequest::~GameLoginNotifyRequest() {
  // @@protoc_insertion_point(destructor:proto_security.GameLoginNotifyRequest)
  SharedDtor();
}

void GameLoginNotifyRequest::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  biz_game_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameLoginNotifyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameLoginNotifyRequest::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameLoginNotifyRequest& GameLoginNotifyRequest::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameLoginNotifyRequest* GameLoginNotifyRequest::New(::google::protobuf::Arena* arena) const {
  GameLoginNotifyRequest* n = new GameLoginNotifyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameLoginNotifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_security.GameLoginNotifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  biz_game_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&platform_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(platform_));
  _internal_metadata_.Clear();
}

bool GameLoginNotifyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_security.GameLoginNotifyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 account_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_security.GameLoginNotifyRequest.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 platform = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_security.GameLoginNotifyRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string biz_game = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_biz_game()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->biz_game().data(), static_cast<int>(this->biz_game().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_security.GameLoginNotifyRequest.biz_game"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_security.GameLoginNotifyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_security.GameLoginNotifyRequest)
  return false;
#undef DO_
}

void GameLoginNotifyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_security.GameLoginNotifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // uint32 account_type = 2;
  if (this->account_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->account_type(), output);
  }

  // string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameLoginNotifyRequest.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // uint32 platform = 4;
  if (this->platform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->platform(), output);
  }

  // string region = 5;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameLoginNotifyRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->region(), output);
  }

  // string biz_game = 6;
  if (this->biz_game().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->biz_game().data(), static_cast<int>(this->biz_game().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameLoginNotifyRequest.biz_game");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->biz_game(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_security.GameLoginNotifyRequest)
}

::google::protobuf::uint8* GameLoginNotifyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_security.GameLoginNotifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // uint32 account_type = 2;
  if (this->account_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->account_type(), target);
  }

  // string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameLoginNotifyRequest.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // uint32 platform = 4;
  if (this->platform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->platform(), target);
  }

  // string region = 5;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameLoginNotifyRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->region(), target);
  }

  // string biz_game = 6;
  if (this->biz_game().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->biz_game().data(), static_cast<int>(this->biz_game().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameLoginNotifyRequest.biz_game");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->biz_game(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_security.GameLoginNotifyRequest)
  return target;
}

size_t GameLoginNotifyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_security.GameLoginNotifyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string account = 3;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string region = 5;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // string biz_game = 6;
  if (this->biz_game().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->biz_game());
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 account_type = 2;
  if (this->account_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_type());
  }

  // uint32 platform = 4;
  if (this->platform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameLoginNotifyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_security.GameLoginNotifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GameLoginNotifyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameLoginNotifyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_security.GameLoginNotifyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_security.GameLoginNotifyRequest)
    MergeFrom(*source);
  }
}

void GameLoginNotifyRequest::MergeFrom(const GameLoginNotifyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_security.GameLoginNotifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.biz_game().size() > 0) {

    biz_game_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.biz_game_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.account_type() != 0) {
    set_account_type(from.account_type());
  }
  if (from.platform() != 0) {
    set_platform(from.platform());
  }
}

void GameLoginNotifyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_security.GameLoginNotifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameLoginNotifyRequest::CopyFrom(const GameLoginNotifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_security.GameLoginNotifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameLoginNotifyRequest::IsInitialized() const {
  return true;
}

void GameLoginNotifyRequest::Swap(GameLoginNotifyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameLoginNotifyRequest::InternalSwap(GameLoginNotifyRequest* other) {
  using std::swap;
  account_.Swap(&other->account_);
  region_.Swap(&other->region_);
  biz_game_.Swap(&other->biz_game_);
  swap(uid_, other->uid_);
  swap(account_type_, other->account_type_);
  swap(platform_, other->platform_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameLoginNotifyRequest::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameLoginNotifyRequest

// uint32 uid = 1;
void GameLoginNotifyRequest::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GameLoginNotifyRequest::uid() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLoginNotifyRequest.uid)
  return uid_;
}
void GameLoginNotifyRequest::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto_security.GameLoginNotifyRequest.uid)
}

// uint32 account_type = 2;
void GameLoginNotifyRequest::clear_account_type() {
  account_type_ = 0u;
}
::google::protobuf::uint32 GameLoginNotifyRequest::account_type() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLoginNotifyRequest.account_type)
  return account_type_;
}
void GameLoginNotifyRequest::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto_security.GameLoginNotifyRequest.account_type)
}

// string account = 3;
void GameLoginNotifyRequest::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GameLoginNotifyRequest::account() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLoginNotifyRequest.account)
  return account_.GetNoArena();
}
void GameLoginNotifyRequest::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameLoginNotifyRequest.account)
}
#if LANG_CXX11
void GameLoginNotifyRequest::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameLoginNotifyRequest.account)
}
#endif
void GameLoginNotifyRequest::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameLoginNotifyRequest.account)
}
void GameLoginNotifyRequest::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameLoginNotifyRequest.account)
}
::std::string* GameLoginNotifyRequest::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameLoginNotifyRequest.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameLoginNotifyRequest::release_account() {
  // @@protoc_insertion_point(field_release:proto_security.GameLoginNotifyRequest.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameLoginNotifyRequest::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameLoginNotifyRequest.account)
}

// uint32 platform = 4;
void GameLoginNotifyRequest::clear_platform() {
  platform_ = 0u;
}
::google::protobuf::uint32 GameLoginNotifyRequest::platform() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLoginNotifyRequest.platform)
  return platform_;
}
void GameLoginNotifyRequest::set_platform(::google::protobuf::uint32 value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:proto_security.GameLoginNotifyRequest.platform)
}

// string region = 5;
void GameLoginNotifyRequest::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GameLoginNotifyRequest::region() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLoginNotifyRequest.region)
  return region_.GetNoArena();
}
void GameLoginNotifyRequest::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameLoginNotifyRequest.region)
}
#if LANG_CXX11
void GameLoginNotifyRequest::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameLoginNotifyRequest.region)
}
#endif
void GameLoginNotifyRequest::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameLoginNotifyRequest.region)
}
void GameLoginNotifyRequest::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameLoginNotifyRequest.region)
}
::std::string* GameLoginNotifyRequest::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameLoginNotifyRequest.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameLoginNotifyRequest::release_region() {
  // @@protoc_insertion_point(field_release:proto_security.GameLoginNotifyRequest.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameLoginNotifyRequest::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameLoginNotifyRequest.region)
}

// string biz_game = 6;
void GameLoginNotifyRequest::clear_biz_game() {
  biz_game_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GameLoginNotifyRequest::biz_game() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLoginNotifyRequest.biz_game)
  return biz_game_.GetNoArena();
}
void GameLoginNotifyRequest::set_biz_game(const ::std::string& value) {
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameLoginNotifyRequest.biz_game)
}
#if LANG_CXX11
void GameLoginNotifyRequest::set_biz_game(::std::string&& value) {
  
  biz_game_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameLoginNotifyRequest.biz_game)
}
#endif
void GameLoginNotifyRequest::set_biz_game(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameLoginNotifyRequest.biz_game)
}
void GameLoginNotifyRequest::set_biz_game(const char* value, size_t size) {
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameLoginNotifyRequest.biz_game)
}
::std::string* GameLoginNotifyRequest::mutable_biz_game() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameLoginNotifyRequest.biz_game)
  return biz_game_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameLoginNotifyRequest::release_biz_game() {
  // @@protoc_insertion_point(field_release:proto_security.GameLoginNotifyRequest.biz_game)
  
  return biz_game_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameLoginNotifyRequest::set_allocated_biz_game(::std::string* biz_game) {
  if (biz_game != NULL) {
    
  } else {
    
  }
  biz_game_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), biz_game);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameLoginNotifyRequest.biz_game)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameLogoutNotifyRequest::kUidFieldNumber;
const int GameLogoutNotifyRequest::kAccountTypeFieldNumber;
const int GameLogoutNotifyRequest::kAccountFieldNumber;
const int GameLogoutNotifyRequest::kPlatformFieldNumber;
const int GameLogoutNotifyRequest::kRegionFieldNumber;
const int GameLogoutNotifyRequest::kBizGameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameLogoutNotifyRequest::GameLogoutNotifyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_security.GameLogoutNotifyRequest)
}
GameLogoutNotifyRequest::GameLogoutNotifyRequest(const GameLogoutNotifyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  biz_game_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.biz_game().size() > 0) {
    biz_game_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.biz_game_);
  }
  ::memcpy(&uid_, &from.uid_,
    static_cast<size_t>(reinterpret_cast<char*>(&platform_) -
    reinterpret_cast<char*>(&uid_)) + sizeof(platform_));
  // @@protoc_insertion_point(copy_constructor:proto_security.GameLogoutNotifyRequest)
}

void GameLogoutNotifyRequest::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  biz_game_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&platform_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(platform_));
  _cached_size_ = 0;
}

GameLogoutNotifyRequest::~GameLogoutNotifyRequest() {
  // @@protoc_insertion_point(destructor:proto_security.GameLogoutNotifyRequest)
  SharedDtor();
}

void GameLogoutNotifyRequest::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  biz_game_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameLogoutNotifyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameLogoutNotifyRequest::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameLogoutNotifyRequest& GameLogoutNotifyRequest::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameLogoutNotifyRequest* GameLogoutNotifyRequest::New(::google::protobuf::Arena* arena) const {
  GameLogoutNotifyRequest* n = new GameLogoutNotifyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameLogoutNotifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_security.GameLogoutNotifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  biz_game_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&platform_) -
      reinterpret_cast<char*>(&uid_)) + sizeof(platform_));
  _internal_metadata_.Clear();
}

bool GameLogoutNotifyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_security.GameLogoutNotifyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 account_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_security.GameLogoutNotifyRequest.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 platform = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &platform_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_security.GameLogoutNotifyRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string biz_game = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_biz_game()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->biz_game().data(), static_cast<int>(this->biz_game().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_security.GameLogoutNotifyRequest.biz_game"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_security.GameLogoutNotifyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_security.GameLogoutNotifyRequest)
  return false;
#undef DO_
}

void GameLogoutNotifyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_security.GameLogoutNotifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // uint32 account_type = 2;
  if (this->account_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->account_type(), output);
  }

  // string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameLogoutNotifyRequest.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account(), output);
  }

  // uint32 platform = 4;
  if (this->platform() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->platform(), output);
  }

  // string region = 5;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameLogoutNotifyRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->region(), output);
  }

  // string biz_game = 6;
  if (this->biz_game().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->biz_game().data(), static_cast<int>(this->biz_game().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameLogoutNotifyRequest.biz_game");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->biz_game(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_security.GameLogoutNotifyRequest)
}

::google::protobuf::uint8* GameLogoutNotifyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_security.GameLogoutNotifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // uint32 account_type = 2;
  if (this->account_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->account_type(), target);
  }

  // string account = 3;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameLogoutNotifyRequest.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account(), target);
  }

  // uint32 platform = 4;
  if (this->platform() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->platform(), target);
  }

  // string region = 5;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameLogoutNotifyRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->region(), target);
  }

  // string biz_game = 6;
  if (this->biz_game().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->biz_game().data(), static_cast<int>(this->biz_game().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameLogoutNotifyRequest.biz_game");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->biz_game(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_security.GameLogoutNotifyRequest)
  return target;
}

size_t GameLogoutNotifyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_security.GameLogoutNotifyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string account = 3;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string region = 5;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // string biz_game = 6;
  if (this->biz_game().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->biz_game());
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 account_type = 2;
  if (this->account_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_type());
  }

  // uint32 platform = 4;
  if (this->platform() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->platform());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameLogoutNotifyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_security.GameLogoutNotifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GameLogoutNotifyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameLogoutNotifyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_security.GameLogoutNotifyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_security.GameLogoutNotifyRequest)
    MergeFrom(*source);
  }
}

void GameLogoutNotifyRequest::MergeFrom(const GameLogoutNotifyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_security.GameLogoutNotifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.biz_game().size() > 0) {

    biz_game_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.biz_game_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.account_type() != 0) {
    set_account_type(from.account_type());
  }
  if (from.platform() != 0) {
    set_platform(from.platform());
  }
}

void GameLogoutNotifyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_security.GameLogoutNotifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameLogoutNotifyRequest::CopyFrom(const GameLogoutNotifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_security.GameLogoutNotifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameLogoutNotifyRequest::IsInitialized() const {
  return true;
}

void GameLogoutNotifyRequest::Swap(GameLogoutNotifyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameLogoutNotifyRequest::InternalSwap(GameLogoutNotifyRequest* other) {
  using std::swap;
  account_.Swap(&other->account_);
  region_.Swap(&other->region_);
  biz_game_.Swap(&other->biz_game_);
  swap(uid_, other->uid_);
  swap(account_type_, other->account_type_);
  swap(platform_, other->platform_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameLogoutNotifyRequest::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameLogoutNotifyRequest

// uint32 uid = 1;
void GameLogoutNotifyRequest::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 GameLogoutNotifyRequest::uid() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLogoutNotifyRequest.uid)
  return uid_;
}
void GameLogoutNotifyRequest::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:proto_security.GameLogoutNotifyRequest.uid)
}

// uint32 account_type = 2;
void GameLogoutNotifyRequest::clear_account_type() {
  account_type_ = 0u;
}
::google::protobuf::uint32 GameLogoutNotifyRequest::account_type() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLogoutNotifyRequest.account_type)
  return account_type_;
}
void GameLogoutNotifyRequest::set_account_type(::google::protobuf::uint32 value) {
  
  account_type_ = value;
  // @@protoc_insertion_point(field_set:proto_security.GameLogoutNotifyRequest.account_type)
}

// string account = 3;
void GameLogoutNotifyRequest::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GameLogoutNotifyRequest::account() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLogoutNotifyRequest.account)
  return account_.GetNoArena();
}
void GameLogoutNotifyRequest::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameLogoutNotifyRequest.account)
}
#if LANG_CXX11
void GameLogoutNotifyRequest::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameLogoutNotifyRequest.account)
}
#endif
void GameLogoutNotifyRequest::set_account(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameLogoutNotifyRequest.account)
}
void GameLogoutNotifyRequest::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameLogoutNotifyRequest.account)
}
::std::string* GameLogoutNotifyRequest::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameLogoutNotifyRequest.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameLogoutNotifyRequest::release_account() {
  // @@protoc_insertion_point(field_release:proto_security.GameLogoutNotifyRequest.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameLogoutNotifyRequest::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameLogoutNotifyRequest.account)
}

// uint32 platform = 4;
void GameLogoutNotifyRequest::clear_platform() {
  platform_ = 0u;
}
::google::protobuf::uint32 GameLogoutNotifyRequest::platform() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLogoutNotifyRequest.platform)
  return platform_;
}
void GameLogoutNotifyRequest::set_platform(::google::protobuf::uint32 value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:proto_security.GameLogoutNotifyRequest.platform)
}

// string region = 5;
void GameLogoutNotifyRequest::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GameLogoutNotifyRequest::region() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLogoutNotifyRequest.region)
  return region_.GetNoArena();
}
void GameLogoutNotifyRequest::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameLogoutNotifyRequest.region)
}
#if LANG_CXX11
void GameLogoutNotifyRequest::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameLogoutNotifyRequest.region)
}
#endif
void GameLogoutNotifyRequest::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameLogoutNotifyRequest.region)
}
void GameLogoutNotifyRequest::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameLogoutNotifyRequest.region)
}
::std::string* GameLogoutNotifyRequest::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameLogoutNotifyRequest.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameLogoutNotifyRequest::release_region() {
  // @@protoc_insertion_point(field_release:proto_security.GameLogoutNotifyRequest.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameLogoutNotifyRequest::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameLogoutNotifyRequest.region)
}

// string biz_game = 6;
void GameLogoutNotifyRequest::clear_biz_game() {
  biz_game_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GameLogoutNotifyRequest::biz_game() const {
  // @@protoc_insertion_point(field_get:proto_security.GameLogoutNotifyRequest.biz_game)
  return biz_game_.GetNoArena();
}
void GameLogoutNotifyRequest::set_biz_game(const ::std::string& value) {
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameLogoutNotifyRequest.biz_game)
}
#if LANG_CXX11
void GameLogoutNotifyRequest::set_biz_game(::std::string&& value) {
  
  biz_game_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameLogoutNotifyRequest.biz_game)
}
#endif
void GameLogoutNotifyRequest::set_biz_game(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameLogoutNotifyRequest.biz_game)
}
void GameLogoutNotifyRequest::set_biz_game(const char* value, size_t size) {
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameLogoutNotifyRequest.biz_game)
}
::std::string* GameLogoutNotifyRequest::mutable_biz_game() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameLogoutNotifyRequest.biz_game)
  return biz_game_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameLogoutNotifyRequest::release_biz_game() {
  // @@protoc_insertion_point(field_release:proto_security.GameLogoutNotifyRequest.biz_game)
  
  return biz_game_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameLogoutNotifyRequest::set_allocated_biz_game(::std::string* biz_game) {
  if (biz_game != NULL) {
    
  } else {
    
  }
  biz_game_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), biz_game);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameLogoutNotifyRequest.biz_game)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameHeartBeatInfo::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameHeartBeatInfo::GameHeartBeatInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_security.GameHeartBeatInfo)
}
GameHeartBeatInfo::GameHeartBeatInfo(const GameHeartBeatInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uid_(from.uid_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto_security.GameHeartBeatInfo)
}

void GameHeartBeatInfo::SharedCtor() {
  _cached_size_ = 0;
}

GameHeartBeatInfo::~GameHeartBeatInfo() {
  // @@protoc_insertion_point(destructor:proto_security.GameHeartBeatInfo)
  SharedDtor();
}

void GameHeartBeatInfo::SharedDtor() {
}

void GameHeartBeatInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameHeartBeatInfo::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameHeartBeatInfo& GameHeartBeatInfo::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameHeartBeatInfo* GameHeartBeatInfo::New(::google::protobuf::Arena* arena) const {
  GameHeartBeatInfo* n = new GameHeartBeatInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameHeartBeatInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_security.GameHeartBeatInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uid_.Clear();
  _internal_metadata_.Clear();
}

bool GameHeartBeatInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_security.GameHeartBeatInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 uid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_uid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_security.GameHeartBeatInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_security.GameHeartBeatInfo)
  return false;
#undef DO_
}

void GameHeartBeatInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_security.GameHeartBeatInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 uid = 1;
  if (this->uid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _uid_cached_byte_size_));
  }
  for (int i = 0, n = this->uid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->uid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_security.GameHeartBeatInfo)
}

::google::protobuf::uint8* GameHeartBeatInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_security.GameHeartBeatInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 uid = 1;
  if (this->uid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _uid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->uid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_security.GameHeartBeatInfo)
  return target;
}

size_t GameHeartBeatInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_security.GameHeartBeatInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 uid = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->uid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameHeartBeatInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_security.GameHeartBeatInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GameHeartBeatInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameHeartBeatInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_security.GameHeartBeatInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_security.GameHeartBeatInfo)
    MergeFrom(*source);
  }
}

void GameHeartBeatInfo::MergeFrom(const GameHeartBeatInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_security.GameHeartBeatInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uid_.MergeFrom(from.uid_);
}

void GameHeartBeatInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_security.GameHeartBeatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameHeartBeatInfo::CopyFrom(const GameHeartBeatInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_security.GameHeartBeatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameHeartBeatInfo::IsInitialized() const {
  return true;
}

void GameHeartBeatInfo::Swap(GameHeartBeatInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameHeartBeatInfo::InternalSwap(GameHeartBeatInfo* other) {
  using std::swap;
  uid_.InternalSwap(&other->uid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameHeartBeatInfo::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameHeartBeatInfo

// repeated uint32 uid = 1;
int GameHeartBeatInfo::uid_size() const {
  return uid_.size();
}
void GameHeartBeatInfo::clear_uid() {
  uid_.Clear();
}
::google::protobuf::uint32 GameHeartBeatInfo::uid(int index) const {
  // @@protoc_insertion_point(field_get:proto_security.GameHeartBeatInfo.uid)
  return uid_.Get(index);
}
void GameHeartBeatInfo::set_uid(int index, ::google::protobuf::uint32 value) {
  uid_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto_security.GameHeartBeatInfo.uid)
}
void GameHeartBeatInfo::add_uid(::google::protobuf::uint32 value) {
  uid_.Add(value);
  // @@protoc_insertion_point(field_add:proto_security.GameHeartBeatInfo.uid)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GameHeartBeatInfo::uid() const {
  // @@protoc_insertion_point(field_list:proto_security.GameHeartBeatInfo.uid)
  return uid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GameHeartBeatInfo::mutable_uid() {
  // @@protoc_insertion_point(field_mutable_list:proto_security.GameHeartBeatInfo.uid)
  return &uid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

GameHeartBeatNotifyRequest::GameHeartBeatNotifyRequest_PlatformUidListEntry::GameHeartBeatNotifyRequest_PlatformUidListEntry() {}
GameHeartBeatNotifyRequest::GameHeartBeatNotifyRequest_PlatformUidListEntry::GameHeartBeatNotifyRequest_PlatformUidListEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata GameHeartBeatNotifyRequest::GameHeartBeatNotifyRequest_PlatformUidListEntry::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::file_level_metadata[3];
}
void GameHeartBeatNotifyRequest::GameHeartBeatNotifyRequest_PlatformUidListEntry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void GameHeartBeatNotifyRequest::GameHeartBeatNotifyRequest_PlatformUidListEntry::MergeFrom(const GameHeartBeatNotifyRequest_PlatformUidListEntry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameHeartBeatNotifyRequest::kPlatformUidListFieldNumber;
const int GameHeartBeatNotifyRequest::kRegionFieldNumber;
const int GameHeartBeatNotifyRequest::kBizGameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameHeartBeatNotifyRequest::GameHeartBeatNotifyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto_security.GameHeartBeatNotifyRequest)
}
GameHeartBeatNotifyRequest::GameHeartBeatNotifyRequest(const GameHeartBeatNotifyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platform_uid_list_.MergeFrom(from.platform_uid_list_);
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.region().size() > 0) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  biz_game_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.biz_game().size() > 0) {
    biz_game_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.biz_game_);
  }
  // @@protoc_insertion_point(copy_constructor:proto_security.GameHeartBeatNotifyRequest)
}

void GameHeartBeatNotifyRequest::SharedCtor() {
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  biz_game_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GameHeartBeatNotifyRequest::~GameHeartBeatNotifyRequest() {
  // @@protoc_insertion_point(destructor:proto_security.GameHeartBeatNotifyRequest)
  SharedDtor();
}

void GameHeartBeatNotifyRequest::SharedDtor() {
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  biz_game_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameHeartBeatNotifyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameHeartBeatNotifyRequest::descriptor() {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameHeartBeatNotifyRequest& GameHeartBeatNotifyRequest::default_instance() {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

GameHeartBeatNotifyRequest* GameHeartBeatNotifyRequest::New(::google::protobuf::Arena* arena) const {
  GameHeartBeatNotifyRequest* n = new GameHeartBeatNotifyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameHeartBeatNotifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto_security.GameHeartBeatNotifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  platform_uid_list_.Clear();
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  biz_game_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GameHeartBeatNotifyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto_security.GameHeartBeatNotifyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .proto_security.GameHeartBeatInfo> platform_uid_list = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          GameHeartBeatNotifyRequest_PlatformUidListEntry::Parser< ::google::protobuf::internal::MapField<
              GameHeartBeatNotifyRequest_PlatformUidListEntry,
              ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo > > parser(&platform_uid_list_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string region = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->region().data(), static_cast<int>(this->region().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_security.GameHeartBeatNotifyRequest.region"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string biz_game = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_biz_game()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->biz_game().data(), static_cast<int>(this->biz_game().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "proto_security.GameHeartBeatNotifyRequest.biz_game"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto_security.GameHeartBeatNotifyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto_security.GameHeartBeatNotifyRequest)
  return false;
#undef DO_
}

void GameHeartBeatNotifyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto_security.GameHeartBeatNotifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto_security.GameHeartBeatInfo> platform_uid_list = 1;
  if (!this->platform_uid_list().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->platform_uid_list().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->platform_uid_list().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >::const_iterator
          it = this->platform_uid_list().begin();
          it != this->platform_uid_list().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GameHeartBeatNotifyRequest_PlatformUidListEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(platform_uid_list_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<GameHeartBeatNotifyRequest_PlatformUidListEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >::const_iterator
          it = this->platform_uid_list().begin();
          it != this->platform_uid_list().end(); ++it) {
        entry.reset(platform_uid_list_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // string region = 2;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameHeartBeatNotifyRequest.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->region(), output);
  }

  // string biz_game = 3;
  if (this->biz_game().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->biz_game().data(), static_cast<int>(this->biz_game().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameHeartBeatNotifyRequest.biz_game");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->biz_game(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:proto_security.GameHeartBeatNotifyRequest)
}

::google::protobuf::uint8* GameHeartBeatNotifyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:proto_security.GameHeartBeatNotifyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint32, .proto_security.GameHeartBeatInfo> platform_uid_list = 1;
  if (!this->platform_uid_list().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->platform_uid_list().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->platform_uid_list().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >::const_iterator
          it = this->platform_uid_list().begin();
          it != this->platform_uid_list().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<GameHeartBeatNotifyRequest_PlatformUidListEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(platform_uid_list_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<GameHeartBeatNotifyRequest_PlatformUidListEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >::const_iterator
          it = this->platform_uid_list().begin();
          it != this->platform_uid_list().end(); ++it) {
        entry.reset(platform_uid_list_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // string region = 2;
  if (this->region().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->region().data(), static_cast<int>(this->region().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameHeartBeatNotifyRequest.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->region(), target);
  }

  // string biz_game = 3;
  if (this->biz_game().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->biz_game().data(), static_cast<int>(this->biz_game().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "proto_security.GameHeartBeatNotifyRequest.biz_game");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->biz_game(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto_security.GameHeartBeatNotifyRequest)
  return target;
}

size_t GameHeartBeatNotifyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto_security.GameHeartBeatNotifyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<uint32, .proto_security.GameHeartBeatInfo> platform_uid_list = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->platform_uid_list_size());
  {
    ::google::protobuf::scoped_ptr<GameHeartBeatNotifyRequest_PlatformUidListEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >::const_iterator
        it = this->platform_uid_list().begin();
        it != this->platform_uid_list().end(); ++it) {
      entry.reset(platform_uid_list_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string region = 2;
  if (this->region().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->region());
  }

  // string biz_game = 3;
  if (this->biz_game().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->biz_game());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameHeartBeatNotifyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto_security.GameHeartBeatNotifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GameHeartBeatNotifyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameHeartBeatNotifyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto_security.GameHeartBeatNotifyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto_security.GameHeartBeatNotifyRequest)
    MergeFrom(*source);
  }
}

void GameHeartBeatNotifyRequest::MergeFrom(const GameHeartBeatNotifyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto_security.GameHeartBeatNotifyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  platform_uid_list_.MergeFrom(from.platform_uid_list_);
  if (from.region().size() > 0) {

    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  if (from.biz_game().size() > 0) {

    biz_game_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.biz_game_);
  }
}

void GameHeartBeatNotifyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto_security.GameHeartBeatNotifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameHeartBeatNotifyRequest::CopyFrom(const GameHeartBeatNotifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto_security.GameHeartBeatNotifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameHeartBeatNotifyRequest::IsInitialized() const {
  return true;
}

void GameHeartBeatNotifyRequest::Swap(GameHeartBeatNotifyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameHeartBeatNotifyRequest::InternalSwap(GameHeartBeatNotifyRequest* other) {
  using std::swap;
  platform_uid_list_.Swap(&other->platform_uid_list_);
  region_.Swap(&other->region_);
  biz_game_.Swap(&other->biz_game_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameHeartBeatNotifyRequest::GetMetadata() const {
  protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_server_5fonly_2fcmd_5fsecurity_2eserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameHeartBeatNotifyRequest

// map<uint32, .proto_security.GameHeartBeatInfo> platform_uid_list = 1;
int GameHeartBeatNotifyRequest::platform_uid_list_size() const {
  return platform_uid_list_.size();
}
void GameHeartBeatNotifyRequest::clear_platform_uid_list() {
  platform_uid_list_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >&
GameHeartBeatNotifyRequest::platform_uid_list() const {
  // @@protoc_insertion_point(field_map:proto_security.GameHeartBeatNotifyRequest.platform_uid_list)
  return platform_uid_list_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::proto_security::GameHeartBeatInfo >*
GameHeartBeatNotifyRequest::mutable_platform_uid_list() {
  // @@protoc_insertion_point(field_mutable_map:proto_security.GameHeartBeatNotifyRequest.platform_uid_list)
  return platform_uid_list_.MutableMap();
}

// string region = 2;
void GameHeartBeatNotifyRequest::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GameHeartBeatNotifyRequest::region() const {
  // @@protoc_insertion_point(field_get:proto_security.GameHeartBeatNotifyRequest.region)
  return region_.GetNoArena();
}
void GameHeartBeatNotifyRequest::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameHeartBeatNotifyRequest.region)
}
#if LANG_CXX11
void GameHeartBeatNotifyRequest::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameHeartBeatNotifyRequest.region)
}
#endif
void GameHeartBeatNotifyRequest::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameHeartBeatNotifyRequest.region)
}
void GameHeartBeatNotifyRequest::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameHeartBeatNotifyRequest.region)
}
::std::string* GameHeartBeatNotifyRequest::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameHeartBeatNotifyRequest.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameHeartBeatNotifyRequest::release_region() {
  // @@protoc_insertion_point(field_release:proto_security.GameHeartBeatNotifyRequest.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameHeartBeatNotifyRequest::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameHeartBeatNotifyRequest.region)
}

// string biz_game = 3;
void GameHeartBeatNotifyRequest::clear_biz_game() {
  biz_game_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GameHeartBeatNotifyRequest::biz_game() const {
  // @@protoc_insertion_point(field_get:proto_security.GameHeartBeatNotifyRequest.biz_game)
  return biz_game_.GetNoArena();
}
void GameHeartBeatNotifyRequest::set_biz_game(const ::std::string& value) {
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto_security.GameHeartBeatNotifyRequest.biz_game)
}
#if LANG_CXX11
void GameHeartBeatNotifyRequest::set_biz_game(::std::string&& value) {
  
  biz_game_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto_security.GameHeartBeatNotifyRequest.biz_game)
}
#endif
void GameHeartBeatNotifyRequest::set_biz_game(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto_security.GameHeartBeatNotifyRequest.biz_game)
}
void GameHeartBeatNotifyRequest::set_biz_game(const char* value, size_t size) {
  
  biz_game_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto_security.GameHeartBeatNotifyRequest.biz_game)
}
::std::string* GameHeartBeatNotifyRequest::mutable_biz_game() {
  
  // @@protoc_insertion_point(field_mutable:proto_security.GameHeartBeatNotifyRequest.biz_game)
  return biz_game_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameHeartBeatNotifyRequest::release_biz_game() {
  // @@protoc_insertion_point(field_release:proto_security.GameHeartBeatNotifyRequest.biz_game)
  
  return biz_game_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameHeartBeatNotifyRequest::set_allocated_biz_game(::std::string* biz_game) {
  if (biz_game != NULL) {
    
  } else {
    
  }
  biz_game_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), biz_game);
  // @@protoc_insertion_point(field_set_allocated:proto_security.GameHeartBeatNotifyRequest.biz_game)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto_security

// @@protoc_insertion_point(global_scope)
