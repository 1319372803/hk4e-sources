// File: /data/jenkins/jenkins_hk4e/workspace/hk4e_3.4_dev/multiserver/src/card_game/skill/gcg_condition.cpp

// Line 81: range 000000000E12EC62-000000000E12F839
int32_t __cdecl ConfigGCGLogicConditionImpl::checkCondition(
        ConfigGCGLogicConditionImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  int32_t v3; // r14d
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  std::__shared_ptr_access<data::ConfigGCGCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v7; // rax
  unsigned __int64 v8; // rdx
  common::milog::MiLogStream *v9; // rax
  common::milog::MiLogStream *v10; // rax
  std::__shared_ptr_access<data::ConfigGCGCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v11; // rax
  unsigned __int64 v12; // rdx
  common::milog::MiLogStream *v13; // rax
  common::milog::MiLogStream *v14; // rax
  common::milog::MiLogStream *v15; // rax
  common::milog::MiLogStream *v16; // rcx
  const std::shared_ptr<data::ConfigGCGCondition> *v17; // rax
  int v18; // r15d
  std::__shared_ptr_access<data::ConfigGCGCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // rax
  unsigned __int64 v20; // rdx
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  int32_t result; // eax
  ConfigGCGLogicConditionImpl::checkCondition::<lambda(int32_t, int32_t)> __f; // [rsp+2Eh] [rbp-152h] BYREF
  bool is_start; // [rsp+2Fh] [rbp-151h]
  int32_t last_child_result; // [rsp+30h] [rbp-150h]
  int32_t last_child_result_0; // [rsp+34h] [rbp-14Ch]
  std::vector<std::shared_ptr<data::ConfigGCGCondition>>::iterator __for_begin; // [rsp+38h] [rbp-148h] BYREF
  std::vector<std::shared_ptr<data::ConfigGCGCondition>>::iterator __for_end; // [rsp+40h] [rbp-140h] BYREF
  std::vector<std::shared_ptr<data::ConfigGCGCondition>> *__for_range_1; // [rsp+48h] [rbp-138h]
  std::vector<std::shared_ptr<data::ConfigGCGCondition>> *__for_range_0; // [rsp+50h] [rbp-130h]
  std::shared_ptr<data::ConfigGCGCondition> *condition_0; // [rsp+58h] [rbp-128h]
  std::vector<std::shared_ptr<data::ConfigGCGCondition>> *__for_range; // [rsp+60h] [rbp-120h]
  std::shared_ptr<data::ConfigGCGCondition> *condition; // [rsp+68h] [rbp-118h]
  common::milog::MiLogStream v40; // [rsp+70h] [rbp-110h] BYREF
  char v41[240]; // [rsp+90h] [rbp-F0h] BYREF

  v4 = (unsigned __int64)v41;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_2(192LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "6 32 4 8 index:82 48 4 11 skill_id:87 64 4 22 last_condition_ret:192 80 4 20 cur_condtion_ret:20"
                        "0 96 16 17 condition_ptr:194 128 32 16 compare_func:134";
  *(_QWORD *)(v4 + 16) = ConfigGCGLogicConditionImpl::checkCondition;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556924;
  v6[536862722] = -234556924;
  v6[536862723] = -219021312;
  v6[536862725] = -202116109;
  *(_DWORD *)(v4 + 32) = 0;
  if ( std::vector<std::shared_ptr<data::ConfigGCGCondition>>::empty(&this->conditions) )
  {
    v3 = 0;
    goto LABEL_79;
  }
  *(_DWORD *)(v4 + 48) = GCGSkill::getSkillId(cur_skill);
  if ( *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->type);
  }
  if ( this->type == AND )
  {
    last_child_result = 0;
    __for_range = &this->conditions;
    __for_begin._M_current = std::vector<std::shared_ptr<data::ConfigGCGCondition>>::begin(&this->conditions)._M_current;
    __for_end._M_current = std::vector<std::shared_ptr<data::ConfigGCGCondition>>::end(&this->conditions)._M_current;
    while ( __gnu_cxx::operator!=<std::shared_ptr<data::ConfigGCGCondition> *,std::vector<std::shared_ptr<data::ConfigGCGCondition>>>(
              &__for_begin,
              &__for_end) )
    {
      condition = __gnu_cxx::__normal_iterator<std::shared_ptr<data::ConfigGCGCondition> *,std::vector<std::shared_ptr<data::ConfigGCGCondition>>>::operator*(&__for_begin);
      if ( !std::operator==<data::ConfigGCGCondition>(condition, 0LL) )
      {
        v7 = std::__shared_ptr_access<data::ConfigGCGCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)condition);
        if ( *(_BYTE *)(((unsigned __int64)v7 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v7);
        v8 = (unsigned __int64)(v7->_vptr_ConfigGCGCondition + 7);
        if ( *(_BYTE *)((v8 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v7->_vptr_ConfigGCGCondition + 7);
        last_child_result = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, const GCGEffectContext *))v8)(
                              v7,
                              cur_skill,
                              context);
        if ( last_child_result < 0 )
        {
          common::milog::MiLogStream::create(
            &v40,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/card_game/skill/gcg_condition.cpp",
            "checkCondition",
            103);
          v9 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                 &v40,
                 (const unsigned int *)(v4 + 48));
          v10 = common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(
                  v9,
                  (const char (*)[18])" unmeet at index:");
          common::milog::MiLogStream::operator<<<int,(int *)0>(v10, (const int *)(v4 + 32));
          common::milog::MiLogStream::~MiLogStream(&v40);
          break;
        }
        ++*(_DWORD *)(v4 + 32);
      }
      __gnu_cxx::__normal_iterator<std::shared_ptr<data::ConfigGCGCondition> *,std::vector<std::shared_ptr<data::ConfigGCGCondition>>>::operator++(&__for_begin);
    }
    v3 = last_child_result;
    goto LABEL_79;
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->type);
  }
  if ( this->type == OR )
  {
    last_child_result_0 = -1;
    __for_range_0 = &this->conditions;
    __for_begin._M_current = std::vector<std::shared_ptr<data::ConfigGCGCondition>>::begin(&this->conditions)._M_current;
    __for_end._M_current = std::vector<std::shared_ptr<data::ConfigGCGCondition>>::end(&this->conditions)._M_current;
    while ( __gnu_cxx::operator!=<std::shared_ptr<data::ConfigGCGCondition> *,std::vector<std::shared_ptr<data::ConfigGCGCondition>>>(
              &__for_begin,
              &__for_end) )
    {
      condition_0 = __gnu_cxx::__normal_iterator<std::shared_ptr<data::ConfigGCGCondition> *,std::vector<std::shared_ptr<data::ConfigGCGCondition>>>::operator*(&__for_begin);
      if ( !std::operator==<data::ConfigGCGCondition>(condition_0, 0LL) )
      {
        v11 = std::__shared_ptr_access<data::ConfigGCGCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)condition_0);
        if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v11);
        v12 = (unsigned __int64)(v11->_vptr_ConfigGCGCondition + 7);
        if ( *(_BYTE *)((v12 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v11->_vptr_ConfigGCGCondition + 7);
        last_child_result_0 = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, const GCGEffectContext *))v12)(
                                v11,
                                cur_skill,
                                context);
        if ( last_child_result_0 >= 0 )
        {
          common::milog::MiLogStream::create(
            &v40,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/card_game/skill/gcg_condition.cpp",
            "checkCondition",
            124);
          v13 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                  &v40,
                  (const unsigned int *)(v4 + 48));
          v14 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(
                  v13,
                  (const char (*)[16])" meet at index:");
          common::milog::MiLogStream::operator<<<int,(int *)0>(v14, (const int *)(v4 + 32));
          common::milog::MiLogStream::~MiLogStream(&v40);
          break;
        }
        ++*(_DWORD *)(v4 + 32);
      }
      __gnu_cxx::__normal_iterator<std::shared_ptr<data::ConfigGCGCondition> *,std::vector<std::shared_ptr<data::ConfigGCGCondition>>>::operator++(&__for_begin);
    }
    v3 = last_child_result_0;
    goto LABEL_79;
  }
  if ( *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->type);
  }
  if ( this->type != EQUAL
    && this->type != LARGE
    && this->type != LARGE_EQUAL
    && this->type != LESS_EQUAL
    && this->type != LESS
    && this->type != NOT_EQUAL )
  {
    common::milog::MiLogStream::create(
      &v40,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      219);
    v26 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(&v40, (const unsigned int *)(v4 + 48));
    common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(v26, (const char (*)[24])" not support type skill");
    common::milog::MiLogStream::~MiLogStream(&v40);
    v3 = -1;
    goto LABEL_79;
  }
  std::function<bool ()(int,int)>::function((std::function<bool(int,int)> *const)(v4 + 128));
  if ( *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->type);
  }
  switch ( this->type )
  {
    case LARGE:
      std::function<bool ()(int,int)>::operator=<ConfigGCGLogicConditionImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(int,int)#2}>(
        (std::function<bool(int,int)> *const)(v4 + 128),
        &__f);
      goto LABEL_56;
    case LARGE_EQUAL:
      std::function<bool ()(int,int)>::operator=<ConfigGCGLogicConditionImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(int,int)#3}>(
        (std::function<bool(int,int)> *const)(v4 + 128),
        &__f);
      goto LABEL_56;
    case EQUAL:
      std::function<bool ()(int,int)>::operator=<ConfigGCGLogicConditionImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(int,int)#1}>(
        (std::function<bool(int,int)> *const)(v4 + 128),
        &__f);
      goto LABEL_56;
    case LESS_EQUAL:
      std::function<bool ()(int,int)>::operator=<ConfigGCGLogicConditionImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(int,int)#4}>(
        (std::function<bool(int,int)> *const)(v4 + 128),
        &__f);
      goto LABEL_56;
    case LESS:
      std::function<bool ()(int,int)>::operator=<ConfigGCGLogicConditionImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(int,int)#5}>(
        (std::function<bool(int,int)> *const)(v4 + 128),
        &__f);
      goto LABEL_56;
    case NOT_EQUAL:
      std::function<bool ()(int,int)>::operator=<ConfigGCGLogicConditionImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(int,int)#6}>(
        (std::function<bool(int,int)> *const)(v4 + 128),
        &__f);
LABEL_56:
      *(_DWORD *)(v4 + 64) = 0;
      is_start = 0;
      __for_range_1 = &this->conditions;
      __for_begin._M_current = std::vector<std::shared_ptr<data::ConfigGCGCondition>>::begin(&this->conditions)._M_current;
      __for_end._M_current = std::vector<std::shared_ptr<data::ConfigGCGCondition>>::end(__for_range_1)._M_current;
      break;
    default:
      common::milog::MiLogStream::create(
        &v40,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        187);
      v15 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              &v40,
              (const unsigned int *)(v4 + 48));
      v16 = common::milog::MiLogStream::operator<<<char [25],(char *[25])0>(
              v15,
              (const char (*)[25])" unknown condition type:");
      if ( *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->type);
      }
      *(_DWORD *)(v4 + 80) = this->type;
      common::milog::MiLogStream::operator<<<int,(int *)0>(v16, (const int *)(v4 + 80));
      common::milog::MiLogStream::~MiLogStream(&v40);
      v3 = 0;
      goto LABEL_77;
  }
  while ( __gnu_cxx::operator!=<std::shared_ptr<data::ConfigGCGCondition> *,std::vector<std::shared_ptr<data::ConfigGCGCondition>>>(
            &__for_begin,
            &__for_end) )
  {
    v17 = __gnu_cxx::__normal_iterator<std::shared_ptr<data::ConfigGCGCondition> *,std::vector<std::shared_ptr<data::ConfigGCGCondition>>>::operator*(&__for_begin);
    std::shared_ptr<data::ConfigGCGCondition>::shared_ptr(
      (std::shared_ptr<data::ConfigGCGCondition> *const)(v4 + 96),
      v17);
    if ( std::operator==<data::ConfigGCGCondition>((const std::shared_ptr<data::ConfigGCGCondition> *)(v4 + 96), 0LL) )
    {
      v18 = 0;
    }
    else
    {
      v19 = std::__shared_ptr_access<data::ConfigGCGCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
      if ( *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000) )
        __asan_report_load8(v19);
      v20 = (unsigned __int64)(v19->_vptr_ConfigGCGCondition + 7);
      if ( *(_BYTE *)((v20 >> 3) + 0x7FFF8000) )
        __asan_report_load8(v19->_vptr_ConfigGCGCondition + 7);
      *(_DWORD *)(v4 + 80) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, const GCGEffectContext *))v20)(
                               v19,
                               cur_skill,
                               context);
      if ( !is_start )
      {
        is_start = 1;
LABEL_72:
        *(_DWORD *)(v4 + 64) = *(_DWORD *)(v4 + 80);
        v18 = 2;
        goto LABEL_73;
      }
      if ( !std::function<bool ()(int,int)>::operator bool((const std::function<bool(int,int)> *const)(v4 + 128))
        || std::function<bool ()(int,int)>::operator()(
             (const std::function<bool(int,int)> *const)(v4 + 128),
             *(_DWORD *)(v4 + 64),
             *(_DWORD *)(v4 + 80)) )
      {
        goto LABEL_72;
      }
      common::milog::MiLogStream::create(
        &v40,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        209);
      v22 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
              &v40,
              (const unsigned int *)(v4 + 48));
      v23 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
              v22,
              (const char (*)[28])" unmeet last_condition_ret:");
      v24 = common::milog::MiLogStream::operator<<<int,(int *)0>(v23, (const int *)(v4 + 64));
      v25 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(
              v24,
              (const char (*)[19])" cur_condtion_ret:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v25, (const int *)(v4 + 80));
      common::milog::MiLogStream::~MiLogStream(&v40);
      v3 = -1;
      v18 = 1;
    }
LABEL_73:
    std::shared_ptr<data::ConfigGCGCondition>::~shared_ptr((std::shared_ptr<data::ConfigGCGCondition> *const)(v4 + 96));
    if ( v18 && v18 != 2 )
      goto LABEL_77;
    __gnu_cxx::__normal_iterator<std::shared_ptr<data::ConfigGCGCondition> *,std::vector<std::shared_ptr<data::ConfigGCGCondition>>>::operator++(&__for_begin);
  }
  v3 = 0;
LABEL_77:
  std::function<bool ()(int,int)>::~function((std::function<bool(int,int)> *const)(v4 + 128));
LABEL_79:
  result = v3;
  if ( v41 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 139: range 000000000E12EBC6-000000000E12EBDE
bool __cdecl ConfigGCGLogicConditionImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(int,int)#1}::operator()(
        const ConfigGCGLogicConditionImpl::checkCondition::<lambda(int32_t, int32_t)> *const __closure,
        int32_t left,
        int32_t right)
{
  return left == right;
};

// Line 147: range 000000000E12EBE0-000000000E12EBF8
bool __cdecl ConfigGCGLogicConditionImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(int,int)#2}::operator()(
        const ConfigGCGLogicConditionImpl::checkCondition::<lambda(int32_t, int32_t)> *const __closure,
        int32_t left,
        int32_t right)
{
  return left > right;
};

// Line 155: range 000000000E12EBFA-000000000E12EC12
bool __cdecl ConfigGCGLogicConditionImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(int,int)#3}::operator()(
        const ConfigGCGLogicConditionImpl::checkCondition::<lambda(int32_t, int32_t)> *const __closure,
        int32_t left,
        int32_t right)
{
  return left >= right;
};

// Line 163: range 000000000E12EC14-000000000E12EC2C
bool __cdecl ConfigGCGLogicConditionImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(int,int)#4}::operator()(
        const ConfigGCGLogicConditionImpl::checkCondition::<lambda(int32_t, int32_t)> *const __closure,
        int32_t left,
        int32_t right)
{
  return left <= right;
};

// Line 171: range 000000000E12EC2E-000000000E12EC46
bool __cdecl ConfigGCGLogicConditionImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(int,int)#5}::operator()(
        const ConfigGCGLogicConditionImpl::checkCondition::<lambda(int32_t, int32_t)> *const __closure,
        int32_t left,
        int32_t right)
{
  return left < right;
};

// Line 179: range 000000000E12EC48-000000000E12EC60
bool __cdecl ConfigGCGLogicConditionImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(int,int)#6}::operator()(
        const ConfigGCGLogicConditionImpl::checkCondition::<lambda(int32_t, int32_t)> *const __closure,
        int32_t left,
        int32_t right)
{
  return left != right;
};

// Line 227: range 000000000E12F83A-000000000E12FB8B
int32_t __cdecl ConfigGCGConditionConstIntegerValueImpl::checkCondition(
        ConfigGCGConditionConstIntegerValueImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  common::milog::MiLogStream *v3; // rax
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v5; // r12
  void (__fastcall **v6)(char *, ConfigGCGConditionConstIntegerValueImpl *const); // rax
  char v7; // bl
  ConfigGCGConditionConstIntegerValueImpl *v8; // rdx
  __int64 (__fastcall **v9)(ConfigGCGConditionConstIntegerValueImpl *); // rax
  const char *v10; // rax
  void (__fastcall **v11)(common::milog::MiLogStream *, ConfigGCGConditionConstIntegerValueImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v12; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v13; // rcx
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v14; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  int32_t const_value; // r12d
  std::allocator<char> __a; // [rsp+2Fh] [rbp-51h] BYREF
  char v20[32]; // [rsp+30h] [rbp-50h] BYREF
  common::milog::MiLogStream v21; // [rsp+50h] [rbp-30h] BYREF

  common::milog::MiLogStream::create(
    &v21,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/card_game/skill/gcg_condition.cpp",
    "checkCondition",
    228);
  v3 = common::milog::MiLogStream::operator<<<char [59],(char *[59])0>(
         &v21,
         (const char (*)[59])"ConfigGCGConditionConstIntegerValue checkCondition result:");
  common::milog::MiLogStream::operator<<<int,(int *)0>(v3, &this->const_value);
  common::milog::MiLogStream::~MiLogStream(&v21);
  LogContext = GCGEffectContext::getLogContext(context);
  v5 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
    __asan_report_load8(this);
  v6 = (void (__fastcall **)(char *, ConfigGCGConditionConstIntegerValueImpl *const))(this->_vptr_ConfigGCGCondition + 8);
  if ( *(_BYTE *)(((unsigned __int64)v6 >> 3) + 0x7FFF8000) )
    __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
  (*v6)(v20, this);
  v7 = 0;
  if ( (unsigned __int8)std::string::empty(v20) )
  {
    std::allocator<char>::allocator(&__a);
    v7 = 1;
    v8 = this;
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (__int64 (__fastcall **)(ConfigGCGConditionConstIntegerValueImpl *))(this->_vptr_ConfigGCGCondition + 4);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
    v10 = (const char *)(*v9)(v8);
    std::string::basic_string<std::allocator<char>>((std::string *const)&v21, v10, &__a);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v11 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionConstIntegerValueImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v11)(&v21, this);
  }
  v12 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v5, (const std::string *)&v21);
  v13 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v12, ":");
  if ( *(_BYTE *)(((unsigned __int64)&this->const_value >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->const_value >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->const_value);
  }
  v14 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v13, this->const_value);
  v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v14, ":");
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, 229);
  if ( *(_BYTE *)(((unsigned __int64)&this->const_value >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->const_value >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->const_value);
  }
  const_value = this->const_value;
  std::string::~string(&v21);
  if ( v7 )
    std::allocator<char>::~allocator(&__a);
  std::string::~string(v20);
  return const_value;
};

// Line 234: range 000000000E12FB8C-000000000E1303C1
int32_t __cdecl ConfigGCGConditionGlobalFetchCurSkillImpl::checkCondition(
        ConfigGCGConditionGlobalFetchCurSkillImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurSkillImpl *const); // rax
  char v10; // r13
  ConfigGCGConditionGlobalFetchCurSkillImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchCurSkillImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchCurSkillImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  const LogContext *v24; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v25; // r15
  void (__fastcall **v26)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurSkillImpl *const); // rax
  char v27; // r14
  ConfigGCGConditionGlobalFetchCurSkillImpl *v28; // rdx
  __int64 (__fastcall **v29)(ConfigGCGConditionGlobalFetchCurSkillImpl *); // rax
  const char *v30; // rax
  void (__fastcall **v31)(std::string *, ConfigGCGConditionGlobalFetchCurSkillImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-B1h] BYREF
  common::milog::MiLogStream v39; // [rsp+30h] [rbp-B0h] BYREF
  std::string val; // [rsp+50h] [rbp-90h] BYREF
  char v41[112]; // [rsp+70h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v41;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 4 12 skill_id:240";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchCurSkillImpl::checkCondition;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202116348;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  if ( std::operator==<GCGSkillUseParam>(&context->skill_param->trigger_window_param_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v39,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      237);
    v6 = common::milog::MiLogStream::operator<<<char [79],(char *[79])0>(
           &v39,
           (const char (*)[79])"ConfigGCGConditionGlobalFetchCurSkill trigger_windows_param is nullptr, param:");
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v39);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurSkillImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v39, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v39) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurSkillImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurSkillImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                  + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 238);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    v20 = std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
    *(_DWORD *)(v3 + 32) = GCGSkillUseParam::getSkillId(v20);
    common::milog::MiLogStream::create(
      &v39,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      241);
    v21 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
            &v39,
            (const char (*)[49])"ConfigGCGConditionGlobalFetchCurSkill cur_skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    v22 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, &val);
    v23 = common::milog::MiLogStream::operator<<<char [33],(char *[33])0>(
            v22,
            (const char (*)[33])" fetch cur trigger window skill:");
    common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v23, (const unsigned int *)(v3 + 32));
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v39);
    v24 = GCGEffectContext::getLogContext(context);
    v25 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v24->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v26 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurSkillImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v26 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v26)(&v39, this);
    v27 = 0;
    if ( (unsigned __int8)std::string::empty(&v39) )
    {
      std::allocator<char>::allocator(&__a);
      v27 = 1;
      v28 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v29 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurSkillImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v30 = (const char *)(*v29)(v28);
      std::string::basic_string<std::allocator<char>>(&val, v30, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v31 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurSkillImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                  + 8);
      if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v31)(&val, this);
    }
    v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v25, &val);
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, *(_DWORD *)(v3 + 32));
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, 242);
    v19 = *(_DWORD *)(v3 + 32);
    std::string::~string(&val);
    if ( v27 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v39);
  result = v19;
  if ( v41 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 247: range 000000000E1303C2-000000000E13101E
int32_t __cdecl ConfigGCGConditionGlobalFetchCurCardImpl::checkCondition(
        ConfigGCGConditionGlobalFetchCurCardImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // rbx
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardImpl *const); // rax
  char v10; // bl
  ConfigGCGConditionGlobalFetchCurCardImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchCurCardImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchCurCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  const LogContext *v22; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v23; // r15
  void (__fastcall **v24)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardImpl *const); // rax
  char v25; // r14
  ConfigGCGConditionGlobalFetchCurCardImpl *v26; // rdx
  __int64 (__fastcall **v27)(ConfigGCGConditionGlobalFetchCurCardImpl *); // rax
  const char *v28; // rax
  void (__fastcall **v29)(std::string *, ConfigGCGConditionGlobalFetchCurCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v34; // rax
  common::milog::MiLogStream *v35; // r14
  common::milog::MiLogStream *v36; // rax
  common::milog::MiLogStream *v37; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v38; // rax
  common::milog::MiLogStream *v39; // rax
  common::milog::MiLogStream *v40; // rax
  const LogContext *v41; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v42; // r15
  void (__fastcall **v43)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardImpl *const); // rax
  char v44; // r14
  ConfigGCGConditionGlobalFetchCurCardImpl *v45; // rdx
  __int64 (__fastcall **v46)(ConfigGCGConditionGlobalFetchCurCardImpl *); // rax
  const char *v47; // rax
  void (__fastcall **v48)(std::string *, ConfigGCGConditionGlobalFetchCurCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v51; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v52; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-F1h] BYREF
  common::milog::MiLogStream v56; // [rsp+30h] [rbp-F0h] BYREF
  common::milog::MiLogStream v57; // [rsp+50h] [rbp-D0h] BYREF
  std::string val; // [rsp+70h] [rbp-B0h] BYREF
  char v59[144]; // [rsp+90h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v59;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 10 result:259 64 16 19 played_card_ptr:253";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchCurCardImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  if ( std::operator==<GCGSkillUseParam>(&context->skill_param->trigger_window_param_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v57,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      250);
    v6 = common::milog::MiLogStream::operator<<<char [78],(char *[78])0>(
           &v57,
           (const char (*)[78])"ConfigGCGConditionGlobalFetchCurCard trigger_windows_param is nullptr, param:");
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v57);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v57, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v57) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurCardImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurCardImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                 + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 251);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v57);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    v20 = std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
    std::shared_ptr<GCGCard>::shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64), &v20->source_card_ptr);
    if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v57,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        256);
      v21 = common::milog::MiLogStream::operator<<<char [91],(char *[91])0>(
              &v57,
              (const char (*)[91])"ConfigGCGConditionGlobalFetchCurCard checkCondition get played_card_ptr is nullptr, param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v57);
      v22 = GCGEffectContext::getLogContext(context);
      v23 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v22->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v24)(&v57, this);
      v25 = 0;
      if ( (unsigned __int8)std::string::empty(&v57) )
      {
        std::allocator<char>::allocator(&__a);
        v25 = 1;
        v26 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurCardImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v28 = (const char *)(*v27)(v26);
        std::string::basic_string<std::allocator<char>>(&val, v28, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v29 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v29)(&val, this);
      }
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v23, &val);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, -1);
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, 257);
      v19 = -1;
      std::string::~string(&val);
      if ( v25 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      v34 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      *(_DWORD *)(v3 + 48) = GCGCard::getGuid(v34);
      common::milog::MiLogStream::create(
        &v56,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        260);
      v35 = common::milog::MiLogStream::operator<<<char [76],(char *[76])0>(
              &v56,
              (const char (*)[76])"ConfigGCGConditionGlobalFetchCurCard get cur trigger character card, skill:");
      GCGSkill::getName[abi:cxx11]((std::string *)&v57, cur_skill);
      v36 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v35, (const std::string *)&v57);
      v37 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v36, (const char (*)[13])", play card:");
      v38 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      GCGCard::getDesc[abi:cxx11](&val, v38);
      v39 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v37, &val);
      v40 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v39, (const char (*)[10])", result:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v40, (const int *)(v3 + 48));
      std::string::~string(&val);
      std::string::~string(&v57);
      common::milog::MiLogStream::~MiLogStream(&v56);
      v41 = GCGEffectContext::getLogContext(context);
      v42 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v41->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v43 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v43)(&v57, this);
      v44 = 0;
      if ( (unsigned __int8)std::string::empty(&v57) )
      {
        std::allocator<char>::allocator(&__a);
        v44 = 1;
        v45 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v46 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurCardImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v46 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v47 = (const char *)(*v46)(v45);
        std::string::basic_string<std::allocator<char>>(&val, v47, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v48 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v48 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v48)(&val, this);
      }
      v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v42, &val);
      v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, ":");
      v51 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, *(_DWORD *)(v3 + 48));
      v52 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v51, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v52, 261);
      v19 = *(_DWORD *)(v3 + 48);
      std::string::~string(&val);
      if ( v44 )
        std::allocator<char>::~allocator(&__a);
    }
    std::string::~string(&v57);
    std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  }
  result = v19;
  if ( v59 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 266: range 000000000E131020-000000000E131C7C
int32_t __cdecl ConfigGCGConditionGlobalFetchSourceCharacterImpl::checkCondition(
        ConfigGCGConditionGlobalFetchSourceCharacterImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // rbx
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterImpl *const); // rax
  char v10; // bl
  ConfigGCGConditionGlobalFetchSourceCharacterImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchSourceCharacterImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  const LogContext *v22; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v23; // r15
  void (__fastcall **v24)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterImpl *const); // rax
  char v25; // r14
  ConfigGCGConditionGlobalFetchSourceCharacterImpl *v26; // rdx
  __int64 (__fastcall **v27)(ConfigGCGConditionGlobalFetchSourceCharacterImpl *); // rax
  const char *v28; // rax
  void (__fastcall **v29)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v34; // rax
  common::milog::MiLogStream *v35; // r14
  common::milog::MiLogStream *v36; // rax
  common::milog::MiLogStream *v37; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v38; // rax
  common::milog::MiLogStream *v39; // rax
  common::milog::MiLogStream *v40; // rax
  const LogContext *v41; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v42; // r15
  void (__fastcall **v43)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterImpl *const); // rax
  char v44; // r14
  ConfigGCGConditionGlobalFetchSourceCharacterImpl *v45; // rdx
  __int64 (__fastcall **v46)(ConfigGCGConditionGlobalFetchSourceCharacterImpl *); // rax
  const char *v47; // rax
  void (__fastcall **v48)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v51; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v52; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-F1h] BYREF
  common::milog::MiLogStream v56; // [rsp+30h] [rbp-F0h] BYREF
  common::milog::MiLogStream v57; // [rsp+50h] [rbp-D0h] BYREF
  std::string val; // [rsp+70h] [rbp-B0h] BYREF
  char v59[144]; // [rsp+90h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v59;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 10 result:278 64 16 19 source_card_ptr:272";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchSourceCharacterImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  if ( std::operator==<GCGSkillUseParam>(&context->skill_param->trigger_window_param_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v57,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      269);
    v6 = common::milog::MiLogStream::operator<<<char [86],(char *[86])0>(
           &v57,
           (const char (*)[86])"ConfigGCGConditionGlobalFetchSourceCharacter trigger_windows_param is nullptr, param:");
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v57);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v57, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v57) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSourceCharacterImpl *))(this->_vptr_ConfigGCGCondition
                                                                                        + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 270);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v57);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    v20 = std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
    std::shared_ptr<GCGCard>::shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64), &v20->source_card_ptr);
    if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v57,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        275);
      v21 = common::milog::MiLogStream::operator<<<char [99],(char *[99])0>(
              &v57,
              (const char (*)[99])"ConfigGCGConditionGlobalFetchSourceCharacter checkCondition get source_card_ptr is nullptr, param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v57);
      v22 = GCGEffectContext::getLogContext(context);
      v23 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v22->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v24)(&v57, this);
      v25 = 0;
      if ( (unsigned __int8)std::string::empty(&v57) )
      {
        std::allocator<char>::allocator(&__a);
        v25 = 1;
        v26 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSourceCharacterImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v28 = (const char *)(*v27)(v26);
        std::string::basic_string<std::allocator<char>>(&val, v28, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v29 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v29)(&val, this);
      }
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v23, &val);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, -1);
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, 276);
      v19 = -1;
      std::string::~string(&val);
      if ( v25 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      v34 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      *(_DWORD *)(v3 + 48) = GCGCard::getGuid(v34);
      common::milog::MiLogStream::create(
        &v56,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        279);
      v35 = common::milog::MiLogStream::operator<<<char [79],(char *[79])0>(
              &v56,
              (const char (*)[79])"ConfigGCGConditionGlobalFetchSourceCharacter get source character card, skill:");
      GCGSkill::getName[abi:cxx11]((std::string *)&v57, cur_skill);
      v36 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v35, (const std::string *)&v57);
      v37 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v36, (const char (*)[8])", card:");
      v38 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      GCGCard::getDesc[abi:cxx11](&val, v38);
      v39 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v37, &val);
      v40 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v39, (const char (*)[15])" fetch result:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v40, (const int *)(v3 + 48));
      std::string::~string(&val);
      std::string::~string(&v57);
      common::milog::MiLogStream::~MiLogStream(&v56);
      v41 = GCGEffectContext::getLogContext(context);
      v42 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v41->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v43 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v43)(&v57, this);
      v44 = 0;
      if ( (unsigned __int8)std::string::empty(&v57) )
      {
        std::allocator<char>::allocator(&__a);
        v44 = 1;
        v45 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v46 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSourceCharacterImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
        if ( *(_BYTE *)(((unsigned __int64)v46 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v47 = (const char *)(*v46)(v45);
        std::string::basic_string<std::allocator<char>>(&val, v47, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v48 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v48 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v48)(&val, this);
      }
      v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v42, &val);
      v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, ":");
      v51 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, *(_DWORD *)(v3 + 48));
      v52 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v51, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v52, 280);
      v19 = *(_DWORD *)(v3 + 48);
      std::string::~string(&val);
      if ( v44 )
        std::allocator<char>::~allocator(&__a);
    }
    std::string::~string(&v57);
    std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  }
  result = v19;
  if ( v59 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 285: range 000000000E131C7E-000000000E132C8A
int32_t __cdecl ConfigGCGConditionGlobalFetchTargetCharacterImpl::checkCondition(
        ConfigGCGConditionGlobalFetchTargetCharacterImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // rbx
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const); // rax
  char v10; // bl
  ConfigGCGConditionGlobalFetchTargetCharacterImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchTargetCharacterImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  const LogContext *v22; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v23; // r15
  void (__fastcall **v24)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const); // rax
  char v25; // r14
  ConfigGCGConditionGlobalFetchTargetCharacterImpl *v26; // rdx
  __int64 (__fastcall **v27)(ConfigGCGConditionGlobalFetchTargetCharacterImpl *); // rax
  const char *v28; // rax
  void (__fastcall **v29)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v34; // rax
  common::milog::MiLogStream *v35; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v36; // rax
  common::milog::MiLogStream *v37; // rax
  common::milog::MiLogStream *v38; // r14
  const LogContext *v39; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v40; // r15
  void (__fastcall **v41)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const); // rax
  char v42; // r14
  ConfigGCGConditionGlobalFetchTargetCharacterImpl *v43; // rdx
  __int64 (__fastcall **v44)(ConfigGCGConditionGlobalFetchTargetCharacterImpl *); // rax
  const char *v45; // rax
  void (__fastcall **v46)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v47; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v48; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v51; // rax
  common::milog::MiLogStream *v52; // r14
  common::milog::MiLogStream *v53; // rax
  common::milog::MiLogStream *v54; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v55; // rax
  common::milog::MiLogStream *v56; // rax
  common::milog::MiLogStream *v57; // rax
  const LogContext *v58; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v59; // r15
  void (__fastcall **v60)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const); // rax
  char v61; // r14
  ConfigGCGConditionGlobalFetchTargetCharacterImpl *v62; // rdx
  __int64 (__fastcall **v63)(ConfigGCGConditionGlobalFetchTargetCharacterImpl *); // rax
  const char *v64; // rax
  void (__fastcall **v65)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v66; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v67; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v68; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v69; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-F1h] BYREF
  common::milog::MiLogStream v73; // [rsp+30h] [rbp-F0h] BYREF
  common::milog::MiLogStream v74; // [rsp+50h] [rbp-D0h] BYREF
  std::string val; // [rsp+70h] [rbp-B0h] BYREF
  char v76[144]; // [rsp+90h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v76;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 10 result:302 64 16 19 target_card_ptr:291";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchTargetCharacterImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  if ( std::operator==<GCGSkillUseParam>(&context->skill_param->trigger_window_param_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v74,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      288);
    v6 = common::milog::MiLogStream::operator<<<char [86],(char *[86])0>(
           &v74,
           (const char (*)[86])"ConfigGCGConditionGlobalFetchTargetCharacter trigger_windows_param is nullptr, param:");
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v74);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v74, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v74) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchTargetCharacterImpl *))(this->_vptr_ConfigGCGCondition
                                                                                        + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 289);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v74);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    v20 = std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
    std::shared_ptr<GCGCard>::shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64), &v20->target_card_ptr);
    if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 64), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v74,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        294);
      v21 = common::milog::MiLogStream::operator<<<char [84],(char *[84])0>(
              &v74,
              (const char (*)[84])"ConfigGCGConditionGlobalFetchTargetCharacter get target_card_ptr is nullptr, param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v74);
      v22 = GCGEffectContext::getLogContext(context);
      v23 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v22->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v24)(&v74, this);
      v25 = 0;
      if ( (unsigned __int8)std::string::empty(&v74) )
      {
        std::allocator<char>::allocator(&__a);
        v25 = 1;
        v26 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchTargetCharacterImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v28 = (const char *)(*v27)(v26);
        std::string::basic_string<std::allocator<char>>(&val, v28, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v29 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v29)(&val, this);
      }
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v23, &val);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, -1);
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, 295);
      v19 = -1;
      std::string::~string(&val);
      if ( v25 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      v34 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      if ( GCGCard::getCardType(v34) == GCG_CARD_CHARACTER )
      {
        v51 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        *(_DWORD *)(v3 + 48) = GCGCard::getGuid(v51);
        common::milog::MiLogStream::create(
          &v73,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          303);
        v52 = common::milog::MiLogStream::operator<<<char [82],(char *[82])0>(
                &v73,
                (const char (*)[82])"ConfigGCGConditionGlobalFetchTargetCharacter get target character card id, skill:");
        GCGSkill::getName[abi:cxx11]((std::string *)&v74, cur_skill);
        v53 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v52, (const std::string *)&v74);
        v54 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v53, (const char (*)[8])", card:");
        v55 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        GCGCard::getDesc[abi:cxx11](&val, v55);
        v56 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v54, &val);
        v57 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v56, (const char (*)[15])" fetch result:");
        common::milog::MiLogStream::operator<<<int,(int *)0>(v57, (const int *)(v3 + 48));
        std::string::~string(&val);
        std::string::~string(&v74);
        common::milog::MiLogStream::~MiLogStream(&v73);
        v58 = GCGEffectContext::getLogContext(context);
        v59 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v58->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v60 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v60 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v60)(&v74, this);
        v61 = 0;
        if ( (unsigned __int8)std::string::empty(&v74) )
        {
          std::allocator<char>::allocator(&__a);
          v61 = 1;
          v62 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v63 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchTargetCharacterImpl *))(this->_vptr_ConfigGCGCondition
                                                                                            + 4);
          if ( *(_BYTE *)(((unsigned __int64)v63 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v64 = (const char *)(*v63)(v62);
          std::string::basic_string<std::allocator<char>>(&val, v64, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v65 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v65 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v65)(&val, this);
        }
        v66 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v59, &val);
        v67 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v66, ":");
        v68 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v67, *(_DWORD *)(v3 + 48));
        v69 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v68, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v69, 304);
        v19 = *(_DWORD *)(v3 + 48);
        std::string::~string(&val);
        if ( v61 )
          std::allocator<char>::~allocator(&__a);
      }
      else
      {
        common::milog::MiLogStream::create(
          &v74,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          299);
        v35 = common::milog::MiLogStream::operator<<<char [89],(char *[89])0>(
                &v74,
                (const char (*)[89])"ConfigGCGConditionGlobalFetchTargetCharacter target_card_ptr not character card, cardid:");
        v36 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        *(_DWORD *)(v3 + 48) = GCGCard::getId(v36);
        v37 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v35,
                (const unsigned int *)(v3 + 48));
        v38 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v37, (const char (*)[8])",param:");
        if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
          __asan_report_load8(context);
        GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v38, &val);
        std::string::~string(&val);
        common::milog::MiLogStream::~MiLogStream(&v74);
        v39 = GCGEffectContext::getLogContext(context);
        v40 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v39->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v41 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v41)(&v74, this);
        v42 = 0;
        if ( (unsigned __int8)std::string::empty(&v74) )
        {
          std::allocator<char>::allocator(&__a);
          v42 = 1;
          v43 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v44 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchTargetCharacterImpl *))(this->_vptr_ConfigGCGCondition
                                                                                            + 4);
          if ( *(_BYTE *)(((unsigned __int64)v44 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v45 = (const char *)(*v44)(v43);
          std::string::basic_string<std::allocator<char>>(&val, v45, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v46 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v46 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v46)(&val, this);
        }
        v47 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v40, &val);
        v48 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v47, ":");
        v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v48, -1);
        v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, 300);
        v19 = -1;
        std::string::~string(&val);
        if ( v42 )
          std::allocator<char>::~allocator(&__a);
      }
    }
    std::string::~string(&v74);
    std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  }
  result = v19;
  if ( v76 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 308: range 000000000E132C8C-000000000E132EC2
int32_t __cdecl ConfigCCGConditionCardFetchVarImpl::checkCondition(
        ConfigCCGConditionCardFetchVarImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigCCGConditionCardFetchVarImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigCCGConditionCardFetchVarImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigCCGConditionCardFetchVarImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        309);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 314: range 000000000E132EC4-000000000E1336D1
int32_t __cdecl ConfigCCGConditionCardFetchVarImpl::checkCondition(
        ConfigCCGConditionCardFetchVarImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(char *, ConfigCCGConditionCardFetchVarImpl *const); // rax
  char v10; // r13
  ConfigCCGConditionCardFetchVarImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigCCGConditionCardFetchVarImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(common::milog::MiLogStream *, ConfigCCGConditionCardFetchVarImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rcx
  common::milog::MiLogStream *v21; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rcx
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  const LogContext *v27; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v28; // r15
  void (__fastcall **v29)(char *, ConfigCCGConditionCardFetchVarImpl *const); // rax
  char v30; // r14
  ConfigCCGConditionCardFetchVarImpl *v31; // rdx
  __int64 (__fastcall **v32)(ConfigCCGConditionCardFetchVarImpl *); // rax
  const char *v33; // rax
  void (__fastcall **v34)(common::milog::MiLogStream *, ConfigCCGConditionCardFetchVarImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v38; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+37h] [rbp-B9h] BYREF
  unsigned int val; // [rsp+38h] [rbp-B8h] BYREF
  int token_type; // [rsp+3Ch] [rbp-B4h] BYREF
  char v45[32]; // [rsp+40h] [rbp-B0h] BYREF
  common::milog::MiLogStream v46; // [rsp+60h] [rbp-90h] BYREF
  char v47[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v47;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 18 card_var_value:320";
  *(_QWORD *)(v4 + 16) = ConfigCCGConditionCardFetchVarImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v46,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      317);
    common::milog::MiLogStream::operator<<<char [55],(char *[55])0>(
      &v46,
      (const char (*)[55])"ConfigCCGConditionCardFetchVar cur_card_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v46);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(char *, ConfigCCGConditionCardFetchVarImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(v45, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(v45) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigCCGConditionCardFetchVarImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v46, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigCCGConditionCardFetchVarImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&v46, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, (const std::string *)&v46);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 318);
    v19 = -1;
    std::string::~string(&v46);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v20 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    if ( *(_BYTE *)(((unsigned __int64)&this->token_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->token_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->token_type);
    }
    *(_DWORD *)(v4 + 32) = GCGCard::getToken(v20, this->token_type);
    common::milog::MiLogStream::create(
      &v46,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      321);
    v21 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
            &v46,
            (const char (*)[45])"ConfigCCGConditionCardFetchVar fetch cardid:");
    v22 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    val = GCGCard::getId(v22);
    v23 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v21, &val);
    v24 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v23, (const char (*)[8])" token:");
    if ( *(_BYTE *)(((unsigned __int64)&this->token_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->token_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->token_type);
    }
    token_type = this->token_type;
    v25 = common::milog::MiLogStream::operator<<<int,(int *)0>(v24, &token_type);
    v26 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v25, (const char (*)[9])" result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v26, (const int *)(v4 + 32));
    common::milog::MiLogStream::~MiLogStream(&v46);
    v27 = GCGEffectContext::getLogContext(context);
    v28 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v27->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v29 = (void (__fastcall **)(char *, ConfigCCGConditionCardFetchVarImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v29)(v45, this);
    v30 = 0;
    if ( (unsigned __int8)std::string::empty(v45) )
    {
      std::allocator<char>::allocator(&__a);
      v30 = 1;
      v31 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v32 = (__int64 (__fastcall **)(ConfigCCGConditionCardFetchVarImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v33 = (const char *)(*v32)(v31);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v46, v33, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v34 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigCCGConditionCardFetchVarImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v34 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v34)(&v46, this);
    }
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v28, (const std::string *)&v46);
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, *(_DWORD *)(v4 + 32));
    v38 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v38, 322);
    v19 = *(_DWORD *)(v4 + 32);
    std::string::~string(&v46);
    if ( v30 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(v45);
  result = v19;
  if ( v47 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 326: range 000000000E1336D2-000000000E133908
int32_t __cdecl ConfigGCGConditionCharacterCheckAttachCardImpl::checkCondition(
        ConfigGCGConditionCharacterCheckAttachCardImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCharacterCheckAttachCardImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCharacterCheckAttachCardImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCharacterCheckAttachCardImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        327);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 332: range 000000000E13390A-000000000E13452D
int32_t __cdecl ConfigGCGConditionCharacterCheckAttachCardImpl::checkCondition(
        ConfigGCGConditionCharacterCheckAttachCardImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v5; // r12
  void (__fastcall **v6)(char *, ConfigGCGConditionCharacterCheckAttachCardImpl *const); // rax
  char v7; // bl
  ConfigGCGConditionCharacterCheckAttachCardImpl *v8; // rdx
  __int64 (__fastcall **v9)(ConfigGCGConditionCharacterCheckAttachCardImpl *); // rax
  const char *v10; // rax
  void (__fastcall **v11)(common::milog::MiLogStream *, ConfigGCGConditionCharacterCheckAttachCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v12; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v13; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v14; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  int32_t v16; // r12d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v17; // rax
  common::milog::MiLogStream *v18; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // rax
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rax
  const LogContext *v22; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v23; // r12
  void (__fastcall **v24)(char *, ConfigGCGConditionCharacterCheckAttachCardImpl *const); // rax
  char v25; // bl
  ConfigGCGConditionCharacterCheckAttachCardImpl *v26; // rdx
  __int64 (__fastcall **v27)(ConfigGCGConditionCharacterCheckAttachCardImpl *); // rax
  const char *v28; // rax
  void (__fastcall **v29)(common::milog::MiLogStream *, ConfigGCGConditionCharacterCheckAttachCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v34; // rax
  const GCGCardZone *ModifyZone; // rdi
  common::milog::MiLogStream *v36; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v37; // rax
  common::milog::MiLogStream *v38; // rax
  common::milog::MiLogStream *v39; // rax
  const LogContext *v40; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v41; // r12
  void (__fastcall **v42)(char *, ConfigGCGConditionCharacterCheckAttachCardImpl *const); // rax
  char v43; // bl
  ConfigGCGConditionCharacterCheckAttachCardImpl *v44; // rdx
  __int64 (__fastcall **v45)(ConfigGCGConditionCharacterCheckAttachCardImpl *); // rax
  const char *v46; // rax
  void (__fastcall **v47)(common::milog::MiLogStream *, ConfigGCGConditionCharacterCheckAttachCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v48; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v51; // rax
  common::milog::MiLogStream *v52; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v53; // rax
  common::milog::MiLogStream *v54; // rax
  common::milog::MiLogStream *v55; // rax
  const LogContext *v56; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v57; // r12
  void (__fastcall **v58)(char *, ConfigGCGConditionCharacterCheckAttachCardImpl *const); // rax
  char v59; // bl
  ConfigGCGConditionCharacterCheckAttachCardImpl *v60; // rdx
  __int64 (__fastcall **v61)(ConfigGCGConditionCharacterCheckAttachCardImpl *); // rax
  const char *v62; // rax
  void (__fastcall **v63)(common::milog::MiLogStream *, ConfigGCGConditionCharacterCheckAttachCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v64; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v65; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v66; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v67; // rax
  std::allocator<char> __a; // [rsp+2Bh] [rbp-55h] BYREF
  unsigned int val; // [rsp+2Ch] [rbp-54h] BYREF
  char v74[32]; // [rsp+30h] [rbp-50h] BYREF
  common::milog::MiLogStream v75; // [rsp+50h] [rbp-30h] BYREF

  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v75,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      335);
    common::milog::MiLogStream::operator<<<char [73],(char *[73])0>(
      &v75,
      (const char (*)[73])"ConfigGCGConditionCharacterCheckAttachCard cur context card is not valid");
    common::milog::MiLogStream::~MiLogStream(&v75);
    LogContext = GCGEffectContext::getLogContext(context);
    v5 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v6 = (void (__fastcall **)(char *, ConfigGCGConditionCharacterCheckAttachCardImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                             + 8);
    if ( *(_BYTE *)(((unsigned __int64)v6 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v6)(v74, this);
    v7 = 0;
    if ( (unsigned __int8)std::string::empty(v74) )
    {
      std::allocator<char>::allocator(&__a);
      v7 = 1;
      v8 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v9 = (__int64 (__fastcall **)(ConfigGCGConditionCharacterCheckAttachCardImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v10 = (const char *)(*v9)(v8);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v75, v10, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v11 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCharacterCheckAttachCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v11)(&v75, this);
    }
    v12 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v5, (const std::string *)&v75);
    v13 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v12, ":");
    v14 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v13, -1);
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v14, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, 336);
    v16 = -1;
    std::string::~string(&v75);
    if ( v7 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v17 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    if ( GCGCard::getCardType(v17) == GCG_CARD_CHARACTER )
    {
      v34 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      ModifyZone = GCGCard::getModifyZone(v34);
      if ( *(_BYTE *)(((unsigned __int64)&this->card_id >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->card_id >> 3) + 0x7FFF8000) )
      {
        ModifyZone = (const GCGCardZone *)&this->card_id;
        __asan_report_load4(&this->card_id);
      }
      if ( GCGCardZone::isHasCardById(ModifyZone, this->card_id) )
      {
        common::milog::MiLogStream::create(
          &v75,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          345);
        v36 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                &v75,
                (const char (*)[53])"ConfigGCGConditionCharacterCheckAttachCard cur_card:");
        v37 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
        val = GCGCard::getId(v37);
        v38 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v36, &val);
        v39 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                v38,
                (const char (*)[20])" has attached card:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v39, &this->card_id);
        common::milog::MiLogStream::~MiLogStream(&v75);
        v40 = GCGEffectContext::getLogContext(context);
        v41 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v40->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v42 = (void (__fastcall **)(char *, ConfigGCGConditionCharacterCheckAttachCardImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                  + 8);
        if ( *(_BYTE *)(((unsigned __int64)v42 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v42)(v74, this);
        v43 = 0;
        if ( (unsigned __int8)std::string::empty(v74) )
        {
          std::allocator<char>::allocator(&__a);
          v43 = 1;
          v44 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v45 = (__int64 (__fastcall **)(ConfigGCGConditionCharacterCheckAttachCardImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
          if ( *(_BYTE *)(((unsigned __int64)v45 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v46 = (const char *)(*v45)(v44);
          std::string::basic_string<std::allocator<char>>((std::string *const)&v75, v46, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v47 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCharacterCheckAttachCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v47 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v47)(&v75, this);
        }
        v48 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v41, (const std::string *)&v75);
        v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v48, ":");
        v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, 0);
        v51 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v51, 346);
        v16 = 0;
        std::string::~string(&v75);
        if ( v43 )
          std::allocator<char>::~allocator(&__a);
      }
      else
      {
        common::milog::MiLogStream::create(
          &v75,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          348);
        v52 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                &v75,
                (const char (*)[53])"ConfigGCGConditionCharacterCheckAttachCard cur_card:");
        v53 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
        val = GCGCard::getId(v53);
        v54 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v52, &val);
        v55 = common::milog::MiLogStream::operator<<<char [20],(char *[20])0>(
                v54,
                (const char (*)[20])" not attached card:");
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v55, &this->card_id);
        common::milog::MiLogStream::~MiLogStream(&v75);
        v56 = GCGEffectContext::getLogContext(context);
        v57 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v56->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v58 = (void (__fastcall **)(char *, ConfigGCGConditionCharacterCheckAttachCardImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                  + 8);
        if ( *(_BYTE *)(((unsigned __int64)v58 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v58)(v74, this);
        v59 = 0;
        if ( (unsigned __int8)std::string::empty(v74) )
        {
          std::allocator<char>::allocator(&__a);
          v59 = 1;
          v60 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v61 = (__int64 (__fastcall **)(ConfigGCGConditionCharacterCheckAttachCardImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
          if ( *(_BYTE *)(((unsigned __int64)v61 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v62 = (const char *)(*v61)(v60);
          std::string::basic_string<std::allocator<char>>((std::string *const)&v75, v62, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v63 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCharacterCheckAttachCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v63 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v63)(&v75, this);
        }
        v64 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v57, (const std::string *)&v75);
        v65 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v64, ":");
        v66 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v65, -1);
        v67 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v66, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v67, 349);
        v16 = -1;
        std::string::~string(&v75);
        if ( v59 )
          std::allocator<char>::~allocator(&__a);
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v75,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        340);
      v18 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
              &v75,
              (const char (*)[53])"ConfigGCGConditionCharacterCheckAttachCard cur_card:");
      v19 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      val = GCGCard::getId(v19);
      v20 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &val);
      v21 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
              v20,
              (const char (*)[36])" not character, need attached card:");
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v21, &this->card_id);
      common::milog::MiLogStream::~MiLogStream(&v75);
      v22 = GCGEffectContext::getLogContext(context);
      v23 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v22->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (void (__fastcall **)(char *, ConfigGCGConditionCharacterCheckAttachCardImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                + 8);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v24)(v74, this);
      v25 = 0;
      if ( (unsigned __int8)std::string::empty(v74) )
      {
        std::allocator<char>::allocator(&__a);
        v25 = 1;
        v26 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (__int64 (__fastcall **)(ConfigGCGConditionCharacterCheckAttachCardImpl *))(this->_vptr_ConfigGCGCondition
                                                                                        + 4);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v28 = (const char *)(*v27)(v26);
        std::string::basic_string<std::allocator<char>>((std::string *const)&v75, v28, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v29 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCharacterCheckAttachCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v29)(&v75, this);
      }
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v23, (const std::string *)&v75);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, -1);
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, 341);
      v16 = -1;
      std::string::~string(&v75);
      if ( v25 )
        std::allocator<char>::~allocator(&__a);
    }
  }
  std::string::~string(v74);
  return v16;
};

// Line 353: range 000000000E13452E-000000000E134764
int32_t __cdecl ConfigGCGConditionCheckCurCharacterCampImpl::checkCondition(
        ConfigGCGConditionCheckCurCharacterCampImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurCharacterCampImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurCharacterCampImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurCharacterCampImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        354);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 359: range 000000000E134766-000000000E135CDC
int32_t __cdecl ConfigGCGConditionCheckCurCharacterCampImpl::checkCondition(
        ConfigGCGConditionCheckCurCharacterCampImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  common::milog::MiLogStream *v4; // rbx
  common::milog::MiLogStream *v5; // rax
  common::milog::MiLogStream *v6; // rbx
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r12
  void (__fastcall **v9)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const); // rax
  char v10; // bl
  ConfigGCGConditionCheckCurCharacterCampImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionCheckCurCharacterCampImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r12d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rbx
  const LogContext *v25; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v26; // r12
  void (__fastcall **v27)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const); // rax
  char v28; // bl
  ConfigGCGConditionCheckCurCharacterCampImpl *v29; // rdx
  __int64 (__fastcall **v30)(ConfigGCGConditionCheckCurCharacterCampImpl *); // rax
  const char *v31; // rax
  void (__fastcall **v32)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  const LogContext *v37; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v38; // r12
  void (__fastcall **v39)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const); // rax
  char v40; // bl
  ConfigGCGConditionCheckCurCharacterCampImpl *v41; // rdx
  __int64 (__fastcall **v42)(ConfigGCGConditionCheckCurCharacterCampImpl *); // rax
  const char *v43; // rax
  void (__fastcall **v44)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v45; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v46; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v47; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v48; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v49; // rax
  GCGControllerValue ControllerId; // ebx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v51; // rax
  common::milog::MiLogStream *v52; // rbx
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v53; // rax
  common::milog::MiLogStream *v54; // rax
  common::milog::MiLogStream *v55; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v56; // rax
  const LogContext *v57; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v58; // r12
  void (__fastcall **v59)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const); // rax
  char v60; // bl
  ConfigGCGConditionCheckCurCharacterCampImpl *v61; // rdx
  __int64 (__fastcall **v62)(ConfigGCGConditionCheckCurCharacterCampImpl *); // rax
  const char *v63; // rax
  void (__fastcall **v64)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v65; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v66; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v67; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v68; // rax
  common::milog::MiLogStream *v69; // rbx
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v70; // rax
  common::milog::MiLogStream *v71; // rax
  common::milog::MiLogStream *v72; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v73; // rax
  const LogContext *v74; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v75; // r12
  void (__fastcall **v76)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const); // rax
  char v77; // bl
  ConfigGCGConditionCheckCurCharacterCampImpl *v78; // rdx
  __int64 (__fastcall **v79)(ConfigGCGConditionCheckCurCharacterCampImpl *); // rax
  const char *v80; // rax
  void (__fastcall **v81)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v82; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v83; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v84; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v85; // rax
  common::milog::MiLogStream *v86; // rbx
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v87; // rax
  common::milog::MiLogStream *v88; // rax
  common::milog::MiLogStream *v89; // rbx
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v90; // rax
  common::milog::MiLogStream *v91; // rax
  common::milog::MiLogStream *v92; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v93; // rax
  const LogContext *v94; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v95; // r12
  void (__fastcall **v96)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const); // rax
  char v97; // bl
  ConfigGCGConditionCheckCurCharacterCampImpl *v98; // rdx
  __int64 (__fastcall **v99)(ConfigGCGConditionCheckCurCharacterCampImpl *); // rax
  const char *v100; // rax
  void (__fastcall **v101)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v102; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v103; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v104; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v105; // rax
  std::allocator<char> __a; // [rsp+2Ah] [rbp-96h] BYREF
  bool is_same_camp; // [rsp+2Bh] [rbp-95h]
  unsigned int v111; // [rsp+2Ch] [rbp-94h] BYREF
  proto::GCGControllerValue v112; // [rsp+30h] [rbp-90h] BYREF
  unsigned int Id; // [rsp+34h] [rbp-8Ch] BYREF
  const std::shared_ptr<GCGCard> *owner_card_ptr; // [rsp+38h] [rbp-88h]
  std::shared_ptr<GCGCard> v115; // [rsp+40h] [rbp-80h] BYREF
  common::milog::MiLogStream v116; // [rsp+50h] [rbp-70h] BYREF
  std::string val; // [rsp+70h] [rbp-50h] BYREF
  std::string v; // [rsp+90h] [rbp-30h] BYREF

  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v116,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      362);
    v4 = common::milog::MiLogStream::operator<<<char [77],(char *[77])0>(
           &v116,
           (const char (*)[77])"ConfigGCGConditionCheckCurCharacterCamp cur_context is not card type, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    v5 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v4, &val);
    v6 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v5, (const char (*)[8])",param:");
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    GCGSkillUseParam::getDesc[abi:cxx11](&v, context->skill_param);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &v);
    std::string::~string(&v);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v116);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                 + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&val, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&val) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterCampImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&v, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&v, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &v);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 363);
    v19 = -1;
    std::string::~string(&v);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
LABEL_21:
    std::string::~string(&val);
    return v19;
  }
  v20 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
  if ( GCGCard::getCardType(v20) != GCG_CARD_CHARACTER )
  {
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&val,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      367);
    v21 = common::milog::MiLogStream::operator<<<char [72],(char *[72])0>(
            (common::milog::MiLogStream *const)&val,
            (const char (*)[72])"ConfigGCGConditionCheckCurCharacterCamp cur_context not character card:");
    v22 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    Id = GCGCard::getId(v22);
    v23 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v21, &Id);
    v24 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v23, (const char (*)[8])",param:");
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    GCGSkillUseParam::getDesc[abi:cxx11](&v, context->skill_param);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v24, &v);
    std::string::~string(&v);
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
    v25 = GCGEffectContext::getLogContext(context);
    v26 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v25->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v27 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                  + 8);
    if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v27)(&val, this);
    v28 = 0;
    if ( (unsigned __int8)std::string::empty(&val) )
    {
      std::allocator<char>::allocator(&__a);
      v28 = 1;
      v29 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v30 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterCampImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v31 = (const char *)(*v30)(v29);
      std::string::basic_string<std::allocator<char>>(&v, v31, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v32 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v32)(&v, this);
    }
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v26, &v);
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, ":");
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, -1);
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, 368);
    v19 = -1;
    std::string::~string(&v);
    if ( v28 )
      std::allocator<char>::~allocator(&__a);
    goto LABEL_21;
  }
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  GCGSkill::getThisCard((const GCGSkill *const)&v115, (const GCGSkillUseParam *)cur_skill);
  owner_card_ptr = &v115;
  if ( std::operator==<GCGCard>(&v115, 0LL) )
  {
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&v,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      373);
    common::milog::MiLogStream::operator<<<char [64],(char *[64])0>(
      (common::milog::MiLogStream *const)&v,
      (const char (*)[64])"ConfigGCGConditionCheckCurCharacterCamp owner_card_ptr is empty");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v);
    v37 = GCGEffectContext::getLogContext(context);
    v38 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v37->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v39 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                  + 8);
    if ( *(_BYTE *)(((unsigned __int64)v39 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v39)(&val, this);
    v40 = 0;
    if ( (unsigned __int8)std::string::empty(&val) )
    {
      std::allocator<char>::allocator(&__a);
      v40 = 1;
      v41 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v42 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterCampImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v42 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v43 = (const char *)(*v42)(v41);
      std::string::basic_string<std::allocator<char>>(&v, v43, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v44 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v44 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v44)(&v, this);
    }
    v45 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v38, &v);
    v46 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v45, ":");
    v47 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v46, -1);
    v48 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v47, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v48, 374);
    v19 = -1;
    std::string::~string(&v);
    if ( v40 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    is_same_camp = 0;
    v49 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)owner_card_ptr);
    ControllerId = GCGCard::getControllerId(v49);
    v51 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    if ( ControllerId == GCGCard::getControllerId(v51) )
      is_same_camp = 1;
    if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->camp_type);
    }
    if ( this->camp_type == CAMP_FRIENDLY && is_same_camp )
    {
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&v,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        383);
      v52 = common::milog::MiLogStream::operator<<<char [78],(char *[78])0>(
              (common::milog::MiLogStream *const)&v,
              (const char (*)[78])"ConfigGCGConditionCheckCurCharacterCamp cur character is same camp, src_card:");
      v53 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)owner_card_ptr);
      v112 = GCGCard::getId(v53);
      v54 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v52, (const unsigned int *)&v112);
      v55 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v54, (const char (*)[11])" cur_card:");
      v56 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Id = GCGCard::getId(v56);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v55, &Id);
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v);
      v57 = GCGEffectContext::getLogContext(context);
      v58 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v57->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v59 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v59 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v59)(&val, this);
      v60 = 0;
      if ( (unsigned __int8)std::string::empty(&val) )
      {
        std::allocator<char>::allocator(&__a);
        v60 = 1;
        v61 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v62 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterCampImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v62 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v63 = (const char *)(*v62)(v61);
        std::string::basic_string<std::allocator<char>>(&v, v63, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v64 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v64 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v64)(&v, this);
      }
      v65 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v58, &v);
      v66 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v65, ":");
      v67 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v66, 0);
      v68 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v67, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v68, 384);
      v19 = 0;
      std::string::~string(&v);
      if ( v60 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->camp_type);
      }
      if ( this->camp_type == CAMP_ENEMY && !is_same_camp )
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&v,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          388);
        v69 = common::milog::MiLogStream::operator<<<char [78],(char *[78])0>(
                (common::milog::MiLogStream *const)&v,
                (const char (*)[78])"ConfigGCGConditionCheckCurCharacterCamp cur character is enmy camp, src_card:");
        v70 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)owner_card_ptr);
        v112 = GCGCard::getId(v70);
        v71 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v69, (const unsigned int *)&v112);
        v72 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v71, (const char (*)[11])" cur_card:");
        v73 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
        Id = GCGCard::getId(v73);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v72, &Id);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v);
        v74 = GCGEffectContext::getLogContext(context);
        v75 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v74->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v76 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v76 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v76)(&val, this);
        v77 = 0;
        if ( (unsigned __int8)std::string::empty(&val) )
        {
          std::allocator<char>::allocator(&__a);
          v77 = 1;
          v78 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v79 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterCampImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
          if ( *(_BYTE *)(((unsigned __int64)v79 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v80 = (const char *)(*v79)(v78);
          std::string::basic_string<std::allocator<char>>(&v, v80, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v81 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v81 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v81)(&v, this);
        }
        v82 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v75, &v);
        v83 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v82, ":");
        v84 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v83, 0);
        v85 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v84, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v85, 389);
        v19 = 0;
        std::string::~string(&v);
        if ( v77 )
          std::allocator<char>::~allocator(&__a);
      }
      else
      {
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&v,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          391);
        v86 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
                (common::milog::MiLogStream *const)&v,
                (const char (*)[50])"ConfigGCGConditionCheckCurCharacterCamp cur_card:");
        v87 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)owner_card_ptr);
        v111 = GCGCard::getId(v87);
        v88 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v86, &v111);
        v89 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v88, (const char (*)[7])" camp:");
        v90 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)owner_card_ptr);
        v112 = GCGCard::getControllerId(v90);
        v91 = common::milog::MiLogStream::operator<<<proto::GCGControllerValue,(proto::GCGControllerValue*)0>(
                v89,
                &v112);
        v92 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(v91, (const char (*)[19])off_1BC7A020);
        v93 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
        Id = GCGCard::getId(v93);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v92, &Id);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v);
        v94 = GCGEffectContext::getLogContext(context);
        v95 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v94->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v96 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v96 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v96)(&val, this);
        v97 = 0;
        if ( (unsigned __int8)std::string::empty(&val) )
        {
          std::allocator<char>::allocator(&__a);
          v97 = 1;
          v98 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v99 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterCampImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
          if ( *(_BYTE *)(((unsigned __int64)v99 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v100 = (const char *)(*v99)(v98);
          std::string::basic_string<std::allocator<char>>(&v, v100, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v101 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v101 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v101)(&v, this);
        }
        v102 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v95, &v);
        v103 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v102, ":");
        v104 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v103, -1);
        v105 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v104, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v105, 392);
        v19 = -1;
        std::string::~string(&v);
        if ( v97 )
          std::allocator<char>::~allocator(&__a);
      }
    }
  }
  std::string::~string(&val);
  std::shared_ptr<GCGCard>::~shared_ptr(&v115);
  return v19;
};

// Line 397: range 000000000E135CDE-000000000E135F14
int32_t __cdecl ConfigGCGConditionCheckCurCharacterPositionImpl::checkCondition(
        ConfigGCGConditionCheckCurCharacterPositionImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurCharacterPositionImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurCharacterPositionImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurCharacterPositionImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        398);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 402: range 000000000E135F16-000000000E137517
int32_t __cdecl ConfigGCGConditionCheckCurCharacterPositionImpl::checkCondition(
        ConfigGCGConditionCheckCurCharacterPositionImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  common::milog::MiLogStream *v4; // rbx
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v6; // rbx
  void (__fastcall **v7)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  char v8; // r12
  ConfigGCGConditionCheckCurCharacterPositionImpl *v9; // rdx
  __int64 (__fastcall **v10)(ConfigGCGConditionCheckCurCharacterPositionImpl *); // rax
  const char *v11; // rax
  void (__fastcall **v12)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v13; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v14; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  int32_t v17; // ebx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v18; // rax
  common::milog::MiLogStream *v19; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rbx
  const LogContext *v23; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v24; // rbx
  void (__fastcall **v25)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  char v26; // r12
  ConfigGCGConditionCheckCurCharacterPositionImpl *v27; // rdx
  __int64 (__fastcall **v28)(ConfigGCGConditionCheckCurCharacterPositionImpl *); // rax
  const char *v29; // rax
  void (__fastcall **v30)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v35; // rax
  GCGGameMode *GameMode; // rax
  GCGDuel *Duel; // rax
  GCGCharacterZone *CharacterZone; // rax
  uint32_t v39; // ebx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v40; // rax
  common::milog::MiLogStream *v41; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v42; // rax
  const LogContext *v43; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v44; // rbx
  void (__fastcall **v45)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  char v46; // r12
  ConfigGCGConditionCheckCurCharacterPositionImpl *v47; // rdx
  __int64 (__fastcall **v48)(ConfigGCGConditionCheckCurCharacterPositionImpl *); // rax
  const char *v49; // rax
  void (__fastcall **v50)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v51; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v52; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v53; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // rax
  common::milog::MiLogStream *v55; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v56; // rax
  const LogContext *v57; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v58; // rbx
  void (__fastcall **v59)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  char v60; // r12
  ConfigGCGConditionCheckCurCharacterPositionImpl *v61; // rdx
  __int64 (__fastcall **v62)(ConfigGCGConditionCheckCurCharacterPositionImpl *); // rax
  const char *v63; // rax
  void (__fastcall **v64)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v65; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v66; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v67; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v68; // rax
  GCGCharacterZone *v69; // rax
  uint32_t v70; // ebx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v71; // rax
  common::milog::MiLogStream *v72; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v73; // rax
  const LogContext *v74; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v75; // rbx
  void (__fastcall **v76)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  char v77; // r12
  ConfigGCGConditionCheckCurCharacterPositionImpl *v78; // rdx
  __int64 (__fastcall **v79)(ConfigGCGConditionCheckCurCharacterPositionImpl *); // rax
  const char *v80; // rax
  void (__fastcall **v81)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v82; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v83; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v84; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v85; // rax
  common::milog::MiLogStream *v86; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v87; // rax
  const LogContext *v88; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v89; // rbx
  void (__fastcall **v90)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  char v91; // r12
  ConfigGCGConditionCheckCurCharacterPositionImpl *v92; // rdx
  __int64 (__fastcall **v93)(ConfigGCGConditionCheckCurCharacterPositionImpl *); // rax
  const char *v94; // rax
  void (__fastcall **v95)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v96; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v97; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v98; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v99; // rax
  common::milog::MiLogStream *v100; // rcx
  const LogContext *v101; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v102; // rbx
  void (__fastcall **v103)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  char v104; // r12
  ConfigGCGConditionCheckCurCharacterPositionImpl *v105; // rdx
  __int64 (__fastcall **v106)(ConfigGCGConditionCheckCurCharacterPositionImpl *); // rax
  const char *v107; // rax
  void (__fastcall **v108)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v109; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v110; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v111; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v112; // rax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-61h] BYREF
  unsigned int Id; // [rsp+30h] [rbp-60h] BYREF
  GCGControllerValue cur_controller_id; // [rsp+34h] [rbp-5Ch]
  GCGField *field; // [rsp+38h] [rbp-58h]
  common::milog::MiLogStream v120; // [rsp+40h] [rbp-50h] BYREF
  std::string val; // [rsp+60h] [rbp-30h] BYREF

  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v120,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      405);
    v4 = common::milog::MiLogStream::operator<<<char [81],(char *[81])0>(
           &v120,
           (const char (*)[81])"ConfigGCGConditionCheckCurCharacterPosition cur_context is not card type, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v4, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v120);
    LogContext = GCGEffectContext::getLogContext(context);
    v6 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v7 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v7 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v7)(&v120, this);
    v8 = 0;
    if ( (unsigned __int8)std::string::empty(&v120) )
    {
      std::allocator<char>::allocator(&__a);
      v8 = 1;
      v9 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v10 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterPositionImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v11 = (const char *)(*v10)(v9);
      std::string::basic_string<std::allocator<char>>(&val, v11, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v12)(&val, this);
    }
    v13 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v6, &val);
    v14 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v13, ":");
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v14, -1);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, 406);
    v17 = -1;
    std::string::~string(&val);
    if ( v8 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v18 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    if ( GCGCard::getCardType(v18) == GCG_CARD_CHARACTER )
    {
      v35 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      cur_controller_id = GCGCard::getControllerId(v35);
      GameMode = GCGSkill::getGameMode(cur_skill);
      Duel = GCGGameMode::getDuel(GameMode);
      field = GCGDuel::getField(Duel, cur_controller_id);
      if ( *(_BYTE *)(((unsigned __int64)&this->position_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->position_type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->position_type);
      }
      if ( this->position_type == POSITION_BACKSTAGE )
      {
        CharacterZone = GCGField::getCharacterZone(field);
        v39 = GCGCharacterZone::getOnStageCardGuid(CharacterZone);
        v40 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
        if ( v39 == GCGCard::getGuid(v40) )
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&val,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/card_game/skill/gcg_condition.cpp",
            "checkCondition",
            420);
          v41 = common::milog::MiLogStream::operator<<<char [75],(char *[75])0>(
                  (common::milog::MiLogStream *const)&val,
                  (const char (*)[75])"ConfigGCGConditionCheckCurCharacterPosition cur card is on stage, card_id:");
          v42 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
          Id = GCGCard::getId(v42);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v41, &Id);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
          v43 = GCGEffectContext::getLogContext(context);
          v44 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v43->data, "|");
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v45 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v45 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v45)(&v120, this);
          v46 = 0;
          if ( (unsigned __int8)std::string::empty(&v120) )
          {
            std::allocator<char>::allocator(&__a);
            v46 = 1;
            v47 = this;
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v48 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterPositionImpl *))(this->_vptr_ConfigGCGCondition
                                                                                             + 4);
            if ( *(_BYTE *)(((unsigned __int64)v48 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
            v49 = (const char *)(*v48)(v47);
            std::string::basic_string<std::allocator<char>>(&val, v49, &__a);
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v50 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
            if ( *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
            (*v50)(&val, this);
          }
          v51 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v44, &val);
          v52 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v51, ":");
          v53 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v52, -1);
          v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v53, ":");
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, 421);
          v17 = -1;
          std::string::~string(&val);
          if ( v46 )
            std::allocator<char>::~allocator(&__a);
        }
        else
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&val,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/card_game/skill/gcg_condition.cpp",
            "checkCondition",
            425);
          v55 = common::milog::MiLogStream::operator<<<char [79],(char *[79])0>(
                  (common::milog::MiLogStream *const)&val,
                  (const char (*)[79])"ConfigGCGConditionCheckCurCharacterPosition cur card is not on stage, card_id:");
          v56 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
          Id = GCGCard::getId(v56);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v55, &Id);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
          v57 = GCGEffectContext::getLogContext(context);
          v58 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v57->data, "|");
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v59 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v59 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v59)(&v120, this);
          v60 = 0;
          if ( (unsigned __int8)std::string::empty(&v120) )
          {
            std::allocator<char>::allocator(&__a);
            v60 = 1;
            v61 = this;
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v62 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterPositionImpl *))(this->_vptr_ConfigGCGCondition
                                                                                             + 4);
            if ( *(_BYTE *)(((unsigned __int64)v62 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
            v63 = (const char *)(*v62)(v61);
            std::string::basic_string<std::allocator<char>>(&val, v63, &__a);
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v64 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
            if ( *(_BYTE *)(((unsigned __int64)v64 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
            (*v64)(&val, this);
          }
          v65 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v58, &val);
          v66 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v65, ":");
          v67 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v66, 0);
          v68 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v67, ":");
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v68, 426);
          v17 = 0;
          std::string::~string(&val);
          if ( v60 )
            std::allocator<char>::~allocator(&__a);
        }
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->position_type >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->position_type >> 3)
                                                              + 0x7FFF8000) )
        {
          __asan_report_load4(&this->position_type);
        }
        if ( this->position_type )
        {
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&val,
            &common::milog::MiLogDefault::default_log_obj_,
            4u,
            "./src/card_game/skill/gcg_condition.cpp",
            "checkCondition",
            444);
          v100 = common::milog::MiLogStream::operator<<<char [71],(char *[71])0>(
                   (common::milog::MiLogStream *const)&val,
                   (const char (*)[71])"ConfigGCGConditionCheckCurCharacterPosition not support position_type:");
          if ( *(_BYTE *)(((unsigned __int64)&this->position_type >> 3) + 0x7FFF8000) != 0
            && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->position_type >> 3)
                                                                + 0x7FFF8000) )
          {
            __asan_report_load4(&this->position_type);
          }
          Id = this->position_type;
          common::milog::MiLogStream::operator<<<int,(int *)0>(v100, (const int *)&Id);
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
          v101 = GCGEffectContext::getLogContext(context);
          v102 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v101->data, "|");
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v103 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v103 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v103)(&v120, this);
          v104 = 0;
          if ( (unsigned __int8)std::string::empty(&v120) )
          {
            std::allocator<char>::allocator(&__a);
            v104 = 1;
            v105 = this;
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v106 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterPositionImpl *))(this->_vptr_ConfigGCGCondition
                                                                                              + 4);
            if ( *(_BYTE *)(((unsigned __int64)v106 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
            v107 = (const char *)(*v106)(v105);
            std::string::basic_string<std::allocator<char>>(&val, v107, &__a);
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v108 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
            if ( *(_BYTE *)(((unsigned __int64)v108 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
            (*v108)(&val, this);
          }
          v109 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v102, &val);
          v110 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v109, ":");
          v111 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v110, -1);
          v112 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v111, ":");
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v112, 446);
          v17 = -1;
          std::string::~string(&val);
          if ( v104 )
            std::allocator<char>::~allocator(&__a);
        }
        else
        {
          v69 = GCGField::getCharacterZone(field);
          v70 = GCGCharacterZone::getOnStageCardGuid(v69);
          v71 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
          if ( v70 == GCGCard::getGuid(v71) )
          {
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)&val,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/card_game/skill/gcg_condition.cpp",
              "checkCondition",
              433);
            v72 = common::milog::MiLogStream::operator<<<char [75],(char *[75])0>(
                    (common::milog::MiLogStream *const)&val,
                    (const char (*)[75])"ConfigGCGConditionCheckCurCharacterPosition cur card is on stage, card_id:");
            v73 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
            Id = GCGCard::getId(v73);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v72, &Id);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
            v74 = GCGEffectContext::getLogContext(context);
            v75 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v74->data, "|");
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v76 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
            if ( *(_BYTE *)(((unsigned __int64)v76 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
            (*v76)(&v120, this);
            v77 = 0;
            if ( (unsigned __int8)std::string::empty(&v120) )
            {
              std::allocator<char>::allocator(&__a);
              v77 = 1;
              v78 = this;
              if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
                __asan_report_load8(this);
              v79 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterPositionImpl *))(this->_vptr_ConfigGCGCondition
                                                                                               + 4);
              if ( *(_BYTE *)(((unsigned __int64)v79 >> 3) + 0x7FFF8000) )
                __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
              v80 = (const char *)(*v79)(v78);
              std::string::basic_string<std::allocator<char>>(&val, v80, &__a);
            }
            else
            {
              if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
                __asan_report_load8(this);
              v81 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
              if ( *(_BYTE *)(((unsigned __int64)v81 >> 3) + 0x7FFF8000) )
                __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
              (*v81)(&val, this);
            }
            v82 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v75, &val);
            v83 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v82, ":");
            v84 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v83, 0);
            v85 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v84, ":");
            common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v85, 434);
            v17 = 0;
            std::string::~string(&val);
            if ( v77 )
              std::allocator<char>::~allocator(&__a);
          }
          else
          {
            common::milog::MiLogStream::create(
              (common::milog::MiLogStream *)&val,
              &common::milog::MiLogDefault::default_log_obj_,
              1u,
              "./src/card_game/skill/gcg_condition.cpp",
              "checkCondition",
              438);
            v86 = common::milog::MiLogStream::operator<<<char [79],(char *[79])0>(
                    (common::milog::MiLogStream *const)&val,
                    (const char (*)[79])"ConfigGCGConditionCheckCurCharacterPosition cur card is not on stage, card_id:");
            v87 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
            Id = GCGCard::getId(v87);
            common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v86, &Id);
            common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
            v88 = GCGEffectContext::getLogContext(context);
            v89 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v88->data, "|");
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v90 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
            if ( *(_BYTE *)(((unsigned __int64)v90 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
            (*v90)(&v120, this);
            v91 = 0;
            if ( (unsigned __int8)std::string::empty(&v120) )
            {
              std::allocator<char>::allocator(&__a);
              v91 = 1;
              v92 = this;
              if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
                __asan_report_load8(this);
              v93 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterPositionImpl *))(this->_vptr_ConfigGCGCondition
                                                                                               + 4);
              if ( *(_BYTE *)(((unsigned __int64)v93 >> 3) + 0x7FFF8000) )
                __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
              v94 = (const char *)(*v93)(v92);
              std::string::basic_string<std::allocator<char>>(&val, v94, &__a);
            }
            else
            {
              if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
                __asan_report_load8(this);
              v95 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
              if ( *(_BYTE *)(((unsigned __int64)v95 >> 3) + 0x7FFF8000) )
                __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
              (*v95)(&val, this);
            }
            v96 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v89, &val);
            v97 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v96, ":");
            v98 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v97, -1);
            v99 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v98, ":");
            common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v99, 439);
            v17 = -1;
            std::string::~string(&val);
            if ( v91 )
              std::allocator<char>::~allocator(&__a);
          }
        }
      }
    }
    else
    {
      common::milog::MiLogStream::create(
        &v120,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        410);
      v19 = common::milog::MiLogStream::operator<<<char [82],(char *[82])0>(
              &v120,
              (const char (*)[82])"ConfigGCGConditionCheckCurCharacterPosition cur_context not character card, card:");
      v20 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Id = GCGCard::getId(v20);
      v21 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v19, &Id);
      v22 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v21, (const char (*)[8])",param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v22, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v120);
      v23 = GCGEffectContext::getLogContext(context);
      v24 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v23->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v25 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v25)(&v120, this);
      v26 = 0;
      if ( (unsigned __int8)std::string::empty(&v120) )
      {
        std::allocator<char>::allocator(&__a);
        v26 = 1;
        v27 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v28 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterPositionImpl *))(this->_vptr_ConfigGCGCondition
                                                                                         + 4);
        if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v29 = (const char *)(*v28)(v27);
        std::string::basic_string<std::allocator<char>>(&val, v29, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v30 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterPositionImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v30)(&val, this);
      }
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v24, &val);
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, ":");
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, -1);
      v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, 411);
      v17 = -1;
      std::string::~string(&val);
      if ( v26 )
        std::allocator<char>::~allocator(&__a);
    }
  }
  std::string::~string(&v120);
  return v17;
};

// Line 451: range 000000000E137518-000000000E1385AE
int32_t __cdecl ConfigGCGConditionGlobalFetchCurSkillObjectImpl::checkCondition(
        ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const); // rax
  char v10; // r12
  ConfigGCGConditionGlobalFetchCurSkillObjectImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchCurSkillObjectImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  common::milog::MiLogStream *v20; // r12
  const LogContext *v21; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v22; // r14
  void (__fastcall **v23)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const); // rax
  char v24; // r12
  ConfigGCGConditionGlobalFetchCurSkillObjectImpl *v25; // rdx
  __int64 (__fastcall **v26)(ConfigGCGConditionGlobalFetchCurSkillObjectImpl *); // rax
  const char *v27; // rax
  void (__fastcall **v28)(std::string *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v29; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  const LogContext *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // r15
  void (__fastcall **v35)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const); // rax
  char v36; // r14
  ConfigGCGConditionGlobalFetchCurSkillObjectImpl *v37; // rdx
  __int64 (__fastcall **v38)(ConfigGCGConditionGlobalFetchCurSkillObjectImpl *); // rax
  const char *v39; // rax
  void (__fastcall **v40)(std::string *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v41; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v42; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v43; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v44; // rax
  common::milog::MiLogStream *v45; // r14
  common::milog::MiLogStream *v46; // rax
  common::milog::MiLogStream *v47; // r14
  std::__shared_ptr_access<GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v48; // rax
  std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v49; // rax
  unsigned __int64 v50; // rdx
  common::milog::MiLogStream *v51; // rax
  const LogContext *v52; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v53; // r15
  void (__fastcall **v54)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const); // rax
  char v55; // r14
  ConfigGCGConditionGlobalFetchCurSkillObjectImpl *v56; // rdx
  __int64 (__fastcall **v57)(ConfigGCGConditionGlobalFetchCurSkillObjectImpl *); // rax
  const char *v58; // rax
  void (__fastcall **v59)(std::string *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v60; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v61; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v62; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v63; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+27h] [rbp-129h] BYREF
  const std::shared_ptr<GCGSkill> *trigger_skill_ptr; // [rsp+28h] [rbp-128h]
  std::any current_context; // [rsp+30h] [rbp-120h] BYREF
  common::milog::MiLogStream v69; // [rsp+40h] [rbp-110h] BYREF
  common::milog::MiLogStream v70; // [rsp+60h] [rbp-F0h] BYREF
  std::string val; // [rsp+80h] [rbp-D0h] BYREF
  char v72[176]; // [rsp+A0h] [rbp-B0h] BYREF

  v3 = (unsigned __int64)v72;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 4 10 result:472 48 48 17 child_context:464";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchCurSkillObjectImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61956;
  v5[536862723] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  if ( std::operator==<GCGSkillUseParam>(&context->skill_param->trigger_window_param_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v70,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      454);
    v6 = common::milog::MiLogStream::operator<<<char [85],(char *[85])0>(
           &v70,
           (const char (*)[85])"ConfigGCGConditionGlobalFetchCurSkillObject trigger_windows_param is nullptr, param:");
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v70);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v70, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v70) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurSkillObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 455);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
LABEL_26:
    std::string::~string(&v70);
    goto LABEL_91;
  }
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  trigger_skill_ptr = (const std::shared_ptr<GCGSkill> *)std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
  if ( std::operator==<GCGSkill>(trigger_skill_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v70,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      460);
    v20 = common::milog::MiLogStream::operator<<<char [81],(char *[81])0>(
            &v70,
            (const char (*)[81])"ConfigGCGConditionGlobalFetchCurSkillObject trigger_skill_ptr is nullptr, param:");
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v20, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v70);
    v21 = GCGEffectContext::getLogContext(context);
    v22 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v21->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v23 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v23)(&v70, this);
    v24 = 0;
    if ( (unsigned __int8)std::string::empty(&v70) )
    {
      std::allocator<char>::allocator(&__a);
      v24 = 1;
      v25 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v26 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurSkillObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v26 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v27 = (const char *)(*v26)(v25);
      std::string::basic_string<std::allocator<char>>(&val, v27, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v28 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v28)(&val, this);
    }
    v29 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v22, &val);
    v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v29, ":");
    v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, -1);
    v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, 461);
    v19 = -1;
    std::string::~string(&val);
    if ( v24 )
      std::allocator<char>::~allocator(&__a);
    goto LABEL_26;
  }
  GCGEffectContext::GCGEffectContext((GCGEffectContext *const)(v3 + 48), context);
  std::any::any<std::shared_ptr<GCGSkill> const&,std::shared_ptr<GCGSkill>,std::any::_Manager_external<std::shared_ptr<GCGSkill>>,true,true>(
    &current_context,
    trigger_skill_ptr);
  GCGEffectContext::resetCurContext((GCGEffectContext *const)(v3 + 48), &current_context);
  std::any::~any(&current_context);
  if ( std::operator==<data::ConfigGCGLogicCondition>(&this->condition, 0LL) )
  {
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&val,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      468);
    common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
      (common::milog::MiLogStream *const)&val,
      (const char (*)[65])"ConfigGCGConditionGlobalFetchCurSkillObject condition is nullptr");
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
    v33 = GCGEffectContext::getLogContext(context);
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v33->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v35 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v35)(&v70, this);
    v36 = 0;
    if ( (unsigned __int8)std::string::empty(&v70) )
    {
      std::allocator<char>::allocator(&__a);
      v36 = 1;
      v37 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v38 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurSkillObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v38 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v39 = (const char *)(*v38)(v37);
      std::string::basic_string<std::allocator<char>>(&val, v39, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v40 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v40 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v40)(&val, this);
    }
    v41 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, &val);
    v42 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v41, ":");
    v43 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v42, -1);
    v44 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v43, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v44, 469);
    v19 = -1;
    std::string::~string(&val);
    if ( v36 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    common::milog::MiLogStream::create(
      &v69,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      471);
    v45 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
            &v69,
            (const char (*)[51])"ConfigGCGConditionGlobalFetchCurSkillObject skill:");
    GCGSkill::getName[abi:cxx11]((std::string *)&v70, cur_skill);
    v46 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v45, (const std::string *)&v70);
    v47 = common::milog::MiLogStream::operator<<<char [29],(char *[29])0>(
            v46,
            (const char (*)[29])" fetch trigger window skill:");
    v48 = std::__shared_ptr_access<GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false> *const)trigger_skill_ptr);
    GCGSkill::getName[abi:cxx11](&val, v48);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v47, &val);
    std::string::~string(&val);
    std::string::~string(&v70);
    common::milog::MiLogStream::~MiLogStream(&v69);
    v49 = std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)&this->condition);
    if ( *(_BYTE *)(((unsigned __int64)v49 >> 3) + 0x7FFF8000) )
      __asan_report_load8(v49);
    v50 = (unsigned __int64)(v49->_vptr_ConfigGCGCondition + 7);
    if ( *(_BYTE *)((v50 >> 3) + 0x7FFF8000) )
      __asan_report_load8(v49->_vptr_ConfigGCGCondition + 7);
    *(_DWORD *)(v3 + 32) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, unsigned __int64))v50)(
                             v49,
                             cur_skill,
                             v3 + 48);
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&val,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      473);
    v51 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
            (common::milog::MiLogStream *const)&val,
            (const char (*)[52])"ConfigGCGConditionGlobalFetchCurSkillObject result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v51, (const int *)(v3 + 32));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
    v52 = GCGEffectContext::getLogContext(context);
    v53 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v52->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v54 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v54 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v54)(&v70, this);
    v55 = 0;
    if ( (unsigned __int8)std::string::empty(&v70) )
    {
      std::allocator<char>::allocator(&__a);
      v55 = 1;
      v56 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v57 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurSkillObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v57 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v58 = (const char *)(*v57)(v56);
      std::string::basic_string<std::allocator<char>>(&val, v58, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v59 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurSkillObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v59 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v59)(&val, this);
    }
    v60 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v53, &val);
    v61 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v60, ":");
    v62 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v61, *(_DWORD *)(v3 + 32));
    v63 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v62, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v63, 474);
    v19 = *(_DWORD *)(v3 + 32);
    std::string::~string(&val);
    if ( v55 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v70);
  GCGEffectContext::~GCGEffectContext((GCGEffectContext *const)(v3 + 48));
LABEL_91:
  result = v19;
  if ( v72 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 479: range 000000000E1385B0-000000000E139647
int32_t __cdecl ConfigGCGConditionGlobalFetchCurCardObjectImpl::checkCondition(
        ConfigGCGConditionGlobalFetchCurCardObjectImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // rbx
  const LogContext *v7; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const); // rax
  char v10; // bl
  ConfigGCGConditionGlobalFetchCurCardObjectImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchCurCardObjectImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v23; // r15
  void (__fastcall **v24)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const); // rax
  char v25; // r14
  ConfigGCGConditionGlobalFetchCurCardObjectImpl *v26; // rdx
  __int64 (__fastcall **v27)(ConfigGCGConditionGlobalFetchCurCardObjectImpl *); // rax
  const char *v28; // rax
  void (__fastcall **v29)(std::string *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  const LogContext *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // r15
  void (__fastcall **v36)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const); // rax
  char v37; // r14
  ConfigGCGConditionGlobalFetchCurCardObjectImpl *v38; // rdx
  __int64 (__fastcall **v39)(ConfigGCGConditionGlobalFetchCurCardObjectImpl *); // rax
  const char *v40; // rax
  void (__fastcall **v41)(std::string *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v42; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v43; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v44; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v45; // rax
  common::milog::MiLogStream *v46; // r14
  common::milog::MiLogStream *v47; // rax
  common::milog::MiLogStream *v48; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v49; // rax
  std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v50; // rax
  unsigned __int64 v51; // rdx
  common::milog::MiLogStream *v52; // rax
  const LogContext *v53; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // r15
  void (__fastcall **v55)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const); // rax
  char v56; // r14
  ConfigGCGConditionGlobalFetchCurCardObjectImpl *v57; // rdx
  __int64 (__fastcall **v58)(ConfigGCGConditionGlobalFetchCurCardObjectImpl *); // rax
  const char *v59; // rax
  void (__fastcall **v60)(std::string *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v61; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v62; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v63; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v64; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-121h] BYREF
  std::any current_context; // [rsp+30h] [rbp-120h] BYREF
  common::milog::MiLogStream v69; // [rsp+40h] [rbp-110h] BYREF
  std::string val; // [rsp+60h] [rbp-F0h] BYREF
  char v71[208]; // [rsp+80h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v71;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 32 4 10 result:499 48 16 19 played_card_ptr:485 80 48 17 child_context:496";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchCurCardObjectImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61956;
  v5[536862722] = 62194;
  v5[536862724] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  if ( !std::operator==<GCGSkillUseParam>(&context->skill_param->trigger_window_param_ptr, 0LL) )
  {
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    v20 = std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
    std::shared_ptr<GCGCard>::shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 48), &v20->source_card_ptr);
    if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 48), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v69,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        488);
      v21 = common::milog::MiLogStream::operator<<<char [82],(char *[82])0>(
              &v69,
              (const char (*)[82])"ConfigGCGConditionGlobalFetchCurCardObject get played_card_ptr is nullptr, param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v69);
      LogContext = GCGEffectContext::getLogContext(context);
      v23 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v24)(&v69, this);
      v25 = 0;
      if ( (unsigned __int8)std::string::empty(&v69) )
      {
        std::allocator<char>::allocator(&__a);
        v25 = 1;
        v26 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                        + 4);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v28 = (const char *)(*v27)(v26);
        std::string::basic_string<std::allocator<char>>(&val, v28, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v29 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v29)(&val, this);
      }
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v23, &val);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, -1);
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, 489);
      v19 = -1;
      std::string::~string(&val);
      if ( v25 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      if ( !std::operator==<data::ConfigGCGLogicCondition>(&this->condition, 0LL) )
      {
        GCGEffectContext::GCGEffectContext((GCGEffectContext *const)(v3 + 80), context);
        std::any::any<std::shared_ptr<GCGCard> &,std::shared_ptr<GCGCard>,std::any::_Manager_external<std::shared_ptr<GCGCard>>,true,true>(
          &current_context,
          (std::shared_ptr<GCGCard> *)(v3 + 48));
        GCGEffectContext::resetCurContext((GCGEffectContext *const)(v3 + 80), &current_context);
        std::any::~any(&current_context);
        common::milog::MiLogStream::create(
          &v69,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          498);
        v46 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
                &v69,
                (const char (*)[50])"ConfigGCGConditionGlobalFetchCurCardObject skill:");
        GCGSkill::getName[abi:cxx11](&val, cur_skill);
        v47 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v46, &val);
        v48 = common::milog::MiLogStream::operator<<<char [28],(char *[28])0>(
                v47,
                (const char (*)[28])" fetch trigger window card:");
        v49 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
        *(_DWORD *)(v3 + 32) = GCGCard::getId(v49);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v48, (const unsigned int *)(v3 + 32));
        std::string::~string(&val);
        common::milog::MiLogStream::~MiLogStream(&v69);
        v50 = std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)&this->condition);
        if ( *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v50);
        v51 = (unsigned __int64)(v50->_vptr_ConfigGCGCondition + 7);
        if ( *(_BYTE *)((v51 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v50->_vptr_ConfigGCGCondition + 7);
        *(_DWORD *)(v3 + 32) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, unsigned __int64))v51)(
                                 v50,
                                 cur_skill,
                                 v3 + 80);
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&val,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          500);
        v52 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
                (common::milog::MiLogStream *const)&val,
                (const char (*)[51])"ConfigGCGConditionGlobalFetchCurCardObject result:");
        common::milog::MiLogStream::operator<<<int,(int *)0>(v52, (const int *)(v3 + 32));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
        v53 = GCGEffectContext::getLogContext(context);
        v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v53->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v55 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v55 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v55)(&v69, this);
        v56 = 0;
        if ( (unsigned __int8)std::string::empty(&v69) )
        {
          std::allocator<char>::allocator(&__a);
          v56 = 1;
          v57 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v58 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
          if ( *(_BYTE *)(((unsigned __int64)v58 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v59 = (const char *)(*v58)(v57);
          std::string::basic_string<std::allocator<char>>(&val, v59, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v60 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v60 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v60)(&val, this);
        }
        v61 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, &val);
        v62 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v61, ":");
        v63 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v62, *(_DWORD *)(v3 + 32));
        v64 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v63, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v64, 501);
        v19 = *(_DWORD *)(v3 + 32);
        std::string::~string(&val);
        if ( v56 )
          std::allocator<char>::~allocator(&__a);
        std::string::~string(&v69);
        GCGEffectContext::~GCGEffectContext((GCGEffectContext *const)(v3 + 80));
        goto LABEL_91;
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&val,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        493);
      common::milog::MiLogStream::operator<<<char [68],(char *[68])0>(
        (common::milog::MiLogStream *const)&val,
        (const char (*)[68])"ConfigGCGConditionGlobalFetchCurCardObject not find child condition");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
      v34 = GCGEffectContext::getLogContext(context);
      v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v34->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v36 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v36 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v36)(&v69, this);
      v37 = 0;
      if ( (unsigned __int8)std::string::empty(&v69) )
      {
        std::allocator<char>::allocator(&__a);
        v37 = 1;
        v38 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v39 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                        + 4);
        if ( *(_BYTE *)(((unsigned __int64)v39 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v40 = (const char *)(*v39)(v38);
        std::string::basic_string<std::allocator<char>>(&val, v40, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v41 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v41)(&val, this);
      }
      v42 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, &val);
      v43 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v42, ":");
      v44 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v43, -1);
      v45 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v44, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v45, 494);
      v19 = -1;
      std::string::~string(&val);
      if ( v37 )
        std::allocator<char>::~allocator(&__a);
    }
    std::string::~string(&v69);
LABEL_91:
    std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 48));
    goto LABEL_92;
  }
  common::milog::MiLogStream::create(
    &v69,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/card_game/skill/gcg_condition.cpp",
    "checkCondition",
    482);
  v6 = common::milog::MiLogStream::operator<<<char [84],(char *[84])0>(
         &v69,
         (const char (*)[84])"ConfigGCGConditionGlobalFetchCurCardObject trigger_windows_param is nullptr, param:");
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
  common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
  std::string::~string(&val);
  common::milog::MiLogStream::~MiLogStream(&v69);
  v7 = GCGEffectContext::getLogContext(context);
  v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v7->data, "|");
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
    __asan_report_load8(this);
  v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
  if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
    __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
  (*v9)(&v69, this);
  v10 = 0;
  if ( (unsigned __int8)std::string::empty(&v69) )
  {
    std::allocator<char>::allocator(&__a);
    v10 = 1;
    v11 = this;
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurCardObjectImpl *))(this->_vptr_ConfigGCGCondition + 4);
    if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
    v13 = (const char *)(*v12)(v11);
    std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v14)(&val, this);
  }
  v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
  v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
  v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
  v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 483);
  v19 = -1;
  std::string::~string(&val);
  if ( v10 )
    std::allocator<char>::~allocator(&__a);
  std::string::~string(&v69);
LABEL_92:
  result = v19;
  if ( v71 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 506: range 000000000E139648-000000000E13A6DF
int32_t __cdecl ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl::checkCondition(
        ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // rbx
  const LogContext *v7; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const); // rax
  char v10; // bl
  ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v23; // r15
  void (__fastcall **v24)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const); // rax
  char v25; // r14
  ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *v26; // rdx
  __int64 (__fastcall **v27)(ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *); // rax
  const char *v28; // rax
  void (__fastcall **v29)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  const LogContext *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // r15
  void (__fastcall **v36)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const); // rax
  char v37; // r14
  ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *v38; // rdx
  __int64 (__fastcall **v39)(ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *); // rax
  const char *v40; // rax
  void (__fastcall **v41)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v42; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v43; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v44; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v45; // rax
  common::milog::MiLogStream *v46; // r14
  common::milog::MiLogStream *v47; // rax
  common::milog::MiLogStream *v48; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v49; // rax
  std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v50; // rax
  unsigned __int64 v51; // rdx
  common::milog::MiLogStream *v52; // rax
  const LogContext *v53; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // r15
  void (__fastcall **v55)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const); // rax
  char v56; // r14
  ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *v57; // rdx
  __int64 (__fastcall **v58)(ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *); // rax
  const char *v59; // rax
  void (__fastcall **v60)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v61; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v62; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v63; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v64; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-121h] BYREF
  std::any current_context; // [rsp+30h] [rbp-120h] BYREF
  common::milog::MiLogStream v69; // [rsp+40h] [rbp-110h] BYREF
  std::string val; // [rsp+60h] [rbp-F0h] BYREF
  char v71[208]; // [rsp+80h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v71;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 32 4 10 result:526 48 16 19 source_card_ptr:512 80 48 17 child_context:523";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61956;
  v5[536862722] = 62194;
  v5[536862724] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  if ( !std::operator==<GCGSkillUseParam>(&context->skill_param->trigger_window_param_ptr, 0LL) )
  {
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    v20 = std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
    std::shared_ptr<GCGCard>::shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 48), &v20->source_card_ptr);
    if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 48), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v69,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        515);
      v21 = common::milog::MiLogStream::operator<<<char [90],(char *[90])0>(
              &v69,
              (const char (*)[90])"ConfigGCGConditionGlobalFetchSourceCharacterObject get source_card_ptr is nullptr, param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v69);
      LogContext = GCGEffectContext::getLogContext(context);
      v23 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v24)(&v69, this);
      v25 = 0;
      if ( (unsigned __int8)std::string::empty(&v69) )
      {
        std::allocator<char>::allocator(&__a);
        v25 = 1;
        v26 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                + 4);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v28 = (const char *)(*v27)(v26);
        std::string::basic_string<std::allocator<char>>(&val, v28, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v29 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v29)(&val, this);
      }
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v23, &val);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, -1);
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, 516);
      v19 = -1;
      std::string::~string(&val);
      if ( v25 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      if ( !std::operator==<data::ConfigGCGLogicCondition>(&this->condition, 0LL) )
      {
        GCGEffectContext::GCGEffectContext((GCGEffectContext *const)(v3 + 80), context);
        std::any::any<std::shared_ptr<GCGCard> &,std::shared_ptr<GCGCard>,std::any::_Manager_external<std::shared_ptr<GCGCard>>,true,true>(
          &current_context,
          (std::shared_ptr<GCGCard> *)(v3 + 48));
        GCGEffectContext::resetCurContext((GCGEffectContext *const)(v3 + 80), &current_context);
        std::any::~any(&current_context);
        common::milog::MiLogStream::create(
          &v69,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          525);
        v46 = common::milog::MiLogStream::operator<<<char [58],(char *[58])0>(
                &v69,
                (const char (*)[58])"ConfigGCGConditionGlobalFetchSourceCharacterObject skill:");
        GCGSkill::getName[abi:cxx11](&val, cur_skill);
        v47 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v46, &val);
        v48 = common::milog::MiLogStream::operator<<<char [40],(char *[40])0>(
                v47,
                (const char (*)[40])" fetch trigger window source character:");
        v49 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
        *(_DWORD *)(v3 + 32) = GCGCard::getId(v49);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v48, (const unsigned int *)(v3 + 32));
        std::string::~string(&val);
        common::milog::MiLogStream::~MiLogStream(&v69);
        v50 = std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)&this->condition);
        if ( *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v50);
        v51 = (unsigned __int64)(v50->_vptr_ConfigGCGCondition + 7);
        if ( *(_BYTE *)((v51 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v50->_vptr_ConfigGCGCondition + 7);
        *(_DWORD *)(v3 + 32) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, unsigned __int64))v51)(
                                 v50,
                                 cur_skill,
                                 v3 + 80);
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&val,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          527);
        v52 = common::milog::MiLogStream::operator<<<char [59],(char *[59])0>(
                (common::milog::MiLogStream *const)&val,
                (const char (*)[59])"ConfigGCGConditionGlobalFetchSourceCharacterObject result:");
        common::milog::MiLogStream::operator<<<int,(int *)0>(v52, (const int *)(v3 + 32));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
        v53 = GCGEffectContext::getLogContext(context);
        v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v53->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v55 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v55 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v55)(&v69, this);
        v56 = 0;
        if ( (unsigned __int8)std::string::empty(&v69) )
        {
          std::allocator<char>::allocator(&__a);
          v56 = 1;
          v57 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v58 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                  + 4);
          if ( *(_BYTE *)(((unsigned __int64)v58 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v59 = (const char *)(*v58)(v57);
          std::string::basic_string<std::allocator<char>>(&val, v59, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v60 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v60 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v60)(&val, this);
        }
        v61 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, &val);
        v62 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v61, ":");
        v63 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v62, *(_DWORD *)(v3 + 32));
        v64 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v63, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v64, 528);
        v19 = *(_DWORD *)(v3 + 32);
        std::string::~string(&val);
        if ( v56 )
          std::allocator<char>::~allocator(&__a);
        std::string::~string(&v69);
        GCGEffectContext::~GCGEffectContext((GCGEffectContext *const)(v3 + 80));
        goto LABEL_91;
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&val,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        520);
      common::milog::MiLogStream::operator<<<char [76],(char *[76])0>(
        (common::milog::MiLogStream *const)&val,
        (const char (*)[76])"ConfigGCGConditionGlobalFetchSourceCharacterObject not find child condition");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
      v34 = GCGEffectContext::getLogContext(context);
      v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v34->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v36 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v36 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v36)(&v69, this);
      v37 = 0;
      if ( (unsigned __int8)std::string::empty(&v69) )
      {
        std::allocator<char>::allocator(&__a);
        v37 = 1;
        v38 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v39 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                + 4);
        if ( *(_BYTE *)(((unsigned __int64)v39 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v40 = (const char *)(*v39)(v38);
        std::string::basic_string<std::allocator<char>>(&val, v40, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v41 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v41)(&val, this);
      }
      v42 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, &val);
      v43 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v42, ":");
      v44 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v43, -1);
      v45 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v44, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v45, 521);
      v19 = -1;
      std::string::~string(&val);
      if ( v37 )
        std::allocator<char>::~allocator(&__a);
    }
    std::string::~string(&v69);
LABEL_91:
    std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 48));
    goto LABEL_92;
  }
  common::milog::MiLogStream::create(
    &v69,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/card_game/skill/gcg_condition.cpp",
    "checkCondition",
    509);
  v6 = common::milog::MiLogStream::operator<<<char [92],(char *[92])0>(
         &v69,
         (const char (*)[92])"ConfigGCGConditionGlobalFetchSourceCharacterObject trigger_windows_param is nullptr, param:");
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
  common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
  std::string::~string(&val);
  common::milog::MiLogStream::~MiLogStream(&v69);
  v7 = GCGEffectContext::getLogContext(context);
  v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v7->data, "|");
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
    __asan_report_load8(this);
  v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
  if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
    __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
  (*v9)(&v69, this);
  v10 = 0;
  if ( (unsigned __int8)std::string::empty(&v69) )
  {
    std::allocator<char>::allocator(&__a);
    v10 = 1;
    v11 = this;
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                            + 4);
    if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
    v13 = (const char *)(*v12)(v11);
    std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSourceCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v14)(&val, this);
  }
  v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
  v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
  v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
  v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 510);
  v19 = -1;
  std::string::~string(&val);
  if ( v10 )
    std::allocator<char>::~allocator(&__a);
  std::string::~string(&v69);
LABEL_92:
  result = v19;
  if ( v71 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 533: range 000000000E13A6E0-000000000E13BB27
int32_t __cdecl ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl::checkCondition(
        ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // rbx
  const LogContext *v7; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const); // rax
  char v10; // bl
  ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r14d
  std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v23; // r14
  void (__fastcall **v24)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const); // rax
  char v25; // r15
  ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *v26; // rdx
  __int64 (__fastcall **v27)(ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *); // rax
  const char *v28; // rax
  void (__fastcall **v29)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v34; // rax
  common::milog::MiLogStream *v35; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v36; // rax
  common::milog::MiLogStream *v37; // rax
  common::milog::MiLogStream *v38; // r14
  const LogContext *v39; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v40; // r14
  void (__fastcall **v41)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const); // rax
  char v42; // r15
  ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *v43; // rdx
  __int64 (__fastcall **v44)(ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *); // rax
  const char *v45; // rax
  void (__fastcall **v46)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v47; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v48; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  const LogContext *v51; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v52; // r14
  void (__fastcall **v53)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const); // rax
  char v54; // r15
  ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *v55; // rdx
  __int64 (__fastcall **v56)(ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *); // rax
  const char *v57; // rax
  void (__fastcall **v58)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v59; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v60; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v61; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v62; // rax
  common::milog::MiLogStream *v63; // r14
  common::milog::MiLogStream *v64; // rax
  common::milog::MiLogStream *v65; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v66; // rax
  std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v67; // rax
  unsigned __int64 v68; // rdx
  common::milog::MiLogStream *v69; // rax
  const LogContext *v70; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v71; // r14
  void (__fastcall **v72)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const); // rax
  char v73; // r15
  ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *v74; // rdx
  __int64 (__fastcall **v75)(ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *); // rax
  const char *v76; // rax
  void (__fastcall **v77)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v78; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v79; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v80; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v81; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-121h] BYREF
  std::any current_context; // [rsp+30h] [rbp-120h] BYREF
  common::milog::MiLogStream v86; // [rsp+40h] [rbp-110h] BYREF
  std::string val; // [rsp+60h] [rbp-F0h] BYREF
  char v88[208]; // [rsp+80h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v88;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 32 4 10 result:558 48 16 19 target_card_ptr:539 80 48 17 child_context:555";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61956;
  v5[536862722] = 62194;
  v5[536862724] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  if ( !std::operator==<GCGSkillUseParam>(&context->skill_param->trigger_window_param_ptr, 0LL) )
  {
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    v20 = std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
    std::shared_ptr<GCGCard>::shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 48), &v20->target_card_ptr);
    if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 48), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v86,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        542);
      v21 = common::milog::MiLogStream::operator<<<char [90],(char *[90])0>(
              &v86,
              (const char (*)[90])"ConfigGCGConditionGlobalFetchTargetCharacterObject get target_card_ptr is nullptr, param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v86);
      LogContext = GCGEffectContext::getLogContext(context);
      v23 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v24)(&v86, this);
      v25 = 0;
      if ( (unsigned __int8)std::string::empty(&v86) )
      {
        std::allocator<char>::allocator(&__a);
        v25 = 1;
        v26 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                + 4);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v28 = (const char *)(*v27)(v26);
        std::string::basic_string<std::allocator<char>>(&val, v28, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v29 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v29)(&val, this);
      }
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v23, &val);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, -1);
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, 543);
      v19 = -1;
      std::string::~string(&val);
      if ( v25 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      v34 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
      if ( GCGCard::getCardType(v34) == GCG_CARD_CHARACTER )
      {
        if ( !std::operator==<data::ConfigGCGLogicCondition>(&this->condition, 0LL) )
        {
          GCGEffectContext::GCGEffectContext((GCGEffectContext *const)(v3 + 80), context);
          std::any::any<std::shared_ptr<GCGCard> &,std::shared_ptr<GCGCard>,std::any::_Manager_external<std::shared_ptr<GCGCard>>,true,true>(
            &current_context,
            (std::shared_ptr<GCGCard> *)(v3 + 48));
          GCGEffectContext::resetCurContext((GCGEffectContext *const)(v3 + 80), &current_context);
          std::any::~any(&current_context);
          common::milog::MiLogStream::create(
            &v86,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/card_game/skill/gcg_condition.cpp",
            "checkCondition",
            557);
          v63 = common::milog::MiLogStream::operator<<<char [58],(char *[58])0>(
                  &v86,
                  (const char (*)[58])"ConfigGCGConditionGlobalFetchTargetCharacterObject skill:");
          GCGSkill::getName[abi:cxx11](&val, cur_skill);
          v64 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v63, &val);
          v65 = common::milog::MiLogStream::operator<<<char [34],(char *[34])0>(
                  v64,
                  (const char (*)[34])" trigger window target character:");
          v66 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
          *(_DWORD *)(v3 + 32) = GCGCard::getId(v66);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v65, (const unsigned int *)(v3 + 32));
          std::string::~string(&val);
          common::milog::MiLogStream::~MiLogStream(&v86);
          v67 = std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)&this->condition);
          if ( *(_BYTE *)(((unsigned __int64)v67 >> 3) + 0x7FFF8000) )
            __asan_report_load8(v67);
          v68 = (unsigned __int64)(v67->_vptr_ConfigGCGCondition + 7);
          if ( *(_BYTE *)((v68 >> 3) + 0x7FFF8000) )
            __asan_report_load8(v67->_vptr_ConfigGCGCondition + 7);
          *(_DWORD *)(v3 + 32) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, unsigned __int64))v68)(
                                   v67,
                                   cur_skill,
                                   v3 + 80);
          common::milog::MiLogStream::create(
            (common::milog::MiLogStream *)&val,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/card_game/skill/gcg_condition.cpp",
            "checkCondition",
            559);
          v69 = common::milog::MiLogStream::operator<<<char [59],(char *[59])0>(
                  (common::milog::MiLogStream *const)&val,
                  (const char (*)[59])"ConfigGCGConditionGlobalFetchTargetCharacterObject result:");
          common::milog::MiLogStream::operator<<<int,(int *)0>(v69, (const int *)(v3 + 32));
          common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
          v70 = GCGEffectContext::getLogContext(context);
          v71 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v70->data, "|");
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v72 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v72 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v72)(&v86, this);
          v73 = 0;
          if ( (unsigned __int8)std::string::empty(&v86) )
          {
            std::allocator<char>::allocator(&__a);
            v73 = 1;
            v74 = this;
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v75 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition + 4);
            if ( *(_BYTE *)(((unsigned __int64)v75 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
            v76 = (const char *)(*v75)(v74);
            std::string::basic_string<std::allocator<char>>(&val, v76, &__a);
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v77 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
            if ( *(_BYTE *)(((unsigned __int64)v77 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
            (*v77)(&val, this);
          }
          v78 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v71, &val);
          v79 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v78, ":");
          v80 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v79, *(_DWORD *)(v3 + 32));
          v81 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v80, ":");
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v81, 560);
          v19 = *(_DWORD *)(v3 + 32);
          std::string::~string(&val);
          if ( v73 )
            std::allocator<char>::~allocator(&__a);
          std::string::~string(&v86);
          GCGEffectContext::~GCGEffectContext((GCGEffectContext *const)(v3 + 80));
          goto LABEL_112;
        }
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&val,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          552);
        common::milog::MiLogStream::operator<<<char [76],(char *[76])0>(
          (common::milog::MiLogStream *const)&val,
          (const char (*)[76])"ConfigGCGConditionGlobalFetchTargetCharacterObject not find child condition");
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
        v51 = GCGEffectContext::getLogContext(context);
        v52 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v51->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v53 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v53 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v53)(&v86, this);
        v54 = 0;
        if ( (unsigned __int8)std::string::empty(&v86) )
        {
          std::allocator<char>::allocator(&__a);
          v54 = 1;
          v55 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v56 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                  + 4);
          if ( *(_BYTE *)(((unsigned __int64)v56 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v57 = (const char *)(*v56)(v55);
          std::string::basic_string<std::allocator<char>>(&val, v57, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v58 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v58 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v58)(&val, this);
        }
        v59 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v52, &val);
        v60 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v59, ":");
        v61 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v60, -1);
        v62 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v61, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v62, 553);
        v19 = -1;
        std::string::~string(&val);
        if ( v54 )
          std::allocator<char>::~allocator(&__a);
      }
      else
      {
        common::milog::MiLogStream::create(
          &v86,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          547);
        v35 = common::milog::MiLogStream::operator<<<char [87],(char *[87])0>(
                &v86,
                (const char (*)[87])"ConfigGCGConditionGlobalFetchTargetCharacterObject target_card_ptr not character card:");
        v36 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
        *(_DWORD *)(v3 + 32) = GCGCard::getId(v36);
        v37 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(
                v35,
                (const unsigned int *)(v3 + 32));
        v38 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v37, (const char (*)[8])",param:");
        if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
          __asan_report_load8(context);
        GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v38, &val);
        std::string::~string(&val);
        common::milog::MiLogStream::~MiLogStream(&v86);
        v39 = GCGEffectContext::getLogContext(context);
        v40 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v39->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v41 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v41)(&v86, this);
        v42 = 0;
        if ( (unsigned __int8)std::string::empty(&v86) )
        {
          std::allocator<char>::allocator(&__a);
          v42 = 1;
          v43 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v44 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                  + 4);
          if ( *(_BYTE *)(((unsigned __int64)v44 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v45 = (const char *)(*v44)(v43);
          std::string::basic_string<std::allocator<char>>(&val, v45, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v46 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v46 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v46)(&val, this);
        }
        v47 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v40, &val);
        v48 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v47, ":");
        v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v48, -1);
        v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, 548);
        v19 = -1;
        std::string::~string(&val);
        if ( v42 )
          std::allocator<char>::~allocator(&__a);
      }
    }
    std::string::~string(&v86);
LABEL_112:
    std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 48));
    goto LABEL_113;
  }
  common::milog::MiLogStream::create(
    &v86,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/card_game/skill/gcg_condition.cpp",
    "checkCondition",
    536);
  v6 = common::milog::MiLogStream::operator<<<char [92],(char *[92])0>(
         &v86,
         (const char (*)[92])"ConfigGCGConditionGlobalFetchTargetCharacterObject trigger_windows_param is nullptr, param:");
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
  common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
  std::string::~string(&val);
  common::milog::MiLogStream::~MiLogStream(&v86);
  v7 = GCGEffectContext::getLogContext(context);
  v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v7->data, "|");
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
    __asan_report_load8(this);
  v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
  if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
    __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
  (*v9)(&v86, this);
  v10 = 0;
  if ( (unsigned __int8)std::string::empty(&v86) )
  {
    std::allocator<char>::allocator(&__a);
    v10 = 1;
    v11 = this;
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                            + 4);
    if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
    v13 = (const char *)(*v12)(v11);
    std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchTargetCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v14)(&val, this);
  }
  v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
  v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
  v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
  v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 537);
  v19 = -1;
  std::string::~string(&val);
  if ( v10 )
    std::allocator<char>::~allocator(&__a);
  std::string::~string(&v86);
LABEL_113:
  result = v19;
  if ( v88 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 565: range 000000000E13BB28-000000000E13C2C9
int32_t __cdecl ConfigGCGConditionGlobalFetchThisCardImpl::checkCondition(
        ConfigGCGConditionGlobalFetchThisCardImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v7; // r15
  void (__fastcall **v8)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardImpl *const); // rax
  char v9; // r14
  ConfigGCGConditionGlobalFetchThisCardImpl *v10; // rdx
  __int64 (__fastcall **v11)(ConfigGCGConditionGlobalFetchThisCardImpl *); // rax
  const char *v12; // rax
  void (__fastcall **v13)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v14; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  int32_t v18; // r15d
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // rax
  common::milog::MiLogStream *v20; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  const LogContext *v24; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v25; // r15
  void (__fastcall **v26)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardImpl *const); // rax
  char v27; // r14
  ConfigGCGConditionGlobalFetchThisCardImpl *v28; // rdx
  __int64 (__fastcall **v29)(ConfigGCGConditionGlobalFetchThisCardImpl *); // rax
  const char *v30; // rax
  void (__fastcall **v31)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-D1h] BYREF
  common::milog::MiLogStream v39; // [rsp+30h] [rbp-D0h] BYREF
  common::milog::MiLogStream v40; // [rsp+50h] [rbp-B0h] BYREF
  char v41[144]; // [rsp+70h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v41;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 10 result:572 64 16 17 this_card_ptr:566";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchThisCardImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 64));
  if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 64), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v40,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      569);
    common::milog::MiLogStream::operator<<<char [57],(char *[57])0>(
      &v40,
      (const char (*)[57])"ConfigGCGConditionGlobalFetchThisCard get curcard failed");
    common::milog::MiLogStream::~MiLogStream(&v40);
    LogContext = GCGEffectContext::getLogContext(context);
    v7 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v8 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v8)(&v39, this);
    v9 = 0;
    if ( (unsigned __int8)std::string::empty(&v39) )
    {
      std::allocator<char>::allocator(&__a);
      v9 = 1;
      v10 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v11 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchThisCardImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v12 = (const char *)(*v11)(v10);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v40, v12, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v13)(&v40, this);
    }
    v14 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v7, (const std::string *)&v40);
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v14, ":");
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, -1);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, 570);
    v18 = -1;
    std::string::~string(&v40);
    if ( v9 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v19 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    *(_DWORD *)(v3 + 48) = GCGCard::getGuid(v19);
    common::milog::MiLogStream::create(
      &v39,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      573);
    v20 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
            &v39,
            (const char (*)[52])"ConfigGCGConditionGlobalFetchThisCard get cur card:");
    v21 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    GCGCard::getDesc[abi:cxx11]((std::string *)&v40, v21);
    v22 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v20, (const std::string *)&v40);
    v23 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v22, (const char (*)[10])", result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v23, (const int *)(v3 + 48));
    std::string::~string(&v40);
    common::milog::MiLogStream::~MiLogStream(&v39);
    v24 = GCGEffectContext::getLogContext(context);
    v25 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v24->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v26 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v26 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v26)(&v39, this);
    v27 = 0;
    if ( (unsigned __int8)std::string::empty(&v39) )
    {
      std::allocator<char>::allocator(&__a);
      v27 = 1;
      v28 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v29 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchThisCardImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v30 = (const char *)(*v29)(v28);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v40, v30, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v31 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v31)(&v40, this);
    }
    v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v25, (const std::string *)&v40);
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, *(_DWORD *)(v3 + 48));
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, 574);
    v18 = *(_DWORD *)(v3 + 48);
    std::string::~string(&v40);
    if ( v27 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v39);
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v18;
  if ( v41 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 579: range 000000000E13C2CA-000000000E13CE19
int32_t __cdecl ConfigGCGConditionGlobalFetchThisCardObjectImpl::checkCondition(
        ConfigGCGConditionGlobalFetchThisCardObjectImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v7; // r15
  void (__fastcall **v8)(char *, ConfigGCGConditionGlobalFetchThisCardObjectImpl *const); // rax
  char v9; // r14
  ConfigGCGConditionGlobalFetchThisCardObjectImpl *v10; // rdx
  __int64 (__fastcall **v11)(ConfigGCGConditionGlobalFetchThisCardObjectImpl *); // rax
  const char *v12; // rax
  void (__fastcall **v13)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v14; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  int32_t v18; // r15d
  const LogContext *v19; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v20; // r15
  void (__fastcall **v21)(char *, ConfigGCGConditionGlobalFetchThisCardObjectImpl *const); // rax
  char v22; // r14
  ConfigGCGConditionGlobalFetchThisCardObjectImpl *v23; // rdx
  __int64 (__fastcall **v24)(ConfigGCGConditionGlobalFetchThisCardObjectImpl *); // rax
  const char *v25; // rax
  void (__fastcall **v26)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v28; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v29; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v31; // rax
  unsigned __int64 v32; // rdx
  common::milog::MiLogStream *v33; // rax
  const LogContext *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // r15
  void (__fastcall **v36)(char *, ConfigGCGConditionGlobalFetchThisCardObjectImpl *const); // rax
  char v37; // r14
  ConfigGCGConditionGlobalFetchThisCardObjectImpl *v38; // rdx
  __int64 (__fastcall **v39)(ConfigGCGConditionGlobalFetchThisCardObjectImpl *); // rax
  const char *v40; // rax
  void (__fastcall **v41)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v42; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v43; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v44; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v45; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-121h] BYREF
  std::any current_context; // [rsp+30h] [rbp-120h] BYREF
  char v50[32]; // [rsp+40h] [rbp-110h] BYREF
  common::milog::MiLogStream v51; // [rsp+60h] [rbp-F0h] BYREF
  char v52[208]; // [rsp+80h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v52;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 32 4 10 result:586 48 16 17 this_card_ptr:580 80 48 17 child_context:592";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchThisCardObjectImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61956;
  v5[536862722] = 62194;
  v5[536862724] = -202116109;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 48));
  if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 48), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v51,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      583);
    common::milog::MiLogStream::operator<<<char [79],(char *[79])0>(
      &v51,
      (const char (*)[79])"ConfigGCGConditionGlobalFetchThisCardObject checkCondition get thiscard failed");
    common::milog::MiLogStream::~MiLogStream(&v51);
    LogContext = GCGEffectContext::getLogContext(context);
    v7 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v8 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalFetchThisCardObjectImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                              + 8);
    if ( *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v8)(v50, this);
    v9 = 0;
    if ( (unsigned __int8)std::string::empty(v50) )
    {
      std::allocator<char>::allocator(&__a);
      v9 = 1;
      v10 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v11 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchThisCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v12 = (const char *)(*v11)(v10);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v51, v12, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v13)(&v51, this);
    }
    v14 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v7, (const std::string *)&v51);
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v14, ":");
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, -1);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, 584);
    v18 = -1;
    std::string::~string(&v51);
    if ( v9 )
      std::allocator<char>::~allocator(&__a);
LABEL_22:
    std::string::~string(v50);
    goto LABEL_64;
  }
  *(_DWORD *)(v3 + 32) = -1;
  if ( std::operator==<data::ConfigGCGLogicCondition>(&this->condition, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v51,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      589);
    common::milog::MiLogStream::operator<<<char [69],(char *[69])0>(
      &v51,
      (const char (*)[69])"ConfigGCGConditionGlobalFetchThisCardObject not find child condition");
    common::milog::MiLogStream::~MiLogStream(&v51);
    v19 = GCGEffectContext::getLogContext(context);
    v20 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v19->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v21 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalFetchThisCardObjectImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                               + 8);
    if ( *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v21)(v50, this);
    v22 = 0;
    if ( (unsigned __int8)std::string::empty(v50) )
    {
      std::allocator<char>::allocator(&__a);
      v22 = 1;
      v23 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchThisCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v25 = (const char *)(*v24)(v23);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v51, v25, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v26 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v26 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v26)(&v51, this);
    }
    v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v20, (const std::string *)&v51);
    v28 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, ":");
    v29 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v28, -1);
    v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v29, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, 590);
    v18 = -1;
    std::string::~string(&v51);
    if ( v22 )
      std::allocator<char>::~allocator(&__a);
    goto LABEL_22;
  }
  GCGEffectContext::GCGEffectContext((GCGEffectContext *const)(v3 + 80), context);
  std::any::any<std::shared_ptr<GCGCard> &,std::shared_ptr<GCGCard>,std::any::_Manager_external<std::shared_ptr<GCGCard>>,true,true>(
    &current_context,
    (std::shared_ptr<GCGCard> *)(v3 + 48));
  GCGEffectContext::resetCurContext((GCGEffectContext *const)(v3 + 80), &current_context);
  std::any::~any(&current_context);
  v31 = std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)&this->condition);
  if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
    __asan_report_load8(v31);
  v32 = (unsigned __int64)(v31->_vptr_ConfigGCGCondition + 7);
  if ( *(_BYTE *)((v32 >> 3) + 0x7FFF8000) )
    __asan_report_load8(v31->_vptr_ConfigGCGCondition + 7);
  *(_DWORD *)(v3 + 32) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, unsigned __int64))v32)(
                           v31,
                           cur_skill,
                           v3 + 80);
  common::milog::MiLogStream::create(
    &v51,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/card_game/skill/gcg_condition.cpp",
    "checkCondition",
    596);
  v33 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
          &v51,
          (const char (*)[52])"ConfigGCGConditionGlobalFetchThisCardObject result:");
  common::milog::MiLogStream::operator<<<int,(int *)0>(v33, (const int *)(v3 + 32));
  common::milog::MiLogStream::~MiLogStream(&v51);
  v34 = GCGEffectContext::getLogContext(context);
  v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v34->data, "|");
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
    __asan_report_load8(this);
  v36 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalFetchThisCardObjectImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                             + 8);
  if ( *(_BYTE *)(((unsigned __int64)v36 >> 3) + 0x7FFF8000) )
    __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
  (*v36)(v50, this);
  v37 = 0;
  if ( (unsigned __int8)std::string::empty(v50) )
  {
    std::allocator<char>::allocator(&__a);
    v37 = 1;
    v38 = this;
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v39 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchThisCardObjectImpl *))(this->_vptr_ConfigGCGCondition + 4);
    if ( *(_BYTE *)(((unsigned __int64)v39 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
    v40 = (const char *)(*v39)(v38);
    std::string::basic_string<std::allocator<char>>((std::string *const)&v51, v40, &__a);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v41 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchThisCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v41)(&v51, this);
  }
  v42 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, (const std::string *)&v51);
  v43 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v42, ":");
  v44 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v43, *(_DWORD *)(v3 + 32));
  v45 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v44, ":");
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v45, 597);
  v18 = *(_DWORD *)(v3 + 32);
  std::string::~string(&v51);
  if ( v37 )
    std::allocator<char>::~allocator(&__a);
  std::string::~string(v50);
  GCGEffectContext::~GCGEffectContext((GCGEffectContext *const)(v3 + 80));
LABEL_64:
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 48));
  result = v18;
  if ( v52 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 602: range 000000000E13CE1A-000000000E13D5FA
int32_t __cdecl ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl::checkCondition(
        ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v7; // r15
  void (__fastcall **v8)(char *, ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *const); // rax
  char v9; // r14
  ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *v10; // rdx
  __int64 (__fastcall **v11)(ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *); // rax
  const char *v12; // rax
  void (__fastcall **v13)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v14; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  int32_t v18; // r15d
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // rax
  GCGGameMode *GameMode; // rax
  GCGDuel *Duel; // rax
  GCGCardZone *SummonZone; // rax
  common::milog::MiLogStream *v23; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  common::milog::MiLogStream *v28; // rax
  const LogContext *v29; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // r15
  void (__fastcall **v31)(char *, ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *const); // rax
  char v32; // r14
  ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *v33; // rdx
  __int64 (__fastcall **v34)(ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *); // rax
  const char *v35; // rax
  void (__fastcall **v36)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v38; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v39; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v40; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+23h] [rbp-DDh] BYREF
  unsigned int val; // [rsp+24h] [rbp-DCh] BYREF
  GCGField *field; // [rsp+28h] [rbp-D8h]
  char v46[32]; // [rsp+30h] [rbp-D0h] BYREF
  common::milog::MiLogStream v47; // [rsp+50h] [rbp-B0h] BYREF
  char v48[144]; // [rsp+70h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v48;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 32 4 21 cur_controller_id:610 48 4 10 result:612 64 16 17 this_card_ptr:604";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556924;
  v5[536862722] = -202178560;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 64));
  if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 64), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v47,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      607);
    common::milog::MiLogStream::operator<<<char [74],(char *[74])0>(
      &v47,
      (const char (*)[74])"ConfigGCGConditionGlobalFetchOnStageSummonNumber this_card_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v47);
    LogContext = GCGEffectContext::getLogContext(context);
    v7 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v8 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v8)(v46, this);
    v9 = 0;
    if ( (unsigned __int8)std::string::empty(v46) )
    {
      std::allocator<char>::allocator(&__a);
      v9 = 1;
      v10 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v11 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *))(this->_vptr_ConfigGCGCondition
                                                                                            + 4);
      if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v12 = (const char *)(*v11)(v10);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v47, v12, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v13)(&v47, this);
    }
    v14 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v7, (const std::string *)&v47);
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v14, ":");
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, -1);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, 608);
    v18 = -1;
    std::string::~string(&v47);
    if ( v9 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v19 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    *(_DWORD *)(v3 + 32) = GCGCard::getControllerId(v19);
    GameMode = GCGSkill::getGameMode(cur_skill);
    Duel = GCGGameMode::getDuel(GameMode);
    field = GCGDuel::getField(Duel, (GCGControllerValue)*(_DWORD *)(v3 + 32));
    SummonZone = GCGField::getSummonZone(field);
    *(_DWORD *)(v3 + 48) = GCGCardZone::getSize(SummonZone);
    common::milog::MiLogStream::create(
      &v47,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      613);
    v23 = common::milog::MiLogStream::operator<<<char [64],(char *[64])0>(
            &v47,
            (const char (*)[64])"ConfigGCGConditionGlobalFetchOnStageSummonNumber get this card:");
    v24 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    val = GCGCard::getId(v24);
    v25 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v23, &val);
    v26 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v25, (const char (*)[13])" controller:");
    v27 = common::milog::MiLogStream::operator<<<proto::GCGControllerValue,(proto::GCGControllerValue*)0>(
            v26,
            (const proto::GCGControllerValue *)(v3 + 32));
    v28 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v27, (const char (*)[9])" result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v28, (const int *)(v3 + 48));
    common::milog::MiLogStream::~MiLogStream(&v47);
    v29 = GCGEffectContext::getLogContext(context);
    v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v29->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v31 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v31)(v46, this);
    v32 = 0;
    if ( (unsigned __int8)std::string::empty(v46) )
    {
      std::allocator<char>::allocator(&__a);
      v32 = 1;
      v33 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v34 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *))(this->_vptr_ConfigGCGCondition
                                                                                            + 4);
      if ( *(_BYTE *)(((unsigned __int64)v34 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v35 = (const char *)(*v34)(v33);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v47, v35, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v36 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchOnStageSummonNumberImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v36 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v36)(&v47, this);
    }
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, (const std::string *)&v47);
    v38 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, ":");
    v39 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v38, *(_DWORD *)(v3 + 48));
    v40 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v39, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v40, 614);
    v18 = *(_DWORD *)(v3 + 48);
    std::string::~string(&v47);
    if ( v32 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(v46);
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v18;
  if ( v48 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 619: range 000000000E13D5FC-000000000E13D832
int32_t __cdecl ConfigGCGConditionCheckCurSkillHasTagImpl::checkCondition(
        ConfigGCGConditionCheckCurSkillHasTagImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGSkill> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGSkill> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurSkillHasTagImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGSkill> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGSkill>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGSkill> const&>(&context->cur_context);
    std::shared_ptr<GCGSkill const>::shared_ptr<GCGSkill,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurSkillHasTagImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGSkill const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGSkill const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGSkill const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurSkillHasTagImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        620);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGSkill>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGSkill const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 624: range 000000000E13D834-000000000E13E213
int32_t __cdecl ConfigGCGConditionCheckCurSkillHasTagImpl::checkCondition(
        ConfigGCGConditionCheckCurSkillHasTagImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGSkill> *skill_ptr)
{
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v5; // r12
  void (__fastcall **v6)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasTagImpl *const); // rax
  char v7; // bl
  ConfigGCGConditionCheckCurSkillHasTagImpl *v8; // rdx
  __int64 (__fastcall **v9)(ConfigGCGConditionCheckCurSkillHasTagImpl *); // rax
  const char *v10; // rax
  void (__fastcall **v11)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasTagImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v12; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v13; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v14; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  int32_t v16; // r12d
  std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v17; // rcx
  common::milog::MiLogStream *v18; // rbx
  std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // rax
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rcx
  const LogContext *v22; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v23; // r12
  void (__fastcall **v24)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasTagImpl *const); // rax
  char v25; // bl
  ConfigGCGConditionCheckCurSkillHasTagImpl *v26; // rdx
  __int64 (__fastcall **v27)(ConfigGCGConditionCheckCurSkillHasTagImpl *); // rax
  const char *v28; // rax
  void (__fastcall **v29)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasTagImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::milog::MiLogStream *v34; // rbx
  std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v35; // rax
  common::milog::MiLogStream *v36; // rax
  common::milog::MiLogStream *v37; // rcx
  const LogContext *v38; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v39; // r12
  void (__fastcall **v40)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasTagImpl *const); // rax
  char v41; // bl
  ConfigGCGConditionCheckCurSkillHasTagImpl *v42; // rdx
  __int64 (__fastcall **v43)(ConfigGCGConditionCheckCurSkillHasTagImpl *); // rax
  const char *v44; // rax
  void (__fastcall **v45)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasTagImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v46; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v47; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v48; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  std::allocator<char> __a; // [rsp+2Bh] [rbp-55h] BYREF
  int val; // [rsp+2Ch] [rbp-54h] BYREF
  common::milog::MiLogStream v55; // [rsp+30h] [rbp-50h] BYREF
  common::milog::MiLogStream v56; // [rsp+50h] [rbp-30h] BYREF

  if ( std::operator==<GCGSkill const>(skill_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v56,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      627);
    common::milog::MiLogStream::operator<<<char [59],(char *[59])0>(
      &v56,
      (const char (*)[59])"ConfigGCGConditionCheckCurSkillHasTag skill_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v56);
    LogContext = GCGEffectContext::getLogContext(context);
    v5 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v6 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasTagImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v6 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v6)(&v55, this);
    v7 = 0;
    if ( (unsigned __int8)std::string::empty(&v55) )
    {
      std::allocator<char>::allocator(&__a);
      v7 = 1;
      v8 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v9 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurSkillHasTagImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v10 = (const char *)(*v9)(v8);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v56, v10, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v11 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasTagImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v11)(&v56, this);
    }
    v12 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v5, (const std::string *)&v56);
    v13 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v12, ":");
    v14 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v13, -1);
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v14, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, 628);
    v16 = -1;
    std::string::~string(&v56);
    if ( v7 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v17 = std::__shared_ptr_access<GCGSkill const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false> *const)skill_ptr);
    if ( *(_BYTE *)(((unsigned __int64)&this->skill_tag_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->skill_tag_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->skill_tag_type);
    }
    if ( GCGSkill::isHasTag(v17, this->skill_tag_type) )
    {
      common::milog::MiLogStream::create(
        &v55,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        632);
      v18 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
              &v55,
              (const char (*)[45])"ConfigGCGConditionCheckCurSkillHasTag skill:");
      v19 = std::__shared_ptr_access<GCGSkill const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false> *const)skill_ptr);
      GCGSkill::getName[abi:cxx11]((std::string *)&v56, v19);
      v20 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v18, (const std::string *)&v56);
      v21 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v20, (const char (*)[10])" has tag:");
      if ( *(_BYTE *)(((unsigned __int64)&this->skill_tag_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->skill_tag_type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->skill_tag_type);
      }
      val = this->skill_tag_type;
      common::milog::MiLogStream::operator<<<int,(int *)0>(v21, &val);
      std::string::~string(&v56);
      common::milog::MiLogStream::~MiLogStream(&v55);
      v22 = GCGEffectContext::getLogContext(context);
      v23 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v22->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasTagImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v24)(&v55, this);
      v25 = 0;
      if ( (unsigned __int8)std::string::empty(&v55) )
      {
        std::allocator<char>::allocator(&__a);
        v25 = 1;
        v26 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurSkillHasTagImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v28 = (const char *)(*v27)(v26);
        std::string::basic_string<std::allocator<char>>((std::string *const)&v56, v28, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v29 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasTagImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v29)(&v56, this);
      }
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v23, (const std::string *)&v56);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, 0);
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, 633);
      v16 = 0;
      std::string::~string(&v56);
      if ( v25 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v55,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        635);
      v34 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
              &v55,
              (const char (*)[45])"ConfigGCGConditionCheckCurSkillHasTag skill:");
      v35 = std::__shared_ptr_access<GCGSkill const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false> *const)skill_ptr);
      GCGSkill::getName[abi:cxx11]((std::string *)&v56, v35);
      v36 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v34, (const std::string *)&v56);
      v37 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v36, (const char (*)[15])" have not tag:");
      if ( *(_BYTE *)(((unsigned __int64)&this->skill_tag_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->skill_tag_type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->skill_tag_type);
      }
      val = this->skill_tag_type;
      common::milog::MiLogStream::operator<<<int,(int *)0>(v37, &val);
      std::string::~string(&v56);
      common::milog::MiLogStream::~MiLogStream(&v55);
      v38 = GCGEffectContext::getLogContext(context);
      v39 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v38->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v40 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasTagImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v40 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v40)(&v55, this);
      v41 = 0;
      if ( (unsigned __int8)std::string::empty(&v55) )
      {
        std::allocator<char>::allocator(&__a);
        v41 = 1;
        v42 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v43 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurSkillHasTagImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v44 = (const char *)(*v43)(v42);
        std::string::basic_string<std::allocator<char>>((std::string *const)&v56, v44, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v45 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasTagImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v45 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v45)(&v56, this);
      }
      v46 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v39, (const std::string *)&v56);
      v47 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v46, ":");
      v48 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v47, -1);
      v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v48, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, 636);
      v16 = -1;
      std::string::~string(&v56);
      if ( v41 )
        std::allocator<char>::~allocator(&__a);
    }
  }
  std::string::~string(&v55);
  return v16;
};

// Line 641: range 000000000E13E214-000000000E13E44A
int32_t __cdecl ConfigGCGConditionCurCardHasTagImpl::checkCondition(
        ConfigGCGConditionCurCardHasTagImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCurCardHasTagImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCurCardHasTagImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCurCardHasTagImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        642);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 646: range 000000000E13E44C-000000000E13EDE3
int32_t __cdecl ConfigGCGConditionCurCardHasTagImpl::checkCondition(
        ConfigGCGConditionCurCardHasTagImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v5; // r12
  void (__fastcall **v6)(char *, ConfigGCGConditionCurCardHasTagImpl *const); // rax
  char v7; // bl
  ConfigGCGConditionCurCardHasTagImpl *v8; // rdx
  __int64 (__fastcall **v9)(ConfigGCGConditionCurCardHasTagImpl *); // rax
  const char *v10; // rax
  void (__fastcall **v11)(common::milog::MiLogStream *, ConfigGCGConditionCurCardHasTagImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v12; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v13; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v14; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  int32_t v16; // r12d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v17; // rcx
  common::milog::MiLogStream *v18; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // rax
  common::milog::MiLogStream *v20; // rax
  common::milog::MiLogStream *v21; // rcx
  const LogContext *v22; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v23; // r12
  void (__fastcall **v24)(char *, ConfigGCGConditionCurCardHasTagImpl *const); // rax
  char v25; // bl
  ConfigGCGConditionCurCardHasTagImpl *v26; // rdx
  __int64 (__fastcall **v27)(ConfigGCGConditionCurCardHasTagImpl *); // rax
  const char *v28; // rax
  void (__fastcall **v29)(common::milog::MiLogStream *, ConfigGCGConditionCurCardHasTagImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::milog::MiLogStream *v34; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v35; // rax
  common::milog::MiLogStream *v36; // rax
  common::milog::MiLogStream *v37; // rcx
  const LogContext *v38; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v39; // r12
  void (__fastcall **v40)(char *, ConfigGCGConditionCurCardHasTagImpl *const); // rax
  char v41; // bl
  ConfigGCGConditionCurCardHasTagImpl *v42; // rdx
  __int64 (__fastcall **v43)(ConfigGCGConditionCurCardHasTagImpl *); // rax
  const char *v44; // rax
  void (__fastcall **v45)(common::milog::MiLogStream *, ConfigGCGConditionCurCardHasTagImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v46; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v47; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v48; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  std::allocator<char> __a; // [rsp+27h] [rbp-59h] BYREF
  unsigned int val; // [rsp+28h] [rbp-58h] BYREF
  int tag_type; // [rsp+2Ch] [rbp-54h] BYREF
  char v56[32]; // [rsp+30h] [rbp-50h] BYREF
  common::milog::MiLogStream v57; // [rsp+50h] [rbp-30h] BYREF

  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v57,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      649);
    common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
      &v57,
      (const char (*)[53])"ConfigGCGConditionCurCardHasTag cur_card_ptr is null");
    common::milog::MiLogStream::~MiLogStream(&v57);
    LogContext = GCGEffectContext::getLogContext(context);
    v5 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v6 = (void (__fastcall **)(char *, ConfigGCGConditionCurCardHasTagImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v6 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v6)(v56, this);
    v7 = 0;
    if ( (unsigned __int8)std::string::empty(v56) )
    {
      std::allocator<char>::allocator(&__a);
      v7 = 1;
      v8 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v9 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardHasTagImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v10 = (const char *)(*v9)(v8);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v57, v10, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v11 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardHasTagImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v11)(&v57, this);
    }
    v12 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v5, (const std::string *)&v57);
    v13 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v12, ":");
    v14 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v13, -1);
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v14, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, 650);
    v16 = -1;
    std::string::~string(&v57);
    if ( v7 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v17 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    if ( *(_BYTE *)(((unsigned __int64)&this->tag_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->tag_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->tag_type);
    }
    if ( GCGCard::isHasTag(v17, this->tag_type) )
    {
      common::milog::MiLogStream::create(
        &v57,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        654);
      v18 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
              &v57,
              (const char (*)[56])"ConfigGCGConditionCurCardHasTag cur_card has tag, card:");
      v19 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      val = GCGCard::getId(v19);
      v20 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v18, &val);
      v21 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v20, (const char (*)[6])" tag:");
      if ( *(_BYTE *)(((unsigned __int64)&this->tag_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->tag_type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->tag_type);
      }
      tag_type = this->tag_type;
      common::milog::MiLogStream::operator<<<int,(int *)0>(v21, &tag_type);
      common::milog::MiLogStream::~MiLogStream(&v57);
      v22 = GCGEffectContext::getLogContext(context);
      v23 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v22->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (void (__fastcall **)(char *, ConfigGCGConditionCurCardHasTagImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v24)(v56, this);
      v25 = 0;
      if ( (unsigned __int8)std::string::empty(v56) )
      {
        std::allocator<char>::allocator(&__a);
        v25 = 1;
        v26 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardHasTagImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v28 = (const char *)(*v27)(v26);
        std::string::basic_string<std::allocator<char>>((std::string *const)&v57, v28, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v29 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardHasTagImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v29)(&v57, this);
      }
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v23, (const std::string *)&v57);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, 0);
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, 655);
      v16 = 0;
      std::string::~string(&v57);
      if ( v25 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v57,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        657);
      v34 = common::milog::MiLogStream::operator<<<char [55],(char *[55])0>(
              &v57,
              (const char (*)[55])"ConfigGCGConditionCurCardHasTag cur_card no tag, card:");
      v35 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      val = GCGCard::getId(v35);
      v36 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v34, &val);
      v37 = common::milog::MiLogStream::operator<<<char [6],(char *[6])0>(v36, (const char (*)[6])" tag:");
      if ( *(_BYTE *)(((unsigned __int64)&this->tag_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->tag_type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->tag_type);
      }
      tag_type = this->tag_type;
      common::milog::MiLogStream::operator<<<int,(int *)0>(v37, &tag_type);
      common::milog::MiLogStream::~MiLogStream(&v57);
      v38 = GCGEffectContext::getLogContext(context);
      v39 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v38->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v40 = (void (__fastcall **)(char *, ConfigGCGConditionCurCardHasTagImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v40 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v40)(v56, this);
      v41 = 0;
      if ( (unsigned __int8)std::string::empty(v56) )
      {
        std::allocator<char>::allocator(&__a);
        v41 = 1;
        v42 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v43 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardHasTagImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v44 = (const char *)(*v43)(v42);
        std::string::basic_string<std::allocator<char>>((std::string *const)&v57, v44, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v45 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardHasTagImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v45 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v45)(&v57, this);
      }
      v46 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v39, (const std::string *)&v57);
      v47 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v46, ":");
      v48 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v47, -1);
      v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v48, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, 658);
      v16 = -1;
      std::string::~string(&v57);
      if ( v41 )
        std::allocator<char>::~allocator(&__a);
    }
  }
  std::string::~string(v56);
  return v16;
};

// Line 663: range 000000000E13EDE4-000000000E13F01A
int32_t __cdecl ConfigGCGConditionCurCardAttachToCardIDImpl::checkCondition(
        ConfigGCGConditionCurCardAttachToCardIDImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCurCardAttachToCardIDImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCurCardAttachToCardIDImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCurCardAttachToCardIDImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        664);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 669: range 000000000E13F01C-000000000E13FF43
int32_t __cdecl ConfigGCGConditionCurCardAttachToCardIDImpl::checkCondition(
        ConfigGCGConditionCurCardAttachToCardIDImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // r12
  __int64 v5; // rax
  _DWORD *v6; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const); // rax
  char v10; // bl
  ConfigGCGConditionCurCardAttachToCardIDImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionCurCardAttachToCardIDImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // rbx
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  const LogContext *v26; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // r14
  void (__fastcall **v28)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const); // rax
  char v29; // bl
  ConfigGCGConditionCurCardAttachToCardIDImpl *v30; // rdx
  __int64 (__fastcall **v31)(ConfigGCGConditionCurCardAttachToCardIDImpl *); // rax
  const char *v32; // rax
  void (__fastcall **v33)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::milog::MiLogStream *v38; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v39; // rax
  common::milog::MiLogStream *v40; // rax
  const LogContext *v41; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v42; // r15
  void (__fastcall **v43)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const); // rax
  char v44; // r14
  ConfigGCGConditionCurCardAttachToCardIDImpl *v45; // rdx
  __int64 (__fastcall **v46)(ConfigGCGConditionCurCardAttachToCardIDImpl *); // rax
  const char *v47; // rax
  void (__fastcall **v48)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v51; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v52; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v53; // rax
  common::milog::MiLogStream *v54; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v55; // rax
  common::milog::MiLogStream *v56; // rax
  common::milog::MiLogStream *v57; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v58; // rax
  common::milog::MiLogStream *v59; // rax
  common::milog::MiLogStream *v60; // rax
  const LogContext *v61; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v62; // r15
  void (__fastcall **v63)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const); // rax
  char v64; // r14
  ConfigGCGConditionCurCardAttachToCardIDImpl *v65; // rdx
  __int64 (__fastcall **v66)(ConfigGCGConditionCurCardAttachToCardIDImpl *); // rax
  const char *v67; // rax
  void (__fastcall **v68)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v69; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v70; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v71; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v72; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+37h] [rbp-D9h] BYREF
  int val; // [rsp+38h] [rbp-D8h] BYREF
  GCGCardType cur_card_type; // [rsp+3Ch] [rbp-D4h]
  common::milog::MiLogStream v79; // [rsp+40h] [rbp-D0h] BYREF
  common::milog::MiLogStream v80; // [rsp+60h] [rbp-B0h] BYREF
  char v81[144]; // [rsp+80h] [rbp-90h] BYREF

  v4 = (unsigned __int64)v81;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_1(96LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "2 48 4 10 result:687 64 16 18 owner_card_ptr:681";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCurCardAttachToCardIDImpl::checkCondition;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556943;
  v6[536862722] = -202178560;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v80,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      672);
    common::milog::MiLogStream::operator<<<char [64],(char *[64])0>(
      &v80,
      (const char (*)[64])"ConfigGCGConditionCurCardAttachToCardID cur_card_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v80);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v79, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v79) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v80, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&v80, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, (const std::string *)&v80);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 673);
    v19 = -1;
    std::string::~string(&v80);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
LABEL_22:
    std::string::~string(&v79);
    goto LABEL_80;
  }
  v20 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
  cur_card_type = GCGCard::getCardType(v20);
  if ( cur_card_type != GCG_CARD_MODIFY && cur_card_type != GCG_CARD_STATE )
  {
    common::milog::MiLogStream::create(
      &v79,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      678);
    v21 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
            &v79,
            (const char (*)[50])"ConfigGCGConditionCurCardAttachToCardID cur_card:");
    v22 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    GCGCard::getDesc[abi:cxx11]((std::string *)&v80, v22);
    v23 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, (const std::string *)&v80);
    v24 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v23, (const char (*)[16])" cur_card_type:");
    val = cur_card_type;
    v25 = common::milog::MiLogStream::operator<<<int,(int *)0>(v24, &val);
    common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(v25, (const char (*)[17])" not attach card");
    std::string::~string(&v80);
    common::milog::MiLogStream::~MiLogStream(&v79);
    v26 = GCGEffectContext::getLogContext(context);
    v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v26->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v28 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v28)(&v79, this);
    v29 = 0;
    if ( (unsigned __int8)std::string::empty(&v79) )
    {
      std::allocator<char>::allocator(&__a);
      v29 = 1;
      v30 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v31 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v32 = (const char *)(*v31)(v30);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v80, v32, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v33 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v33)(&v80, this);
    }
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, (const std::string *)&v80);
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, -1);
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, 679);
    v19 = -1;
    std::string::~string(&v80);
    if ( v29 )
      std::allocator<char>::~allocator(&__a);
    goto LABEL_22;
  }
  std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
  GCGCard::getOwnerCard((const GCGCard *const)(v4 + 64));
  if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v4 + 64), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v79,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      684);
    v38 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
            &v79,
            (const char (*)[50])"ConfigGCGConditionCurCardAttachToCardID cur_card:");
    v39 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    GCGCard::getDesc[abi:cxx11]((std::string *)&v80, v39);
    v40 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v38, (const std::string *)&v80);
    common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
      v40,
      (const char (*)[26])" not find attach to owner");
    std::string::~string(&v80);
    common::milog::MiLogStream::~MiLogStream(&v79);
    v41 = GCGEffectContext::getLogContext(context);
    v42 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v41->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v43 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v43)(&v79, this);
    v44 = 0;
    if ( (unsigned __int8)std::string::empty(&v79) )
    {
      std::allocator<char>::allocator(&__a);
      v44 = 1;
      v45 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v46 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v46 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v47 = (const char *)(*v46)(v45);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v80, v47, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v48 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v48 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v48)(&v80, this);
    }
    v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v42, (const std::string *)&v80);
    v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, ":");
    v51 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, -1);
    v52 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v51, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v52, 685);
    v19 = -1;
    std::string::~string(&v80);
    if ( v44 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v53 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 64));
    *(_DWORD *)(v4 + 48) = GCGCard::getGuid(v53);
    common::milog::MiLogStream::create(
      &v79,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      688);
    v54 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
            &v79,
            (const char (*)[50])"ConfigGCGConditionCurCardAttachToCardID cur_card:");
    v55 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    val = GCGCard::getId(v55);
    v56 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v54, (const unsigned int *)&val);
    v57 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(v56, (const char (*)[19])" attached to card:");
    v58 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 64));
    GCGCard::getDesc[abi:cxx11]((std::string *)&v80, v58);
    v59 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v57, (const std::string *)&v80);
    v60 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v59, (const char (*)[10])", result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v60, (const int *)(v4 + 48));
    std::string::~string(&v80);
    common::milog::MiLogStream::~MiLogStream(&v79);
    v61 = GCGEffectContext::getLogContext(context);
    v62 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v61->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v63 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v63 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v63)(&v79, this);
    v64 = 0;
    if ( (unsigned __int8)std::string::empty(&v79) )
    {
      std::allocator<char>::allocator(&__a);
      v64 = 1;
      v65 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v66 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v66 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v67 = (const char *)(*v66)(v65);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v80, v67, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v68 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v68 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v68)(&v80, this);
    }
    v69 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v62, (const std::string *)&v80);
    v70 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v69, ":");
    v71 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v70, *(_DWORD *)(v4 + 48));
    v72 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v71, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v72, 689);
    v19 = *(_DWORD *)(v4 + 48);
    std::string::~string(&v80);
    if ( v64 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v79);
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v4 + 64));
LABEL_80:
  result = v19;
  if ( v81 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 694: range 000000000E13FF44-000000000E14017A
int32_t __cdecl ConfigGCGConditionCurCardAttachToCardObjectImpl::checkCondition(
        ConfigGCGConditionCurCardAttachToCardObjectImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCurCardAttachToCardObjectImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCurCardAttachToCardObjectImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCurCardAttachToCardObjectImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        695);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 699: range 000000000E14017C-000000000E1414FA
int32_t __cdecl ConfigGCGConditionCurCardAttachToCardObjectImpl::checkCondition(
        ConfigGCGConditionCurCardAttachToCardObjectImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const); // rax
  char v10; // bl
  ConfigGCGConditionCurCardAttachToCardObjectImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionCurCardAttachToCardObjectImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r14d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  const LogContext *v26; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // r14
  void (__fastcall **v28)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const); // rax
  char v29; // bl
  ConfigGCGConditionCurCardAttachToCardObjectImpl *v30; // rdx
  __int64 (__fastcall **v31)(ConfigGCGConditionCurCardAttachToCardObjectImpl *); // rax
  const char *v32; // rax
  void (__fastcall **v33)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::milog::MiLogStream *v38; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v39; // rax
  common::milog::MiLogStream *v40; // rax
  const LogContext *v41; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v42; // r14
  void (__fastcall **v43)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const); // rax
  char v44; // r15
  ConfigGCGConditionCurCardAttachToCardObjectImpl *v45; // rdx
  __int64 (__fastcall **v46)(ConfigGCGConditionCurCardAttachToCardObjectImpl *); // rax
  const char *v47; // rax
  void (__fastcall **v48)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v51; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v52; // rax
  const LogContext *v53; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // r14
  void (__fastcall **v55)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const); // rax
  char v56; // r15
  ConfigGCGConditionCurCardAttachToCardObjectImpl *v57; // rdx
  __int64 (__fastcall **v58)(ConfigGCGConditionCurCardAttachToCardObjectImpl *); // rax
  const char *v59; // rax
  void (__fastcall **v60)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v61; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v62; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v63; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v64; // rax
  common::milog::MiLogStream *v65; // r14
  common::milog::MiLogStream *v66; // rax
  common::milog::MiLogStream *v67; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v68; // rax
  common::milog::MiLogStream *v69; // rax
  common::milog::MiLogStream *v70; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v71; // rax
  std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v72; // rax
  unsigned __int64 v73; // rdx
  common::milog::MiLogStream *v74; // rax
  const LogContext *v75; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v76; // r14
  void (__fastcall **v77)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const); // rax
  char v78; // r15
  ConfigGCGConditionCurCardAttachToCardObjectImpl *v79; // rdx
  __int64 (__fastcall **v80)(ConfigGCGConditionCurCardAttachToCardObjectImpl *); // rax
  const char *v81; // rax
  void (__fastcall **v82)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v83; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v84; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v85; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v86; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Bh] [rbp-145h] BYREF
  GCGCardType cur_card_type; // [rsp+3Ch] [rbp-144h]
  std::any current_context; // [rsp+40h] [rbp-140h] BYREF
  common::milog::MiLogStream v93; // [rsp+50h] [rbp-130h] BYREF
  common::milog::MiLogStream v94; // [rsp+70h] [rbp-110h] BYREF
  common::milog::MiLogStream v95; // [rsp+90h] [rbp-F0h] BYREF
  char v96[208]; // [rsp+B0h] [rbp-D0h] BYREF

  v4 = (unsigned __int64)v96;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_2(160LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "3 32 4 10 result:724 48 16 18 owner_card_ptr:711 80 48 17 child_context:717";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCurCardAttachToCardObjectImpl::checkCondition;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = 61956;
  v6[536862722] = 62194;
  v6[536862724] = -202116109;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v95,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      702);
    common::milog::MiLogStream::operator<<<char [68],(char *[68])0>(
      &v95,
      (const char (*)[68])"ConfigGCGConditionCurCardAttachToCardObject cur_card_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v95);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v94, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v94) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v95, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&v95, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, (const std::string *)&v95);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 703);
    v19 = -1;
    std::string::~string(&v95);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
LABEL_22:
    std::string::~string(&v94);
    goto LABEL_104;
  }
  v20 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
  cur_card_type = GCGCard::getCardType(v20);
  if ( cur_card_type != GCG_CARD_MODIFY && cur_card_type != GCG_CARD_STATE )
  {
    common::milog::MiLogStream::create(
      &v94,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      708);
    v21 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(
            &v94,
            (const char (*)[54])"ConfigGCGConditionCurCardAttachToCardObject cur_card:");
    v22 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    GCGCard::getDesc[abi:cxx11]((std::string *)&v95, v22);
    v23 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, (const std::string *)&v95);
    v24 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v23, (const char (*)[16])" cur_card_type:");
    *(_DWORD *)(v4 + 32) = cur_card_type;
    v25 = common::milog::MiLogStream::operator<<<int,(int *)0>(v24, (const int *)(v4 + 32));
    common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(v25, (const char (*)[17])" not attach card");
    std::string::~string(&v95);
    common::milog::MiLogStream::~MiLogStream(&v94);
    v26 = GCGEffectContext::getLogContext(context);
    v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v26->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v28 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v28)(&v94, this);
    v29 = 0;
    if ( (unsigned __int8)std::string::empty(&v94) )
    {
      std::allocator<char>::allocator(&__a);
      v29 = 1;
      v30 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v31 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v32 = (const char *)(*v31)(v30);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v95, v32, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v33 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v33)(&v95, this);
    }
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, (const std::string *)&v95);
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, -1);
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, 709);
    v19 = -1;
    std::string::~string(&v95);
    if ( v29 )
      std::allocator<char>::~allocator(&__a);
    goto LABEL_22;
  }
  std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
  GCGCard::getOwnerCard((const GCGCard *const)(v4 + 48));
  if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v4 + 48), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v94,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      714);
    v38 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(
            &v94,
            (const char (*)[54])"ConfigGCGConditionCurCardAttachToCardObject cur_card:");
    v39 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    GCGCard::getDesc[abi:cxx11]((std::string *)&v95, v39);
    v40 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v38, (const std::string *)&v95);
    common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
      v40,
      (const char (*)[26])" not find attach to owner");
    std::string::~string(&v95);
    common::milog::MiLogStream::~MiLogStream(&v94);
    v41 = GCGEffectContext::getLogContext(context);
    v42 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v41->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v43 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v43)(&v94, this);
    v44 = 0;
    if ( (unsigned __int8)std::string::empty(&v94) )
    {
      std::allocator<char>::allocator(&__a);
      v44 = 1;
      v45 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v46 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v46 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v47 = (const char *)(*v46)(v45);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v95, v47, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v48 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v48 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v48)(&v95, this);
    }
    v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v42, (const std::string *)&v95);
    v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, ":");
    v51 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, -1);
    v52 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v51, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v52, 715);
    v19 = -1;
    std::string::~string(&v95);
    if ( v44 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v94);
  }
  else
  {
    GCGEffectContext::GCGEffectContext((GCGEffectContext *const)(v4 + 80), context);
    std::any::any<std::shared_ptr<GCGCard> &,std::shared_ptr<GCGCard>,std::any::_Manager_external<std::shared_ptr<GCGCard>>,true,true>(
      &current_context,
      (std::shared_ptr<GCGCard> *)(v4 + 48));
    GCGEffectContext::resetCurContext((GCGEffectContext *const)(v4 + 80), &current_context);
    std::any::~any(&current_context);
    if ( std::operator==<data::ConfigGCGLogicCondition>(&this->condition, 0LL) )
    {
      v53 = GCGEffectContext::getLogContext(context);
      v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v53->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v55 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v55 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v55)(&v94, this);
      v56 = 0;
      if ( (unsigned __int8)std::string::empty(&v94) )
      {
        std::allocator<char>::allocator(&__a);
        v56 = 1;
        v57 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v58 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                         + 4);
        if ( *(_BYTE *)(((unsigned __int64)v58 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v59 = (const char *)(*v58)(v57);
        std::string::basic_string<std::allocator<char>>((std::string *const)&v95, v59, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v60 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v60 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v60)(&v95, this);
      }
      v61 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, (const std::string *)&v95);
      v62 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v61, ":");
      v63 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v62, -1);
      v64 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v63, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v64, 721);
      v19 = -1;
      std::string::~string(&v95);
      if ( v56 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v93,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        723);
      v65 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
              &v93,
              (const char (*)[51])"ConfigGCGConditionCurCardAttachToCardObject skill:");
      GCGSkill::getName[abi:cxx11]((std::string *)&v94, cur_skill);
      v66 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v65, (const std::string *)&v94);
      v67 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v66, (const char (*)[11])" cur card:");
      v68 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      GCGCard::getDesc[abi:cxx11]((std::string *)&v95, v68);
      v69 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v67, (const std::string *)&v95);
      v70 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v69, (const char (*)[13])" owner card:");
      v71 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 48));
      *(_DWORD *)(v4 + 32) = GCGCard::getId(v71);
      common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v70, (const unsigned int *)(v4 + 32));
      std::string::~string(&v95);
      std::string::~string(&v94);
      common::milog::MiLogStream::~MiLogStream(&v93);
      v72 = std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)&this->condition);
      if ( *(_BYTE *)(((unsigned __int64)v72 >> 3) + 0x7FFF8000) )
        __asan_report_load8(v72);
      v73 = (unsigned __int64)(v72->_vptr_ConfigGCGCondition + 7);
      if ( *(_BYTE *)((v73 >> 3) + 0x7FFF8000) )
        __asan_report_load8(v72->_vptr_ConfigGCGCondition + 7);
      *(_DWORD *)(v4 + 32) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, unsigned __int64))v73)(
                               v72,
                               cur_skill,
                               v4 + 80);
      common::milog::MiLogStream::create(
        &v95,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        725);
      v74 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
              &v95,
              (const char (*)[52])"ConfigGCGConditionCurCardAttachToCardObject result:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v74, (const int *)(v4 + 32));
      common::milog::MiLogStream::~MiLogStream(&v95);
      v75 = GCGEffectContext::getLogContext(context);
      v76 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v75->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v77 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v77 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v77)(&v94, this);
      v78 = 0;
      if ( (unsigned __int8)std::string::empty(&v94) )
      {
        std::allocator<char>::allocator(&__a);
        v78 = 1;
        v79 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v80 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                         + 4);
        if ( *(_BYTE *)(((unsigned __int64)v80 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v81 = (const char *)(*v80)(v79);
        std::string::basic_string<std::allocator<char>>((std::string *const)&v95, v81, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v82 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v82 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v82)(&v95, this);
      }
      v83 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v76, (const std::string *)&v95);
      v84 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v83, ":");
      v85 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v84, *(_DWORD *)(v4 + 32));
      v86 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v85, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v86, 726);
      v19 = *(_DWORD *)(v4 + 32);
      std::string::~string(&v95);
      if ( v78 )
        std::allocator<char>::~allocator(&__a);
    }
    std::string::~string(&v94);
    GCGEffectContext::~GCGEffectContext((GCGEffectContext *const)(v4 + 80));
  }
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v4 + 48));
LABEL_104:
  result = v19;
  if ( v96 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 731: range 000000000E1414FC-000000000E141732
int32_t __cdecl ConfigGCGConditionCurCardAttachToCardIsTargetImpl::checkCondition(
        ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCurCardAttachToCardIsTargetImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCurCardAttachToCardIsTargetImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCurCardAttachToCardIsTargetImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        732);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 736: range 000000000E141734-000000000E142E96
int32_t __cdecl ConfigGCGConditionCurCardAttachToCardIsTargetImpl::checkCondition(
        ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const); // rax
  char v10; // r12
  ConfigGCGConditionCurCardAttachToCardIsTargetImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionCurCardAttachToCardIsTargetImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  const LogContext *v20; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v21; // r14
  void (__fastcall **v22)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const); // rax
  char v23; // r12
  ConfigGCGConditionCurCardAttachToCardIsTargetImpl *v24; // rdx
  __int64 (__fastcall **v25)(ConfigGCGConditionCurCardAttachToCardIsTargetImpl *); // rax
  const char *v26; // rax
  void (__fastcall **v27)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v28; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v29; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v32; // rax
  common::milog::MiLogStream *v33; // r12
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v34; // rax
  common::milog::MiLogStream *v35; // rax
  common::milog::MiLogStream *v36; // rax
  common::milog::MiLogStream *v37; // rax
  const LogContext *v38; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v39; // r14
  void (__fastcall **v40)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const); // rax
  char v41; // r12
  ConfigGCGConditionCurCardAttachToCardIsTargetImpl *v42; // rdx
  __int64 (__fastcall **v43)(ConfigGCGConditionCurCardAttachToCardIsTargetImpl *); // rax
  const char *v44; // rax
  void (__fastcall **v45)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v46; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v47; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v48; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  common::milog::MiLogStream *v50; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v51; // rax
  common::milog::MiLogStream *v52; // rax
  const LogContext *v53; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // r15
  void (__fastcall **v55)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const); // rax
  char v56; // r14
  ConfigGCGConditionCurCardAttachToCardIsTargetImpl *v57; // rdx
  __int64 (__fastcall **v58)(ConfigGCGConditionCurCardAttachToCardIsTargetImpl *); // rax
  const char *v59; // rax
  void (__fastcall **v60)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v61; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v62; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v63; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v64; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v65; // rax
  uint32_t Guid; // r14d
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v67; // rax
  common::milog::MiLogStream *v68; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v69; // rax
  common::milog::MiLogStream *v70; // rax
  common::milog::MiLogStream *v71; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v72; // rax
  common::milog::MiLogStream *v73; // rax
  common::milog::MiLogStream *v74; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v75; // rax
  const LogContext *v76; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v77; // r15
  void (__fastcall **v78)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const); // rax
  char v79; // r14
  ConfigGCGConditionCurCardAttachToCardIsTargetImpl *v80; // rdx
  __int64 (__fastcall **v81)(ConfigGCGConditionCurCardAttachToCardIsTargetImpl *); // rax
  const char *v82; // rax
  void (__fastcall **v83)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v84; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v85; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v86; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v87; // rax
  common::milog::MiLogStream *v88; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v89; // rax
  common::milog::MiLogStream *v90; // rax
  common::milog::MiLogStream *v91; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v92; // rax
  common::milog::MiLogStream *v93; // rax
  common::milog::MiLogStream *v94; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v95; // rax
  const LogContext *v96; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v97; // r15
  void (__fastcall **v98)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const); // rax
  char v99; // r14
  ConfigGCGConditionCurCardAttachToCardIsTargetImpl *v100; // rdx
  __int64 (__fastcall **v101)(ConfigGCGConditionCurCardAttachToCardIsTargetImpl *); // rax
  const char *v102; // rax
  void (__fastcall **v103)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v104; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v105; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v106; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v107; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+37h] [rbp-F9h] BYREF
  int val; // [rsp+38h] [rbp-F8h] BYREF
  GCGCardType cur_card_type; // [rsp+3Ch] [rbp-F4h]
  common::milog::MiLogStream v114; // [rsp+40h] [rbp-F0h] BYREF
  std::string v115; // [rsp+60h] [rbp-D0h] BYREF
  common::milog::MiLogStream v116; // [rsp+80h] [rbp-B0h] BYREF
  common::milog::MiLogStream v117; // [rsp+A0h] [rbp-90h] BYREF
  char v118[112]; // [rsp+C0h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v118;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 16 18 owner_card_ptr:753";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCurCardAttachToCardIsTargetImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202178560;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v117,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      739);
    common::milog::MiLogStream::operator<<<char [70],(char *[70])0>(
      &v117,
      (const char (*)[70])"ConfigGCGConditionCurCardAttachToCardIsTarget cur_card_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v117);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v116, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v116) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardIsTargetImpl *))(this->_vptr_ConfigGCGCondition
                                                                                         + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v117, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&v117, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, (const std::string *)&v117);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 740);
    v19 = -1;
    std::string::~string(&v117);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
LABEL_63:
    std::string::~string(&v116);
    goto LABEL_126;
  }
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  if ( std::operator==<GCGCard>(&context->skill_param->target_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v117,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      744);
    common::milog::MiLogStream::operator<<<char [79],(char *[79])0>(
      &v117,
      (const char (*)[79])"ConfigGCGConditionCurCardAttachToCardIsTarget skill target_card_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v117);
    v20 = GCGEffectContext::getLogContext(context);
    v21 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v20->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v22 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v22 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v22)(&v116, this);
    v23 = 0;
    if ( (unsigned __int8)std::string::empty(&v116) )
    {
      std::allocator<char>::allocator(&__a);
      v23 = 1;
      v24 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v25 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardIsTargetImpl *))(this->_vptr_ConfigGCGCondition
                                                                                         + 4);
      if ( *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v26 = (const char *)(*v25)(v24);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v117, v26, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v27 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v27)(&v117, this);
    }
    v28 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v21, (const std::string *)&v117);
    v29 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v28, ":");
    v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v29, -1);
    v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, 745);
    v19 = -1;
    std::string::~string(&v117);
    if ( v23 )
      std::allocator<char>::~allocator(&__a);
    goto LABEL_63;
  }
  v32 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
  cur_card_type = GCGCard::getCardType(v32);
  if ( cur_card_type != GCG_CARD_MODIFY && cur_card_type != GCG_CARD_STATE )
  {
    common::milog::MiLogStream::create(
      &v116,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      750);
    v33 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
            &v116,
            (const char (*)[56])"ConfigGCGConditionCurCardAttachToCardIsTarget cur_card:");
    v34 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    GCGCard::getDesc[abi:cxx11]((std::string *)&v117, v34);
    v35 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v33, (const std::string *)&v117);
    v36 = common::milog::MiLogStream::operator<<<char [16],(char *[16])0>(v35, (const char (*)[16])" cur_card_type:");
    val = cur_card_type;
    v37 = common::milog::MiLogStream::operator<<<int,(int *)0>(v36, &val);
    common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(v37, (const char (*)[17])" not attach card");
    std::string::~string(&v117);
    common::milog::MiLogStream::~MiLogStream(&v116);
    v38 = GCGEffectContext::getLogContext(context);
    v39 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v38->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v40 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v40 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v40)(&v116, this);
    v41 = 0;
    if ( (unsigned __int8)std::string::empty(&v116) )
    {
      std::allocator<char>::allocator(&__a);
      v41 = 1;
      v42 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v43 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardIsTargetImpl *))(this->_vptr_ConfigGCGCondition
                                                                                         + 4);
      if ( *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v44 = (const char *)(*v43)(v42);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v117, v44, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v45 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v45 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v45)(&v117, this);
    }
    v46 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v39, (const std::string *)&v117);
    v47 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v46, ":");
    v48 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v47, -1);
    v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v48, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, 751);
    v19 = -1;
    std::string::~string(&v117);
    if ( v41 )
      std::allocator<char>::~allocator(&__a);
    goto LABEL_63;
  }
  std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
  GCGCard::getOwnerCard((const GCGCard *const)(v4 + 32));
  if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v4 + 32), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v116,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      756);
    v50 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
            &v116,
            (const char (*)[56])"ConfigGCGConditionCurCardAttachToCardIsTarget cur_card:");
    v51 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    GCGCard::getDesc[abi:cxx11]((std::string *)&v117, v51);
    v52 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v50, (const std::string *)&v117);
    common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(
      v52,
      (const char (*)[26])" not find attach to owner");
    std::string::~string(&v117);
    common::milog::MiLogStream::~MiLogStream(&v116);
    v53 = GCGEffectContext::getLogContext(context);
    v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v53->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v55 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v55 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v55)(&v116, this);
    v56 = 0;
    if ( (unsigned __int8)std::string::empty(&v116) )
    {
      std::allocator<char>::allocator(&__a);
      v56 = 1;
      v57 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v58 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardIsTargetImpl *))(this->_vptr_ConfigGCGCondition
                                                                                         + 4);
      if ( *(_BYTE *)(((unsigned __int64)v58 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v59 = (const char *)(*v58)(v57);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v117, v59, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v60 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v60 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v60)(&v117, this);
    }
    v61 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, (const std::string *)&v117);
    v62 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v61, ":");
    v63 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v62, -1);
    v64 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v63, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v64, 757);
    v19 = -1;
    std::string::~string(&v117);
    if ( v56 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v65 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 32));
    Guid = GCGCard::getGuid(v65);
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    v67 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->target_card_ptr);
    if ( Guid == GCGCard::getGuid(v67) )
    {
      common::milog::MiLogStream::create(
        &v114,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        761);
      v68 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
              &v114,
              (const char (*)[56])"ConfigGCGConditionCurCardAttachToCardIsTarget cur card:");
      v69 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      GCGCard::getDesc[abi:cxx11](&v115, v69);
      v70 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v68, &v115);
      v71 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v70, (const char (*)[8])" owner:");
      v72 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 32));
      GCGCard::getDesc[abi:cxx11]((std::string *)&v116, v72);
      v73 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v71, (const std::string *)&v116);
      v74 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v73, (const char (*)[9])" target:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      v75 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->target_card_ptr);
      GCGCard::getDesc[abi:cxx11]((std::string *)&v117, v75);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v74, (const std::string *)&v117);
      std::string::~string(&v117);
      std::string::~string(&v116);
      std::string::~string(&v115);
      common::milog::MiLogStream::~MiLogStream(&v114);
      v76 = GCGEffectContext::getLogContext(context);
      v77 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v76->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v78 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v78 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v78)(&v116, this);
      v79 = 0;
      if ( (unsigned __int8)std::string::empty(&v116) )
      {
        std::allocator<char>::allocator(&__a);
        v79 = 1;
        v80 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v81 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardIsTargetImpl *))(this->_vptr_ConfigGCGCondition
                                                                                           + 4);
        if ( *(_BYTE *)(((unsigned __int64)v81 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v82 = (const char *)(*v81)(v80);
        std::string::basic_string<std::allocator<char>>((std::string *const)&v117, v82, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v83 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v83 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v83)(&v117, this);
      }
      v84 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v77, (const std::string *)&v117);
      v85 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v84, ":");
      v86 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v85, 0);
      v87 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v86, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v87, 762);
      v19 = 0;
      std::string::~string(&v117);
      if ( v79 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v114,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        764);
      v88 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
              &v114,
              (const char (*)[56])"ConfigGCGConditionCurCardAttachToCardIsTarget cur card:");
      v89 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      GCGCard::getDesc[abi:cxx11](&v115, v89);
      v90 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v88, &v115);
      v91 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v90, (const char (*)[8])" owner:");
      v92 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 32));
      GCGCard::getDesc[abi:cxx11]((std::string *)&v116, v92);
      v93 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v91, (const std::string *)&v116);
      v94 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v93, (const char (*)[9])" target:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      v95 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->target_card_ptr);
      GCGCard::getDesc[abi:cxx11]((std::string *)&v117, v95);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v94, (const std::string *)&v117);
      std::string::~string(&v117);
      std::string::~string(&v116);
      std::string::~string(&v115);
      common::milog::MiLogStream::~MiLogStream(&v114);
      v96 = GCGEffectContext::getLogContext(context);
      v97 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v96->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v98 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v98 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v98)(&v116, this);
      v99 = 0;
      if ( (unsigned __int8)std::string::empty(&v116) )
      {
        std::allocator<char>::allocator(&__a);
        v99 = 1;
        v100 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v101 = (__int64 (__fastcall **)(ConfigGCGConditionCurCardAttachToCardIsTargetImpl *))(this->_vptr_ConfigGCGCondition
                                                                                            + 4);
        if ( *(_BYTE *)(((unsigned __int64)v101 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v102 = (const char *)(*v101)(v100);
        std::string::basic_string<std::allocator<char>>((std::string *const)&v117, v102, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v103 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCardAttachToCardIsTargetImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v103 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v103)(&v117, this);
      }
      v104 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v97, (const std::string *)&v117);
      v105 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v104, ":");
      v106 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v105, -1);
      v107 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v106, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v107, 765);
      v19 = -1;
      std::string::~string(&v117);
      if ( v99 )
        std::allocator<char>::~allocator(&__a);
    }
  }
  std::string::~string(&v116);
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v4 + 32));
LABEL_126:
  result = v19;
  if ( v118 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 770: range 000000000E142E98-000000000E1430CE
int32_t __cdecl ConfigGCGConditionCheckCurCardCampImpl::checkCondition(
        ConfigGCGConditionCheckCurCardCampImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurCardCampImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurCardCampImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurCardCampImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        771);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 775: range 000000000E1430D0-000000000E14434C
int32_t __cdecl ConfigGCGConditionCheckCurCardCampImpl::checkCondition(
        ConfigGCGConditionCheckCurCardCampImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(char *, ConfigGCGConditionCheckCurCardCampImpl *const); // rax
  char v10; // r12
  ConfigGCGConditionCheckCurCardCampImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionCheckCurCardCampImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardCampImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  const LogContext *v20; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v21; // r15
  void (__fastcall **v22)(char *, ConfigGCGConditionCheckCurCardCampImpl *const); // rax
  char v23; // r14
  ConfigGCGConditionCheckCurCardCampImpl *v24; // rdx
  __int64 (__fastcall **v25)(ConfigGCGConditionCheckCurCardCampImpl *); // rax
  const char *v26; // rax
  void (__fastcall **v27)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardCampImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v28; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v29; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v32; // rax
  GCGControllerValue ControllerId; // r14d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v34; // rax
  common::milog::MiLogStream *v35; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v36; // rax
  common::milog::MiLogStream *v37; // rax
  common::milog::MiLogStream *v38; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v39; // rax
  const LogContext *v40; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v41; // r15
  void (__fastcall **v42)(char *, ConfigGCGConditionCheckCurCardCampImpl *const); // rax
  char v43; // r14
  ConfigGCGConditionCheckCurCardCampImpl *v44; // rdx
  __int64 (__fastcall **v45)(ConfigGCGConditionCheckCurCardCampImpl *); // rax
  const char *v46; // rax
  void (__fastcall **v47)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardCampImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v48; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v51; // rax
  common::milog::MiLogStream *v52; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v53; // rax
  common::milog::MiLogStream *v54; // rax
  common::milog::MiLogStream *v55; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v56; // rax
  const LogContext *v57; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v58; // r15
  void (__fastcall **v59)(char *, ConfigGCGConditionCheckCurCardCampImpl *const); // rax
  char v60; // r14
  ConfigGCGConditionCheckCurCardCampImpl *v61; // rdx
  __int64 (__fastcall **v62)(ConfigGCGConditionCheckCurCardCampImpl *); // rax
  const char *v63; // rax
  void (__fastcall **v64)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardCampImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v65; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v66; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v67; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v68; // rax
  common::milog::MiLogStream *v69; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v70; // rax
  common::milog::MiLogStream *v71; // rax
  common::milog::MiLogStream *v72; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v73; // rax
  common::milog::MiLogStream *v74; // rax
  common::milog::MiLogStream *v75; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v76; // rax
  const LogContext *v77; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v78; // r15
  void (__fastcall **v79)(char *, ConfigGCGConditionCheckCurCardCampImpl *const); // rax
  char v80; // r14
  ConfigGCGConditionCheckCurCardCampImpl *v81; // rdx
  __int64 (__fastcall **v82)(ConfigGCGConditionCheckCurCardCampImpl *); // rax
  const char *v83; // rax
  void (__fastcall **v84)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardCampImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v85; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v86; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v87; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v88; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+32h] [rbp-BEh] BYREF
  bool is_same_camp; // [rsp+33h] [rbp-BDh]
  unsigned int v94; // [rsp+34h] [rbp-BCh] BYREF
  unsigned int val; // [rsp+38h] [rbp-B8h] BYREF
  unsigned int Id; // [rsp+3Ch] [rbp-B4h] BYREF
  char v97[32]; // [rsp+40h] [rbp-B0h] BYREF
  common::milog::MiLogStream v98; // [rsp+60h] [rbp-90h] BYREF
  char v99[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v99;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 16 18 owner_card_ptr:781";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCheckCurCardCampImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202178560;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v98,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      778);
    common::milog::MiLogStream::operator<<<char [59],(char *[59])0>(
      &v98,
      (const char (*)[59])"ConfigGCGConditionCheckCurCardCamp cur_card_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v98);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(char *, ConfigGCGConditionCheckCurCardCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(v97, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(v97) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCardCampImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v98, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&v98, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, (const std::string *)&v98);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 779);
    v19 = -1;
    std::string::~string(&v98);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(v97);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    GCGSkill::getThisCard((const GCGSkill *const)(v4 + 32), (const GCGSkillUseParam *)cur_skill);
    if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v4 + 32), 0LL) )
    {
      common::milog::MiLogStream::create(
        &v98,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        784);
      common::milog::MiLogStream::operator<<<char [61],(char *[61])0>(
        &v98,
        (const char (*)[61])"ConfigGCGConditionCheckCurCardCamp owner_card_ptr is nullptr");
      common::milog::MiLogStream::~MiLogStream(&v98);
      v20 = GCGEffectContext::getLogContext(context);
      v21 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v20->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v22 = (void (__fastcall **)(char *, ConfigGCGConditionCheckCurCardCampImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                        + 8);
      if ( *(_BYTE *)(((unsigned __int64)v22 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v22)(v97, this);
      v23 = 0;
      if ( (unsigned __int8)std::string::empty(v97) )
      {
        std::allocator<char>::allocator(&__a);
        v23 = 1;
        v24 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v25 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCardCampImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v26 = (const char *)(*v25)(v24);
        std::string::basic_string<std::allocator<char>>((std::string *const)&v98, v26, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v27)(&v98, this);
      }
      v28 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v21, (const std::string *)&v98);
      v29 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v28, ":");
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v29, -1);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, 785);
      v19 = -1;
      std::string::~string(&v98);
      if ( v23 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      is_same_camp = 0;
      v32 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 32));
      ControllerId = GCGCard::getControllerId(v32);
      v34 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      if ( ControllerId == GCGCard::getControllerId(v34) )
        is_same_camp = 1;
      if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->camp_type);
      }
      if ( this->camp_type == CAMP_FRIENDLY && is_same_camp )
      {
        common::milog::MiLogStream::create(
          &v98,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          794);
        v35 = common::milog::MiLogStream::operator<<<char [73],(char *[73])0>(
                &v98,
                (const char (*)[73])"ConfigGCGConditionCheckCurCardCamp cur character is same camp, src_card:");
        v36 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 32));
        val = GCGCard::getId(v36);
        v37 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v35, &val);
        v38 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v37, (const char (*)[11])" cur_card:");
        v39 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
        Id = GCGCard::getId(v39);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v38, &Id);
        common::milog::MiLogStream::~MiLogStream(&v98);
        v40 = GCGEffectContext::getLogContext(context);
        v41 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v40->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v42 = (void (__fastcall **)(char *, ConfigGCGConditionCheckCurCardCampImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                          + 8);
        if ( *(_BYTE *)(((unsigned __int64)v42 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v42)(v97, this);
        v43 = 0;
        if ( (unsigned __int8)std::string::empty(v97) )
        {
          std::allocator<char>::allocator(&__a);
          v43 = 1;
          v44 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v45 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCardCampImpl *))(this->_vptr_ConfigGCGCondition + 4);
          if ( *(_BYTE *)(((unsigned __int64)v45 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v46 = (const char *)(*v45)(v44);
          std::string::basic_string<std::allocator<char>>((std::string *const)&v98, v46, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v47 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v47 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v47)(&v98, this);
        }
        v48 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v41, (const std::string *)&v98);
        v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v48, ":");
        v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, 0);
        v51 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v51, 795);
        v19 = 0;
        std::string::~string(&v98);
        if ( v43 )
          std::allocator<char>::~allocator(&__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(&this->camp_type);
        }
        if ( this->camp_type == CAMP_ENEMY && !is_same_camp )
        {
          common::milog::MiLogStream::create(
            &v98,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/card_game/skill/gcg_condition.cpp",
            "checkCondition",
            799);
          v52 = common::milog::MiLogStream::operator<<<char [73],(char *[73])0>(
                  &v98,
                  (const char (*)[73])"ConfigGCGConditionCheckCurCardCamp cur character is enmy camp, src_card:");
          v53 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 32));
          val = GCGCard::getId(v53);
          v54 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v52, &val);
          v55 = common::milog::MiLogStream::operator<<<char [11],(char *[11])0>(v54, (const char (*)[11])" cur_card:");
          v56 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
          Id = GCGCard::getId(v56);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v55, &Id);
          common::milog::MiLogStream::~MiLogStream(&v98);
          v57 = GCGEffectContext::getLogContext(context);
          v58 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v57->data, "|");
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v59 = (void (__fastcall **)(char *, ConfigGCGConditionCheckCurCardCampImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                            + 8);
          if ( *(_BYTE *)(((unsigned __int64)v59 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v59)(v97, this);
          v60 = 0;
          if ( (unsigned __int8)std::string::empty(v97) )
          {
            std::allocator<char>::allocator(&__a);
            v60 = 1;
            v61 = this;
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v62 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCardCampImpl *))(this->_vptr_ConfigGCGCondition + 4);
            if ( *(_BYTE *)(((unsigned __int64)v62 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
            v63 = (const char *)(*v62)(v61);
            std::string::basic_string<std::allocator<char>>((std::string *const)&v98, v63, &__a);
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v64 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
            if ( *(_BYTE *)(((unsigned __int64)v64 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
            (*v64)(&v98, this);
          }
          v65 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                  v58,
                  (const std::string *)&v98);
          v66 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v65, ":");
          v67 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v66, 0);
          v68 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v67, ":");
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v68, 800);
          v19 = 0;
          std::string::~string(&v98);
          if ( v60 )
            std::allocator<char>::~allocator(&__a);
        }
        else
        {
          common::milog::MiLogStream::create(
            &v98,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/card_game/skill/gcg_condition.cpp",
            "checkCondition",
            802);
          v69 = common::milog::MiLogStream::operator<<<char [45],(char *[45])0>(
                  &v98,
                  (const char (*)[45])"ConfigGCGConditionCheckCurCardCamp cur_card:");
          v70 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 32));
          v94 = GCGCard::getId(v70);
          v71 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v69, &v94);
          v72 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v71, (const char (*)[7])" camp:");
          v73 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 32));
          val = GCGCard::getControllerId(v73);
          v74 = common::milog::MiLogStream::operator<<<proto::GCGControllerValue,(proto::GCGControllerValue*)0>(
                  v72,
                  (const proto::GCGControllerValue *)&val);
          v75 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(v74, (const char (*)[19])off_1BC7A020);
          v76 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
          Id = GCGCard::getId(v76);
          common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v75, &Id);
          common::milog::MiLogStream::~MiLogStream(&v98);
          v77 = GCGEffectContext::getLogContext(context);
          v78 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v77->data, "|");
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v79 = (void (__fastcall **)(char *, ConfigGCGConditionCheckCurCardCampImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                            + 8);
          if ( *(_BYTE *)(((unsigned __int64)v79 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v79)(v97, this);
          v80 = 0;
          if ( (unsigned __int8)std::string::empty(v97) )
          {
            std::allocator<char>::allocator(&__a);
            v80 = 1;
            v81 = this;
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v82 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCardCampImpl *))(this->_vptr_ConfigGCGCondition + 4);
            if ( *(_BYTE *)(((unsigned __int64)v82 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
            v83 = (const char *)(*v82)(v81);
            std::string::basic_string<std::allocator<char>>((std::string *const)&v98, v83, &__a);
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v84 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardCampImpl *const))(this->_vptr_ConfigGCGCondition + 8);
            if ( *(_BYTE *)(((unsigned __int64)v84 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
            (*v84)(&v98, this);
          }
          v85 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(
                  v78,
                  (const std::string *)&v98);
          v86 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v85, ":");
          v87 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v86, -1);
          v88 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v87, ":");
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v88, 803);
          v19 = -1;
          std::string::~string(&v98);
          if ( v80 )
            std::allocator<char>::~allocator(&__a);
        }
      }
    }
    std::string::~string(v97);
    std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v4 + 32));
  }
  result = v19;
  if ( v99 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 808: range 000000000E14434E-000000000E144584
int32_t __cdecl ConfigGCGConditionCheckCurSkillUsedImpl::checkCondition(
        ConfigGCGConditionCheckCurSkillUsedImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGSkill> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGSkill> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurSkillUsedImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGSkill> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGSkill>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGSkill> const&>(&context->cur_context);
    std::shared_ptr<GCGSkill const>::shared_ptr<GCGSkill,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurSkillUsedImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGSkill const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGSkill const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGSkill const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurSkillUsedImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        809);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGSkill>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGSkill const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 813: range 000000000E144586-000000000E144D5D
int32_t __cdecl ConfigGCGConditionCheckCurSkillUsedImpl::checkCondition(
        ConfigGCGConditionCheckCurSkillUsedImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGSkill> *skill_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  _DWORD *v6; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillUsedImpl *const); // rax
  char v10; // r12
  ConfigGCGConditionCheckCurSkillUsedImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionCheckCurSkillUsedImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillUsedImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  const LogContext *v27; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v28; // r15
  void (__fastcall **v29)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillUsedImpl *const); // rax
  char v30; // r14
  ConfigGCGConditionCheckCurSkillUsedImpl *v31; // rdx
  __int64 (__fastcall **v32)(ConfigGCGConditionCheckCurSkillUsedImpl *); // rax
  const char *v33; // rax
  void (__fastcall **v34)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillUsedImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v38; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Fh] [rbp-D1h] BYREF
  common::milog::MiLogStream v43; // [rsp+40h] [rbp-D0h] BYREF
  common::milog::MiLogStream v44; // [rsp+60h] [rbp-B0h] BYREF
  char v45[144]; // [rsp+80h] [rbp-90h] BYREF

  v4 = (unsigned __int64)v45;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_1(96LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "2 48 4 10 result:819 64 4 20 round_used_times:820";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCheckCurSkillUsedImpl::checkCondition;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556943;
  v6[536862722] = -202116348;
  if ( std::operator==<GCGSkill const>(skill_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v44,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      816);
    common::milog::MiLogStream::operator<<<char [57],(char *[57])0>(
      &v44,
      (const char (*)[57])"ConfigGCGConditionCheckCurSkillUsed skill_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v44);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillUsedImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v43, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v43) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurSkillUsedImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v44, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillUsedImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&v44, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, (const std::string *)&v44);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 817);
    v19 = -1;
    std::string::~string(&v44);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    *(_DWORD *)(v4 + 48) = -1;
    v20 = std::__shared_ptr_access<GCGSkill const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false> *const)skill_ptr);
    *(_DWORD *)(v4 + 64) = GCGSkill::getRoundUsedTimes(v20);
    if ( *(int *)(v4 + 64) > 0 )
      *(_DWORD *)(v4 + 48) = 0;
    common::milog::MiLogStream::create(
      &v43,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      825);
    v21 = common::milog::MiLogStream::operator<<<char [43],(char *[43])0>(
            &v43,
            (const char (*)[43])"ConfigGCGConditionCheckCurSkillUsed skill:");
    v22 = std::__shared_ptr_access<GCGSkill const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false> *const)skill_ptr);
    GCGSkill::getName[abi:cxx11]((std::string *)&v44, v22);
    v23 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, (const std::string *)&v44);
    v24 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(v23, (const char (*)[19])" round_used_times:");
    v25 = common::milog::MiLogStream::operator<<<int,(int *)0>(v24, (const int *)(v4 + 64));
    v26 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v25, (const char (*)[9])" result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v26, (const int *)(v4 + 48));
    std::string::~string(&v44);
    common::milog::MiLogStream::~MiLogStream(&v43);
    v27 = GCGEffectContext::getLogContext(context);
    v28 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v27->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v29 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillUsedImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v29)(&v43, this);
    v30 = 0;
    if ( (unsigned __int8)std::string::empty(&v43) )
    {
      std::allocator<char>::allocator(&__a);
      v30 = 1;
      v31 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v32 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurSkillUsedImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v33 = (const char *)(*v32)(v31);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v44, v33, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v34 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillUsedImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v34 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v34)(&v44, this);
    }
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v28, (const std::string *)&v44);
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, *(_DWORD *)(v4 + 48));
    v38 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v38, 826);
    v19 = *(_DWORD *)(v4 + 48);
    std::string::~string(&v44);
    if ( v30 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v43);
  result = v19;
  if ( v45 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 831: range 000000000E144E7C-000000000E1457A9
int32_t __cdecl ConfigGCGConditionGlobalCurCampHurtTotalImpl::checkCondition(
        ConfigGCGConditionGlobalCurCampHurtTotalImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampHurtTotalImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalCurCampHurtTotalImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalCurCampHurtTotalImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalCurCampHurtTotalImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  GCGGameMode *GameMode; // rax
  GCGDuel *Duel; // rax
  common::milog::MiLogStream *v23; // r14
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  const LogContext *v28; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v29; // r15
  void (__fastcall **v30)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampHurtTotalImpl *const); // rax
  char v31; // r14
  ConfigGCGConditionGlobalCurCampHurtTotalImpl *v32; // rdx
  __int64 (__fastcall **v33)(ConfigGCGConditionGlobalCurCampHurtTotalImpl *); // rax
  const char *v34; // rax
  void (__fastcall **v35)(std::string *, ConfigGCGConditionGlobalCurCampHurtTotalImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v38; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v39; // rax
  int32_t result; // eax
  GCGCharacterZone *CharacterZone; // [rsp+10h] [rbp-140h]
  std::allocator<char> __a; // [rsp+33h] [rbp-11Dh] BYREF
  GCGControllerValue cur_controller_id; // [rsp+34h] [rbp-11Ch]
  GCGField *field; // [rsp+38h] [rbp-118h]
  common::milog::MiLogStream v46; // [rsp+40h] [rbp-110h] BYREF
  std::string val; // [rsp+60h] [rbp-F0h] BYREF
  char v48[208]; // [rsp+80h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v48;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 48 4 10 result:840 64 16 17 this_card_ptr:832 96 24 18 alive_card_vec:841";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalCurCampHurtTotalImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -219021312;
  v5[536862723] = -218103808;
  v5[536862724] = -202116109;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 64));
  if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 64), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v46,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      835);
    v6 = common::milog::MiLogStream::operator<<<char [74],(char *[74])0>(
           &v46,
           (const char (*)[74])"ConfigGCGConditionGlobalCurCampHurtTotal this_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v46);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampHurtTotalImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v46, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v46) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCurCampHurtTotalImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCurCampHurtTotalImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 836);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v46);
  }
  else
  {
    v20 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    cur_controller_id = GCGCard::getControllerId(v20);
    GameMode = GCGSkill::getGameMode(cur_skill);
    Duel = GCGGameMode::getDuel(GameMode);
    field = GCGDuel::getField(Duel, cur_controller_id);
    *(_DWORD *)(v3 + 48) = 0;
    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v3 + 96));
    CharacterZone = GCGField::getCharacterZone(field);
    std::function<ForeachPolicy ()(GCGCard &)>::function<ConfigGCGConditionGlobalCurCampHurtTotalImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(GCGCard &)#1},void,void>(
      (std::function<ForeachPolicy(GCGCard&)> *const)&val,
      (ConfigGCGConditionGlobalCurCampHurtTotalImpl::checkCondition::<lambda(GCGCard&)>)__PAIR128__(v3 + 96, v3 + 48));
    GCGCharacterZone::foreachAliveCharacter(CharacterZone, (std::function<ForeachPolicy(GCGCard&)> *)&val);
    std::function<ForeachPolicy ()(GCGCard &)>::~function((std::function<ForeachPolicy(GCGCard&)> *const)&val);
    common::milog::MiLogStream::create(
      &v46,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      848);
    v23 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
            &v46,
            (const char (*)[49])"ConfigGCGConditionGlobalCurCampHurtTotal, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    v24 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, &val);
    v25 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v24, (const char (*)[9])",result:");
    v26 = common::milog::MiLogStream::operator<<<int,(int *)0>(v25, (const int *)(v3 + 48));
    v27 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v26, (const char (*)[15])", alive cards:");
    common::milog::MiLogStream::operator<<<unsigned int>(v27, (const std::vector<unsigned int> *)(v3 + 96));
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v46);
    v28 = GCGEffectContext::getLogContext(context);
    v29 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v28->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v30 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampHurtTotalImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v30)(&v46, this);
    v31 = 0;
    if ( (unsigned __int8)std::string::empty(&v46) )
    {
      std::allocator<char>::allocator(&__a);
      v31 = 1;
      v32 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v33 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCurCampHurtTotalImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v34 = (const char *)(*v33)(v32);
      std::string::basic_string<std::allocator<char>>(&val, v34, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v35 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCurCampHurtTotalImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v35)(&val, this);
    }
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v29, &val);
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
    v38 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, *(_DWORD *)(v3 + 48));
    v39 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v38, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v39, 849);
    v19 = *(_DWORD *)(v3 + 48);
    std::string::~string(&val);
    if ( v31 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v46);
    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v3 + 96));
  }
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v19;
  if ( v48 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 842: range 000000000E144D5E-000000000E144E7A
ForeachPolicy __cdecl ConfigGCGConditionGlobalCurCampHurtTotalImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(GCGCard &)#1}::operator()(
        const ConfigGCGConditionGlobalCurCampHurtTotalImpl::checkCondition::<lambda(GCGCard&)> *const __closure,
        GCGCard *card)
{
  std::vector<unsigned int> *alive_card_vec; // rbx
  int32_t HurtNum; // esi
  int32_t *v4; // rdx
  int32_t v5; // ecx
  int32_t *v6; // rdx
  int32_t v7; // esi
  std::vector<unsigned int>::value_type __x[5]; // [rsp+1Ch] [rbp-14h] BYREF

  if ( *(_BYTE *)(((unsigned __int64)&__closure->__alive_card_vec >> 3) + 0x7FFF8000) )
    __asan_report_load8(&__closure->__alive_card_vec);
  alive_card_vec = __closure->__alive_card_vec;
  __x[0] = GCGCard::getId(card);
  std::vector<unsigned int>::push_back(alive_card_vec, __x);
  HurtNum = GCGCard::getHurtNum(card);
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  v4 = __closure->__result;
  if ( *(_BYTE *)(((unsigned __int64)__closure->__result >> 3) + 0x7FFF8000) != 0
    && (char)(((__int64)__closure->__result & 7) + 3) >= *(_BYTE *)(((unsigned __int64)__closure->__result >> 3)
                                                                  + 0x7FFF8000) )
  {
    __asan_report_load4(__closure->__result);
  }
  v5 = *v4;
  v6 = __closure->__result;
  v7 = v5 + HurtNum;
  if ( *(_BYTE *)(((unsigned __int64)__closure->__result >> 3) + 0x7FFF8000) != 0
    && (char)(((__int64)__closure->__result & 7) + 3) >= *(_BYTE *)(((unsigned __int64)__closure->__result >> 3)
                                                                  + 0x7FFF8000) )
  {
    __asan_report_store4(__closure->__result);
  }
  *v6 = v7;
  return 0;
};

// Line 854: range 000000000E1457AA-000000000E1459E0
int32_t __cdecl ConfigGCGConditionCheckCurCharacterHurtNumImpl::checkCondition(
        ConfigGCGConditionCheckCurCharacterHurtNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurCharacterHurtNumImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurCharacterHurtNumImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurCharacterHurtNumImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        855);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 859: range 000000000E1459E2-000000000E146584
int32_t __cdecl ConfigGCGConditionCheckCurCharacterHurtNumImpl::checkCondition(
        ConfigGCGConditionCheckCurCharacterHurtNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r12
  common::milog::MiLogStream *v7; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // r14
  void (__fastcall **v10)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterHurtNumImpl *const); // rax
  char v11; // r13
  ConfigGCGConditionCheckCurCharacterHurtNumImpl *v12; // rdx
  __int64 (__fastcall **v13)(ConfigGCGConditionCheckCurCharacterHurtNumImpl *); // rax
  const char *v14; // rax
  void (__fastcall **v15)(std::string *, ConfigGCGConditionCheckCurCharacterHurtNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  int32_t v20; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // r13
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // r13
  const LogContext *v26; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // r14
  void (__fastcall **v28)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterHurtNumImpl *const); // rax
  char v29; // r13
  ConfigGCGConditionCheckCurCharacterHurtNumImpl *v30; // rdx
  __int64 (__fastcall **v31)(ConfigGCGConditionCheckCurCharacterHurtNumImpl *); // rax
  const char *v32; // rax
  void (__fastcall **v33)(std::string *, ConfigGCGConditionCheckCurCharacterHurtNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v38; // rax
  common::milog::MiLogStream *v39; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v40; // rax
  common::milog::MiLogStream *v41; // rax
  common::milog::MiLogStream *v42; // r14
  common::milog::MiLogStream *v43; // rax
  common::milog::MiLogStream *v44; // rax
  const LogContext *v45; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v46; // r15
  void (__fastcall **v47)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterHurtNumImpl *const); // rax
  char v48; // r14
  ConfigGCGConditionCheckCurCharacterHurtNumImpl *v49; // rdx
  __int64 (__fastcall **v50)(ConfigGCGConditionCheckCurCharacterHurtNumImpl *); // rax
  const char *v51; // rax
  void (__fastcall **v52)(std::string *, ConfigGCGConditionCheckCurCharacterHurtNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v53; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v55; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v56; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Bh] [rbp-B5h] BYREF
  unsigned int Id; // [rsp+3Ch] [rbp-B4h] BYREF
  common::milog::MiLogStream v62; // [rsp+40h] [rbp-B0h] BYREF
  std::string val; // [rsp+60h] [rbp-90h] BYREF
  char v64[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v64;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 10 result:870";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCheckCurCharacterHurtNumImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v62,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      862);
    v7 = common::milog::MiLogStream::operator<<<char [75],(char *[75])0>(
           &v62,
           (const char (*)[75])"ConfigGCGConditionCheckCurCharacterHurtNum cur_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v62);
    LogContext = GCGEffectContext::getLogContext(context);
    v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v10 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterHurtNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v10)(&v62, this);
    v11 = 0;
    if ( (unsigned __int8)std::string::empty(&v62) )
    {
      std::allocator<char>::allocator(&__a);
      v11 = 1;
      v12 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterHurtNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                      + 4);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v14 = (const char *)(*v13)(v12);
      std::string::basic_string<std::allocator<char>>(&val, v14, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v15 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterHurtNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v15)(&val, this);
    }
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, &val);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, -1);
    v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, 863);
    v20 = -1;
    std::string::~string(&val);
    if ( v11 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v21 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    if ( GCGCard::getCardType(v21) == GCG_CARD_CHARACTER )
    {
      v38 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      *(_DWORD *)(v4 + 32) = GCGCard::getHurtNum(v38);
      common::milog::MiLogStream::create(
        &v62,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        871);
      v39 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
              &v62,
              (const char (*)[53])"ConfigGCGConditionCheckCurCharacterHurtNum cur card:");
      v40 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Id = GCGCard::getId(v40);
      v41 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v39, &Id);
      v42 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v41, (const char (*)[7])"skill:");
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      v43 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v42, &val);
      v44 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v43, (const char (*)[9])",result:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v44, (const int *)(v4 + 32));
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v62);
      v45 = GCGEffectContext::getLogContext(context);
      v46 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v45->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v47 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterHurtNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v47 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v47)(&v62, this);
      v48 = 0;
      if ( (unsigned __int8)std::string::empty(&v62) )
      {
        std::allocator<char>::allocator(&__a);
        v48 = 1;
        v49 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v50 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterHurtNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                        + 4);
        if ( *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v51 = (const char *)(*v50)(v49);
        std::string::basic_string<std::allocator<char>>(&val, v51, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v52 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterHurtNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v52 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v52)(&val, this);
      }
      v53 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v46, &val);
      v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v53, ":");
      v55 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, *(_DWORD *)(v4 + 32));
      v56 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v55, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v56, 872);
      v20 = *(_DWORD *)(v4 + 32);
      std::string::~string(&val);
      if ( v48 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v62,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        867);
      v22 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
              &v62,
              (const char (*)[53])"ConfigGCGConditionCheckCurCharacterHurtNum cur card:");
      v23 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Id = GCGCard::getId(v23);
      v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, &Id);
      v25 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(v24, (const char (*)[26])off_1BC7C300);
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v25, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v62);
      v26 = GCGEffectContext::getLogContext(context);
      v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v26->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v28 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterHurtNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v28)(&v62, this);
      v29 = 0;
      if ( (unsigned __int8)std::string::empty(&v62) )
      {
        std::allocator<char>::allocator(&__a);
        v29 = 1;
        v30 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v31 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterHurtNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                        + 4);
        if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v32 = (const char *)(*v31)(v30);
        std::string::basic_string<std::allocator<char>>(&val, v32, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v33 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterHurtNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v33)(&val, this);
      }
      v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, &val);
      v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
      v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, -1);
      v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, 868);
      v20 = -1;
      std::string::~string(&val);
      if ( v29 )
        std::allocator<char>::~allocator(&__a);
    }
  }
  std::string::~string(&v62);
  result = v20;
  if ( v64 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 877: range 000000000E146586-000000000E147F26
int32_t __cdecl ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl::checkCondition(
        ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const); // rax
  char v10; // r15
  ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r14d
  common::milog::MiLogStream *v20; // r14
  const LogContext *v21; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v22; // r14
  void (__fastcall **v23)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const); // rax
  char v24; // r15
  ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *v25; // rdx
  __int64 (__fastcall **v26)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *); // rax
  const char *v27; // rax
  void (__fastcall **v28)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v29; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v33; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v34; // rax
  GCGSkillLogic *SkillLogic; // rdi
  common::milog::MiLogStream *v36; // rcx
  common::milog::MiLogStream *v37; // rax
  common::milog::MiLogStream *v38; // r14
  const LogContext *v39; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v40; // r14
  void (__fastcall **v41)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const); // rax
  char v42; // r15
  ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *v43; // rdx
  __int64 (__fastcall **v44)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *); // rax
  const char *v45; // rax
  void (__fastcall **v46)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v47; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v48; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  common::milog::MiLogStream *v51; // rax
  common::milog::MiLogStream *v52; // rax
  common::milog::MiLogStream *v53; // r14
  const LogContext *v54; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v55; // r14
  void (__fastcall **v56)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const); // rax
  char v57; // r15
  ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *v58; // rdx
  __int64 (__fastcall **v59)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *); // rax
  const char *v60; // rax
  void (__fastcall **v61)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v62; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v63; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v64; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v65; // rax
  std::vector<proto::GCGControllerValue>::reference v66; // rax
  _DWORD *v67; // rdx
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v68; // rax
  GCGDuel *Duel; // rax
  common::milog::MiLogStream *v70; // rax
  common::milog::MiLogStream *v71; // rax
  common::milog::MiLogStream *v72; // r14
  const LogContext *v73; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v74; // r14
  void (__fastcall **v75)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const); // rax
  char v76; // r15
  ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *v77; // rdx
  __int64 (__fastcall **v78)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *); // rax
  const char *v79; // rax
  void (__fastcall **v80)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v81; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v82; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v83; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v84; // rax
  common::milog::MiLogStream *v85; // rax
  common::milog::MiLogStream *v86; // rax
  common::milog::MiLogStream *v87; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v88; // rax
  std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v89; // rax
  unsigned __int64 v90; // rdx
  common::milog::MiLogStream *v91; // rax
  const LogContext *v92; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v93; // r14
  void (__fastcall **v94)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const); // rax
  char v95; // r15
  ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *v96; // rdx
  __int64 (__fastcall **v97)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *); // rax
  const char *v98; // rax
  void (__fastcall **v99)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v100; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v101; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v102; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v103; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-1B1h] BYREF
  unsigned int camp_type; // [rsp+30h] [rbp-1B0h] BYREF
  GCGControllerValue cur_controller_id; // [rsp+34h] [rbp-1ACh]
  GCGField *field; // [rsp+38h] [rbp-1A8h]
  std::any current_context; // [rsp+40h] [rbp-1A0h] BYREF
  common::milog::MiLogStream v112; // [rsp+50h] [rbp-190h] BYREF
  std::string val; // [rsp+70h] [rbp-170h] BYREF
  char v114[336]; // [rsp+90h] [rbp-150h] BYREF

  v3 = (unsigned __int64)v114;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_3(288LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "6 48 4 10 result:884 64 4 24 target_controller_id:902 80 16 17 this_card_ptr:878 112 16 21 on_st"
                        "age_card_ptr:904 144 24 18 controller_vec:891 208 48 17 child_context:910";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = 61956;
  v5[536862723] = 62194;
  v5[536862724] = 62194;
  v5[536862725] = -218959360;
  v5[536862726] = 62194;
  v5[536862728] = -202116109;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 80));
  if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 80), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v112,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      881);
    v6 = common::milog::MiLogStream::operator<<<char [108],(char *[108])0>(
           &v112,
           (const char (*)[108])"ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObject checkCondition get this"
                                "card failed, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v112);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v112, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v112) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 882);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
LABEL_22:
    std::string::~string(&v112);
    goto LABEL_133;
  }
  *(_DWORD *)(v3 + 48) = -1;
  if ( std::operator==<data::ConfigGCGLogicCondition>(&this->condition, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v112,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      887);
    v20 = common::milog::MiLogStream::operator<<<char [98],(char *[98])0>(
            &v112,
            (const char (*)[98])"ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObject not find child condition, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v20, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v112);
    v21 = GCGEffectContext::getLogContext(context);
    v22 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v21->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v23 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v23 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v23)(&v112, this);
    v24 = 0;
    if ( (unsigned __int8)std::string::empty(&v112) )
    {
      std::allocator<char>::allocator(&__a);
      v24 = 1;
      v25 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v26 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v26 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v27 = (const char *)(*v26)(v25);
      std::string::basic_string<std::allocator<char>>(&val, v27, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v28 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v28)(&val, this);
    }
    v29 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v22, &val);
    v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v29, ":");
    v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, -1);
    v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, 888);
    v19 = -1;
    std::string::~string(&val);
    if ( v24 )
      std::allocator<char>::~allocator(&__a);
    goto LABEL_22;
  }
  v33 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 80));
  cur_controller_id = GCGCard::getControllerId(v33);
  std::vector<proto::GCGControllerValue>::vector((std::vector<proto::GCGControllerValue> *const)(v3 + 144));
  v34 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 80));
  if ( *(_BYTE *)(((unsigned __int64)&v34->game_mode >> 3) + 0x7FFF8000) )
    __asan_report_load8(&v34->game_mode);
  SkillLogic = GCGGameMode::getSkillLogic(v34->game_mode);
  if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
  {
    SkillLogic = (GCGSkillLogic *)&this->camp_type;
    __asan_report_load4(&this->camp_type);
  }
  if ( GCGSkillLogic::getControllerVecByCampType(
         SkillLogic,
         cur_controller_id,
         this->camp_type,
         (std::vector<proto::GCGControllerValue> *)(v3 + 144)) )
  {
    common::milog::MiLogStream::create(
      &v112,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      894);
    v36 = common::milog::MiLogStream::operator<<<char [111],(char *[111])0>(
            &v112,
            (const char (*)[111])"ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObject get controller by camp"
                                 "type fail, target_camp:");
    if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->camp_type);
    }
    camp_type = this->camp_type;
    v37 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v36, &camp_type);
    v38 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v37, (const char (*)[8])", skill");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v38, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v112);
    v39 = GCGEffectContext::getLogContext(context);
    v40 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v39->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v41 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v41)(&v112, this);
    v42 = 0;
    if ( (unsigned __int8)std::string::empty(&v112) )
    {
      std::allocator<char>::allocator(&__a);
      v42 = 1;
      v43 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v44 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v44 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v45 = (const char *)(*v44)(v43);
      std::string::basic_string<std::allocator<char>>(&val, v45, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v46 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v46 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v46)(&val, this);
    }
    v47 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v40, &val);
    v48 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v47, ":");
    v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v48, -1);
    v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, 895);
    v19 = -1;
    std::string::~string(&val);
    if ( v42 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    if ( std::vector<proto::GCGControllerValue>::size((const std::vector<proto::GCGControllerValue> *const)(v3 + 144)) == 1 )
    {
      v66 = std::vector<proto::GCGControllerValue>::operator[](
              (std::vector<proto::GCGControllerValue> *const)(v3 + 144),
              0LL);
      v67 = v66;
      if ( *(_BYTE *)(((unsigned __int64)v66 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v66 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v66 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v66);
      }
      *(_DWORD *)(v3 + 64) = *v67;
      v68 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 80));
      if ( *(_BYTE *)(((unsigned __int64)&v68->game_mode >> 3) + 0x7FFF8000) )
        __asan_report_load8(&v68->game_mode);
      Duel = GCGGameMode::getDuel(v68->game_mode);
      field = GCGDuel::getField(Duel, (GCGControllerValue)*(_DWORD *)(v3 + 64));
      GCGField::getCharacterZone(field);
      GCGCharacterZone::getOnStageCard((GCGCharacterZone *const)(v3 + 112));
      if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 112), 0LL) )
      {
        common::milog::MiLogStream::create(
          &v112,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          907);
        v70 = common::milog::MiLogStream::operator<<<char [117],(char *[117])0>(
                &v112,
                (const char (*)[117])"ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObject get on_stage_card_"
                                     "ptr failed. target_controller_id:");
        v71 = common::milog::MiLogStream::operator<<<proto::GCGControllerValue,(proto::GCGControllerValue*)0>(
                v70,
                (const proto::GCGControllerValue *)(v3 + 64));
        v72 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v71, (const char (*)[8])",skill:");
        GCGSkill::getName[abi:cxx11](&val, cur_skill);
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v72, &val);
        std::string::~string(&val);
        common::milog::MiLogStream::~MiLogStream(&v112);
        v73 = GCGEffectContext::getLogContext(context);
        v74 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v73->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v75 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v75 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v75)(&v112, this);
        v76 = 0;
        if ( (unsigned __int8)std::string::empty(&v112) )
        {
          std::allocator<char>::allocator(&__a);
          v76 = 1;
          v77 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v78 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition + 4);
          if ( *(_BYTE *)(((unsigned __int64)v78 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v79 = (const char *)(*v78)(v77);
          std::string::basic_string<std::allocator<char>>(&val, v79, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v80 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v80 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v80)(&val, this);
        }
        v81 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v74, &val);
        v82 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v81, ":");
        v83 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v82, -1);
        v84 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v83, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v84, 908);
        v19 = -1;
        std::string::~string(&val);
        if ( v76 )
          std::allocator<char>::~allocator(&__a);
        std::string::~string(&v112);
      }
      else
      {
        GCGEffectContext::GCGEffectContext((GCGEffectContext *const)(v3 + 208), context);
        std::any::any<std::shared_ptr<GCGCard> &,std::shared_ptr<GCGCard>,std::any::_Manager_external<std::shared_ptr<GCGCard>>,true,true>(
          &current_context,
          (std::shared_ptr<GCGCard> *)(v3 + 112));
        GCGEffectContext::resetCurContext((GCGEffectContext *const)(v3 + 208), &current_context);
        std::any::~any(&current_context);
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&val,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          913);
        v85 = common::milog::MiLogStream::operator<<<char [87],(char *[87])0>(
                (common::milog::MiLogStream *const)&val,
                (const char (*)[87])"ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObject target_controller_id:");
        v86 = common::milog::MiLogStream::operator<<<proto::GCGControllerValue,(proto::GCGControllerValue*)0>(
                v85,
                (const proto::GCGControllerValue *)(v3 + 64));
        v87 = common::milog::MiLogStream::operator<<<char [21],(char *[21])0>(
                v86,
                (const char (*)[21])", onstage character:");
        v88 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 112));
        camp_type = GCGCard::getId(v88);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v87, &camp_type);
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
        v89 = std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)&this->condition);
        if ( *(_BYTE *)(((unsigned __int64)v89 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v89);
        v90 = (unsigned __int64)(v89->_vptr_ConfigGCGCondition + 7);
        if ( *(_BYTE *)((v90 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v89->_vptr_ConfigGCGCondition + 7);
        *(_DWORD *)(v3 + 48) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, unsigned __int64))v90)(
                                 v89,
                                 cur_skill,
                                 v3 + 208);
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&val,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          915);
        v91 = common::milog::MiLogStream::operator<<<char [73],(char *[73])0>(
                (common::milog::MiLogStream *const)&val,
                (const char (*)[73])"ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObject result:");
        common::milog::MiLogStream::operator<<<int,(int *)0>(v91, (const int *)(v3 + 48));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
        v92 = GCGEffectContext::getLogContext(context);
        v93 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v92->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v94 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v94 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v94)(&v112, this);
        v95 = 0;
        if ( (unsigned __int8)std::string::empty(&v112) )
        {
          std::allocator<char>::allocator(&__a);
          v95 = 1;
          v96 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v97 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition + 4);
          if ( *(_BYTE *)(((unsigned __int64)v97 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v98 = (const char *)(*v97)(v96);
          std::string::basic_string<std::allocator<char>>(&val, v98, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v99 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v99 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v99)(&val, this);
        }
        v100 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v93, &val);
        v101 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v100, ":");
        v102 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v101, *(_DWORD *)(v3 + 48));
        v103 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v102, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v103, 916);
        v19 = *(_DWORD *)(v3 + 48);
        std::string::~string(&val);
        if ( v95 )
          std::allocator<char>::~allocator(&__a);
        std::string::~string(&v112);
        GCGEffectContext::~GCGEffectContext((GCGEffectContext *const)(v3 + 208));
      }
      std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 112));
      goto LABEL_132;
    }
    common::milog::MiLogStream::create(
      &v112,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      899);
    v51 = common::milog::MiLogStream::operator<<<char [83],(char *[83])0>(
            &v112,
            (const char (*)[83])"ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObject get camp invalid:");
    v52 = common::milog::MiLogStream::operator<<<proto::GCGControllerValue>(
            v51,
            (const std::vector<proto::GCGControllerValue> *)(v3 + 144));
    v53 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v52, (const char (*)[8])",skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v53, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v112);
    v54 = GCGEffectContext::getLogContext(context);
    v55 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v54->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v56 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v56 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v56)(&v112, this);
    v57 = 0;
    if ( (unsigned __int8)std::string::empty(&v112) )
    {
      std::allocator<char>::allocator(&__a);
      v57 = 1;
      v58 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v59 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v59 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v60 = (const char *)(*v59)(v58);
      std::string::basic_string<std::allocator<char>>(&val, v60, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v61 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v61 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v61)(&val, this);
    }
    v62 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v55, &val);
    v63 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v62, ":");
    v64 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v63, -1);
    v65 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v64, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v65, 900);
    v19 = -1;
    std::string::~string(&val);
    if ( v57 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v112);
LABEL_132:
  std::vector<proto::GCGControllerValue>::~vector((std::vector<proto::GCGControllerValue> *const)(v3 + 144));
LABEL_133:
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 80));
  result = v19;
  if ( v114 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8018) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8020) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8020) = -168430091;
  }
  return result;
};

// Line 921: range 000000000E147F28-000000000E1493CD
int32_t __cdecl ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl::checkCondition(
        ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // r14
  const LogContext *v7; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const); // rax
  char v10; // r15
  ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r14d
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  GCGSkillLogic *SkillLogic; // rdi
  common::milog::MiLogStream *v23; // rcx
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // r14
  void (__fastcall **v28)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const); // rax
  char v29; // r15
  ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *v30; // rdx
  __int64 (__fastcall **v31)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *); // rax
  const char *v32; // rax
  void (__fastcall **v33)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::milog::MiLogStream *v38; // rax
  common::milog::MiLogStream *v39; // rax
  common::milog::MiLogStream *v40; // r14
  const LogContext *v41; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v42; // r14
  void (__fastcall **v43)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const); // rax
  char v44; // r15
  ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *v45; // rdx
  __int64 (__fastcall **v46)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *); // rax
  const char *v47; // rax
  void (__fastcall **v48)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v51; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v52; // rax
  std::vector<proto::GCGControllerValue>::reference v53; // rax
  _DWORD *v54; // rdx
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v55; // rax
  GCGDuel *Duel; // rax
  common::milog::MiLogStream *v57; // rax
  common::milog::MiLogStream *v58; // rax
  common::milog::MiLogStream *v59; // r14
  const LogContext *v60; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v61; // r14
  void (__fastcall **v62)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const); // rax
  char v63; // r15
  ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *v64; // rdx
  __int64 (__fastcall **v65)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *); // rax
  const char *v66; // rax
  void (__fastcall **v67)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v68; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v69; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v70; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v71; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v72; // rax
  common::milog::MiLogStream *v73; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v74; // rax
  common::milog::MiLogStream *v75; // rax
  common::milog::MiLogStream *v76; // rax
  const LogContext *v77; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v78; // r14
  void (__fastcall **v79)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const); // rax
  char v80; // r15
  ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *v81; // rdx
  __int64 (__fastcall **v82)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *); // rax
  const char *v83; // rax
  void (__fastcall **v84)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v85; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v86; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v87; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v88; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+23h] [rbp-13Dh] BYREF
  GCGControllerValue cur_controller_id; // [rsp+24h] [rbp-13Ch]
  GCGField *field; // [rsp+28h] [rbp-138h]
  common::milog::MiLogStream v95; // [rsp+30h] [rbp-130h] BYREF
  std::string val; // [rsp+50h] [rbp-110h] BYREF
  char v97[240]; // [rsp+70h] [rbp-F0h] BYREF

  v3 = (unsigned __int64)v97;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(192LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "5 32 4 10 result:928 48 4 24 target_controller_id:941 64 16 17 this_card_ptr:922 96 16 21 on_sta"
                        "ge_card_ptr:943 128 24 18 controller_vec:930";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556924;
  v5[536862722] = -219021312;
  v5[536862723] = -219021312;
  v5[536862724] = -218103808;
  v5[536862725] = -202116109;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 64));
  if ( !std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 64), 0LL) )
  {
    *(_DWORD *)(v3 + 32) = -1;
    v20 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    cur_controller_id = GCGCard::getControllerId(v20);
    std::vector<proto::GCGControllerValue>::vector((std::vector<proto::GCGControllerValue> *const)(v3 + 128));
    v21 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    if ( *(_BYTE *)(((unsigned __int64)&v21->game_mode >> 3) + 0x7FFF8000) )
      __asan_report_load8(&v21->game_mode);
    SkillLogic = GCGGameMode::getSkillLogic(v21->game_mode);
    if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
    {
      SkillLogic = (GCGSkillLogic *)&this->camp_type;
      __asan_report_load4(&this->camp_type);
    }
    if ( GCGSkillLogic::getControllerVecByCampType(
           SkillLogic,
           cur_controller_id,
           this->camp_type,
           (std::vector<proto::GCGControllerValue> *)(v3 + 128)) )
    {
      common::milog::MiLogStream::create(
        &v95,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        933);
      v23 = common::milog::MiLogStream::operator<<<char [107],(char *[107])0>(
              &v95,
              (const char (*)[107])"ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterID get controller by campty"
                                   "pe fail, target_camp:");
      if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->camp_type);
      }
      *(_DWORD *)(v3 + 48) = this->camp_type;
      v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v23, (const unsigned int *)(v3 + 48));
      v25 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v24, (const char (*)[8])", skill");
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v25, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v95);
      LogContext = GCGEffectContext::getLogContext(context);
      v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v28 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v28)(&v95, this);
      v29 = 0;
      if ( (unsigned __int8)std::string::empty(&v95) )
      {
        std::allocator<char>::allocator(&__a);
        v29 = 1;
        v30 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v31 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v32 = (const char *)(*v31)(v30);
        std::string::basic_string<std::allocator<char>>(&val, v32, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v33 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v33)(&val, this);
      }
      v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, &val);
      v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
      v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, -1);
      v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, 934);
      v19 = -1;
      std::string::~string(&val);
      if ( v29 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      if ( std::vector<proto::GCGControllerValue>::size((const std::vector<proto::GCGControllerValue> *const)(v3 + 128)) == 1 )
      {
        v53 = std::vector<proto::GCGControllerValue>::operator[](
                (std::vector<proto::GCGControllerValue> *const)(v3 + 128),
                0LL);
        v54 = v53;
        if ( *(_BYTE *)(((unsigned __int64)v53 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v53 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v53 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v53);
        }
        *(_DWORD *)(v3 + 48) = *v54;
        v55 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        if ( *(_BYTE *)(((unsigned __int64)&v55->game_mode >> 3) + 0x7FFF8000) )
          __asan_report_load8(&v55->game_mode);
        Duel = GCGGameMode::getDuel(v55->game_mode);
        field = GCGDuel::getField(Duel, (GCGControllerValue)*(_DWORD *)(v3 + 48));
        GCGField::getCharacterZone(field);
        GCGCharacterZone::getOnStageCard((GCGCharacterZone *const)(v3 + 96));
        if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 96), 0LL) )
        {
          common::milog::MiLogStream::create(
            &v95,
            &common::milog::MiLogDefault::default_log_obj_,
            3u,
            "./src/card_game/skill/gcg_condition.cpp",
            "checkCondition",
            946);
          v57 = common::milog::MiLogStream::operator<<<char [113],(char *[113])0>(
                  &v95,
                  (const char (*)[113])"ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterID get on_stage_card_pt"
                                       "r failed. target_controller_id:");
          v58 = common::milog::MiLogStream::operator<<<proto::GCGControllerValue,(proto::GCGControllerValue*)0>(
                  v57,
                  (const proto::GCGControllerValue *)(v3 + 48));
          v59 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v58, (const char (*)[8])",skill:");
          GCGSkill::getName[abi:cxx11](&val, cur_skill);
          common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v59, &val);
          std::string::~string(&val);
          common::milog::MiLogStream::~MiLogStream(&v95);
          v60 = GCGEffectContext::getLogContext(context);
          v61 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v60->data, "|");
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v62 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v62 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v62)(&v95, this);
          v63 = 0;
          if ( (unsigned __int8)std::string::empty(&v95) )
          {
            std::allocator<char>::allocator(&__a);
            v63 = 1;
            v64 = this;
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v65 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
            if ( *(_BYTE *)(((unsigned __int64)v65 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
            v66 = (const char *)(*v65)(v64);
            std::string::basic_string<std::allocator<char>>(&val, v66, &__a);
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v67 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
            if ( *(_BYTE *)(((unsigned __int64)v67 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
            (*v67)(&val, this);
          }
          v68 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v61, &val);
          v69 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v68, ":");
          v70 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v69, -1);
          v71 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v70, ":");
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v71, 947);
          v19 = -1;
          std::string::~string(&val);
          if ( v63 )
            std::allocator<char>::~allocator(&__a);
        }
        else
        {
          v72 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
          *(_DWORD *)(v3 + 32) = GCGCard::getGuid(v72);
          common::milog::MiLogStream::create(
            &v95,
            &common::milog::MiLogDefault::default_log_obj_,
            1u,
            "./src/card_game/skill/gcg_condition.cpp",
            "checkCondition",
            950);
          v73 = common::milog::MiLogStream::operator<<<char [67],(char *[67])0>(
                  &v95,
                  (const char (*)[67])"ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterID card:");
          v74 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
          GCGCard::getDesc[abi:cxx11](&val, v74);
          v75 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v73, &val);
          v76 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v75, (const char (*)[10])", result:");
          common::milog::MiLogStream::operator<<<int,(int *)0>(v76, (const int *)(v3 + 32));
          std::string::~string(&val);
          common::milog::MiLogStream::~MiLogStream(&v95);
          v77 = GCGEffectContext::getLogContext(context);
          v78 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v77->data, "|");
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v79 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v79 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v79)(&v95, this);
          v80 = 0;
          if ( (unsigned __int8)std::string::empty(&v95) )
          {
            std::allocator<char>::allocator(&__a);
            v80 = 1;
            v81 = this;
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v82 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
            if ( *(_BYTE *)(((unsigned __int64)v82 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
            v83 = (const char *)(*v82)(v81);
            std::string::basic_string<std::allocator<char>>(&val, v83, &__a);
          }
          else
          {
            if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
              __asan_report_load8(this);
            v84 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
            if ( *(_BYTE *)(((unsigned __int64)v84 >> 3) + 0x7FFF8000) )
              __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
            (*v84)(&val, this);
          }
          v85 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v78, &val);
          v86 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v85, ":");
          v87 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v86, *(_DWORD *)(v3 + 32));
          v88 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v87, ":");
          common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v88, 951);
          v19 = *(_DWORD *)(v3 + 32);
          std::string::~string(&val);
          if ( v80 )
            std::allocator<char>::~allocator(&__a);
        }
        std::string::~string(&v95);
        std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 96));
        goto LABEL_108;
      }
      common::milog::MiLogStream::create(
        &v95,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        938);
      v38 = common::milog::MiLogStream::operator<<<char [79],(char *[79])0>(
              &v95,
              (const char (*)[79])"ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterID get camp invalid:");
      v39 = common::milog::MiLogStream::operator<<<proto::GCGControllerValue>(
              v38,
              (const std::vector<proto::GCGControllerValue> *)(v3 + 128));
      v40 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v39, (const char (*)[8])",skill:");
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v40, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v95);
      v41 = GCGEffectContext::getLogContext(context);
      v42 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v41->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v43 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v43)(&v95, this);
      v44 = 0;
      if ( (unsigned __int8)std::string::empty(&v95) )
      {
        std::allocator<char>::allocator(&__a);
        v44 = 1;
        v45 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v46 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v46 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v47 = (const char *)(*v46)(v45);
        std::string::basic_string<std::allocator<char>>(&val, v47, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v48 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v48 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v48)(&val, this);
      }
      v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v42, &val);
      v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, ":");
      v51 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, -1);
      v52 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v51, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v52, 939);
      v19 = -1;
      std::string::~string(&val);
      if ( v44 )
        std::allocator<char>::~allocator(&__a);
    }
    std::string::~string(&v95);
LABEL_108:
    std::vector<proto::GCGControllerValue>::~vector((std::vector<proto::GCGControllerValue> *const)(v3 + 128));
    goto LABEL_109;
  }
  common::milog::MiLogStream::create(
    &v95,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/card_game/skill/gcg_condition.cpp",
    "checkCondition",
    925);
  v6 = common::milog::MiLogStream::operator<<<char [104],(char *[104])0>(
         &v95,
         (const char (*)[104])"ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterID checkCondition get thiscard failed, skill:");
  GCGSkill::getName[abi:cxx11](&val, cur_skill);
  common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
  std::string::~string(&val);
  common::milog::MiLogStream::~MiLogStream(&v95);
  v7 = GCGEffectContext::getLogContext(context);
  v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v7->data, "|");
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
    __asan_report_load8(this);
  v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
  if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
    __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
  (*v9)(&v95, this);
  v10 = 0;
  if ( (unsigned __int8)std::string::empty(&v95) )
  {
    std::allocator<char>::allocator(&__a);
    v10 = 1;
    v11 = this;
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
    if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
    v13 = (const char *)(*v12)(v11);
    std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchSpecifiedCampOnstageCharacterIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v14)(&val, this);
  }
  v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
  v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
  v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
  v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 926);
  v19 = -1;
  std::string::~string(&val);
  if ( v10 )
    std::allocator<char>::~allocator(&__a);
  std::string::~string(&v95);
LABEL_109:
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v19;
  if ( v97 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 956: range 000000000E1494EC-000000000E149E19
int32_t __cdecl ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl::checkCondition(
        ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  GCGGameMode *GameMode; // rax
  GCGDuel *Duel; // rax
  common::milog::MiLogStream *v23; // r14
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  const LogContext *v28; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v29; // r15
  void (__fastcall **v30)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *const); // rax
  char v31; // r14
  ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *v32; // rdx
  __int64 (__fastcall **v33)(ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *); // rax
  const char *v34; // rax
  void (__fastcall **v35)(std::string *, ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v38; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v39; // rax
  int32_t result; // eax
  GCGCharacterZone *CharacterZone; // [rsp+10h] [rbp-140h]
  std::allocator<char> __a; // [rsp+33h] [rbp-11Dh] BYREF
  GCGControllerValue cur_controller_id; // [rsp+34h] [rbp-11Ch]
  GCGField *field; // [rsp+38h] [rbp-118h]
  common::milog::MiLogStream v46; // [rsp+40h] [rbp-110h] BYREF
  std::string val; // [rsp+60h] [rbp-F0h] BYREF
  char v48[208]; // [rsp+80h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v48;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 48 4 10 result:965 64 16 17 this_card_ptr:957 96 24 18 alive_card_vec:966";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -219021312;
  v5[536862723] = -218103808;
  v5[536862724] = -202116109;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 64));
  if ( std::operator==<GCGCard>((const std::shared_ptr<GCGCard> *)(v3 + 64), 0LL) )
  {
    common::milog::MiLogStream::create(
      &v46,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      960);
    v6 = common::milog::MiLogStream::operator<<<char [86],(char *[86])0>(
           &v46,
           (const char (*)[86])"ConfigGCGConditionGlobalCurCampBackStageHurtTotalNum this_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v46);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v46, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v46) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 961);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v46);
  }
  else
  {
    v20 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    cur_controller_id = GCGCard::getControllerId(v20);
    GameMode = GCGSkill::getGameMode(cur_skill);
    Duel = GCGGameMode::getDuel(GameMode);
    field = GCGDuel::getField(Duel, cur_controller_id);
    *(_DWORD *)(v3 + 48) = 0;
    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v3 + 96));
    CharacterZone = GCGField::getCharacterZone(field);
    std::function<ForeachPolicy ()(GCGCard &)>::function<ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(GCGCard &)#1},void,void>(
      (std::function<ForeachPolicy(GCGCard&)> *const)&val,
      (ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl::checkCondition::<lambda(GCGCard&)>)__PAIR128__(v3 + 96, v3 + 48));
    GCGCharacterZone::foreachAliveBackStageCharater(CharacterZone, (std::function<ForeachPolicy(GCGCard&)> *)&val);
    std::function<ForeachPolicy ()(GCGCard &)>::~function((std::function<ForeachPolicy(GCGCard&)> *const)&val);
    common::milog::MiLogStream::create(
      &v46,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      974);
    v23 = common::milog::MiLogStream::operator<<<char [61],(char *[61])0>(
            &v46,
            (const char (*)[61])"ConfigGCGConditionGlobalCurCampBackStageHurtTotalNum, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    v24 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, &val);
    v25 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v24, (const char (*)[9])",result:");
    v26 = common::milog::MiLogStream::operator<<<int,(int *)0>(v25, (const int *)(v3 + 48));
    v27 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v26, (const char (*)[15])", alive cards:");
    common::milog::MiLogStream::operator<<<unsigned int>(v27, (const std::vector<unsigned int> *)(v3 + 96));
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v46);
    v28 = GCGEffectContext::getLogContext(context);
    v29 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v28->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v30 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v30)(&v46, this);
    v31 = 0;
    if ( (unsigned __int8)std::string::empty(&v46) )
    {
      std::allocator<char>::allocator(&__a);
      v31 = 1;
      v32 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v33 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                + 4);
      if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v34 = (const char *)(*v33)(v32);
      std::string::basic_string<std::allocator<char>>(&val, v34, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v35 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v35)(&val, this);
    }
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v29, &val);
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
    v38 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, *(_DWORD *)(v3 + 48));
    v39 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v38, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v39, 975);
    v19 = *(_DWORD *)(v3 + 48);
    std::string::~string(&val);
    if ( v31 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v46);
    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v3 + 96));
  }
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v19;
  if ( v48 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 968: range 000000000E1493CE-000000000E1494EA
ForeachPolicy __cdecl ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(GCGCard &)#1}::operator()(
        const ConfigGCGConditionGlobalCurCampBackStageHurtTotalNumImpl::checkCondition::<lambda(GCGCard&)> *const __closure,
        GCGCard *card)
{
  std::vector<unsigned int> *alive_card_vec; // rbx
  int32_t HurtNum; // esi
  int32_t *v4; // rdx
  int32_t v5; // ecx
  int32_t *v6; // rdx
  int32_t v7; // esi
  std::vector<unsigned int>::value_type __x[5]; // [rsp+1Ch] [rbp-14h] BYREF

  if ( *(_BYTE *)(((unsigned __int64)&__closure->__alive_card_vec >> 3) + 0x7FFF8000) )
    __asan_report_load8(&__closure->__alive_card_vec);
  alive_card_vec = __closure->__alive_card_vec;
  __x[0] = GCGCard::getId(card);
  std::vector<unsigned int>::push_back(alive_card_vec, __x);
  HurtNum = GCGCard::getHurtNum(card);
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  v4 = __closure->__result;
  if ( *(_BYTE *)(((unsigned __int64)__closure->__result >> 3) + 0x7FFF8000) != 0
    && (char)(((__int64)__closure->__result & 7) + 3) >= *(_BYTE *)(((unsigned __int64)__closure->__result >> 3)
                                                                  + 0x7FFF8000) )
  {
    __asan_report_load4(__closure->__result);
  }
  v5 = *v4;
  v6 = __closure->__result;
  v7 = v5 + HurtNum;
  if ( *(_BYTE *)(((unsigned __int64)__closure->__result >> 3) + 0x7FFF8000) != 0
    && (char)(((__int64)__closure->__result & 7) + 3) >= *(_BYTE *)(((unsigned __int64)__closure->__result >> 3)
                                                                  + 0x7FFF8000) )
  {
    __asan_report_store4(__closure->__result);
  }
  *v6 = v7;
  return 0;
};

// Line 980: range 000000000E149E1A-000000000E14A209
int32_t __cdecl ConfigGCGConditionGlobalThisSkillIDImpl::checkCondition(
        ConfigGCGConditionGlobalThisSkillIDImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  common::milog::MiLogStream *v6; // rax
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(char *, ConfigGCGConditionGlobalThisSkillIDImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalThisSkillIDImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalThisSkillIDImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(common::milog::MiLogStream *, ConfigGCGConditionGlobalThisSkillIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r13d
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-B1h] BYREF
  char v23[32]; // [rsp+30h] [rbp-B0h] BYREF
  common::milog::MiLogStream v24; // [rsp+50h] [rbp-90h] BYREF
  char v25[112]; // [rsp+70h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v25;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 4 10 result:981";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalThisSkillIDImpl::checkCondition;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202116348;
  *(_DWORD *)(v3 + 32) = GCGSkill::getSkillId(cur_skill);
  common::milog::MiLogStream::create(
    &v24,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/card_game/skill/gcg_condition.cpp",
    "checkCondition",
    982);
  v6 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
         &v24,
         (const char (*)[44])"ConfigGCGConditionGlobalThisSkillID result:");
  common::milog::MiLogStream::operator<<<int,(int *)0>(v6, (const int *)(v3 + 32));
  common::milog::MiLogStream::~MiLogStream(&v24);
  LogContext = GCGEffectContext::getLogContext(context);
  v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
    __asan_report_load8(this);
  v9 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalThisSkillIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
  if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
    __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
  (*v9)(v23, this);
  v10 = 0;
  if ( (unsigned __int8)std::string::empty(v23) )
  {
    std::allocator<char>::allocator(&__a);
    v10 = 1;
    v11 = this;
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalThisSkillIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
    if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
    v13 = (const char *)(*v12)(v11);
    std::string::basic_string<std::allocator<char>>((std::string *const)&v24, v13, &__a);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v14 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalThisSkillIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v14)(&v24, this);
  }
  v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, (const std::string *)&v24);
  v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
  v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, *(_DWORD *)(v3 + 32));
  v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 983);
  v19 = *(_DWORD *)(v3 + 32);
  std::string::~string(&v24);
  if ( v10 )
    std::allocator<char>::~allocator(&__a);
  std::string::~string(v23);
  result = v19;
  if ( v25 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 987: range 000000000E14A20A-000000000E14AA9E
int32_t __cdecl ConfigGCGConditionGlobalThisSkillObjectImpl::checkCondition(
        ConfigGCGConditionGlobalThisSkillObjectImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v7; // r14
  void (__fastcall **v8)(common::milog::MiLogStream *, ConfigGCGConditionGlobalThisSkillObjectImpl *const); // rax
  char v9; // bl
  ConfigGCGConditionGlobalThisSkillObjectImpl *v10; // rdx
  __int64 (__fastcall **v11)(ConfigGCGConditionGlobalThisSkillObjectImpl *); // rax
  const char *v12; // rax
  void (__fastcall **v13)(std::string *, ConfigGCGConditionGlobalThisSkillObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v14; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  int32_t v18; // r15d
  common::milog::MiLogStream *v19; // r14
  std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  unsigned __int64 v21; // rdx
  common::milog::MiLogStream *v22; // rax
  const LogContext *v23; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v24; // r15
  void (__fastcall **v25)(common::milog::MiLogStream *, ConfigGCGConditionGlobalThisSkillObjectImpl *const); // rax
  char v26; // r14
  ConfigGCGConditionGlobalThisSkillObjectImpl *v27; // rdx
  __int64 (__fastcall **v28)(ConfigGCGConditionGlobalThisSkillObjectImpl *); // rax
  const char *v29; // rax
  void (__fastcall **v30)(std::string *, ConfigGCGConditionGlobalThisSkillObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-111h] BYREF
  std::enable_shared_from_this<GCGSkill> v38; // [rsp+30h] [rbp-110h] BYREF
  std::any current_context; // [rsp+40h] [rbp-100h] BYREF
  common::milog::MiLogStream v40; // [rsp+50h] [rbp-F0h] BYREF
  std::string v; // [rsp+70h] [rbp-D0h] BYREF
  char v42[176]; // [rsp+90h] [rbp-B0h] BYREF

  v3 = (unsigned __int64)v42;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 32 4 10 result:988 48 48 17 child_context:993";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalThisSkillObjectImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61956;
  v5[536862723] = -202116109;
  *(_DWORD *)(v3 + 32) = 0;
  if ( std::operator==<data::ConfigGCGLogicCondition>(&this->condition, 0LL) )
  {
    LogContext = GCGEffectContext::getLogContext(context);
    v7 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v8 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalThisSkillObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v8)(&v40, this);
    v9 = 0;
    if ( (unsigned __int8)std::string::empty(&v40) )
    {
      std::allocator<char>::allocator(&__a);
      v9 = 1;
      v10 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v11 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalThisSkillObjectImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v12 = (const char *)(*v11)(v10);
      std::string::basic_string<std::allocator<char>>(&v, v12, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalThisSkillObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v13)(&v, this);
    }
    v14 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v7, &v);
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v14, ":");
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, -1);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, 991);
    v18 = -1;
    std::string::~string(&v);
    if ( v9 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v40);
  }
  else
  {
    GCGEffectContext::GCGEffectContext((GCGEffectContext *const)(v3 + 48), context);
    std::enable_shared_from_this<GCGSkill>::shared_from_this(&v38);
    std::any::any<std::shared_ptr<GCGSkill const>,std::shared_ptr<GCGSkill const>,std::any::_Manager_external<std::shared_ptr<GCGSkill const>>,true,true>(
      &current_context,
      (std::shared_ptr<const GCGSkill> *)&v38);
    GCGEffectContext::resetCurContext((GCGEffectContext *const)(v3 + 48), &current_context);
    std::any::~any(&current_context);
    std::shared_ptr<GCGSkill const>::~shared_ptr((std::shared_ptr<const GCGSkill> *const)&v38);
    common::milog::MiLogStream::create(
      &v40,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      996);
    v19 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
            &v40,
            (const char (*)[50])"ConfigGCGConditionGlobalThisSkillObject skill_id:");
    GCGSkill::getName[abi:cxx11](&v, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v19, &v);
    std::string::~string(&v);
    common::milog::MiLogStream::~MiLogStream(&v40);
    v20 = std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)&this->condition);
    if ( *(_BYTE *)(((unsigned __int64)v20 >> 3) + 0x7FFF8000) )
      __asan_report_load8(v20);
    v21 = (unsigned __int64)(v20->_vptr_ConfigGCGCondition + 7);
    if ( *(_BYTE *)((v21 >> 3) + 0x7FFF8000) )
      __asan_report_load8(v20->_vptr_ConfigGCGCondition + 7);
    *(_DWORD *)(v3 + 32) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, unsigned __int64))v21)(
                             v20,
                             cur_skill,
                             v3 + 48);
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&v,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      998);
    v22 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
            (common::milog::MiLogStream *const)&v,
            (const char (*)[48])"ConfigGCGConditionGlobalThisSkillObject result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v22, (const int *)(v3 + 32));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v);
    v23 = GCGEffectContext::getLogContext(context);
    v24 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v23->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v25 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalThisSkillObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v25)(&v40, this);
    v26 = 0;
    if ( (unsigned __int8)std::string::empty(&v40) )
    {
      std::allocator<char>::allocator(&__a);
      v26 = 1;
      v27 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v28 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalThisSkillObjectImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v29 = (const char *)(*v28)(v27);
      std::string::basic_string<std::allocator<char>>(&v, v29, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v30 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalThisSkillObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v30)(&v, this);
    }
    v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v24, &v);
    v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, ":");
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, *(_DWORD *)(v3 + 32));
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, 999);
    v18 = *(_DWORD *)(v3 + 32);
    std::string::~string(&v);
    if ( v26 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v40);
    GCGEffectContext::~GCGEffectContext((GCGEffectContext *const)(v3 + 48));
  }
  result = v18;
  if ( v42 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF800C) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1003: range 000000000E14AAA0-000000000E14ACD6
int32_t __cdecl ConfigGCGConditionFetchCurSkillRoundUsedNumImpl::checkCondition(
        ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGSkill> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGSkill> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionFetchCurSkillRoundUsedNumImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGSkill> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGSkill>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGSkill> const&>(&context->cur_context);
    std::shared_ptr<GCGSkill const>::shared_ptr<GCGSkill,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionFetchCurSkillRoundUsedNumImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGSkill const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGSkill const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGSkill const> const&>(&context->cur_context);
      return ConfigGCGConditionFetchCurSkillRoundUsedNumImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1004);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGSkill>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGSkill const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1008: range 000000000E14ACD8-000000000E14B44E
int32_t __cdecl ConfigGCGConditionFetchCurSkillRoundUsedNumImpl::checkCondition(
        ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGSkill> *skill_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *const); // rax
  char v10; // r13
  ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  const LogContext *v25; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v26; // r15
  void (__fastcall **v27)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *const); // rax
  char v28; // r14
  ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *v29; // rdx
  __int64 (__fastcall **v30)(ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *); // rax
  const char *v31; // rax
  void (__fastcall **v32)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Fh] [rbp-B1h] BYREF
  common::milog::MiLogStream v41; // [rsp+40h] [rbp-B0h] BYREF
  common::milog::MiLogStream v42; // [rsp+60h] [rbp-90h] BYREF
  char v43[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v43;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 11 result:1014";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionFetchCurSkillRoundUsedNumImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGSkill const>(skill_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v42,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1011);
    common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
      &v42,
      (const char (*)[65])"ConfigGCGConditionFetchCurSkillRoundUsedNum skill_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v42);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v41, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v41) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v42, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&v42, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, (const std::string *)&v42);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1012);
    v19 = -1;
    std::string::~string(&v42);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v20 = std::__shared_ptr_access<GCGSkill const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false> *const)skill_ptr);
    *(_DWORD *)(v4 + 32) = GCGSkill::getRoundUsedTimes(v20);
    common::milog::MiLogStream::create(
      &v41,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1015);
    v21 = common::milog::MiLogStream::operator<<<char [51],(char *[51])0>(
            &v41,
            (const char (*)[51])"ConfigGCGConditionFetchCurSkillRoundUsedNum skill:");
    v22 = std::__shared_ptr_access<GCGSkill const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false> *const)skill_ptr);
    GCGSkill::getName[abi:cxx11]((std::string *)&v42, v22);
    v23 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, (const std::string *)&v42);
    v24 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(v23, (const char (*)[17])" round use time:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v24, (const int *)(v4 + 32));
    std::string::~string(&v42);
    common::milog::MiLogStream::~MiLogStream(&v41);
    v25 = GCGEffectContext::getLogContext(context);
    v26 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v25->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v27 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v27)(&v41, this);
    v28 = 0;
    if ( (unsigned __int8)std::string::empty(&v41) )
    {
      std::allocator<char>::allocator(&__a);
      v28 = 1;
      v29 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v30 = (__int64 (__fastcall **)(ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v31 = (const char *)(*v30)(v29);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v42, v31, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v32 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillRoundUsedNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v32)(&v42, this);
    }
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v26, (const std::string *)&v42);
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, ":");
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, *(_DWORD *)(v4 + 32));
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, 1016);
    v19 = *(_DWORD *)(v4 + 32);
    std::string::~string(&v42);
    if ( v28 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v41);
  result = v19;
  if ( v43 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1020: range 000000000E14B450-000000000E14B686
int32_t __cdecl ConfigGCGConditionCheckCurSkillHasSkillIDImpl::checkCondition(
        ConfigGCGConditionCheckCurSkillHasSkillIDImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGSkill> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGSkill> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurSkillHasSkillIDImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGSkill> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGSkill>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGSkill> const&>(&context->cur_context);
    std::shared_ptr<GCGSkill const>::shared_ptr<GCGSkill,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurSkillHasSkillIDImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGSkill const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGSkill const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGSkill const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurSkillHasSkillIDImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1021);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGSkill>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGSkill const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1025: range 000000000E14B688-000000000E14BE94
int32_t __cdecl ConfigGCGConditionCheckCurSkillHasSkillIDImpl::checkCondition(
        ConfigGCGConditionCheckCurSkillHasSkillIDImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGSkill> *skill_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasSkillIDImpl *const); // rax
  char v10; // r12
  ConfigGCGConditionCheckCurSkillHasSkillIDImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionCheckCurSkillHasSkillIDImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasSkillIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  const LogContext *v27; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v28; // r15
  void (__fastcall **v29)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasSkillIDImpl *const); // rax
  char v30; // r14
  ConfigGCGConditionCheckCurSkillHasSkillIDImpl *v31; // rdx
  __int64 (__fastcall **v32)(ConfigGCGConditionCheckCurSkillHasSkillIDImpl *); // rax
  const char *v33; // rax
  void (__fastcall **v34)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasSkillIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v38; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Bh] [rbp-B5h] BYREF
  uint32_t cur_skill_id; // [rsp+3Ch] [rbp-B4h]
  common::milog::MiLogStream v44; // [rsp+40h] [rbp-B0h] BYREF
  common::milog::MiLogStream v45; // [rsp+60h] [rbp-90h] BYREF
  char v46[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v46;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 11 result:1031";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCheckCurSkillHasSkillIDImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGSkill const>(skill_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v45,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1028);
    common::milog::MiLogStream::operator<<<char [63],(char *[63])0>(
      &v45,
      (const char (*)[63])"ConfigGCGConditionCheckCurSkillHasSkillID skill_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v45);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasSkillIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v44, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v44) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurSkillHasSkillIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v45, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasSkillIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&v45, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, (const std::string *)&v45);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1029);
    v19 = -1;
    std::string::~string(&v45);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    *(_DWORD *)(v4 + 32) = 0;
    v20 = std::__shared_ptr_access<GCGSkill const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false> *const)skill_ptr);
    cur_skill_id = GCGSkill::getSkillId(v20);
    if ( *(_BYTE *)(((unsigned __int64)&this->skill_id >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->skill_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->skill_id);
    }
    if ( cur_skill_id == this->skill_id )
      *(_DWORD *)(v4 + 32) = 0;
    else
      *(_DWORD *)(v4 + 32) = -1;
    common::milog::MiLogStream::create(
      &v44,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1041);
    v21 = common::milog::MiLogStream::operator<<<char [49],(char *[49])0>(
            &v44,
            (const char (*)[49])"ConfigGCGConditionCheckCurSkillHasSkillID skill:");
    v22 = std::__shared_ptr_access<GCGSkill const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false> *const)skill_ptr);
    GCGSkill::getName[abi:cxx11]((std::string *)&v45, v22);
    v23 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, (const std::string *)&v45);
    v24 = common::milog::MiLogStream::operator<<<char [19],(char *[19])0>(v23, (const char (*)[19])", config skill_id:");
    v25 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v24, &this->skill_id);
    v26 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v25, (const char (*)[10])", result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v26, (const int *)(v4 + 32));
    std::string::~string(&v45);
    common::milog::MiLogStream::~MiLogStream(&v44);
    v27 = GCGEffectContext::getLogContext(context);
    v28 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v27->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v29 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasSkillIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v29)(&v44, this);
    v30 = 0;
    if ( (unsigned __int8)std::string::empty(&v44) )
    {
      std::allocator<char>::allocator(&__a);
      v30 = 1;
      v31 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v32 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurSkillHasSkillIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v33 = (const char *)(*v32)(v31);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v45, v33, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v34 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurSkillHasSkillIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v34 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v34)(&v45, this);
    }
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v28, (const std::string *)&v45);
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, *(_DWORD *)(v4 + 32));
    v38 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v38, 1042);
    v19 = *(_DWORD *)(v4 + 32);
    std::string::~string(&v45);
    if ( v30 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v44);
  result = v19;
  if ( v46 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1046: range 000000000E14BE96-000000000E14C0CC
int32_t __cdecl ConfigGCGConditionCheckCurCharacterHasCardIDImpl::checkCondition(
        ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurCharacterHasCardIDImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurCharacterHasCardIDImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurCharacterHasCardIDImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1047);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1051: range 000000000E14C0CE-000000000E14CCA6
int32_t __cdecl ConfigGCGConditionCheckCurCharacterHasCardIDImpl::checkCondition(
        ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r13
  common::milog::MiLogStream *v7; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // r14
  void (__fastcall **v10)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const); // rax
  char v11; // r12
  ConfigGCGConditionCheckCurCharacterHasCardIDImpl *v12; // rdx
  __int64 (__fastcall **v13)(ConfigGCGConditionCheckCurCharacterHasCardIDImpl *); // rax
  const char *v14; // rax
  void (__fastcall **v15)(std::string *, ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  int32_t v20; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // r12
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // r12
  const LogContext *v26; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // r14
  void (__fastcall **v28)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const); // rax
  char v29; // r12
  ConfigGCGConditionCheckCurCharacterHasCardIDImpl *v30; // rdx
  __int64 (__fastcall **v31)(ConfigGCGConditionCheckCurCharacterHasCardIDImpl *); // rax
  const char *v32; // rax
  void (__fastcall **v33)(std::string *, ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v38; // rax
  common::milog::MiLogStream *v39; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v40; // rax
  common::milog::MiLogStream *v41; // rax
  common::milog::MiLogStream *v42; // rax
  common::milog::MiLogStream *v43; // rax
  common::milog::MiLogStream *v44; // rax
  const LogContext *v45; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v46; // r15
  void (__fastcall **v47)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const); // rax
  char v48; // r14
  ConfigGCGConditionCheckCurCharacterHasCardIDImpl *v49; // rdx
  __int64 (__fastcall **v50)(ConfigGCGConditionCheckCurCharacterHasCardIDImpl *); // rax
  const char *v51; // rax
  void (__fastcall **v52)(std::string *, ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v53; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v55; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v56; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+37h] [rbp-B9h] BYREF
  unsigned int Id; // [rsp+38h] [rbp-B8h] BYREF
  uint32_t cur_card_id; // [rsp+3Ch] [rbp-B4h]
  common::milog::MiLogStream v63; // [rsp+40h] [rbp-B0h] BYREF
  std::string val; // [rsp+60h] [rbp-90h] BYREF
  char v65[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v65;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 11 result:1062";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCheckCurCharacterHasCardIDImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v63,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1054);
    v7 = common::milog::MiLogStream::operator<<<char [77],(char *[77])0>(
           &v63,
           (const char (*)[77])"ConfigGCGConditionCheckCurCharacterHasCardID cur_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v63);
    LogContext = GCGEffectContext::getLogContext(context);
    v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v10 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v10)(&v63, this);
    v11 = 0;
    if ( (unsigned __int8)std::string::empty(&v63) )
    {
      std::allocator<char>::allocator(&__a);
      v11 = 1;
      v12 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterHasCardIDImpl *))(this->_vptr_ConfigGCGCondition
                                                                                        + 4);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v14 = (const char *)(*v13)(v12);
      std::string::basic_string<std::allocator<char>>(&val, v14, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v15 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v15)(&val, this);
    }
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, &val);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, -1);
    v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, 1055);
    v20 = -1;
    std::string::~string(&val);
    if ( v11 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v21 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    if ( GCGCard::getCardType(v21) == GCG_CARD_CHARACTER )
    {
      *(_DWORD *)(v4 + 32) = 0;
      v38 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      cur_card_id = GCGCard::getId(v38);
      if ( *(_BYTE *)(((unsigned __int64)&this->card_id >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->card_id >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->card_id);
      }
      if ( cur_card_id == this->card_id )
        *(_DWORD *)(v4 + 32) = 0;
      else
        *(_DWORD *)(v4 + 32) = -1;
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&val,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1072);
      v39 = common::milog::MiLogStream::operator<<<char [55],(char *[55])0>(
              (common::milog::MiLogStream *const)&val,
              (const char (*)[55])"ConfigGCGConditionCheckCurCharacterHasCardID cur card:");
      v40 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Id = GCGCard::getId(v40);
      v41 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v39, &Id);
      v42 = common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(
              v41,
              (const char (*)[18])", config card id:");
      v43 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v42, &this->card_id);
      v44 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v43, (const char (*)[9])",result:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v44, (const int *)(v4 + 32));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
      v45 = GCGEffectContext::getLogContext(context);
      v46 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v45->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v47 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v47 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v47)(&v63, this);
      v48 = 0;
      if ( (unsigned __int8)std::string::empty(&v63) )
      {
        std::allocator<char>::allocator(&__a);
        v48 = 1;
        v49 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v50 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterHasCardIDImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
        if ( *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v51 = (const char *)(*v50)(v49);
        std::string::basic_string<std::allocator<char>>(&val, v51, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v52 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v52 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v52)(&val, this);
      }
      v53 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v46, &val);
      v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v53, ":");
      v55 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, *(_DWORD *)(v4 + 32));
      v56 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v55, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v56, 1073);
      v20 = *(_DWORD *)(v4 + 32);
      std::string::~string(&val);
      if ( v48 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v63,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1059);
      v22 = common::milog::MiLogStream::operator<<<char [55],(char *[55])0>(
              &v63,
              (const char (*)[55])"ConfigGCGConditionCheckCurCharacterHasCardID cur card:");
      v23 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Id = GCGCard::getId(v23);
      v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, &Id);
      v25 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(v24, (const char (*)[26])off_1BC7C300);
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v25, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v63);
      v26 = GCGEffectContext::getLogContext(context);
      v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v26->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v28 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v28)(&v63, this);
      v29 = 0;
      if ( (unsigned __int8)std::string::empty(&v63) )
      {
        std::allocator<char>::allocator(&__a);
        v29 = 1;
        v30 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v31 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterHasCardIDImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
        if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v32 = (const char *)(*v31)(v30);
        std::string::basic_string<std::allocator<char>>(&val, v32, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v33 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterHasCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v33)(&val, this);
      }
      v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, &val);
      v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
      v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, -1);
      v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, 1060);
      v20 = -1;
      std::string::~string(&val);
      if ( v29 )
        std::allocator<char>::~allocator(&__a);
    }
  }
  std::string::~string(&v63);
  result = v20;
  if ( v65 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1077: range 000000000E14CCA8-000000000E14CEDE
int32_t __cdecl ConfigGCGConditionCheckCurCardHasCardIDImpl::checkCondition(
        ConfigGCGConditionCheckCurCardHasCardIDImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurCardHasCardIDImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurCardHasCardIDImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurCardHasCardIDImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1078);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1082: range 000000000E14CEE0-000000000E14D713
int32_t __cdecl ConfigGCGConditionCheckCurCardHasCardIDImpl::checkCondition(
        ConfigGCGConditionCheckCurCardHasCardIDImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r13
  common::milog::MiLogStream *v7; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // r14
  void (__fastcall **v10)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardHasCardIDImpl *const); // rax
  char v11; // r12
  ConfigGCGConditionCheckCurCardHasCardIDImpl *v12; // rdx
  __int64 (__fastcall **v13)(ConfigGCGConditionCheckCurCardHasCardIDImpl *); // rax
  const char *v14; // rax
  void (__fastcall **v15)(std::string *, ConfigGCGConditionCheckCurCardHasCardIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  int32_t v20; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  const LogContext *v28; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v29; // r15
  void (__fastcall **v30)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardHasCardIDImpl *const); // rax
  char v31; // r14
  ConfigGCGConditionCheckCurCardHasCardIDImpl *v32; // rdx
  __int64 (__fastcall **v33)(ConfigGCGConditionCheckCurCardHasCardIDImpl *); // rax
  const char *v34; // rax
  void (__fastcall **v35)(std::string *, ConfigGCGConditionCheckCurCardHasCardIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v38; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v39; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+37h] [rbp-B9h] BYREF
  unsigned int Id; // [rsp+38h] [rbp-B8h] BYREF
  uint32_t cur_card_id; // [rsp+3Ch] [rbp-B4h]
  common::milog::MiLogStream v46; // [rsp+40h] [rbp-B0h] BYREF
  std::string val; // [rsp+60h] [rbp-90h] BYREF
  char v48[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v48;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 11 result:1088";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCheckCurCardHasCardIDImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v46,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1085);
    v7 = common::milog::MiLogStream::operator<<<char [72],(char *[72])0>(
           &v46,
           (const char (*)[72])"ConfigGCGConditionCheckCurCardHasCardID cur_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v46);
    LogContext = GCGEffectContext::getLogContext(context);
    v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v10 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardHasCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v10)(&v46, this);
    v11 = 0;
    if ( (unsigned __int8)std::string::empty(&v46) )
    {
      std::allocator<char>::allocator(&__a);
      v11 = 1;
      v12 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCardHasCardIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v14 = (const char *)(*v13)(v12);
      std::string::basic_string<std::allocator<char>>(&val, v14, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v15 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCardHasCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v15)(&val, this);
    }
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, &val);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, -1);
    v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, 1086);
    v20 = -1;
    std::string::~string(&val);
    if ( v11 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    *(_DWORD *)(v4 + 32) = 0;
    v21 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    cur_card_id = GCGCard::getId(v21);
    if ( *(_BYTE *)(((unsigned __int64)&this->card_id >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->card_id >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->card_id);
    }
    if ( cur_card_id == this->card_id )
      *(_DWORD *)(v4 + 32) = 0;
    else
      *(_DWORD *)(v4 + 32) = -1;
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&val,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1098);
    v22 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
            (common::milog::MiLogStream *const)&val,
            (const char (*)[50])"ConfigGCGConditionCheckCurCardHasCardID cur card:");
    v23 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    Id = GCGCard::getId(v23);
    v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, &Id);
    v25 = common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(v24, (const char (*)[18])", config card id:");
    v26 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v25, &this->card_id);
    v27 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v26, (const char (*)[9])",result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v27, (const int *)(v4 + 32));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
    v28 = GCGEffectContext::getLogContext(context);
    v29 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v28->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v30 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardHasCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v30)(&v46, this);
    v31 = 0;
    if ( (unsigned __int8)std::string::empty(&v46) )
    {
      std::allocator<char>::allocator(&__a);
      v31 = 1;
      v32 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v33 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCardHasCardIDImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v34 = (const char *)(*v33)(v32);
      std::string::basic_string<std::allocator<char>>(&val, v34, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v35 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCardHasCardIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v35)(&val, this);
    }
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v29, &val);
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
    v38 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, *(_DWORD *)(v4 + 32));
    v39 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v38, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v39, 1099);
    v20 = *(_DWORD *)(v4 + 32);
    std::string::~string(&val);
    if ( v31 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v46);
  result = v20;
  if ( v48 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1103: range 000000000E14D714-000000000E14DEB9
int32_t __cdecl ConfigGCGConditionGlobalLogicNotImpl::checkCondition(
        ConfigGCGConditionGlobalLogicNotImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v7; // r14
  void (__fastcall **v8)(char *, ConfigGCGConditionGlobalLogicNotImpl *const); // rax
  char v9; // bl
  ConfigGCGConditionGlobalLogicNotImpl *v10; // rdx
  __int64 (__fastcall **v11)(ConfigGCGConditionGlobalLogicNotImpl *); // rax
  const char *v12; // rax
  void (__fastcall **v13)(std::string *, ConfigGCGConditionGlobalLogicNotImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v14; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  int32_t v18; // r15d
  std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // rax
  unsigned __int64 v20; // rdx
  int v21; // eax
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  const LogContext *v25; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v26; // r15
  void (__fastcall **v27)(char *, ConfigGCGConditionGlobalLogicNotImpl *const); // rax
  char v28; // r14
  ConfigGCGConditionGlobalLogicNotImpl *v29; // rdx
  __int64 (__fastcall **v30)(ConfigGCGConditionGlobalLogicNotImpl *); // rax
  const char *v31; // rax
  void (__fastcall **v32)(std::string *, ConfigGCGConditionGlobalLogicNotImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-111h] BYREF
  char v40[32]; // [rsp+30h] [rbp-110h] BYREF
  std::string v; // [rsp+50h] [rbp-F0h] BYREF
  char v42[208]; // [rsp+70h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v42;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 48 4 17 child_result:1110 64 4 11 result:1111 80 48 18 child_context:1108";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalLogicNotImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = 61956;
  v5[536862724] = -202116109;
  if ( std::operator==<data::ConfigGCGLogicCondition>(&this->condition, 0LL) )
  {
    LogContext = GCGEffectContext::getLogContext(context);
    v7 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v8 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalLogicNotImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v8)(v40, this);
    v9 = 0;
    if ( (unsigned __int8)std::string::empty(v40) )
    {
      std::allocator<char>::allocator(&__a);
      v9 = 1;
      v10 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v11 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalLogicNotImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v12 = (const char *)(*v11)(v10);
      std::string::basic_string<std::allocator<char>>(&v, v12, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalLogicNotImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                             + 8);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v13)(&v, this);
    }
    v14 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v7, &v);
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v14, ":");
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, -1);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, 1106);
    v18 = -1;
    std::string::~string(&v);
    if ( v9 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(v40);
  }
  else
  {
    GCGEffectContext::GCGEffectContext((GCGEffectContext *const)(v3 + 80), context);
    v19 = std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)&this->condition);
    if ( *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000) )
      __asan_report_load8(v19);
    v20 = (unsigned __int64)(v19->_vptr_ConfigGCGCondition + 7);
    if ( *(_BYTE *)((v20 >> 3) + 0x7FFF8000) )
      __asan_report_load8(v19->_vptr_ConfigGCGCondition + 7);
    *(_DWORD *)(v3 + 48) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, unsigned __int64))v20)(
                             v19,
                             cur_skill,
                             v3 + 80);
    if ( *(int *)(v3 + 48) < 0 )
      v21 = 0;
    else
      v21 = -1;
    *(_DWORD *)(v3 + 64) = v21;
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&v,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1112);
    v22 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
            (common::milog::MiLogStream *const)&v,
            (const char (*)[47])"ConfigGCGConditionGlobalLogicNot child_result:");
    v23 = common::milog::MiLogStream::operator<<<int,(int *)0>(v22, (const int *)(v3 + 48));
    v24 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v23, (const char (*)[10])", result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v24, (const int *)(v3 + 64));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v);
    v25 = GCGEffectContext::getLogContext(context);
    v26 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v25->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v27 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalLogicNotImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v27)(v40, this);
    v28 = 0;
    if ( (unsigned __int8)std::string::empty(v40) )
    {
      std::allocator<char>::allocator(&__a);
      v28 = 1;
      v29 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v30 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalLogicNotImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v31 = (const char *)(*v30)(v29);
      std::string::basic_string<std::allocator<char>>(&v, v31, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v32 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalLogicNotImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                             + 8);
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v32)(&v, this);
    }
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v26, &v);
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, ":");
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, *(_DWORD *)(v3 + 64));
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, 1113);
    v18 = *(_DWORD *)(v3 + 64);
    std::string::~string(&v);
    if ( v28 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(v40);
    GCGEffectContext::~GCGEffectContext((GCGEffectContext *const)(v3 + 80));
  }
  result = v18;
  if ( v42 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 1117: range 000000000E14DEBA-000000000E14E718
int32_t __cdecl ConfigGCGConditionGlobalCheckParitityImpl::checkCondition(
        ConfigGCGConditionGlobalCheckParitityImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v7; // r14
  void (__fastcall **v8)(char *, ConfigGCGConditionGlobalCheckParitityImpl *const); // rax
  char v9; // bl
  ConfigGCGConditionGlobalCheckParitityImpl *v10; // rdx
  __int64 (__fastcall **v11)(ConfigGCGConditionGlobalCheckParitityImpl *); // rax
  const char *v12; // rax
  void (__fastcall **v13)(std::string *, ConfigGCGConditionGlobalCheckParitityImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v14; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  int32_t v18; // r15d
  std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v19; // rax
  unsigned __int64 v20; // rdx
  common::milog::MiLogStream *v21; // rax
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  const LogContext *v24; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v25; // r15
  void (__fastcall **v26)(char *, ConfigGCGConditionGlobalCheckParitityImpl *const); // rax
  char v27; // r14
  ConfigGCGConditionGlobalCheckParitityImpl *v28; // rdx
  __int64 (__fastcall **v29)(ConfigGCGConditionGlobalCheckParitityImpl *); // rax
  const char *v30; // rax
  void (__fastcall **v31)(std::string *, ConfigGCGConditionGlobalCheckParitityImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-111h] BYREF
  char v39[32]; // [rsp+30h] [rbp-110h] BYREF
  std::string v; // [rsp+50h] [rbp-F0h] BYREF
  char v41[208]; // [rsp+70h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v41;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 48 4 17 child_result:1124 64 4 11 result:1125 80 48 18 child_context:1122";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalCheckParitityImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = 61956;
  v5[536862724] = -202116109;
  if ( std::operator==<data::ConfigGCGLogicCondition>(&this->condition, 0LL) )
  {
    LogContext = GCGEffectContext::getLogContext(context);
    v7 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v8 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalCheckParitityImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                        + 8);
    if ( *(_BYTE *)(((unsigned __int64)v8 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v8)(v39, this);
    v9 = 0;
    if ( (unsigned __int8)std::string::empty(v39) )
    {
      std::allocator<char>::allocator(&__a);
      v9 = 1;
      v10 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v11 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCheckParitityImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v12 = (const char *)(*v11)(v10);
      std::string::basic_string<std::allocator<char>>(&v, v12, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCheckParitityImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                  + 8);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v13)(&v, this);
    }
    v14 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v7, &v);
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v14, ":");
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, -1);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, 1120);
    v18 = -1;
    std::string::~string(&v);
    if ( v9 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(v39);
  }
  else
  {
    GCGEffectContext::GCGEffectContext((GCGEffectContext *const)(v3 + 80), context);
    v19 = std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)&this->condition);
    if ( *(_BYTE *)(((unsigned __int64)v19 >> 3) + 0x7FFF8000) )
      __asan_report_load8(v19);
    v20 = (unsigned __int64)(v19->_vptr_ConfigGCGCondition + 7);
    if ( *(_BYTE *)((v20 >> 3) + 0x7FFF8000) )
      __asan_report_load8(v19->_vptr_ConfigGCGCondition + 7);
    *(_DWORD *)(v3 + 48) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, unsigned __int64))v20)(
                             v19,
                             cur_skill,
                             v3 + 80);
    *(_DWORD *)(v3 + 64) = -1;
    if ( *(int *)(v3 + 48) >= 0 )
    {
      if ( *(_BYTE *)(((unsigned __int64)&this->partity_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->partity_type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->partity_type);
      }
      if ( this->partity_type || (*(_DWORD *)(v3 + 48) & 1) == 0 )
      {
        if ( *(_BYTE *)(((unsigned __int64)&this->partity_type >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->partity_type >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(&this->partity_type);
        }
        if ( this->partity_type == GCG_PARITY_EVEN && (*(_DWORD *)(v3 + 48) & 1) == 0 )
          *(_DWORD *)(v3 + 64) = 0;
      }
      else
      {
        *(_DWORD *)(v3 + 64) = 0;
      }
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&v,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1139);
    v21 = common::milog::MiLogStream::operator<<<char [52],(char *[52])0>(
            (common::milog::MiLogStream *const)&v,
            (const char (*)[52])"ConfigGCGConditionGlobalCheckParitity child_result:");
    v22 = common::milog::MiLogStream::operator<<<int,(int *)0>(v21, (const int *)(v3 + 48));
    v23 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v22, (const char (*)[10])", result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v23, (const int *)(v3 + 64));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&v);
    v24 = GCGEffectContext::getLogContext(context);
    v25 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v24->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v26 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalCheckParitityImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                         + 8);
    if ( *(_BYTE *)(((unsigned __int64)v26 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v26)(v39, this);
    v27 = 0;
    if ( (unsigned __int8)std::string::empty(v39) )
    {
      std::allocator<char>::allocator(&__a);
      v27 = 1;
      v28 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v29 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCheckParitityImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v30 = (const char *)(*v29)(v28);
      std::string::basic_string<std::allocator<char>>(&v, v30, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v31 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCheckParitityImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                  + 8);
      if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v31)(&v, this);
    }
    v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v25, &v);
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, *(_DWORD *)(v3 + 64));
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, 1140);
    v18 = *(_DWORD *)(v3 + 64);
    std::string::~string(&v);
    if ( v27 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(v39);
    GCGEffectContext::~GCGEffectContext((GCGEffectContext *const)(v3 + 80));
  }
  result = v18;
  if ( v41 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 1144: range 000000000E14E71A-000000000E14F6B9
int32_t __cdecl ConfigGCGConditionGlobalAreaContainCardImpl::checkCondition(
        ConfigGCGConditionGlobalAreaContainCardImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  int32_t v3; // r15d
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(char *, ConfigGCGConditionGlobalAreaContainCardImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalAreaContainCardImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalAreaContainCardImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaContainCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  GCGGameMode *GameMode; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  proto::GCGControllerValue *v21; // rax
  common::milog::MiLogStream *v22; // rcx
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  const LogContext *v25; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v26; // r15
  void (__fastcall **v27)(char *, ConfigGCGConditionGlobalAreaContainCardImpl *const); // rax
  char v28; // r14
  ConfigGCGConditionGlobalAreaContainCardImpl *v29; // rdx
  __int64 (__fastcall **v30)(ConfigGCGConditionGlobalAreaContainCardImpl *); // rax
  const char *v31; // rax
  void (__fastcall **v32)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaContainCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  int v37; // r14d
  uint32_t v38; // ecx
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v39; // rax
  char v40; // al
  int v41; // r14d
  common::milog::MiLogStream *v42; // rax
  common::milog::MiLogStream *v43; // rax
  common::milog::MiLogStream *v44; // rax
  const LogContext *v45; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v46; // r15
  void (__fastcall **v47)(char *, ConfigGCGConditionGlobalAreaContainCardImpl *const); // rax
  char v48; // r14
  ConfigGCGConditionGlobalAreaContainCardImpl *v49; // rdx
  __int64 (__fastcall **v50)(ConfigGCGConditionGlobalAreaContainCardImpl *); // rax
  const char *v51; // rax
  void (__fastcall **v52)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaContainCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v53; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v55; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v56; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Bh] [rbp-1A5h] BYREF
  unsigned int val; // [rsp+2Ch] [rbp-1A4h] BYREF
  std::vector<proto::GCGControllerValue>::iterator __for_begin; // [rsp+30h] [rbp-1A0h] BYREF
  std::vector<proto::GCGControllerValue>::iterator __for_end; // [rsp+38h] [rbp-198h] BYREF
  GCGDuel *duel; // [rsp+40h] [rbp-190h]
  std::vector<proto::GCGControllerValue> *__for_range; // [rsp+48h] [rbp-188h]
  proto::GCGControllerValue *controller_id; // [rsp+50h] [rbp-180h]
  GCGField *field; // [rsp+58h] [rbp-178h]
  char v67[32]; // [rsp+60h] [rbp-170h] BYREF
  common::milog::MiLogStream v68; // [rsp+80h] [rbp-150h] BYREF
  char v69[304]; // [rsp+A0h] [rbp-130h] BYREF

  v4 = (unsigned __int64)v69;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_2(256LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "8 32 4 22 cur_controller_id:1153 48 4 24 other_controller_id:1154 64 4 11 result:1164 80 4 25 re"
                        "sult_controller_id:1165 96 16 18 this_card_ptr:1146 128 16 18 card_zone_ptr:1169 160 16 13 card_"
                        "ptr:1175 192 24 22 controller_id_vec:1155";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionGlobalAreaContainCardImpl::checkCondition;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556924;
  v6[536862722] = -234556924;
  v6[536862723] = -219021312;
  v6[536862724] = -219021312;
  v6[536862725] = -219021312;
  v6[536862726] = -218103808;
  v6[536862727] = -202116109;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v4 + 96));
  if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v4 + 96)) )
  {
    common::milog::MiLogStream::create(
      &v68,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1149);
    common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
      &v68,
      (const char (*)[65])"ConfigGCGConditionGlobalAreaContainCard this_card_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v68);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalAreaContainCardImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                          + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(v67, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(v67) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalAreaContainCardImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v68, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaContainCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&v68, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, (const std::string *)&v68);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1150);
    v3 = -1;
    std::string::~string(&v68);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(v67);
  }
  else
  {
    GameMode = GCGSkill::getGameMode(cur_skill);
    duel = GCGGameMode::getDuel(GameMode);
    v20 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
    *(_DWORD *)(v4 + 32) = GCGCard::getControllerId(v20);
    *(_DWORD *)(v4 + 48) = GCGDuel::getOtherControllerId(duel, (GCGControllerValue)*(_DWORD *)(v4 + 32));
    std::vector<proto::GCGControllerValue>::vector((std::vector<proto::GCGControllerValue> *const)(v4 + 192));
    if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->camp_type);
    }
    if ( this->camp_type <= (unsigned int)CAMP_FRIENDLY )
      std::vector<proto::GCGControllerValue>::emplace_back<proto::GCGControllerValue&>(
        (std::vector<proto::GCGControllerValue> *const)(v4 + 192),
        (proto::GCGControllerValue *)(v4 + 32),
        (proto::GCGControllerValue *)(v4 + 32));
    if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->camp_type);
    }
    if ( this->camp_type == CAMP_ENEMY || this->camp_type == CAMP_BOTH )
      std::vector<proto::GCGControllerValue>::emplace_back<proto::GCGControllerValue&>(
        (std::vector<proto::GCGControllerValue> *const)(v4 + 192),
        (proto::GCGControllerValue *)(v4 + 48),
        (proto::GCGControllerValue *)(v4 + 48));
    *(_DWORD *)(v4 + 64) = -1;
    *(_DWORD *)(v4 + 80) = 0;
    __for_range = (std::vector<proto::GCGControllerValue> *)(v4 + 192);
    __for_begin._M_current = std::vector<proto::GCGControllerValue>::begin((std::vector<proto::GCGControllerValue> *const)(v4 + 192))._M_current;
    __for_end._M_current = std::vector<proto::GCGControllerValue>::end((std::vector<proto::GCGControllerValue> *const)(v4 + 192))._M_current;
    while ( __gnu_cxx::operator!=<proto::GCGControllerValue *,std::vector<proto::GCGControllerValue>>(
              &__for_begin,
              &__for_end) )
    {
      v21 = __gnu_cxx::__normal_iterator<proto::GCGControllerValue *,std::vector<proto::GCGControllerValue>>::operator*(&__for_begin);
      controller_id = v21;
      if ( *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v21 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v21);
      }
      field = GCGDuel::getField(duel, *controller_id);
      if ( *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->area_type);
      }
      GCGField::getZoneByEffectAreaType((GCGField *const)(v4 + 128), (data::GCGEffectAreaType)field);
      if ( std::operator==<GCGCardZone>(0LL, (const std::shared_ptr<GCGCardZone> *)(v4 + 128)) )
      {
        common::milog::MiLogStream::create(
          &v68,
          &common::milog::MiLogDefault::default_log_obj_,
          3u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          1172);
        v22 = common::milog::MiLogStream::operator<<<char [61],(char *[61])0>(
                &v68,
                (const char (*)[61])"ConfigGCGConditionGlobalAreaContainCard card_zone not found:");
        if ( *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&this->area_type);
        }
        val = this->area_type;
        v23 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, &val);
        v24 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v23, (const char (*)[13])" controller:");
        common::milog::MiLogStream::operator<<<proto::GCGControllerValue,(proto::GCGControllerValue*)0>(
          v24,
          controller_id);
        common::milog::MiLogStream::~MiLogStream(&v68);
        v25 = GCGEffectContext::getLogContext(context);
        v26 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v25->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalAreaContainCardImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                               + 8);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v27)(v67, this);
        v28 = 0;
        if ( (unsigned __int8)std::string::empty(v67) )
        {
          std::allocator<char>::allocator(&__a);
          v28 = 1;
          v29 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v30 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalAreaContainCardImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
          if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v31 = (const char *)(*v30)(v29);
          std::string::basic_string<std::allocator<char>>((std::string *const)&v68, v31, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v32 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaContainCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v32)(&v68, this);
        }
        v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v26, (const std::string *)&v68);
        v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, ":");
        v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, -1);
        v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, 1173);
        v3 = -1;
        std::string::~string(&v68);
        if ( v28 )
          std::allocator<char>::~allocator(&__a);
        std::string::~string(v67);
        v37 = 0;
      }
      else
      {
        v38 = (unsigned int)std::__shared_ptr_access<GCGCardZone,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCardZone,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 128));
        if ( *(_BYTE *)(((unsigned __int64)&this->card_id >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)this + 36) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->card_id >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(&this->card_id);
        }
        GCGCardZone::findCardById((GCGCardZone *const)(v4 + 160), v38);
        if ( !std::operator!=<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v4 + 160)) )
          goto LABEL_67;
        if ( *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) != 0
          && *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) <= 3 )
        {
          __asan_report_load4(&this->area_type);
        }
        if ( this->area_type != EFFECT_AREA_CHARACTER
          || (v39 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 160)),
              GCGCard::isAlive(v39)) )
        {
          v40 = 1;
        }
        else
        {
LABEL_67:
          v40 = 0;
        }
        if ( v40 )
        {
          *(_DWORD *)(v4 + 64) = 0;
          if ( *(_BYTE *)(((unsigned __int64)controller_id >> 3) + 0x7FFF8000) != 0
            && (char)(((unsigned __int8)controller_id & 7) + 3) >= *(_BYTE *)(((unsigned __int64)controller_id >> 3)
                                                                            + 0x7FFF8000) )
          {
            __asan_report_load4(controller_id);
          }
          *(proto::GCGControllerValue *)(v4 + 80) = *controller_id;
          v41 = 0;
        }
        else
        {
          v41 = 1;
        }
        std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v4 + 160));
        if ( v41 == 1 )
          v37 = 2;
        else
          v37 = 1;
      }
      std::shared_ptr<GCGCardZone>::~shared_ptr((std::shared_ptr<GCGCardZone> *const)(v4 + 128));
      if ( !v37 )
        goto LABEL_97;
      if ( v37 != 2 )
        break;
      __gnu_cxx::__normal_iterator<proto::GCGControllerValue *,std::vector<proto::GCGControllerValue>>::operator++(&__for_begin);
    }
    common::milog::MiLogStream::create(
      &v68,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1184);
    v42 = common::milog::MiLogStream::operator<<<char [48],(char *[48])0>(
            &v68,
            (const char (*)[48])"ConfigGCGConditionGlobalAreaContainCard result:");
    v43 = common::milog::MiLogStream::operator<<<int,(int *)0>(v42, (const int *)(v4 + 64));
    v44 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v43, (const char (*)[13])" controller:");
    common::milog::MiLogStream::operator<<<proto::GCGControllerValue,(proto::GCGControllerValue*)0>(
      v44,
      (const proto::GCGControllerValue *)(v4 + 80));
    common::milog::MiLogStream::~MiLogStream(&v68);
    v45 = GCGEffectContext::getLogContext(context);
    v46 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v45->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v47 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalAreaContainCardImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                           + 8);
    if ( *(_BYTE *)(((unsigned __int64)v47 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v47)(v67, this);
    v48 = 0;
    if ( (unsigned __int8)std::string::empty(v67) )
    {
      std::allocator<char>::allocator(&__a);
      v48 = 1;
      v49 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v50 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalAreaContainCardImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v51 = (const char *)(*v50)(v49);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v68, v51, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v52 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaContainCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v52 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v52)(&v68, this);
    }
    v53 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v46, (const std::string *)&v68);
    v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v53, ":");
    v55 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, *(_DWORD *)(v4 + 64));
    v56 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v55, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v56, 1185);
    v3 = *(_DWORD *)(v4 + 64);
    std::string::~string(&v68);
    if ( v48 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(v67);
LABEL_97:
    std::vector<proto::GCGControllerValue>::~vector((std::vector<proto::GCGControllerValue> *const)(v4 + 192));
  }
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v4 + 96));
  result = v3;
  if ( v69 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8018) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1191: range 000000000E14F6BA-000000000E14F8F0
int32_t __cdecl ConfigGCGConditionCurCharacterHpNumImpl::checkCondition(
        ConfigGCGConditionCurCharacterHpNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCurCharacterHpNumImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCurCharacterHpNumImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCurCharacterHpNumImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1192);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1196: range 000000000E14F8F2-000000000E150494
int32_t __cdecl ConfigGCGConditionCurCharacterHpNumImpl::checkCondition(
        ConfigGCGConditionCurCharacterHpNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r12
  common::milog::MiLogStream *v7; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // r14
  void (__fastcall **v10)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterHpNumImpl *const); // rax
  char v11; // r13
  ConfigGCGConditionCurCharacterHpNumImpl *v12; // rdx
  __int64 (__fastcall **v13)(ConfigGCGConditionCurCharacterHpNumImpl *); // rax
  const char *v14; // rax
  void (__fastcall **v15)(std::string *, ConfigGCGConditionCurCharacterHpNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  int32_t v20; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // r13
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // r13
  const LogContext *v26; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // r14
  void (__fastcall **v28)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterHpNumImpl *const); // rax
  char v29; // r13
  ConfigGCGConditionCurCharacterHpNumImpl *v30; // rdx
  __int64 (__fastcall **v31)(ConfigGCGConditionCurCharacterHpNumImpl *); // rax
  const char *v32; // rax
  void (__fastcall **v33)(std::string *, ConfigGCGConditionCurCharacterHpNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v38; // rax
  common::milog::MiLogStream *v39; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v40; // rax
  common::milog::MiLogStream *v41; // rax
  common::milog::MiLogStream *v42; // r14
  common::milog::MiLogStream *v43; // rax
  common::milog::MiLogStream *v44; // rax
  const LogContext *v45; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v46; // r15
  void (__fastcall **v47)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterHpNumImpl *const); // rax
  char v48; // r14
  ConfigGCGConditionCurCharacterHpNumImpl *v49; // rdx
  __int64 (__fastcall **v50)(ConfigGCGConditionCurCharacterHpNumImpl *); // rax
  const char *v51; // rax
  void (__fastcall **v52)(std::string *, ConfigGCGConditionCurCharacterHpNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v53; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v55; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v56; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Bh] [rbp-B5h] BYREF
  unsigned int Id; // [rsp+3Ch] [rbp-B4h] BYREF
  common::milog::MiLogStream v62; // [rsp+40h] [rbp-B0h] BYREF
  std::string val; // [rsp+60h] [rbp-90h] BYREF
  char v64[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v64;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 11 result:1207";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCurCharacterHpNumImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v62,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1199);
    v7 = common::milog::MiLogStream::operator<<<char [68],(char *[68])0>(
           &v62,
           (const char (*)[68])"ConfigGCGConditionCurCharacterHpNum cur_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v62);
    LogContext = GCGEffectContext::getLogContext(context);
    v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v10 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterHpNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v10)(&v62, this);
    v11 = 0;
    if ( (unsigned __int8)std::string::empty(&v62) )
    {
      std::allocator<char>::allocator(&__a);
      v11 = 1;
      v12 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (__int64 (__fastcall **)(ConfigGCGConditionCurCharacterHpNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v14 = (const char *)(*v13)(v12);
      std::string::basic_string<std::allocator<char>>(&val, v14, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v15 = (void (__fastcall **)(std::string *, ConfigGCGConditionCurCharacterHpNumImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                + 8);
      if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v15)(&val, this);
    }
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, &val);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, -1);
    v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, 1200);
    v20 = -1;
    std::string::~string(&val);
    if ( v11 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v21 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    if ( GCGCard::getCardType(v21) == GCG_CARD_CHARACTER )
    {
      v38 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      *(_DWORD *)(v4 + 32) = GCGCard::getCurHp(v38);
      common::milog::MiLogStream::create(
        &v62,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1208);
      v39 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
              &v62,
              (const char (*)[46])"ConfigGCGConditionCurCharacterHpNum cur card:");
      v40 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Id = GCGCard::getId(v40);
      v41 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v39, &Id);
      v42 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v41, (const char (*)[7])"skill:");
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      v43 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v42, &val);
      v44 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v43, (const char (*)[9])",result:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v44, (const int *)(v4 + 32));
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v62);
      v45 = GCGEffectContext::getLogContext(context);
      v46 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v45->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v47 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterHpNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v47 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v47)(&v62, this);
      v48 = 0;
      if ( (unsigned __int8)std::string::empty(&v62) )
      {
        std::allocator<char>::allocator(&__a);
        v48 = 1;
        v49 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v50 = (__int64 (__fastcall **)(ConfigGCGConditionCurCharacterHpNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v51 = (const char *)(*v50)(v49);
        std::string::basic_string<std::allocator<char>>(&val, v51, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v52 = (void (__fastcall **)(std::string *, ConfigGCGConditionCurCharacterHpNumImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                  + 8);
        if ( *(_BYTE *)(((unsigned __int64)v52 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v52)(&val, this);
      }
      v53 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v46, &val);
      v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v53, ":");
      v55 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, *(_DWORD *)(v4 + 32));
      v56 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v55, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v56, 1209);
      v20 = *(_DWORD *)(v4 + 32);
      std::string::~string(&val);
      if ( v48 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v62,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1204);
      v22 = common::milog::MiLogStream::operator<<<char [46],(char *[46])0>(
              &v62,
              (const char (*)[46])"ConfigGCGConditionCurCharacterHpNum cur card:");
      v23 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Id = GCGCard::getId(v23);
      v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, &Id);
      v25 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(v24, (const char (*)[26])off_1BC7C300);
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v25, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v62);
      v26 = GCGEffectContext::getLogContext(context);
      v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v26->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v28 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterHpNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v28)(&v62, this);
      v29 = 0;
      if ( (unsigned __int8)std::string::empty(&v62) )
      {
        std::allocator<char>::allocator(&__a);
        v29 = 1;
        v30 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v31 = (__int64 (__fastcall **)(ConfigGCGConditionCurCharacterHpNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v32 = (const char *)(*v31)(v30);
        std::string::basic_string<std::allocator<char>>(&val, v32, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v33 = (void (__fastcall **)(std::string *, ConfigGCGConditionCurCharacterHpNumImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                                  + 8);
        if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v33)(&val, this);
      }
      v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, &val);
      v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
      v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, -1);
      v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, 1205);
      v20 = -1;
      std::string::~string(&val);
      if ( v29 )
        std::allocator<char>::~allocator(&__a);
    }
  }
  std::string::~string(&v62);
  result = v20;
  if ( v64 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1214: range 000000000E150496-000000000E1506CC
int32_t __cdecl ConfigGCGConditionCurCharacterEnergyNumImpl::checkCondition(
        ConfigGCGConditionCurCharacterEnergyNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCurCharacterEnergyNumImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCurCharacterEnergyNumImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCurCharacterEnergyNumImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1215);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1219: range 000000000E1506CE-000000000E151270
int32_t __cdecl ConfigGCGConditionCurCharacterEnergyNumImpl::checkCondition(
        ConfigGCGConditionCurCharacterEnergyNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r12
  common::milog::MiLogStream *v7; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // r14
  void (__fastcall **v10)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterEnergyNumImpl *const); // rax
  char v11; // r13
  ConfigGCGConditionCurCharacterEnergyNumImpl *v12; // rdx
  __int64 (__fastcall **v13)(ConfigGCGConditionCurCharacterEnergyNumImpl *); // rax
  const char *v14; // rax
  void (__fastcall **v15)(std::string *, ConfigGCGConditionCurCharacterEnergyNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  int32_t v20; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // r13
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // r13
  const LogContext *v26; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // r14
  void (__fastcall **v28)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterEnergyNumImpl *const); // rax
  char v29; // r13
  ConfigGCGConditionCurCharacterEnergyNumImpl *v30; // rdx
  __int64 (__fastcall **v31)(ConfigGCGConditionCurCharacterEnergyNumImpl *); // rax
  const char *v32; // rax
  void (__fastcall **v33)(std::string *, ConfigGCGConditionCurCharacterEnergyNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v38; // rax
  common::milog::MiLogStream *v39; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v40; // rax
  common::milog::MiLogStream *v41; // rax
  common::milog::MiLogStream *v42; // r14
  common::milog::MiLogStream *v43; // rax
  common::milog::MiLogStream *v44; // rax
  const LogContext *v45; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v46; // r15
  void (__fastcall **v47)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterEnergyNumImpl *const); // rax
  char v48; // r14
  ConfigGCGConditionCurCharacterEnergyNumImpl *v49; // rdx
  __int64 (__fastcall **v50)(ConfigGCGConditionCurCharacterEnergyNumImpl *); // rax
  const char *v51; // rax
  void (__fastcall **v52)(std::string *, ConfigGCGConditionCurCharacterEnergyNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v53; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v55; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v56; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Bh] [rbp-B5h] BYREF
  unsigned int Id; // [rsp+3Ch] [rbp-B4h] BYREF
  common::milog::MiLogStream v62; // [rsp+40h] [rbp-B0h] BYREF
  std::string val; // [rsp+60h] [rbp-90h] BYREF
  char v64[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v64;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 11 result:1230";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCurCharacterEnergyNumImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v62,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1222);
    v7 = common::milog::MiLogStream::operator<<<char [72],(char *[72])0>(
           &v62,
           (const char (*)[72])"ConfigGCGConditionCurCharacterEnergyNum cur_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v62);
    LogContext = GCGEffectContext::getLogContext(context);
    v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v10 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterEnergyNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v10)(&v62, this);
    v11 = 0;
    if ( (unsigned __int8)std::string::empty(&v62) )
    {
      std::allocator<char>::allocator(&__a);
      v11 = 1;
      v12 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (__int64 (__fastcall **)(ConfigGCGConditionCurCharacterEnergyNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v14 = (const char *)(*v13)(v12);
      std::string::basic_string<std::allocator<char>>(&val, v14, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v15 = (void (__fastcall **)(std::string *, ConfigGCGConditionCurCharacterEnergyNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v15)(&val, this);
    }
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, &val);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, -1);
    v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, 1223);
    v20 = -1;
    std::string::~string(&val);
    if ( v11 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v21 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    if ( GCGCard::getCardType(v21) == GCG_CARD_CHARACTER )
    {
      v38 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      *(_DWORD *)(v4 + 32) = GCGCard::getCurEnergy(v38);
      common::milog::MiLogStream::create(
        &v62,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1231);
      v39 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
              &v62,
              (const char (*)[50])"ConfigGCGConditionCurCharacterEnergyNum cur card:");
      v40 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Id = GCGCard::getId(v40);
      v41 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v39, &Id);
      v42 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v41, (const char (*)[7])"skill:");
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      v43 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v42, &val);
      v44 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v43, (const char (*)[9])",result:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v44, (const int *)(v4 + 32));
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v62);
      v45 = GCGEffectContext::getLogContext(context);
      v46 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v45->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v47 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterEnergyNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v47 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v47)(&v62, this);
      v48 = 0;
      if ( (unsigned __int8)std::string::empty(&v62) )
      {
        std::allocator<char>::allocator(&__a);
        v48 = 1;
        v49 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v50 = (__int64 (__fastcall **)(ConfigGCGConditionCurCharacterEnergyNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v51 = (const char *)(*v50)(v49);
        std::string::basic_string<std::allocator<char>>(&val, v51, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v52 = (void (__fastcall **)(std::string *, ConfigGCGConditionCurCharacterEnergyNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v52 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v52)(&val, this);
      }
      v53 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v46, &val);
      v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v53, ":");
      v55 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, *(_DWORD *)(v4 + 32));
      v56 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v55, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v56, 1232);
      v20 = *(_DWORD *)(v4 + 32);
      std::string::~string(&val);
      if ( v48 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v62,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1227);
      v22 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
              &v62,
              (const char (*)[50])"ConfigGCGConditionCurCharacterEnergyNum cur card:");
      v23 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Id = GCGCard::getId(v23);
      v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, &Id);
      v25 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(v24, (const char (*)[26])off_1BC7C300);
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v25, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v62);
      v26 = GCGEffectContext::getLogContext(context);
      v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v26->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v28 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterEnergyNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v28)(&v62, this);
      v29 = 0;
      if ( (unsigned __int8)std::string::empty(&v62) )
      {
        std::allocator<char>::allocator(&__a);
        v29 = 1;
        v30 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v31 = (__int64 (__fastcall **)(ConfigGCGConditionCurCharacterEnergyNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v32 = (const char *)(*v31)(v30);
        std::string::basic_string<std::allocator<char>>(&val, v32, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v33 = (void (__fastcall **)(std::string *, ConfigGCGConditionCurCharacterEnergyNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v33)(&val, this);
      }
      v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, &val);
      v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
      v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, -1);
      v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, 1228);
      v20 = -1;
      std::string::~string(&val);
      if ( v29 )
        std::allocator<char>::~allocator(&__a);
    }
  }
  std::string::~string(&v62);
  result = v20;
  if ( v64 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1237: range 000000000E151392-000000000E151CBF
int32_t __cdecl ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl::checkCondition(
        ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  GCGGameMode *GameMode; // rax
  GCGDuel *Duel; // rax
  common::milog::MiLogStream *v23; // r14
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  const LogContext *v28; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v29; // r15
  void (__fastcall **v30)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *const); // rax
  char v31; // r14
  ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *v32; // rdx
  __int64 (__fastcall **v33)(ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *); // rax
  const char *v34; // rax
  void (__fastcall **v35)(std::string *, ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v38; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v39; // rax
  int32_t result; // eax
  GCGCharacterZone *CharacterZone; // [rsp+10h] [rbp-140h]
  std::allocator<char> __a; // [rsp+33h] [rbp-11Dh] BYREF
  GCGControllerValue cur_controller_id; // [rsp+34h] [rbp-11Ch]
  GCGField *field; // [rsp+38h] [rbp-118h]
  common::milog::MiLogStream v46; // [rsp+40h] [rbp-110h] BYREF
  std::string val; // [rsp+60h] [rbp-F0h] BYREF
  char v48[208]; // [rsp+80h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v48;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 48 4 11 result:1246 64 16 18 this_card_ptr:1238 96 24 19 alive_card_vec:1247";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -219021312;
  v5[536862723] = -218103808;
  v5[536862724] = -202116109;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 64));
  if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v46,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1241);
    v6 = common::milog::MiLogStream::operator<<<char [90],(char *[90])0>(
           &v46,
           (const char (*)[90])"ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNum this_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v46);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v46, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v46) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1242);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v46);
  }
  else
  {
    v20 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    cur_controller_id = GCGCard::getControllerId(v20);
    GameMode = GCGSkill::getGameMode(cur_skill);
    Duel = GCGGameMode::getDuel(GameMode);
    field = GCGDuel::getField(Duel, cur_controller_id);
    *(_DWORD *)(v3 + 48) = 0;
    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v3 + 96));
    CharacterZone = GCGField::getCharacterZone(field);
    std::function<ForeachPolicy ()(GCGCard &)>::function<ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(GCGCard &)#1},void,void>(
      (std::function<ForeachPolicy(GCGCard&)> *const)&val,
      (ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl::checkCondition::<lambda(GCGCard&)>)__PAIR128__(v3 + 96, v3 + 48));
    GCGCharacterZone::foreachAliveCharacter(CharacterZone, (std::function<ForeachPolicy(GCGCard&)> *)&val);
    std::function<ForeachPolicy ()(GCGCard &)>::~function((std::function<ForeachPolicy(GCGCard&)> *const)&val);
    common::milog::MiLogStream::create(
      &v46,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1254);
    v23 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
            &v46,
            (const char (*)[65])"ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNum, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    v24 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, &val);
    v25 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v24, (const char (*)[9])",result:");
    v26 = common::milog::MiLogStream::operator<<<int,(int *)0>(v25, (const int *)(v3 + 48));
    v27 = common::milog::MiLogStream::operator<<<char [15],(char *[15])0>(v26, (const char (*)[15])", alive cards:");
    common::milog::MiLogStream::operator<<<unsigned int>(v27, (const std::vector<unsigned int> *)(v3 + 96));
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v46);
    v28 = GCGEffectContext::getLogContext(context);
    v29 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v28->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v30 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v30)(&v46, this);
    v31 = 0;
    if ( (unsigned __int8)std::string::empty(&v46) )
    {
      std::allocator<char>::allocator(&__a);
      v31 = 1;
      v32 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v33 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v34 = (const char *)(*v33)(v32);
      std::string::basic_string<std::allocator<char>>(&val, v34, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v35 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v35)(&val, this);
    }
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v29, &val);
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
    v38 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, *(_DWORD *)(v3 + 48));
    v39 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v38, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v39, 1255);
    v19 = *(_DWORD *)(v3 + 48);
    std::string::~string(&val);
    if ( v31 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v46);
    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v3 + 96));
  }
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v19;
  if ( v48 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 1248: range 000000000E151272-000000000E151391
ForeachPolicy __cdecl ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(GCGCard &)#1}::operator()(
        const ConfigGCGConditionGlobalCurCampOnStageNotChargedTotalNumImpl::checkCondition::<lambda(GCGCard&)> *const __closure,
        GCGCard *card)
{
  std::vector<unsigned int> *alive_card_vec; // rbx
  uint32_t EnergyNoCharged; // esi
  int32_t *v4; // rdx
  uint32_t v5; // ecx
  int32_t *v6; // rdx
  int32_t v7; // r8d
  std::vector<unsigned int>::value_type __x[5]; // [rsp+1Ch] [rbp-14h] BYREF

  if ( *(_BYTE *)(((unsigned __int64)&__closure->__alive_card_vec >> 3) + 0x7FFF8000) )
    __asan_report_load8(&__closure->__alive_card_vec);
  alive_card_vec = __closure->__alive_card_vec;
  __x[0] = GCGCard::getId(card);
  std::vector<unsigned int>::push_back(alive_card_vec, __x);
  EnergyNoCharged = GCGCard::getEnergyNoCharged(card);
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  v4 = __closure->__result;
  if ( *(_BYTE *)(((unsigned __int64)__closure->__result >> 3) + 0x7FFF8000) != 0
    && (char)(((__int64)__closure->__result & 7) + 3) >= *(_BYTE *)(((unsigned __int64)__closure->__result >> 3)
                                                                  + 0x7FFF8000) )
  {
    __asan_report_load4(__closure->__result);
  }
  v5 = EnergyNoCharged + *v4;
  v6 = __closure->__result;
  v7 = v5;
  if ( *(_BYTE *)(((unsigned __int64)__closure->__result >> 3) + 0x7FFF8000) != 0
    && (char)(((__int64)__closure->__result & 7) + 3) >= *(_BYTE *)(((unsigned __int64)__closure->__result >> 3)
                                                                  + 0x7FFF8000) )
  {
    __asan_report_store4(__closure->__result);
  }
  *v6 = v7;
  return 0;
};

// Line 1260: range 000000000E151CC0-000000000E1524FF
int32_t __cdecl ConfigGCGConditionGlobalCurSkillKillCharacterImpl::checkCondition(
        ConfigGCGConditionGlobalCurSkillKillCharacterImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurSkillKillCharacterImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalCurSkillKillCharacterImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalCurSkillKillCharacterImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalCurSkillKillCharacterImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  GCGGameMode *GameMode; // rax
  common::milog::MiLogStream *v21; // r14
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  const LogContext *v24; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v25; // r15
  void (__fastcall **v26)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurSkillKillCharacterImpl *const); // rax
  char v27; // r14
  ConfigGCGConditionGlobalCurSkillKillCharacterImpl *v28; // rdx
  __int64 (__fastcall **v29)(ConfigGCGConditionGlobalCurSkillKillCharacterImpl *); // rax
  const char *v30; // rax
  void (__fastcall **v31)(std::string *, ConfigGCGConditionGlobalCurSkillKillCharacterImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+27h] [rbp-D9h] BYREF
  GCGDuel *duel; // [rsp+28h] [rbp-D8h]
  common::milog::MiLogStream v40; // [rsp+30h] [rbp-D0h] BYREF
  std::string val; // [rsp+50h] [rbp-B0h] BYREF
  char v42[144]; // [rsp+70h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v42;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 11 result:1268 64 16 18 this_card_ptr:1261";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalCurSkillKillCharacterImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  GCGSkill::getThisCard((const GCGSkill *const)(v3 + 64), (const GCGSkillUseParam *)cur_skill);
  if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v40,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1264);
    v6 = common::milog::MiLogStream::operator<<<char [79],(char *[79])0>(
           &v40,
           (const char (*)[79])"ConfigGCGConditionGlobalCurSkillKillCharacter this_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v40);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurSkillKillCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v40, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v40) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCurSkillKillCharacterImpl *))(this->_vptr_ConfigGCGCondition
                                                                                         + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCurSkillKillCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1265);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    GameMode = GCGSkill::getGameMode(cur_skill);
    duel = GCGGameMode::getDuel(GameMode);
    *(_DWORD *)(v3 + 48) = GCGDuel::getKillCharacterCount(duel);
    if ( !*(_DWORD *)(v3 + 48) )
      *(_DWORD *)(v3 + 48) = -1;
    common::milog::MiLogStream::create(
      &v40,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1271);
    v21 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(
            &v40,
            (const char (*)[54])"ConfigGCGConditionGlobalCurSkillKillCharacter, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    v22 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, &val);
    v23 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v22, (const char (*)[9])",result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v23, (const int *)(v3 + 48));
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v40);
    v24 = GCGEffectContext::getLogContext(context);
    v25 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v24->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v26 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurSkillKillCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v26 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v26)(&v40, this);
    v27 = 0;
    if ( (unsigned __int8)std::string::empty(&v40) )
    {
      std::allocator<char>::allocator(&__a);
      v27 = 1;
      v28 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v29 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCurSkillKillCharacterImpl *))(this->_vptr_ConfigGCGCondition
                                                                                         + 4);
      if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v30 = (const char *)(*v29)(v28);
      std::string::basic_string<std::allocator<char>>(&val, v30, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v31 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCurSkillKillCharacterImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v31)(&val, this);
    }
    v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v25, &val);
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, *(_DWORD *)(v3 + 48));
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, 1272);
    v19 = *(_DWORD *)(v3 + 48);
    std::string::~string(&val);
    if ( v27 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v40);
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v19;
  if ( v42 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1277: range 000000000E152500-000000000E152E73
int32_t __cdecl ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl::checkCondition(
        ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  GCGGameMode *GameMode; // rax
  unsigned int *v21; // rax
  unsigned int *v22; // rdx
  data::GCGEffectDamageElementType element_type; // r14d
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v24; // rax
  common::milog::MiLogStream *v25; // r14
  common::milog::MiLogStream *v26; // rax
  common::milog::MiLogStream *v27; // rax
  const LogContext *v28; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v29; // r15
  void (__fastcall **v30)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *const); // rax
  char v31; // r14
  ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *v32; // rdx
  __int64 (__fastcall **v33)(ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *); // rax
  const char *v34; // rax
  void (__fastcall **v35)(std::string *, ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v38; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v39; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+23h] [rbp-FDh] BYREF
  unsigned int damage_element_type; // [rsp+24h] [rbp-FCh]
  std::set<unsigned int>::iterator __for_begin; // [rsp+28h] [rbp-F8h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+30h] [rbp-F0h] BYREF
  GCGDuel *duel; // [rsp+38h] [rbp-E8h]
  const std::set<unsigned int> *damage_element_type_set; // [rsp+40h] [rbp-E0h]
  const std::set<unsigned int> *__for_range; // [rsp+48h] [rbp-D8h]
  common::milog::MiLogStream v49; // [rsp+50h] [rbp-D0h] BYREF
  std::string val; // [rsp+70h] [rbp-B0h] BYREF
  char v51[144]; // [rsp+90h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v51;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 11 result:1286 64 16 18 this_card_ptr:1278";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  GCGSkill::getThisCard((const GCGSkill *const)(v3 + 64), (const GCGSkillUseParam *)cur_skill);
  if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v49,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1281);
    v6 = common::milog::MiLogStream::operator<<<char [88],(char *[88])0>(
           &v49,
           (const char (*)[88])"ConfigGCGConditionGlobalCheckCurSkillDamageElementType this_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v49);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v49, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v49) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                  + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1282);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    GameMode = GCGSkill::getGameMode(cur_skill);
    duel = GCGGameMode::getDuel(GameMode);
    damage_element_type_set = GCGDuel::getDamageElementTypeSet(duel);
    *(_DWORD *)(v3 + 48) = -1;
    __for_range = damage_element_type_set;
    __for_begin._M_node = std::set<unsigned int>::begin(damage_element_type_set)._M_node;
    __for_end._M_node = std::set<unsigned int>::end(damage_element_type_set)._M_node;
    while ( std::operator!=(&__for_begin, &__for_end) )
    {
      v21 = (unsigned int *)std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
      v22 = v21;
      if ( *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) != 0
        && (char)(((unsigned __int8)v21 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(v21);
      }
      damage_element_type = *v22;
      if ( *(_BYTE *)(((unsigned __int64)&this->element_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->element_type >> 3) + 0x7FFF8000) )
      {
        __asan_report_load4(&this->element_type);
      }
      element_type = this->element_type;
      v24 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
      if ( GCGUtils::isDamageElementMatch(v24, element_type, (GCGEffectElementType)damage_element_type) )
      {
        *(_DWORD *)(v3 + 48) = 0;
        break;
      }
      std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
    }
    common::milog::MiLogStream::create(
      &v49,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1295);
    v25 = common::milog::MiLogStream::operator<<<char [63],(char *[63])0>(
            &v49,
            (const char (*)[63])"ConfigGCGConditionGlobalCheckCurSkillDamageElementType, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    v26 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v25, &val);
    v27 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v26, (const char (*)[9])",result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v27, (const int *)(v3 + 48));
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v49);
    v28 = GCGEffectContext::getLogContext(context);
    v29 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v28->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v30 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v30)(&v49, this);
    v31 = 0;
    if ( (unsigned __int8)std::string::empty(&v49) )
    {
      std::allocator<char>::allocator(&__a);
      v31 = 1;
      v32 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v33 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                  + 4);
      if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v34 = (const char *)(*v33)(v32);
      std::string::basic_string<std::allocator<char>>(&val, v34, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v35 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCheckCurSkillDamageElementTypeImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v35 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v35)(&val, this);
    }
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v29, &val);
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
    v38 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, *(_DWORD *)(v3 + 48));
    v39 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v38, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v39, 1296);
    v19 = *(_DWORD *)(v3 + 48);
    std::string::~string(&val);
    if ( v31 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v49);
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v19;
  if ( v51 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1301: range 000000000E152E74-000000000E153875
int32_t __cdecl ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl::checkCondition(
        ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  GCGGameMode *GameMode; // rax
  __gnu_cxx::__normal_iterator<unsigned int*,std::vector<unsigned int> >::reference v21; // rax
  _DWORD *v22; // rdx
  common::milog::MiLogStream *v23; // r14
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  const LogContext *v26; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // r15
  void (__fastcall **v28)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *const); // rax
  char v29; // r14
  ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *v30; // rdx
  __int64 (__fastcall **v31)(ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *); // rax
  const char *v32; // rax
  void (__fastcall **v33)(std::string *, ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-161h] BYREF
  std::vector<unsigned int>::iterator __for_begin; // [rsp+30h] [rbp-160h] BYREF
  std::vector<unsigned int>::iterator __for_end; // [rsp+38h] [rbp-158h] BYREF
  std::_Rb_tree_const_iterator<unsigned int>::_Self __x; // [rsp+40h] [rbp-150h] BYREF
  std::_Rb_tree_const_iterator<unsigned int>::_Self __y; // [rsp+48h] [rbp-148h] BYREF
  GCGDuel *duel; // [rsp+50h] [rbp-140h]
  std::vector<unsigned int> *__for_range; // [rsp+58h] [rbp-138h]
  common::milog::MiLogStream v47; // [rsp+60h] [rbp-130h] BYREF
  std::string val; // [rsp+80h] [rbp-110h] BYREF
  char v49[240]; // [rsp+A0h] [rbp-F0h] BYREF

  v3 = (unsigned __int64)v49;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(192LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "4 48 4 11 result:1309 64 4 16 reaction_id:1321 80 16 18 this_card_ptr:1302 112 48 20 reaction_id_set:1320";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = 61956;
  v5[536862723] = 62194;
  v5[536862725] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  GCGSkill::getThisCard((const GCGSkill *const)(v3 + 80), (const GCGSkillUseParam *)cur_skill);
  if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 80)) )
  {
    common::milog::MiLogStream::create(
      &v47,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1305);
    v6 = common::milog::MiLogStream::operator<<<char [88],(char *[88])0>(
           &v47,
           (const char (*)[88])"ConfigGCGConditionGlobalCheckCurSkillElementReactionId this_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v47);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v47, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v47) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                  + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1306);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    GameMode = GCGSkill::getGameMode(cur_skill);
    duel = GCGGameMode::getDuel(GameMode);
    *(_DWORD *)(v3 + 48) = -1;
    if ( std::vector<unsigned int>::empty(&this->element_reaction_id_list) )
    {
      if ( GCGDuel::getReactionCount(duel) )
        *(_DWORD *)(v3 + 48) = 0;
    }
    else
    {
      GCGDuel::getReactionSet((std::set<unsigned int> *)(v3 + 112), duel);
      __for_range = &this->element_reaction_id_list;
      __for_begin._M_current = std::vector<unsigned int>::begin(&this->element_reaction_id_list)._M_current;
      __for_end._M_current = std::vector<unsigned int>::end(&this->element_reaction_id_list)._M_current;
      while ( __gnu_cxx::operator!=<unsigned int *,std::vector<unsigned int>>(&__for_begin, &__for_end) )
      {
        v21 = __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator*(&__for_begin);
        v22 = v21;
        if ( *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v21 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v21 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v21);
        }
        *(_DWORD *)(v3 + 64) = *v22;
        __y._M_node = std::set<unsigned int>::end((const std::set<unsigned int> *const)(v3 + 112))._M_node;
        __x._M_node = std::set<unsigned int>::find(
                        (std::set<unsigned int> *const)(v3 + 112),
                        (const std::set<unsigned int>::key_type *)(v3 + 64))._M_node;
        if ( std::operator!=(&__x, &__y) )
        {
          *(_DWORD *)(v3 + 48) = 0;
          break;
        }
        __gnu_cxx::__normal_iterator<unsigned int *,std::vector<unsigned int>>::operator++(&__for_begin);
      }
      std::set<unsigned int>::~set((std::set<unsigned int> *const)(v3 + 112));
    }
    common::milog::MiLogStream::create(
      &v47,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1330);
    v23 = common::milog::MiLogStream::operator<<<char [63],(char *[63])0>(
            &v47,
            (const char (*)[63])"ConfigGCGConditionGlobalCheckCurSkillElementReactionId, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    v24 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v23, &val);
    v25 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v24, (const char (*)[9])",result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v25, (const int *)(v3 + 48));
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v47);
    v26 = GCGEffectContext::getLogContext(context);
    v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v26->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v28 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v28)(&v47, this);
    v29 = 0;
    if ( (unsigned __int8)std::string::empty(&v47) )
    {
      std::allocator<char>::allocator(&__a);
      v29 = 1;
      v30 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v31 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                  + 4);
      if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v32 = (const char *)(*v31)(v30);
      std::string::basic_string<std::allocator<char>>(&val, v32, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v33 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCheckCurSkillElementReactionIdImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v33)(&val, this);
    }
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, &val);
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, *(_DWORD *)(v3 + 48));
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, 1331);
    v19 = *(_DWORD *)(v3 + 48);
    std::string::~string(&val);
    if ( v29 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v47);
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 80));
  result = v19;
  if ( v49 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1336: range 000000000E153876-000000000E1541DB
int32_t __cdecl ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl::checkCondition(
        ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  GCGGameMode *GameMode; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // r14
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  const LogContext *v25; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v26; // r15
  void (__fastcall **v27)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *const); // rax
  char v28; // r14
  ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *v29; // rdx
  __int64 (__fastcall **v30)(ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *); // rax
  const char *v31; // rax
  void (__fastcall **v32)(std::string *, ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Bh] [rbp-F5h] BYREF
  uint32_t die_character_count; // [rsp+2Ch] [rbp-F4h]
  GCGControllerValue cur_controller_id; // [rsp+30h] [rbp-F0h]
  GCGControllerValue other_controller_id; // [rsp+34h] [rbp-ECh]
  GCGDuel *duel; // [rsp+38h] [rbp-E8h]
  GCGField *field; // [rsp+40h] [rbp-E0h]
  GCGField *field_0; // [rsp+48h] [rbp-D8h]
  common::milog::MiLogStream v46; // [rsp+50h] [rbp-D0h] BYREF
  std::string val; // [rsp+70h] [rbp-B0h] BYREF
  char v48[144]; // [rsp+90h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v48;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 11 result:1357 64 16 18 this_card_ptr:1337";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 64));
  if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v46,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1340);
    v6 = common::milog::MiLogStream::operator<<<char [81],(char *[81])0>(
           &v46,
           (const char (*)[81])"ConfigGCGConditionGlobalCurRoundHasCharacterDie this_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v46);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v46, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v46) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *))(this->_vptr_ConfigGCGCondition
                                                                                           + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1341);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    die_character_count = 0;
    GameMode = GCGSkill::getGameMode(cur_skill);
    duel = GCGGameMode::getDuel(GameMode);
    v21 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    cur_controller_id = GCGCard::getControllerId(v21);
    if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->camp_type);
    }
    if ( this->camp_type <= (unsigned int)CAMP_FRIENDLY )
    {
      field = GCGDuel::getField(duel, cur_controller_id);
      die_character_count += GCGField::getDieCharacterCount(field);
    }
    if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->camp_type);
    }
    if ( this->camp_type == CAMP_ENEMY || this->camp_type == CAMP_BOTH )
    {
      other_controller_id = (unsigned int)GCGDuel::getOtherControllerId(duel, cur_controller_id);
      field_0 = GCGDuel::getField(duel, other_controller_id);
      die_character_count += GCGField::getDieCharacterCount(field_0);
    }
    *(_DWORD *)(v3 + 48) = die_character_count;
    if ( !*(_DWORD *)(v3 + 48) )
      *(_DWORD *)(v3 + 48) = -1;
    common::milog::MiLogStream::create(
      &v46,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1360);
    v22 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
            &v46,
            (const char (*)[56])"ConfigGCGConditionGlobalCurRoundHasCharacterDie, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    v23 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v22, &val);
    v24 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v23, (const char (*)[9])",result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v24, (const int *)(v3 + 48));
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v46);
    v25 = GCGEffectContext::getLogContext(context);
    v26 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v25->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v27 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v27)(&v46, this);
    v28 = 0;
    if ( (unsigned __int8)std::string::empty(&v46) )
    {
      std::allocator<char>::allocator(&__a);
      v28 = 1;
      v29 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v30 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *))(this->_vptr_ConfigGCGCondition
                                                                                           + 4);
      if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v31 = (const char *)(*v30)(v29);
      std::string::basic_string<std::allocator<char>>(&val, v31, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v32 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCurRoundHasCharacterDieImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v32)(&val, this);
    }
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v26, &val);
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, ":");
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, *(_DWORD *)(v3 + 48));
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, 1361);
    v19 = *(_DWORD *)(v3 + 48);
    std::string::~string(&val);
    if ( v28 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v46);
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v19;
  if ( v48 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1366: range 000000000E154398-000000000E1555F8
int32_t __cdecl ConfigGCGConditionGlobalAreaTagCardNumImpl::checkCondition(
        ConfigGCGConditionGlobalAreaTagCardNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  int32_t v3; // r15d
  unsigned __int64 v4; // r13
  __int64 v5; // rax
  _DWORD *v6; // r12
  common::milog::MiLogStream *v7; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // r15
  void (__fastcall **v10)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const); // rax
  char v11; // r14
  ConfigGCGConditionGlobalAreaTagCardNumImpl *v12; // rdx
  __int64 (__fastcall **v13)(ConfigGCGConditionGlobalAreaTagCardNumImpl *); // rax
  const char *v14; // rax
  void (__fastcall **v15)(std::string *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  GCGGameMode *GameMode; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // rcx
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  const LogContext *v25; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v26; // r15
  void (__fastcall **v27)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const); // rax
  char v28; // r14
  ConfigGCGConditionGlobalAreaTagCardNumImpl *v29; // rdx
  __int64 (__fastcall **v30)(ConfigGCGConditionGlobalAreaTagCardNumImpl *); // rax
  const char *v31; // rax
  void (__fastcall **v32)(std::string *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  int v37; // r14d
  GCGCardZone *v38; // r14
  common::milog::MiLogStream *v39; // rcx
  common::milog::MiLogStream *v40; // rax
  common::milog::MiLogStream *v41; // rax
  const LogContext *v42; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v43; // r15
  void (__fastcall **v44)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const); // rax
  char v45; // r14
  ConfigGCGConditionGlobalAreaTagCardNumImpl *v46; // rdx
  __int64 (__fastcall **v47)(ConfigGCGConditionGlobalAreaTagCardNumImpl *); // rax
  const char *v48; // rax
  void (__fastcall **v49)(std::string *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v51; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v52; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v53; // rax
  int v54; // r14d
  GCGCardZone *v55; // r14
  common::milog::MiLogStream *v56; // r14
  common::milog::MiLogStream *v57; // rax
  common::milog::MiLogStream *v58; // rax
  const LogContext *v59; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v60; // r15
  void (__fastcall **v61)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const); // rax
  char v62; // r14
  ConfigGCGConditionGlobalAreaTagCardNumImpl *v63; // rdx
  __int64 (__fastcall **v64)(ConfigGCGConditionGlobalAreaTagCardNumImpl *); // rax
  const char *v65; // rax
  void (__fastcall **v66)(std::string *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v67; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v68; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v69; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v70; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+23h] [rbp-14Dh] BYREF
  unsigned int area_type; // [rsp+24h] [rbp-14Ch] BYREF
  GCGDuel *duel; // [rsp+28h] [rbp-148h]
  GCGField *field; // [rsp+30h] [rbp-140h]
  GCGField *field_0; // [rsp+38h] [rbp-138h]
  common::milog::MiLogStream v78; // [rsp+40h] [rbp-130h] BYREF
  std::string val; // [rsp+60h] [rbp-110h] BYREF
  char v80[240]; // [rsp+80h] [rbp-F0h] BYREF

  v4 = (unsigned __int64)v80;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_2(192LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "6 48 4 22 cur_controller_id:1374 64 4 11 result:1375 80 4 24 other_controller_id:1398 96 16 18 t"
                        "his_card_ptr:1367 128 16 9 func:1376 160 16 18 card_zone_ptr:1400";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionGlobalAreaTagCardNumImpl::checkCondition;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556943;
  v6[536862722] = -234556924;
  v6[536862723] = -219021312;
  v6[536862724] = -219021312;
  v6[536862725] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  GCGSkill::getThisCard((const GCGSkill *const)(v4 + 96), (const GCGSkillUseParam *)cur_skill);
  if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v4 + 96)) )
  {
    common::milog::MiLogStream::create(
      &v78,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1370);
    v7 = common::milog::MiLogStream::operator<<<char [72],(char *[72])0>(
           &v78,
           (const char (*)[72])"ConfigGCGConditionGlobalAreaTagCardNum this_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v78);
    LogContext = GCGEffectContext::getLogContext(context);
    v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v10 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v10)(&v78, this);
    v11 = 0;
    if ( (unsigned __int8)std::string::empty(&v78) )
    {
      std::allocator<char>::allocator(&__a);
      v11 = 1;
      v12 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalAreaTagCardNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v14 = (const char *)(*v13)(v12);
      std::string::basic_string<std::allocator<char>>(&val, v14, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v15 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v15)(&val, this);
    }
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, &val);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, -1);
    v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, 1371);
    v3 = -1;
    std::string::~string(&val);
    if ( v11 )
      std::allocator<char>::~allocator(&__a);
LABEL_99:
    std::string::~string(&v78);
    goto LABEL_100;
  }
  GameMode = GCGSkill::getGameMode(cur_skill);
  duel = GCGGameMode::getDuel(GameMode);
  v21 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 96));
  *(_DWORD *)(v4 + 48) = GCGCard::getControllerId(v21);
  *(_DWORD *)(v4 + 64) = 0;
  *(_QWORD *)(v4 + 128) = this;
  *(_QWORD *)(v4 + 136) = v4 + 64;
  if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
    && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4(&this->camp_type);
  }
  if ( this->camp_type > (unsigned int)CAMP_FRIENDLY )
    goto LABEL_105;
  field = GCGDuel::getField(duel, (GCGControllerValue)*(_DWORD *)(v4 + 48));
  if ( *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) != 0
    && *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) <= 3 )
  {
    __asan_report_load4(&this->area_type);
  }
  GCGField::getZoneByEffectAreaType((GCGField *const)(v4 + 160), (data::GCGEffectAreaType)field);
  if ( std::operator==<GCGCardZone>(0LL, (const std::shared_ptr<GCGCardZone> *)(v4 + 160)) )
  {
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&val,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1391);
    v22 = common::milog::MiLogStream::operator<<<char [60],(char *[60])0>(
            (common::milog::MiLogStream *const)&val,
            (const char (*)[60])"ConfigGCGConditionGlobalAreaTagCardNum card_zone not found:");
    if ( *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->area_type);
    }
    area_type = this->area_type;
    v23 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, &area_type);
    v24 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v23, (const char (*)[13])" controller:");
    common::milog::MiLogStream::operator<<<proto::GCGControllerValue,(proto::GCGControllerValue*)0>(
      v24,
      (const proto::GCGControllerValue *)(v4 + 48));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
    v25 = GCGEffectContext::getLogContext(context);
    v26 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v25->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v27 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v27)(&v78, this);
    v28 = 0;
    if ( (unsigned __int8)std::string::empty(&v78) )
    {
      std::allocator<char>::allocator(&__a);
      v28 = 1;
      v29 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v30 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalAreaTagCardNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v31 = (const char *)(*v30)(v29);
      std::string::basic_string<std::allocator<char>>(&val, v31, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v32 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v32)(&val, this);
    }
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v26, &val);
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, ":");
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, -1);
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, 1392);
    v3 = -1;
    std::string::~string(&val);
    if ( v28 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v78);
    v37 = 0;
  }
  else
  {
    v38 = std::__shared_ptr_access<GCGCardZone,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCardZone,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 160));
    std::function<ForeachPolicy ()(GCGCard &)>::function<ConfigGCGConditionGlobalAreaTagCardNumImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(GCGCard &)#1},void,void>(
      (std::function<ForeachPolicy(GCGCard&)> *const)&val,
      *(ConfigGCGConditionGlobalAreaTagCardNumImpl::checkCondition::<lambda(GCGCard&)> *)(v4 + 128));
    GCGCardZone::foreachCard(v38, (std::function<ForeachPolicy(GCGCard&)> *)&val);
    std::function<ForeachPolicy ()(GCGCard &)>::~function((std::function<ForeachPolicy(GCGCard&)> *const)&val);
    v37 = 1;
  }
  std::shared_ptr<GCGCardZone>::~shared_ptr((std::shared_ptr<GCGCardZone> *const)(v4 + 160));
  if ( v37 == 1 )
  {
LABEL_105:
    if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->camp_type);
    }
    if ( this->camp_type != CAMP_ENEMY && this->camp_type )
      goto LABEL_82;
    *(_DWORD *)(v4 + 80) = GCGDuel::getOtherControllerId(duel, (GCGControllerValue)*(_DWORD *)(v4 + 48));
    field_0 = GCGDuel::getField(duel, (GCGControllerValue)*(_DWORD *)(v4 + 80));
    if ( *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) != 0
      && *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) <= 3 )
    {
      __asan_report_load4(&this->area_type);
    }
    GCGField::getZoneByEffectAreaType((GCGField *const)(v4 + 160), (data::GCGEffectAreaType)field_0);
    if ( std::operator==<GCGCardZone>(0LL, (const std::shared_ptr<GCGCardZone> *)(v4 + 160)) )
    {
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&val,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1403);
      v39 = common::milog::MiLogStream::operator<<<char [60],(char *[60])0>(
              (common::milog::MiLogStream *const)&val,
              (const char (*)[60])"ConfigGCGConditionGlobalAreaTagCardNum card_zone not found:");
      if ( *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) != 0
        && *(_BYTE *)(((unsigned __int64)&this->area_type >> 3) + 0x7FFF8000) <= 3 )
      {
        __asan_report_load4(&this->area_type);
      }
      area_type = this->area_type;
      v40 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v39, &area_type);
      v41 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v40, (const char (*)[13])" controller:");
      common::milog::MiLogStream::operator<<<proto::GCGControllerValue,(proto::GCGControllerValue*)0>(
        v41,
        (const proto::GCGControllerValue *)(v4 + 80));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
      v42 = GCGEffectContext::getLogContext(context);
      v43 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v42->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v44 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v44 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v44)(&v78, this);
      v45 = 0;
      if ( (unsigned __int8)std::string::empty(&v78) )
      {
        std::allocator<char>::allocator(&__a);
        v45 = 1;
        v46 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v47 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalAreaTagCardNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v47 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v48 = (const char *)(*v47)(v46);
        std::string::basic_string<std::allocator<char>>(&val, v48, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v49 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v49 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v49)(&val, this);
      }
      v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v43, &val);
      v51 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, ":");
      v52 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v51, -1);
      v53 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v52, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v53, 1404);
      v3 = -1;
      std::string::~string(&val);
      if ( v45 )
        std::allocator<char>::~allocator(&__a);
      std::string::~string(&v78);
      v54 = 0;
    }
    else
    {
      v55 = std::__shared_ptr_access<GCGCardZone,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCardZone,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v4 + 160));
      std::function<ForeachPolicy ()(GCGCard &)>::function<ConfigGCGConditionGlobalAreaTagCardNumImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(GCGCard &)#1},void,void>(
        (std::function<ForeachPolicy(GCGCard&)> *const)&val,
        *(ConfigGCGConditionGlobalAreaTagCardNumImpl::checkCondition::<lambda(GCGCard&)> *)(v4 + 128));
      GCGCardZone::foreachCard(v55, (std::function<ForeachPolicy(GCGCard&)> *)&val);
      std::function<ForeachPolicy ()(GCGCard &)>::~function((std::function<ForeachPolicy(GCGCard&)> *const)&val);
      v54 = 1;
    }
    std::shared_ptr<GCGCardZone>::~shared_ptr((std::shared_ptr<GCGCardZone> *const)(v4 + 160));
    if ( v54 == 1 )
    {
LABEL_82:
      common::milog::MiLogStream::create(
        &v78,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1408);
      v56 = common::milog::MiLogStream::operator<<<char [47],(char *[47])0>(
              &v78,
              (const char (*)[47])"ConfigGCGConditionGlobalAreaTagCardNum, skill:");
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      v57 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v56, &val);
      v58 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v57, (const char (*)[9])",result:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v58, (const int *)(v4 + 64));
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v78);
      v59 = GCGEffectContext::getLogContext(context);
      v60 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v59->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v61 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v61 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v61)(&v78, this);
      v62 = 0;
      if ( (unsigned __int8)std::string::empty(&v78) )
      {
        std::allocator<char>::allocator(&__a);
        v62 = 1;
        v63 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v64 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalAreaTagCardNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v64 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v65 = (const char *)(*v64)(v63);
        std::string::basic_string<std::allocator<char>>(&val, v65, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v66 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalAreaTagCardNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v66 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v66)(&val, this);
      }
      v67 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v60, &val);
      v68 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v67, ":");
      v69 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v68, *(_DWORD *)(v4 + 64));
      v70 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v69, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v70, 1409);
      v3 = *(_DWORD *)(v4 + 64);
      std::string::~string(&val);
      if ( v62 )
        std::allocator<char>::~allocator(&__a);
      goto LABEL_99;
    }
  }
LABEL_100:
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v4 + 96));
  result = v3;
  if ( v80 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1376: range 000000000E1541DC-000000000E154397
ForeachPolicy __cdecl ConfigGCGConditionGlobalAreaTagCardNumImpl::checkCondition(GCGSkill const&,GCGEffectContext const&)::{lambda(GCGCard &)#1}::operator()(
        const ConfigGCGConditionGlobalAreaTagCardNumImpl::checkCondition::<lambda(GCGCard&)> *const __closure,
        GCGCard *card)
{
  ConfigGCGConditionGlobalAreaTagCardNumImpl *this; // rdx
  char v3; // cl
  ConfigGCGConditionGlobalAreaTagCardNumImpl *v4; // rax
  ConfigGCGConditionGlobalAreaTagCardNumImpl *v5; // rax
  char v6; // dl
  char v7; // al
  unsigned __int64 v8; // rax

  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  this = __closure->__this;
  v3 = *(_BYTE *)(((unsigned __int64)&__closure->__this->tag_type >> 3) + 0x7FFF8000);
  if ( v3 != 0 && (char)(((LOBYTE(__closure->__this) + 36) & 7) + 3) >= v3 )
    __asan_report_load4(&__closure->__this->tag_type);
  if ( !GCGCard::isHasTag(card, this->tag_type) )
    goto LABEL_16;
  if ( *(_BYTE *)(((unsigned __int64)__closure >> 3) + 0x7FFF8000) )
    __asan_report_load8(__closure);
  v4 = __closure->__this;
  if ( *(char *)(((unsigned __int64)&__closure->__this->is_calc_die_card >> 3) + 0x7FFF8000) < 0 )
    v4 = (ConfigGCGConditionGlobalAreaTagCardNumImpl *)__asan_report_load1(&__closure->__this->is_calc_die_card);
  if ( v4->is_calc_die_card )
    goto LABEL_15;
  v5 = __closure->__this;
  v6 = *(_BYTE *)(((unsigned __int64)&__closure->__this->area_type >> 3) + 0x7FFF8000);
  if ( v6 != 0 && v6 <= 3 )
    v5 = (ConfigGCGConditionGlobalAreaTagCardNumImpl *)__asan_report_load4(&__closure->__this->area_type);
  if ( v5->area_type == EFFECT_AREA_HAND || GCGCard::isActivated(card) )
LABEL_15:
    v7 = 1;
  else
LABEL_16:
    v7 = 0;
  if ( v7 )
  {
    if ( *(_BYTE *)(((unsigned __int64)&__closure->__result >> 3) + 0x7FFF8000) )
      __asan_report_load8(&__closure->__result);
    v8 = (unsigned __int64)__closure->__result;
    if ( *(_BYTE *)((v8 >> 3) + 0x7FFF8000) != 0 && (char)((v8 & 7) + 3) >= *(_BYTE *)((v8 >> 3) + 0x7FFF8000) )
      v8 = __asan_report_load4(__closure->__result);
    ++*(_DWORD *)v8;
  }
  return 0;
};

// Line 1414: range 000000000E1555FA-000000000E155830
int32_t __cdecl ConfigGCGConditionFetchCurSkillOriginCostNumImpl::checkCondition(
        ConfigGCGConditionFetchCurSkillOriginCostNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGSkill> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGSkill> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionFetchCurSkillOriginCostNumImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGSkill> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGSkill>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGSkill> const&>(&context->cur_context);
    std::shared_ptr<GCGSkill const>::shared_ptr<GCGSkill,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionFetchCurSkillOriginCostNumImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGSkill const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGSkill const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGSkill const> const&>(&context->cur_context);
      return ConfigGCGConditionFetchCurSkillOriginCostNumImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1415);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGSkill>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGSkill const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1419: range 000000000E155832-000000000E155F9D
int32_t __cdecl ConfigGCGConditionFetchCurSkillOriginCostNumImpl::checkCondition(
        ConfigGCGConditionFetchCurSkillOriginCostNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGSkill> *skill_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillOriginCostNumImpl *const); // rax
  char v10; // r13
  ConfigGCGConditionFetchCurSkillOriginCostNumImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionFetchCurSkillOriginCostNumImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillOriginCostNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  const LogContext *v24; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v25; // r15
  void (__fastcall **v26)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillOriginCostNumImpl *const); // rax
  char v27; // r14
  ConfigGCGConditionFetchCurSkillOriginCostNumImpl *v28; // rdx
  __int64 (__fastcall **v29)(ConfigGCGConditionFetchCurSkillOriginCostNumImpl *); // rax
  const char *v30; // rax
  void (__fastcall **v31)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillOriginCostNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Fh] [rbp-B1h] BYREF
  common::milog::MiLogStream v40; // [rsp+40h] [rbp-B0h] BYREF
  common::milog::MiLogStream v41; // [rsp+60h] [rbp-90h] BYREF
  char v42[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v42;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 11 result:1425";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionFetchCurSkillOriginCostNumImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGSkill const>(0LL, skill_ptr) )
  {
    common::milog::MiLogStream::create(
      &v41,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1422);
    common::milog::MiLogStream::operator<<<char [66],(char *[66])0>(
      &v41,
      (const char (*)[66])"ConfigGCGConditionFetchCurSkillOriginCostNum skill_ptr is nullptr");
    common::milog::MiLogStream::~MiLogStream(&v41);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillOriginCostNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v40, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v40) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionFetchCurSkillOriginCostNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                        + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v41, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillOriginCostNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&v41, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, (const std::string *)&v41);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1423);
    v19 = -1;
    std::string::~string(&v41);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v20 = std::__shared_ptr_access<GCGSkill const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGSkill,(__gnu_cxx::_Lock_policy)2,false,false> *const)skill_ptr);
    *(_DWORD *)(v4 + 32) = GCGSkill::getCostNum(v20);
    common::milog::MiLogStream::create(
      &v40,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1426);
    v21 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
            &v40,
            (const char (*)[53])"ConfigGCGConditionFetchCurSkillOriginCostNum, skill:");
    GCGSkill::getName[abi:cxx11]((std::string *)&v41, cur_skill);
    v22 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, (const std::string *)&v41);
    v23 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v22, (const char (*)[9])",result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v23, (const int *)(v4 + 32));
    std::string::~string(&v41);
    common::milog::MiLogStream::~MiLogStream(&v40);
    v24 = GCGEffectContext::getLogContext(context);
    v25 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v24->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v26 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillOriginCostNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v26 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v26)(&v40, this);
    v27 = 0;
    if ( (unsigned __int8)std::string::empty(&v40) )
    {
      std::allocator<char>::allocator(&__a);
      v27 = 1;
      v28 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v29 = (__int64 (__fastcall **)(ConfigGCGConditionFetchCurSkillOriginCostNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                        + 4);
      if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v30 = (const char *)(*v29)(v28);
      std::string::basic_string<std::allocator<char>>((std::string *const)&v41, v30, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v31 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurSkillOriginCostNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v31)(&v41, this);
    }
    v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v25, (const std::string *)&v41);
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, *(_DWORD *)(v4 + 32));
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, 1427);
    v19 = *(_DWORD *)(v4 + 32);
    std::string::~string(&v41);
    if ( v27 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v40);
  result = v19;
  if ( v42 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1432: range 000000000E155F9E-000000000E1561D4
int32_t __cdecl ConfigGCGConditionCheckCurCardSetDamageElementImpl::checkCondition(
        ConfigGCGConditionCheckCurCardSetDamageElementImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurCardSetDamageElementImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurCardSetDamageElementImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurCardSetDamageElementImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1433);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1437: range 000000000E1561D6-000000000E1569FE
int32_t __cdecl ConfigGCGConditionCheckCurCardSetDamageElementImpl::checkCondition(
        ConfigGCGConditionCheckCurCardSetDamageElementImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // r12
  __int64 v5; // rax
  _DWORD *v6; // r13
  common::milog::MiLogStream *v7; // rbx
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // r14
  void (__fastcall **v10)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardSetDamageElementImpl *const); // rax
  char v11; // bl
  ConfigGCGConditionCheckCurCardSetDamageElementImpl *v12; // rdx
  __int64 (__fastcall **v13)(ConfigGCGConditionCheckCurCardSetDamageElementImpl *); // rax
  const char *v14; // rax
  void (__fastcall **v15)(std::string *, ConfigGCGConditionCheckCurCardSetDamageElementImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  int32_t v20; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // rax
  common::milog::MiLogStream *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  common::milog::MiLogStream *v26; // rax
  const LogContext *v27; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v28; // r15
  void (__fastcall **v29)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardSetDamageElementImpl *const); // rax
  char v30; // r14
  ConfigGCGConditionCheckCurCardSetDamageElementImpl *v31; // rdx
  __int64 (__fastcall **v32)(ConfigGCGConditionCheckCurCardSetDamageElementImpl *); // rax
  const char *v33; // rax
  void (__fastcall **v34)(std::string *, ConfigGCGConditionCheckCurCardSetDamageElementImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v38; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Fh] [rbp-D1h] BYREF
  common::milog::MiLogStream v43; // [rsp+40h] [rbp-D0h] BYREF
  std::string val; // [rsp+60h] [rbp-B0h] BYREF
  char v45[144]; // [rsp+80h] [rbp-90h] BYREF

  v4 = (unsigned __int64)v45;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_1(96LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "3 32 4 32 cur_card_set_damage_element:1443 48 4 30 config_set_damage_element:1444 64 4 11 result:1445";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCheckCurCardSetDamageElementImpl::checkCondition;
  v6 = (_DWORD *)(v4 >> 3);
  v6[536862720] = -235802127;
  v6[536862721] = -234556924;
  v6[536862722] = -202116348;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v43,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1440);
    v7 = common::milog::MiLogStream::operator<<<char [79],(char *[79])0>(
           &v43,
           (const char (*)[79])"ConfigGCGConditionCheckCurCardSetDamageElement cur_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v43);
    LogContext = GCGEffectContext::getLogContext(context);
    v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v10 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardSetDamageElementImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v10)(&v43, this);
    v11 = 0;
    if ( (unsigned __int8)std::string::empty(&v43) )
    {
      std::allocator<char>::allocator(&__a);
      v11 = 1;
      v12 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCardSetDamageElementImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v14 = (const char *)(*v13)(v12);
      std::string::basic_string<std::allocator<char>>(&val, v14, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v15 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCardSetDamageElementImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v15)(&val, this);
    }
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, &val);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, -1);
    v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, 1441);
    v20 = -1;
    std::string::~string(&val);
    if ( v11 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v21 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    *(_DWORD *)(v4 + 32) = GCGCard::getToken(v21, GCG_TOKEN_SET_DAMAGE_ELEMENT);
    if ( *(_BYTE *)(((unsigned __int64)&this->element_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->element_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->element_type);
    }
    *(_DWORD *)(v4 + 48) = this->element_type;
    *(_DWORD *)(v4 + 64) = -1;
    if ( *(_DWORD *)(v4 + 32) == *(_DWORD *)(v4 + 48) )
      *(_DWORD *)(v4 + 64) = 0;
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&val,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1450);
    v22 = common::milog::MiLogStream::operator<<<char [57],(char *[57])0>(
            (common::milog::MiLogStream *const)&val,
            (const char (*)[57])"ConfigGCGConditionCheckCurCardSetDamageElement cur card:");
    v23 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, (const unsigned int *)(v4 + 32));
    v24 = common::milog::MiLogStream::operator<<<char [18],(char *[18])0>(v23, (const char (*)[18])", config element:");
    v25 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v24, (const unsigned int *)(v4 + 48));
    v26 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v25, (const char (*)[9])",result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v26, (const int *)(v4 + 64));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
    v27 = GCGEffectContext::getLogContext(context);
    v28 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v27->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v29 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardSetDamageElementImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v29)(&v43, this);
    v30 = 0;
    if ( (unsigned __int8)std::string::empty(&v43) )
    {
      std::allocator<char>::allocator(&__a);
      v30 = 1;
      v31 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v32 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCardSetDamageElementImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v33 = (const char *)(*v32)(v31);
      std::string::basic_string<std::allocator<char>>(&val, v33, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v34 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCardSetDamageElementImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v34 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v34)(&val, this);
    }
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v28, &val);
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, *(_DWORD *)(v4 + 64));
    v38 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v38, 1451);
    v20 = *(_DWORD *)(v4 + 64);
    std::string::~string(&val);
    if ( v30 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v43);
  result = v20;
  if ( v45 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v4 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1456: range 000000000E156A00-000000000E156C36
int32_t __cdecl ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl::checkCondition(
        ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1457);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1461: range 000000000E156C38-000000000E1573D5
int32_t __cdecl ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl::checkCondition(
        ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r12
  common::milog::MiLogStream *v7; // r13
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // r14
  void (__fastcall **v10)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *const); // rax
  char v11; // r13
  ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *v12; // rdx
  __int64 (__fastcall **v13)(ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *); // rax
  const char *v14; // rax
  void (__fastcall **v15)(std::string *, ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  int32_t v20; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // rax
  const LogContext *v26; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // r15
  void (__fastcall **v28)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *const); // rax
  char v29; // r14
  ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *v30; // rdx
  __int64 (__fastcall **v31)(ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *); // rax
  const char *v32; // rax
  void (__fastcall **v33)(std::string *, ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Bh] [rbp-B5h] BYREF
  unsigned int Id; // [rsp+3Ch] [rbp-B4h] BYREF
  common::milog::MiLogStream v43; // [rsp+40h] [rbp-B0h] BYREF
  std::string val; // [rsp+60h] [rbp-90h] BYREF
  char v45[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v45;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 11 result:1467";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v43,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1464);
    v7 = common::milog::MiLogStream::operator<<<char [76],(char *[76])0>(
           &v43,
           (const char (*)[76])"ConfigGCGConditionFetchCurCardAbsorbDiceNum cur_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v43);
    LogContext = GCGEffectContext::getLogContext(context);
    v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v10 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v10)(&v43, this);
    v11 = 0;
    if ( (unsigned __int8)std::string::empty(&v43) )
    {
      std::allocator<char>::allocator(&__a);
      v11 = 1;
      v12 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (__int64 (__fastcall **)(ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v14 = (const char *)(*v13)(v12);
      std::string::basic_string<std::allocator<char>>(&val, v14, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v15 = (void (__fastcall **)(std::string *, ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v15)(&val, this);
    }
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, &val);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, -1);
    v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, 1465);
    v20 = -1;
    std::string::~string(&val);
    if ( v11 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v21 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    *(_DWORD *)(v4 + 32) = GCGCard::getAbsorbUnusedDiceNum(v21);
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&val,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1468);
    v22 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
            (common::milog::MiLogStream *const)&val,
            (const char (*)[53])"ConfigGCGConditionFetchCurCardAbsorbDiceNum card_id:");
    v23 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    Id = GCGCard::getId(v23);
    v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, &Id);
    v25 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v24, (const char (*)[9])",result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v25, (const int *)(v4 + 32));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
    v26 = GCGEffectContext::getLogContext(context);
    v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v26->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v28 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v28)(&v43, this);
    v29 = 0;
    if ( (unsigned __int8)std::string::empty(&v43) )
    {
      std::allocator<char>::allocator(&__a);
      v29 = 1;
      v30 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v31 = (__int64 (__fastcall **)(ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v32 = (const char *)(*v31)(v30);
      std::string::basic_string<std::allocator<char>>(&val, v32, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v33 = (void (__fastcall **)(std::string *, ConfigGCGConditionFetchCurCardAbsorbDiceNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v33)(&val, this);
    }
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, &val);
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, *(_DWORD *)(v4 + 32));
    v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, 1469);
    v20 = *(_DWORD *)(v4 + 32);
    std::string::~string(&val);
    if ( v29 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v43);
  result = v20;
  if ( v45 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1474: range 000000000E1573D6-000000000E157E27
int32_t __cdecl ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl::checkCondition(
        ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  GCGGameMode *GameMode; // rax
  GCGDuel *Duel; // rax
  GCGCharacterZone *CharacterZone; // rax
  const std::shared_ptr<GCGCard> *v24; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v25; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v27; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v28; // rax
  common::milog::MiLogStream *v29; // r14
  common::milog::MiLogStream *v30; // rax
  common::milog::MiLogStream *v31; // rax
  common::milog::MiLogStream *v32; // rax
  common::milog::MiLogStream *v33; // rax
  const LogContext *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // r15
  void (__fastcall **v36)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *const); // rax
  char v37; // r14
  ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *v38; // rdx
  __int64 (__fastcall **v39)(ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *); // rax
  const char *v40; // rax
  void (__fastcall **v41)(std::string *, ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v42; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v43; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v44; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v45; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+27h] [rbp-179h] BYREF
  std::vector<unsigned int>::value_type __x; // [rsp+28h] [rbp-178h] BYREF
  GCGControllerValue cur_controller_id; // [rsp+2Ch] [rbp-174h]
  std::vector<std::shared_ptr<GCGCard>>::iterator __for_begin; // [rsp+30h] [rbp-170h] BYREF
  std::vector<std::shared_ptr<GCGCard>>::iterator __for_end; // [rsp+38h] [rbp-168h] BYREF
  GCGField *field; // [rsp+40h] [rbp-160h]
  std::vector<std::shared_ptr<GCGCard>> *__for_range; // [rsp+48h] [rbp-158h]
  std::vector<std::shared_ptr<GCGCard>> v55; // [rsp+50h] [rbp-150h] BYREF
  common::milog::MiLogStream v56; // [rsp+70h] [rbp-130h] BYREF
  std::string val; // [rsp+90h] [rbp-110h] BYREF
  char v58[240]; // [rsp+B0h] [rbp-F0h] BYREF

  v3 = (unsigned __int64)v58;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(192LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "4 48 4 11 result:1483 64 16 18 this_card_ptr:1475 96 16 23 neighbour_card_ptr:1485 128 24 31 nea"
                        "r_backstage_card_id_vec:1484";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -219021312;
  v5[536862723] = -219021312;
  v5[536862724] = -218103808;
  v5[536862725] = -202116109;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 64));
  if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v56,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1478);
    v6 = common::milog::MiLogStream::operator<<<char [93],(char *[93])0>(
           &v56,
           (const char (*)[93])"ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNum this_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v56);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v56, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v56) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1479);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v56);
  }
  else
  {
    v20 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    cur_controller_id = GCGCard::getControllerId(v20);
    GameMode = GCGSkill::getGameMode(cur_skill);
    Duel = GCGGameMode::getDuel(GameMode);
    field = GCGDuel::getField(Duel, cur_controller_id);
    *(_DWORD *)(v3 + 48) = 0;
    std::vector<unsigned int>::vector((std::vector<unsigned int> *const)(v3 + 128));
    CharacterZone = GCGField::getCharacterZone(field);
    GCGCharacterZone::getOnstageNeighbourCardVec(&v55, CharacterZone);
    __for_range = &v55;
    __for_begin._M_current = std::vector<std::shared_ptr<GCGCard>>::begin(&v55)._M_current;
    __for_end._M_current = std::vector<std::shared_ptr<GCGCard>>::end(&v55)._M_current;
    while ( __gnu_cxx::operator!=<std::shared_ptr<GCGCard> *,std::vector<std::shared_ptr<GCGCard>>>(
              &__for_begin,
              &__for_end) )
    {
      v24 = __gnu_cxx::__normal_iterator<std::shared_ptr<GCGCard> *,std::vector<std::shared_ptr<GCGCard>>>::operator*(&__for_begin);
      std::shared_ptr<GCGCard>::shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 96), v24);
      if ( !std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 96)) )
      {
        v25 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
        if ( GCGCard::isAlive(v25) )
        {
          v27 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
          *(_DWORD *)(v3 + 48) += GCGCard::getCurEnergy(v27);
          v28 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
          __x = GCGCard::getGuid(v28);
          std::vector<unsigned int>::push_back((std::vector<unsigned int> *const)(v3 + 128), &__x);
        }
      }
      std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 96));
      __gnu_cxx::__normal_iterator<std::shared_ptr<GCGCard> *,std::vector<std::shared_ptr<GCGCard>>>::operator++(&__for_begin);
    }
    std::vector<std::shared_ptr<GCGCard>>::~vector(&v55);
    common::milog::MiLogStream::create(
      &v56,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1494);
    v29 = common::milog::MiLogStream::operator<<<char [68],(char *[68])0>(
            &v56,
            (const char (*)[68])"ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNum, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    v30 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v29, &val);
    v31 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v30, (const char (*)[9])",result:");
    v32 = common::milog::MiLogStream::operator<<<int,(int *)0>(v31, (const int *)(v3 + 48));
    v33 = common::milog::MiLogStream::operator<<<char [24],(char *[24])0>(
            v32,
            (const char (*)[24])", near backstage cards:");
    common::milog::MiLogStream::operator<<<unsigned int>(v33, (const std::vector<unsigned int> *)(v3 + 128));
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v56);
    v34 = GCGEffectContext::getLogContext(context);
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v34->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v36 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v36 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v36)(&v56, this);
    v37 = 0;
    if ( (unsigned __int8)std::string::empty(&v56) )
    {
      std::allocator<char>::allocator(&__a);
      v37 = 1;
      v38 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v39 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v39 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v40 = (const char *)(*v39)(v38);
      std::string::basic_string<std::allocator<char>>(&val, v40, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v41 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCurCampNearBackStageChargedTotalNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v41)(&val, this);
    }
    v42 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, &val);
    v43 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v42, ":");
    v44 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v43, *(_DWORD *)(v3 + 48));
    v45 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v44, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v45, 1495);
    v19 = *(_DWORD *)(v3 + 48);
    std::string::~string(&val);
    if ( v37 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v56);
    std::vector<unsigned int>::~vector((std::vector<unsigned int> *const)(v3 + 128));
  }
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v19;
  if ( v58 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1500: range 000000000E157E28-000000000E15805E
int32_t __cdecl ConfigGCGConditionCurCharacterNotChargedNumImpl::checkCondition(
        ConfigGCGConditionCurCharacterNotChargedNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCurCharacterNotChargedNumImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCurCharacterNotChargedNumImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCurCharacterNotChargedNumImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1501);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1505: range 000000000E158060-000000000E158C26
int32_t __cdecl ConfigGCGConditionCurCharacterNotChargedNumImpl::checkCondition(
        ConfigGCGConditionCurCharacterNotChargedNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r13
  common::milog::MiLogStream *v7; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // r14
  void (__fastcall **v10)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterNotChargedNumImpl *const); // rax
  char v11; // r12
  ConfigGCGConditionCurCharacterNotChargedNumImpl *v12; // rdx
  __int64 (__fastcall **v13)(ConfigGCGConditionCurCharacterNotChargedNumImpl *); // rax
  const char *v14; // rax
  void (__fastcall **v15)(std::string *, ConfigGCGConditionCurCharacterNotChargedNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  int32_t v20; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // r12
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // r12
  const LogContext *v26; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // r14
  void (__fastcall **v28)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterNotChargedNumImpl *const); // rax
  char v29; // r12
  ConfigGCGConditionCurCharacterNotChargedNumImpl *v30; // rdx
  __int64 (__fastcall **v31)(ConfigGCGConditionCurCharacterNotChargedNumImpl *); // rax
  const char *v32; // rax
  void (__fastcall **v33)(std::string *, ConfigGCGConditionCurCharacterNotChargedNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v38; // rax
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v39; // rax
  common::milog::MiLogStream *v40; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v41; // rax
  common::milog::MiLogStream *v42; // rax
  common::milog::MiLogStream *v43; // r14
  common::milog::MiLogStream *v44; // rax
  common::milog::MiLogStream *v45; // rax
  const LogContext *v46; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v47; // r15
  void (__fastcall **v48)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterNotChargedNumImpl *const); // rax
  char v49; // r14
  ConfigGCGConditionCurCharacterNotChargedNumImpl *v50; // rdx
  __int64 (__fastcall **v51)(ConfigGCGConditionCurCharacterNotChargedNumImpl *); // rax
  const char *v52; // rax
  void (__fastcall **v53)(std::string *, ConfigGCGConditionCurCharacterNotChargedNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v55; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v56; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v57; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Bh] [rbp-B5h] BYREF
  unsigned int Id; // [rsp+3Ch] [rbp-B4h] BYREF
  common::milog::MiLogStream v63; // [rsp+40h] [rbp-B0h] BYREF
  std::string val; // [rsp+60h] [rbp-90h] BYREF
  char v65[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v65;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 11 result:1516";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCurCharacterNotChargedNumImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v63,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1508);
    v7 = common::milog::MiLogStream::operator<<<char [76],(char *[76])0>(
           &v63,
           (const char (*)[76])"ConfigGCGConditionCurCharacterNotChargedNum cur_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v63);
    LogContext = GCGEffectContext::getLogContext(context);
    v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v10 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterNotChargedNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v10)(&v63, this);
    v11 = 0;
    if ( (unsigned __int8)std::string::empty(&v63) )
    {
      std::allocator<char>::allocator(&__a);
      v11 = 1;
      v12 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (__int64 (__fastcall **)(ConfigGCGConditionCurCharacterNotChargedNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v14 = (const char *)(*v13)(v12);
      std::string::basic_string<std::allocator<char>>(&val, v14, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v15 = (void (__fastcall **)(std::string *, ConfigGCGConditionCurCharacterNotChargedNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v15)(&val, this);
    }
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, &val);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, -1);
    v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, 1509);
    v20 = -1;
    std::string::~string(&val);
    if ( v11 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v21 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    if ( GCGCard::getCardType(v21) == GCG_CARD_CHARACTER )
    {
      *(_DWORD *)(v4 + 32) = 0;
      v38 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      if ( GCGCard::isAlive(v38) )
      {
        v39 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
        *(_DWORD *)(v4 + 32) = GCGCard::getEnergyNoCharged(v39);
      }
      common::milog::MiLogStream::create(
        &v63,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1521);
      v40 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(
              &v63,
              (const char (*)[54])"ConfigGCGConditionCurCharacterNotChargedNum cur card:");
      v41 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Id = GCGCard::getId(v41);
      v42 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v40, &Id);
      v43 = common::milog::MiLogStream::operator<<<char [7],(char *[7])0>(v42, (const char (*)[7])"skill:");
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      v44 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v43, &val);
      v45 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v44, (const char (*)[9])",result:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v45, (const int *)(v4 + 32));
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v63);
      v46 = GCGEffectContext::getLogContext(context);
      v47 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v46->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v48 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterNotChargedNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v48 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v48)(&v63, this);
      v49 = 0;
      if ( (unsigned __int8)std::string::empty(&v63) )
      {
        std::allocator<char>::allocator(&__a);
        v49 = 1;
        v50 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v51 = (__int64 (__fastcall **)(ConfigGCGConditionCurCharacterNotChargedNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                         + 4);
        if ( *(_BYTE *)(((unsigned __int64)v51 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v52 = (const char *)(*v51)(v50);
        std::string::basic_string<std::allocator<char>>(&val, v52, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v53 = (void (__fastcall **)(std::string *, ConfigGCGConditionCurCharacterNotChargedNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v53 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v53)(&val, this);
      }
      v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v47, &val);
      v55 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, ":");
      v56 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v55, *(_DWORD *)(v4 + 32));
      v57 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v56, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v57, 1522);
      v20 = *(_DWORD *)(v4 + 32);
      std::string::~string(&val);
      if ( v49 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v63,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1513);
      v22 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(
              &v63,
              (const char (*)[54])"ConfigGCGConditionCurCharacterNotChargedNum cur card:");
      v23 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Id = GCGCard::getId(v23);
      v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, &Id);
      v25 = common::milog::MiLogStream::operator<<<char [26],(char *[26])0>(v24, (const char (*)[26])off_1BC7C300);
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v25, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v63);
      v26 = GCGEffectContext::getLogContext(context);
      v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v26->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v28 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCurCharacterNotChargedNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v28)(&v63, this);
      v29 = 0;
      if ( (unsigned __int8)std::string::empty(&v63) )
      {
        std::allocator<char>::allocator(&__a);
        v29 = 1;
        v30 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v31 = (__int64 (__fastcall **)(ConfigGCGConditionCurCharacterNotChargedNumImpl *))(this->_vptr_ConfigGCGCondition
                                                                                         + 4);
        if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v32 = (const char *)(*v31)(v30);
        std::string::basic_string<std::allocator<char>>(&val, v32, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v33 = (void (__fastcall **)(std::string *, ConfigGCGConditionCurCharacterNotChargedNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v33)(&val, this);
      }
      v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, &val);
      v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
      v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, -1);
      v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, 1514);
      v20 = -1;
      std::string::~string(&val);
      if ( v29 )
        std::allocator<char>::~allocator(&__a);
    }
  }
  std::string::~string(&v63);
  result = v20;
  if ( v65 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1527: range 000000000E158C28-000000000E159CBF
int32_t __cdecl ConfigGCGConditionGlobalFetchCurDieCardObjectImpl::checkCondition(
        ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // rbx
  const LogContext *v7; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const); // rax
  char v10; // bl
  ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v23; // r15
  void (__fastcall **v24)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const); // rax
  char v25; // r14
  ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *v26; // rdx
  __int64 (__fastcall **v27)(ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *); // rax
  const char *v28; // rax
  void (__fastcall **v29)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  const LogContext *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // r15
  void (__fastcall **v36)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const); // rax
  char v37; // r14
  ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *v38; // rdx
  __int64 (__fastcall **v39)(ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *); // rax
  const char *v40; // rax
  void (__fastcall **v41)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v42; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v43; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v44; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v45; // rax
  common::milog::MiLogStream *v46; // r14
  common::milog::MiLogStream *v47; // rax
  common::milog::MiLogStream *v48; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v49; // rax
  std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v50; // rax
  unsigned __int64 v51; // rdx
  common::milog::MiLogStream *v52; // rax
  const LogContext *v53; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v54; // r15
  void (__fastcall **v55)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const); // rax
  char v56; // r14
  ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *v57; // rdx
  __int64 (__fastcall **v58)(ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *); // rax
  const char *v59; // rax
  void (__fastcall **v60)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v61; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v62; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v63; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v64; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-121h] BYREF
  std::any current_context; // [rsp+30h] [rbp-120h] BYREF
  common::milog::MiLogStream v69; // [rsp+40h] [rbp-110h] BYREF
  std::string val; // [rsp+60h] [rbp-F0h] BYREF
  char v71[208]; // [rsp+80h] [rbp-D0h] BYREF

  v3 = (unsigned __int64)v71;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(160LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 32 4 11 result:1547 48 16 17 die_card_ptr:1533 80 48 18 child_context:1544";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchCurDieCardObjectImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61956;
  v5[536862722] = 62194;
  v5[536862724] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  if ( !std::operator==<GCGSkillUseParam>(0LL, &context->skill_param->trigger_window_param_ptr) )
  {
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    v20 = std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
    std::shared_ptr<GCGCard>::shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 48), &v20->die_card_ptr);
    if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 48)) )
    {
      common::milog::MiLogStream::create(
        &v69,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1536);
      v21 = common::milog::MiLogStream::operator<<<char [97],(char *[97])0>(
              &v69,
              (const char (*)[97])"ConfigGCGConditionGlobalFetchCurDieCardObject checkCondition get die_card_ptr is nullptr, param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v69);
      LogContext = GCGEffectContext::getLogContext(context);
      v23 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v24)(&v69, this);
      v25 = 0;
      if ( (unsigned __int8)std::string::empty(&v69) )
      {
        std::allocator<char>::allocator(&__a);
        v25 = 1;
        v26 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                           + 4);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v28 = (const char *)(*v27)(v26);
        std::string::basic_string<std::allocator<char>>(&val, v28, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v29 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v29)(&val, this);
      }
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v23, &val);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, -1);
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, 1537);
      v19 = -1;
      std::string::~string(&val);
      if ( v25 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      if ( !std::operator==<data::ConfigGCGLogicCondition>(0LL, &this->condition) )
      {
        GCGEffectContext::GCGEffectContext((GCGEffectContext *const)(v3 + 80), context);
        std::any::any<std::shared_ptr<GCGCard> &,std::shared_ptr<GCGCard>,std::any::_Manager_external<std::shared_ptr<GCGCard>>,true,true>(
          &current_context,
          (std::shared_ptr<GCGCard> *)(v3 + 48));
        GCGEffectContext::resetCurContext((GCGEffectContext *const)(v3 + 80), &current_context);
        std::any::~any(&current_context);
        common::milog::MiLogStream::create(
          &v69,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          1546);
        v46 = common::milog::MiLogStream::operator<<<char [53],(char *[53])0>(
                &v69,
                (const char (*)[53])"ConfigGCGConditionGlobalFetchCurDieCardObject skill:");
        GCGSkill::getName[abi:cxx11](&val, cur_skill);
        v47 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v46, &val);
        v48 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(
                v47,
                (const char (*)[17])" fetch die card:");
        v49 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
        *(_DWORD *)(v3 + 32) = GCGCard::getId(v49);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v48, (const unsigned int *)(v3 + 32));
        std::string::~string(&val);
        common::milog::MiLogStream::~MiLogStream(&v69);
        v50 = std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)&this->condition);
        if ( *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v50);
        v51 = (unsigned __int64)(v50->_vptr_ConfigGCGCondition + 7);
        if ( *(_BYTE *)((v51 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v50->_vptr_ConfigGCGCondition + 7);
        *(_DWORD *)(v3 + 32) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, unsigned __int64))v51)(
                                 v50,
                                 cur_skill,
                                 v3 + 80);
        common::milog::MiLogStream::create(
          (common::milog::MiLogStream *)&val,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          1548);
        v52 = common::milog::MiLogStream::operator<<<char [54],(char *[54])0>(
                (common::milog::MiLogStream *const)&val,
                (const char (*)[54])"ConfigGCGConditionGlobalFetchCurDieCardObject result:");
        common::milog::MiLogStream::operator<<<int,(int *)0>(v52, (const int *)(v3 + 32));
        common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
        v53 = GCGEffectContext::getLogContext(context);
        v54 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v53->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v55 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v55 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v55)(&v69, this);
        v56 = 0;
        if ( (unsigned __int8)std::string::empty(&v69) )
        {
          std::allocator<char>::allocator(&__a);
          v56 = 1;
          v57 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v58 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                             + 4);
          if ( *(_BYTE *)(((unsigned __int64)v58 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v59 = (const char *)(*v58)(v57);
          std::string::basic_string<std::allocator<char>>(&val, v59, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v60 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v60 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v60)(&val, this);
        }
        v61 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v54, &val);
        v62 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v61, ":");
        v63 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v62, *(_DWORD *)(v3 + 32));
        v64 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v63, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v64, 1549);
        v19 = *(_DWORD *)(v3 + 32);
        std::string::~string(&val);
        if ( v56 )
          std::allocator<char>::~allocator(&__a);
        std::string::~string(&v69);
        GCGEffectContext::~GCGEffectContext((GCGEffectContext *const)(v3 + 80));
        goto LABEL_91;
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&val,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1541);
      common::milog::MiLogStream::operator<<<char [71],(char *[71])0>(
        (common::milog::MiLogStream *const)&val,
        (const char (*)[71])"ConfigGCGConditionGlobalFetchCurDieCardObject not find child condition");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
      v34 = GCGEffectContext::getLogContext(context);
      v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v34->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v36 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v36 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v36)(&v69, this);
      v37 = 0;
      if ( (unsigned __int8)std::string::empty(&v69) )
      {
        std::allocator<char>::allocator(&__a);
        v37 = 1;
        v38 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v39 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                           + 4);
        if ( *(_BYTE *)(((unsigned __int64)v39 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v40 = (const char *)(*v39)(v38);
        std::string::basic_string<std::allocator<char>>(&val, v40, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v41 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v41)(&val, this);
      }
      v42 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, &val);
      v43 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v42, ":");
      v44 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v43, -1);
      v45 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v44, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v45, 1542);
      v19 = -1;
      std::string::~string(&val);
      if ( v37 )
        std::allocator<char>::~allocator(&__a);
    }
    std::string::~string(&v69);
LABEL_91:
    std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 48));
    goto LABEL_92;
  }
  common::milog::MiLogStream::create(
    &v69,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/card_game/skill/gcg_condition.cpp",
    "checkCondition",
    1530);
  v6 = common::milog::MiLogStream::operator<<<char [87],(char *[87])0>(
         &v69,
         (const char (*)[87])"ConfigGCGConditionGlobalFetchCurDieCardObject trigger_windows_param is nullptr, param:");
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
  common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
  std::string::~string(&val);
  common::milog::MiLogStream::~MiLogStream(&v69);
  v7 = GCGEffectContext::getLogContext(context);
  v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v7->data, "|");
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
    __asan_report_load8(this);
  v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
  if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
    __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
  (*v9)(&v69, this);
  v10 = 0;
  if ( (unsigned __int8)std::string::empty(&v69) )
  {
    std::allocator<char>::allocator(&__a);
    v10 = 1;
    v11 = this;
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                       + 4);
    if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
    v13 = (const char *)(*v12)(v11);
    std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v14)(&val, this);
  }
  v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
  v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
  v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
  v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1531);
  v19 = -1;
  std::string::~string(&val);
  if ( v10 )
    std::allocator<char>::~allocator(&__a);
  std::string::~string(&v69);
LABEL_92:
  result = v19;
  if ( v71 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8010) = -168430091;
  }
  return result;
};

// Line 1554: range 000000000E159CC0-000000000E15AD09
int32_t __cdecl ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl::checkCondition(
        ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // rbx
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const); // rax
  char v10; // bl
  ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  const LogContext *v22; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v23; // r15
  void (__fastcall **v24)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const); // rax
  char v25; // r14
  ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *v26; // rdx
  __int64 (__fastcall **v27)(ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *); // rax
  const char *v28; // rax
  void (__fastcall **v29)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v34; // rax
  common::milog::MiLogStream *v35; // r14
  const LogContext *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // r15
  void (__fastcall **v38)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const); // rax
  char v39; // r14
  ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *v40; // rdx
  __int64 (__fastcall **v41)(ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *); // rax
  const char *v42; // rax
  void (__fastcall **v43)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v44; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v45; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v46; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v47; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v48; // rax
  common::milog::MiLogStream *v49; // r14
  common::milog::MiLogStream *v50; // rax
  common::milog::MiLogStream *v51; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v52; // rax
  common::milog::MiLogStream *v53; // rax
  common::milog::MiLogStream *v54; // rax
  const LogContext *v55; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v56; // r15
  void (__fastcall **v57)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const); // rax
  char v58; // r14
  ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *v59; // rdx
  __int64 (__fastcall **v60)(ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *); // rax
  const char *v61; // rax
  void (__fastcall **v62)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v63; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v64; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v65; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v66; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-111h] BYREF
  common::milog::MiLogStream v70; // [rsp+30h] [rbp-110h] BYREF
  common::milog::MiLogStream v71; // [rsp+50h] [rbp-F0h] BYREF
  std::string val; // [rsp+70h] [rbp-D0h] BYREF
  char v73[176]; // [rsp+90h] [rbp-B0h] BYREF

  v3 = (unsigned __int64)v73;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(128LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "3 48 4 11 result:1572 64 16 17 die_card_ptr:1560 96 16 23 die_card_owner_ptr:1566";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -219021312;
  v5[536862723] = -202178560;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  if ( std::operator==<GCGSkillUseParam>(0LL, &context->skill_param->trigger_window_param_ptr) )
  {
    common::milog::MiLogStream::create(
      &v71,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1557);
    v6 = common::milog::MiLogStream::operator<<<char [88],(char *[88])0>(
           &v71,
           (const char (*)[88])"ConfigGCGConditionGlobalFetchCurDieCardOwnerID trigger_windows_param is nullptr, param:");
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v71);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v71, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v71) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1558);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v71);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    v20 = std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
    std::shared_ptr<GCGCard>::shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64), &v20->die_card_ptr);
    if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 64)) )
    {
      common::milog::MiLogStream::create(
        &v71,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1563);
      v21 = common::milog::MiLogStream::operator<<<char [98],(char *[98])0>(
              &v71,
              (const char (*)[98])"ConfigGCGConditionGlobalFetchCurDieCardOwnerID checkCondition get die_card_ptr is nullptr, param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v71);
      v22 = GCGEffectContext::getLogContext(context);
      v23 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v22->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v24)(&v71, this);
      v25 = 0;
      if ( (unsigned __int8)std::string::empty(&v71) )
      {
        std::allocator<char>::allocator(&__a);
        v25 = 1;
        v26 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *))(this->_vptr_ConfigGCGCondition
                                                                                            + 4);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v28 = (const char *)(*v27)(v26);
        std::string::basic_string<std::allocator<char>>(&val, v28, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v29 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v29)(&val, this);
      }
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v23, &val);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, -1);
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, 1564);
      v19 = -1;
      std::string::~string(&val);
      if ( v25 )
        std::allocator<char>::~allocator(&__a);
      std::string::~string(&v71);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      v34 = std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
      std::shared_ptr<GCGCard>::shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 96), &v34->die_card_owner_ptr);
      if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 96)) )
      {
        common::milog::MiLogStream::create(
          &v71,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          1569);
        v35 = common::milog::MiLogStream::operator<<<char [104],(char *[104])0>(
                &v71,
                (const char (*)[104])"ConfigGCGConditionGlobalFetchCurDieCardOwnerID checkCondition get die_card_owner_pt"
                                     "r is nullptr, param:");
        if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
          __asan_report_load8(context);
        GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
        common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v35, &val);
        std::string::~string(&val);
        common::milog::MiLogStream::~MiLogStream(&v71);
        v36 = GCGEffectContext::getLogContext(context);
        v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v36->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v38 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v38 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v38)(&v71, this);
        v39 = 0;
        if ( (unsigned __int8)std::string::empty(&v71) )
        {
          std::allocator<char>::allocator(&__a);
          v39 = 1;
          v40 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v41 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *))(this->_vptr_ConfigGCGCondition
                                                                                              + 4);
          if ( *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v42 = (const char *)(*v41)(v40);
          std::string::basic_string<std::allocator<char>>(&val, v42, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v43 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v43)(&val, this);
        }
        v44 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, &val);
        v45 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v44, ":");
        v46 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v45, -1);
        v47 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v46, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v47, 1570);
        v19 = -1;
        std::string::~string(&val);
        if ( v39 )
          std::allocator<char>::~allocator(&__a);
      }
      else
      {
        v48 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 96));
        *(_DWORD *)(v3 + 48) = GCGCard::getGuid(v48);
        common::milog::MiLogStream::create(
          &v70,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          1573);
        v49 = common::milog::MiLogStream::operator<<<char [74],(char *[74])0>(
                &v70,
                (const char (*)[74])"ConfigGCGConditionGlobalFetchCurDieCardOwnerID get die card owner, skill:");
        GCGSkill::getName[abi:cxx11]((std::string *)&v71, cur_skill);
        v50 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v49, (const std::string *)&v71);
        v51 = common::milog::MiLogStream::operator<<<char [12],(char *[12])0>(v50, (const char (*)[12])", die card:");
        v52 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
        GCGCard::getDesc[abi:cxx11](&val, v52);
        v53 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v51, &val);
        v54 = common::milog::MiLogStream::operator<<<char [10],(char *[10])0>(v53, (const char (*)[10])", result:");
        common::milog::MiLogStream::operator<<<int,(int *)0>(v54, (const int *)(v3 + 48));
        std::string::~string(&val);
        std::string::~string(&v71);
        common::milog::MiLogStream::~MiLogStream(&v70);
        v55 = GCGEffectContext::getLogContext(context);
        v56 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v55->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v57 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v57 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v57)(&v71, this);
        v58 = 0;
        if ( (unsigned __int8)std::string::empty(&v71) )
        {
          std::allocator<char>::allocator(&__a);
          v58 = 1;
          v59 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v60 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *))(this->_vptr_ConfigGCGCondition
                                                                                              + 4);
          if ( *(_BYTE *)(((unsigned __int64)v60 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v61 = (const char *)(*v60)(v59);
          std::string::basic_string<std::allocator<char>>(&val, v61, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v62 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerIDImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v62 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v62)(&val, this);
        }
        v63 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v56, &val);
        v64 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v63, ":");
        v65 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v64, *(_DWORD *)(v3 + 48));
        v66 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v65, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v66, 1574);
        v19 = *(_DWORD *)(v3 + 48);
        std::string::~string(&val);
        if ( v58 )
          std::allocator<char>::~allocator(&__a);
      }
      std::string::~string(&v71);
      std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 96));
    }
    std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  }
  result = v19;
  if ( v73 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1579: range 000000000E15AD0A-000000000E15C218
int32_t __cdecl ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl::checkCondition(
        ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // rbx
  const LogContext *v7; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r14
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const); // rax
  char v10; // bl
  ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r14d
  std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  common::milog::MiLogStream *v21; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v23; // r14
  void (__fastcall **v24)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const); // rax
  char v25; // r15
  ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *v26; // rdx
  __int64 (__fastcall **v27)(ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *); // rax
  const char *v28; // rax
  void (__fastcall **v29)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v30; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v34; // rax
  common::milog::MiLogStream *v35; // r14
  const LogContext *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // r14
  void (__fastcall **v38)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const); // rax
  char v39; // r15
  ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *v40; // rdx
  __int64 (__fastcall **v41)(ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *); // rax
  const char *v42; // rax
  void (__fastcall **v43)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v44; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v45; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v46; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v47; // rax
  const LogContext *v48; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // r14
  void (__fastcall **v50)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const); // rax
  char v51; // r15
  ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *v52; // rdx
  __int64 (__fastcall **v53)(ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *); // rax
  const char *v54; // rax
  void (__fastcall **v55)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v56; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v57; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v58; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v59; // rax
  common::milog::MiLogStream *v60; // r14
  common::milog::MiLogStream *v61; // rax
  common::milog::MiLogStream *v62; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v63; // rax
  std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v64; // rax
  unsigned __int64 v65; // rdx
  common::milog::MiLogStream *v66; // r14
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v67; // rax
  common::milog::MiLogStream *v68; // rax
  common::milog::MiLogStream *v69; // rax
  const LogContext *v70; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v71; // r14
  void (__fastcall **v72)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const); // rax
  char v73; // r15
  ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *v74; // rdx
  __int64 (__fastcall **v75)(ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *); // rax
  const char *v76; // rax
  void (__fastcall **v77)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v78; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v79; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v80; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v81; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-141h] BYREF
  std::any current_context; // [rsp+30h] [rbp-140h] BYREF
  common::milog::MiLogStream v86; // [rsp+40h] [rbp-130h] BYREF
  std::string val; // [rsp+60h] [rbp-110h] BYREF
  char v88[240]; // [rsp+80h] [rbp-F0h] BYREF

  v3 = (unsigned __int64)v88;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(192LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "4 32 4 11 result:1605 48 16 17 die_card_ptr:1585 80 16 23 die_card_owner_ptr:1591 112 48 18 child_context:1602";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = 61956;
  v5[536862722] = 62194;
  v5[536862723] = 62194;
  v5[536862725] = -202116109;
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  if ( !std::operator==<GCGSkillUseParam>(0LL, &context->skill_param->trigger_window_param_ptr) )
  {
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    v20 = std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
    std::shared_ptr<GCGCard>::shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 48), &v20->die_card_ptr);
    if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 48)) )
    {
      common::milog::MiLogStream::create(
        &v86,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1588);
      v21 = common::milog::MiLogStream::operator<<<char [102],(char *[102])0>(
              &v86,
              (const char (*)[102])"ConfigGCGConditionGlobalFetchCurDieCardOwnerObject checkCondition get die_card_ptr is"
                                   " nullptr, param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v21, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v86);
      LogContext = GCGEffectContext::getLogContext(context);
      v23 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v24 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v24 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v24)(&v86, this);
      v25 = 0;
      if ( (unsigned __int8)std::string::empty(&v86) )
      {
        std::allocator<char>::allocator(&__a);
        v25 = 1;
        v26 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v27 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                + 4);
        if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v28 = (const char *)(*v27)(v26);
        std::string::basic_string<std::allocator<char>>(&val, v28, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v29 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v29)(&val, this);
      }
      v30 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v23, &val);
      v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v30, ":");
      v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, -1);
      v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, 1589);
      v19 = -1;
      std::string::~string(&val);
      if ( v25 )
        std::allocator<char>::~allocator(&__a);
      std::string::~string(&v86);
      goto LABEL_115;
    }
    if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
      __asan_report_load8(context);
    v34 = std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGSkillUseParam,(__gnu_cxx::_Lock_policy)2,false,false> *const)&context->skill_param->trigger_window_param_ptr);
    std::shared_ptr<GCGCard>::shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 80), &v34->die_card_owner_ptr);
    if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 80)) )
    {
      common::milog::MiLogStream::create(
        &v86,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1594);
      v35 = common::milog::MiLogStream::operator<<<char [108],(char *[108])0>(
              &v86,
              (const char (*)[108])"ConfigGCGConditionGlobalFetchCurDieCardOwnerObject checkCondition get die_card_owner_"
                                   "ptr is nullptr, param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v35, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v86);
      v36 = GCGEffectContext::getLogContext(context);
      v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v36->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v38 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v38 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v38)(&v86, this);
      v39 = 0;
      if ( (unsigned __int8)std::string::empty(&v86) )
      {
        std::allocator<char>::allocator(&__a);
        v39 = 1;
        v40 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v41 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                + 4);
        if ( *(_BYTE *)(((unsigned __int64)v41 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v42 = (const char *)(*v41)(v40);
        std::string::basic_string<std::allocator<char>>(&val, v42, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v43 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v43)(&val, this);
      }
      v44 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, &val);
      v45 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v44, ":");
      v46 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v45, -1);
      v47 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v46, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v47, 1595);
      v19 = -1;
      std::string::~string(&val);
      if ( v39 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      if ( !std::operator==<data::ConfigGCGLogicCondition>(0LL, &this->condition) )
      {
        GCGEffectContext::GCGEffectContext((GCGEffectContext *const)(v3 + 112), context);
        std::any::any<std::shared_ptr<GCGCard> &,std::shared_ptr<GCGCard>,std::any::_Manager_external<std::shared_ptr<GCGCard>>,true,true>(
          &current_context,
          (std::shared_ptr<GCGCard> *)(v3 + 80));
        GCGEffectContext::resetCurContext((GCGEffectContext *const)(v3 + 112), &current_context);
        std::any::~any(&current_context);
        common::milog::MiLogStream::create(
          &v86,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          1604);
        v60 = common::milog::MiLogStream::operator<<<char [58],(char *[58])0>(
                &v86,
                (const char (*)[58])"ConfigGCGConditionGlobalFetchCurDieCardOwnerObject skill:");
        GCGSkill::getName[abi:cxx11](&val, cur_skill);
        v61 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v60, &val);
        v62 = common::milog::MiLogStream::operator<<<char [17],(char *[17])0>(
                v61,
                (const char (*)[17])" fetch die card:");
        v63 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 80));
        *(_DWORD *)(v3 + 32) = GCGCard::getId(v63);
        common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v62, (const unsigned int *)(v3 + 32));
        std::string::~string(&val);
        common::milog::MiLogStream::~MiLogStream(&v86);
        v64 = std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false> *const)&this->condition);
        if ( *(_BYTE *)(((unsigned __int64)v64 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v64);
        v65 = (unsigned __int64)(v64->_vptr_ConfigGCGCondition + 7);
        if ( *(_BYTE *)((v65 >> 3) + 0x7FFF8000) )
          __asan_report_load8(v64->_vptr_ConfigGCGCondition + 7);
        *(_DWORD *)(v3 + 32) = (*(__int64 (__fastcall **)(std::__shared_ptr_access<data::ConfigGCGLogicCondition,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *, const GCGSkill *, unsigned __int64))v65)(
                                 v64,
                                 cur_skill,
                                 v3 + 112);
        common::milog::MiLogStream::create(
          &v86,
          &common::milog::MiLogDefault::default_log_obj_,
          1u,
          "./src/card_game/skill/gcg_condition.cpp",
          "checkCondition",
          1606);
        v66 = common::milog::MiLogStream::operator<<<char [62],(char *[62])0>(
                &v86,
                (const char (*)[62])"ConfigGCGConditionGlobalFetchCurDieCardOwnerObject, die card:");
        v67 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 48));
        GCGCard::getDesc[abi:cxx11](&val, v67);
        v68 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v66, &val);
        v69 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v68, (const char (*)[9])" result:");
        common::milog::MiLogStream::operator<<<int,(int *)0>(v69, (const int *)(v3 + 32));
        std::string::~string(&val);
        common::milog::MiLogStream::~MiLogStream(&v86);
        v70 = GCGEffectContext::getLogContext(context);
        v71 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v70->data, "|");
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v72 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v72 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v72)(&v86, this);
        v73 = 0;
        if ( (unsigned __int8)std::string::empty(&v86) )
        {
          std::allocator<char>::allocator(&__a);
          v73 = 1;
          v74 = this;
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v75 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                  + 4);
          if ( *(_BYTE *)(((unsigned __int64)v75 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
          v76 = (const char *)(*v75)(v74);
          std::string::basic_string<std::allocator<char>>(&val, v76, &__a);
        }
        else
        {
          if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
            __asan_report_load8(this);
          v77 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
          if ( *(_BYTE *)(((unsigned __int64)v77 >> 3) + 0x7FFF8000) )
            __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
          (*v77)(&val, this);
        }
        v78 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v71, &val);
        v79 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v78, ":");
        v80 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v79, *(_DWORD *)(v3 + 32));
        v81 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v80, ":");
        common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v81, 1607);
        v19 = *(_DWORD *)(v3 + 32);
        std::string::~string(&val);
        if ( v73 )
          std::allocator<char>::~allocator(&__a);
        std::string::~string(&v86);
        GCGEffectContext::~GCGEffectContext((GCGEffectContext *const)(v3 + 112));
        goto LABEL_114;
      }
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&val,
        &common::milog::MiLogDefault::default_log_obj_,
        3u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1599);
      common::milog::MiLogStream::operator<<<char [76],(char *[76])0>(
        (common::milog::MiLogStream *const)&val,
        (const char (*)[76])"ConfigGCGConditionGlobalFetchCurDieCardOwnerObject not find child condition");
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
      v48 = GCGEffectContext::getLogContext(context);
      v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v48->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v50 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v50 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v50)(&v86, this);
      v51 = 0;
      if ( (unsigned __int8)std::string::empty(&v86) )
      {
        std::allocator<char>::allocator(&__a);
        v51 = 1;
        v52 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v53 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                                + 4);
        if ( *(_BYTE *)(((unsigned __int64)v53 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v54 = (const char *)(*v53)(v52);
        std::string::basic_string<std::allocator<char>>(&val, v54, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v55 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v55 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v55)(&val, this);
      }
      v56 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, &val);
      v57 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v56, ":");
      v58 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v57, -1);
      v59 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v58, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v59, 1600);
      v19 = -1;
      std::string::~string(&val);
      if ( v51 )
        std::allocator<char>::~allocator(&__a);
    }
    std::string::~string(&v86);
LABEL_114:
    std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 80));
LABEL_115:
    std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 48));
    goto LABEL_116;
  }
  common::milog::MiLogStream::create(
    &v86,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/card_game/skill/gcg_condition.cpp",
    "checkCondition",
    1582);
  v6 = common::milog::MiLogStream::operator<<<char [92],(char *[92])0>(
         &v86,
         (const char (*)[92])"ConfigGCGConditionGlobalFetchCurDieCardOwnerObject trigger_windows_param is nullptr, param:");
  if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
    __asan_report_load8(context);
  GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
  common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
  std::string::~string(&val);
  common::milog::MiLogStream::~MiLogStream(&v86);
  v7 = GCGEffectContext::getLogContext(context);
  v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v7->data, "|");
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
    __asan_report_load8(this);
  v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
  if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
    __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
  (*v9)(&v86, this);
  v10 = 0;
  if ( (unsigned __int8)std::string::empty(&v86) )
  {
    std::allocator<char>::allocator(&__a);
    v10 = 1;
    v11 = this;
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *))(this->_vptr_ConfigGCGCondition
                                                                                            + 4);
    if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
    v13 = (const char *)(*v12)(v11);
    std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurDieCardOwnerObjectImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v14)(&val, this);
  }
  v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
  v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
  v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
  v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1583);
  v19 = -1;
  std::string::~string(&val);
  if ( v10 )
    std::allocator<char>::~allocator(&__a);
  std::string::~string(&v86);
LABEL_116:
  result = v19;
  if ( v88 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1612: range 000000000E15C21A-000000000E15C619
int32_t __cdecl ConfigGCGConditionGlobalFetchCurRoundNumImpl::checkCondition(
        ConfigGCGConditionGlobalFetchCurRoundNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  unsigned __int64 v5; // r12
  GCGGameMode *GameMode; // rax
  GCGDuel *Duel; // rax
  common::milog::MiLogStream *v8; // rax
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v10; // r15
  void (__fastcall **v11)(char *, ConfigGCGConditionGlobalFetchCurRoundNumImpl *const); // rax
  char v12; // r14
  ConfigGCGConditionGlobalFetchCurRoundNumImpl *v13; // rdx
  __int64 (__fastcall **v14)(ConfigGCGConditionGlobalFetchCurRoundNumImpl *); // rax
  const char *v15; // rax
  void (__fastcall **v16)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurRoundNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v20; // rax
  int32_t v21; // r13d
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-B1h] BYREF
  char v25[32]; // [rsp+30h] [rbp-B0h] BYREF
  common::milog::MiLogStream v26; // [rsp+50h] [rbp-90h] BYREF
  char v27[112]; // [rsp+70h] [rbp-70h] BYREF

  v3 = (unsigned __int64)v27;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_0(64LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "1 32 4 11 result:1613";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchCurRoundNumImpl::checkCondition;
  v5 = v3 >> 3;
  *(_DWORD *)(v5 + 2147450880) = -235802127;
  *(_DWORD *)(v5 + 2147450884) = -202116348;
  GameMode = GCGSkill::getGameMode(cur_skill);
  Duel = GCGGameMode::getDuel(GameMode);
  *(_DWORD *)(v3 + 32) = GCGDuel::getRound(Duel);
  common::milog::MiLogStream::create(
    &v26,
    &common::milog::MiLogDefault::default_log_obj_,
    1u,
    "./src/card_game/skill/gcg_condition.cpp",
    "checkCondition",
    1614);
  v8 = common::milog::MiLogStream::operator<<<char [50],(char *[50])0>(
         &v26,
         (const char (*)[50])"ConfigGCGConditionGlobalFetchCurRoundNum, result:");
  common::milog::MiLogStream::operator<<<int,(int *)0>(v8, (const int *)(v3 + 32));
  common::milog::MiLogStream::~MiLogStream(&v26);
  LogContext = GCGEffectContext::getLogContext(context);
  v10 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
  if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
    __asan_report_load8(this);
  v11 = (void (__fastcall **)(char *, ConfigGCGConditionGlobalFetchCurRoundNumImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                          + 8);
  if ( *(_BYTE *)(((unsigned __int64)v11 >> 3) + 0x7FFF8000) )
    __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
  (*v11)(v25, this);
  v12 = 0;
  if ( (unsigned __int8)std::string::empty(v25) )
  {
    std::allocator<char>::allocator(&__a);
    v12 = 1;
    v13 = this;
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v14 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurRoundNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
    if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
    v15 = (const char *)(*v14)(v13);
    std::string::basic_string<std::allocator<char>>((std::string *const)&v26, v15, &__a);
  }
  else
  {
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v16 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurRoundNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v16 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v16)(&v26, this);
  }
  v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v10, (const std::string *)&v26);
  v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
  v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, *(_DWORD *)(v3 + 32));
  v20 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, ":");
  common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v20, 1615);
  v21 = *(_DWORD *)(v3 + 32);
  std::string::~string(&v26);
  if ( v12 )
    std::allocator<char>::~allocator(&__a);
  std::string::~string(v25);
  result = v21;
  if ( v27 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1620: range 000000000E15C61A-000000000E15CDF5
int32_t __cdecl ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl::checkCondition(
        ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  GCGGameMode *GameMode; // rax
  GCGDuel *Duel; // rax
  GCGCharacterZone *CharacterZone; // rax
  common::milog::MiLogStream *v24; // rax
  const LogContext *v25; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v26; // r15
  void (__fastcall **v27)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *const); // rax
  char v28; // r14
  ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *v29; // rdx
  __int64 (__fastcall **v30)(ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *); // rax
  const char *v31; // rax
  void (__fastcall **v32)(std::string *, ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+23h] [rbp-DDh] BYREF
  GCGControllerValue cur_controller_id; // [rsp+24h] [rbp-DCh]
  GCGField *field; // [rsp+28h] [rbp-D8h]
  common::milog::MiLogStream v42; // [rsp+30h] [rbp-D0h] BYREF
  std::string val; // [rsp+50h] [rbp-B0h] BYREF
  char v44[144]; // [rsp+70h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v44;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 11 result:1629 64 16 18 this_card_ptr:1621";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 64));
  if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v42,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1624);
    v6 = common::milog::MiLogStream::operator<<<char [105],(char *[105])0>(
           &v42,
           (const char (*)[105])"ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNum this_card_ptr is"
                                " nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v42);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v42, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v42) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1625);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v20 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    cur_controller_id = GCGCard::getControllerId(v20);
    GameMode = GCGSkill::getGameMode(cur_skill);
    Duel = GCGGameMode::getDuel(GameMode);
    field = GCGDuel::getField(Duel, cur_controller_id);
    CharacterZone = GCGField::getCharacterZone(field);
    *(_DWORD *)(v3 + 48) = GCGCharacterZone::getCurOnstageUseSkillCount(CharacterZone);
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&val,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1630);
    v24 = common::milog::MiLogStream::operator<<<char [81],(char *[81])0>(
            (common::milog::MiLogStream *const)&val,
            (const char (*)[81])"ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNum, result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v24, (const int *)(v3 + 48));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
    v25 = GCGEffectContext::getLogContext(context);
    v26 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v25->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v27 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v27)(&v42, this);
    v28 = 0;
    if ( (unsigned __int8)std::string::empty(&v42) )
    {
      std::allocator<char>::allocator(&__a);
      v28 = 1;
      v29 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v30 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v31 = (const char *)(*v30)(v29);
      std::string::basic_string<std::allocator<char>>(&val, v31, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v32 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchCurOnStageCharacterAfterOnStageUseSkillNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v32)(&val, this);
    }
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v26, &val);
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, ":");
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, *(_DWORD *)(v3 + 48));
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, 1631);
    v19 = *(_DWORD *)(v3 + 48);
    std::string::~string(&val);
    if ( v28 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v42);
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v19;
  if ( v44 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1636: range 000000000E15CDF6-000000000E15D5D9
int32_t __cdecl ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl::checkCondition(
        ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // rbx
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v20; // rax
  GCGGameMode *GameMode; // rax
  GCGDuel *Duel; // rax
  int v23; // eax
  common::milog::MiLogStream *v24; // rax
  const LogContext *v25; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v26; // r15
  void (__fastcall **v27)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *const); // rax
  char v28; // r14
  ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *v29; // rdx
  __int64 (__fastcall **v30)(ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *); // rax
  const char *v31; // rax
  void (__fastcall **v32)(std::string *, ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+23h] [rbp-DDh] BYREF
  GCGControllerValue cur_controller_id; // [rsp+24h] [rbp-DCh]
  GCGField *field; // [rsp+28h] [rbp-D8h]
  common::milog::MiLogStream v42; // [rsp+30h] [rbp-D0h] BYREF
  std::string val; // [rsp+50h] [rbp-B0h] BYREF
  char v44[144]; // [rsp+70h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v44;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 11 result:1646 64 16 18 this_card_ptr:1637";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 64));
  if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v42,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1640);
    v6 = common::milog::MiLogStream::operator<<<char [80],(char *[80])0>(
           &v42,
           (const char (*)[80])"ConfigGCGConditionGlobalCheckIsCurRoundOnStage this_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v42);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v42, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v42) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1641);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v20 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    cur_controller_id = GCGCard::getControllerId(v20);
    GameMode = GCGSkill::getGameMode(cur_skill);
    Duel = GCGGameMode::getDuel(GameMode);
    field = GCGDuel::getField(Duel, cur_controller_id);
    if ( GCGField::getChangeOnStageCharacterGuid(field) )
      v23 = 0;
    else
      v23 = -1;
    *(_DWORD *)(v3 + 48) = v23;
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&val,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1647);
    v24 = common::milog::MiLogStream::operator<<<char [56],(char *[56])0>(
            (common::milog::MiLogStream *const)&val,
            (const char (*)[56])"ConfigGCGConditionGlobalCheckIsCurRoundOnStage, result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v24, (const int *)(v3 + 48));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
    v25 = GCGEffectContext::getLogContext(context);
    v26 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v25->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v27 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v27)(&v42, this);
    v28 = 0;
    if ( (unsigned __int8)std::string::empty(&v42) )
    {
      std::allocator<char>::allocator(&__a);
      v28 = 1;
      v29 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v30 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *))(this->_vptr_ConfigGCGCondition
                                                                                          + 4);
      if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v31 = (const char *)(*v30)(v29);
      std::string::basic_string<std::allocator<char>>(&val, v31, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v32 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalCheckIsCurRoundOnStageImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v32)(&val, this);
    }
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v26, &val);
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, ":");
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, *(_DWORD *)(v3 + 48));
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, 1648);
    v19 = *(_DWORD *)(v3 + 48);
    std::string::~string(&val);
    if ( v28 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v42);
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v19;
  if ( v44 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1653: range 000000000E15D5DA-000000000E15DED9
int32_t __cdecl ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl::checkCondition(
        ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r12
  __int64 v4; // rax
  _DWORD *v5; // r13
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  GCGGameMode *GameMode; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  GCGCharacterZone *CharacterZone; // rax
  GCGCharacterZone *v23; // rax
  common::milog::MiLogStream *v24; // rax
  const LogContext *v25; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v26; // r15
  void (__fastcall **v27)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *const); // rax
  char v28; // r14
  ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *v29; // rdx
  __int64 (__fastcall **v30)(ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *); // rax
  const char *v31; // rax
  void (__fastcall **v32)(std::string *, ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+2Fh] [rbp-F1h] BYREF
  GCGControllerValue cur_controller_id; // [rsp+30h] [rbp-F0h]
  GCGControllerValue other_controller_id; // [rsp+34h] [rbp-ECh]
  GCGDuel *duel; // [rsp+38h] [rbp-E8h]
  GCGField *field; // [rsp+40h] [rbp-E0h]
  GCGField *field_0; // [rsp+48h] [rbp-D8h]
  common::milog::MiLogStream v45; // [rsp+50h] [rbp-D0h] BYREF
  std::string val; // [rsp+70h] [rbp-B0h] BYREF
  char v47[144]; // [rsp+90h] [rbp-90h] BYREF

  v3 = (unsigned __int64)v47;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_1(96LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "2 48 4 11 result:1661 64 16 18 this_card_ptr:1654";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = -202178560;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 64));
  if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 64)) )
  {
    common::milog::MiLogStream::create(
      &v45,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1657);
    v6 = common::milog::MiLogStream::operator<<<char [89],(char *[89])0>(
           &v45,
           (const char (*)[89])"ConfigGCGConditionGlobalFetchAliveBackStageCharacterNum this_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v45);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v45, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v45) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1658);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    GameMode = GCGSkill::getGameMode(cur_skill);
    duel = GCGGameMode::getDuel(GameMode);
    *(_DWORD *)(v3 + 48) = 0;
    v21 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 64));
    cur_controller_id = GCGCard::getControllerId(v21);
    if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->camp_type);
    }
    if ( this->camp_type <= (unsigned int)CAMP_FRIENDLY )
    {
      field = GCGDuel::getField(duel, cur_controller_id);
      CharacterZone = GCGField::getCharacterZone(field);
      *(_DWORD *)(v3 + 48) += GCGCharacterZone::getAliveBackstageCharacterNum(CharacterZone);
    }
    if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->camp_type);
    }
    if ( this->camp_type == CAMP_ENEMY || this->camp_type == CAMP_BOTH )
    {
      other_controller_id = (unsigned int)GCGDuel::getOtherControllerId(duel, cur_controller_id);
      field_0 = GCGDuel::getField(duel, other_controller_id);
      v23 = GCGField::getCharacterZone(field_0);
      *(_DWORD *)(v3 + 48) += GCGCharacterZone::getAliveBackstageCharacterNum(v23);
    }
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&val,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1674);
    v24 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
            (common::milog::MiLogStream *const)&val,
            (const char (*)[65])"ConfigGCGConditionGlobalFetchAliveBackStageCharacterNum, result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v24, (const int *)(v3 + 48));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
    v25 = GCGEffectContext::getLogContext(context);
    v26 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v25->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v27 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v27 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v27)(&v45, this);
    v28 = 0;
    if ( (unsigned __int8)std::string::empty(&v45) )
    {
      std::allocator<char>::allocator(&__a);
      v28 = 1;
      v29 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v30 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v31 = (const char *)(*v30)(v29);
      std::string::basic_string<std::allocator<char>>(&val, v31, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v32 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchAliveBackStageCharacterNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v32 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v32)(&val, this);
    }
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v26, &val);
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, ":");
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, *(_DWORD *)(v3 + 48));
    v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, 1675);
    v19 = *(_DWORD *)(v3 + 48);
    std::string::~string(&val);
    if ( v28 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v45);
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 64));
  result = v19;
  if ( v47 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8008) = -168430091;
  }
  return result;
};

// Line 1680: range 000000000E15DEDA-000000000E15E110
int32_t __cdecl ConfigGCGConditionCheckCurCardTypeImpl::checkCondition(
        ConfigGCGConditionCheckCurCardTypeImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurCardTypeImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurCardTypeImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurCardTypeImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1681);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1685: range 000000000E15E112-000000000E15E8CF
int32_t __cdecl ConfigGCGConditionCheckCurCardTypeImpl::checkCondition(
        ConfigGCGConditionCheckCurCardTypeImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r13
  common::milog::MiLogStream *v7; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // r14
  void (__fastcall **v10)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardTypeImpl *const); // rax
  char v11; // r12
  ConfigGCGConditionCheckCurCardTypeImpl *v12; // rdx
  __int64 (__fastcall **v13)(ConfigGCGConditionCheckCurCardTypeImpl *); // rax
  const char *v14; // rax
  void (__fastcall **v15)(std::string *, ConfigGCGConditionCheckCurCardTypeImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  int32_t v20; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  GCGCardType CardType; // ecx
  common::milog::MiLogStream *v23; // rax
  const LogContext *v24; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v25; // r15
  void (__fastcall **v26)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardTypeImpl *const); // rax
  char v27; // r14
  ConfigGCGConditionCheckCurCardTypeImpl *v28; // rdx
  __int64 (__fastcall **v29)(ConfigGCGConditionCheckCurCardTypeImpl *); // rax
  const char *v30; // rax
  void (__fastcall **v31)(std::string *, ConfigGCGConditionCheckCurCardTypeImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Fh] [rbp-B1h] BYREF
  common::milog::MiLogStream v40; // [rsp+40h] [rbp-B0h] BYREF
  std::string val; // [rsp+60h] [rbp-90h] BYREF
  char v42[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v42;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 11 result:1691";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCheckCurCardTypeImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGCard const>(cur_card_ptr, 0LL) )
  {
    common::milog::MiLogStream::create(
      &v40,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1688);
    v7 = common::milog::MiLogStream::operator<<<char [67],(char *[67])0>(
           &v40,
           (const char (*)[67])"ConfigGCGConditionCheckCurCardType cur_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v40);
    LogContext = GCGEffectContext::getLogContext(context);
    v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v10 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardTypeImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v10)(&v40, this);
    v11 = 0;
    if ( (unsigned __int8)std::string::empty(&v40) )
    {
      std::allocator<char>::allocator(&__a);
      v11 = 1;
      v12 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCardTypeImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v14 = (const char *)(*v13)(v12);
      std::string::basic_string<std::allocator<char>>(&val, v14, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v15 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCardTypeImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                               + 8);
      if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v15)(&val, this);
    }
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, &val);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, -1);
    v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, 1689);
    v20 = -1;
    std::string::~string(&val);
    if ( v11 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    *(_DWORD *)(v4 + 32) = -1;
    v21 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    CardType = GCGCard::getCardType(v21);
    if ( *(_BYTE *)(((unsigned __int64)&this->card_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->card_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->card_type);
    }
    if ( CardType == this->card_type )
      *(_DWORD *)(v4 + 32) = 0;
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&val,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1696);
    v23 = common::milog::MiLogStream::operator<<<char [44],(char *[44])0>(
            (common::milog::MiLogStream *const)&val,
            (const char (*)[44])"ConfigGCGConditionCheckCurCardType, result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v23, (const int *)(v4 + 32));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
    v24 = GCGEffectContext::getLogContext(context);
    v25 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v24->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v26 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCardTypeImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v26 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v26)(&v40, this);
    v27 = 0;
    if ( (unsigned __int8)std::string::empty(&v40) )
    {
      std::allocator<char>::allocator(&__a);
      v27 = 1;
      v28 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v29 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCardTypeImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v29 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v30 = (const char *)(*v29)(v28);
      std::string::basic_string<std::allocator<char>>(&val, v30, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v31 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCardTypeImpl *const))(this->_vptr_ConfigGCGCondition
                                                                                               + 8);
      if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v31)(&val, this);
    }
    v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v25, &val);
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, ":");
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, *(_DWORD *)(v4 + 32));
    v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, 1697);
    v20 = *(_DWORD *)(v4 + 32);
    std::string::~string(&val);
    if ( v27 )
      std::allocator<char>::~allocator(&__a);
  }
  std::string::~string(&v40);
  result = v20;
  if ( v42 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1702: range 000000000E15E8D0-000000000E15F1F9
int32_t __cdecl ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl::checkCondition(
        ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  unsigned __int64 v3; // r13
  __int64 v4; // rax
  _DWORD *v5; // r12
  common::milog::MiLogStream *v6; // r14
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v8; // r15
  void (__fastcall **v9)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *const); // rax
  char v10; // r14
  ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *v11; // rdx
  __int64 (__fastcall **v12)(ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *); // rax
  const char *v13; // rax
  void (__fastcall **v14)(std::string *, ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v15; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  int32_t v19; // r15d
  GCGGameMode *GameMode; // rax
  std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // rax
  const LogContext *v23; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v24; // r15
  void (__fastcall **v25)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *const); // rax
  char v26; // r14
  ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *v27; // rdx
  __int64 (__fastcall **v28)(ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *); // rax
  const char *v29; // rax
  void (__fastcall **v30)(std::string *, ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v31; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v32; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v33; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+27h] [rbp-139h] BYREF
  GCGDuel *duel; // [rsp+28h] [rbp-138h]
  common::milog::MiLogStream v39; // [rsp+30h] [rbp-130h] BYREF
  std::string val; // [rsp+50h] [rbp-110h] BYREF
  char v41[240]; // [rsp+70h] [rbp-F0h] BYREF

  v3 = (unsigned __int64)v41;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v4 = __asan_stack_malloc_2(192LL);
    if ( v4 )
      v3 = v4;
  }
  *(_QWORD *)v3 = 1102416563LL;
  *(_QWORD *)(v3 + 8) = "4 48 4 22 cur_controller_id:1710 64 4 11 result:1721 80 16 18 this_card_ptr:1703 112 48 22 contr"
                        "oller_id_set:1711";
  *(_QWORD *)(v3 + 16) = ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl::checkCondition;
  v5 = (_DWORD *)(v3 >> 3);
  v5[536862720] = -235802127;
  v5[536862721] = -234556943;
  v5[536862722] = 61956;
  v5[536862723] = 62194;
  v5[536862725] = -202116109;
  GCGSkill::getOwnerCard((const GCGSkill *const)(v3 + 80));
  if ( std::operator==<GCGCard>(0LL, (const std::shared_ptr<GCGCard> *)(v3 + 80)) )
  {
    common::milog::MiLogStream::create(
      &v39,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1706);
    v6 = common::milog::MiLogStream::operator<<<char [93],(char *[93])0>(
           &v39,
           (const char (*)[93])"ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl this_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v6, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v39);
    LogContext = GCGEffectContext::getLogContext(context);
    v8 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v9 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v9 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v9)(&v39, this);
    v10 = 0;
    if ( (unsigned __int8)std::string::empty(&v39) )
    {
      std::allocator<char>::allocator(&__a);
      v10 = 1;
      v11 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v12 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v12 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v13 = (const char *)(*v12)(v11);
      std::string::basic_string<std::allocator<char>>(&val, v13, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v14 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v14 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v14)(&val, this);
    }
    v15 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v8, &val);
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v15, ":");
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, -1);
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, 1707);
    v19 = -1;
    std::string::~string(&val);
    if ( v10 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v39);
  }
  else
  {
    GameMode = GCGSkill::getGameMode(cur_skill);
    duel = GCGGameMode::getDuel(GameMode);
    v21 = std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)(v3 + 80));
    *(_DWORD *)(v3 + 48) = GCGCard::getControllerId(v21);
    std::set<proto::GCGControllerValue>::set((std::set<proto::GCGControllerValue> *const)(v3 + 112));
    if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->camp_type);
    }
    if ( this->camp_type <= (unsigned int)CAMP_FRIENDLY )
      std::set<proto::GCGControllerValue>::emplace<proto::GCGControllerValue&>(
        (std::set<proto::GCGControllerValue> *const)(v3 + 112),
        (proto::GCGControllerValue *)(v3 + 48),
        (proto::GCGControllerValue *)(v3 + 48));
    if ( *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) != 0
      && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->camp_type >> 3) + 0x7FFF8000) )
    {
      __asan_report_load4(&this->camp_type);
    }
    if ( this->camp_type == CAMP_ENEMY || this->camp_type == CAMP_BOTH )
    {
      *(_DWORD *)(v3 + 64) = GCGDuel::getOtherControllerId(duel, (GCGControllerValue)*(_DWORD *)(v3 + 48));
      std::set<proto::GCGControllerValue>::emplace<proto::GCGControllerValue&>(
        (std::set<proto::GCGControllerValue> *const)(v3 + 112),
        (proto::GCGControllerValue *)(v3 + 64),
        (proto::GCGControllerValue *)(v3 + 64));
    }
    *(_DWORD *)(v3 + 64) = GCGDuel::getBeforeOperationDiceSumByControllerSet(
                             duel,
                             (const std::set<proto::GCGControllerValue> *)(v3 + 112));
    common::milog::MiLogStream::create(
      (common::milog::MiLogStream *)&val,
      &common::milog::MiLogDefault::default_log_obj_,
      1u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1722);
    v22 = common::milog::MiLogStream::operator<<<char [65],(char *[65])0>(
            (common::milog::MiLogStream *const)&val,
            (const char (*)[65])"ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNum, result:");
    common::milog::MiLogStream::operator<<<int,(int *)0>(v22, (const int *)(v3 + 64));
    common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
    v23 = GCGEffectContext::getLogContext(context);
    v24 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v23->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v25 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v25 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v25)(&v39, this);
    v26 = 0;
    if ( (unsigned __int8)std::string::empty(&v39) )
    {
      std::allocator<char>::allocator(&__a);
      v26 = 1;
      v27 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v28 = (__int64 (__fastcall **)(ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v29 = (const char *)(*v28)(v27);
      std::string::basic_string<std::allocator<char>>(&val, v29, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v30 = (void (__fastcall **)(std::string *, ConfigGCGConditionGlobalFetchBeforeOperationCampDiceNumImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v30 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v30)(&val, this);
    }
    v31 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v24, &val);
    v32 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v31, ":");
    v33 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v32, *(_DWORD *)(v3 + 64));
    v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v33, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, 1723);
    v19 = *(_DWORD *)(v3 + 64);
    std::string::~string(&val);
    if ( v26 )
      std::allocator<char>::~allocator(&__a);
    std::string::~string(&v39);
    std::set<proto::GCGControllerValue>::~set((std::set<proto::GCGControllerValue> *const)(v3 + 112));
  }
  std::shared_ptr<GCGCard>::~shared_ptr((std::shared_ptr<GCGCard> *const)(v3 + 80));
  result = v19;
  if ( v41 == (char *)v3 )
  {
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0LL;
    *(_DWORD *)((v3 >> 3) + 0x7FFF8014) = 0;
  }
  else
  {
    *(_QWORD *)v3 = 1172321806LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8008) = 0xF5F5F5F5F5F5F5F5LL;
    *(_QWORD *)((v3 >> 3) + 0x7FFF8010) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1728: range 000000000E15F1FA-000000000E15F430
int32_t __cdecl ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl::checkCondition(
        ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl::checkCondition(
           this,
           cur_skill,
           context,
           &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl::checkCondition(
               this,
               cur_skill,
               context,
               v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1729);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1733: range 000000000E15F432-000000000E16014C
int32_t __cdecl ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl::checkCondition(
        ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r13
  common::milog::MiLogStream *v7; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // r14
  void (__fastcall **v10)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const); // rax
  char v11; // r12
  ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *v12; // rdx
  __int64 (__fastcall **v13)(ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *); // rax
  const char *v14; // rax
  void (__fastcall **v15)(std::string *, ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  int32_t v20; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // r12
  const LogContext *v26; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // r14
  void (__fastcall **v28)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const); // rax
  char v29; // r12
  ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *v30; // rdx
  __int64 (__fastcall **v31)(ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *); // rax
  const char *v32; // rax
  void (__fastcall **v33)(std::string *, ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v38; // rax
  GCGGameMode *GameMode; // rax
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v40; // rax
  uint32_t Guid; // eax
  unsigned int *v42; // rax
  unsigned int *v43; // rdx
  data::GCGEffectDamageElementType element_type; // r14d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v45; // rax
  common::milog::MiLogStream *v46; // r14
  common::milog::MiLogStream *v47; // rax
  common::milog::MiLogStream *v48; // rax
  const LogContext *v49; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // r15
  void (__fastcall **v51)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const); // rax
  char v52; // r14
  ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *v53; // rdx
  __int64 (__fastcall **v54)(ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *); // rax
  const char *v55; // rax
  void (__fastcall **v56)(std::string *, ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v57; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v58; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v59; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v60; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Fh] [rbp-E1h] BYREF
  GCGControllerValue cur_controller_id; // [rsp+40h] [rbp-E0h]
  unsigned int damage_element_type; // [rsp+44h] [rbp-DCh]
  std::set<unsigned int>::iterator __for_begin; // [rsp+48h] [rbp-D8h] BYREF
  std::set<unsigned int>::iterator __for_end; // [rsp+50h] [rbp-D0h] BYREF
  GCGDuel *duel; // [rsp+58h] [rbp-C8h]
  const std::set<unsigned int> *damage_element_type_set; // [rsp+60h] [rbp-C0h]
  const std::set<unsigned int> *__for_range; // [rsp+68h] [rbp-B8h]
  common::milog::MiLogStream v72; // [rsp+70h] [rbp-B0h] BYREF
  std::string val; // [rsp+90h] [rbp-90h] BYREF
  char v74[112]; // [rsp+B0h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v74;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 11 result:1748";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGCard const>(0LL, cur_card_ptr) )
  {
    common::milog::MiLogStream::create(
      &v72,
      &common::milog::MiLogDefault::default_log_obj_,
      4u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1736);
    v7 = common::milog::MiLogStream::operator<<<char [99],(char *[99])0>(
           &v72,
           (const char (*)[99])"ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementType cur_context is not card type, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v72);
    LogContext = GCGEffectContext::getLogContext(context);
    v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v10 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v10)(&v72, this);
    v11 = 0;
    if ( (unsigned __int8)std::string::empty(&v72) )
    {
      std::allocator<char>::allocator(&__a);
      v11 = 1;
      v12 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v14 = (const char *)(*v13)(v12);
      std::string::basic_string<std::allocator<char>>(&val, v14, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v15 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v15)(&val, this);
    }
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, &val);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, -1);
    v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, 1737);
    v20 = -1;
    std::string::~string(&val);
    if ( v11 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v21 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    if ( GCGCard::getCardType(v21) == GCG_CARD_CHARACTER )
    {
      v38 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      cur_controller_id = GCGCard::getControllerId(v38);
      GameMode = GCGSkill::getGameMode(cur_skill);
      duel = GCGGameMode::getDuel(GameMode);
      v40 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      Guid = GCGCard::getGuid(v40);
      damage_element_type_set = GCGDuel::getCharacterBeingHurtDamageElementTypeSet(duel, Guid);
      *(_DWORD *)(v4 + 32) = -1;
      __for_range = damage_element_type_set;
      __for_begin._M_node = std::set<unsigned int>::begin(damage_element_type_set)._M_node;
      __for_end._M_node = std::set<unsigned int>::end(damage_element_type_set)._M_node;
      while ( std::operator!=(&__for_begin, &__for_end) )
      {
        v42 = (unsigned int *)std::_Rb_tree_const_iterator<unsigned int>::operator*(&__for_begin);
        v43 = v42;
        if ( *(_BYTE *)(((unsigned __int64)v42 >> 3) + 0x7FFF8000) != 0
          && (char)(((unsigned __int8)v42 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v42 >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(v42);
        }
        damage_element_type = *v43;
        if ( *(_BYTE *)(((unsigned __int64)&this->element_type >> 3) + 0x7FFF8000) != 0
          && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->element_type >> 3) + 0x7FFF8000) )
        {
          __asan_report_load4(&this->element_type);
        }
        element_type = this->element_type;
        v45 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator*((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
        if ( GCGUtils::isDamageElementMatch(v45, element_type, (GCGEffectElementType)damage_element_type) )
        {
          *(_DWORD *)(v4 + 32) = 0;
          break;
        }
        std::_Rb_tree_const_iterator<unsigned int>::operator++(&__for_begin);
      }
      common::milog::MiLogStream::create(
        &v72,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1757);
      v46 = common::milog::MiLogStream::operator<<<char [70],(char *[70])0>(
              &v72,
              (const char (*)[70])"ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementType, skill:");
      GCGSkill::getName[abi:cxx11](&val, cur_skill);
      v47 = common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v46, &val);
      v48 = common::milog::MiLogStream::operator<<<char [9],(char *[9])0>(v47, (const char (*)[9])",result:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v48, (const int *)(v4 + 32));
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v72);
      v49 = GCGEffectContext::getLogContext(context);
      v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v49->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v51 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v51 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v51)(&v72, this);
      v52 = 0;
      if ( (unsigned __int8)std::string::empty(&v72) )
      {
        std::allocator<char>::allocator(&__a);
        v52 = 1;
        v53 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v54 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v54 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v55 = (const char *)(*v54)(v53);
        std::string::basic_string<std::allocator<char>>(&val, v55, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v56 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v56 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v56)(&val, this);
      }
      v57 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, &val);
      v58 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v57, ":");
      v59 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v58, *(_DWORD *)(v4 + 32));
      v60 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v59, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v60, 1758);
      v20 = *(_DWORD *)(v4 + 32);
      std::string::~string(&val);
      if ( v52 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v72,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1742);
      v22 = common::milog::MiLogStream::operator<<<char [100],(char *[100])0>(
              &v72,
              (const char (*)[100])"ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementType cur_context not character card, card:");
      v23 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      *(_DWORD *)(v4 + 32) = GCGCard::getId(v23);
      v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, (const unsigned int *)(v4 + 32));
      v25 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v24, (const char (*)[8])",param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v25, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v72);
      v26 = GCGEffectContext::getLogContext(context);
      v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v26->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v28 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v28)(&v72, this);
      v29 = 0;
      if ( (unsigned __int8)std::string::empty(&v72) )
      {
        std::allocator<char>::allocator(&__a);
        v29 = 1;
        v30 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v31 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v32 = (const char *)(*v31)(v30);
        std::string::basic_string<std::allocator<char>>(&val, v32, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v33 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterBeingHurtDamageElementTypeImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v33)(&val, this);
      }
      v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, &val);
      v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
      v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, -1);
      v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, 1743);
      v20 = -1;
      std::string::~string(&val);
      if ( v29 )
        std::allocator<char>::~allocator(&__a);
    }
  }
  std::string::~string(&v72);
  result = v20;
  if ( v74 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};

// Line 1763: range 000000000E16014E-000000000E160384
int32_t __cdecl ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl::checkCondition(
        ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context)
{
  const std::type_info *v3; // rax
  const std::shared_ptr<GCGCard> *v4; // rax
  int32_t v5; // ebx
  const std::type_info *v6; // rax
  const std::shared_ptr<const GCGCard> *v7; // rcx
  common::milog::MiLogStream *v8; // rbx
  const std::type_info *v9; // rax
  common::milog::MiLogStream *v10; // rax
  common::milog::MiLogStream *v11; // rbx
  common::milog::MiLogStream *v12; // rax
  common::milog::MiLogStream *v13; // rbx
  char *val; // [rsp+28h] [rbp-68h] BYREF
  char *v17; // [rsp+30h] [rbp-60h] BYREF
  char *v18; // [rsp+38h] [rbp-58h] BYREF
  const ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl::checkCondition::SHARED_PTR_CONST_TYPE *sepecified_type_data; // [rsp+48h] [rbp-48h]
  std::shared_ptr<const GCGCard> v20; // [rsp+50h] [rbp-40h] BYREF
  common::milog::MiLogStream v21; // [rsp+60h] [rbp-30h] BYREF

  v3 = std::any::type(&context->cur_context);
  if ( std::type_info::operator==(v3, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard>) )
  {
    v4 = std::any_cast<std::shared_ptr<GCGCard> const&>(&context->cur_context);
    std::shared_ptr<GCGCard const>::shared_ptr<GCGCard,void>(&v20, v4);
    sepecified_type_data = &v20;
    v5 = ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl::checkCondition(this, cur_skill, context, &v20);
    std::shared_ptr<GCGCard const>::~shared_ptr(&v20);
  }
  else
  {
    v6 = std::any::type(&context->cur_context);
    if ( std::type_info::operator==(v6, (const std::type_info *)&`typeinfo for'std::shared_ptr<GCGCard const>) )
    {
      v7 = std::any_cast<std::shared_ptr<GCGCard const> const&>(&context->cur_context);
      return ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl::checkCondition(this, cur_skill, context, v7);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v21,
        &common::milog::MiLogDefault::default_log_obj_,
        4u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1764);
      v8 = common::milog::MiLogStream::operator<<<char [36],(char *[36])0>(
             &v21,
             (const char (*)[36])"context is not valid, context type:");
      v9 = std::any::type(&context->cur_context);
      val = (char *)std::type_info::name(v9);
      v10 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v8, (const char *const *)&val);
      v11 = common::milog::MiLogStream::operator<<<char [13],(char *[13])0>(v10, (const char (*)[13])" need type: ");
      v17 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard>);
      v12 = common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v11, (const char *const *)&v17);
      v13 = common::milog::MiLogStream::operator<<<char [5],(char *[5])0>(v12, (const char (*)[5])off_1BC79980);
      v18 = (char *)std::type_info::name((const std::type_info *const)&`typeinfo for'std::shared_ptr<GCGCard const>);
      common::milog::MiLogStream::operator<<<char const*,(char const**)0>(v13, (const char *const *)&v18);
      common::milog::MiLogStream::~MiLogStream(&v21);
      return -1;
    }
  }
  return v5;
};

// Line 1768: range 000000000E160386-000000000E160F0E
int32_t __cdecl ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl::checkCondition(
        ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const this,
        const GCGSkill *cur_skill,
        const GCGEffectContext *context,
        const std::shared_ptr<const GCGCard> *cur_card_ptr)
{
  unsigned __int64 v4; // rbx
  __int64 v5; // rax
  unsigned __int64 v6; // r13
  common::milog::MiLogStream *v7; // r12
  const LogContext *LogContext; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v9; // r14
  void (__fastcall **v10)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const); // rax
  char v11; // r12
  ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *v12; // rdx
  __int64 (__fastcall **v13)(ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *); // rax
  const char *v14; // rax
  void (__fastcall **v15)(std::string *, ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v16; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v17; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v18; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v19; // rax
  int32_t v20; // r15d
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v21; // rax
  common::milog::MiLogStream *v22; // r14
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v23; // rax
  common::milog::MiLogStream *v24; // rax
  common::milog::MiLogStream *v25; // r12
  const LogContext *v26; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v27; // r14
  void (__fastcall **v28)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const); // rax
  char v29; // r12
  ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *v30; // rdx
  __int64 (__fastcall **v31)(ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *); // rax
  const char *v32; // rax
  void (__fastcall **v33)(std::string *, ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v34; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v35; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v36; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v37; // rax
  std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false>::element_type *v38; // rax
  const GCGCardZone *ModifyZone; // rdi
  common::milog::MiLogStream *v40; // rax
  const LogContext *v41; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v42; // r15
  void (__fastcall **v43)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const); // rax
  char v44; // r14
  ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *v45; // rdx
  __int64 (__fastcall **v46)(ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *); // rax
  const char *v47; // rax
  void (__fastcall **v48)(std::string *, ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const); // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v49; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v50; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v51; // rax
  common::tools::StringStream<common::tools::FixedBuffer<4096> > *v52; // rax
  int32_t result; // eax
  std::allocator<char> __a; // [rsp+3Fh] [rbp-B1h] BYREF
  common::milog::MiLogStream v58; // [rsp+40h] [rbp-B0h] BYREF
  std::string val; // [rsp+60h] [rbp-90h] BYREF
  char v60[112]; // [rsp+80h] [rbp-70h] BYREF

  v4 = (unsigned __int64)v60;
  if ( _asan_option_detect_stack_use_after_return )
  {
    v5 = __asan_stack_malloc_0(64LL);
    if ( v5 )
      v4 = v5;
  }
  *(_QWORD *)v4 = 1102416563LL;
  *(_QWORD *)(v4 + 8) = "1 32 4 11 result:1780";
  *(_QWORD *)(v4 + 16) = ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl::checkCondition;
  v6 = v4 >> 3;
  *(_DWORD *)(v6 + 2147450880) = -235802127;
  *(_DWORD *)(v6 + 2147450884) = -202116348;
  if ( std::operator==<GCGCard const>(0LL, cur_card_ptr) )
  {
    common::milog::MiLogStream::create(
      &v58,
      &common::milog::MiLogDefault::default_log_obj_,
      3u,
      "./src/card_game/skill/gcg_condition.cpp",
      "checkCondition",
      1771);
    v7 = common::milog::MiLogStream::operator<<<char [89],(char *[89])0>(
           &v58,
           (const char (*)[89])"ConfigGCGConditionCheckCurCharacterModifiedAssignTagCard cur_card_ptr is nullptr, skill:");
    GCGSkill::getName[abi:cxx11](&val, cur_skill);
    common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v7, &val);
    std::string::~string(&val);
    common::milog::MiLogStream::~MiLogStream(&v58);
    LogContext = GCGEffectContext::getLogContext(context);
    v9 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&LogContext->data, "|");
    if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
      __asan_report_load8(this);
    v10 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
    if ( *(_BYTE *)(((unsigned __int64)v10 >> 3) + 0x7FFF8000) )
      __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
    (*v10)(&v58, this);
    v11 = 0;
    if ( (unsigned __int8)std::string::empty(&v58) )
    {
      std::allocator<char>::allocator(&__a);
      v11 = 1;
      v12 = this;
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v13 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *))(this->_vptr_ConfigGCGCondition + 4);
      if ( *(_BYTE *)(((unsigned __int64)v13 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
      v14 = (const char *)(*v13)(v12);
      std::string::basic_string<std::allocator<char>>(&val, v14, &__a);
    }
    else
    {
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v15 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v15 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v15)(&val, this);
    }
    v16 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v9, &val);
    v17 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v16, ":");
    v18 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v17, -1);
    v19 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v18, ":");
    common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v19, 1772);
    v20 = -1;
    std::string::~string(&val);
    if ( v11 )
      std::allocator<char>::~allocator(&__a);
  }
  else
  {
    v21 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
    if ( GCGCard::getCardType(v21) == GCG_CARD_CHARACTER )
    {
      *(_DWORD *)(v4 + 32) = -1;
      v38 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      ModifyZone = GCGCard::getModifyZone(v38);
      if ( *(_BYTE *)(((unsigned __int64)&this->tag_type >> 3) + 0x7FFF8000) != 0
        && (char)((((_BYTE)this + 28) & 7) + 3) >= *(_BYTE *)(((unsigned __int64)&this->tag_type >> 3) + 0x7FFF8000) )
      {
        ModifyZone = (const GCGCardZone *)&this->tag_type;
        __asan_report_load4(&this->tag_type);
      }
      if ( GCGCardZone::isHasCardByTag(ModifyZone, this->tag_type) )
        *(_DWORD *)(v4 + 32) = 0;
      common::milog::MiLogStream::create(
        (common::milog::MiLogStream *)&val,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1785);
      v40 = common::milog::MiLogStream::operator<<<char [66],(char *[66])0>(
              (common::milog::MiLogStream *const)&val,
              (const char (*)[66])"ConfigGCGConditionCheckCurCharacterModifiedAssignTagCard, result:");
      common::milog::MiLogStream::operator<<<int,(int *)0>(v40, (const int *)(v4 + 32));
      common::milog::MiLogStream::~MiLogStream((common::milog::MiLogStream *const)&val);
      v41 = GCGEffectContext::getLogContext(context);
      v42 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v41->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v43 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v43 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v43)(&v58, this);
      v44 = 0;
      if ( (unsigned __int8)std::string::empty(&v58) )
      {
        std::allocator<char>::allocator(&__a);
        v44 = 1;
        v45 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v46 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v46 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v47 = (const char *)(*v46)(v45);
        std::string::basic_string<std::allocator<char>>(&val, v47, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v48 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v48 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v48)(&val, this);
      }
      v49 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v42, &val);
      v50 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v49, ":");
      v51 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v50, *(_DWORD *)(v4 + 32));
      v52 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v51, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v52, 1786);
      v20 = *(_DWORD *)(v4 + 32);
      std::string::~string(&val);
      if ( v44 )
        std::allocator<char>::~allocator(&__a);
    }
    else
    {
      common::milog::MiLogStream::create(
        &v58,
        &common::milog::MiLogDefault::default_log_obj_,
        1u,
        "./src/card_game/skill/gcg_condition.cpp",
        "checkCondition",
        1777);
      v22 = common::milog::MiLogStream::operator<<<char [95],(char *[95])0>(
              &v58,
              (const char (*)[95])"ConfigGCGConditionCheckCurCharacterModifiedAssignTagCard cur_context not character card, card:");
      v23 = std::__shared_ptr_access<GCGCard const,(__gnu_cxx::_Lock_policy)2,false,false>::operator->((const std::__shared_ptr_access<const GCGCard,(__gnu_cxx::_Lock_policy)2,false,false> *const)cur_card_ptr);
      *(_DWORD *)(v4 + 32) = GCGCard::getId(v23);
      v24 = common::milog::MiLogStream::operator<<<unsigned int,(unsigned int *)0>(v22, (const unsigned int *)(v4 + 32));
      v25 = common::milog::MiLogStream::operator<<<char [8],(char *[8])0>(v24, (const char (*)[8])",param:");
      if ( *(_BYTE *)(((unsigned __int64)context >> 3) + 0x7FFF8000) )
        __asan_report_load8(context);
      GCGSkillUseParam::getDesc[abi:cxx11](&val, context->skill_param);
      common::milog::MiLogStream::operator<<<std::string,(std::string*)0>(v25, &val);
      std::string::~string(&val);
      common::milog::MiLogStream::~MiLogStream(&v58);
      v26 = GCGEffectContext::getLogContext(context);
      v27 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(&v26->data, "|");
      if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
        __asan_report_load8(this);
      v28 = (void (__fastcall **)(common::milog::MiLogStream *, ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
      if ( *(_BYTE *)(((unsigned __int64)v28 >> 3) + 0x7FFF8000) )
        __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
      (*v28)(&v58, this);
      v29 = 0;
      if ( (unsigned __int8)std::string::empty(&v58) )
      {
        std::allocator<char>::allocator(&__a);
        v29 = 1;
        v30 = this;
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v31 = (__int64 (__fastcall **)(ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *))(this->_vptr_ConfigGCGCondition + 4);
        if ( *(_BYTE *)(((unsigned __int64)v31 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 4);
        v32 = (const char *)(*v31)(v30);
        std::string::basic_string<std::allocator<char>>(&val, v32, &__a);
      }
      else
      {
        if ( *(_BYTE *)(((unsigned __int64)this >> 3) + 0x7FFF8000) )
          __asan_report_load8(this);
        v33 = (void (__fastcall **)(std::string *, ConfigGCGConditionCheckCurCharacterModifiedAssignTagCardImpl *const))(this->_vptr_ConfigGCGCondition + 8);
        if ( *(_BYTE *)(((unsigned __int64)v33 >> 3) + 0x7FFF8000) )
          __asan_report_load8(this->_vptr_ConfigGCGCondition + 8);
        (*v33)(&val, this);
      }
      v34 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v27, &val);
      v35 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v34, ":");
      v36 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v35, -1);
      v37 = common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v36, ":");
      common::tools::StringStream<common::tools::FixedBuffer<4096>>::operator<<(v37, 1778);
      v20 = -1;
      std::string::~string(&val);
      if ( v29 )
        std::allocator<char>::~allocator(&__a);
    }
  }
  std::string::~string(&v58);
  result = v20;
  if ( v60 == (char *)v4 )
  {
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0LL;
  }
  else
  {
    *(_QWORD *)v4 = 1172321806LL;
    *(_QWORD *)((v4 >> 3) + 0x7FFF8000) = 0xF5F5F5F5F5F5F5F5LL;
  }
  return result;
};
