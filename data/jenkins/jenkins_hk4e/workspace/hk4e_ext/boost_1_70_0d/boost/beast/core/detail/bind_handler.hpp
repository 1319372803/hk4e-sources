// File: /data/jenkins/jenkins_hk4e/workspace/hk4e_ext/boost_1_70_0d/boost/beast/core/detail/bind_handler.hpp

// Line 206: range 000000000C7A9966-000000000C7A9980
void __cdecl boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>::~bind_front_wrapper(
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *const this)
{
  boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>::~write_some_op(&this->h_);
};

// Line 206: range 000000000C7A8722-000000000C7A873C
void __cdecl boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>::~bind_front_wrapper(
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *const this)
{
  boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>::~write_some_op(&this->h_);
};

// Line 219: range 000000000C7F5660-000000000C7F572C
// local variable allocation has failed, the output may be wrong!
void __fastcall boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>::invoke<0ul,1ul>(
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *const this,
        std::false_type a2,
        boost::mp11::index_sequence a3)
{
  std::remove_reference<boost::beast::detail::tuple<boost::system::error_code,int>&>::type *v3; // rax
  int *v4; // rdx
  std::size_t v5; // r12
  std::remove_reference<boost::beast::detail::tuple<boost::system::error_code,int>&>::type *v6; // rax
  unsigned __int64 v7; // rax
  __int64 v8; // rsi OVERLAPPED
  __int64 v9; // rdx

  v3 = std::move<boost::beast::detail::tuple<boost::system::error_code,int> &>(&this->args_);
  v4 = boost::beast::detail::get<1ul,int>(&v3->boost::beast::detail::tuple_element_impl<1,int>);
  if ( *(_BYTE *)(((unsigned __int64)v4 >> 3) + 0x7FFF8000) != 0
    && (char)(((unsigned __int8)v4 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v4 >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4();
  }
  v5 = *v4;
  v6 = std::move<boost::beast::detail::tuple<boost::system::error_code,int> &>(&this->args_);
  v7 = (unsigned __int64)boost::beast::detail::get<0ul,boost::system::error_code>(v6);
  if ( *(_WORD *)((v7 >> 3) + 0x7FFF8000) )
    v7 = __asan_report_load16();
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)(v7 + 8);
  boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>::operator()(
    &this->h_,
    *(boost::beast::error_code *)&v8,
    v5);
};

// Line 219: range 000000000C7F5054-000000000C7F5120
// local variable allocation has failed, the output may be wrong!
void __fastcall boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>::invoke<0ul,1ul>(
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *const this,
        std::false_type a2,
        boost::mp11::index_sequence a3)
{
  std::remove_reference<boost::beast::detail::tuple<boost::system::error_code,int>&>::type *v3; // rax
  int *v4; // rdx
  std::size_t v5; // r12
  std::remove_reference<boost::beast::detail::tuple<boost::system::error_code,int>&>::type *v6; // rax
  unsigned __int64 v7; // rax
  __int64 v8; // rsi OVERLAPPED
  __int64 v9; // rdx

  v3 = std::move<boost::beast::detail::tuple<boost::system::error_code,int> &>(&this->args_);
  v4 = boost::beast::detail::get<1ul,int>(&v3->boost::beast::detail::tuple_element_impl<1,int>);
  if ( *(_BYTE *)(((unsigned __int64)v4 >> 3) + 0x7FFF8000) != 0
    && (char)(((unsigned __int8)v4 & 7) + 3) >= *(_BYTE *)(((unsigned __int64)v4 >> 3) + 0x7FFF8000) )
  {
    __asan_report_load4();
  }
  v5 = *v4;
  v6 = std::move<boost::beast::detail::tuple<boost::system::error_code,int> &>(&this->args_);
  v7 = (unsigned __int64)boost::beast::detail::get<0ul,boost::system::error_code>(v6);
  if ( *(_WORD *)((v7 >> 3) + 0x7FFF8000) )
    v7 = __asan_report_load16();
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)(v7 + 8);
  boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>::operator()(
    &this->h_,
    *(boost::beast::error_code *)&v8,
    v5);
};

// Line 243: range 000000000C7BAF8A-000000000C7BB0B5
void __cdecl boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>::bind_front_wrapper(
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *const this,
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *a2)
{
  const boost::system::error_category *cat; // rdx

  boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>::write_some_op(
    &this->h_,
    &a2->h_);
  if ( *(char *)(((unsigned __int64)&this->args_ >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)((((unsigned __int64)&this->args_.boost::beast::detail::tuple_element_impl<1,int> + 7) >> 3)
                + 0x7FFF8000) != 0
    && (((unsigned __int8)this - 25) & 7) >= *(_BYTE *)((((unsigned __int64)&this->args_.boost::beast::detail::tuple_element_impl<1,int>
                                                        + 7) >> 3)
                                                      + 0x7FFF8000) )
  {
    __asan_report_store_n(
      &this->args_,
      24LL,
      (*(char *)(((unsigned __int64)&this->args_ >> 3) + 0x7FFF8000) < 0) | (unsigned int)(*(_BYTE *)((((unsigned __int64)&this->args_.boost::beast::detail::tuple_element_impl<1,int> + 7) >> 3) + 0x7FFF8000) != 0
                                                                                        && (((unsigned __int8)this - 25) & 7) >= *(_BYTE *)((((unsigned __int64)&this->args_.boost::beast::detail::tuple_element_impl<1,int> + 7) >> 3) + 0x7FFF8000)),
      ((_DWORD)this + 231) & 7);
  }
  if ( *(char *)(((unsigned __int64)&a2->args_ >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)((((unsigned __int64)&a2->args_.boost::beast::detail::tuple_element_impl<1,int> + 7) >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)a2 - 25) & 7) >= *(_BYTE *)((((unsigned __int64)&a2->args_.boost::beast::detail::tuple_element_impl<1,int>
                                                      + 7) >> 3)
                                                    + 0x7FFF8000) )
  {
    __asan_report_load_n(&a2->args_, 24LL);
  }
  cat = a2->args_.t.cat_;
  *(_QWORD *)&this->args_.t.val_ = *(_QWORD *)&a2->args_.t.val_;
  this->args_.t.cat_ = cat;
  *(_QWORD *)&this->args_.t = *(_QWORD *)&a2->args_.t;
};

// Line 243: range 000000000C7BA1AA-000000000C7BA2D5
void __cdecl boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>::bind_front_wrapper(
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *const this,
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *a2)
{
  const boost::system::error_category *cat; // rdx

  boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>::write_some_op(
    &this->h_,
    &a2->h_);
  if ( *(char *)(((unsigned __int64)&this->args_ >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)((((unsigned __int64)&this->args_.boost::beast::detail::tuple_element_impl<1,int> + 7) >> 3)
                + 0x7FFF8000) != 0
    && (((unsigned __int8)this - 25) & 7) >= *(_BYTE *)((((unsigned __int64)&this->args_.boost::beast::detail::tuple_element_impl<1,int>
                                                        + 7) >> 3)
                                                      + 0x7FFF8000) )
  {
    __asan_report_store_n(
      &this->args_,
      24LL,
      (*(char *)(((unsigned __int64)&this->args_ >> 3) + 0x7FFF8000) < 0) | (unsigned int)(*(_BYTE *)((((unsigned __int64)&this->args_.boost::beast::detail::tuple_element_impl<1,int> + 7) >> 3) + 0x7FFF8000) != 0
                                                                                        && (((unsigned __int8)this - 25) & 7) >= *(_BYTE *)((((unsigned __int64)&this->args_.boost::beast::detail::tuple_element_impl<1,int> + 7) >> 3) + 0x7FFF8000)),
      ((_DWORD)this + 231) & 7);
  }
  if ( *(char *)(((unsigned __int64)&a2->args_ >> 3) + 0x7FFF8000) < 0
    || *(_BYTE *)((((unsigned __int64)&a2->args_.boost::beast::detail::tuple_element_impl<1,int> + 7) >> 3) + 0x7FFF8000) != 0
    && (((unsigned __int8)a2 - 25) & 7) >= *(_BYTE *)((((unsigned __int64)&a2->args_.boost::beast::detail::tuple_element_impl<1,int>
                                                      + 7) >> 3)
                                                    + 0x7FFF8000) )
  {
    __asan_report_load_n(&a2->args_, 24LL);
  }
  cat = a2->args_.t.cat_;
  *(_QWORD *)&this->args_.t.val_ = *(_QWORD *)&a2->args_.t.val_;
  this->args_.t.cat_ = cat;
  *(_QWORD *)&this->args_.t = *(_QWORD *)&a2->args_.t;
};

// Line 247: range 000000000C7AFD46-000000000C7AFDD6
void __fastcall boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code&,int>(
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *const this,
        boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > > *handler,
        boost::system::error_code *a3,
        boost::system::error_code *a4,
        int *a5,
        int *a6)
{
  boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > > *v6; // rax
  boost::system::error_code *v7; // r12
  boost::system::error_code *v8; // rax
  int *v9; // rcx
  int *v10; // r8

  v6 = std::forward<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>>(handler);
  boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>::write_some_op(
    &this->h_,
    v6);
  v7 = (boost::system::error_code *)std::forward<int>(&a4->val_);
  v8 = std::forward<boost::system::error_code &>(a3);
  boost::beast::detail::tuple<boost::system::error_code,int>::tuple<boost::system::error_code&,int>(
    &this->args_,
    v8,
    v7,
    v9,
    v10);
};

// Line 247: range 000000000C7AED06-000000000C7AED96
void __fastcall boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code&,int>(
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *const this,
        boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > > *handler,
        boost::system::error_code *a3,
        boost::system::error_code *a4,
        int *a5,
        int *a6)
{
  boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > > *v6; // rax
  boost::system::error_code *v7; // r12
  boost::system::error_code *v8; // rax
  int *v9; // rcx
  int *v10; // r8

  v6 = std::forward<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>>(handler);
  boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>::write_some_op(
    &this->h_,
    v6);
  v7 = (boost::system::error_code *)std::forward<int>(&a4->val_);
  v8 = std::forward<boost::system::error_code &>(a3);
  boost::beast::detail::tuple<boost::system::error_code,int>::tuple<boost::system::error_code&,int>(
    &this->args_,
    v8,
    v7,
    v9,
    v10);
};

// Line 256: range 000000000C7F4AFA-000000000C7F4B14
void __cdecl boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>::operator()<>(
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *const this)
{
  boost::mp11::index_sequence v1; // dl
  std::false_type v2; // si

  boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>::invoke<0ul,1ul>(
    this,
    v2,
    v1);
};

// Line 256: range 000000000C7F4882-000000000C7F489C
void __cdecl boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>::operator()<>(
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *const this)
{
  boost::mp11::index_sequence v1; // dl
  std::false_type v2; // si

  boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>::invoke<0ul,1ul>(
    this,
    v2,
    v1);
};

// Line 268: range 000000000C7F3121-000000000C7F3151
void __cdecl boost::beast::detail::asio_handler_invoke<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int> &>(
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *f,
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *op)
{
  boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > > *v2; // rdx

  v2 = std::addressof<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>>(&op->h_);
  boost::beast::asio_handler_invoke<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::executor,std::allocator<void>,boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int> &>(
    f,
    v2);
};

// Line 268: range 000000000C7F2691-000000000C7F26C1
void __cdecl boost::beast::detail::asio_handler_invoke<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int> &>(
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *f,
        boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *op)
{
  boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > > *v2; // rdx

  v2 = std::addressof<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>>(&op->h_);
  boost::beast::asio_handler_invoke<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::executor,std::allocator<void>,boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int> &>(
    f,
    v2);
};

// Line 338: range 000000000C7C510F-000000000C7C5160
boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int>,boost::asio::system_executor>::type __cdecl boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>,boost::asio::system_executor>::get(
        const boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *op,
        const boost::asio::system_executor *ex)
{
  const boost::asio::system_executor *v2; // rcx

  v2 = ex;
  if ( *(_BYTE *)(((unsigned __int64)op >> 3) + 0x7FFF8000) )
    __asan_report_store8();
  boost::asio::associated_executor<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::system_executor>::get(
    &op->h_,
    v2);
  return (boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int>,boost::asio::system_executor>::type)op;
};

// Line 338: range 000000000C7C43C9-000000000C7C441A
boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int>,boost::asio::system_executor>::type __cdecl boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>,boost::asio::system_executor>::get(
        const boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *op,
        const boost::asio::system_executor *ex)
{
  const boost::asio::system_executor *v2; // rcx

  v2 = ex;
  if ( *(_BYTE *)(((unsigned __int64)op >> 3) + 0x7FFF8000) )
    __asan_report_store8();
  boost::asio::associated_executor<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::system_executor>::get(
    &op->h_,
    v2);
  return (boost::asio::associated_executor<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int>,boost::asio::system_executor>::type)op;
};

// Line 374: range 000000000C7C0371-000000000C7C039D
boost::asio::associated_allocator<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int>,std::allocator<void> >::type __cdecl boost::asio::associated_allocator<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>,std::allocator<void>>::get(
        const boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *op,
        const std::allocator<void> *alloc)
{
  boost::asio::associated_allocator<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int>,std::allocator<void> >::type v2; // bl

  boost::asio::associated_allocator<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,false,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,std::allocator<void>>::get(
    &op->h_,
    alloc);
  return v2;
};

// Line 374: range 000000000C7BED9C-000000000C7BEDC8
boost::asio::associated_allocator<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int>,std::allocator<void> >::type __cdecl boost::asio::associated_allocator<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::system::error_code,int>,std::allocator<void>>::get(
        const boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int> *op,
        const std::allocator<void> *alloc)
{
  boost::asio::associated_allocator<boost::beast::detail::bind_front_wrapper<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(),boost::asio::executor>,long unsigned int>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char> >,boost::beast::http::basic_fields<std::allocator<char> > >,boost::system::error_code,int>,std::allocator<void> >::type v2; // bl

  boost::asio::associated_allocator<boost::beast::http::detail::write_some_op<boost::beast::http::detail::write_op<boost::beast::http::detail::write_msg_op<boost::asio::detail::coro_handler<boost::asio::executor_binder<void (*)(void),boost::asio::executor>,unsigned long>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,boost::beast::http::detail::serializer_is_done,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,boost::asio::basic_stream_socket<boost::asio::ip::tcp,boost::asio::executor>,true,boost::beast::http::basic_string_body<char,std::char_traits<char>,std::allocator<char>>,boost::beast::http::basic_fields<std::allocator<char>>>,std::allocator<void>>::get(
    &op->h_,
    alloc);
  return v2;
};
